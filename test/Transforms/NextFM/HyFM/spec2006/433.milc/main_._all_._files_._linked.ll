; RUN: %opt --passes="mergefunc,multiple-func-merging" -func-merging-explore=1 --multiple-func-merging-whole-program=true --multiple-func-merging-coalescing=false --multiple-func-merging-hyfm-nw -multiple-func-merging-hyfm-profitability=true -o %t.mfm2-hyfm.bc %s
; RUN: %opt --passes="mergefunc,multiple-func-merging" -func-merging-explore=2 --multiple-func-merging-whole-program=true --multiple-func-merging-coalescing=false --multiple-func-merging-hyfm-nw -multiple-func-merging-hyfm-profitability=true -o %t.mfm3-hyfm.bc %s
; RUN: %llc --filetype=obj %t.mfm2-hyfm.bc -o %t.mfm2-hyfm.o
; RUN: %llc --filetype=obj %t.mfm3-hyfm.bc -o %t.mfm3-hyfm.o
; RUN: test $(stat -c%%s %t.mfm3-hyfm.o) -gt $(stat -c%%s %t.mfm2-hyfm.o)

; ModuleID = '../llvm-nextfm-benchmark/benchmarks/spec2006/433.milc/_main_._all_._files_._linked_.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.params = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, double, double, i32, double, double, double, i32, i32, i32, i32, i32, [256 x i8], [256 x i8] }
%struct.gauge_file = type { %struct._IO_FILE*, %struct.gauge_header*, i8*, i32, i32*, i32, %struct.gauge_check }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.gauge_header = type { i32, [64 x i8], [4 x i32], i32, i32 }
%struct.gauge_check = type { i32, i32 }
%struct.su3_vector = type { [3 x %struct.complex] }
%struct.complex = type { double, double }
%struct.su3_matrix = type { [3 x [3 x %struct.complex]] }
%struct.anon = type { [7 x i32], i32, double, double }
%struct.double_prn = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, double }
%struct.site = type { i16, i16, i16, i16, i8, i32, %struct.double_prn, i32, [4 x %struct.su3_matrix], [4 x %struct.su3_matrix], [4 x %struct.su3_matrix], [4 x %struct.anti_hermitmat], [4 x double], %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, [4 x %struct.su3_vector], [4 x %struct.su3_vector], %struct.su3_vector, %struct.su3_matrix, %struct.su3_matrix }
%struct.anti_hermitmat = type { %struct.complex, %struct.complex, %struct.complex, double, double, double, double }
%struct.msg_tag = type { i32, i32, i8*, i32 }
%struct.su2_matrix = type { [2 x [2 x %struct.complex]] }
%struct.wilson_vector = type { [4 x %struct.su3_vector] }
%struct.half_wilson_vector = type { [2 x %struct.su3_vector] }
%struct.QCDheader = type { i32, i8**, i8** }
%struct.anon.234 = type { i32, [200 x i8], i32, [2 x double] }
%struct.anon.0 = type { i16, i16, i16, i16, [4 x %struct.su3_matrix] }

@.str.1 = private unnamed_addr constant [41 x i8] c"%d %d  ( %.4e , %.4e )  ( %.4e , %.4e )\0A\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"Inversion checked, frac. error = %e\0A\00", align 1
@str = private unnamed_addr constant [6 x i8] c"BOTCH\00", align 1
@.str = private unnamed_addr constant [19 x i8] c"action.description\00", align 1
@.str.1.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.2.2 = private unnamed_addr constant [32 x i8] c"\22Gauge plus fermion (improved)\22\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"gauge.description\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"gauge.nloops\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"gauge.nreps\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"gauge.beta11\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"gauge.tadpole.u0\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"quark.description\00", align 1
@quark_action_description = internal global [72 x i8] c"\22O(a^2): couplings(pi)=0, Naik term, No O(a^2) errors, tadpole weights\22\00", align 16
@.str.11 = private unnamed_addr constant [14 x i8] c"quark.flavors\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"quark.mass\00", align 1
@gauge_action_nloops = global i32 3, align 4
@gauge_action_nreps = global i32 1, align 4
@make_loop_table.loop_ind = internal unnamed_addr constant [3 x [6 x i32]] [[6 x i32] [i32 0, i32 1, i32 7, i32 6, i32 -1, i32 -1], [6 x i32] [i32 0, i32 0, i32 1, i32 7, i32 7, i32 6], [6 x i32] [i32 0, i32 1, i32 2, i32 7, i32 6, i32 5]], align 16
@make_loop_table.loop_length_in = internal unnamed_addr constant [3 x i32] [i32 4, i32 6, i32 6], align 4
@loop_num = local_unnamed_addr global [3 x i32] zeroinitializer, align 4
@loop_length = local_unnamed_addr global [3 x i32] zeroinitializer, align 4
@loop_coeff = local_unnamed_addr global [3 x [1 x double]] zeroinitializer, align 16
@gauge_action_description = global [128 x i8] zeroinitializer, align 16
@.str.13 = private unnamed_addr constant [36 x i8] c"\22Symanzik 1x1 + 1x2 + 1x1x1 action\22\00", align 1
@loop_char = local_unnamed_addr global [16 x i32] zeroinitializer, align 16
@loop_table = global [3 x [16 x [6 x i32]]] zeroinitializer, align 16
@.str.4.17 = private unnamed_addr constant [42 x i8] c"                    %d %d      %e     %d\0A\00", align 1
@.str.5.18 = private unnamed_addr constant [13 x i8] c"PLAQ:\09%f\09%f\0A\00", align 1
@.str.6.19 = private unnamed_addr constant [15 x i8] c"P_LOOP:\09%e\09%e\0A\00", align 1
@.str.7.20 = private unnamed_addr constant [23 x i8] c"G_LOOP:  %d  %d  %d   \00", align 1
@.str.8.21 = private unnamed_addr constant [4 x i8] c"\09%e\00", align 1
@.str.9.22 = private unnamed_addr constant [4 x i8] c"\09( \00", align 1
@.str.10.23 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.12.25 = private unnamed_addr constant [13 x i8] c"GACTION: %e\0A\00", align 1
@.str.13.26 = private unnamed_addr constant [13 x i8] c",  L = %d )\0A\00", align 1
@loop_ind = local_unnamed_addr global [3 x [6 x i32]] zeroinitializer, align 16
@loop_expect = local_unnamed_addr global [3 x [1 x [16 x double]]] zeroinitializer, align 16
@str.16 = private unnamed_addr constant [54 x i8] c"loop coefficients: nloop rep loop_coeff  multiplicity\00", align 1
@str.14 = private unnamed_addr constant [24 x i8] c"OOPS: MAX_NUM too small\00", align 1
@str.15 = private unnamed_addr constant [34 x i8] c"Symanzik 1x1 + 1x2 + 1x1x1 action\00", align 1
@str.16.24 = private unnamed_addr constant [3 x i8] c" )\00", align 1
@.str.7.28 = private unnamed_addr constant [29 x i8] c"Machine = %s, with %d nodes\0A\00", align 1
@.str.9.29 = private unnamed_addr constant [9 x i8] c"nflavors\00", align 1
@par_buf = global %struct.params zeroinitializer, align 8
@.str.10.30 = private unnamed_addr constant [3 x i8] c"nx\00", align 1
@.str.11.31 = private unnamed_addr constant [3 x i8] c"ny\00", align 1
@.str.12.32 = private unnamed_addr constant [3 x i8] c"nz\00", align 1
@.str.13.33 = private unnamed_addr constant [3 x i8] c"nt\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"iseed\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"warms\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"trajecs\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"traj_between_meas\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"beta\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"mass\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"u0\00", align 1
@.str.22 = private unnamed_addr constant [25 x i8] c"microcanonical_time_step\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"steps_per_trajectory\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"max_cg_iterations\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"error_per_site\00", align 1
@.str.26 = private unnamed_addr constant [21 x i8] c"error_for_propagator\00", align 1
@gf = local_unnamed_addr global %struct.gauge_file* null, align 8
@str.27 = private unnamed_addr constant [15 x i8] c"Finished setup\00", align 1
@str.28 = private unnamed_addr constant [17 x i8] c"Made 3nn gathers\00", align 1
@str.29 = private unnamed_addr constant [16 x i8] c"Made nn gathers\00", align 1
@str.30 = private unnamed_addr constant [13 x i8] c"Made lattice\00", align 1
@str.31 = private unnamed_addr constant [28 x i8] c"SU3 with improved KS action\00", align 1
@str.32 = private unnamed_addr constant [42 x i8] c"Microcanonical simulation with refreshing\00", align 1
@str.33 = private unnamed_addr constant [15 x i8] c"MIMD version 6\00", align 1
@str.34 = private unnamed_addr constant [12 x i8] c"R algorithm\00", align 1
@str.35 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@str.36 = private unnamed_addr constant [28 x i8] c"third_neighb: bad direction\00", align 1
@neighbor = local_unnamed_addr global i32** null, align 8
@n_gathers = local_unnamed_addr global i32 0, align 4
@.str.2.43 = private unnamed_addr constant [38 x i8] c"NODE %d: no room for neighbor vector\0A\00", align 1
@.str.4.47 = private unnamed_addr constant [38 x i8] c"It mapped %d %d %d %d to %d %d %d %d\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [47 x i8] c"It's square mapped %d %d %d %d to %d %d %d %d\0A\00", align 1
@g_gather_flag = local_unnamed_addr global i32 0, align 4
@.str.8.65 = private unnamed_addr constant [48 x i8] c"ERROR: node %d, two general_gathers() at once!\0A\00", align 1
@name = internal global [17 x i8] c"Scalar processor\00", align 16
@.str.10.52 = private unnamed_addr constant [8 x i8] c"%s: %s\0A\00", align 1
@.str.11.50 = private unnamed_addr constant [12 x i8] c"termination\00", align 1
@.str.12.51 = private unnamed_addr constant [26 x i8] c"Termination: status = %d\0A\00", align 1
@str.48 = private unnamed_addr constant [50 x i8] c"DUMMY! Your gather mapping is not its own inverse\00", align 1
@str.13 = private unnamed_addr constant [56 x i8] c"DUMMY! Your gather mapping does not obey claimed parity\00", align 1
@str.14.46 = private unnamed_addr constant [52 x i8] c"DUMMY! Your gather mapping does not stay in lattice\00", align 1
@str.15.42 = private unnamed_addr constant [37 x i8] c"Too many gathers! change MAX_GATHERS\00", align 1
@str.17 = private unnamed_addr constant [21 x i8] c"BOTCH: bad direction\00", align 1
@str.21 = private unnamed_addr constant [26 x i8] c"BOTCH: this never happens\00", align 1
@temp_not_allocated = internal unnamed_addr global i1 false, align 4
@temp = internal unnamed_addr global [9 x %struct.su3_vector*] zeroinitializer, align 16
@diffmat_offset = local_unnamed_addr global i32 0, align 4
@diffmatp = local_unnamed_addr global %struct.su3_matrix* null, align 8
@sumvec_offset = local_unnamed_addr global i32 0, align 4
@sumvecp = local_unnamed_addr global %struct.su3_vector* null, align 8
@.str.2.93 = private unnamed_addr constant [55 x i8] c"GFIX: Ended at step %d. Av gf action %.8e, delta %.3e\0A\00", align 1
@str.92 = private unnamed_addr constant [30 x i8] c"gaugefix: Can't malloc sumvec\00", align 1
@str.3 = private unnamed_addr constant [31 x i8] c"gaugefix: Can't malloc diffmat\00", align 1
@.str.1.95 = private unnamed_addr constant [19 x i8] c"Time to save = %e\0A\00", align 1
@.str.2.96 = private unnamed_addr constant [19 x i8] c"CHECK PLAQ: %e %e\0A\00", align 1
@.str.3.99 = private unnamed_addr constant [34 x i8] c"reload_lattice: Bad startflag %d\0A\00", align 1
@.str.4.100 = private unnamed_addr constant [41 x i8] c"Time to reload gauge configuration = %e\0A\00", align 1
@.str.5.101 = private unnamed_addr constant [40 x i8] c"Unitarity checked.  Max deviation %.2e\0A\00", align 1
@.str.7.104 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.9.105 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.10.106 = private unnamed_addr constant [6 x i8] c"fresh\00", align 1
@.str.12.107 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.13.108 = private unnamed_addr constant [13 x i8] c"reload_ascii\00", align 1
@.str.14.109 = private unnamed_addr constant [14 x i8] c"reload_serial\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"reload_parallel\00", align 1
@.str.16.110 = private unnamed_addr constant [69 x i8] c"ask_starting_lattice: ERROR IN INPUT: lattice_command %s is invalid\0A\00", align 1
@.str.22.113 = private unnamed_addr constant [11 x i8] c"save_ascii\00", align 1
@.str.23.114 = private unnamed_addr constant [12 x i8] c"save_serial\00", align 1
@.str.24.115 = private unnamed_addr constant [14 x i8] c"save_parallel\00", align 1
@.str.25.116 = private unnamed_addr constant [16 x i8] c"save_checkpoint\00", align 1
@.str.26.117 = private unnamed_addr constant [20 x i8] c"save_serial_archive\00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"save_parallel_archive\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"forget\00", align 1
@.str.29 = private unnamed_addr constant [70 x i8] c"ask_ending_lattice: ERROR IN INPUT: %s is not a save lattice command\0A\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"enter %s \00", align 1
@.str.34 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"%s %g\0A\00", align 1
@.str.37 = private unnamed_addr constant [41 x i8] c"get_f: EOF on STDIN while expecting %s.\0A\00", align 1
@.str.38 = private unnamed_addr constant [36 x i8] c"get_f: Format error looking for %s\0A\00", align 1
@.str.39 = private unnamed_addr constant [49 x i8] c"get_f: ERROR IN INPUT: expected %s but found %s\0A\00", align 1
@.str.40 = private unnamed_addr constant [47 x i8] c"\0Aget_f: Expecting value for %s but found EOF.\0A\00", align 1
@.str.41 = private unnamed_addr constant [43 x i8] c"\0Aget_f: Format error reading value for %s\0A\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"%s %d\0A\00", align 1
@.str.45 = private unnamed_addr constant [41 x i8] c"get_i: EOF on STDIN while expecting %s.\0A\00", align 1
@.str.46 = private unnamed_addr constant [36 x i8] c"get_i: Format error looking for %s\0A\00", align 1
@.str.47 = private unnamed_addr constant [49 x i8] c"get_i: ERROR IN INPUT: expected %s but found %s\0A\00", align 1
@.str.48 = private unnamed_addr constant [47 x i8] c"\0Aget_i: Expecting value for %s but found EOF.\0A\00", align 1
@.str.49 = private unnamed_addr constant [43 x i8] c"\0Aget_i: Format error reading value for %s\0A\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.52 = private unnamed_addr constant [41 x i8] c"get_s: EOF on STDIN while expecting %s.\0A\00", align 1
@.str.53 = private unnamed_addr constant [36 x i8] c"get_s: Format error looking for %s\0A\00", align 1
@.str.54 = private unnamed_addr constant [49 x i8] c"get_s: ERROR IN INPUT: expected %s but found %s\0A\00", align 1
@.str.55 = private unnamed_addr constant [47 x i8] c"\0Aget_s: Expecting value for %s but found EOF.\0A\00", align 1
@.str.56 = private unnamed_addr constant [43 x i8] c"\0Aget_s: Format error reading value for %s\0A\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"prompt\00", align 1
@str.94 = private unnamed_addr constant [53 x i8] c"save_lattice: ERROR: unknown type for saving lattice\00", align 1
@str.62 = private unnamed_addr constant [53 x i8] c"ask_starting_lattice: ERROR IN INPUT: file name read\00", align 1
@str.63 = private unnamed_addr constant [38 x i8] c"enter name of file containing lattice\00", align 1
@str.64 = private unnamed_addr constant [63 x i8] c"ask_starting_lattice: ERROR IN INPUT: starting lattice command\00", align 1
@str.65 = private unnamed_addr constant [81 x i8] c"enter 'continue', 'fresh', 'reload_ascii', 'reload_serial', or 'reload_parallel'\00", align 1
@str.66 = private unnamed_addr constant [50 x i8] c"ask_ending_lattice: ERROR IN INPUT: save filename\00", align 1
@str.67 = private unnamed_addr constant [15 x i8] c"enter filename\00", align 1
@str.68 = private unnamed_addr constant [59 x i8] c"ask_ending_lattice: ERROR IN INPUT: ending lattice command\00", align 1
@str.69 = private unnamed_addr constant [141 x i8] c"'forget' lattice at end,  'save_ascii', 'save_serial', 'save_parallel', 'save_checkpoint', 'save_serial_archive', or 'save_parallel_archive'\00", align 1
@str.70 = private unnamed_addr constant [32 x i8] c"unit gauge configuration loaded\00", align 1
@str.73 = private unnamed_addr constant [19 x i8] c"Data format error.\00", align 1
@str.74 = private unnamed_addr constant [40 x i8] c"type 0 for no prompts  or 1 for prompts\00", align 1
@str.75 = private unnamed_addr constant [43 x i8] c"get_prompt: ERROR IN INPUT: initial prompt\00", align 1
@gaussian_rand_no.iset = internal unnamed_addr global i1 false, align 4
@gaussian_rand_no.gset = internal unnamed_addr global double 0.000000e+00, align 8
@.str.126 = private unnamed_addr constant [18 x i8] c"Site %d %d %d %d\0A\00", align 1
@.str.1.127 = private unnamed_addr constant [16 x i8] c"%d %d\09%e\09%e\09%e\0A\00", align 1
@.str.140 = private unnamed_addr constant [32 x i8] c"LAYOUT = Hypercubes, options = \00", align 1
@.str.1.141 = private unnamed_addr constant [11 x i8] c"EVENFIRST,\00", align 1
@squaresize = local_unnamed_addr global [4 x i32] zeroinitializer, align 16
@nsquares = local_unnamed_addr global [4 x i32] zeroinitializer, align 16
@str.142 = private unnamed_addr constant [34 x i8] c"SORRY, CAN'T LAY OUT THIS LATTICE\00", align 1
@str.5 = private unnamed_addr constant [60 x i8] c"LAYOUT: Can't lay out this lattice, not enough factors of 2\00", align 1
@str.149 = private unnamed_addr constant [31 x i8] c"plaquette: can't malloc su3mat\00", align 1
@str.156 = private unnamed_addr constant [32 x i8] c"DUMMY: you fouled up the phases\00", align 1
@.str.159 = private unnamed_addr constant [38 x i8] c"PBP: mass %e     %e  %e ( %d of %d )\0A\00", align 1
@.str.1.160 = private unnamed_addr constant [38 x i8] c"FACTION: mass = %e,  %e ( %d of %d )\0A\00", align 1
@.str.165 = private unnamed_addr constant [59 x i8] c"CG not converged after %d iterations, res. = %e wanted %e\0A\00", align 1
@max_deviation = local_unnamed_addr global double 0.000000e+00, align 8
@av_deviation = local_unnamed_addr global double 0.000000e+00, align 8
@.str.180 = private unnamed_addr constant [60 x i8] c"Unitarity problem on node %d, site %d, dir %d tolerance=%e\0A\00", align 1
@.str.2.182 = private unnamed_addr constant [4 x i8] c"%f \00", align 1
@.str.5.183 = private unnamed_addr constant [6 x i8] c"%08x \00", align 1
@.str.8.186 = private unnamed_addr constant [62 x i8] c"reunitarize: Node %d unitarity problem, maximum deviation=%e\0A\00", align 1
@str.181 = private unnamed_addr constant [12 x i8] c"SU3 matrix:\00", align 1
@str.9 = private unnamed_addr constant [15 x i8] c"repeat in hex:\00", align 1
@str.10 = private unnamed_addr constant [5 x i8] c"  \0A \00", align 1
@str.12 = private unnamed_addr constant [32 x i8] c"Unitarity error count exceeded.\00", align 1
@quark_action_description.191 = internal global [72 x i8] c"\22O(a^2): couplings(pi)=0, Naik term, No O(a^2) errors, tadpole weights\22\00", align 16
@num_q_paths = local_unnamed_addr global i32 0, align 4
@num_basic_paths = local_unnamed_addr global i32 0, align 4
@path_coeff = internal unnamed_addr constant [6 x double] [double 6.250000e-01, double 0xBFA5555555555555, double -6.250000e-02, double 1.562500e-02, double 0xBF65555555555555, double -6.250000e-02], align 16
@path_length_in = internal unnamed_addr constant [6 x i32] [i32 1, i32 3, i32 3, i32 5, i32 7, i32 5], align 16
@act_path_coeff = internal unnamed_addr global [6 x double] zeroinitializer, align 16
@path_ind = internal global [6 x [7 x i32]] [[7 x i32] [i32 0, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 0], [7 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 -1, i32 -1, i32 0], [7 x i32] [i32 1, i32 0, i32 6, i32 -1, i32 -1, i32 -1, i32 0], [7 x i32] [i32 1, i32 2, i32 0, i32 5, i32 6, i32 -1, i32 0], [7 x i32] [i32 1, i32 2, i32 3, i32 0, i32 4, i32 5, i32 6], [7 x i32] [i32 1, i32 1, i32 0, i32 6, i32 6, i32 -1, i32 0]], align 16
@.str.2.193 = private unnamed_addr constant [39 x i8] c"                    %d      %e     %d\0A\00", align 1
@q_paths = global [688 x %struct.anon] zeroinitializer, align 16
@path_num = local_unnamed_addr global [6 x i32] zeroinitializer, align 16
@str.192 = private unnamed_addr constant [51 x i8] c"path coefficients: npath  path_coeff  multiplicity\00", align 1
@str.6 = private unnamed_addr constant [24 x i8] c"OOPS: MAX_NUM too small\00", align 1
@str.7 = private unnamed_addr constant [38 x i8] c"BOTCH: load_longlinks needs phases in\00", align 1
@str.8 = private unnamed_addr constant [37 x i8] c"BOTCH: load_fatlinks needs phases in\00", align 1
@switch.table.path_transport_hwv.10 = private unnamed_addr constant [3 x i32] [i32 2, i32 1, i32 3], align 4
@.str.202 = private unnamed_addr constant [61 x i8] c"Unitarity problem on node %d, site %d, dir %d, deviation=%f\0A\00", align 1
@.str.2.204 = private unnamed_addr constant [4 x i8] c"%f \00", align 1
@.str.5.206 = private unnamed_addr constant [6 x i8] c"%08x \00", align 1
@.str.7.208 = private unnamed_addr constant [52 x i8] c"Unitarity problem on node %d, maximum deviation=%f\0A\00", align 1
@str.203 = private unnamed_addr constant [12 x i8] c"SU3 matrix:\00", align 1
@str.8.205 = private unnamed_addr constant [15 x i8] c"repeat in hex:\00", align 1
@str.9.207 = private unnamed_addr constant [5 x i8] c"  \0A \00", align 1
@.str.225 = private unnamed_addr constant [48 x i8] c"g_open: Node %d. Append not supported in PIOFS\0A\00", align 1
@.str.1.226 = private unnamed_addr constant [41 x i8] c"g_open: Node %d. mode %s not recognized\0A\00", align 1
@.str.2.227 = private unnamed_addr constant [37 x i8] c"g_open: Node %d error %d opening %s\0A\00", align 1
@.str.3.228 = private unnamed_addr constant [33 x i8] c"g_open: Node %d can't malloc fp\0A\00", align 1
@.str.231 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1.232 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@.str.2.233 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str.5.235 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.6.236 = private unnamed_addr constant [12 x i8] c"END_HEADER\0A\00", align 1
@.str.7.237 = private unnamed_addr constant [31 x i8] c"%s: Node %d %s write error %d\0A\00", align 1
@.str.8.238 = private unnamed_addr constant [39 x i8] c"%s: Node %d %s descrip,write error %d\0A\00", align 1
@.str.9.239 = private unnamed_addr constant [30 x i8] c"%s: Node %d %s read error %d\0A\00", align 1
@__const.pwrite_gauge_hdr.myname = private unnamed_addr constant [17 x i8] c"pwrite_gauge_hdr\00", align 16
@.str.10.240 = private unnamed_addr constant [13 x i8] c"magic_number\00", align 1
@.str.11.241 = private unnamed_addr constant [11 x i8] c"dimensions\00", align 1
@.str.12.242 = private unnamed_addr constant [11 x i8] c"time_stamp\00", align 1
@.str.13.243 = private unnamed_addr constant [6 x i8] c"order\00", align 1
@__const.swrite_gauge_hdr.myname = private unnamed_addr constant [17 x i8] c"swrite_gauge_hdr\00", align 16
@.str.14.246 = private unnamed_addr constant [57 x i8] c"write_gauge_info_item: WARNING: keyword %s not in table\0A\00", align 1
@.str.15.247 = private unnamed_addr constant [5 x i8] c"%s =\00", align 1
@.str.16.248 = private unnamed_addr constant [5 x i8] c"[%d]\00", align 1
@.str.23.249 = private unnamed_addr constant [50 x i8] c"write_gauge_info_item: Unrecognized data type %s\0A\00", align 1
@.str.25.250 = private unnamed_addr constant [6 x i8] c".info\00", align 1
@.str.26.251 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.27.257 = private unnamed_addr constant [54 x i8] c"write_gauge_info_file: Can't open ascii info file %s\0A\00", align 1
@.str.28.252 = private unnamed_addr constant [5 x i8] c"\22%s\22\00", align 1
@.str.29.253 = private unnamed_addr constant [6 x i8] c"%x %x\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"checksums\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"nx\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"ny\00", align 1
@.str.33.254 = private unnamed_addr constant [3 x i8] c"nz\00", align 1
@.str.34.255 = private unnamed_addr constant [3 x i8] c"nt\00", align 1
@.str.35.256 = private unnamed_addr constant [20 x i8] c"Wrote info file %s\0A\00", align 1
@__const.setup_input_gauge_file.myname = private unnamed_addr constant [23 x i8] c"setup_input_gauge_file\00", align 16
@.str.36 = private unnamed_addr constant [21 x i8] c"%s: Can't malloc gf\0A\00", align 1
@.str.37.258 = private unnamed_addr constant [21 x i8] c"%s: Can't malloc gh\0A\00", align 1
@__const.setup_output_gauge_file.myname = private unnamed_addr constant [24 x i8] c"setup_output_gauge_file\00", align 16
@__const.w_serial_i.myname = private unnamed_addr constant [11 x i8] c"w_serial_i\00", align 1
@.str.38.259 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.39.260 = private unnamed_addr constant [42 x i8] c"%s: Node %d can't open file %s, error %d\0A\00", align 1
@__const.read_checksum.myname = private unnamed_addr constant [14 x i8] c"read_checksum\00", align 1
@.str.40.261 = private unnamed_addr constant [9 x i8] c"checksum\00", align 1
@.str.41.262 = private unnamed_addr constant [54 x i8] c"%s: Checksum violation. Computed %x %x.  Read %x %x.\0A\00", align 1
@.str.42.263 = private unnamed_addr constant [20 x i8] c"Checksums %x %x OK\0A\00", align 1
@__const.write_checksum.myname = private unnamed_addr constant [15 x i8] c"write_checksum\00", align 1
@.str.43.264 = private unnamed_addr constant [17 x i8] c"Checksums %x %x\0A\00", align 1
@.str.46.265 = private unnamed_addr constant [50 x i8] c"w_serial: Node %d fseeko failed error %d file %s\0A\00", align 1
@.str.47.266 = private unnamed_addr constant [62 x i8] c"w_serial: Node %d gauge configuration write error %d file %s\0A\00", align 1
@.str.48.267 = private unnamed_addr constant [54 x i8] c"Saved gauge configuration serially to binary file %s\0A\00", align 1
@.str.49.268 = private unnamed_addr constant [15 x i8] c"Time stamp %s\0A\00", align 1
@.str.52.269 = private unnamed_addr constant [49 x i8] c"read_site_list: Node %d site list read error %d\0A\00", align 1
@__const.read_v3_gauge_hdr.myname = private unnamed_addr constant [18 x i8] c"read_v3_gauge_hdr\00", align 16
@.str.54.270 = private unnamed_addr constant [13 x i8] c"magic number\00", align 1
@.str.58.272 = private unnamed_addr constant [53 x i8] c"requires size of int32type(%d) = size of double(%d)\0A\00", align 1
@.str.59 = private unnamed_addr constant [49 x i8] c"read_v3_gauge_hdr: Incorrect lattice dimensions \00", align 1
@.str.60 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.61 = private unnamed_addr constant [3 x i8] c"c1\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"c2\00", align 1
@.str.63 = private unnamed_addr constant [40 x i8] c"Old format header parameters are %f %f\0A\00", align 1
@__const.read_1996_gauge_hdr.myname = private unnamed_addr constant [20 x i8] c"read_1996_gauge_hdr\00", align 16
@.str.67 = private unnamed_addr constant [51 x i8] c"read_1996_gauge_hdr: Incorrect lattice dimensions \00", align 1
@.str.68 = private unnamed_addr constant [12 x i8] c"header size\00", align 1
@.str.69 = private unnamed_addr constant [11 x i8] c"n_descript\00", align 1
@.str.70 = private unnamed_addr constant [55 x i8] c"read_1996_gauge_hdr: gauge field descriptor length %d\0A\00", align 1
@.str.71 = private unnamed_addr constant [29 x i8] c" exceeds allocated space %d\0A\00", align 1
@.str.72 = private unnamed_addr constant [8 x i8] c"descrip\00", align 1
@.str.73 = private unnamed_addr constant [26 x i8] c"gauge_field.descript: %s\0A\00", align 1
@.str.74 = private unnamed_addr constant [8 x i8] c"n_param\00", align 1
@.str.75 = private unnamed_addr constant [61 x i8] c"read_1996_gauge_hdr: gauge field parameter vector length %d\0A\00", align 1
@.str.76 = private unnamed_addr constant [12 x i8] c"gauge param\00", align 1
@.str.77 = private unnamed_addr constant [28 x i8] c"gauge_field.param[%d] = %f\0A\00", align 1
@__const.read_gauge_hdr.myname = private unnamed_addr constant [15 x i8] c"read_gauge_hdr\00", align 1
@.str.80 = private unnamed_addr constant [24 x i8] c"%s: Can't byte reverse\0A\00", align 1
@.str.82 = private unnamed_addr constant [67 x i8] c"%s: Unrecognized magic number in gauge configuration file header.\0A\00", align 1
@.str.83 = private unnamed_addr constant [25 x i8] c"Expected %x but read %x\0A\00", align 1
@.str.84 = private unnamed_addr constant [25 x i8] c"Expected %s but read %s\0A\00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.85 = private unnamed_addr constant [56 x i8] c"%s: Must use reload_serial with archive files for now.\0A\00", align 1
@.str.86 = private unnamed_addr constant [12 x i8] c"DIMENSION_1\00", align 1
@.str.87 = private unnamed_addr constant [24 x i8] c"DIMENSION_1 not present\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"DIMENSION_2\00", align 1
@.str.89 = private unnamed_addr constant [24 x i8] c"DIMENSION_2 not present\00", align 1
@.str.90 = private unnamed_addr constant [12 x i8] c"DIMENSION_3\00", align 1
@.str.91 = private unnamed_addr constant [24 x i8] c"DIMENSION_3 not present\00", align 1
@.str.92 = private unnamed_addr constant [12 x i8] c"DIMENSION_4\00", align 1
@.str.93 = private unnamed_addr constant [24 x i8] c"DIMENSION_4 not present\00", align 1
@.str.94 = private unnamed_addr constant [9 x i8] c"CHECKSUM\00", align 1
@.str.95 = private unnamed_addr constant [21 x i8] c"CHECKSUM not present\00", align 1
@.str.96 = private unnamed_addr constant [34 x i8] c"%s: Incorrect lattice dimensions \00", align 1
@.str.97 = private unnamed_addr constant [11 x i8] c"time stamp\00", align 1
@.str.98 = private unnamed_addr constant [16 x i8] c"order parameter\00", align 1
@.str.99 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.100 = private unnamed_addr constant [50 x i8] c"r_serial_i: Node %d can't open file %s, error %d\0A\00", align 1
@__const.r_serial.myname = private unnamed_addr constant [9 x i8] c"r_serial\00", align 1
@.str.101 = private unnamed_addr constant [48 x i8] c"%s: Attempting serial read from parallel file \0A\00", align 1
@.str.102 = private unnamed_addr constant [31 x i8] c"%s: Node %d can't malloc lbuf\0A\00", align 1
@.str.103 = private unnamed_addr constant [43 x i8] c"%s: Node 0 fseeko failed error %d file %s\0A\00", align 1
@.str.104 = private unnamed_addr constant [55 x i8] c"%s: node %d gauge configuration read error %d file %s\0A\00", align 1
@.str.105 = private unnamed_addr constant [59 x i8] c"Restored binary gauge configuration serially from file %s\0A\00", align 1
@__const.r_serial_arch.myname = private unnamed_addr constant [14 x i8] c"r_serial_arch\00", align 1
@.str.106 = private unnamed_addr constant [55 x i8] c"%s: Node %d can't malloc uin buffer to read timeslice\0A\00", align 1
@.str.108 = private unnamed_addr constant [60 x i8] c"Restored archive gauge configuration serially from file %s\0A\00", align 1
@.str.109 = private unnamed_addr constant [56 x i8] c"Archive style checksum violation: computed %x, read %x\0A\00", align 1
@.str.110 = private unnamed_addr constant [32 x i8] c"Archive style checksum = %x OK\0A\00", align 1
@.str.112 = private unnamed_addr constant [44 x i8] c"write_site_list: node %d can't malloc cbuf\0A\00", align 1
@.str.113 = private unnamed_addr constant [53 x i8] c"write_site_list: node %d g_seek %ld failed errno %d\0A\00", align 1
@.str.114 = private unnamed_addr constant [48 x i8] c"write_site_list: Node %d coords write error %d\0A\00", align 1
@.str.115 = private unnamed_addr constant [53 x i8] c"parallel_open: Node %d can't open file %s, error %d\0A\00", align 1
@__const.w_parallel_setup.myname = private unnamed_addr constant [17 x i8] c"w_parallel_setup\00", align 16
@.str.116 = private unnamed_addr constant [47 x i8] c"%s: Attempting parallel write to serial file.\0A\00", align 1
@.str.117 = private unnamed_addr constant [48 x i8] c"%s: Node %d g_seek %ld failed error %d file %s\0A\00", align 1
@__const.w_parallel.myname = private unnamed_addr constant [11 x i8] c"w_parallel\00", align 1
@.str.119 = private unnamed_addr constant [56 x i8] c"%s: Node %d gauge configuration write error %d file %s\0A\00", align 1
@.str.120 = private unnamed_addr constant [61 x i8] c"%s: Node %d g_seek %ld for checksum failed error %d file %s\0A\00", align 1
@.str.121 = private unnamed_addr constant [57 x i8] c"Saved gauge configuration in parallel to binary file %s\0A\00", align 1
@__const.w_checkpoint.myname = private unnamed_addr constant [13 x i8] c"w_checkpoint\00", align 1
@.str.122 = private unnamed_addr constant [46 x i8] c"Saved gauge configuration checkpoint file %s\0A\00", align 1
@.str.124 = private unnamed_addr constant [52 x i8] c"r_parallel_i: Node %d can't open file %s, error %d\0A\00", align 1
@__const.r_parallel.myname = private unnamed_addr constant [11 x i8] c"r_parallel\00", align 1
@.str.125 = private unnamed_addr constant [48 x i8] c"%s: Attempting parallel read from serial file.\0A\00", align 1
@.str.126.274 = private unnamed_addr constant [37 x i8] c"BOTCH. Node %d received %d %d %d %d\0A\00", align 1
@.str.127 = private unnamed_addr constant [62 x i8] c"Restored binary gauge configuration in parallel from file %s\0A\00", align 1
@.str.128 = private unnamed_addr constant [60 x i8] c"%s: Node 0 g_seek %ld for checksum failed error %d file %s\0A\00", align 1
@.str.130 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.131 = private unnamed_addr constant [30 x i8] c"Can't open file %s, error %d\0A\00", align 1
@.str.134 = private unnamed_addr constant [27 x i8] c"  read %d but expected %d\0A\00", align 1
@.str.135 = private unnamed_addr constant [26 x i8] c"%*[ \0C\0A\0D\09\0B]%*[\22]%[^\22]%*[\22]\00", align 1
@.str.137 = private unnamed_addr constant [24 x i8] c"count %d time_stamp %s\0A\00", align 1
@.str.138 = private unnamed_addr constant [9 x i8] c"%d%d%d%d\00", align 1
@.str.140.277 = private unnamed_addr constant [51 x i8] c"restore_ascii: Incorrect lattice size %d,%d,%d,%d\0A\00", align 1
@.str.141 = private unnamed_addr constant [8 x i8] c"%lf%lf\0A\00", align 1
@.str.143 = private unnamed_addr constant [50 x i8] c"Restored gauge configuration from ascii file  %s\0A\00", align 1
@.str.144 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.146 = private unnamed_addr constant [6 x i8] c"\22%s\22\0A\00", align 1
@.str.148 = private unnamed_addr constant [13 x i8] c"%d\09%d\09%d\09%d\0A\00", align 1
@.str.150 = private unnamed_addr constant [11 x i8] c"%.7e\09%.7e\0A\00", align 1
@.str.152 = private unnamed_addr constant [44 x i8] c"Saved gauge configuration to ascii file %s\0A\00", align 1
@.str.153 = private unnamed_addr constant [12 x i8] c"trace = %f\0A\00", align 1
@.str.154 = private unnamed_addr constant [15 x i8] c"chksum_x = %x\0A\00", align 1
@.str.155 = private unnamed_addr constant [17 x i8] c"chksum_u = %12u\0A\00", align 1
@.str.156 = private unnamed_addr constant [16 x i8] c"plaquette = %f\0A\00", align 1
@.str.157 = private unnamed_addr constant [38 x i8] c"Writing archive format lattice to %s\0A\00", align 1
@.str.158 = private unnamed_addr constant [31 x i8] c"error opening output file: %s\0A\00", align 1
@.str.159.292 = private unnamed_addr constant [14 x i8] c"BEGIN_HEADER\0A\00", align 1
@.str.160 = private unnamed_addr constant [25 x i8] c"DATATYPE = 4D_SU3_GAUGE\0A\00", align 1
@.str.161 = private unnamed_addr constant [18 x i8] c"DIMENSION_1 = %d\0A\00", align 1
@.str.162 = private unnamed_addr constant [18 x i8] c"DIMENSION_2 = %d\0A\00", align 1
@.str.163 = private unnamed_addr constant [18 x i8] c"DIMENSION_3 = %d\0A\00", align 1
@.str.164 = private unnamed_addr constant [18 x i8] c"DIMENSION_4 = %d\0A\00", align 1
@.str.165.293 = private unnamed_addr constant [15 x i8] c"CHECKSUM = %x\0A\00", align 1
@.str.166 = private unnamed_addr constant [20 x i8] c"LINK_TRACE = %.10f\0A\00", align 1
@.str.167 = private unnamed_addr constant [19 x i8] c"PLAQUETTE = %.10f\0A\00", align 1
@.str.168 = private unnamed_addr constant [18 x i8] c"ENSEMBLE_ID = %s\0A\00", align 1
@.str.169 = private unnamed_addr constant [22 x i8] c"SEQUENCE_NUMBER = %d\0A\00", align 1
@.str.170 = private unnamed_addr constant [33 x i8] c"MILC_INFO = -------BEGIN-------\0A\00", align 1
@.str.171 = private unnamed_addr constant [33 x i8] c"MILC_INFO = --------END--------\0A\00", align 1
@.str.174 = private unnamed_addr constant [29 x i8] c"Wrote archive gauge file %s\0A\00", align 1
@str.234 = private unnamed_addr constant [24 x i8] c"reading Archive header:\00", align 1
@str.176 = private unnamed_addr constant [35 x i8] c"w_serial: Node 0 can't malloc lbuf\00", align 1
@str.177 = private unnamed_addr constant [52 x i8] c"w_serial: Attempting serial write to parallel file \00", align 1
@str.178 = private unnamed_addr constant [54 x i8] c"w_serial_f: Attempting serial close on parallel file \00", align 1
@str.179 = private unnamed_addr constant [44 x i8] c"read_site_list: Can't malloc rank2rcv table\00", align 1
@str.180 = private unnamed_addr constant [66 x i8] c"Reading as old-style gauge field configuration with byte reversal\00", align 1
@str.181.271 = private unnamed_addr constant [38 x i8] c"read_v3_gauge_hdr: Can't byte reverse\00", align 1
@str.182 = private unnamed_addr constant [48 x i8] c"Reading as old-style gauge field configuration.\00", align 1
@str.183 = private unnamed_addr constant [73 x i8] c"First 4 bytes were zero. Trying to interpret with 64 bit integer format.\00", align 1
@str.184 = private unnamed_addr constant [67 x i8] c"Reading as 1996-style gauge field configuration with byte reversal\00", align 1
@str.185 = private unnamed_addr constant [40 x i8] c"read_1996_gauge_hdr: Can't byte reverse\00", align 1
@str.186 = private unnamed_addr constant [49 x i8] c"Reading as 1996-style gauge field configuration.\00", align 1
@str.187 = private unnamed_addr constant [27 x i8] c"Reading with byte reversal\00", align 1
@str.188 = private unnamed_addr constant [45 x i8] c"reading as archive format with byte reversal\00", align 1
@str.189 = private unnamed_addr constant [26 x i8] c"reading as archive format\00", align 1
@str.190 = private unnamed_addr constant [40 x i8] c"recompile with smaller read buffer: uin\00", align 1
@str.191 = private unnamed_addr constant [54 x i8] c"r_serial_f: Attempting serial close on parallel file \00", align 1
@str.192.273 = private unnamed_addr constant [56 x i8] c"w_parallel_f: Attempting parallel close on serial file.\00", align 1
@str.193 = private unnamed_addr constant [56 x i8] c"r_parallel_f: Attempting parallel close on serial file.\00", align 1
@str.194 = private unnamed_addr constant [37 x i8] c"restore_ascii: gauge link read error\00", align 1
@str.195 = private unnamed_addr constant [43 x i8] c"restore_ascii: Error in reading dimensions\00", align 1
@str.196 = private unnamed_addr constant [40 x i8] c"restore_ascii: Error reading time stamp\00", align 1
@str.197 = private unnamed_addr constant [58 x i8] c"restore_ascii: Incorrect version number in lattice header\00", align 1
@str.198 = private unnamed_addr constant [44 x i8] c"restore_ascii: Error reading version number\00", align 1
@str.199 = private unnamed_addr constant [26 x i8] c"Write error in save_ascii\00", align 1
@str.200 = private unnamed_addr constant [28 x i8] c"Error in writing dimensions\00", align 1
@str.201 = private unnamed_addr constant [28 x i8] c"Error in writing time stamp\00", align 1
@str.202 = private unnamed_addr constant [32 x i8] c"Error in writing version number\00", align 1
@str.203.294 = private unnamed_addr constant [17 x i8] c"fwrite bombed...\00", align 1
@str.204 = private unnamed_addr constant [28 x i8] c"can't malloc uout timeslice\00", align 1
@str.205 = private unnamed_addr constant [48 x i8] c"Parallel archive saves are not implemented, yet\00", align 1
@.str.301 = private unnamed_addr constant [13 x i8] c"magic_number\00", align 1
@.str.1.302 = private unnamed_addr constant [11 x i8] c"time_stamp\00", align 1
@.str.2.303 = private unnamed_addr constant [10 x i8] c"checksums\00", align 1
@.str.3.304 = private unnamed_addr constant [3 x i8] c"nx\00", align 1
@.str.4.305 = private unnamed_addr constant [3 x i8] c"ny\00", align 1
@.str.5.306 = private unnamed_addr constant [3 x i8] c"nz\00", align 1
@.str.6.307 = private unnamed_addr constant [3 x i8] c"nt\00", align 1
@.str.7.308 = private unnamed_addr constant [19 x i8] c"action.description\00", align 1
@.str.8.309 = private unnamed_addr constant [18 x i8] c"gauge.description\00", align 1
@.str.9.310 = private unnamed_addr constant [13 x i8] c"gauge.beta11\00", align 1
@.str.10.311 = private unnamed_addr constant [13 x i8] c"gauge.beta12\00", align 1
@.str.11.312 = private unnamed_addr constant [17 x i8] c"gauge.tadpole.u0\00", align 1
@.str.12.313 = private unnamed_addr constant [13 x i8] c"gauge.nloops\00", align 1
@.str.13.314 = private unnamed_addr constant [12 x i8] c"gauge.nreps\00", align 1
@.str.14.315 = private unnamed_addr constant [24 x i8] c"gauge.previous.filename\00", align 1
@.str.15.316 = private unnamed_addr constant [26 x i8] c"gauge.previous.time_stamp\00", align 1
@.str.16.317 = private unnamed_addr constant [25 x i8] c"gauge.previous.checksums\00", align 1
@.str.17.318 = private unnamed_addr constant [22 x i8] c"gauge.fix.description\00", align 1
@.str.18.319 = private unnamed_addr constant [20 x i8] c"gauge.fix.tolerance\00", align 1
@.str.19.320 = private unnamed_addr constant [24 x i8] c"gauge.smear.description\00", align 1
@.str.20.321 = private unnamed_addr constant [18 x i8] c"gauge.smear.steps\00", align 1
@.str.21.322 = private unnamed_addr constant [19 x i8] c"gauge.smear.factor\00", align 1
@.str.22.323 = private unnamed_addr constant [18 x i8] c"quark.description\00", align 1
@.str.23.324 = private unnamed_addr constant [14 x i8] c"quark.flavors\00", align 1
@.str.24.325 = private unnamed_addr constant [15 x i8] c"quark.flavors1\00", align 1
@.str.25.326 = private unnamed_addr constant [15 x i8] c"quark.flavors2\00", align 1
@.str.26.327 = private unnamed_addr constant [11 x i8] c"quark.mass\00", align 1
@.str.27.328 = private unnamed_addr constant [12 x i8] c"quark.mass1\00", align 1
@.str.28.329 = private unnamed_addr constant [12 x i8] c"quark.mass2\00", align 1
@.str.29.330 = private unnamed_addr constant [12 x i8] c"quark.kappa\00", align 1
@.str.30.331 = private unnamed_addr constant [14 x i8] c"quark.link.c1\00", align 1
@.str.31.332 = private unnamed_addr constant [14 x i8] c"quark.link.c3\00", align 1
@.str.32.333 = private unnamed_addr constant [16 x i8] c"quark.staple.w3\00", align 1
@.str.33.334 = private unnamed_addr constant [16 x i8] c"quark.clover.c0\00", align 1
@.str.34.335 = private unnamed_addr constant [16 x i8] c"quark.clover.u0\00", align 1
@.str.35.336 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@gauge_info_keyword = local_unnamed_addr global [36 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.301, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.302, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.303, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.304, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.305, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.306, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.307, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.308, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.309, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9.310, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10.311, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11.312, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.313, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13.314, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14.315, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15.316, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16.317, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.318, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.319, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19.320, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20.321, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21.322, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22.323, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23.324, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24.325, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25.326, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26.327, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27.328, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28.329, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29.330, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30.331, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31.332, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32.333, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33.334, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34.335, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.35.336, i32 0, i32 0)], align 16
@warms = local_unnamed_addr global i32 0, align 4
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@trajecs = local_unnamed_addr global i32 0, align 4
@propinterval = local_unnamed_addr global i32 0, align 4
@mass = global double 0.000000e+00, align 8
@.str.38.412 = private unnamed_addr constant [31 x i8] c"average cg iters for step= %e\0A\00", align 1
@.str.39.413 = private unnamed_addr constant [18 x i8] c"total_iters = %d\0A\00", align 1
@total_iters = local_unnamed_addr global i32 0, align 4
@saveflag = local_unnamed_addr global i32 0, align 4
@savefile = global [256 x i8] zeroinitializer, align 16
@ensemble_id = global [256 x i8] zeroinitializer, align 16
@sequence_number = local_unnamed_addr global i32 0, align 4
@volume = local_unnamed_addr global i32 0, align 4
@steps = local_unnamed_addr global i32 0, align 4
@niter = local_unnamed_addr global i32 0, align 4
@nflavors = global i32 0, align 4
@epsilon = local_unnamed_addr global double 0.000000e+00, align 8
@beta = global double 0.000000e+00, align 8
@u0 = global double 0.000000e+00, align 8
@rsqmin = local_unnamed_addr global double 0.000000e+00, align 8
@rsqprop = local_unnamed_addr global double 0.000000e+00, align 8
@startflag = local_unnamed_addr global i32 0, align 4
@startfile = global [256 x i8] zeroinitializer, align 16
@phases_in = local_unnamed_addr global i32 0, align 4
@source_start = local_unnamed_addr global i32 0, align 4
@source_inc = local_unnamed_addr global i32 0, align 4
@n_sources = local_unnamed_addr global i32 0, align 4
@even_sites_on_node = local_unnamed_addr global i32 0, align 4
@odd_sites_on_node = local_unnamed_addr global i32 0, align 4
@number_of_nodes = local_unnamed_addr global i32 0, align 4
@valid_longlinks = local_unnamed_addr global i32 0, align 4
@valid_fatlinks = local_unnamed_addr global i32 0, align 4
@startlat_p = local_unnamed_addr global %struct.gauge_file* null, align 8
@node_prn = global %struct.double_prn zeroinitializer, align 8
@start_lat_hdr = local_unnamed_addr global %struct.gauge_header zeroinitializer, align 4
@str.411 = private unnamed_addr constant [18 x i8] c"RUNNING COMPLETED\00", align 1
@str.40 = private unnamed_addr constant [18 x i8] c"WARMUPS COMPLETED\00", align 1
@sites_on_node = local_unnamed_addr global i32 0, align 4
@lattice = local_unnamed_addr global %struct.site* null, align 8
@.str.416 = private unnamed_addr constant [30 x i8] c"NODE %d: no room for lattice\0A\00", align 1
@this_node = local_unnamed_addr global i32 0, align 4
@gen_pt = local_unnamed_addr global [16 x i8**] zeroinitializer, align 16
@.str.1.417 = private unnamed_addr constant [37 x i8] c"NODE %d: no room for pointer vector\0A\00", align 1
@nt = global i32 0, align 4
@nz = global i32 0, align 4
@ny = global i32 0, align 4
@nx = global i32 0, align 4
@iseed = local_unnamed_addr global i32 0, align 4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define double @magsq_su3vec(%struct.su3_vector* nocapture readonly %a) local_unnamed_addr #0 {
entry:
  %real = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 0, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %mul = fmul double %0, %0
  %add = fadd double %mul, 0.000000e+00
  %imag = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 0, i32 1
  %1 = load double, double* %imag, align 8, !tbaa !9
  %mul9 = fmul double %1, %1
  %add10 = fadd double %add, %mul9
  %real13 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 1, i32 0
  %2 = load double, double* %real13, align 8, !tbaa !4
  %mul17 = fmul double %2, %2
  %add18 = fadd double %add10, %mul17
  %imag21 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 1, i32 1
  %3 = load double, double* %imag21, align 8, !tbaa !9
  %mul25 = fmul double %3, %3
  %add26 = fadd double %add18, %mul25
  %real29 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 2, i32 0
  %4 = load double, double* %real29, align 8, !tbaa !4
  %mul33 = fmul double %4, %4
  %add34 = fadd double %add26, %mul33
  %imag37 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 2, i32 1
  %5 = load double, double* %imag37, align 8, !tbaa !9
  %mul41 = fmul double %5, %5
  %add42 = fadd double %add34, %mul41
  ret double %add42
}

; Function Attrs: noinline nounwind optsize uwtable
define { double, double } @ploop() local_unnamed_addr #1 {
entry:
  %sum = alloca %struct.complex, align 8
  %tmat = alloca %struct.su3_matrix, align 8
  %d = alloca [4 x i32], align 16
  %0 = bitcast %struct.complex* %sum to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #31
  %1 = bitcast %struct.su3_matrix* %tmat to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %1) #31
  %2 = bitcast [4 x i32]* %d to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #31
  %call = tail call { double, double } @cmplx(double 0.000000e+00, double 0.000000e+00) #32
  %3 = extractvalue { double, double } %call, 0
  %4 = extractvalue { double, double } %call, 1
  %tmp.sroa.0.0..sroa_idx = getelementptr inbounds %struct.complex, %struct.complex* %sum, i64 0, i32 0
  store double %3, double* %tmp.sroa.0.0..sroa_idx, align 8, !tbaa.struct !10
  %tmp.sroa.4.0..sroa_idx79 = getelementptr inbounds %struct.complex, %struct.complex* %sum, i64 0, i32 1
  store double %4, double* %tmp.sroa.4.0..sroa_idx79, align 8, !tbaa.struct !12
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %d, i64 0, i64 2
  store i32 0, i32* %arrayidx, align 8, !tbaa !13
  %arrayidx1 = getelementptr inbounds [4 x i32], [4 x i32]* %d, i64 0, i64 1
  store i32 0, i32* %arrayidx1, align 4, !tbaa !13
  %arrayidx2 = getelementptr inbounds [4 x i32], [4 x i32]* %d, i64 0, i64 0
  store i32 0, i32* %arrayidx2, align 16, !tbaa !13
  %5 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call6 = tail call %struct.msg_tag* @start_gather(i32 544, i32 144, i32 3, i32 2, i8** %5) #32
  tail call void @wait_gather(%struct.msg_tag* %call6) #32
  %6 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %cmp117 = icmp sgt i32 %6, 0
  br i1 %cmp117, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %7 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv120 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next121, %for.body ]
  %st.0118 = phi %struct.site* [ %7, %for.body.preheader ], [ %incdec.ptr, %for.body ]
  %arrayidx9 = getelementptr inbounds %struct.site, %struct.site* %st.0118, i64 0, i32 8, i64 3
  %8 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx10 = getelementptr inbounds i8*, i8** %8, i64 %indvars.iv120
  %9 = bitcast i8** %arrayidx10 to %struct.su3_matrix**
  %10 = load %struct.su3_matrix*, %struct.su3_matrix** %9, align 8, !tbaa !15
  %tempmat1 = getelementptr inbounds %struct.site, %struct.site* %st.0118, i64 0, i32 22
  tail call void @mult_su3_nn(%struct.su3_matrix* nonnull %arrayidx9, %struct.su3_matrix* %10, %struct.su3_matrix* nonnull %tempmat1) #32
  %indvars.iv.next121 = add nuw nsw i64 %indvars.iv120, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %st.0118, i64 1
  %11 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %12 = sext i32 %11 to i64
  %cmp = icmp slt i64 %indvars.iv.next121, %12
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !17

for.end:                                          ; preds = %for.body, %entry
  tail call void @cleanup_gather(%struct.msg_tag* %call6) #32
  %arrayidx15 = getelementptr inbounds [4 x i32], [4 x i32]* %d, i64 0, i64 3
  %13 = load i32, i32* @nt, align 4, !tbaa !13
  %cmp12115 = icmp sgt i32 %13, 2
  br i1 %cmp12115, label %for.body14, label %for.end43

for.body14:                                       ; preds = %for.end, %for.end41
  %t.0116 = phi i32 [ %add, %for.end41 ], [ 2, %for.end ]
  store i32 %t.0116, i32* %arrayidx15, align 4, !tbaa !13
  %14 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call23 = call %struct.msg_tag* @start_general_gather(i32 2912, i32 144, i32* nonnull %arrayidx2, i32 2, i8** %14) #32
  call void @wait_general_gather(%struct.msg_tag* %call23) #32
  %15 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %cmp25110 = icmp sgt i32 %15, 0
  br i1 %cmp25110, label %for.body27.preheader, label %for.end41

for.body27.preheader:                             ; preds = %for.body14
  %16 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body27

for.body27:                                       ; preds = %for.body27.preheader, %for.inc38
  %17 = phi i32 [ %15, %for.body27.preheader ], [ %24, %for.inc38 ]
  %indvars.iv = phi i64 [ 0, %for.body27.preheader ], [ %indvars.iv.next, %for.inc38 ]
  %st.1111 = phi %struct.site* [ %16, %for.body27.preheader ], [ %incdec.ptr40, %for.inc38 ]
  %t28 = getelementptr inbounds %struct.site, %struct.site* %st.1111, i64 0, i32 3
  %18 = load i16, i16* %t28, align 2, !tbaa !19
  %cmp30 = icmp sgt i16 %18, 1
  br i1 %cmp30, label %for.inc38, label %if.end

if.end:                                           ; preds = %for.body27
  %tempmat132 = getelementptr inbounds %struct.site, %struct.site* %st.1111, i64 0, i32 22
  %19 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx34 = getelementptr inbounds i8*, i8** %19, i64 %indvars.iv
  %20 = bitcast i8** %arrayidx34 to %struct.su3_matrix**
  %21 = load %struct.su3_matrix*, %struct.su3_matrix** %20, align 8, !tbaa !15
  call void @mult_su3_nn(%struct.su3_matrix* nonnull %tempmat132, %struct.su3_matrix* %21, %struct.su3_matrix* nonnull %tmat) #32
  %22 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %tempmat137 = getelementptr inbounds %struct.site, %struct.site* %22, i64 %indvars.iv, i32 22
  %23 = bitcast %struct.su3_matrix* %tempmat137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(144) %23, i8* noundef nonnull align 8 dereferenceable(144) %1, i64 144, i1 false), !tbaa.struct !25
  %.pre = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  br label %for.inc38

for.inc38:                                        ; preds = %for.body27, %if.end
  %24 = phi i32 [ %17, %for.body27 ], [ %.pre, %if.end ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %incdec.ptr40 = getelementptr inbounds %struct.site, %struct.site* %st.1111, i64 1
  %25 = sext i32 %24 to i64
  %cmp25 = icmp slt i64 %indvars.iv.next, %25
  br i1 %cmp25, label %for.body27, label %for.end41, !llvm.loop !27

for.end41:                                        ; preds = %for.inc38, %for.body14
  call void @cleanup_general_gather(%struct.msg_tag* %call23) #32
  %add = add nuw nsw i32 %t.0116, 2
  %26 = load i32, i32* @nt, align 4, !tbaa !13
  %cmp12 = icmp slt i32 %add, %26
  br i1 %cmp12, label %for.body14, label %for.end43, !llvm.loop !28

for.end43:                                        ; preds = %for.end41, %for.end
  %27 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %cmp45106 = icmp sgt i32 %27, 0
  br i1 %cmp45106, label %for.body47.preheader, label %for.end64

for.body47.preheader:                             ; preds = %for.end43
  %28 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body47

for.body47:                                       ; preds = %for.body47.preheader, %for.inc61
  %29 = phi i32 [ %35, %for.inc61 ], [ %27, %for.body47.preheader ]
  %30 = phi double [ %36, %for.inc61 ], [ %4, %for.body47.preheader ]
  %31 = phi double [ %37, %for.inc61 ], [ %3, %for.body47.preheader ]
  %i.2109 = phi i32 [ %inc62, %for.inc61 ], [ 0, %for.body47.preheader ]
  %st.2107 = phi %struct.site* [ %incdec.ptr63, %for.inc61 ], [ %28, %for.body47.preheader ]
  %t48 = getelementptr inbounds %struct.site, %struct.site* %st.2107, i64 0, i32 3
  %32 = load i16, i16* %t48, align 2, !tbaa !19
  %cmp50 = icmp sgt i16 %32, 1
  br i1 %cmp50, label %for.inc61, label %if.end53

if.end53:                                         ; preds = %for.body47
  %tempmat155 = getelementptr inbounds %struct.site, %struct.site* %st.2107, i64 0, i32 22
  %call56 = call { double, double } @trace_su3(%struct.su3_matrix* nonnull %tempmat155) #32
  %33 = extractvalue { double, double } %call56, 0
  %34 = extractvalue { double, double } %call56, 1
  %add58 = fadd double %31, %33
  store double %add58, double* %tmp.sroa.0.0..sroa_idx, align 8, !tbaa !4
  %add60 = fadd double %34, %30
  store double %add60, double* %tmp.sroa.4.0..sroa_idx79, align 8, !tbaa !9
  %.pre122 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  br label %for.inc61

for.inc61:                                        ; preds = %for.body47, %if.end53
  %35 = phi i32 [ %29, %for.body47 ], [ %.pre122, %if.end53 ]
  %36 = phi double [ %30, %for.body47 ], [ %add60, %if.end53 ]
  %37 = phi double [ %31, %for.body47 ], [ %add58, %if.end53 ]
  %inc62 = add nuw nsw i32 %i.2109, 1
  %incdec.ptr63 = getelementptr inbounds %struct.site, %struct.site* %st.2107, i64 1
  %cmp45 = icmp slt i32 %inc62, %35
  br i1 %cmp45, label %for.body47, label %for.end64, !llvm.loop !29

for.end64:                                        ; preds = %for.inc61, %for.end43
  call void @g_complexsum(%struct.complex* nonnull %sum) #32
  %38 = load double, double* %tmp.sroa.0.0..sroa_idx, align 8, !tbaa !4
  %39 = load i32, i32* @nx, align 4, !tbaa !13
  %40 = load i32, i32* @ny, align 4, !tbaa !13
  %mul = mul nsw i32 %40, %39
  %41 = load i32, i32* @nz, align 4, !tbaa !13
  %mul66 = mul nsw i32 %mul, %41
  %conv67 = sitofp i32 %mul66 to double
  %div = fdiv double %38, %conv67
  %42 = load double, double* %tmp.sroa.4.0..sroa_idx79, align 8, !tbaa !9
  %div73 = fdiv double %42, %conv67
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #31
  %.fca.0.insert = insertvalue { double, double } undef, double %div, 0
  %.fca.1.insert = insertvalue { double, double } %.fca.0.insert, double %div73, 1
  ret { double, double } %.fca.1.insert
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @scalar_mult_sub_su3_matrix(%struct.su3_matrix* nocapture readonly %a, %struct.su3_matrix* nocapture readonly %b, double %s, %struct.su3_matrix* nocapture %c) local_unnamed_addr #4 {
entry:
  %neg = fneg double %s
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %entry, %for.inc36
  %indvars.iv61 = phi i64 [ 0, %entry ], [ %indvars.iv.next62, %for.inc36 ]
  br label %for.body3

for.body3:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv61, i64 %indvars.iv, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %real11 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv61, i64 %indvars.iv, i32 0
  %1 = load double, double* %real11, align 8, !tbaa !4
  %2 = tail call double @llvm.fmuladd.f64(double %neg, double %1, double %0)
  %real17 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv61, i64 %indvars.iv, i32 0
  store double %2, double* %real17, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv61, i64 %indvars.iv, i32 1
  %3 = load double, double* %imag, align 8, !tbaa !9
  %imag28 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv61, i64 %indvars.iv, i32 1
  %4 = load double, double* %imag28, align 8, !tbaa !9
  %5 = tail call double @llvm.fmuladd.f64(double %neg, double %4, double %3)
  %imag35 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv61, i64 %indvars.iv, i32 1
  store double %5, double* %imag35, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc36, label %for.body3, !llvm.loop !30

for.inc36:                                        ; preds = %for.body3
  %indvars.iv.next62 = add nuw nsw i64 %indvars.iv61, 1
  %exitcond63.not = icmp eq i64 %indvars.iv.next62, 3
  br i1 %exitcond63.not, label %for.end38, label %for.cond1.preheader, !llvm.loop !31

for.end38:                                        ; preds = %for.inc36
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fmuladd.f64(double, double, double) #5

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @mult_adj_su3_mat_4vec(%struct.su3_matrix* nocapture readonly %mat, %struct.su3_vector* nocapture readonly %src, %struct.su3_vector* %dest0, %struct.su3_vector* %dest1, %struct.su3_vector* %dest2, %struct.su3_vector* %dest3) local_unnamed_addr #4 {
entry:
  %cc = alloca [4 x %struct.su3_vector*], align 16
  %0 = bitcast [4 x %struct.su3_vector*]* %cc to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #31
  %arrayidx = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %cc, i64 0, i64 0
  store %struct.su3_vector* %dest0, %struct.su3_vector** %arrayidx, align 16, !tbaa !15
  %arrayidx1 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %cc, i64 0, i64 1
  store %struct.su3_vector* %dest1, %struct.su3_vector** %arrayidx1, align 8, !tbaa !15
  %arrayidx2 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %cc, i64 0, i64 2
  store %struct.su3_vector* %dest2, %struct.su3_vector** %arrayidx2, align 16, !tbaa !15
  %arrayidx3 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %cc, i64 0, i64 3
  store %struct.su3_vector* %dest3, %struct.su3_vector** %arrayidx3, align 8, !tbaa !15
  %real = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %src, i64 0, i32 0, i64 0, i32 0
  %imag = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %src, i64 0, i32 0, i64 0, i32 1
  %real47 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %src, i64 0, i32 0, i64 1, i32 0
  %imag50 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %src, i64 0, i32 0, i64 1, i32 1
  %real92 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %src, i64 0, i32 0, i64 2, i32 0
  %imag95 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %src, i64 0, i32 0, i64 2, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry
  %1 = phi %struct.su3_vector* [ %dest0, %entry ], [ %.pre, %for.body.for.body_crit_edge ]
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body.for.body_crit_edge ]
  %a.0296 = phi %struct.su3_matrix* [ %mat, %entry ], [ %incdec.ptr, %for.body.for.body_crit_edge ]
  %2 = load double, double* %real, align 8, !tbaa !4
  %3 = load double, double* %imag, align 8, !tbaa !9
  %real11 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 0, i64 0, i32 0
  %4 = load double, double* %real11, align 8, !tbaa !4
  %real15 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 0, i64 1, i32 0
  %5 = load double, double* %real15, align 8, !tbaa !4
  %real19 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 0, i64 2, i32 0
  %6 = load double, double* %real19, align 8, !tbaa !4
  %mul = fmul double %2, %4
  %mul20 = fmul double %2, %5
  %mul21 = fmul double %2, %6
  %mul22 = fmul double %3, %4
  %mul23 = fmul double %3, %5
  %mul24 = fmul double %3, %6
  %imag28 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 0, i64 0, i32 1
  %7 = load double, double* %imag28, align 8, !tbaa !9
  %imag32 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 0, i64 1, i32 1
  %8 = load double, double* %imag32, align 8, !tbaa !9
  %imag36 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 0, i64 2, i32 1
  %9 = load double, double* %imag36, align 8, !tbaa !9
  %10 = tail call double @llvm.fmuladd.f64(double %7, double %3, double %mul)
  %11 = tail call double @llvm.fmuladd.f64(double %8, double %3, double %mul20)
  %12 = tail call double @llvm.fmuladd.f64(double %9, double %3, double %mul21)
  %neg = fneg double %7
  %13 = tail call double @llvm.fmuladd.f64(double %neg, double %2, double %mul22)
  %neg42 = fneg double %8
  %14 = tail call double @llvm.fmuladd.f64(double %neg42, double %2, double %mul23)
  %neg44 = fneg double %9
  %15 = tail call double @llvm.fmuladd.f64(double %neg44, double %2, double %mul24)
  %16 = load double, double* %real47, align 8, !tbaa !4
  %17 = load double, double* %imag50, align 8, !tbaa !9
  %real54 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 1, i64 0, i32 0
  %18 = load double, double* %real54, align 8, !tbaa !4
  %real58 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 1, i64 1, i32 0
  %19 = load double, double* %real58, align 8, !tbaa !4
  %real62 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 1, i64 2, i32 0
  %20 = load double, double* %real62, align 8, !tbaa !4
  %21 = tail call double @llvm.fmuladd.f64(double %18, double %16, double %10)
  %22 = tail call double @llvm.fmuladd.f64(double %19, double %16, double %11)
  %23 = tail call double @llvm.fmuladd.f64(double %20, double %16, double %12)
  %24 = tail call double @llvm.fmuladd.f64(double %18, double %17, double %13)
  %25 = tail call double @llvm.fmuladd.f64(double %19, double %17, double %14)
  %26 = tail call double @llvm.fmuladd.f64(double %20, double %17, double %15)
  %imag72 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 1, i64 0, i32 1
  %27 = load double, double* %imag72, align 8, !tbaa !9
  %imag76 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 1, i64 1, i32 1
  %28 = load double, double* %imag76, align 8, !tbaa !9
  %imag80 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 1, i64 2, i32 1
  %29 = load double, double* %imag80, align 8, !tbaa !9
  %30 = tail call double @llvm.fmuladd.f64(double %27, double %17, double %21)
  %31 = tail call double @llvm.fmuladd.f64(double %28, double %17, double %22)
  %32 = tail call double @llvm.fmuladd.f64(double %29, double %17, double %23)
  %neg85 = fneg double %27
  %33 = tail call double @llvm.fmuladd.f64(double %neg85, double %16, double %24)
  %neg87 = fneg double %28
  %34 = tail call double @llvm.fmuladd.f64(double %neg87, double %16, double %25)
  %neg89 = fneg double %29
  %35 = tail call double @llvm.fmuladd.f64(double %neg89, double %16, double %26)
  %36 = load double, double* %real92, align 8, !tbaa !4
  %37 = load double, double* %imag95, align 8, !tbaa !9
  %real99 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 2, i64 0, i32 0
  %38 = load double, double* %real99, align 8, !tbaa !4
  %real103 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 2, i64 1, i32 0
  %39 = load double, double* %real103, align 8, !tbaa !4
  %real107 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 2, i64 2, i32 0
  %40 = load double, double* %real107, align 8, !tbaa !4
  %41 = tail call double @llvm.fmuladd.f64(double %38, double %36, double %30)
  %42 = tail call double @llvm.fmuladd.f64(double %39, double %36, double %31)
  %43 = tail call double @llvm.fmuladd.f64(double %40, double %36, double %32)
  %44 = tail call double @llvm.fmuladd.f64(double %38, double %37, double %33)
  %45 = tail call double @llvm.fmuladd.f64(double %39, double %37, double %34)
  %46 = tail call double @llvm.fmuladd.f64(double %40, double %37, double %35)
  %imag117 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 2, i64 0, i32 1
  %47 = load double, double* %imag117, align 8, !tbaa !9
  %imag121 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 2, i64 1, i32 1
  %48 = load double, double* %imag121, align 8, !tbaa !9
  %imag125 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 0, i32 0, i64 2, i64 2, i32 1
  %49 = load double, double* %imag125, align 8, !tbaa !9
  %50 = tail call double @llvm.fmuladd.f64(double %47, double %37, double %41)
  %51 = tail call double @llvm.fmuladd.f64(double %48, double %37, double %42)
  %52 = tail call double @llvm.fmuladd.f64(double %49, double %37, double %43)
  %neg130 = fneg double %47
  %53 = tail call double @llvm.fmuladd.f64(double %neg130, double %36, double %44)
  %neg132 = fneg double %48
  %54 = tail call double @llvm.fmuladd.f64(double %neg132, double %36, double %45)
  %neg134 = fneg double %49
  %55 = tail call double @llvm.fmuladd.f64(double %neg134, double %36, double %46)
  %real137 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %1, i64 0, i32 0, i64 0, i32 0
  store double %50, double* %real137, align 8, !tbaa !4
  %imag140 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %1, i64 0, i32 0, i64 0, i32 1
  store double %53, double* %imag140, align 8, !tbaa !9
  %real143 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %1, i64 0, i32 0, i64 1, i32 0
  store double %51, double* %real143, align 8, !tbaa !4
  %imag146 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %1, i64 0, i32 0, i64 1, i32 1
  store double %54, double* %imag146, align 8, !tbaa !9
  %real149 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %1, i64 0, i32 0, i64 2, i32 0
  store double %52, double* %real149, align 8, !tbaa !4
  %imag152 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %1, i64 0, i32 0, i64 2, i32 1
  store double %55, double* %imag152, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge, !llvm.loop !32

for.body.for.body_crit_edge:                      ; preds = %for.body
  %incdec.ptr = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0296, i64 1
  %arrayidx4.phi.trans.insert = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %cc, i64 0, i64 %indvars.iv.next
  %.pre = load %struct.su3_vector*, %struct.su3_vector** %arrayidx4.phi.trans.insert, align 8, !tbaa !15
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @mat_invert_cg(i32 %src, i32 %dest, i32 %temp, double %mass) local_unnamed_addr #1 {
entry:
  %finalrsq = alloca double, align 8
  %0 = bitcast double* %finalrsq to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  tail call void @clear_latvec(i32 %dest, i32 3) #32
  %1 = load i32, i32* @niter, align 4, !tbaa !13
  %2 = load double, double* @rsqprop, align 8, !tbaa !11
  %call = call i32 @ks_congrad(i32 %src, i32 %dest, double %mass, i32 %1, double %2, i32 3, double* nonnull %finalrsq) #32
  call void @dslash_fn(i32 %dest, i32 2384, i32 3) #32
  %mul = fmul double %mass, -2.000000e+00
  call void @scalar_mult_add_latvec(i32 2384, i32 %dest, double %mul, i32 2384, i32 3) #32
  call void @scalar_mult_latvec(i32 2384, double -1.000000e+00, i32 %dest, i32 3) #32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret i32 %call
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @mat_invert_uml(i32 %src, i32 %dest, i32 %temp, double %mass) local_unnamed_addr #1 {
entry:
  %finalrsq = alloca double, align 8
  %0 = bitcast double* %finalrsq to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %cmp = icmp eq i32 %src, %temp
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @str, i64 0, i64 0))
  tail call void @exit(i32 0) #33
  unreachable

if.end:                                           ; preds = %entry
  tail call void @dslash_fn(i32 %src, i32 2384, i32 2) #32
  %mul = fmul double %mass, -2.000000e+00
  tail call void @scalar_mult_add_latvec(i32 2384, i32 %src, double %mul, i32 %temp, i32 2) #32
  tail call void @scalar_mult_latvec(i32 %temp, double -1.000000e+00, i32 %temp, i32 2) #32
  %1 = load i32, i32* @niter, align 4, !tbaa !13
  %2 = load double, double* @rsqprop, align 8, !tbaa !11
  %call9 = call i32 @ks_congrad(i32 %temp, i32 %dest, double %mass, i32 %1, double %2, i32 2, double* nonnull %finalrsq) #32
  call void @dslash_fn(i32 %dest, i32 2384, i32 1) #32
  %3 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %idx.ext = sext i32 %src to i64
  %idx.ext21 = sext i32 %dest to i64
  %mul25 = fmul double %mass, 2.000000e+00
  %div = fdiv double 1.000000e+00, %mul25
  %4 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp1851 = icmp slt i32 %3, %4
  br i1 %cmp1851, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %if.end
  %5 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom = sext i32 %3 to i64
  %arrayidx17 = getelementptr inbounds %struct.site, %struct.site* %5, i64 %idxprom
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %s.053 = phi %struct.site* [ %incdec.ptr, %for.body ], [ %arrayidx17, %for.body.preheader ]
  %i.052 = phi i32 [ %inc, %for.body ], [ %3, %for.body.preheader ]
  %6 = bitcast %struct.site* %s.053 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext
  %7 = bitcast i8* %add.ptr to %struct.su3_vector*
  %ttt20 = getelementptr inbounds %struct.site, %struct.site* %s.053, i64 0, i32 17
  %add.ptr22 = getelementptr inbounds i8, i8* %6, i64 %idx.ext21
  %8 = bitcast i8* %add.ptr22 to %struct.su3_vector*
  call void @sub_su3_vector(%struct.su3_vector* %7, %struct.su3_vector* nonnull %ttt20, %struct.su3_vector* %8) #32
  call void @scalar_mult_su3_vector(%struct.su3_vector* %8, double %div, %struct.su3_vector* %8) #32
  %inc = add nsw i32 %i.052, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.053, i64 1
  %9 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp18 = icmp slt i32 %inc, %9
  br i1 %cmp18, label %for.body, label %for.end, !llvm.loop !33

for.end:                                          ; preds = %for.body, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret i32 %call9
}

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #6

; Function Attrs: noreturn nounwind optsize
declare void @exit(i32) local_unnamed_addr #7

; Function Attrs: noinline nounwind optsize uwtable
define void @check_invert(i32 %src, i32 %dest, double %mass, double %tol) local_unnamed_addr #1 {
entry:
  %sum = alloca double, align 8
  %sum2 = alloca double, align 8
  %0 = bitcast double* %sum to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %1 = bitcast double* %sum2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #31
  tail call void @dslash_fn(i32 %src, i32 2288, i32 3) #32
  %idx.ext = sext i32 %src to i64
  %mul = fmul double %mass, 2.000000e+00
  %2 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp133 = icmp sgt i32 %2, 0
  br i1 %cmp133, label %for.body.preheader, label %for.end.thread

for.body.preheader:                               ; preds = %entry
  %3 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body

for.end.thread:                                   ; preds = %entry
  store double 0.000000e+00, double* %sum, align 8, !tbaa !11
  store double 0.000000e+00, double* %sum2, align 8, !tbaa !11
  br label %for.end75

for.body:                                         ; preds = %for.body.preheader, %for.body
  %i.0135 = phi i32 [ %inc, %for.body ], [ 0, %for.body.preheader ]
  %s.0134 = phi %struct.site* [ %incdec.ptr, %for.body ], [ %3, %for.body.preheader ]
  %cg_p3 = getelementptr inbounds %struct.site, %struct.site* %s.0134, i64 0, i32 15
  %4 = bitcast %struct.site* %s.0134 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext
  %5 = bitcast i8* %add.ptr to %struct.su3_vector*
  tail call void @scalar_mult_add_su3_vector(%struct.su3_vector* nonnull %cg_p3, %struct.su3_vector* %5, double %mul, %struct.su3_vector* nonnull %cg_p3) #32
  %inc = add nuw nsw i32 %i.0135, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0134, i64 1
  %6 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp = icmp slt i32 %inc, %6
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !34

for.end:                                          ; preds = %for.body
  %.pre = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  store double 0.000000e+00, double* %sum, align 8, !tbaa !11
  store double 0.000000e+00, double* %sum2, align 8, !tbaa !11
  %idx.ext13 = sext i32 %dest to i64
  %cmp6130 = icmp sgt i32 %6, 0
  br i1 %cmp6130, label %for.cond9.preheader, label %for.end75

for.cond9.preheader:                              ; preds = %for.end, %for.end67
  %7 = phi double [ %add71, %for.end67 ], [ 0.000000e+00, %for.end ]
  %8 = phi double [ %add, %for.end67 ], [ 0.000000e+00, %for.end ]
  %i.1132 = phi i32 [ %inc73, %for.end67 ], [ 0, %for.end ]
  %s.1131 = phi %struct.site* [ %incdec.ptr74, %for.end67 ], [ %.pre, %for.end ]
  %9 = bitcast %struct.site* %s.1131 to i8*
  %add.ptr14 = getelementptr inbounds i8, i8* %9, i64 %idx.ext13
  %c = bitcast i8* %add.ptr14 to [3 x %struct.complex]*
  br label %for.body12

for.body12:                                       ; preds = %for.cond9.preheader, %if.end62
  %10 = phi double [ %8, %for.cond9.preheader ], [ %add, %if.end62 ]
  %indvars.iv = phi i64 [ 0, %for.cond9.preheader ], [ %indvars.iv.next, %if.end62 ]
  %flag.0127 = phi i32 [ 0, %for.cond9.preheader ], [ %flag.1, %if.end62 ]
  %real = getelementptr inbounds [3 x %struct.complex], [3 x %struct.complex]* %c, i64 0, i64 %indvars.iv, i32 0
  %11 = load double, double* %real, align 8, !tbaa !4
  %real20 = getelementptr inbounds %struct.site, %struct.site* %s.1131, i64 0, i32 15, i32 0, i64 %indvars.iv, i32 0
  %12 = load double, double* %real20, align 8, !tbaa !4
  %sub = fsub double %11, %12
  %imag = getelementptr inbounds [3 x %struct.complex], [3 x %struct.complex]* %c, i64 0, i64 %indvars.iv, i32 1
  %13 = load double, double* %imag, align 8, !tbaa !9
  %imag30 = getelementptr inbounds %struct.site, %struct.site* %s.1131, i64 0, i32 15, i32 0, i64 %indvars.iv, i32 1
  %14 = load double, double* %imag30, align 8, !tbaa !9
  %sub31 = fsub double %13, %14
  %15 = tail call double @llvm.fabs.f64(double %sub)
  %cmp32 = fcmp ogt double %15, %tol
  %16 = tail call double @llvm.fabs.f64(double %sub31)
  %cmp34 = fcmp ogt double %16, %tol
  %or.cond = select i1 %cmp32, i1 true, i1 %cmp34
  %flag.1 = select i1 %or.cond, i32 1, i32 %flag.0127
  %tobool.not = icmp eq i32 %flag.1, 0
  br i1 %tobool.not, label %if.end62, label %if.then36

if.then36:                                        ; preds = %for.body12
  %17 = trunc i64 %indvars.iv to i32
  %call = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 %i.1132, i32 %17, double %11, double %13, double %12, double %14) #34
  tail call void @terminate(i32 0) #32
  br label %if.end62

if.end62:                                         ; preds = %for.body12, %if.then36
  %mul64 = fmul double %sub31, %sub31
  %18 = tail call double @llvm.fmuladd.f64(double %sub, double %sub, double %mul64)
  %add = fadd double %18, %10
  store double %add, double* %sum, align 8, !tbaa !11
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end67, label %for.body12, !llvm.loop !35

for.end67:                                        ; preds = %if.end62
  %19 = bitcast i8* %add.ptr14 to %struct.su3_vector*
  %call70 = tail call double @magsq_su3vec(%struct.su3_vector* %19) #32
  %add71 = fadd double %call70, %7
  store double %add71, double* %sum2, align 8, !tbaa !11
  %inc73 = add nuw nsw i32 %i.1132, 1
  %incdec.ptr74 = getelementptr inbounds %struct.site, %struct.site* %s.1131, i64 1
  %20 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp6 = icmp slt i32 %inc73, %20
  br i1 %cmp6, label %for.cond9.preheader, label %for.end75, !llvm.loop !36

for.end75:                                        ; preds = %for.end67, %for.end.thread, %for.end
  call void @g_doublesum(double* nonnull %sum) #32
  call void @g_doublesum(double* nonnull %sum2) #32
  call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %21 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp76 = icmp eq i32 %21, 0
  br i1 %cmp76, label %if.then78, label %if.end82

if.then78:                                        ; preds = %for.end75
  %22 = load double, double* %sum, align 8, !tbaa !11
  %23 = load double, double* %sum2, align 8, !tbaa !11
  %div = fdiv double %22, %23
  %call79 = call double @sqrt(double %div) #32
  %call80 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), double %call79) #34
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call81 = call i32 @fflush(%struct._IO_FILE* %24) #34
  br label %if.end82

if.end82:                                         ; preds = %if.then78, %for.end75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #5

; Function Attrs: nofree nounwind optsize
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #8

; Function Attrs: mustprogress nofree nounwind optsize willreturn
declare double @sqrt(double) local_unnamed_addr #9

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fflush(%struct._IO_FILE* nocapture noundef) local_unnamed_addr #8

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @mult_su3_mat_vec(%struct.su3_matrix* nocapture readonly %a, %struct.su3_vector* nocapture readonly %b, %struct.su3_vector* nocapture %c) local_unnamed_addr #10 {
entry:
  %real8 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 0, i32 0
  %imag11 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 0, i32 1
  %real27 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 1, i32 0
  %imag30 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 1, i32 1
  %real51 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 2, i32 0
  %imag54 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 2, i32 1
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv, i64 0, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv, i64 0, i32 1
  %1 = load double, double* %imag, align 8, !tbaa !9
  %2 = load double, double* %real8, align 8, !tbaa !4
  %3 = load double, double* %imag11, align 8, !tbaa !9
  %mul = fmul double %0, %2
  %mul12 = fmul double %1, %3
  %sub = fsub double %mul, %mul12
  %mul13 = fmul double %0, %3
  %mul14 = fmul double %1, %2
  %add = fadd double %mul14, %mul13
  %real19 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv, i64 1, i32 0
  %4 = load double, double* %real19, align 8, !tbaa !4
  %imag24 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv, i64 1, i32 1
  %5 = load double, double* %imag24, align 8, !tbaa !9
  %6 = load double, double* %real27, align 8, !tbaa !4
  %7 = load double, double* %imag30, align 8, !tbaa !9
  %mul31 = fmul double %4, %6
  %add32 = fadd double %sub, %mul31
  %mul33 = fmul double %5, %7
  %sub34 = fsub double %add32, %mul33
  %mul35 = fmul double %4, %7
  %add36 = fadd double %add, %mul35
  %mul37 = fmul double %5, %6
  %add38 = fadd double %mul37, %add36
  %real43 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv, i64 2, i32 0
  %8 = load double, double* %real43, align 8, !tbaa !4
  %imag48 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv, i64 2, i32 1
  %9 = load double, double* %imag48, align 8, !tbaa !9
  %10 = load double, double* %real51, align 8, !tbaa !4
  %11 = load double, double* %imag54, align 8, !tbaa !9
  %mul55 = fmul double %8, %10
  %add56 = fadd double %sub34, %mul55
  %mul57 = fmul double %9, %11
  %sub58 = fsub double %add56, %mul57
  %mul59 = fmul double %8, %11
  %add60 = fadd double %add38, %mul59
  %mul61 = fmul double %9, %10
  %add62 = fadd double %mul61, %add60
  %real66 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 0
  store double %sub58, double* %real66, align 8, !tbaa !4
  %imag70 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 1
  store double %add62, double* %imag70, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !37

for.end:                                          ; preds = %for.body
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @write_appl_gauge_info(%struct._IO_FILE* %fp) local_unnamed_addr #1 {
entry:
  %call = tail call i32 @write_gauge_info_item(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.1, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2.2, i64 0, i64 0), i32 0, i32 0) #32
  %call1 = tail call i32 @write_gauge_info_item(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.1, i64 0, i64 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @gauge_action_description, i64 0, i64 0), i32 0, i32 0) #32
  %call2 = tail call i32 @write_gauge_info_item(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* bitcast (i32* @gauge_action_nloops to i8*), i32 0, i32 0) #32
  %call3 = tail call i32 @write_gauge_info_item(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* bitcast (i32* @gauge_action_nreps to i8*), i32 0, i32 0) #32
  %call4 = tail call i32 @write_gauge_info_item(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* bitcast (double* @beta to i8*), i32 0, i32 0) #32
  %call5 = tail call i32 @write_gauge_info_item(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* bitcast (double* @u0 to i8*), i32 0, i32 0) #32
  %call6 = tail call i32 @write_gauge_info_item(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.1, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @quark_action_description, i64 0, i64 0), i32 0, i32 0) #32
  %call7 = tail call i32 @write_gauge_info_item(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* bitcast (i32* @nflavors to i8*), i32 0, i32 0) #32
  %call8 = tail call i32 @write_gauge_info_item(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* bitcast (double* @mass to i8*), i32 0, i32 0) #32
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @scalar_mult_su3_vector(%struct.su3_vector* nocapture readonly %a, double %s, %struct.su3_vector* nocapture %c) local_unnamed_addr #10 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %real = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %mul = fmul double %0, %s
  %real5 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 0
  store double %mul, double* %real5, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 1
  %1 = load double, double* %imag, align 8, !tbaa !9
  %mul9 = fmul double %1, %s
  %imag13 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 1
  store double %mul9, double* %imag13, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !38

for.end:                                          ; preds = %for.body
  ret void
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize uwtable willreturn
define void @mult_su2_mat_vec_elem_n(%struct.su2_matrix* nocapture readonly %u, %struct.complex* nocapture %x0, %struct.complex* nocapture %x1) local_unnamed_addr #11 {
entry:
  %t0.sroa.0.0..sroa_idx = getelementptr inbounds %struct.complex, %struct.complex* %x0, i64 0, i32 0
  %t0.sroa.0.0.copyload = load double, double* %t0.sroa.0.0..sroa_idx, align 8, !tbaa.struct !10
  %t0.sroa.7.0..sroa_idx124 = getelementptr inbounds %struct.complex, %struct.complex* %x0, i64 0, i32 1
  %t0.sroa.7.0.copyload = load double, double* %t0.sroa.7.0..sroa_idx124, align 8, !tbaa.struct !12
  %t1.sroa.0.0..sroa_idx = getelementptr inbounds %struct.complex, %struct.complex* %x1, i64 0, i32 0
  %t1.sroa.0.0.copyload = load double, double* %t1.sroa.0.0..sroa_idx, align 8, !tbaa.struct !10
  %t1.sroa.7.0..sroa_idx115 = getelementptr inbounds %struct.complex, %struct.complex* %x1, i64 0, i32 1
  %t1.sroa.7.0.copyload = load double, double* %t1.sroa.7.0..sroa_idx115, align 8, !tbaa.struct !12
  %real = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 0, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 0, i32 1
  %1 = load double, double* %imag, align 8, !tbaa !9
  %2 = fneg double %1
  %neg = fmul double %t0.sroa.7.0.copyload, %2
  %3 = tail call double @llvm.fmuladd.f64(double %0, double %t0.sroa.0.0.copyload, double %neg)
  %mul19 = fmul double %t0.sroa.0.0.copyload, %1
  %4 = tail call double @llvm.fmuladd.f64(double %0, double %t0.sroa.7.0.copyload, double %mul19)
  %real24 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 1, i32 0
  %5 = load double, double* %real24, align 8, !tbaa !4
  %imag29 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 1, i32 1
  %6 = load double, double* %imag29, align 8, !tbaa !9
  %7 = fneg double %6
  %neg32 = fmul double %t1.sroa.7.0.copyload, %7
  %8 = tail call double @llvm.fmuladd.f64(double %5, double %t1.sroa.0.0.copyload, double %neg32)
  %mul44 = fmul double %t1.sroa.0.0.copyload, %6
  %9 = tail call double @llvm.fmuladd.f64(double %5, double %t1.sroa.7.0.copyload, double %mul44)
  %add = fadd double %3, %8
  store double %add, double* %t0.sroa.0.0..sroa_idx, align 8, !tbaa !4
  %add51 = fadd double %4, %9
  store double %add51, double* %t0.sroa.7.0..sroa_idx124, align 8, !tbaa !9
  %real56 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 0, i32 0
  %10 = load double, double* %real56, align 8, !tbaa !4
  %imag61 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 0, i32 1
  %11 = load double, double* %imag61, align 8, !tbaa !9
  %12 = fneg double %11
  %neg64 = fmul double %t0.sroa.7.0.copyload, %12
  %13 = tail call double @llvm.fmuladd.f64(double %10, double %t0.sroa.0.0.copyload, double %neg64)
  %mul76 = fmul double %t0.sroa.0.0.copyload, %11
  %14 = tail call double @llvm.fmuladd.f64(double %10, double %t0.sroa.7.0.copyload, double %mul76)
  %real81 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 1, i32 0
  %15 = load double, double* %real81, align 8, !tbaa !4
  %imag86 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 1, i32 1
  %16 = load double, double* %imag86, align 8, !tbaa !9
  %17 = fneg double %16
  %neg89 = fmul double %t1.sroa.7.0.copyload, %17
  %18 = tail call double @llvm.fmuladd.f64(double %15, double %t1.sroa.0.0.copyload, double %neg89)
  %mul101 = fmul double %t1.sroa.0.0.copyload, %16
  %19 = tail call double @llvm.fmuladd.f64(double %15, double %t1.sroa.7.0.copyload, double %mul101)
  %add105 = fadd double %13, %18
  store double %add105, double* %t1.sroa.0.0..sroa_idx, align 8, !tbaa !4
  %add109 = fadd double %14, %19
  store double %add109, double* %t1.sroa.7.0..sroa_idx115, align 8, !tbaa !9
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @mult_su3_na(%struct.su3_matrix* nocapture readonly %a, %struct.su3_matrix* nocapture readonly %b, %struct.su3_matrix* nocapture %c) local_unnamed_addr #10 {
entry:
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %entry, %for.inc90
  %indvars.iv172 = phi i64 [ 0, %entry ], [ %indvars.iv.next173, %for.inc90 ]
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv172, i64 0, i32 0
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv172, i64 0, i32 1
  %real26 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv172, i64 1, i32 0
  %imag31 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv172, i64 1, i32 1
  %real54 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv172, i64 2, i32 0
  %imag59 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv172, i64 2, i32 1
  br label %for.body3

for.body3:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  %0 = load double, double* %real, align 8, !tbaa !4
  %1 = load double, double* %imag, align 8, !tbaa !9
  %real13 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv, i64 0, i32 0
  %2 = load double, double* %real13, align 8, !tbaa !4
  %imag18 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv, i64 0, i32 1
  %3 = load double, double* %imag18, align 8, !tbaa !9
  %mul = fmul double %0, %2
  %mul19 = fmul double %1, %3
  %add = fadd double %mul, %mul19
  %mul20 = fmul double %1, %2
  %mul21 = fmul double %0, %3
  %sub = fsub double %mul20, %mul21
  %4 = load double, double* %real26, align 8, !tbaa !4
  %5 = load double, double* %imag31, align 8, !tbaa !9
  %real36 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv, i64 1, i32 0
  %6 = load double, double* %real36, align 8, !tbaa !4
  %imag41 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv, i64 1, i32 1
  %7 = load double, double* %imag41, align 8, !tbaa !9
  %mul42 = fmul double %4, %6
  %add43 = fadd double %add, %mul42
  %mul44 = fmul double %5, %7
  %add45 = fadd double %add43, %mul44
  %mul46 = fmul double %4, %7
  %sub47 = fsub double %sub, %mul46
  %mul48 = fmul double %5, %6
  %add49 = fadd double %mul48, %sub47
  %8 = load double, double* %real54, align 8, !tbaa !4
  %9 = load double, double* %imag59, align 8, !tbaa !9
  %real64 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv, i64 2, i32 0
  %10 = load double, double* %real64, align 8, !tbaa !4
  %imag69 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv, i64 2, i32 1
  %11 = load double, double* %imag69, align 8, !tbaa !9
  %mul70 = fmul double %8, %10
  %add71 = fadd double %add45, %mul70
  %mul72 = fmul double %9, %11
  %add73 = fadd double %add71, %mul72
  %mul74 = fmul double %8, %11
  %sub75 = fsub double %add49, %mul74
  %mul76 = fmul double %9, %10
  %add77 = fadd double %mul76, %sub75
  %real83 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv172, i64 %indvars.iv, i32 0
  store double %add73, double* %real83, align 8, !tbaa !4
  %imag89 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv172, i64 %indvars.iv, i32 1
  store double %add77, double* %imag89, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc90, label %for.body3, !llvm.loop !39

for.inc90:                                        ; preds = %for.body3
  %indvars.iv.next173 = add nuw nsw i64 %indvars.iv172, 1
  %exitcond174.not = icmp eq i64 %indvars.iv.next173, 3
  br i1 %exitcond174.not, label %for.end92, label %for.cond1.preheader, !llvm.loop !40

for.end92:                                        ; preds = %for.inc90
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @make_loop_table() local_unnamed_addr #1 {
entry:
  %perm = alloca [8 x i32], align 16
  %pp = alloca [8 x i32], align 16
  %ir = alloca [4 x i32], align 16
  %chr = alloca i32, align 4
  %vec = alloca [6 x i32], align 16
  %0 = bitcast [8 x i32]* %perm to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #31
  %1 = bitcast [8 x i32]* %pp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #31
  %2 = bitcast [4 x i32]* %ir to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #31
  %3 = bitcast i32* %chr to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #31
  %4 = bitcast [6 x i32]* %vec to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #31
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(12) bitcast ([3 x i32]* @loop_num to i8*), i8 0, i64 12, i1 false)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(24) bitcast ([3 x [1 x double]]* @loop_coeff to i8*), i8 0, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(12) bitcast ([3 x i32]* @loop_length to i8*), i8* noundef nonnull align 4 dereferenceable(12) bitcast ([3 x i32]* @make_loop_table.loop_length_in to i8*), i64 12, i1 false)
  store double 1.000000e+00, double* getelementptr inbounds ([3 x [1 x double]], [3 x [1 x double]]* @loop_coeff, i64 0, i64 0, i64 0), align 16, !tbaa !11
  %5 = load double, double* @u0, align 8, !tbaa !11
  %mul = fmul double %5, 2.000000e+01
  %mul15 = fmul double %5, %mul
  %div = fdiv double -1.000000e+00, %mul15
  %call = tail call double @log(double %5) #32
  %6 = tail call double @llvm.fmuladd.f64(double %call, double -6.264000e-01, double 1.000000e+00)
  %mul17 = fmul double %6, %div
  store double %mul17, double* getelementptr inbounds ([3 x [1 x double]], [3 x [1 x double]]* @loop_coeff, i64 0, i64 1, i64 0), align 8, !tbaa !11
  %7 = load double, double* @u0, align 8, !tbaa !11
  %mul18 = fmul double %7, %7
  %div19 = fdiv double 1.000000e+00, %mul18
  %mul20 = fmul double %div19, 4.335000e-02
  %call21 = tail call double @log(double %7) #32
  %mul22 = fmul double %call21, %mul20
  store double %mul22, double* getelementptr inbounds ([3 x [1 x double]], [3 x [1 x double]]* @loop_coeff, i64 0, i64 2, i64 0), align 16, !tbaa !11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(36) getelementptr inbounds ([128 x i8], [128 x i8]* @gauge_action_description, i64 0, i64 0), i8* noundef nonnull align 1 dereferenceable(36) getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13, i64 0, i64 0), i64 36, i1 false) #32
  %8 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp24 = icmp eq i32 %8, 0
  br i1 %cmp24, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %puts301 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([34 x i8], [34 x i8]* @str.15, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %arrayidx31 = getelementptr inbounds [8 x i32], [8 x i32]* %perm, i64 0, i64 0
  %arrayidx36 = getelementptr inbounds [8 x i32], [8 x i32]* %perm, i64 0, i64 1
  %arrayidx41 = getelementptr inbounds [8 x i32], [8 x i32]* %perm, i64 0, i64 2
  %arrayidx46 = getelementptr inbounds [8 x i32], [8 x i32]* %perm, i64 0, i64 3
  %arrayidx74 = getelementptr inbounds [4 x i32], [4 x i32]* %ir, i64 0, i64 0
  %arrayidx79 = getelementptr inbounds [4 x i32], [4 x i32]* %ir, i64 0, i64 1
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %ir, i64 0, i64 2
  %arrayidx89 = getelementptr inbounds [4 x i32], [4 x i32]* %ir, i64 0, i64 3
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %vec, i64 0, i64 0
  br label %for.body28

for.body28:                                       ; preds = %if.end, %for.inc206
  %indvar = phi i64 [ 0, %if.end ], [ %indvar.next, %for.inc206 ]
  %arrayidx30 = getelementptr inbounds [3 x i32], [3 x i32]* @loop_length, i64 0, i64 %indvar
  %9 = load i32, i32* %arrayidx30, align 4, !tbaa !13
  %cmp120317 = icmp sgt i32 %9, 0
  %arrayidx172 = getelementptr inbounds [3 x i32], [3 x i32]* @loop_num, i64 0, i64 %indvar
  store i32 0, i32* %arrayidx31, align 16, !tbaa !13
  %10 = zext i32 %9 to i64
  %11 = shl nuw nsw i64 %10, 2
  br label %for.body35

for.body35:                                       ; preds = %for.body28, %for.inc202
  %count.0339 = phi i32 [ 0, %for.body28 ], [ %count.9, %for.inc202 ]
  %storemerge338 = phi i32 [ 0, %for.body28 ], [ %inc204, %for.inc202 ]
  store i32 0, i32* %arrayidx36, align 4, !tbaa !13
  br label %for.body40

for.body40:                                       ; preds = %for.body35, %for.inc198
  %count.1337 = phi i32 [ %count.0339, %for.body35 ], [ %count.9, %for.inc198 ]
  %storemerge293336 = phi i32 [ 0, %for.body35 ], [ %inc200, %for.inc198 ]
  %cmp53.not = icmp eq i32 %storemerge338, %storemerge293336
  store i32 0, i32* %arrayidx41, align 8, !tbaa !13
  br label %for.body45

for.body45:                                       ; preds = %for.body40, %for.inc194
  %count.2335 = phi i32 [ %count.1337, %for.body40 ], [ %count.9, %for.inc194 ]
  %storemerge294334 = phi i32 [ 0, %for.body40 ], [ %inc196, %for.inc194 ]
  %cmp56.not = icmp eq i32 %storemerge338, %storemerge294334
  %or.cond = select i1 %cmp53.not, i1 true, i1 %cmp56.not
  %cmp64.not = icmp eq i32 %storemerge293336, %storemerge294334
  store i32 0, i32* %arrayidx46, align 4, !tbaa !13
  br label %for.body50

for.body50:                                       ; preds = %for.body45, %for.inc190
  %count.3333 = phi i32 [ %count.2335, %for.body45 ], [ %count.9, %for.inc190 ]
  %storemerge295332 = phi i32 [ 0, %for.body45 ], [ %inc192, %for.inc190 ]
  %cmp60.not = icmp eq i32 %storemerge338, %storemerge295332
  %or.cond302 = select i1 %or.cond, i1 true, i1 %cmp60.not
  %or.cond303 = select i1 %or.cond302, i1 true, i1 %cmp64.not
  %cmp68.not = icmp eq i32 %storemerge293336, %storemerge295332
  %or.cond304 = select i1 %or.cond303, i1 true, i1 %cmp68.not
  %cmp72.not = icmp eq i32 %storemerge294334, %storemerge295332
  %or.cond305 = select i1 %or.cond304, i1 true, i1 %cmp72.not
  br i1 %or.cond305, label %for.inc190, label %if.then73

if.then73:                                        ; preds = %for.body50
  store i32 0, i32* %arrayidx74, align 16, !tbaa !13
  br label %for.body78

for.body78:                                       ; preds = %if.then73, %for.inc185
  %count.4331 = phi i32 [ %count.3333, %if.then73 ], [ %count.8, %for.inc185 ]
  %cmp77 = phi i1 [ true, %if.then73 ], [ false, %for.inc185 ]
  %storemerge296330 = phi i32 [ 1, %if.then73 ], [ 2, %for.inc185 ]
  store i32 0, i32* %arrayidx79, align 4, !tbaa !13
  br label %for.body83

for.body83:                                       ; preds = %for.body78, %for.inc181
  %count.5329 = phi i32 [ %count.4331, %for.body78 ], [ %count.8, %for.inc181 ]
  %cmp82 = phi i1 [ true, %for.body78 ], [ false, %for.inc181 ]
  %storemerge297328 = phi i32 [ 1, %for.body78 ], [ 2, %for.inc181 ]
  store i32 0, i32* %arrayidx84, align 8, !tbaa !13
  br label %for.body88

for.body88:                                       ; preds = %for.body83, %for.inc177
  %count.6327 = phi i32 [ %count.5329, %for.body83 ], [ %count.8, %for.inc177 ]
  %cmp87 = phi i1 [ true, %for.body83 ], [ false, %for.inc177 ]
  %storemerge298326 = phi i32 [ 1, %for.body83 ], [ 2, %for.inc177 ]
  store i32 0, i32* %arrayidx89, align 4, !tbaa !13
  br label %for.cond94.preheader

for.cond94.preheader:                             ; preds = %for.body88, %if.end170
  %count.7325 = phi i32 [ %count.6327, %for.body88 ], [ %count.8, %if.end170 ]
  %cmp92 = phi i1 [ true, %for.body88 ], [ false, %if.end170 ]
  %storemerge299324 = phi i32 [ 1, %for.body88 ], [ 2, %if.end170 ]
  br label %for.body96

for.cond119.preheader:                            ; preds = %if.end109
  br i1 %cmp120317, label %for.body121, label %for.end132

for.body96:                                       ; preds = %for.cond94.preheader, %if.end109
  %indvars.iv344 = phi i64 [ 0, %for.cond94.preheader ], [ %indvars.iv.next345, %if.end109 ]
  %arrayidx98 = getelementptr inbounds [8 x i32], [8 x i32]* %perm, i64 0, i64 %indvars.iv344
  %12 = load i32, i32* %arrayidx98, align 4, !tbaa !13
  %arrayidx100 = getelementptr inbounds [8 x i32], [8 x i32]* %pp, i64 0, i64 %indvars.iv344
  store i32 %12, i32* %arrayidx100, align 4, !tbaa !13
  %arrayidx102 = getelementptr inbounds [4 x i32], [4 x i32]* %ir, i64 0, i64 %indvars.iv344
  %13 = load i32, i32* %arrayidx102, align 4, !tbaa !13
  %cmp103 = icmp eq i32 %13, 1
  br i1 %cmp103, label %if.then104, label %if.end109

if.then104:                                       ; preds = %for.body96
  %sub = sub nsw i32 7, %12
  store i32 %sub, i32* %arrayidx100, align 4, !tbaa !13
  br label %if.end109

if.end109:                                        ; preds = %if.then104, %for.body96
  %14 = phi i32 [ %sub, %if.then104 ], [ %12, %for.body96 ]
  %sub112 = sub nsw i32 7, %14
  %15 = sub nuw nsw i64 7, %indvars.iv344
  %arrayidx115 = getelementptr inbounds [8 x i32], [8 x i32]* %pp, i64 0, i64 %15
  store i32 %sub112, i32* %arrayidx115, align 4, !tbaa !13
  %indvars.iv.next345 = add nuw nsw i64 %indvars.iv344, 1
  %exitcond347.not = icmp eq i64 %indvars.iv.next345, 4
  br i1 %exitcond347.not, label %for.cond119.preheader, label %for.body96, !llvm.loop !41

for.body121:                                      ; preds = %for.cond119.preheader, %for.body121
  %indvars.iv348 = phi i64 [ %indvars.iv.next349, %for.body121 ], [ 0, %for.cond119.preheader ]
  %arrayidx125 = getelementptr inbounds [3 x [6 x i32]], [3 x [6 x i32]]* @make_loop_table.loop_ind, i64 0, i64 %indvar, i64 %indvars.iv348
  %16 = load i32, i32* %arrayidx125, align 4, !tbaa !13
  %idxprom126 = sext i32 %16 to i64
  %arrayidx127 = getelementptr inbounds [8 x i32], [8 x i32]* %pp, i64 0, i64 %idxprom126
  %17 = load i32, i32* %arrayidx127, align 4, !tbaa !13
  %arrayidx129 = getelementptr inbounds [6 x i32], [6 x i32]* %vec, i64 0, i64 %indvars.iv348
  store i32 %17, i32* %arrayidx129, align 4, !tbaa !13
  %indvars.iv.next349 = add nuw nsw i64 %indvars.iv348, 1
  %exitcond350.not = icmp eq i64 %indvars.iv.next349, %10
  br i1 %exitcond350.not, label %for.end132, label %for.body121, !llvm.loop !42

for.end132:                                       ; preds = %for.body121, %for.cond119.preheader
  call void @char_num(i32* nonnull %arraydecay, i32* nonnull %chr, i32 %9) #34
  %18 = load i32, i32* %chr, align 4
  %cmp134319 = icmp sgt i32 %count.7325, 0
  br i1 %cmp134319, label %for.body135.preheader, label %if.then145

for.body135.preheader:                            ; preds = %for.end132
  %wide.trip.count353 = zext i32 %count.7325 to i64
  br label %for.body135

for.body135:                                      ; preds = %for.body135.preheader, %for.body135
  %indvars.iv351 = phi i64 [ 0, %for.body135.preheader ], [ %indvars.iv.next352, %for.body135 ]
  %flag.0321 = phi i32 [ 0, %for.body135.preheader ], [ %spec.select, %for.body135 ]
  %arrayidx137 = getelementptr inbounds [16 x i32], [16 x i32]* @loop_char, i64 0, i64 %indvars.iv351
  %19 = load i32, i32* %arrayidx137, align 4, !tbaa !13
  %cmp138 = icmp eq i32 %18, %19
  %spec.select = select i1 %cmp138, i32 1, i32 %flag.0321
  %indvars.iv.next352 = add nuw nsw i64 %indvars.iv351, 1
  %exitcond354.not = icmp eq i64 %indvars.iv.next352, %wide.trip.count353
  br i1 %exitcond354.not, label %for.end143, label %for.body135, !llvm.loop !43

for.end143:                                       ; preds = %for.body135
  %cmp144 = icmp eq i32 %spec.select, 0
  br i1 %cmp144, label %if.then145, label %if.end163

if.then145:                                       ; preds = %for.end132, %for.end143
  %idxprom146 = sext i32 %count.7325 to i64
  %arrayidx147 = getelementptr inbounds [16 x i32], [16 x i32]* @loop_char, i64 0, i64 %idxprom146
  store i32 %18, i32* %arrayidx147, align 4, !tbaa !13
  br i1 %cmp120317, label %for.body150.preheader, label %for.end161

for.body150.preheader:                            ; preds = %if.then145
  %20 = mul nsw i64 %idxprom146, 6
  %scevgep355 = getelementptr [3 x [16 x [6 x i32]]], [3 x [16 x [6 x i32]]]* @loop_table, i64 0, i64 %indvar, i64 0, i64 %20
  %scevgep355356 = bitcast i32* %scevgep355 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %scevgep355356, i8* nonnull align 16 %4, i64 %11, i1 false)
  br label %for.end161

for.end161:                                       ; preds = %for.body150.preheader, %if.then145
  %inc162 = add nsw i32 %count.7325, 1
  br label %if.end163

if.end163:                                        ; preds = %for.end161, %for.end143
  %count.8 = phi i32 [ %inc162, %for.end161 ], [ %count.7325, %for.end143 ]
  %cmp164 = icmp sgt i32 %count.8, 16
  br i1 %cmp164, label %if.then165, label %if.end170

if.then165:                                       ; preds = %if.end163
  %21 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp166 = icmp eq i32 %21, 0
  br i1 %cmp166, label %if.then167, label %if.end169

if.then167:                                       ; preds = %if.then165
  %puts300 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @str.14, i64 0, i64 0))
  br label %if.end169

if.end169:                                        ; preds = %if.then167, %if.then165
  tail call void @exit(i32 0) #33
  unreachable

if.end170:                                        ; preds = %if.end163
  store i32 %count.8, i32* %arrayidx172, align 4, !tbaa !13
  store i32 %storemerge299324, i32* %arrayidx89, align 4, !tbaa !13
  br i1 %cmp92, label %for.cond94.preheader, label %for.inc177, !llvm.loop !44

for.inc177:                                       ; preds = %if.end170
  store i32 %storemerge298326, i32* %arrayidx84, align 8, !tbaa !13
  br i1 %cmp87, label %for.body88, label %for.inc181, !llvm.loop !45

for.inc181:                                       ; preds = %for.inc177
  store i32 %storemerge297328, i32* %arrayidx79, align 4, !tbaa !13
  br i1 %cmp82, label %for.body83, label %for.inc185, !llvm.loop !46

for.inc185:                                       ; preds = %for.inc181
  store i32 %storemerge296330, i32* %arrayidx74, align 16, !tbaa !13
  br i1 %cmp77, label %for.body78, label %for.inc190, !llvm.loop !47

for.inc190:                                       ; preds = %for.inc185, %for.body50
  %count.9 = phi i32 [ %count.3333, %for.body50 ], [ %count.8, %for.inc185 ]
  %inc192 = add nuw nsw i32 %storemerge295332, 1
  store i32 %inc192, i32* %arrayidx46, align 4, !tbaa !13
  %exitcond360.not = icmp eq i32 %inc192, 4
  br i1 %exitcond360.not, label %for.inc194, label %for.body50, !llvm.loop !48

for.inc194:                                       ; preds = %for.inc190
  %inc196 = add nuw nsw i32 %storemerge294334, 1
  store i32 %inc196, i32* %arrayidx41, align 8, !tbaa !13
  %exitcond361.not = icmp eq i32 %inc196, 4
  br i1 %exitcond361.not, label %for.inc198, label %for.body45, !llvm.loop !49

for.inc198:                                       ; preds = %for.inc194
  %inc200 = add nuw nsw i32 %storemerge293336, 1
  store i32 %inc200, i32* %arrayidx36, align 4, !tbaa !13
  %exitcond362.not = icmp eq i32 %inc200, 4
  br i1 %exitcond362.not, label %for.inc202, label %for.body40, !llvm.loop !50

for.inc202:                                       ; preds = %for.inc198
  %inc204 = add nuw nsw i32 %storemerge338, 1
  store i32 %inc204, i32* %arrayidx31, align 16, !tbaa !13
  %exitcond363.not = icmp eq i32 %inc204, 4
  br i1 %exitcond363.not, label %for.inc206, label %for.body35, !llvm.loop !51

for.inc206:                                       ; preds = %for.inc202
  %indvar.next = add nuw nsw i64 %indvar, 1
  %exitcond364.not = icmp eq i64 %indvar.next, 3
  br i1 %exitcond364.not, label %for.end208, label %for.body28, !llvm.loop !52

for.end208:                                       ; preds = %for.inc206
  %22 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp209 = icmp eq i32 %22, 0
  br i1 %cmp209, label %if.then210, label %for.body218.preheader

if.then210:                                       ; preds = %for.end208
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([54 x i8], [54 x i8]* @str.16, i64 0, i64 0))
  %.pre367.pre = load i32, i32* @this_node, align 4, !tbaa !13
  br label %for.body218.preheader

for.body218.preheader:                            ; preds = %if.then210, %for.end208
  %.ph = phi i32 [ %22, %for.end208 ], [ %.pre367.pre, %if.then210 ]
  br label %for.body218

for.body218:                                      ; preds = %for.body218.preheader, %for.inc229
  %23 = phi i32 [ %27, %for.inc229 ], [ %.ph, %for.body218.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc229 ], [ 0, %for.body218.preheader ]
  %cmp219 = icmp eq i32 %23, 0
  br i1 %cmp219, label %if.then220, label %for.inc229

if.then220:                                       ; preds = %for.body218
  %arrayidx224 = getelementptr inbounds [3 x [1 x double]], [3 x [1 x double]]* @loop_coeff, i64 0, i64 %indvars.iv, i64 0
  %24 = load double, double* %arrayidx224, align 8, !tbaa !11
  %arrayidx226 = getelementptr inbounds [3 x i32], [3 x i32]* @loop_num, i64 0, i64 %indvars.iv
  %25 = load i32, i32* %arrayidx226, align 4, !tbaa !13
  %26 = trunc i64 %indvars.iv to i32
  %call227 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4.17, i64 0, i64 0), i32 %26, i32 0, double %24, i32 %25) #34
  %.pre = load i32, i32* @this_node, align 4, !tbaa !13
  br label %for.inc229

for.inc229:                                       ; preds = %for.body218, %if.then220
  %27 = phi i32 [ %23, %for.body218 ], [ %.pre, %if.then220 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end234, label %for.body218, !llvm.loop !53

for.end234:                                       ; preds = %for.inc229
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #31
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #12

; Function Attrs: mustprogress nofree nounwind optsize willreturn
declare double @log(double) local_unnamed_addr #9

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @char_num(i32* nocapture readonly %dig, i32* nocapture %chr, i32 %length) local_unnamed_addr #4 {
entry:
  %bdig = alloca [6 x i32], align 16
  %0 = bitcast [6 x i32]* %bdig to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #31
  %sub = add i32 %length, -1
  %cmp149 = icmp sgt i32 %length, 1
  br i1 %cmp149, label %for.body, label %for.end.thread

for.end.thread:                                   ; preds = %entry
  %idxprom164 = sext i32 %sub to i64
  %arrayidx165 = getelementptr inbounds i32, i32* %dig, i64 %idxprom164
  %1 = load i32, i32* %arrayidx165, align 4, !tbaa !13
  store i32 %1, i32* %chr, align 4, !tbaa !13
  br label %for.cond27.preheader

for.body:                                         ; preds = %entry, %for.body
  %tenl.0151 = phi i32 [ %mul, %for.body ], [ 1, %entry ]
  %j.0150 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %mul = mul nsw i32 %tenl.0151, 10
  %inc = add nuw nsw i32 %j.0150, 1
  %exitcond162.not = icmp eq i32 %inc, %sub
  br i1 %exitcond162.not, label %for.end, label %for.body, !llvm.loop !54

for.end:                                          ; preds = %for.body
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds i32, i32* %dig, i64 %idxprom
  %2 = load i32, i32* %arrayidx, align 4, !tbaa !13
  store i32 %2, i32* %chr, align 4, !tbaa !13
  br i1 %cmp149, label %for.body5.preheader, label %for.cond27.preheader

for.body5.preheader:                              ; preds = %for.end
  %3 = add nsw i32 %length, -2
  %4 = zext i32 %3 to i64
  br label %for.body5

for.body5:                                        ; preds = %for.body5.preheader, %for.body5
  %5 = phi i32 [ %2, %for.body5.preheader ], [ %add, %for.body5 ]
  %indvars.iv160 = phi i64 [ %4, %for.body5.preheader ], [ %indvars.iv.next161, %for.body5 ]
  %mul6 = mul nsw i32 %5, 10
  %arrayidx8 = getelementptr inbounds i32, i32* %dig, i64 %indvars.iv160
  %6 = load i32, i32* %arrayidx8, align 4, !tbaa !13
  %add = add nsw i32 %mul6, %6
  store i32 %add, i32* %chr, align 4, !tbaa !13
  %cmp4 = icmp sgt i64 %indvars.iv160, 0
  %indvars.iv.next161 = add nsw i64 %indvars.iv160, -1
  br i1 %cmp4, label %for.body5, label %for.end10, !llvm.loop !55

for.end10:                                        ; preds = %for.body5
  br i1 %cmp149, label %for.body14.preheader, label %for.cond27.preheader

for.body14.preheader:                             ; preds = %for.end10
  %7 = zext i32 %sub to i64
  br label %for.body14

for.cond27.preheader:                             ; preds = %if.end, %for.end, %for.end.thread, %for.end10
  %tenl.0.lcssa166171 = phi i32 [ %mul, %for.end10 ], [ 1, %for.end.thread ], [ %mul, %for.end ], [ %mul, %if.end ]
  %idxprom167170 = phi i64 [ %idxprom, %for.end10 ], [ %idxprom164, %for.end.thread ], [ %idxprom, %for.end ], [ %idxprom, %if.end ]
  %8 = phi i32 [ %add, %for.end10 ], [ %1, %for.end.thread ], [ %2, %for.end ], [ %11, %if.end ]
  %cmp28142 = icmp sgt i32 %length, 0
  br i1 %cmp28142, label %for.body29.preheader, label %for.end39

for.body29.preheader:                             ; preds = %for.cond27.preheader
  %wide.trip.count = zext i32 %length to i64
  br label %for.body29

for.body14:                                       ; preds = %for.body14.preheader, %if.end
  %9 = phi i32 [ %add, %for.body14.preheader ], [ %11, %if.end ]
  %indvars.iv158 = phi i64 [ %7, %for.body14.preheader ], [ %indvars.iv.next159, %if.end ]
  %old.0146 = phi i32 [ %add, %for.body14.preheader ], [ %add22, %if.end ]
  %arrayidx16 = getelementptr inbounds i32, i32* %dig, i64 %indvars.iv158
  %10 = load i32, i32* %arrayidx16, align 4, !tbaa !13
  %mul17 = mul nsw i32 %10, %mul
  %sub18 = sub nsw i32 %old.0146, %mul17
  %mul19 = mul nsw i32 %sub18, 10
  %add22 = add nsw i32 %mul19, %10
  %cmp23 = icmp slt i32 %add22, %9
  br i1 %cmp23, label %if.then, label %if.end

if.then:                                          ; preds = %for.body14
  store i32 %add22, i32* %chr, align 4, !tbaa !13
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body14
  %11 = phi i32 [ %add22, %if.then ], [ %9, %for.body14 ]
  %cmp13 = icmp sgt i64 %indvars.iv158, 1
  %indvars.iv.next159 = add nsw i64 %indvars.iv158, -1
  br i1 %cmp13, label %for.body14, label %for.cond27.preheader, !llvm.loop !56

for.body29:                                       ; preds = %for.body29.preheader, %for.body29
  %indvars.iv156 = phi i64 [ 0, %for.body29.preheader ], [ %indvars.iv.next157, %for.body29 ]
  %j.3143 = phi i32 [ 0, %for.body29.preheader ], [ %inc38, %for.body29 ]
  %12 = xor i32 %j.3143, -1
  %sub31 = add i32 %12, %length
  %idxprom32 = sext i32 %sub31 to i64
  %arrayidx33 = getelementptr inbounds i32, i32* %dig, i64 %idxprom32
  %13 = load i32, i32* %arrayidx33, align 4, !tbaa !13
  %sub34 = sub nsw i32 7, %13
  %arrayidx36 = getelementptr inbounds [6 x i32], [6 x i32]* %bdig, i64 0, i64 %indvars.iv156
  store i32 %sub34, i32* %arrayidx36, align 4, !tbaa !13
  %indvars.iv.next157 = add nuw nsw i64 %indvars.iv156, 1
  %inc38 = add nuw nsw i32 %j.3143, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next157, %wide.trip.count
  br i1 %exitcond.not, label %for.end39.loopexit, label %for.body29, !llvm.loop !57

for.end39.loopexit:                               ; preds = %for.body29
  %arrayidx42.phi.trans.insert = getelementptr inbounds [6 x i32], [6 x i32]* %bdig, i64 0, i64 %idxprom167170
  %.pre = load i32, i32* %arrayidx42.phi.trans.insert, align 4, !tbaa !13
  br label %for.end39

for.end39:                                        ; preds = %for.end39.loopexit, %for.cond27.preheader
  %14 = phi i32 [ %.pre, %for.end39.loopexit ], [ undef, %for.cond27.preheader ]
  br i1 %cmp149, label %for.body46.preheader, label %for.end53

for.body46.preheader:                             ; preds = %for.end39
  %15 = add nsw i32 %length, -2
  %16 = zext i32 %15 to i64
  br label %for.body46

for.body46:                                       ; preds = %for.body46.preheader, %for.body46
  %indvars.iv154 = phi i64 [ %16, %for.body46.preheader ], [ %indvars.iv.next155, %for.body46 ]
  %old.1141 = phi i32 [ %14, %for.body46.preheader ], [ %add50, %for.body46 ]
  %mul47 = mul nsw i32 %old.1141, 10
  %arrayidx49 = getelementptr inbounds [6 x i32], [6 x i32]* %bdig, i64 0, i64 %indvars.iv154
  %17 = load i32, i32* %arrayidx49, align 4, !tbaa !13
  %add50 = add nsw i32 %17, %mul47
  %cmp45 = icmp sgt i64 %indvars.iv154, 0
  %indvars.iv.next155 = add nsw i64 %indvars.iv154, -1
  br i1 %cmp45, label %for.body46, label %for.end53, !llvm.loop !58

for.end53:                                        ; preds = %for.body46, %for.end39
  %old.1.lcssa = phi i32 [ %14, %for.end39 ], [ %add50, %for.body46 ]
  %cmp54 = icmp slt i32 %old.1.lcssa, %8
  br i1 %cmp54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %for.end53
  store i32 %old.1.lcssa, i32* %chr, align 4, !tbaa !13
  br label %if.end56

if.end56:                                         ; preds = %if.then55, %for.end53
  %18 = phi i32 [ %old.1.lcssa, %if.then55 ], [ %8, %for.end53 ]
  br i1 %cmp149, label %for.body60.preheader, label %for.end74

for.body60.preheader:                             ; preds = %if.end56
  %19 = zext i32 %sub to i64
  br label %for.body60

for.body60:                                       ; preds = %for.body60.preheader, %if.end71
  %20 = phi i32 [ %18, %for.body60.preheader ], [ %22, %if.end71 ]
  %indvars.iv = phi i64 [ %19, %for.body60.preheader ], [ %indvars.iv.next, %if.end71 ]
  %old.2138 = phi i32 [ %old.1.lcssa, %for.body60.preheader ], [ %add68, %if.end71 ]
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* %bdig, i64 0, i64 %indvars.iv
  %21 = load i32, i32* %arrayidx62, align 4, !tbaa !13
  %mul63 = mul nsw i32 %21, %tenl.0.lcssa166171
  %sub64 = sub nsw i32 %old.2138, %mul63
  %mul65 = mul nsw i32 %sub64, 10
  %add68 = add nsw i32 %mul65, %21
  %cmp69 = icmp slt i32 %add68, %20
  br i1 %cmp69, label %if.then70, label %if.end71

if.then70:                                        ; preds = %for.body60
  store i32 %add68, i32* %chr, align 4, !tbaa !13
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %for.body60
  %22 = phi i32 [ %add68, %if.then70 ], [ %20, %for.body60 ]
  %cmp59 = icmp sgt i64 %indvars.iv, 1
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  br i1 %cmp59, label %for.body60, label %for.end74, !llvm.loop !59

for.end74:                                        ; preds = %if.end71, %if.end56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define double @imp_gauge_action() local_unnamed_addr #1 {
entry:
  %g_action = alloca double, align 8
  %0 = bitcast double* %g_action to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc31
  %indvars.iv78 = phi i64 [ 0, %entry ], [ %indvars.iv.next79, %for.inc31 ]
  %add64.lcssa70.lcssa7576 = phi double [ 0.000000e+00, %entry ], [ %add64.lcssa70.lcssa, %for.inc31 ]
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* @loop_length, i64 0, i64 %indvars.iv78
  %1 = load i32, i32* %arrayidx, align 4, !tbaa !13
  %arrayidx3 = getelementptr inbounds [3 x i32], [3 x i32]* @loop_num, i64 0, i64 %indvars.iv78
  %arrayidx15 = getelementptr inbounds [3 x [1 x double]], [3 x [1 x double]]* @loop_coeff, i64 0, i64 %indvars.iv78, i64 0
  %2 = load i32, i32* %arrayidx3, align 4, !tbaa !13
  %cmp471 = icmp sgt i32 %2, 0
  br i1 %cmp471, label %for.body5, label %for.inc31

for.body5:                                        ; preds = %for.body, %for.inc28
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc28 ], [ 0, %for.body ]
  %add64.lcssa7072 = phi double [ %add64.lcssa, %for.inc28 ], [ %add64.lcssa70.lcssa7576, %for.body ]
  %arraydecay = getelementptr inbounds [3 x [16 x [6 x i32]]], [3 x [16 x [6 x i32]]]* @loop_table, i64 0, i64 %indvars.iv78, i64 %indvars.iv, i64 0
  tail call void @path_product(i32* nonnull %arraydecay, i32 %1) #32
  %3 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp1165 = icmp sgt i32 %3, 0
  br i1 %cmp1165, label %for.body12.preheader, label %for.inc28

for.body12.preheader:                             ; preds = %for.body5
  %4 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body12

for.body12:                                       ; preds = %for.body12.preheader, %for.body12
  %i.068 = phi i32 [ %inc26, %for.body12 ], [ 0, %for.body12.preheader ]
  %s.067 = phi %struct.site* [ %incdec.ptr, %for.body12 ], [ %4, %for.body12.preheader ]
  %add6466 = phi double [ %add, %for.body12 ], [ %add64.lcssa7072, %for.body12.preheader ]
  %tempmat1 = getelementptr inbounds %struct.site, %struct.site* %s.067, i64 0, i32 22
  %call = tail call { double, double } @trace_su3(%struct.su3_matrix* nonnull %tempmat1) #32
  %5 = extractvalue { double, double } %call, 0
  %sub = fsub double 3.000000e+00, %5
  %6 = load double, double* %arrayidx15, align 8, !tbaa !11
  %mul = fmul double %6, %sub
  %add = fadd double %add6466, %mul
  %inc26 = add nuw nsw i32 %i.068, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.067, i64 1
  %7 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp11 = icmp slt i32 %inc26, %7
  br i1 %cmp11, label %for.body12, label %for.inc28, !llvm.loop !60

for.inc28:                                        ; preds = %for.body12, %for.body5
  %add64.lcssa = phi double [ %add64.lcssa7072, %for.body5 ], [ %add, %for.body12 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %8 = load i32, i32* %arrayidx3, align 4, !tbaa !13
  %9 = sext i32 %8 to i64
  %cmp4 = icmp slt i64 %indvars.iv.next, %9
  br i1 %cmp4, label %for.body5, label %for.inc31, !llvm.loop !61

for.inc31:                                        ; preds = %for.inc28, %for.body
  %add64.lcssa70.lcssa = phi double [ %add64.lcssa70.lcssa7576, %for.body ], [ %add64.lcssa, %for.inc28 ]
  %indvars.iv.next79 = add nuw nsw i64 %indvars.iv78, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next79, 3
  br i1 %exitcond.not, label %for.end33, label %for.body, !llvm.loop !62

for.end33:                                        ; preds = %for.inc31
  store double %add64.lcssa70.lcssa, double* %g_action, align 8, !tbaa !11
  call void @g_doublesum(double* nonnull %g_action) #32
  %10 = load double, double* %g_action, align 8, !tbaa !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret double %10
}

; Function Attrs: noinline nounwind optsize uwtable
define void @imp_gauge_force(double %eps, i32 %mom_off) local_unnamed_addr #1 {
entry:
  %tmat1 = alloca %struct.su3_matrix, align 8
  %tmat2 = alloca %struct.su3_matrix, align 8
  %dirs = alloca [6 x i32], align 16
  %path_dir = alloca [6 x i32], align 16
  %0 = bitcast %struct.su3_matrix* %tmat1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %0) #31
  %1 = bitcast %struct.su3_matrix* %tmat2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %1) #31
  %2 = bitcast [6 x i32]* %dirs to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #31
  %3 = bitcast [6 x i32]* %path_dir to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #31
  %4 = load double, double* @beta, align 8, !tbaa !11
  %mul = fmul double %4, %eps
  %div = fdiv double %mul, 3.000000e+00
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %path_dir, i64 0, i64 0
  %idx.ext = sext i32 %mom_off to i64
  %.pre = load i32, i32* @sites_on_node, align 4, !tbaa !13
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc150
  %5 = phi i32 [ %.pre, %entry ], [ %47, %for.inc150 ]
  %indvars.iv300 = phi i64 [ 0, %entry ], [ %indvars.iv.next301, %for.inc150 ]
  %cmp2245 = icmp sgt i32 %5, 0
  br i1 %cmp2245, label %for.cond4.preheader.preheader, label %for.cond18.preheader

for.cond4.preheader.preheader:                    ; preds = %for.body
  %6 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.cond4.preheader

for.cond18.preheader:                             ; preds = %for.inc15, %for.body
  %7 = phi i32 [ %5, %for.body ], [ %14, %for.inc15 ]
  %8 = sub nuw nsw i64 7, %indvars.iv300
  %9 = trunc i64 %indvars.iv300 to i32
  %10 = add i32 %9, 7
  %11 = trunc i64 %indvars.iv300 to i32
  br label %for.body20

for.cond4.preheader:                              ; preds = %for.cond4.preheader.preheader, %for.inc15
  %i.0247 = phi i32 [ %inc16, %for.inc15 ], [ 0, %for.cond4.preheader.preheader ]
  %st.0246 = phi %struct.site* [ %incdec.ptr, %for.inc15 ], [ %6, %for.cond4.preheader.preheader ]
  br label %for.cond7.preheader

for.cond7.preheader:                              ; preds = %for.cond4.preheader, %for.inc12
  %indvars.iv273 = phi i64 [ 0, %for.cond4.preheader ], [ %indvars.iv.next274, %for.inc12 ]
  br label %for.body9

for.body9:                                        ; preds = %for.cond7.preheader, %for.body9
  %indvars.iv = phi i64 [ 0, %for.cond7.preheader ], [ %indvars.iv.next, %for.body9 ]
  %call = call { double, double } @cmplx(double 0.000000e+00, double 0.000000e+00) #32
  %12 = extractvalue { double, double } %call, 0
  %13 = extractvalue { double, double } %call, 1
  %tmp.sroa.0.0..sroa_idx = getelementptr inbounds %struct.site, %struct.site* %st.0246, i64 0, i32 23, i32 0, i64 %indvars.iv273, i64 %indvars.iv, i32 0
  store double %12, double* %tmp.sroa.0.0..sroa_idx, align 8, !tbaa.struct !10
  %tmp.sroa.4.0..sroa_idx154 = getelementptr inbounds %struct.site, %struct.site* %st.0246, i64 0, i32 23, i32 0, i64 %indvars.iv273, i64 %indvars.iv, i32 1
  store double %13, double* %tmp.sroa.4.0..sroa_idx154, align 8, !tbaa.struct !12
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc12, label %for.body9, !llvm.loop !63

for.inc12:                                        ; preds = %for.body9
  %indvars.iv.next274 = add nuw nsw i64 %indvars.iv273, 1
  %exitcond275.not = icmp eq i64 %indvars.iv.next274, 3
  br i1 %exitcond275.not, label %for.inc15, label %for.cond7.preheader, !llvm.loop !64

for.inc15:                                        ; preds = %for.inc12
  %inc16 = add nuw nsw i32 %i.0247, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %st.0246, i64 1
  %14 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp2 = icmp slt i32 %inc16, %14
  br i1 %cmp2, label %for.cond4.preheader, label %for.cond18.preheader, !llvm.loop !65

for.body20:                                       ; preds = %for.cond18.preheader, %for.inc131
  %15 = phi i32 [ %7, %for.cond18.preheader ], [ %42, %for.inc131 ]
  %indvars.iv297 = phi i64 [ 0, %for.cond18.preheader ], [ %indvars.iv.next298, %for.inc131 ]
  %arrayidx22 = getelementptr inbounds [3 x i32], [3 x i32]* @loop_length, i64 0, i64 %indvars.iv297
  %16 = load i32, i32* %arrayidx22, align 4, !tbaa !13
  %arrayidx25 = getelementptr inbounds [3 x i32], [3 x i32]* @loop_num, i64 0, i64 %indvars.iv297
  %cmp29248 = icmp sgt i32 %16, 0
  %sub60 = add i32 %16, -1
  %cmp77250 = icmp sgt i32 %16, 1
  %sub103 = add nsw i32 %16, -2
  %arrayidx116 = getelementptr inbounds [3 x [1 x double]], [3 x [1 x double]]* @loop_coeff, i64 0, i64 %indvars.iv297, i64 0
  %17 = load i32, i32* %arrayidx25, align 4, !tbaa !13
  %cmp26263 = icmp sgt i32 %17, 0
  br i1 %cmp26263, label %for.cond28.preheader.preheader, label %for.inc131

for.cond28.preheader.preheader:                   ; preds = %for.body20
  %wide.trip.count = zext i32 %16 to i64
  %wide.trip.count293 = zext i32 %16 to i64
  %wide.trip.count282 = zext i32 %sub60 to i64
  %wide.trip.count287 = zext i32 %sub60 to i64
  br label %for.cond28.preheader

for.cond28.preheader:                             ; preds = %for.cond28.preheader.preheader, %for.inc128
  %18 = phi i32 [ %15, %for.cond28.preheader.preheader ], [ %39, %for.inc128 ]
  %19 = phi i32 [ %17, %for.cond28.preheader.preheader ], [ %40, %for.inc128 ]
  %indvars.iv295 = phi i64 [ 0, %for.cond28.preheader.preheader ], [ %indvars.iv.next296, %for.inc128 ]
  br i1 %cmp29248, label %for.body30, label %for.inc128

for.body30:                                       ; preds = %for.cond28.preheader, %for.inc57
  %indvars.iv276 = phi i64 [ %indvars.iv.next277, %for.inc57 ], [ 0, %for.cond28.preheader ]
  %arrayidx36 = getelementptr inbounds [3 x [16 x [6 x i32]]], [3 x [16 x [6 x i32]]]* @loop_table, i64 0, i64 %indvars.iv297, i64 %indvars.iv295, i64 %indvars.iv276
  %20 = load i32, i32* %arrayidx36, align 4, !tbaa !13
  %cmp37 = icmp slt i32 %20, 4
  br i1 %cmp37, label %if.then, label %if.else

if.then:                                          ; preds = %for.body30
  %add = add nsw i32 %20, %11
  %rem = srem i32 %add, 4
  br label %for.inc57

if.else:                                          ; preds = %for.body30
  %add52 = sub i32 %10, %20
  %rem53 = srem i32 %add52, 4
  %sub54 = sub nsw i32 7, %rem53
  br label %for.inc57

for.inc57:                                        ; preds = %if.then, %if.else
  %sub54.sink = phi i32 [ %rem, %if.then ], [ %sub54, %if.else ]
  %21 = getelementptr inbounds [6 x i32], [6 x i32]* %dirs, i64 0, i64 %indvars.iv276
  store i32 %sub54.sink, i32* %21, align 4
  %indvars.iv.next277 = add nuw nsw i64 %indvars.iv276, 1
  %exitcond278.not = icmp eq i64 %indvars.iv.next277, %wide.trip.count
  br i1 %exitcond278.not, label %for.end59, label %for.body30, !llvm.loop !66

for.end59:                                        ; preds = %for.inc57
  br i1 %cmp29248, label %for.body63, label %for.inc128

for.body63:                                       ; preds = %for.end59, %for.inc125
  %22 = phi i32 [ %38, %for.inc125 ], [ %18, %for.end59 ]
  %indvars.iv289 = phi i64 [ %indvars.iv.next290, %for.inc125 ], [ 0, %for.end59 ]
  %arrayidx65 = getelementptr inbounds [6 x i32], [6 x i32]* %dirs, i64 0, i64 %indvars.iv289
  %23 = load i32, i32* %arrayidx65, align 4, !tbaa !13
  %24 = zext i32 %23 to i64
  %cmp66 = icmp eq i64 %indvars.iv300, %24
  %cmp70 = icmp eq i64 %8, %24
  %or.cond = select i1 %cmp66, i1 true, i1 %cmp70
  br i1 %or.cond, label %if.then71, label %for.inc125

if.then71:                                        ; preds = %for.body63
  %cmp74 = icmp slt i32 %23, 4
  br i1 %cmp74, label %for.cond76.preheader, label %for.cond94.preheader

for.cond76.preheader:                             ; preds = %if.then71
  %25 = add nuw nsw i64 %indvars.iv289, 1
  br i1 %cmp77250, label %for.body78, label %if.end110

for.body78:                                       ; preds = %for.cond76.preheader, %for.body78
  %indvars.iv279 = phi i64 [ %indvars.iv.next280, %for.body78 ], [ 0, %for.cond76.preheader ]
  %26 = add nuw nsw i64 %25, %indvars.iv279
  %27 = trunc i64 %26 to i32
  %rem81 = srem i32 %27, %16
  %idxprom82 = zext i32 %rem81 to i64
  %arrayidx83 = getelementptr inbounds [6 x i32], [6 x i32]* %dirs, i64 0, i64 %idxprom82
  %28 = load i32, i32* %arrayidx83, align 4, !tbaa !13
  %arrayidx85 = getelementptr inbounds [6 x i32], [6 x i32]* %path_dir, i64 0, i64 %indvars.iv279
  store i32 %28, i32* %arrayidx85, align 4, !tbaa !13
  %indvars.iv.next280 = add nuw nsw i64 %indvars.iv279, 1
  %exitcond283.not = icmp eq i64 %indvars.iv.next280, %wide.trip.count282
  br i1 %exitcond283.not, label %if.end89, label %for.body78, !llvm.loop !67

if.end89:                                         ; preds = %for.body78
  %cmp92 = icmp sgt i32 %23, 3
  br i1 %cmp92, label %for.cond94.preheader, label %if.end110

for.cond94.preheader:                             ; preds = %if.then71, %if.end89
  %29 = add nuw nsw i64 %indvars.iv289, 1
  br i1 %cmp77250, label %for.body96, label %if.end110

for.body96:                                       ; preds = %for.cond94.preheader, %for.body96
  %indvars.iv284 = phi i64 [ %indvars.iv.next285, %for.body96 ], [ 0, %for.cond94.preheader ]
  %30 = add nuw nsw i64 %29, %indvars.iv284
  %31 = trunc i64 %30 to i32
  %rem99 = srem i32 %31, %16
  %idxprom100 = zext i32 %rem99 to i64
  %arrayidx101 = getelementptr inbounds [6 x i32], [6 x i32]* %dirs, i64 0, i64 %idxprom100
  %32 = load i32, i32* %arrayidx101, align 4, !tbaa !13
  %sub102 = sub nsw i32 7, %32
  %33 = trunc i64 %indvars.iv284 to i32
  %sub104 = sub i32 %sub103, %33
  %idxprom105 = sext i32 %sub104 to i64
  %arrayidx106 = getelementptr inbounds [6 x i32], [6 x i32]* %path_dir, i64 0, i64 %idxprom105
  store i32 %sub102, i32* %arrayidx106, align 4, !tbaa !13
  %indvars.iv.next285 = add nuw nsw i64 %indvars.iv284, 1
  %exitcond288.not = icmp eq i64 %indvars.iv.next285, %wide.trip.count287
  br i1 %exitcond288.not, label %if.end110, label %for.body96, !llvm.loop !68

if.end110:                                        ; preds = %for.body96, %for.cond76.preheader, %for.cond94.preheader, %if.end89
  call void @path_product(i32* nonnull %arraydecay, i32 %sub60) #32
  %34 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp112254 = icmp sgt i32 %34, 0
  br i1 %cmp112254, label %for.body113.preheader, label %for.inc125

for.body113.preheader:                            ; preds = %if.end110
  %35 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body113

for.body113:                                      ; preds = %for.body113.preheader, %for.body113
  %i.1256 = phi i32 [ %inc120, %for.body113 ], [ 0, %for.body113.preheader ]
  %st.1255 = phi %struct.site* [ %incdec.ptr121, %for.body113 ], [ %35, %for.body113.preheader ]
  %tempmat1 = getelementptr inbounds %struct.site, %struct.site* %st.1255, i64 0, i32 22
  call void @su3_adjoint(%struct.su3_matrix* nonnull %tempmat1, %struct.su3_matrix* nonnull %tmat1) #32
  %36 = load double, double* %arrayidx116, align 8, !tbaa !11
  %staple117 = getelementptr inbounds %struct.site, %struct.site* %st.1255, i64 0, i32 23
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* nonnull %staple117, %struct.su3_matrix* nonnull %tmat1, double %36, %struct.su3_matrix* nonnull %staple117) #32
  %inc120 = add nuw nsw i32 %i.1256, 1
  %incdec.ptr121 = getelementptr inbounds %struct.site, %struct.site* %st.1255, i64 1
  %37 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp112 = icmp slt i32 %inc120, %37
  br i1 %cmp112, label %for.body113, label %for.inc125, !llvm.loop !69

for.inc125:                                       ; preds = %for.body113, %if.end110, %for.body63
  %38 = phi i32 [ %22, %for.body63 ], [ %34, %if.end110 ], [ %37, %for.body113 ]
  %indvars.iv.next290 = add nuw nsw i64 %indvars.iv289, 1
  %exitcond294.not = icmp eq i64 %indvars.iv.next290, %wide.trip.count293
  br i1 %exitcond294.not, label %for.inc128.loopexit, label %for.body63, !llvm.loop !70

for.inc128.loopexit:                              ; preds = %for.inc125
  %.pre305 = load i32, i32* %arrayidx25, align 4, !tbaa !13
  br label %for.inc128

for.inc128:                                       ; preds = %for.cond28.preheader, %for.inc128.loopexit, %for.end59
  %39 = phi i32 [ %18, %for.end59 ], [ %38, %for.inc128.loopexit ], [ %18, %for.cond28.preheader ]
  %40 = phi i32 [ %19, %for.end59 ], [ %.pre305, %for.inc128.loopexit ], [ %19, %for.cond28.preheader ]
  %indvars.iv.next296 = add nuw nsw i64 %indvars.iv295, 1
  %41 = sext i32 %40 to i64
  %cmp26 = icmp slt i64 %indvars.iv.next296, %41
  br i1 %cmp26, label %for.cond28.preheader, label %for.inc131, !llvm.loop !71

for.inc131:                                       ; preds = %for.inc128, %for.body20
  %42 = phi i32 [ %15, %for.body20 ], [ %39, %for.inc128 ]
  %indvars.iv.next298 = add nuw nsw i64 %indvars.iv297, 1
  %exitcond299.not = icmp eq i64 %indvars.iv.next298, 3
  br i1 %exitcond299.not, label %for.end133, label %for.body20, !llvm.loop !72

for.end133:                                       ; preds = %for.inc131
  %cmp135269 = icmp sgt i32 %42, 0
  br i1 %cmp135269, label %for.body136.preheader, label %for.inc150

for.body136.preheader:                            ; preds = %for.end133
  %43 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body136

for.body136:                                      ; preds = %for.body136.preheader, %for.body136
  %i.2271 = phi i32 [ %inc147, %for.body136 ], [ 0, %for.body136.preheader ]
  %st.2270 = phi %struct.site* [ %incdec.ptr148, %for.body136 ], [ %43, %for.body136.preheader ]
  %arrayidx138 = getelementptr inbounds %struct.site, %struct.site* %st.2270, i64 0, i32 8, i64 %indvars.iv300
  %staple139 = getelementptr inbounds %struct.site, %struct.site* %st.2270, i64 0, i32 23
  call void @mult_su3_na(%struct.su3_matrix* nonnull %arrayidx138, %struct.su3_matrix* nonnull %staple139, %struct.su3_matrix* nonnull %tmat1) #32
  %44 = bitcast %struct.site* %st.2270 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %44, i64 %idx.ext
  %45 = bitcast i8* %add.ptr to %struct.anti_hermitmat*
  %arrayidx141 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %45, i64 %indvars.iv300
  call void @uncompress_anti_hermitian(%struct.anti_hermitmat* %arrayidx141, %struct.su3_matrix* nonnull %tmat2) #32
  call void @scalar_mult_sub_su3_matrix(%struct.su3_matrix* nonnull %tmat2, %struct.su3_matrix* nonnull %tmat1, double %div, %struct.su3_matrix* nonnull %staple139) #32
  call void @make_anti_hermitian(%struct.su3_matrix* nonnull %staple139, %struct.anti_hermitmat* %arrayidx141) #32
  %inc147 = add nuw nsw i32 %i.2271, 1
  %incdec.ptr148 = getelementptr inbounds %struct.site, %struct.site* %st.2270, i64 1
  %46 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp135 = icmp slt i32 %inc147, %46
  br i1 %cmp135, label %for.body136, label %for.inc150, !llvm.loop !73

for.inc150:                                       ; preds = %for.body136, %for.end133
  %47 = phi i32 [ %42, %for.end133 ], [ %46, %for.body136 ]
  %indvars.iv.next301 = add nuw nsw i64 %indvars.iv300, 1
  %exitcond304.not = icmp eq i64 %indvars.iv.next301, 4
  br i1 %exitcond304.not, label %for.end152, label %for.body, !llvm.loop !74

for.end152:                                       ; preds = %for.inc150
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @g_measure() local_unnamed_addr #1 {
entry:
  %ss_plaquette = alloca double, align 8
  %st_plaquette = alloca double, align 8
  %average = alloca [1 x double], align 8
  %total_action = alloca double, align 8
  %0 = bitcast double* %ss_plaquette to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %1 = bitcast double* %st_plaquette to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #31
  %2 = bitcast [1 x double]* %average to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #31
  %3 = bitcast double* %total_action to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #31
  call void @d_plaquette(double* nonnull %ss_plaquette, double* nonnull %st_plaquette) #32
  %4 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load double, double* %ss_plaquette, align 8, !tbaa !11
  %6 = load double, double* %st_plaquette, align 8, !tbaa !11
  %call = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.18, i64 0, i64 0), double %5, double %6) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call1 = call { double, double } @ploop() #32
  %7 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp2 = icmp eq i32 %7, 0
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %8 = extractvalue { double, double } %call1, 1
  %9 = extractvalue { double, double } %call1, 0
  %call4 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.19, i64 0, i64 0), double %9, double %8) #34
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %if.end
  store double 0.000000e+00, double* %total_action, align 8, !tbaa !11
  %arrayidx20 = getelementptr inbounds [1 x double], [1 x double]* %average, i64 0, i64 0
  br label %for.body

for.body:                                         ; preds = %if.end5, %for.inc97
  %10 = phi double [ 0.000000e+00, %if.end5 ], [ %34, %for.inc97 ]
  %indvars.iv181 = phi i64 [ 0, %if.end5 ], [ %indvars.iv.next182, %for.inc97 ]
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* @loop_length, i64 0, i64 %indvars.iv181
  %11 = load i32, i32* %arrayidx, align 4, !tbaa !13
  %arrayidx9 = getelementptr inbounds [3 x i32], [3 x i32]* @loop_num, i64 0, i64 %indvars.iv181
  %arrayidx31 = getelementptr inbounds [3 x [1 x double]], [3 x [1 x double]]* @loop_coeff, i64 0, i64 %indvars.iv181, i64 0
  %cmp72171 = icmp sgt i32 %11, 0
  %12 = load i32, i32* %arrayidx9, align 4, !tbaa !13
  %cmp10174 = icmp sgt i32 %12, 0
  br i1 %cmp10174, label %for.body11.preheader, label %for.inc97

for.body11.preheader:                             ; preds = %for.body
  %13 = trunc i64 %indvars.iv181 to i32
  %wide.trip.count = zext i32 %11 to i64
  br label %for.body11

for.body11:                                       ; preds = %for.body11.preheader, %for.inc94
  %14 = phi double [ %10, %for.body11.preheader ], [ %23, %for.inc94 ]
  %indvars.iv179 = phi i64 [ 0, %for.body11.preheader ], [ %indvars.iv.next180, %for.inc94 ]
  %arraydecay = getelementptr inbounds [3 x [16 x [6 x i32]]], [3 x [16 x [6 x i32]]]* @loop_table, i64 0, i64 %indvars.iv181, i64 %indvars.iv179, i64 0
  call void @path_product(i32* nonnull %arraydecay, i32 %11) #32
  store double 0.000000e+00, double* %arrayidx20, align 8, !tbaa !11
  %15 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp22168 = icmp sgt i32 %15, 0
  br i1 %cmp22168, label %for.body23.preheader, label %for.end48

for.body23.preheader:                             ; preds = %for.body11
  %16 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body23

for.body23:                                       ; preds = %for.body23.preheader, %for.body23
  %17 = phi double [ %21, %for.body23 ], [ %14, %for.body23.preheader ]
  %i.0170 = phi i32 [ %inc47, %for.body23 ], [ 0, %for.body23.preheader ]
  %s.0169 = phi %struct.site* [ %incdec.ptr, %for.body23 ], [ %16, %for.body23.preheader ]
  %tempmat1 = getelementptr inbounds %struct.site, %struct.site* %s.0169, i64 0, i32 22
  %call25 = call { double, double } @trace_su3(%struct.su3_matrix* nonnull %tempmat1) #32
  %18 = extractvalue { double, double } %call25, 0
  %19 = load double, double* %arrayidx20, align 8, !tbaa !11
  %add = fadd double %19, %18
  store double %add, double* %arrayidx20, align 8, !tbaa !11
  %sub = fsub double 3.000000e+00, %18
  %20 = load double, double* %arrayidx31, align 8, !tbaa !11
  %21 = call double @llvm.fmuladd.f64(double %20, double %sub, double %17)
  store double %21, double* %total_action, align 8, !tbaa !11
  %inc47 = add nuw nsw i32 %i.0170, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0169, i64 1
  %22 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp22 = icmp slt i32 %inc47, %22
  br i1 %cmp22, label %for.body23, label %for.end48, !llvm.loop !75

for.end48:                                        ; preds = %for.body23, %for.body11
  %23 = phi double [ %14, %for.body11 ], [ %21, %for.body23 ]
  call void @g_vecdoublesum(double* nonnull %arrayidx20, i32 1) #32
  %24 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp50 = icmp eq i32 %24, 0
  br i1 %cmp50, label %if.end53, label %if.end70

if.end53:                                         ; preds = %for.end48
  %25 = trunc i64 %indvars.iv179 to i32
  %call52 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.20, i64 0, i64 0), i32 %13, i32 %25, i32 %11) #34
  %.pr = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp57 = icmp eq i32 %.pr, 0
  br i1 %cmp57, label %for.end65, label %if.end70

for.end65:                                        ; preds = %if.end53
  %26 = load double, double* %arrayidx20, align 8, !tbaa !11
  %27 = load i32, i32* @volume, align 4, !tbaa !13
  %conv = sitofp i32 %27 to double
  %div = fdiv double %26, %conv
  %call61 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8.21, i64 0, i64 0), double %div) #34
  %.pr164 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp66 = icmp eq i32 %.pr164, 0
  br i1 %cmp66, label %if.then68, label %if.end70

if.then68:                                        ; preds = %for.end65
  %call69 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.22, i64 0, i64 0)) #34
  br label %if.end70

if.end70:                                         ; preds = %for.end48, %if.end53, %if.then68, %for.end65
  %.pre184 = load i32, i32* @this_node, align 4, !tbaa !13
  br i1 %cmp72171, label %for.body74, label %for.end88

for.body74:                                       ; preds = %if.end70, %for.inc86
  %28 = phi i32 [ %30, %for.inc86 ], [ %.pre184, %if.end70 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc86 ], [ 0, %if.end70 ]
  %cmp75 = icmp eq i32 %28, 0
  br i1 %cmp75, label %if.then77, label %for.inc86

if.then77:                                        ; preds = %for.body74
  %arrayidx83 = getelementptr inbounds [3 x [16 x [6 x i32]]], [3 x [16 x [6 x i32]]]* @loop_table, i64 0, i64 %indvars.iv181, i64 %indvars.iv179, i64 %indvars.iv
  %29 = load i32, i32* %arrayidx83, align 4, !tbaa !13
  %call84 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10.23, i64 0, i64 0), i32 %29) #34
  %.pre = load i32, i32* @this_node, align 4, !tbaa !13
  br label %for.inc86

for.inc86:                                        ; preds = %for.body74, %if.then77
  %30 = phi i32 [ %28, %for.body74 ], [ %.pre, %if.then77 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end88, label %for.body74, !llvm.loop !76

for.end88:                                        ; preds = %for.inc86, %if.end70
  %31 = phi i32 [ %.pre184, %if.end70 ], [ %30, %for.inc86 ]
  %cmp89 = icmp eq i32 %31, 0
  br i1 %cmp89, label %if.then91, label %for.inc94

if.then91:                                        ; preds = %for.end88
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str.16.24, i64 0, i64 0))
  br label %for.inc94

for.inc94:                                        ; preds = %for.end88, %if.then91
  %indvars.iv.next180 = add nuw nsw i64 %indvars.iv179, 1
  %32 = load i32, i32* %arrayidx9, align 4, !tbaa !13
  %33 = sext i32 %32 to i64
  %cmp10 = icmp slt i64 %indvars.iv.next180, %33
  br i1 %cmp10, label %for.body11, label %for.inc97, !llvm.loop !77

for.inc97:                                        ; preds = %for.inc94, %for.body
  %34 = phi double [ %10, %for.body ], [ %23, %for.inc94 ]
  %indvars.iv.next182 = add nuw nsw i64 %indvars.iv181, 1
  %exitcond183.not = icmp eq i64 %indvars.iv.next182, 3
  br i1 %exitcond183.not, label %for.end99, label %for.body, !llvm.loop !78

for.end99:                                        ; preds = %for.inc97
  call void @g_doublesum(double* nonnull %total_action) #32
  %35 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp100 = icmp eq i32 %35, 0
  br i1 %cmp100, label %if.end106, label %if.end111

if.end106:                                        ; preds = %for.end99
  %36 = load double, double* %total_action, align 8, !tbaa !11
  %37 = load i32, i32* @volume, align 4, !tbaa !13
  %conv103 = sitofp i32 %37 to double
  %div104 = fdiv double %36, %conv103
  %call105 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.25, i64 0, i64 0), double %div104) #34
  %.pr166 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp107 = icmp eq i32 %.pr166, 0
  br i1 %cmp107, label %if.then109, label %if.end111

if.then109:                                       ; preds = %if.end106
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call110 = call i32 @fflush(%struct._IO_FILE* %38) #34
  br label %if.end111

if.end111:                                        ; preds = %for.end99, %if.then109, %if.end106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @printpath(i32* nocapture readonly %path, i32 %length) local_unnamed_addr #13 {
entry:
  %0 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.22, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp114 = icmp sgt i32 %length, 0
  br i1 %cmp114, label %for.body.preheader, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  %.pre18 = load i32, i32* @this_node, align 4, !tbaa !13
  br label %for.end

for.body.preheader:                               ; preds = %if.end
  %wide.trip.count = zext i32 %length to i64
  %.pre17 = load i32, i32* @this_node, align 4, !tbaa !13
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %1 = phi i32 [ %.pre17, %for.body.preheader ], [ %3, %for.inc ]
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %cmp2 = icmp eq i32 %1, 0
  br i1 %cmp2, label %if.then3, label %for.inc

if.then3:                                         ; preds = %for.body
  %arrayidx = getelementptr inbounds i32, i32* %path, i64 %indvars.iv
  %2 = load i32, i32* %arrayidx, align 4, !tbaa !13
  %call4 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10.23, i64 0, i64 0), i32 %2) #34
  %.pre = load i32, i32* @this_node, align 4, !tbaa !13
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then3
  %3 = phi i32 [ %1, %for.body ], [ %.pre, %if.then3 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !79

for.end:                                          ; preds = %for.inc, %if.end.for.end_crit_edge
  %4 = phi i32 [ %.pre18, %if.end.for.end_crit_edge ], [ %3, %for.inc ]
  %cmp6 = icmp eq i32 %4, 0
  br i1 %cmp6, label %if.then7, label %if.end9

if.then7:                                         ; preds = %for.end
  %call8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13.26, i64 0, i64 0), i32 %length) #34
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %for.end
  ret void
}

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @mult_su3_an(%struct.su3_matrix* nocapture readonly %a, %struct.su3_matrix* nocapture readonly %b, %struct.su3_matrix* nocapture %c) local_unnamed_addr #4 {
entry:
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 0, i32 0
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 0, i32 1
  %real17 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 0, i32 0
  %imag21 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 0, i32 1
  %real35 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 0, i32 0
  %imag39 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 0, i32 1
  %real67 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 1, i32 0
  %imag71 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 1, i32 1
  %real85 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 1, i32 0
  %imag89 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 1, i32 1
  %real103 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 1, i32 0
  %imag107 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 1, i32 1
  %real136 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 2, i32 0
  %imag140 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 2, i32 1
  %real154 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 2, i32 0
  %imag158 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 2, i32 1
  %real172 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 2, i32 0
  %imag176 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 2, i32 1
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %0 = load double, double* %real, align 8, !tbaa !4
  %1 = load double, double* %imag, align 8, !tbaa !9
  %real8 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 0, i64 %indvars.iv, i32 0
  %2 = load double, double* %real8, align 8, !tbaa !4
  %imag13 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 0, i64 %indvars.iv, i32 1
  %3 = load double, double* %imag13, align 8, !tbaa !9
  %4 = load double, double* %real17, align 8, !tbaa !4
  %5 = load double, double* %imag21, align 8, !tbaa !9
  %real26 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 1, i64 %indvars.iv, i32 0
  %6 = load double, double* %real26, align 8, !tbaa !4
  %imag31 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 1, i64 %indvars.iv, i32 1
  %7 = load double, double* %imag31, align 8, !tbaa !9
  %8 = load double, double* %real35, align 8, !tbaa !4
  %9 = load double, double* %imag39, align 8, !tbaa !9
  %real44 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 2, i64 %indvars.iv, i32 0
  %10 = load double, double* %real44, align 8, !tbaa !4
  %imag49 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 2, i64 %indvars.iv, i32 1
  %11 = load double, double* %imag49, align 8, !tbaa !9
  %mul50 = fmul double %1, %3
  %12 = tail call double @llvm.fmuladd.f64(double %0, double %2, double %mul50)
  %13 = tail call double @llvm.fmuladd.f64(double %4, double %6, double %12)
  %14 = tail call double @llvm.fmuladd.f64(double %5, double %7, double %13)
  %15 = tail call double @llvm.fmuladd.f64(double %8, double %10, double %14)
  %16 = tail call double @llvm.fmuladd.f64(double %9, double %11, double %15)
  %real55 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 0, i64 %indvars.iv, i32 0
  store double %16, double* %real55, align 8, !tbaa !4
  %17 = fneg double %1
  %neg = fmul double %2, %17
  %18 = tail call double @llvm.fmuladd.f64(double %0, double %3, double %neg)
  %19 = tail call double @llvm.fmuladd.f64(double %4, double %7, double %18)
  %neg57 = fneg double %5
  %20 = tail call double @llvm.fmuladd.f64(double %neg57, double %6, double %19)
  %21 = tail call double @llvm.fmuladd.f64(double %8, double %11, double %20)
  %neg58 = fneg double %9
  %22 = tail call double @llvm.fmuladd.f64(double %neg58, double %10, double %21)
  %imag63 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 0, i64 %indvars.iv, i32 1
  store double %22, double* %imag63, align 8, !tbaa !9
  %23 = load double, double* %real67, align 8, !tbaa !4
  %24 = load double, double* %imag71, align 8, !tbaa !9
  %25 = load double, double* %real8, align 8, !tbaa !4
  %26 = load double, double* %imag13, align 8, !tbaa !9
  %27 = load double, double* %real85, align 8, !tbaa !4
  %28 = load double, double* %imag89, align 8, !tbaa !9
  %29 = load double, double* %real26, align 8, !tbaa !4
  %30 = load double, double* %imag31, align 8, !tbaa !9
  %31 = load double, double* %real103, align 8, !tbaa !4
  %32 = load double, double* %imag107, align 8, !tbaa !9
  %33 = load double, double* %real44, align 8, !tbaa !4
  %34 = load double, double* %imag49, align 8, !tbaa !9
  %mul118 = fmul double %24, %26
  %35 = tail call double @llvm.fmuladd.f64(double %23, double %25, double %mul118)
  %36 = tail call double @llvm.fmuladd.f64(double %27, double %29, double %35)
  %37 = tail call double @llvm.fmuladd.f64(double %28, double %30, double %36)
  %38 = tail call double @llvm.fmuladd.f64(double %31, double %33, double %37)
  %39 = tail call double @llvm.fmuladd.f64(double %32, double %34, double %38)
  %real123 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 1, i64 %indvars.iv, i32 0
  store double %39, double* %real123, align 8, !tbaa !4
  %40 = fneg double %24
  %neg125 = fmul double %25, %40
  %41 = tail call double @llvm.fmuladd.f64(double %23, double %26, double %neg125)
  %42 = tail call double @llvm.fmuladd.f64(double %27, double %30, double %41)
  %neg126 = fneg double %28
  %43 = tail call double @llvm.fmuladd.f64(double %neg126, double %29, double %42)
  %44 = tail call double @llvm.fmuladd.f64(double %31, double %34, double %43)
  %neg127 = fneg double %32
  %45 = tail call double @llvm.fmuladd.f64(double %neg127, double %33, double %44)
  %imag132 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 1, i64 %indvars.iv, i32 1
  store double %45, double* %imag132, align 8, !tbaa !9
  %46 = load double, double* %real136, align 8, !tbaa !4
  %47 = load double, double* %imag140, align 8, !tbaa !9
  %48 = load double, double* %real8, align 8, !tbaa !4
  %49 = load double, double* %imag13, align 8, !tbaa !9
  %50 = load double, double* %real154, align 8, !tbaa !4
  %51 = load double, double* %imag158, align 8, !tbaa !9
  %52 = load double, double* %real26, align 8, !tbaa !4
  %53 = load double, double* %imag31, align 8, !tbaa !9
  %54 = load double, double* %real172, align 8, !tbaa !4
  %55 = load double, double* %imag176, align 8, !tbaa !9
  %56 = load double, double* %real44, align 8, !tbaa !4
  %57 = load double, double* %imag49, align 8, !tbaa !9
  %mul187 = fmul double %47, %49
  %58 = tail call double @llvm.fmuladd.f64(double %46, double %48, double %mul187)
  %59 = tail call double @llvm.fmuladd.f64(double %50, double %52, double %58)
  %60 = tail call double @llvm.fmuladd.f64(double %51, double %53, double %59)
  %61 = tail call double @llvm.fmuladd.f64(double %54, double %56, double %60)
  %62 = tail call double @llvm.fmuladd.f64(double %55, double %57, double %61)
  %real192 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 2, i64 %indvars.iv, i32 0
  store double %62, double* %real192, align 8, !tbaa !4
  %63 = fneg double %47
  %neg194 = fmul double %48, %63
  %64 = tail call double @llvm.fmuladd.f64(double %46, double %49, double %neg194)
  %65 = tail call double @llvm.fmuladd.f64(double %50, double %53, double %64)
  %neg195 = fneg double %51
  %66 = tail call double @llvm.fmuladd.f64(double %neg195, double %52, double %65)
  %67 = tail call double @llvm.fmuladd.f64(double %54, double %57, double %66)
  %neg196 = fneg double %55
  %68 = tail call double @llvm.fmuladd.f64(double %neg196, double %56, double %67)
  %imag201 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 2, i64 %indvars.iv, i32 1
  store double %68, double* %imag201, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !80

for.end:                                          ; preds = %for.body
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @setup() local_unnamed_addr #1 {
entry:
  %call = tail call i32 @initial_set() #34
  %0 = load i32, i32* @iseed, align 4, !tbaa !13
  %1 = load i32, i32* @volume, align 4, !tbaa !13
  %call1 = tail call i32 (...) bitcast (i32 ()* @mynode to i32 (...)*)() #32
  %add = add nsw i32 %call1, %1
  tail call void @initialize_prn(%struct.double_prn* nonnull @node_prn, i32 %0, i32 %add) #32
  tail call void @setup_layout() #32
  tail call void (...) bitcast (void ()* @make_lattice to void (...)*)() #32
  %2 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %puts22 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([13 x i8], [13 x i8]* @str.30, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call3 = tail call i32 @fflush(%struct._IO_FILE* %3) #34
  tail call void (...) bitcast (void ()* @make_nn_gathers to void (...)*)() #32
  %4 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp4 = icmp eq i32 %4, 0
  br i1 %cmp4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end
  %puts21 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @str.29, i64 0, i64 0))
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call8 = tail call i32 @fflush(%struct._IO_FILE* %5) #34
  tail call void @make_3n_gathers() #34
  %6 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp9 = icmp eq i32 %6, 0
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end7
  %puts20 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @str.28, i64 0, i64 0))
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end7
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call13 = tail call i32 @fflush(%struct._IO_FILE* %7) #34
  tail call void (...) bitcast (void ()* @phaseset to void (...)*)() #32
  %8 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp14 = icmp eq i32 %8, 0
  br i1 %cmp14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end12
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @str.27, i64 0, i64 0))
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end12
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call18 = tail call i32 @fflush(%struct._IO_FILE* %9) #34
  ret i32 %call
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @initial_set() local_unnamed_addr #1 {
entry:
  %prompt = alloca i32, align 4
  %0 = bitcast i32* %prompt to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #31
  %call = tail call i32 (...) bitcast (i32 ()* @mynode to i32 (...)*)() #32
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end40

if.then:                                          ; preds = %entry
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([28 x i8], [28 x i8]* @str.31, i64 0, i64 0))
  %puts61 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([42 x i8], [42 x i8]* @str.32, i64 0, i64 0))
  %puts62 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @str.33, i64 0, i64 0))
  %call4 = tail call i8* (...) bitcast (i8* ()* @machine_type to i8* (...)*)() #32
  %call5 = tail call i32 (...) bitcast (i32 ()* @numnodes to i32 (...)*)() #32
  %call6 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.28, i64 0, i64 0), i8* %call4, i32 %call5) #34
  %puts63 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([12 x i8], [12 x i8]* @str.34, i64 0, i64 0))
  %call8 = call i32 @get_prompt(i32* nonnull %prompt) #32
  %cmp9 = icmp eq i32 %call8, 0
  br i1 %cmp9, label %if.end, label %if.end36

if.end:                                           ; preds = %if.then
  %1 = load i32, i32* %prompt, align 4, !tbaa !13
  %call11 = call i32 @get_i(i32 %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9.29, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 6)) #32
  %cmp12 = icmp eq i32 %call11, 0
  br i1 %cmp12, label %if.end16, label %if.end36

if.end16:                                         ; preds = %if.end
  %2 = load i32, i32* %prompt, align 4, !tbaa !13
  %call14 = call i32 @get_i(i32 %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.30, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 1)) #32
  %cmp17 = icmp eq i32 %call14, 0
  br i1 %cmp17, label %if.end21, label %if.end36

if.end21:                                         ; preds = %if.end16
  %3 = load i32, i32* %prompt, align 4, !tbaa !13
  %call19 = call i32 @get_i(i32 %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.31, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 2)) #32
  %cmp22 = icmp eq i32 %call19, 0
  br i1 %cmp22, label %if.end26, label %if.end36

if.end26:                                         ; preds = %if.end21
  %4 = load i32, i32* %prompt, align 4, !tbaa !13
  %call24 = call i32 @get_i(i32 %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.32, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 3)) #32
  %cmp27 = icmp eq i32 %call24, 0
  br i1 %cmp27, label %if.end31, label %if.end36

if.end31:                                         ; preds = %if.end26
  %5 = load i32, i32* %prompt, align 4, !tbaa !13
  %call29 = call i32 @get_i(i32 %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13.33, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 4)) #32
  %cmp32 = icmp eq i32 %call29, 0
  br i1 %cmp32, label %if.then33, label %if.end36

if.then33:                                        ; preds = %if.end31
  %6 = load i32, i32* %prompt, align 4, !tbaa !13
  %call34 = call i32 @get_i(i32 %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 5)) #32
  br label %if.end36

if.end36:                                         ; preds = %if.then, %if.end, %if.end16, %if.end21, %if.end26, %if.then33, %if.end31
  %status.5 = phi i32 [ %call34, %if.then33 ], [ %call29, %if.end31 ], [ %call24, %if.end26 ], [ %call19, %if.end21 ], [ %call14, %if.end16 ], [ %call11, %if.end ], [ %call8, %if.then ]
  %cmp37 = icmp sgt i32 %status.5, 0
  %. = zext i1 %cmp37 to i32
  store i32 %., i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 0), align 8, !tbaa !81
  br label %if.end40

if.end40:                                         ; preds = %if.end36, %entry
  call void @broadcast_bytes(i8* bitcast (%struct.params* @par_buf to i8*), i32 640) #32
  %7 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 0), align 8, !tbaa !81
  %cmp41.not = icmp eq i32 %7, 0
  br i1 %cmp41.not, label %if.end43, label %if.then42

if.then42:                                        ; preds = %if.end40
  call void @normal_exit(i32 0) #32
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end40
  %8 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 1), align 4, !tbaa !83
  store i32 %8, i32* @nx, align 4, !tbaa !13
  %9 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 2), align 8, !tbaa !84
  store i32 %9, i32* @ny, align 4, !tbaa !13
  %10 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 3), align 4, !tbaa !85
  store i32 %10, i32* @nz, align 4, !tbaa !13
  %11 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 4), align 8, !tbaa !86
  store i32 %11, i32* @nt, align 4, !tbaa !13
  %12 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 5), align 4, !tbaa !87
  store i32 %12, i32* @iseed, align 4, !tbaa !13
  %13 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 6), align 8, !tbaa !88
  store i32 %13, i32* @nflavors, align 4, !tbaa !13
  %call44 = call i32 (...) bitcast (i32 ()* @mynode to i32 (...)*)() #32
  store i32 %call44, i32* @this_node, align 4, !tbaa !13
  %call45 = call i32 (...) bitcast (i32 ()* @numnodes to i32 (...)*)() #32
  store i32 %call45, i32* @number_of_nodes, align 4, !tbaa !13
  %14 = load i32, i32* @nx, align 4, !tbaa !13
  %15 = load i32, i32* @ny, align 4, !tbaa !13
  %mul = mul nsw i32 %15, %14
  %16 = load i32, i32* @nz, align 4, !tbaa !13
  %mul46 = mul nsw i32 %mul, %16
  %17 = load i32, i32* @nt, align 4, !tbaa !13
  %mul47 = mul nsw i32 %mul46, %17
  store i32 %mul47, i32* @volume, align 4, !tbaa !13
  store i32 0, i32* @total_iters, align 4, !tbaa !13
  %18 = load i32, i32* %prompt, align 4, !tbaa !13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #31
  ret i32 %18
}

; Function Attrs: noinline nounwind optsize uwtable
define void @make_3n_gathers() local_unnamed_addr #1 {
entry:
  %i = alloca i32, align 4
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #31
  store i32 0, i32* %i, align 4, !tbaa !13
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %call = call i32 @make_gather(void (i32, i32, i32, i32, i32*, i32, i32*, i32*, i32*, i32*)* nonnull @third_neighbor, i32* nonnull %i, i32 1, i32 0, i32 1) #32
  %1 = load i32, i32* %i, align 4, !tbaa !13
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %i, align 4, !tbaa !13
  %cmp = icmp slt i32 %1, 3
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !89

for.end:                                          ; preds = %for.body
  call void @sort_eight_neighborlists(i32 8) #32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @third_neighbor(i32 %x, i32 %y, i32 %z, i32 %t, i32* nocapture readonly %dirpt, i32 %FB, i32* nocapture %xp, i32* nocapture %yp, i32* nocapture %zp, i32* nocapture %tp) #1 {
entry:
  %cmp = icmp eq i32 %FB, 1
  %0 = load i32, i32* %dirpt, align 4, !tbaa !13
  %sub = sub nsw i32 7, %0
  %cond = select i1 %cmp, i32 %0, i32 %sub
  store i32 %x, i32* %xp, align 4, !tbaa !13
  store i32 %y, i32* %yp, align 4, !tbaa !13
  store i32 %z, i32* %zp, align 4, !tbaa !13
  store i32 %t, i32* %tp, align 4, !tbaa !13
  switch i32 %cond, label %sw.default [
    i32 0, label %sw.bb
    i32 7, label %sw.bb1
    i32 1, label %sw.bb5
    i32 6, label %sw.bb8
    i32 2, label %sw.bb13
    i32 5, label %sw.bb16
    i32 3, label %sw.bb21
    i32 4, label %sw.bb24
  ]

sw.bb:                                            ; preds = %entry
  %add = add nsw i32 %x, 3
  %1 = load i32, i32* @nx, align 4, !tbaa !13
  %rem = srem i32 %add, %1
  store i32 %rem, i32* %xp, align 4, !tbaa !13
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %2 = load i32, i32* @nx, align 4, !tbaa !13
  %mul = shl nsw i32 %2, 2
  %add2 = add i32 %x, -3
  %sub3 = add i32 %add2, %mul
  %rem4 = srem i32 %sub3, %2
  store i32 %rem4, i32* %xp, align 4, !tbaa !13
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  %add6 = add nsw i32 %y, 3
  %3 = load i32, i32* @ny, align 4, !tbaa !13
  %rem7 = srem i32 %add6, %3
  store i32 %rem7, i32* %yp, align 4, !tbaa !13
  br label %sw.epilog

sw.bb8:                                           ; preds = %entry
  %4 = load i32, i32* @ny, align 4, !tbaa !13
  %mul9 = shl nsw i32 %4, 2
  %add10 = add i32 %y, -3
  %sub11 = add i32 %add10, %mul9
  %rem12 = srem i32 %sub11, %4
  store i32 %rem12, i32* %yp, align 4, !tbaa !13
  br label %sw.epilog

sw.bb13:                                          ; preds = %entry
  %add14 = add nsw i32 %z, 3
  %5 = load i32, i32* @nz, align 4, !tbaa !13
  %rem15 = srem i32 %add14, %5
  store i32 %rem15, i32* %zp, align 4, !tbaa !13
  br label %sw.epilog

sw.bb16:                                          ; preds = %entry
  %6 = load i32, i32* @nz, align 4, !tbaa !13
  %mul17 = shl nsw i32 %6, 2
  %add18 = add i32 %z, -3
  %sub19 = add i32 %add18, %mul17
  %rem20 = srem i32 %sub19, %6
  store i32 %rem20, i32* %zp, align 4, !tbaa !13
  br label %sw.epilog

sw.bb21:                                          ; preds = %entry
  %add22 = add nsw i32 %t, 3
  %7 = load i32, i32* @nt, align 4, !tbaa !13
  %rem23 = srem i32 %add22, %7
  store i32 %rem23, i32* %tp, align 4, !tbaa !13
  br label %sw.epilog

sw.bb24:                                          ; preds = %entry
  %8 = load i32, i32* @nt, align 4, !tbaa !13
  %mul25 = shl nsw i32 %8, 2
  %add26 = add i32 %t, -3
  %sub27 = add i32 %add26, %mul25
  %rem28 = srem i32 %sub27, %8
  store i32 %rem28, i32* %tp, align 4, !tbaa !13
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([28 x i8], [28 x i8]* @str.36, i64 0, i64 0))
  tail call void @exit(i32 1) #33
  unreachable

sw.epilog:                                        ; preds = %sw.bb24, %sw.bb21, %sw.bb16, %sw.bb13, %sw.bb8, %sw.bb5, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @readin(i32 %prompt) local_unnamed_addr #1 {
entry:
  %x = alloca double, align 8
  %0 = bitcast double* %x to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %1 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end74

if.then:                                          ; preds = %entry
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([2 x i8], [2 x i8]* @str.35, i64 0, i64 0))
  %call3 = tail call i32 @get_i(i32 %prompt, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 7)) #32
  %cmp4 = icmp eq i32 %call3, 0
  br i1 %cmp4, label %if.end8, label %if.end70

if.end8:                                          ; preds = %if.then
  %call6 = tail call i32 @get_i(i32 %prompt, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 8)) #32
  %cmp9 = icmp eq i32 %call6, 0
  br i1 %cmp9, label %if.end13, label %if.end70

if.end13:                                         ; preds = %if.end8
  %call11 = tail call i32 @get_i(i32 %prompt, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 10)) #32
  %cmp14 = icmp eq i32 %call11, 0
  br i1 %cmp14, label %if.end18, label %if.end70

if.end18:                                         ; preds = %if.end13
  %call16 = tail call i32 @get_f(i32 %prompt, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0), double* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 11)) #32
  %cmp19 = icmp eq i32 %call16, 0
  br i1 %cmp19, label %if.end23, label %if.end70

if.end23:                                         ; preds = %if.end18
  %call21 = tail call i32 @get_f(i32 %prompt, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), double* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 12)) #32
  %cmp24 = icmp eq i32 %call21, 0
  br i1 %cmp24, label %if.end28, label %if.end70

if.end28:                                         ; preds = %if.end23
  %call26 = tail call i32 @get_f(i32 %prompt, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), double* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 13)) #32
  %cmp29 = icmp eq i32 %call26, 0
  br i1 %cmp29, label %if.end33, label %if.end70

if.end33:                                         ; preds = %if.end28
  %call31 = tail call i32 @get_f(i32 %prompt, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i64 0, i64 0), double* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 17)) #32
  %cmp34 = icmp eq i32 %call31, 0
  br i1 %cmp34, label %if.end38, label %if.end70

if.end38:                                         ; preds = %if.end33
  %call36 = tail call i32 @get_i(i32 %prompt, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 9)) #32
  %cmp39 = icmp eq i32 %call36, 0
  br i1 %cmp39, label %if.end43, label %if.end70

if.end43:                                         ; preds = %if.end38
  %call41 = tail call i32 @get_i(i32 %prompt, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0), i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 14)) #32
  %cmp44 = icmp eq i32 %call41, 0
  br i1 %cmp44, label %if.end48, label %if.end70

if.end48:                                         ; preds = %if.end43
  %call46 = call i32 @get_f(i32 %prompt, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0), double* nonnull %x) #32
  %cmp49 = icmp eq i32 %call46, 0
  br i1 %cmp49, label %if.end56, label %if.end70

if.end56:                                         ; preds = %if.end48
  %2 = load double, double* %x, align 8, !tbaa !11
  %mul = fmul double %2, %2
  store double %mul, double* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 15), align 8, !tbaa !90
  %call54 = call i32 @get_f(i32 %prompt, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i64 0, i64 0), double* nonnull %x) #32
  %cmp57 = icmp eq i32 %call54, 0
  br i1 %cmp57, label %if.end65, label %if.end70

if.end65:                                         ; preds = %if.end56
  %3 = load double, double* %x, align 8, !tbaa !11
  %mul59 = fmul double %3, %3
  store double %mul59, double* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 16), align 8, !tbaa !91
  %call63 = call i32 @ask_starting_lattice(i32 %prompt, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 21), i8* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 23, i64 0)) #32
  %cmp66 = icmp eq i32 %call63, 0
  br i1 %cmp66, label %if.then67, label %if.end70

if.then67:                                        ; preds = %if.end65
  %call68 = call i32 @ask_ending_lattice(i32 %prompt, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 22), i8* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 24, i64 0)) #32
  br label %if.end70

if.end70:                                         ; preds = %if.then, %if.end8, %if.end13, %if.end18, %if.end23, %if.end28, %if.end33, %if.end38, %if.end43, %if.end48, %if.end56, %if.then67, %if.end65
  %status.12 = phi i32 [ %call68, %if.then67 ], [ %call63, %if.end65 ], [ %call54, %if.end56 ], [ %call46, %if.end48 ], [ %call41, %if.end43 ], [ %call36, %if.end38 ], [ %call31, %if.end33 ], [ %call26, %if.end28 ], [ %call21, %if.end23 ], [ %call16, %if.end18 ], [ %call11, %if.end13 ], [ %call6, %if.end8 ], [ %call3, %if.then ]
  %cmp71 = icmp sgt i32 %status.12, 0
  %. = zext i1 %cmp71 to i32
  store i32 %., i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 0), align 8, !tbaa !81
  br label %if.end74

if.end74:                                         ; preds = %if.end70, %entry
  call void @broadcast_bytes(i8* bitcast (%struct.params* @par_buf to i8*), i32 640) #32
  %4 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 0), align 8, !tbaa !81
  %cmp75.not = icmp eq i32 %4, 0
  br i1 %cmp75.not, label %if.end77, label %if.then76

if.then76:                                        ; preds = %if.end74
  call void @normal_exit(i32 0) #32
  br label %if.end77

if.end77:                                         ; preds = %if.then76, %if.end74
  %5 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 7), align 4, !tbaa !92
  store i32 %5, i32* @warms, align 4, !tbaa !13
  %6 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 8), align 8, !tbaa !93
  store i32 %6, i32* @trajecs, align 4, !tbaa !13
  %7 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 9), align 4, !tbaa !94
  store i32 %7, i32* @steps, align 4, !tbaa !13
  %8 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 10), align 8, !tbaa !95
  store i32 %8, i32* @propinterval, align 4, !tbaa !13
  %9 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 14), align 8, !tbaa !96
  store i32 %9, i32* @niter, align 4, !tbaa !13
  %10 = load double, double* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 15), align 8, !tbaa !90
  store double %10, double* @rsqmin, align 8, !tbaa !11
  %11 = load double, double* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 16), align 8, !tbaa !91
  store double %11, double* @rsqprop, align 8, !tbaa !11
  %12 = load double, double* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 17), align 8, !tbaa !97
  store double %12, double* @epsilon, align 8, !tbaa !11
  %13 = load double, double* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 11), align 8, !tbaa !98
  store double %13, double* @beta, align 8, !tbaa !11
  %14 = load double, double* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 12), align 8, !tbaa !99
  store double %14, double* @mass, align 8, !tbaa !11
  %15 = load double, double* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 13), align 8, !tbaa !100
  store double %15, double* @u0, align 8, !tbaa !11
  %16 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 21), align 4, !tbaa !101
  store i32 %16, i32* @startflag, align 4, !tbaa !13
  %17 = load i32, i32* getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 22), align 8, !tbaa !102
  store i32 %17, i32* @saveflag, align 4, !tbaa !13
  %call78 = call i8* @strcpy(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([256 x i8], [256 x i8]* @startfile, i64 0, i64 0), i8* noundef nonnull dereferenceable(1) getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 23, i64 0)) #32
  %call79 = call i8* @strcpy(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([256 x i8], [256 x i8]* @savefile, i64 0, i64 0), i8* noundef nonnull dereferenceable(1) getelementptr inbounds (%struct.params, %struct.params* @par_buf, i64 0, i32 24, i64 0)) #32
  %cmp80 = icmp eq i32 %16, 10
  br i1 %cmp80, label %if.then81, label %if.end82

if.then81:                                        ; preds = %if.end77
  call void @rephase(i32 0) #32
  %.pre = load i32, i32* @startflag, align 4, !tbaa !13
  br label %if.end82

if.end82:                                         ; preds = %if.then81, %if.end77
  %18 = phi i32 [ %.pre, %if.then81 ], [ %16, %if.end77 ]
  %call83 = call %struct.gauge_file* @reload_lattice(i32 %18, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @startfile, i64 0, i64 0)) #32
  store %struct.gauge_file* %call83, %struct.gauge_file** @startlat_p, align 8, !tbaa !15
  store i32 0, i32* @valid_longlinks, align 4, !tbaa !13
  store i32 0, i32* @valid_fatlinks, align 4, !tbaa !13
  store i32 0, i32* @phases_in, align 4, !tbaa !13
  call void @rephase(i32 1) #32
  call void (...) bitcast (void ()* @make_loop_table to void (...)*)() #32
  call void (...) bitcast (void ()* @make_path_table to void (...)*)() #32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree nounwind optsize willreturn
declare i8* @strcpy(i8* noalias returned writeonly, i8* noalias nocapture readonly) local_unnamed_addr #14

; Function Attrs: noinline nounwind optsize uwtable
define void @path_product(i32* nocapture readonly %dir, i32 %length) local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv = sext i32 %0 to i64
  %call = tail call noalias align 16 i8* @calloc(i64 %conv, i64 144) #32
  %1 = bitcast i8* %call to %struct.su3_matrix*
  %call2 = tail call noalias align 16 i8* @calloc(i64 %conv, i64 144) #32
  %2 = bitcast i8* %call2 to %struct.su3_matrix*
  %3 = load i32, i32* %dir, align 4, !tbaa !13
  %cmp = icmp slt i32 %3, 4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %arrayidx6.idx = mul i32 %3, 144
  %arrayidx6.offs = add i32 %arrayidx6.idx, 112
  %sub = sub nsw i32 7, %3
  %4 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call10 = tail call %struct.msg_tag* @start_gather(i32 %arrayidx6.offs, i32 144, i32 %sub, i32 3, i8** %4) #32
  br label %if.end

if.else:                                          ; preds = %entry
  %cmp11519 = icmp sgt i32 %0, 0
  br i1 %cmp11519, label %for.body.preheader, label %if.end

for.body.preheader:                               ; preds = %if.else
  %5 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %sub15593 = sub nsw i32 7, %3
  %idxprom16594 = sext i32 %sub15593 to i64
  %arrayidx17595 = getelementptr inbounds %struct.site, %struct.site* %5, i64 0, i32 8, i64 %idxprom16594
  %tempmat1596 = getelementptr inbounds %struct.site, %struct.site* %5, i64 0, i32 22
  tail call void @su3_adjoint(%struct.su3_matrix* nonnull %arrayidx17595, %struct.su3_matrix* nonnull %tempmat1596) #32
  %exitcond575.not597 = icmp eq i32 %0, 1
  br i1 %exitcond575.not597, label %if.end, label %for.body.for.body_crit_edge, !llvm.loop !103

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %inc599 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %s.0520598 = phi %struct.site* [ %incdec.ptr, %for.body.for.body_crit_edge ], [ %5, %for.body.preheader ]
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0520598, i64 1
  %.pre = load i32, i32* %dir, align 4, !tbaa !13
  %sub15 = sub nsw i32 7, %.pre
  %idxprom16 = sext i32 %sub15 to i64
  %arrayidx17 = getelementptr inbounds %struct.site, %struct.site* %s.0520598, i64 1, i32 8, i64 %idxprom16
  %tempmat1 = getelementptr inbounds %struct.site, %struct.site* %s.0520598, i64 1, i32 22
  tail call void @su3_adjoint(%struct.su3_matrix* nonnull %arrayidx17, %struct.su3_matrix* nonnull %tempmat1) #32
  %inc = add nuw nsw i32 %inc599, 1
  %exitcond575.not = icmp eq i32 %inc, %0
  br i1 %exitcond575.not, label %if.end, label %for.body.for.body_crit_edge, !llvm.loop !103

if.end:                                           ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %if.else, %if.then
  %mtag0.0 = phi %struct.msg_tag* [ %call10, %if.then ], [ undef, %if.else ], [ undef, %for.body.preheader ], [ undef, %for.body.for.body_crit_edge ]
  %cmp19515 = icmp sgt i32 %length, 1
  br i1 %cmp19515, label %for.body21.preheader, label %for.end245

for.body21.preheader:                             ; preds = %if.end
  %wide.trip.count573 = zext i32 %length to i64
  br label %for.body21

for.body21:                                       ; preds = %for.body21.preheader, %for.inc243
  %indvars.iv567 = phi i64 [ 1, %for.body21.preheader ], [ %indvars.iv.next568, %for.inc243 ]
  %mtag0.1518 = phi %struct.msg_tag* [ %mtag0.0, %for.body21.preheader ], [ %mtag0.4, %for.inc243 ]
  %rem578 = and i64 %indvars.iv567, 1
  %cmp22.not = icmp eq i64 %rem578, 0
  %arrayidx136 = getelementptr inbounds i32, i32* %dir, i64 %indvars.iv567
  %6 = load i32, i32* %arrayidx136, align 4, !tbaa !13
  %cmp137 = icmp slt i32 %6, 4
  %7 = add nsw i64 %indvars.iv567, -1
  %arrayidx142 = getelementptr inbounds i32, i32* %dir, i64 %7
  %8 = load i32, i32* %arrayidx142, align 4, !tbaa !13
  %cmp143 = icmp slt i32 %8, 4
  br i1 %cmp22.not, label %if.else134, label %if.then24

if.then24:                                        ; preds = %for.body21
  br i1 %cmp137, label %if.then29, label %if.else77

if.then29:                                        ; preds = %if.then24
  br i1 %cmp143, label %if.then35, label %if.else54

if.then35:                                        ; preds = %if.then29
  tail call void @wait_gather(%struct.msg_tag* %mtag0.1518) #32
  %9 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp38501 = icmp sgt i32 %9, 0
  br i1 %cmp38501, label %for.body40.preheader, label %for.end53

for.body40.preheader:                             ; preds = %if.then35
  %10 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %wide.trip.count549 = zext i32 %9 to i64
  br label %for.body40

for.body40:                                       ; preds = %for.body40.preheader, %for.body40
  %indvars.iv547 = phi i64 [ 0, %for.body40.preheader ], [ %indvars.iv.next548, %for.body40 ]
  %s.1502 = phi %struct.site* [ %10, %for.body40.preheader ], [ %incdec.ptr52, %for.body40 ]
  %11 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx42 = getelementptr inbounds i8*, i8** %11, i64 %indvars.iv547
  %12 = bitcast i8** %arrayidx42 to %struct.su3_matrix**
  %13 = load %struct.su3_matrix*, %struct.su3_matrix** %12, align 8, !tbaa !15
  %14 = load i32, i32* %arrayidx136, align 4, !tbaa !13
  %idxprom46 = sext i32 %14 to i64
  %arrayidx47 = getelementptr inbounds %struct.site, %struct.site* %s.1502, i64 0, i32 8, i64 %idxprom46
  %arrayidx49 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %2, i64 %indvars.iv547
  tail call void @mult_su3_nn(%struct.su3_matrix* %13, %struct.su3_matrix* nonnull %arrayidx47, %struct.su3_matrix* %arrayidx49) #32
  %indvars.iv.next548 = add nuw nsw i64 %indvars.iv547, 1
  %incdec.ptr52 = getelementptr inbounds %struct.site, %struct.site* %s.1502, i64 1
  %exitcond550.not = icmp eq i64 %indvars.iv.next548, %wide.trip.count549
  br i1 %exitcond550.not, label %for.end53, label %for.body40, !llvm.loop !104

for.end53:                                        ; preds = %for.body40, %if.then35
  tail call void @cleanup_gather(%struct.msg_tag* %mtag0.1518) #32
  br label %if.end72

if.else54:                                        ; preds = %if.then29
  %15 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp57498 = icmp sgt i32 %15, 0
  br i1 %cmp57498, label %for.body59.preheader, label %if.end72

for.body59.preheader:                             ; preds = %if.else54
  %16 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %wide.trip.count545 = zext i32 %15 to i64
  %tempmat160581 = getelementptr inbounds %struct.site, %struct.site* %16, i64 0, i32 22
  %idxprom64582 = sext i32 %6 to i64
  %arrayidx65583 = getelementptr inbounds %struct.site, %struct.site* %16, i64 0, i32 8, i64 %idxprom64582
  tail call void @mult_su3_nn(%struct.su3_matrix* nonnull %tempmat160581, %struct.su3_matrix* nonnull %arrayidx65583, %struct.su3_matrix* %2) #32
  %exitcond546.not584 = icmp eq i32 %15, 1
  br i1 %exitcond546.not584, label %if.end72, label %for.body59.for.body59_crit_edge, !llvm.loop !105

for.body59.for.body59_crit_edge:                  ; preds = %for.body59.preheader, %for.body59.for.body59_crit_edge
  %indvars.iv.next544586 = phi i64 [ %indvars.iv.next544, %for.body59.for.body59_crit_edge ], [ 1, %for.body59.preheader ]
  %s.2499585 = phi %struct.site* [ %incdec.ptr70, %for.body59.for.body59_crit_edge ], [ %16, %for.body59.preheader ]
  %incdec.ptr70 = getelementptr inbounds %struct.site, %struct.site* %s.2499585, i64 1
  %.pre576 = load i32, i32* %arrayidx136, align 4, !tbaa !13
  %tempmat160 = getelementptr inbounds %struct.site, %struct.site* %s.2499585, i64 1, i32 22
  %idxprom64 = sext i32 %.pre576 to i64
  %arrayidx65 = getelementptr inbounds %struct.site, %struct.site* %s.2499585, i64 1, i32 8, i64 %idxprom64
  %arrayidx67 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %2, i64 %indvars.iv.next544586
  tail call void @mult_su3_nn(%struct.su3_matrix* nonnull %tempmat160, %struct.su3_matrix* nonnull %arrayidx65, %struct.su3_matrix* nonnull %arrayidx67) #32
  %indvars.iv.next544 = add nuw nsw i64 %indvars.iv.next544586, 1
  %exitcond546.not = icmp eq i64 %indvars.iv.next544, %wide.trip.count545
  br i1 %exitcond546.not, label %if.end72, label %for.body59.for.body59_crit_edge, !llvm.loop !105

if.end72:                                         ; preds = %for.body59.for.body59_crit_edge, %for.body59.preheader, %if.else54, %for.end53
  %17 = load i32, i32* %arrayidx136, align 4, !tbaa !13
  %sub75 = sub nsw i32 7, %17
  %18 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call76 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %call2, i32 144, i32 %sub75, i32 3, i8** %18) #32
  br label %for.inc243

if.else77:                                        ; preds = %if.then24
  br i1 %cmp143, label %if.then83, label %if.else101

if.then83:                                        ; preds = %if.else77
  tail call void @wait_gather(%struct.msg_tag* %mtag0.1518) #32
  %19 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp86493 = icmp sgt i32 %19, 0
  br i1 %cmp86493, label %for.body88.preheader, label %for.end96

for.body88.preheader:                             ; preds = %if.then83
  %wide.trip.count537 = zext i32 %19 to i64
  br label %for.body88

for.body88:                                       ; preds = %for.body88.preheader, %for.body88
  %indvars.iv535 = phi i64 [ 0, %for.body88.preheader ], [ %indvars.iv.next536, %for.body88 ]
  %20 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx90 = getelementptr inbounds i8*, i8** %20, i64 %indvars.iv535
  %21 = bitcast i8** %arrayidx90 to %struct.su3_matrix**
  %22 = load %struct.su3_matrix*, %struct.su3_matrix** %21, align 8, !tbaa !15
  %arrayidx92 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %1, i64 %indvars.iv535
  tail call void @su3mat_copy(%struct.su3_matrix* %22, %struct.su3_matrix* %arrayidx92) #32
  %indvars.iv.next536 = add nuw nsw i64 %indvars.iv535, 1
  %exitcond538.not = icmp eq i64 %indvars.iv.next536, %wide.trip.count537
  br i1 %exitcond538.not, label %for.end96, label %for.body88, !llvm.loop !106

for.end96:                                        ; preds = %for.body88, %if.then83
  tail call void @cleanup_gather(%struct.msg_tag* %mtag0.1518) #32
  %23 = load i32, i32* %arrayidx136, align 4, !tbaa !13
  %sub99 = sub nsw i32 7, %23
  %24 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call100 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %call, i32 144, i32 %sub99, i32 3, i8** %24) #32
  br label %if.end113

if.else101:                                       ; preds = %if.else77
  %sub111 = sub nsw i32 7, %6
  %25 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call112 = tail call %struct.msg_tag* @start_gather(i32 2912, i32 144, i32 %sub111, i32 3, i8** %25) #32
  br label %if.end113

if.end113:                                        ; preds = %if.else101, %for.end96
  %mtag0.2 = phi %struct.msg_tag* [ %call100, %for.end96 ], [ %call112, %if.else101 ]
  tail call void @wait_gather(%struct.msg_tag* %mtag0.2) #32
  %26 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp116495 = icmp sgt i32 %26, 0
  br i1 %cmp116495, label %for.body118.preheader, label %for.end132

for.body118.preheader:                            ; preds = %if.end113
  %27 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %wide.trip.count541 = zext i32 %26 to i64
  br label %for.body118

for.body118:                                      ; preds = %for.body118.preheader, %for.body118
  %indvars.iv539 = phi i64 [ 0, %for.body118.preheader ], [ %indvars.iv.next540, %for.body118 ]
  %s.4496 = phi %struct.site* [ %27, %for.body118.preheader ], [ %incdec.ptr131, %for.body118 ]
  %28 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx120 = getelementptr inbounds i8*, i8** %28, i64 %indvars.iv539
  %29 = bitcast i8** %arrayidx120 to %struct.su3_matrix**
  %30 = load %struct.su3_matrix*, %struct.su3_matrix** %29, align 8, !tbaa !15
  %31 = load i32, i32* %arrayidx136, align 4, !tbaa !13
  %sub124 = sub nsw i32 7, %31
  %idxprom125 = sext i32 %sub124 to i64
  %arrayidx126 = getelementptr inbounds %struct.site, %struct.site* %s.4496, i64 0, i32 8, i64 %idxprom125
  %arrayidx128 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %2, i64 %indvars.iv539
  tail call void @mult_su3_na(%struct.su3_matrix* %30, %struct.su3_matrix* nonnull %arrayidx126, %struct.su3_matrix* %arrayidx128) #32
  %indvars.iv.next540 = add nuw nsw i64 %indvars.iv539, 1
  %incdec.ptr131 = getelementptr inbounds %struct.site, %struct.site* %s.4496, i64 1
  %exitcond542.not = icmp eq i64 %indvars.iv.next540, %wide.trip.count541
  br i1 %exitcond542.not, label %for.end132, label %for.body118, !llvm.loop !107

for.end132:                                       ; preds = %for.body118, %if.end113
  tail call void @cleanup_gather(%struct.msg_tag* %mtag0.2) #32
  br label %for.inc243

if.else134:                                       ; preds = %for.body21
  br i1 %cmp137, label %if.then139, label %if.else193

if.then139:                                       ; preds = %if.else134
  br i1 %cmp143, label %if.then145, label %if.else163

if.then145:                                       ; preds = %if.then139
  tail call void @wait_gather(%struct.msg_tag* %mtag0.1518) #32
  %32 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp148512 = icmp sgt i32 %32, 0
  br i1 %cmp148512, label %for.body150.preheader, label %for.end162

for.body150.preheader:                            ; preds = %if.then145
  %33 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %wide.trip.count565 = zext i32 %32 to i64
  br label %for.body150

for.body150:                                      ; preds = %for.body150.preheader, %for.body150
  %indvars.iv563 = phi i64 [ 0, %for.body150.preheader ], [ %indvars.iv.next564, %for.body150 ]
  %s.5513 = phi %struct.site* [ %33, %for.body150.preheader ], [ %incdec.ptr161, %for.body150 ]
  %34 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx152 = getelementptr inbounds i8*, i8** %34, i64 %indvars.iv563
  %35 = bitcast i8** %arrayidx152 to %struct.su3_matrix**
  %36 = load %struct.su3_matrix*, %struct.su3_matrix** %35, align 8, !tbaa !15
  %37 = load i32, i32* %arrayidx136, align 4, !tbaa !13
  %idxprom156 = sext i32 %37 to i64
  %arrayidx157 = getelementptr inbounds %struct.site, %struct.site* %s.5513, i64 0, i32 8, i64 %idxprom156
  %tempmat1158 = getelementptr inbounds %struct.site, %struct.site* %s.5513, i64 0, i32 22
  tail call void @mult_su3_nn(%struct.su3_matrix* %36, %struct.su3_matrix* nonnull %arrayidx157, %struct.su3_matrix* nonnull %tempmat1158) #32
  %indvars.iv.next564 = add nuw nsw i64 %indvars.iv563, 1
  %incdec.ptr161 = getelementptr inbounds %struct.site, %struct.site* %s.5513, i64 1
  %exitcond566.not = icmp eq i64 %indvars.iv.next564, %wide.trip.count565
  br i1 %exitcond566.not, label %for.end162, label %for.body150, !llvm.loop !108

for.end162:                                       ; preds = %for.body150, %if.then145
  tail call void @cleanup_gather(%struct.msg_tag* %mtag0.1518) #32
  br label %if.end181

if.else163:                                       ; preds = %if.then139
  %38 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp166509 = icmp sgt i32 %38, 0
  br i1 %cmp166509, label %for.body168.preheader, label %if.end181

for.body168.preheader:                            ; preds = %if.else163
  %39 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %wide.trip.count561 = zext i32 %38 to i64
  %idxprom174587 = sext i32 %6 to i64
  %arrayidx175588 = getelementptr inbounds %struct.site, %struct.site* %39, i64 0, i32 8, i64 %idxprom174587
  %tempmat1176589 = getelementptr inbounds %struct.site, %struct.site* %39, i64 0, i32 22
  tail call void @mult_su3_nn(%struct.su3_matrix* %2, %struct.su3_matrix* nonnull %arrayidx175588, %struct.su3_matrix* nonnull %tempmat1176589) #32
  %exitcond562.not590 = icmp eq i32 %38, 1
  br i1 %exitcond562.not590, label %if.end181, label %for.body168.for.body168_crit_edge, !llvm.loop !109

for.body168.for.body168_crit_edge:                ; preds = %for.body168.preheader, %for.body168.for.body168_crit_edge
  %indvars.iv.next560592 = phi i64 [ %indvars.iv.next560, %for.body168.for.body168_crit_edge ], [ 1, %for.body168.preheader ]
  %s.6510591 = phi %struct.site* [ %incdec.ptr179, %for.body168.for.body168_crit_edge ], [ %39, %for.body168.preheader ]
  %incdec.ptr179 = getelementptr inbounds %struct.site, %struct.site* %s.6510591, i64 1
  %.pre577 = load i32, i32* %arrayidx136, align 4, !tbaa !13
  %arrayidx170 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %2, i64 %indvars.iv.next560592
  %idxprom174 = sext i32 %.pre577 to i64
  %arrayidx175 = getelementptr inbounds %struct.site, %struct.site* %s.6510591, i64 1, i32 8, i64 %idxprom174
  %tempmat1176 = getelementptr inbounds %struct.site, %struct.site* %s.6510591, i64 1, i32 22
  tail call void @mult_su3_nn(%struct.su3_matrix* nonnull %arrayidx170, %struct.su3_matrix* nonnull %arrayidx175, %struct.su3_matrix* nonnull %tempmat1176) #32
  %indvars.iv.next560 = add nuw nsw i64 %indvars.iv.next560592, 1
  %exitcond562.not = icmp eq i64 %indvars.iv.next560, %wide.trip.count561
  br i1 %exitcond562.not, label %if.end181, label %for.body168.for.body168_crit_edge, !llvm.loop !109

if.end181:                                        ; preds = %for.body168.for.body168_crit_edge, %for.body168.preheader, %if.else163, %for.end162
  %40 = load i32, i32* %arrayidx136, align 4, !tbaa !13
  %sub191 = sub nsw i32 7, %40
  %41 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call192 = tail call %struct.msg_tag* @start_gather(i32 2912, i32 144, i32 %sub191, i32 3, i8** %41) #32
  br label %for.inc243

if.else193:                                       ; preds = %if.else134
  br i1 %cmp143, label %if.then199, label %if.end222

if.then199:                                       ; preds = %if.else193
  tail call void @wait_gather(%struct.msg_tag* %mtag0.1518) #32
  %42 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp202504 = icmp sgt i32 %42, 0
  br i1 %cmp202504, label %for.body204.preheader, label %for.end212

for.body204.preheader:                            ; preds = %if.then199
  %wide.trip.count553 = zext i32 %42 to i64
  br label %for.body204

for.body204:                                      ; preds = %for.body204.preheader, %for.body204
  %indvars.iv551 = phi i64 [ 0, %for.body204.preheader ], [ %indvars.iv.next552, %for.body204 ]
  %43 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx206 = getelementptr inbounds i8*, i8** %43, i64 %indvars.iv551
  %44 = bitcast i8** %arrayidx206 to %struct.su3_matrix**
  %45 = load %struct.su3_matrix*, %struct.su3_matrix** %44, align 8, !tbaa !15
  %arrayidx208 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %1, i64 %indvars.iv551
  tail call void @su3mat_copy(%struct.su3_matrix* %45, %struct.su3_matrix* %arrayidx208) #32
  %indvars.iv.next552 = add nuw nsw i64 %indvars.iv551, 1
  %exitcond554.not = icmp eq i64 %indvars.iv.next552, %wide.trip.count553
  br i1 %exitcond554.not, label %for.end212, label %for.body204, !llvm.loop !110

for.end212:                                       ; preds = %for.body204, %if.then199
  tail call void @cleanup_gather(%struct.msg_tag* %mtag0.1518) #32
  %46 = load i32, i32* %arrayidx136, align 4, !tbaa !13
  br label %if.end222

if.end222:                                        ; preds = %if.else193, %for.end212
  %.sink = phi i32 [ %46, %for.end212 ], [ %6, %if.else193 ]
  %call2.sink = phi i8* [ %call, %for.end212 ], [ %call2, %if.else193 ]
  %sub220 = sub nsw i32 7, %.sink
  %47 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call221 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %call2.sink, i32 144, i32 %sub220, i32 3, i8** %47) #32
  tail call void @wait_gather(%struct.msg_tag* %call221) #32
  %48 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp225506 = icmp sgt i32 %48, 0
  br i1 %cmp225506, label %for.body227.preheader, label %for.end240

for.body227.preheader:                            ; preds = %if.end222
  %49 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %wide.trip.count557 = zext i32 %48 to i64
  br label %for.body227

for.body227:                                      ; preds = %for.body227.preheader, %for.body227
  %indvars.iv555 = phi i64 [ 0, %for.body227.preheader ], [ %indvars.iv.next556, %for.body227 ]
  %s.8507 = phi %struct.site* [ %49, %for.body227.preheader ], [ %incdec.ptr239, %for.body227 ]
  %50 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx229 = getelementptr inbounds i8*, i8** %50, i64 %indvars.iv555
  %51 = bitcast i8** %arrayidx229 to %struct.su3_matrix**
  %52 = load %struct.su3_matrix*, %struct.su3_matrix** %51, align 8, !tbaa !15
  %53 = load i32, i32* %arrayidx136, align 4, !tbaa !13
  %sub233 = sub nsw i32 7, %53
  %idxprom234 = sext i32 %sub233 to i64
  %arrayidx235 = getelementptr inbounds %struct.site, %struct.site* %s.8507, i64 0, i32 8, i64 %idxprom234
  %tempmat1236 = getelementptr inbounds %struct.site, %struct.site* %s.8507, i64 0, i32 22
  tail call void @mult_su3_na(%struct.su3_matrix* %52, %struct.su3_matrix* nonnull %arrayidx235, %struct.su3_matrix* nonnull %tempmat1236) #32
  %indvars.iv.next556 = add nuw nsw i64 %indvars.iv555, 1
  %incdec.ptr239 = getelementptr inbounds %struct.site, %struct.site* %s.8507, i64 1
  %exitcond558.not = icmp eq i64 %indvars.iv.next556, %wide.trip.count557
  br i1 %exitcond558.not, label %for.end240, label %for.body227, !llvm.loop !111

for.end240:                                       ; preds = %for.body227, %if.end222
  tail call void @cleanup_gather(%struct.msg_tag* %call221) #32
  br label %for.inc243

for.inc243:                                       ; preds = %for.end132, %if.end72, %for.end240, %if.end181
  %mtag0.4 = phi %struct.msg_tag* [ %call76, %if.end72 ], [ %mtag0.2, %for.end132 ], [ %call192, %if.end181 ], [ %call221, %for.end240 ]
  %indvars.iv.next568 = add nuw nsw i64 %indvars.iv567, 1
  %exitcond574.not = icmp eq i64 %indvars.iv.next568, %wide.trip.count573
  br i1 %exitcond574.not, label %for.end245, label %for.body21, !llvm.loop !112

for.end245:                                       ; preds = %for.inc243, %if.end
  %mtag0.1.lcssa = phi %struct.msg_tag* [ %mtag0.0, %if.end ], [ %mtag0.4, %for.inc243 ]
  %54 = and i32 %length, 1
  %cmp247 = icmp eq i32 %54, 0
  %sub250 = add nsw i32 %length, -1
  %idxprom251 = sext i32 %sub250 to i64
  %arrayidx252 = getelementptr inbounds i32, i32* %dir, i64 %idxprom251
  %55 = load i32, i32* %arrayidx252, align 4, !tbaa !13
  %cmp253 = icmp slt i32 %55, 4
  br i1 %cmp247, label %if.then249, label %if.else282

if.then249:                                       ; preds = %for.end245
  br i1 %cmp253, label %if.then255, label %if.else268

if.then255:                                       ; preds = %if.then249
  tail call void @wait_gather(%struct.msg_tag* %mtag0.1.lcssa) #32
  %56 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp258482 = icmp sgt i32 %56, 0
  br i1 %cmp258482, label %for.body260.preheader, label %for.end267

for.body260.preheader:                            ; preds = %if.then255
  %57 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %wide.trip.count = zext i32 %56 to i64
  br label %for.body260

for.body260:                                      ; preds = %for.body260.preheader, %for.body260
  %indvars.iv = phi i64 [ 0, %for.body260.preheader ], [ %indvars.iv.next, %for.body260 ]
  %s.9483 = phi %struct.site* [ %57, %for.body260.preheader ], [ %incdec.ptr266, %for.body260 ]
  %58 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx262 = getelementptr inbounds i8*, i8** %58, i64 %indvars.iv
  %59 = bitcast i8** %arrayidx262 to %struct.su3_matrix**
  %60 = load %struct.su3_matrix*, %struct.su3_matrix** %59, align 8, !tbaa !15
  %tempmat1263 = getelementptr inbounds %struct.site, %struct.site* %s.9483, i64 0, i32 22
  tail call void @su3mat_copy(%struct.su3_matrix* %60, %struct.su3_matrix* nonnull %tempmat1263) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %incdec.ptr266 = getelementptr inbounds %struct.site, %struct.site* %s.9483, i64 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end267, label %for.body260, !llvm.loop !113

for.end267:                                       ; preds = %for.body260, %if.then255
  tail call void @cleanup_gather(%struct.msg_tag* %mtag0.1.lcssa) #32
  br label %if.end316

if.else268:                                       ; preds = %if.then249
  %61 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp271485 = icmp sgt i32 %61, 0
  br i1 %cmp271485, label %for.body273.preheader, label %if.end316

for.body273.preheader:                            ; preds = %if.else268
  %62 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %wide.trip.count525 = zext i32 %61 to i64
  br label %for.body273

for.body273:                                      ; preds = %for.body273.preheader, %for.body273
  %indvars.iv523 = phi i64 [ 0, %for.body273.preheader ], [ %indvars.iv.next524, %for.body273 ]
  %s.10486 = phi %struct.site* [ %62, %for.body273.preheader ], [ %incdec.ptr279, %for.body273 ]
  %arrayidx275 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %2, i64 %indvars.iv523
  %tempmat1276 = getelementptr inbounds %struct.site, %struct.site* %s.10486, i64 0, i32 22
  tail call void @su3mat_copy(%struct.su3_matrix* %arrayidx275, %struct.su3_matrix* nonnull %tempmat1276) #32
  %indvars.iv.next524 = add nuw nsw i64 %indvars.iv523, 1
  %incdec.ptr279 = getelementptr inbounds %struct.site, %struct.site* %s.10486, i64 1
  %exitcond526.not = icmp eq i64 %indvars.iv.next524, %wide.trip.count525
  br i1 %exitcond526.not, label %if.end316, label %for.body273, !llvm.loop !114

if.else282:                                       ; preds = %for.end245
  br i1 %cmp253, label %if.then288, label %if.end316

if.then288:                                       ; preds = %if.else282
  tail call void @wait_gather(%struct.msg_tag* %mtag0.1.lcssa) #32
  %63 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp291491 = icmp sgt i32 %63, 0
  br i1 %cmp291491, label %for.body293.preheader, label %for.end301

for.body293.preheader:                            ; preds = %if.then288
  %wide.trip.count533 = zext i32 %63 to i64
  br label %for.body293

for.body293:                                      ; preds = %for.body293.preheader, %for.body293
  %indvars.iv531 = phi i64 [ 0, %for.body293.preheader ], [ %indvars.iv.next532, %for.body293 ]
  %64 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx295 = getelementptr inbounds i8*, i8** %64, i64 %indvars.iv531
  %65 = bitcast i8** %arrayidx295 to %struct.su3_matrix**
  %66 = load %struct.su3_matrix*, %struct.su3_matrix** %65, align 8, !tbaa !15
  %arrayidx297 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %1, i64 %indvars.iv531
  tail call void @su3mat_copy(%struct.su3_matrix* %66, %struct.su3_matrix* %arrayidx297) #32
  %indvars.iv.next532 = add nuw nsw i64 %indvars.iv531, 1
  %exitcond534.not = icmp eq i64 %indvars.iv.next532, %wide.trip.count533
  br i1 %exitcond534.not, label %for.end301, label %for.body293, !llvm.loop !115

for.end301:                                       ; preds = %for.body293, %if.then288
  tail call void @cleanup_gather(%struct.msg_tag* %mtag0.1.lcssa) #32
  %67 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp304488 = icmp sgt i32 %67, 0
  br i1 %cmp304488, label %for.body306.preheader, label %if.end316

for.body306.preheader:                            ; preds = %for.end301
  %68 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %wide.trip.count529 = zext i32 %67 to i64
  br label %for.body306

for.body306:                                      ; preds = %for.body306.preheader, %for.body306
  %indvars.iv527 = phi i64 [ 0, %for.body306.preheader ], [ %indvars.iv.next528, %for.body306 ]
  %s.12489 = phi %struct.site* [ %68, %for.body306.preheader ], [ %incdec.ptr312, %for.body306 ]
  %arrayidx308 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %1, i64 %indvars.iv527
  %tempmat1309 = getelementptr inbounds %struct.site, %struct.site* %s.12489, i64 0, i32 22
  tail call void @su3mat_copy(%struct.su3_matrix* %arrayidx308, %struct.su3_matrix* nonnull %tempmat1309) #32
  %indvars.iv.next528 = add nuw nsw i64 %indvars.iv527, 1
  %incdec.ptr312 = getelementptr inbounds %struct.site, %struct.site* %s.12489, i64 1
  %exitcond530.not = icmp eq i64 %indvars.iv.next528, %wide.trip.count529
  br i1 %exitcond530.not, label %if.end316, label %for.body306, !llvm.loop !116

if.end316:                                        ; preds = %for.body306, %for.body273, %for.end301, %if.else268, %if.else282, %for.end267
  tail call void @free(i8* %call) #32
  tail call void @free(i8* %call2) #32
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn
declare noalias noundef align 16 i8* @calloc(i64 noundef, i64 noundef) local_unnamed_addr #9

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind optsize willreturn
declare void @free(i8* nocapture noundef) local_unnamed_addr #15

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define double @su3_rdot(%struct.su3_vector* nocapture readonly %a, %struct.su3_vector* nocapture readonly %b) local_unnamed_addr #0 {
entry:
  %real = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 0, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %real3 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 0, i32 0
  %1 = load double, double* %real3, align 8, !tbaa !4
  %mul = fmul double %0, %1
  %imag = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 0, i32 1
  %2 = load double, double* %imag, align 8, !tbaa !9
  %imag8 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 0, i32 1
  %3 = load double, double* %imag8, align 8, !tbaa !9
  %mul9 = fmul double %2, %3
  %add = fadd double %mul, %mul9
  %real12 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 1, i32 0
  %4 = load double, double* %real12, align 8, !tbaa !4
  %real15 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 1, i32 0
  %5 = load double, double* %real15, align 8, !tbaa !4
  %mul16 = fmul double %4, %5
  %add17 = fadd double %add, %mul16
  %imag20 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 1, i32 1
  %6 = load double, double* %imag20, align 8, !tbaa !9
  %imag23 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 1, i32 1
  %7 = load double, double* %imag23, align 8, !tbaa !9
  %mul24 = fmul double %6, %7
  %add25 = fadd double %add17, %mul24
  %real28 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 2, i32 0
  %8 = load double, double* %real28, align 8, !tbaa !4
  %real31 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 2, i32 0
  %9 = load double, double* %real31, align 8, !tbaa !4
  %mul32 = fmul double %8, %9
  %add33 = fadd double %add25, %mul32
  %imag36 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 2, i32 1
  %10 = load double, double* %imag36, align 8, !tbaa !9
  %imag39 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 2, i32 1
  %11 = load double, double* %imag39, align 8, !tbaa !9
  %mul40 = fmul double %10, %11
  %add41 = fadd double %add33, %mul40
  ret double %add41
}

; Function Attrs: nofree noinline nosync nounwind optsize readonly uwtable
define double @realtrace_su3(%struct.su3_matrix* nocapture readonly %a, %struct.su3_matrix* nocapture readonly %b) local_unnamed_addr #16 {
entry:
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %entry, %for.inc24
  %indvars.iv47 = phi i64 [ 0, %entry ], [ %indvars.iv.next48, %for.inc24 ]
  %sum.046 = phi double [ 0.000000e+00, %entry ], [ %add, %for.inc24 ]
  br label %for.body3

for.body3:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  %sum.144 = phi double [ %sum.046, %for.cond1.preheader ], [ %add, %for.body3 ]
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv47, i64 %indvars.iv, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %real11 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv47, i64 %indvars.iv, i32 0
  %1 = load double, double* %real11, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv47, i64 %indvars.iv, i32 1
  %2 = load double, double* %imag, align 8, !tbaa !9
  %imag22 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv47, i64 %indvars.iv, i32 1
  %3 = load double, double* %imag22, align 8, !tbaa !9
  %mul23 = fmul double %2, %3
  %4 = tail call double @llvm.fmuladd.f64(double %0, double %1, double %mul23)
  %add = fadd double %sum.144, %4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc24, label %for.body3, !llvm.loop !117

for.inc24:                                        ; preds = %for.body3
  %indvars.iv.next48 = add nuw nsw i64 %indvars.iv47, 1
  %exitcond49.not = icmp eq i64 %indvars.iv.next48, 3
  br i1 %exitcond49.not, label %for.end26, label %for.cond1.preheader, !llvm.loop !118

for.end26:                                        ; preds = %for.inc24
  ret double %add
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @su3mat_copy(%struct.su3_matrix* nocapture readonly %a, %struct.su3_matrix* nocapture %b) local_unnamed_addr #10 {
entry:
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %entry, %for.inc23
  %indvars.iv42 = phi i64 [ 0, %entry ], [ %indvars.iv.next43, %for.inc23 ]
  br label %for.body3

for.body3:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv42, i64 %indvars.iv, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %real11 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv42, i64 %indvars.iv, i32 0
  store double %0, double* %real11, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv42, i64 %indvars.iv, i32 1
  %1 = load double, double* %imag, align 8, !tbaa !9
  %imag22 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv42, i64 %indvars.iv, i32 1
  store double %1, double* %imag22, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc23, label %for.body3, !llvm.loop !119

for.inc23:                                        ; preds = %for.body3
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1
  %exitcond44.not = icmp eq i64 %indvars.iv.next43, 3
  br i1 %exitcond44.not, label %for.end25, label %for.cond1.preheader, !llvm.loop !120

for.end25:                                        ; preds = %for.inc23
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @initialize_machine(i32 %argc, i8** nocapture %argv) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @make_nn_gathers() local_unnamed_addr #1 {
entry:
  %i = alloca i32, align 4
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #31
  %call = tail call noalias align 16 dereferenceable_or_null(64) i8* @calloc(i64 8, i64 8) #32
  store i8* %call, i8** bitcast (i32*** @neighbor to i8**), align 8, !tbaa !15
  store i32 0, i32* @n_gathers, align 4, !tbaa !13
  store i32 0, i32* %i, align 4, !tbaa !13
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %call1 = call i32 @make_gather(void (i32, i32, i32, i32, i32*, i32, i32*, i32*, i32*, i32*)* nonnull @neighbor_coords_special, i32* nonnull %i, i32 1, i32 undef, i32 1) #34
  %1 = load i32, i32* %i, align 4, !tbaa !13
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %i, align 4, !tbaa !13
  %cmp = icmp slt i32 %1, 3
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !121

for.end:                                          ; preds = %for.body
  %2 = load i8**, i8*** bitcast (i32*** @neighbor to i8***), align 8, !tbaa !15
  call void @sort_eight_special(i8** %2) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @neighbor_coords_special(i32 %x, i32 %y, i32 %z, i32 %t, i32* nocapture readonly %dirpt, i32 %fb, i32* nocapture %x2p, i32* nocapture %y2p, i32* nocapture %z2p, i32* nocapture %t2p) #1 {
entry:
  %cmp = icmp eq i32 %fb, 1
  %0 = load i32, i32* %dirpt, align 4, !tbaa !13
  %sub = sub nsw i32 7, %0
  %cond = select i1 %cmp, i32 %0, i32 %sub
  store i32 %x, i32* %x2p, align 4, !tbaa !13
  store i32 %y, i32* %y2p, align 4, !tbaa !13
  store i32 %z, i32* %z2p, align 4, !tbaa !13
  store i32 %t, i32* %t2p, align 4, !tbaa !13
  switch i32 %cond, label %sw.default [
    i32 0, label %sw.bb
    i32 7, label %sw.bb1
    i32 1, label %sw.bb5
    i32 6, label %sw.bb8
    i32 2, label %sw.bb12
    i32 5, label %sw.bb15
    i32 3, label %sw.bb19
    i32 4, label %sw.bb22
  ]

sw.bb:                                            ; preds = %entry
  %add = add nsw i32 %x, 1
  %1 = load i32, i32* @nx, align 4, !tbaa !13
  %rem = srem i32 %add, %1
  store i32 %rem, i32* %x2p, align 4, !tbaa !13
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %2 = load i32, i32* @nx, align 4, !tbaa !13
  %add2 = add i32 %x, -1
  %sub3 = add i32 %add2, %2
  %rem4 = srem i32 %sub3, %2
  store i32 %rem4, i32* %x2p, align 4, !tbaa !13
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  %add6 = add nsw i32 %y, 1
  %3 = load i32, i32* @ny, align 4, !tbaa !13
  %rem7 = srem i32 %add6, %3
  store i32 %rem7, i32* %y2p, align 4, !tbaa !13
  br label %sw.epilog

sw.bb8:                                           ; preds = %entry
  %4 = load i32, i32* @ny, align 4, !tbaa !13
  %add9 = add i32 %y, -1
  %sub10 = add i32 %add9, %4
  %rem11 = srem i32 %sub10, %4
  store i32 %rem11, i32* %y2p, align 4, !tbaa !13
  br label %sw.epilog

sw.bb12:                                          ; preds = %entry
  %add13 = add nsw i32 %z, 1
  %5 = load i32, i32* @nz, align 4, !tbaa !13
  %rem14 = srem i32 %add13, %5
  store i32 %rem14, i32* %z2p, align 4, !tbaa !13
  br label %sw.epilog

sw.bb15:                                          ; preds = %entry
  %6 = load i32, i32* @nz, align 4, !tbaa !13
  %add16 = add i32 %z, -1
  %sub17 = add i32 %add16, %6
  %rem18 = srem i32 %sub17, %6
  store i32 %rem18, i32* %z2p, align 4, !tbaa !13
  br label %sw.epilog

sw.bb19:                                          ; preds = %entry
  %add20 = add nsw i32 %t, 1
  %7 = load i32, i32* @nt, align 4, !tbaa !13
  %rem21 = srem i32 %add20, %7
  store i32 %rem21, i32* %t2p, align 4, !tbaa !13
  br label %sw.epilog

sw.bb22:                                          ; preds = %entry
  %8 = load i32, i32* @nt, align 4, !tbaa !13
  %add23 = add i32 %t, -1
  %sub24 = add i32 %add23, %8
  %rem25 = srem i32 %sub24, %8
  store i32 %rem25, i32* %t2p, align 4, !tbaa !13
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @str.17, i64 0, i64 0))
  tail call void @exit(i32 1) #33
  unreachable

sw.epilog:                                        ; preds = %sw.bb22, %sw.bb19, %sw.bb15, %sw.bb12, %sw.bb8, %sw.bb5, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @make_gather(void (i32, i32, i32, i32, i32*, i32, i32*, i32*, i32*, i32*)* nocapture %func, i32* %args, i32 %inverse, i32 %want_even_odd, i32 %parity_conserve) local_unnamed_addr #1 {
entry:
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %t = alloca i32, align 4
  %x2 = alloca i32, align 4
  %y2 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %t2 = alloca i32, align 4
  %0 = bitcast i32* %x to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #31
  %1 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #31
  %2 = bitcast i32* %z to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #31
  %3 = bitcast i32* %t to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #31
  %cmp = icmp eq i32 %inverse, 1
  %4 = load i32, i32* @n_gathers, align 4
  %storemerge.v = select i1 %cmp, i32 2, i32 1
  %storemerge = add nsw i32 %4, %storemerge.v
  store i32 %storemerge, i32* @n_gathers, align 4, !tbaa !13
  %cmp2 = icmp sgt i32 %storemerge, 32
  br i1 %cmp2, label %if.then3, label %if.end7

if.then3:                                         ; preds = %entry
  %5 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp4 = icmp eq i32 %5, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.then3
  %puts306 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([37 x i8], [37 x i8]* @str.15.42, i64 0, i64 0))
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.then3
  tail call void @exit(i32 1) #33
  br label %UnifiedUnreachableBlock

if.end7:                                          ; preds = %entry
  %6 = load i8*, i8** bitcast (i32*** @neighbor to i8**), align 8, !tbaa !15
  %conv = sext i32 %storemerge to i64
  %mul = shl nsw i64 %conv, 3
  %call8 = tail call align 16 i8* @realloc(i8* %6, i64 %mul) #32
  store i8* %call8, i8** bitcast (i32*** @neighbor to i8**), align 8, !tbaa !15
  %7 = bitcast i8* %call8 to i32**
  %8 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv12 = sext i32 %8 to i64
  %call13 = tail call noalias align 16 i8* @calloc(i64 %conv12, i64 4) #32
  %9 = load i32, i32* @n_gathers, align 4, !tbaa !13
  br i1 %cmp, label %if.then11, label %if.else36

if.then11:                                        ; preds = %if.end7
  %sub = add nsw i32 %9, -2
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds i32*, i32** %7, i64 %idxprom
  %10 = bitcast i32** %arrayidx to i8**
  store i8* %call13, i8** %10, align 8, !tbaa !15
  %cmp17 = icmp eq i8* %call13, null
  br i1 %cmp17, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.then11
  %11 = load i32, i32* @this_node, align 4, !tbaa !13
  %call20 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.43, i64 0, i64 0), i32 %11) #34
  tail call void @terminate(i32 1) #34
  br label %UnifiedUnreachableBlock

if.end21:                                         ; preds = %if.then11
  %call23 = tail call noalias align 16 i8* @calloc(i64 %conv12, i64 4) #32
  %sub24 = add nsw i32 %9, -1
  %idxprom25 = sext i32 %sub24 to i64
  %arrayidx26 = getelementptr inbounds i32*, i32** %7, i64 %idxprom25
  %12 = bitcast i32** %arrayidx26 to i8**
  store i8* %call23, i8** %12, align 8, !tbaa !15
  %cmp30 = icmp eq i8* %call23, null
  br i1 %cmp30, label %if.then32, label %if.end51

if.then32:                                        ; preds = %if.end21
  %13 = load i32, i32* @this_node, align 4, !tbaa !13
  %call33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.43, i64 0, i64 0), i32 %13) #34
  tail call void @terminate(i32 1) #34
  br label %UnifiedUnreachableBlock

if.else36:                                        ; preds = %if.end7
  %sub39 = add nsw i32 %9, -1
  %idxprom40 = sext i32 %sub39 to i64
  %arrayidx41 = getelementptr inbounds i32*, i32** %7, i64 %idxprom40
  %14 = bitcast i32** %arrayidx41 to i8**
  store i8* %call13, i8** %14, align 8, !tbaa !15
  %cmp45 = icmp eq i8* %call13, null
  br i1 %cmp45, label %if.then47, label %if.end51

if.then47:                                        ; preds = %if.else36
  %15 = load i32, i32* @this_node, align 4, !tbaa !13
  %call48 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.43, i64 0, i64 0), i32 %15) #34
  tail call void @terminate(i32 1) #34
  br label %UnifiedUnreachableBlock

if.end51:                                         ; preds = %if.else36, %if.end21
  %dir.0 = phi i32 [ %sub, %if.end21 ], [ %sub39, %if.else36 ]
  %cmp146 = icmp eq i32 %inverse, 0
  %16 = bitcast i32* %x2 to i8*
  %17 = bitcast i32* %y2 to i8*
  %18 = bitcast i32* %z2 to i8*
  %19 = bitcast i32* %t2 to i8*
  %cmp52325 = icmp sgt i32 %8, 0
  br i1 %cmp52325, label %for.body.preheader, label %for.end201

for.body.preheader:                               ; preds = %if.end51
  %20 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %s.0327 = phi %struct.site* [ %incdec.ptr, %for.inc ], [ %20, %for.body.preheader ]
  %i.0326 = phi i32 [ %inc, %for.inc ], [ 0, %for.body.preheader ]
  %x54 = getelementptr inbounds %struct.site, %struct.site* %s.0327, i64 0, i32 0
  %21 = load i16, i16* %x54, align 8, !tbaa !122
  %conv55 = sext i16 %21 to i32
  %y56 = getelementptr inbounds %struct.site, %struct.site* %s.0327, i64 0, i32 1
  %22 = load i16, i16* %y56, align 2, !tbaa !123
  %conv57 = sext i16 %22 to i32
  %z58 = getelementptr inbounds %struct.site, %struct.site* %s.0327, i64 0, i32 2
  %23 = load i16, i16* %z58, align 4, !tbaa !124
  %conv59 = sext i16 %23 to i32
  %t60 = getelementptr inbounds %struct.site, %struct.site* %s.0327, i64 0, i32 3
  %24 = load i16, i16* %t60, align 2, !tbaa !19
  %conv61 = sext i16 %24 to i32
  call void %func(i32 %conv55, i32 %conv57, i32 %conv59, i32 %conv61, i32* %args, i32 1, i32* nonnull %x, i32* nonnull %y, i32* nonnull %z, i32* nonnull %t) #32
  %25 = load i32, i32* %x, align 4, !tbaa !13
  %26 = load i32, i32* %y, align 4, !tbaa !13
  %add62 = add nsw i32 %26, %25
  %27 = load i32, i32* %z, align 4, !tbaa !13
  %add63 = add nsw i32 %add62, %27
  %28 = load i32, i32* %t, align 4, !tbaa !13
  %add64 = add nsw i32 %add63, %28
  %rem = srem i32 %add64, 2
  %cmp65 = icmp sgt i32 %25, -1
  %cmp67 = icmp sgt i32 %26, -1
  %or.cond = select i1 %cmp65, i1 %cmp67, i1 false
  %cmp70 = icmp sgt i32 %27, -1
  %or.cond236 = select i1 %or.cond, i1 %cmp70, i1 false
  %cmp73 = icmp sgt i32 %28, -1
  %or.cond237 = select i1 %or.cond236, i1 %cmp73, i1 false
  %29 = load i32, i32* @nx, align 4
  %cmp76.not = icmp slt i32 %25, %29
  %or.cond307 = select i1 %or.cond237, i1 %cmp76.not, i1 false
  %30 = load i32, i32* @ny, align 4
  %cmp79.not = icmp slt i32 %26, %30
  %or.cond308 = select i1 %or.cond307, i1 %cmp79.not, i1 false
  %31 = load i32, i32* @nz, align 4
  %cmp82.not = icmp slt i32 %27, %31
  %or.cond309 = select i1 %or.cond308, i1 %cmp82.not, i1 false
  %32 = load i32, i32* @nt, align 4
  %cmp85.not = icmp slt i32 %28, %32
  %or.cond310 = select i1 %or.cond309, i1 %cmp85.not, i1 false
  br i1 %or.cond310, label %if.end98, label %if.then87

if.then87:                                        ; preds = %for.body
  %puts305 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str.14.46, i64 0, i64 0))
  %33 = load i16, i16* %x54, align 8, !tbaa !122
  %conv90 = sext i16 %33 to i32
  %34 = load i16, i16* %y56, align 2, !tbaa !123
  %conv92 = sext i16 %34 to i32
  %35 = load i16, i16* %z58, align 4, !tbaa !124
  %conv94 = sext i16 %35 to i32
  %36 = load i16, i16* %t60, align 2, !tbaa !19
  %conv96 = sext i16 %36 to i32
  %37 = load i32, i32* %x, align 4, !tbaa !13
  %38 = load i32, i32* %y, align 4, !tbaa !13
  %39 = load i32, i32* %z, align 4, !tbaa !13
  %40 = load i32, i32* %t, align 4, !tbaa !13
  %call97 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.47, i64 0, i64 0), i32 %conv90, i32 %conv92, i32 %conv94, i32 %conv96, i32 %37, i32 %38, i32 %39, i32 %40) #34
  call void @terminate(i32 1) #34
  br label %UnifiedUnreachableBlock

if.end98:                                         ; preds = %for.body
  switch i32 %parity_conserve, label %if.end145 [
    i32 0, label %land.lhs.true
    i32 1, label %land.lhs.true118
  ]

land.lhs.true:                                    ; preds = %if.end98
  switch i32 %rem, label %if.end145 [
    i32 0, label %land.lhs.true103
    i32 1, label %land.lhs.true110
  ]

land.lhs.true103:                                 ; preds = %land.lhs.true
  %parity = getelementptr inbounds %struct.site, %struct.site* %s.0327, i64 0, i32 4
  %41 = load i8, i8* %parity, align 8, !tbaa !125
  %cmp105 = icmp eq i8 %41, 1
  br i1 %cmp105, label %if.then134, label %if.end145

land.lhs.true110:                                 ; preds = %land.lhs.true
  %parity111 = getelementptr inbounds %struct.site, %struct.site* %s.0327, i64 0, i32 4
  %42 = load i8, i8* %parity111, align 8, !tbaa !125
  %cmp113 = icmp eq i8 %42, 2
  br i1 %cmp113, label %if.then134, label %if.end145

land.lhs.true118:                                 ; preds = %if.end98
  switch i32 %rem, label %if.end145 [
    i32 0, label %land.lhs.true121
    i32 1, label %land.lhs.true129
  ]

land.lhs.true121:                                 ; preds = %land.lhs.true118
  %parity122 = getelementptr inbounds %struct.site, %struct.site* %s.0327, i64 0, i32 4
  %43 = load i8, i8* %parity122, align 8, !tbaa !125
  %cmp124 = icmp eq i8 %43, 2
  br i1 %cmp124, label %if.then134, label %if.end145

land.lhs.true129:                                 ; preds = %land.lhs.true118
  %parity130 = getelementptr inbounds %struct.site, %struct.site* %s.0327, i64 0, i32 4
  %44 = load i8, i8* %parity130, align 8, !tbaa !125
  %cmp132 = icmp eq i8 %44, 1
  br i1 %cmp132, label %if.then134, label %if.end145

if.then134:                                       ; preds = %land.lhs.true129, %land.lhs.true121, %land.lhs.true110, %land.lhs.true103
  %puts304 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([56 x i8], [56 x i8]* @str.13, i64 0, i64 0))
  %45 = load i16, i16* %x54, align 8, !tbaa !122
  %conv137 = sext i16 %45 to i32
  %46 = load i16, i16* %y56, align 2, !tbaa !123
  %conv139 = sext i16 %46 to i32
  %47 = load i16, i16* %z58, align 4, !tbaa !124
  %conv141 = sext i16 %47 to i32
  %48 = load i16, i16* %t60, align 2, !tbaa !19
  %conv143 = sext i16 %48 to i32
  %49 = load i32, i32* %x, align 4, !tbaa !13
  %50 = load i32, i32* %y, align 4, !tbaa !13
  %51 = load i32, i32* %z, align 4, !tbaa !13
  %52 = load i32, i32* %t, align 4, !tbaa !13
  %call144 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.47, i64 0, i64 0), i32 %conv137, i32 %conv139, i32 %conv141, i32 %conv143, i32 %49, i32 %50, i32 %51, i32 %52) #34
  call void @terminate(i32 1) #34
  br label %UnifiedUnreachableBlock

if.end145:                                        ; preds = %land.lhs.true121, %land.lhs.true110, %land.lhs.true, %land.lhs.true103, %land.lhs.true118, %if.end98, %land.lhs.true129
  br i1 %cmp146, label %if.then148, label %for.inc

if.then148:                                       ; preds = %if.end145
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #31
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #31
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #31
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #31
  call void %func(i32 %25, i32 %26, i32 %27, i32 %28, i32* %args, i32 1, i32* nonnull %x2, i32* nonnull %y2, i32* nonnull %z2, i32* nonnull %t2) #32
  %53 = load i16, i16* %x54, align 8, !tbaa !122
  %conv150 = sext i16 %53 to i32
  %54 = load i32, i32* %x2, align 4, !tbaa !13
  %cmp151.not = icmp eq i32 %54, %conv150
  br i1 %cmp151.not, label %lor.lhs.false153, label %if.then168

lor.lhs.false153:                                 ; preds = %if.then148
  %55 = load i16, i16* %y56, align 2, !tbaa !123
  %conv155 = sext i16 %55 to i32
  %56 = load i32, i32* %y2, align 4, !tbaa !13
  %cmp156.not = icmp eq i32 %56, %conv155
  br i1 %cmp156.not, label %lor.lhs.false158, label %if.then168

lor.lhs.false158:                                 ; preds = %lor.lhs.false153
  %57 = load i16, i16* %z58, align 4, !tbaa !124
  %conv160 = sext i16 %57 to i32
  %58 = load i32, i32* %z2, align 4, !tbaa !13
  %cmp161.not = icmp eq i32 %58, %conv160
  br i1 %cmp161.not, label %lor.lhs.false163, label %if.then168

lor.lhs.false163:                                 ; preds = %lor.lhs.false158
  %59 = load i16, i16* %t60, align 2, !tbaa !19
  %conv165 = sext i16 %59 to i32
  %60 = load i32, i32* %t2, align 4, !tbaa !13
  %cmp166.not = icmp eq i32 %60, %conv165
  br i1 %cmp166.not, label %if.end179, label %if.then168

if.then168:                                       ; preds = %lor.lhs.false163, %lor.lhs.false158, %lor.lhs.false153, %if.then148
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([50 x i8], [50 x i8]* @str.48, i64 0, i64 0))
  %61 = load i16, i16* %x54, align 8, !tbaa !122
  %conv171 = sext i16 %61 to i32
  %62 = load i16, i16* %y56, align 2, !tbaa !123
  %conv173 = sext i16 %62 to i32
  %63 = load i16, i16* %z58, align 4, !tbaa !124
  %conv175 = sext i16 %63 to i32
  %64 = load i16, i16* %t60, align 2, !tbaa !19
  %conv177 = sext i16 %64 to i32
  %65 = load i32, i32* %x2, align 4, !tbaa !13
  %66 = load i32, i32* %y2, align 4, !tbaa !13
  %67 = load i32, i32* %z2, align 4, !tbaa !13
  %68 = load i32, i32* %t2, align 4, !tbaa !13
  %call178 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([47 x i8], [47 x i8]* @.str.7.49, i64 0, i64 0), i32 %conv171, i32 %conv173, i32 %conv175, i32 %conv177, i32 %65, i32 %66, i32 %67, i32 %68) #34
  call void @terminate(i32 1) #34
  br label %UnifiedUnreachableBlock

if.end179:                                        ; preds = %lor.lhs.false163
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #31
  br label %for.inc

for.inc:                                          ; preds = %if.end145, %if.end179
  %inc = add nuw nsw i32 %i.0326, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0327, i64 1
  %69 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp52 = icmp slt i32 %inc, %69
  br i1 %cmp52, label %for.body, label %for.end, !llvm.loop !126

for.end:                                          ; preds = %for.inc
  %idxprom194 = sext i32 %dir.0 to i64
  %cmp182322 = icmp sgt i32 %69, 0
  br i1 %cmp182322, label %for.body184.preheader, label %for.end201

for.body184.preheader:                            ; preds = %for.end
  %.pre = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body184

for.body184:                                      ; preds = %for.body184.preheader, %for.body184
  %indvars.iv341 = phi i64 [ %indvars.iv.next342, %for.body184 ], [ 0, %for.body184.preheader ]
  %s.1324 = phi %struct.site* [ %incdec.ptr200, %for.body184 ], [ %.pre, %for.body184.preheader ]
  %x185 = getelementptr inbounds %struct.site, %struct.site* %s.1324, i64 0, i32 0
  %70 = load i16, i16* %x185, align 8, !tbaa !122
  %conv186 = sext i16 %70 to i32
  %y187 = getelementptr inbounds %struct.site, %struct.site* %s.1324, i64 0, i32 1
  %71 = load i16, i16* %y187, align 2, !tbaa !123
  %conv188 = sext i16 %71 to i32
  %z189 = getelementptr inbounds %struct.site, %struct.site* %s.1324, i64 0, i32 2
  %72 = load i16, i16* %z189, align 4, !tbaa !124
  %conv190 = sext i16 %72 to i32
  %t191 = getelementptr inbounds %struct.site, %struct.site* %s.1324, i64 0, i32 3
  %73 = load i16, i16* %t191, align 2, !tbaa !19
  %conv192 = sext i16 %73 to i32
  call void %func(i32 %conv186, i32 %conv188, i32 %conv190, i32 %conv192, i32* %args, i32 1, i32* nonnull %x, i32* nonnull %y, i32* nonnull %z, i32* nonnull %t) #32
  %74 = load i32, i32* %x, align 4, !tbaa !13
  %75 = load i32, i32* %y, align 4, !tbaa !13
  %76 = load i32, i32* %z, align 4, !tbaa !13
  %77 = load i32, i32* %t, align 4, !tbaa !13
  %call193 = call i32 @node_index(i32 %74, i32 %75, i32 %76, i32 %77) #32
  %78 = load i32**, i32*** @neighbor, align 8, !tbaa !15
  %arrayidx195 = getelementptr inbounds i32*, i32** %78, i64 %idxprom194
  %79 = load i32*, i32** %arrayidx195, align 8, !tbaa !15
  %arrayidx197 = getelementptr inbounds i32, i32* %79, i64 %indvars.iv341
  store i32 %call193, i32* %arrayidx197, align 4, !tbaa !13
  %indvars.iv.next342 = add nuw nsw i64 %indvars.iv341, 1
  %incdec.ptr200 = getelementptr inbounds %struct.site, %struct.site* %s.1324, i64 1
  %80 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %81 = sext i32 %80 to i64
  %cmp182 = icmp slt i64 %indvars.iv.next342, %81
  br i1 %cmp182, label %for.body184, label %for.end201, !llvm.loop !127

for.end201:                                       ; preds = %for.body184, %if.end51, %for.end
  %82 = phi i32 [ %69, %for.end ], [ %8, %if.end51 ], [ %80, %for.body184 ]
  br i1 %cmp, label %if.end205, label %cleanup

if.end205:                                        ; preds = %for.end201
  %inc206 = add nsw i32 %dir.0, 1
  %idxprom220 = sext i32 %inc206 to i64
  %cmp208319 = icmp sgt i32 %82, 0
  br i1 %cmp208319, label %for.body210.preheader, label %cleanup

for.body210.preheader:                            ; preds = %if.end205
  %83 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body210

for.body210:                                      ; preds = %for.body210.preheader, %for.body210
  %indvars.iv = phi i64 [ 0, %for.body210.preheader ], [ %indvars.iv.next, %for.body210 ]
  %s.2321 = phi %struct.site* [ %83, %for.body210.preheader ], [ %incdec.ptr226, %for.body210 ]
  %x211 = getelementptr inbounds %struct.site, %struct.site* %s.2321, i64 0, i32 0
  %84 = load i16, i16* %x211, align 8, !tbaa !122
  %conv212 = sext i16 %84 to i32
  %y213 = getelementptr inbounds %struct.site, %struct.site* %s.2321, i64 0, i32 1
  %85 = load i16, i16* %y213, align 2, !tbaa !123
  %conv214 = sext i16 %85 to i32
  %z215 = getelementptr inbounds %struct.site, %struct.site* %s.2321, i64 0, i32 2
  %86 = load i16, i16* %z215, align 4, !tbaa !124
  %conv216 = sext i16 %86 to i32
  %t217 = getelementptr inbounds %struct.site, %struct.site* %s.2321, i64 0, i32 3
  %87 = load i16, i16* %t217, align 2, !tbaa !19
  %conv218 = sext i16 %87 to i32
  call void %func(i32 %conv212, i32 %conv214, i32 %conv216, i32 %conv218, i32* %args, i32 -1, i32* nonnull %x, i32* nonnull %y, i32* nonnull %z, i32* nonnull %t) #32
  %88 = load i32, i32* %x, align 4, !tbaa !13
  %89 = load i32, i32* %y, align 4, !tbaa !13
  %90 = load i32, i32* %z, align 4, !tbaa !13
  %91 = load i32, i32* %t, align 4, !tbaa !13
  %call219 = call i32 @node_index(i32 %88, i32 %89, i32 %90, i32 %91) #32
  %92 = load i32**, i32*** @neighbor, align 8, !tbaa !15
  %arrayidx221 = getelementptr inbounds i32*, i32** %92, i64 %idxprom220
  %93 = load i32*, i32** %arrayidx221, align 8, !tbaa !15
  %arrayidx223 = getelementptr inbounds i32, i32* %93, i64 %indvars.iv
  store i32 %call219, i32* %arrayidx223, align 4, !tbaa !13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %incdec.ptr226 = getelementptr inbounds %struct.site, %struct.site* %s.2321, i64 1
  %94 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %95 = sext i32 %94 to i64
  %cmp208 = icmp slt i64 %indvars.iv.next, %95
  br i1 %cmp208, label %for.body210, label %cleanup, !llvm.loop !128

cleanup:                                          ; preds = %for.body210, %if.end205, %for.end201
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #31
  ret i32 %dir.0

UnifiedUnreachableBlock:                          ; preds = %if.then168, %if.then134, %if.then87, %if.then47, %if.then32, %if.then19, %if.end6
  unreachable
}

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @sort_eight_special(i8** nocapture %pt) local_unnamed_addr #4 {
entry:
  %pt36 = bitcast i8** %pt to i8*
  %tt = alloca [8 x i8*], align 16
  %0 = bitcast [8 x i8*]* %tt to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(64) %0, i8* noundef nonnull align 8 dereferenceable(64) %pt36, i64 64, i1 false)
  br label %for.body5

for.body5:                                        ; preds = %entry, %for.body5
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body5 ]
  %1 = shl nuw nsw i64 %indvars.iv, 1
  %arrayidx7 = getelementptr inbounds [8 x i8*], [8 x i8*]* %tt, i64 0, i64 %1
  %2 = load i8*, i8** %arrayidx7, align 16, !tbaa !15
  %arrayidx9 = getelementptr inbounds i8*, i8** %pt, i64 %indvars.iv
  store i8* %2, i8** %arrayidx9, align 8, !tbaa !15
  %3 = or i64 %1, 1
  %arrayidx12 = getelementptr inbounds [8 x i8*], [8 x i8*]* %tt, i64 0, i64 %3
  %4 = load i8*, i8** %arrayidx12, align 8, !tbaa !15
  %5 = sub nuw nsw i64 7, %indvars.iv
  %arrayidx14 = getelementptr inbounds i8*, i8** %pt, i64 %5
  store i8* %4, i8** %arrayidx14, align 8, !tbaa !15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.end17, label %for.body5, !llvm.loop !129

for.end17:                                        ; preds = %for.body5
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #31
  ret void
}

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind optsize willreturn
declare noalias noundef align 16 i8* @realloc(i8* nocapture, i64 noundef) local_unnamed_addr #15

; Function Attrs: noinline noreturn nounwind optsize uwtable
define void @terminate(i32 %status) local_unnamed_addr #18 {
entry:
  tail call void @time_stamp(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.50, i64 0, i64 0)) #34
  %call = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12.51, i64 0, i64 0), i32 %status) #34
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call1 = tail call i32 @fflush(%struct._IO_FILE* %0) #34
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !15
  %call2 = tail call i32 @fflush(%struct._IO_FILE* %1) #34
  tail call void @exit(i32 %status) #33
  unreachable
}

; Function Attrs: noinline nounwind optsize uwtable
define void @time_stamp(i8* %msg) local_unnamed_addr #1 {
entry:
  %time_stamp = alloca i64, align 8
  %0 = bitcast i64* %time_stamp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %call1 = call i64 @time(i64* nonnull %time_stamp) #32
  %call2 = call i8* @ctime(i64* nonnull %time_stamp) #32
  %call3 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.52, i64 0, i64 0), i8* %msg, i8* %call2) #34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret void
}

; Function Attrs: nounwind optsize
declare i64 @time(i64*) local_unnamed_addr #19

; Function Attrs: nounwind optsize
declare i8* @ctime(i64*) local_unnamed_addr #19

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @sort_eight_neighborlists(i32 %index) local_unnamed_addr #4 {
entry:
  %0 = load i32**, i32*** @neighbor, align 8, !tbaa !15
  %idxprom = sext i32 %index to i64
  %arrayidx = getelementptr inbounds i32*, i32** %0, i64 %idxprom
  %1 = bitcast i32** %arrayidx to i8**
  tail call void @sort_eight_special(i8** %1) #34
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @neighbor_coords(i32 %x, i32 %y, i32 %z, i32 %t, i32 %dir, i32* nocapture %x2p, i32* nocapture %y2p, i32* nocapture %z2p, i32* nocapture %t2p) local_unnamed_addr #1 {
entry:
  store i32 %x, i32* %x2p, align 4, !tbaa !13
  store i32 %y, i32* %y2p, align 4, !tbaa !13
  store i32 %z, i32* %z2p, align 4, !tbaa !13
  store i32 %t, i32* %t2p, align 4, !tbaa !13
  switch i32 %dir, label %sw.default [
    i32 0, label %sw.bb
    i32 7, label %sw.bb1
    i32 1, label %sw.bb4
    i32 6, label %sw.bb7
    i32 2, label %sw.bb11
    i32 5, label %sw.bb14
    i32 3, label %sw.bb18
    i32 4, label %sw.bb21
  ]

sw.bb:                                            ; preds = %entry
  %add = add nsw i32 %x, 1
  %0 = load i32, i32* @nx, align 4, !tbaa !13
  %rem = srem i32 %add, %0
  store i32 %rem, i32* %x2p, align 4, !tbaa !13
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %1 = load i32, i32* @nx, align 4, !tbaa !13
  %add2 = add i32 %x, -1
  %sub = add i32 %add2, %1
  %rem3 = srem i32 %sub, %1
  store i32 %rem3, i32* %x2p, align 4, !tbaa !13
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  %add5 = add nsw i32 %y, 1
  %2 = load i32, i32* @ny, align 4, !tbaa !13
  %rem6 = srem i32 %add5, %2
  store i32 %rem6, i32* %y2p, align 4, !tbaa !13
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  %3 = load i32, i32* @ny, align 4, !tbaa !13
  %add8 = add i32 %y, -1
  %sub9 = add i32 %add8, %3
  %rem10 = srem i32 %sub9, %3
  store i32 %rem10, i32* %y2p, align 4, !tbaa !13
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  %add12 = add nsw i32 %z, 1
  %4 = load i32, i32* @nz, align 4, !tbaa !13
  %rem13 = srem i32 %add12, %4
  store i32 %rem13, i32* %z2p, align 4, !tbaa !13
  br label %sw.epilog

sw.bb14:                                          ; preds = %entry
  %5 = load i32, i32* @nz, align 4, !tbaa !13
  %add15 = add i32 %z, -1
  %sub16 = add i32 %add15, %5
  %rem17 = srem i32 %sub16, %5
  store i32 %rem17, i32* %z2p, align 4, !tbaa !13
  br label %sw.epilog

sw.bb18:                                          ; preds = %entry
  %add19 = add nsw i32 %t, 1
  %6 = load i32, i32* @nt, align 4, !tbaa !13
  %rem20 = srem i32 %add19, %6
  store i32 %rem20, i32* %t2p, align 4, !tbaa !13
  br label %sw.epilog

sw.bb21:                                          ; preds = %entry
  %7 = load i32, i32* @nt, align 4, !tbaa !13
  %add22 = add i32 %t, -1
  %sub23 = add i32 %add22, %7
  %rem24 = srem i32 %sub23, %7
  store i32 %rem24, i32* %t2p, align 4, !tbaa !13
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @str.17, i64 0, i64 0))
  tail call void @exit(i32 1) #33
  unreachable

sw.epilog:                                        ; preds = %sw.bb21, %sw.bb18, %sw.bb14, %sw.bb11, %sw.bb7, %sw.bb4, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @start_handlers() local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define noalias %struct.msg_tag* @start_gather(i32 %field, i32 %size, i32 %index, i32 %parity, i8** nocapture %dest) local_unnamed_addr #10 {
entry:
  switch i32 %parity, label %sw.epilog [
    i32 2, label %for.cond.preheader
    i32 1, label %sw.bb7
    i32 3, label %for.cond28.preheader
  ]

for.cond28.preheader:                             ; preds = %entry
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %idxprom31 = sext i32 %index to i64
  %idx.ext37 = sext i32 %field to i64
  %cmp2973 = icmp sgt i32 %0, 0
  br i1 %cmp2973, label %for.body30.preheader, label %sw.epilog

for.body30.preheader:                             ; preds = %for.cond28.preheader
  %wide.trip.count83 = zext i32 %0 to i64
  br label %for.body30

for.cond.preheader:                               ; preds = %entry
  %1 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %idxprom = sext i32 %index to i64
  %idx.ext3 = sext i32 %field to i64
  %cmp69 = icmp sgt i32 %1, 0
  br i1 %cmp69, label %for.body.preheader, label %sw.epilog

for.body.preheader:                               ; preds = %for.cond.preheader
  %wide.trip.count = zext i32 %1 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %2 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %3 = load i32**, i32*** @neighbor, align 8, !tbaa !15
  %arrayidx = getelementptr inbounds i32*, i32** %3, i64 %idxprom
  %4 = load i32*, i32** %arrayidx, align 8, !tbaa !15
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv
  %5 = load i32, i32* %arrayidx2, align 4, !tbaa !13
  %idx.ext = sext i32 %5 to i64
  %add.ptr = getelementptr inbounds %struct.site, %struct.site* %2, i64 %idx.ext
  %6 = bitcast %struct.site* %add.ptr to i8*
  %add.ptr4 = getelementptr inbounds i8, i8* %6, i64 %idx.ext3
  %arrayidx6 = getelementptr inbounds i8*, i8** %dest, i64 %indvars.iv
  store i8* %add.ptr4, i8** %arrayidx6, align 8, !tbaa !15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %sw.epilog, label %for.body, !llvm.loop !130

sw.bb7:                                           ; preds = %entry
  %7 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %8 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %idxprom13 = sext i32 %index to i64
  %idx.ext19 = sext i32 %field to i64
  %cmp1171 = icmp slt i32 %7, %8
  br i1 %cmp1171, label %for.body12.preheader, label %sw.epilog

for.body12.preheader:                             ; preds = %sw.bb7
  %9 = sext i32 %7 to i64
  %wide.trip.count79 = sext i32 %8 to i64
  br label %for.body12

for.body12:                                       ; preds = %for.body12.preheader, %for.body12
  %indvars.iv77 = phi i64 [ %9, %for.body12.preheader ], [ %indvars.iv.next78, %for.body12 ]
  %10 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %11 = load i32**, i32*** @neighbor, align 8, !tbaa !15
  %arrayidx14 = getelementptr inbounds i32*, i32** %11, i64 %idxprom13
  %12 = load i32*, i32** %arrayidx14, align 8, !tbaa !15
  %arrayidx16 = getelementptr inbounds i32, i32* %12, i64 %indvars.iv77
  %13 = load i32, i32* %arrayidx16, align 4, !tbaa !13
  %idx.ext17 = sext i32 %13 to i64
  %add.ptr18 = getelementptr inbounds %struct.site, %struct.site* %10, i64 %idx.ext17
  %14 = bitcast %struct.site* %add.ptr18 to i8*
  %add.ptr20 = getelementptr inbounds i8, i8* %14, i64 %idx.ext19
  %arrayidx22 = getelementptr inbounds i8*, i8** %dest, i64 %indvars.iv77
  store i8* %add.ptr20, i8** %arrayidx22, align 8, !tbaa !15
  %indvars.iv.next78 = add nsw i64 %indvars.iv77, 1
  %exitcond80.not = icmp eq i64 %indvars.iv.next78, %wide.trip.count79
  br i1 %exitcond80.not, label %sw.epilog, label %for.body12, !llvm.loop !131

for.body30:                                       ; preds = %for.body30.preheader, %for.body30
  %indvars.iv81 = phi i64 [ 0, %for.body30.preheader ], [ %indvars.iv.next82, %for.body30 ]
  %15 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %16 = load i32**, i32*** @neighbor, align 8, !tbaa !15
  %arrayidx32 = getelementptr inbounds i32*, i32** %16, i64 %idxprom31
  %17 = load i32*, i32** %arrayidx32, align 8, !tbaa !15
  %arrayidx34 = getelementptr inbounds i32, i32* %17, i64 %indvars.iv81
  %18 = load i32, i32* %arrayidx34, align 4, !tbaa !13
  %idx.ext35 = sext i32 %18 to i64
  %add.ptr36 = getelementptr inbounds %struct.site, %struct.site* %15, i64 %idx.ext35
  %19 = bitcast %struct.site* %add.ptr36 to i8*
  %add.ptr38 = getelementptr inbounds i8, i8* %19, i64 %idx.ext37
  %arrayidx40 = getelementptr inbounds i8*, i8** %dest, i64 %indvars.iv81
  store i8* %add.ptr38, i8** %arrayidx40, align 8, !tbaa !15
  %indvars.iv.next82 = add nuw nsw i64 %indvars.iv81, 1
  %exitcond84.not = icmp eq i64 %indvars.iv.next82, %wide.trip.count83
  br i1 %exitcond84.not, label %sw.epilog, label %for.body30, !llvm.loop !132

sw.epilog:                                        ; preds = %for.body30, %for.body12, %for.body, %for.cond28.preheader, %sw.bb7, %for.cond.preheader, %entry
  ret %struct.msg_tag* null
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @restart_gather(i32 %field, i32 %size, i32 %index, i32 %parity, i8** nocapture %dest, %struct.msg_tag* nocapture %mbuf) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define noalias %struct.msg_tag* @start_gather_from_temp(i8* %field, i32 %size, i32 %index, i32 %parity, i8** nocapture %dest) local_unnamed_addr #10 {
entry:
  switch i32 %parity, label %sw.epilog [
    i32 2, label %for.cond.preheader
    i32 1, label %sw.bb5
    i32 3, label %for.cond25.preheader
  ]

for.cond25.preheader:                             ; preds = %entry
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %idxprom28 = sext i32 %index to i64
  %cmp2671 = icmp sgt i32 %0, 0
  br i1 %cmp2671, label %for.body27.preheader, label %sw.epilog

for.body27.preheader:                             ; preds = %for.cond25.preheader
  %wide.trip.count81 = zext i32 %0 to i64
  br label %for.body27

for.cond.preheader:                               ; preds = %entry
  %1 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %idxprom = sext i32 %index to i64
  %cmp67 = icmp sgt i32 %1, 0
  br i1 %cmp67, label %for.body.preheader, label %sw.epilog

for.body.preheader:                               ; preds = %for.cond.preheader
  %wide.trip.count = zext i32 %1 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %2 = load i32**, i32*** @neighbor, align 8, !tbaa !15
  %arrayidx = getelementptr inbounds i32*, i32** %2, i64 %idxprom
  %3 = load i32*, i32** %arrayidx, align 8, !tbaa !15
  %arrayidx2 = getelementptr inbounds i32, i32* %3, i64 %indvars.iv
  %4 = load i32, i32* %arrayidx2, align 4, !tbaa !13
  %mul = mul nsw i32 %4, %size
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8, i8* %field, i64 %idx.ext
  %arrayidx4 = getelementptr inbounds i8*, i8** %dest, i64 %indvars.iv
  store i8* %add.ptr, i8** %arrayidx4, align 8, !tbaa !15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %sw.epilog, label %for.body, !llvm.loop !133

sw.bb5:                                           ; preds = %entry
  %5 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %6 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %idxprom11 = sext i32 %index to i64
  %cmp969 = icmp slt i32 %5, %6
  br i1 %cmp969, label %for.body10.preheader, label %sw.epilog

for.body10.preheader:                             ; preds = %sw.bb5
  %7 = sext i32 %5 to i64
  %wide.trip.count77 = sext i32 %6 to i64
  br label %for.body10

for.body10:                                       ; preds = %for.body10.preheader, %for.body10
  %indvars.iv75 = phi i64 [ %7, %for.body10.preheader ], [ %indvars.iv.next76, %for.body10 ]
  %8 = load i32**, i32*** @neighbor, align 8, !tbaa !15
  %arrayidx12 = getelementptr inbounds i32*, i32** %8, i64 %idxprom11
  %9 = load i32*, i32** %arrayidx12, align 8, !tbaa !15
  %arrayidx14 = getelementptr inbounds i32, i32* %9, i64 %indvars.iv75
  %10 = load i32, i32* %arrayidx14, align 4, !tbaa !13
  %mul15 = mul nsw i32 %10, %size
  %idx.ext16 = sext i32 %mul15 to i64
  %add.ptr17 = getelementptr inbounds i8, i8* %field, i64 %idx.ext16
  %arrayidx19 = getelementptr inbounds i8*, i8** %dest, i64 %indvars.iv75
  store i8* %add.ptr17, i8** %arrayidx19, align 8, !tbaa !15
  %indvars.iv.next76 = add nsw i64 %indvars.iv75, 1
  %exitcond78.not = icmp eq i64 %indvars.iv.next76, %wide.trip.count77
  br i1 %exitcond78.not, label %sw.epilog, label %for.body10, !llvm.loop !134

for.body27:                                       ; preds = %for.body27.preheader, %for.body27
  %indvars.iv79 = phi i64 [ 0, %for.body27.preheader ], [ %indvars.iv.next80, %for.body27 ]
  %11 = load i32**, i32*** @neighbor, align 8, !tbaa !15
  %arrayidx29 = getelementptr inbounds i32*, i32** %11, i64 %idxprom28
  %12 = load i32*, i32** %arrayidx29, align 8, !tbaa !15
  %arrayidx31 = getelementptr inbounds i32, i32* %12, i64 %indvars.iv79
  %13 = load i32, i32* %arrayidx31, align 4, !tbaa !13
  %mul32 = mul nsw i32 %13, %size
  %idx.ext33 = sext i32 %mul32 to i64
  %add.ptr34 = getelementptr inbounds i8, i8* %field, i64 %idx.ext33
  %arrayidx36 = getelementptr inbounds i8*, i8** %dest, i64 %indvars.iv79
  store i8* %add.ptr34, i8** %arrayidx36, align 8, !tbaa !15
  %indvars.iv.next80 = add nuw nsw i64 %indvars.iv79, 1
  %exitcond82.not = icmp eq i64 %indvars.iv.next80, %wide.trip.count81
  br i1 %exitcond82.not, label %sw.epilog, label %for.body27, !llvm.loop !135

sw.epilog:                                        ; preds = %for.body27, %for.body10, %for.body, %for.cond25.preheader, %sw.bb5, %for.cond.preheader, %entry
  ret %struct.msg_tag* null
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @restart_gather_from_temp(i8* nocapture %field, i32 %size, i32 %index, i32 %parity, i8** nocapture %dest, %struct.msg_tag* nocapture %mbuf) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @wait_gather(%struct.msg_tag* nocapture %mbuf) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @cleanup_gather(%struct.msg_tag* nocapture %mbuf) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct.msg_tag* @start_general_gather(i32 %field, i32 %size, i32* nocapture readonly %displacement, i32 %parity, i8** nocapture %dest) local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @g_gather_flag, align 4, !tbaa !13
  %cmp.not = icmp eq i32 %0, 0
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !15
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.8.65, i64 0, i64 0), i32 0) #35
  tail call void @exit(i32 1) #33
  unreachable

if.end:                                           ; preds = %entry
  %cmp2 = icmp eq i32 %parity, 1
  %2 = load i32, i32* @even_sites_on_node, align 4
  %cond = select i1 %cmp2, i32 %2, i32 0
  %idxprom = sext i32 %cond to i64
  %cmp3 = icmp eq i32 %parity, 2
  %arrayidx17 = getelementptr inbounds i32, i32* %displacement, i64 1
  %arrayidx30 = getelementptr inbounds i32, i32* %displacement, i64 2
  %arrayidx43 = getelementptr inbounds i32, i32* %displacement, i64 3
  %idx.ext = sext i32 %field to i64
  %3 = load i32, i32* @sites_on_node, align 4
  %cond789 = select i1 %cmp3, i32 %2, i32 %3
  %cmp890 = icmp slt i32 %cond, %cond789
  br i1 %cmp890, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %if.end
  %4 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %4, i64 %idxprom
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %if.end55
  %indvars.iv = phi i64 [ %idxprom, %for.body.preheader ], [ %indvars.iv.next, %if.end55 ]
  %s.092 = phi %struct.site* [ %arrayidx, %for.body.preheader ], [ %incdec.ptr, %if.end55 ]
  %5 = load i32, i32* %displacement, align 4, !tbaa !13
  %cmp10.not = icmp eq i32 %5, 0
  %x14 = getelementptr inbounds %struct.site, %struct.site* %s.092, i64 0, i32 0
  %6 = load i16, i16* %x14, align 8, !tbaa !122
  %conv15 = sext i16 %6 to i32
  br i1 %cmp10.not, label %if.end16, label %if.then11

if.then11:                                        ; preds = %for.body
  %add = add nsw i32 %5, %conv15
  %7 = load i32, i32* @nx, align 4, !tbaa !13
  %add13 = add nsw i32 %add, %7
  %rem = srem i32 %add13, %7
  br label %if.end16

if.end16:                                         ; preds = %for.body, %if.then11
  %tx.0 = phi i32 [ %rem, %if.then11 ], [ %conv15, %for.body ]
  %8 = load i32, i32* %arrayidx17, align 4, !tbaa !13
  %cmp18.not = icmp eq i32 %8, 0
  %y27 = getelementptr inbounds %struct.site, %struct.site* %s.092, i64 0, i32 1
  %9 = load i16, i16* %y27, align 2, !tbaa !123
  %conv28 = sext i16 %9 to i32
  br i1 %cmp18.not, label %if.end29, label %if.then20

if.then20:                                        ; preds = %if.end16
  %add23 = add nsw i32 %8, %conv28
  %10 = load i32, i32* @ny, align 4, !tbaa !13
  %add24 = add nsw i32 %add23, %10
  %rem25 = srem i32 %add24, %10
  br label %if.end29

if.end29:                                         ; preds = %if.end16, %if.then20
  %ty.0 = phi i32 [ %rem25, %if.then20 ], [ %conv28, %if.end16 ]
  %11 = load i32, i32* %arrayidx30, align 4, !tbaa !13
  %cmp31.not = icmp eq i32 %11, 0
  %z40 = getelementptr inbounds %struct.site, %struct.site* %s.092, i64 0, i32 2
  %12 = load i16, i16* %z40, align 4, !tbaa !124
  %conv41 = sext i16 %12 to i32
  br i1 %cmp31.not, label %if.end42, label %if.then33

if.then33:                                        ; preds = %if.end29
  %add36 = add nsw i32 %11, %conv41
  %13 = load i32, i32* @nz, align 4, !tbaa !13
  %add37 = add nsw i32 %add36, %13
  %rem38 = srem i32 %add37, %13
  br label %if.end42

if.end42:                                         ; preds = %if.end29, %if.then33
  %tz.0 = phi i32 [ %rem38, %if.then33 ], [ %conv41, %if.end29 ]
  %14 = load i32, i32* %arrayidx43, align 4, !tbaa !13
  %cmp44.not = icmp eq i32 %14, 0
  %t53 = getelementptr inbounds %struct.site, %struct.site* %s.092, i64 0, i32 3
  %15 = load i16, i16* %t53, align 2, !tbaa !19
  %conv54 = sext i16 %15 to i32
  br i1 %cmp44.not, label %if.end55, label %if.then46

if.then46:                                        ; preds = %if.end42
  %add49 = add nsw i32 %14, %conv54
  %16 = load i32, i32* @nt, align 4, !tbaa !13
  %add50 = add nsw i32 %add49, %16
  %rem51 = srem i32 %add50, %16
  br label %if.end55

if.end55:                                         ; preds = %if.end42, %if.then46
  %tt.0 = phi i32 [ %rem51, %if.then46 ], [ %conv54, %if.end42 ]
  %17 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %call56 = tail call i32 @node_index(i32 %tx.0, i32 %ty.0, i32 %tz.0, i32 %tt.0) #32
  %idxprom57 = sext i32 %call56 to i64
  %arrayidx58 = getelementptr inbounds %struct.site, %struct.site* %17, i64 %idxprom57
  %18 = bitcast %struct.site* %arrayidx58 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %idx.ext
  %arrayidx60 = getelementptr inbounds i8*, i8** %dest, i64 %indvars.iv
  store i8* %add.ptr, i8** %arrayidx60, align 8, !tbaa !15
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.092, i64 1
  %19 = load i32, i32* @even_sites_on_node, align 4
  %20 = load i32, i32* @sites_on_node, align 4
  %cond7 = select i1 %cmp3, i32 %19, i32 %20
  %21 = sext i32 %cond7 to i64
  %cmp8 = icmp slt i64 %indvars.iv.next, %21
  br i1 %cmp8, label %for.body, label %for.end, !llvm.loop !136

for.end:                                          ; preds = %if.end55, %if.end
  store i32 1, i32* @g_gather_flag, align 4, !tbaa !13
  ret %struct.msg_tag* null
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fprintf(%struct._IO_FILE* nocapture noundef, i8* nocapture noundef readonly, ...) local_unnamed_addr #8

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn writeonly
define void @wait_general_gather(%struct.msg_tag* nocapture readnone %mbuf) local_unnamed_addr #20 {
entry:
  store i32 0, i32* @g_gather_flag, align 4, !tbaa !13
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @cleanup_general_gather(%struct.msg_tag* nocapture %mbuf) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i8* @field_pointer_at_coordinates(i32 %field, i32 %size, i32 %x, i32 %y, i32 %z, i32 %t) local_unnamed_addr #1 {
entry:
  %call = tail call i32 @node_index(i32 %x, i32 %y, i32 %z, i32 %t) #32
  %0 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom = sext i32 %call to i64
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %0, i64 %idxprom
  %1 = bitcast %struct.site* %arrayidx to i8*
  %idx.ext = sext i32 %field to i64
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext
  ret i8* %add.ptr
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define i8* @field_pointer_at_direction(i32 %field, i32 %size, %struct.site* %s, i32 %direction) local_unnamed_addr #0 {
entry:
  %0 = load i32**, i32*** @neighbor, align 8, !tbaa !15
  %idxprom = sext i32 %direction to i64
  %arrayidx = getelementptr inbounds i32*, i32** %0, i64 %idxprom
  %1 = load i32*, i32** %arrayidx, align 8, !tbaa !15
  %2 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %sub.ptr.lhs.cast = ptrtoint %struct.site* %s to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.site* %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 3200
  %arrayidx1 = getelementptr inbounds i32, i32* %1, i64 %sub.ptr.div
  %3 = load i32, i32* %arrayidx1, align 4, !tbaa !13
  %conv = sext i32 %3 to i64
  %4 = inttoptr i64 %conv to i8*
  %idx.ext = sext i32 %field to i64
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext
  ret i8* %add.ptr
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @cleanup_field_pointer(i8* nocapture %buf) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @send_field(i8* nocapture readnone %buf, i32 %size, i32 %tonode) local_unnamed_addr #13 {
entry:
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @str.21, i64 0, i64 0))
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @get_field(i8* nocapture readnone %buf, i32 %size) local_unnamed_addr #13 {
entry:
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @str.21, i64 0, i64 0))
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define i8* @machine_type() local_unnamed_addr #17 {
entry:
  ret i8* getelementptr inbounds ([17 x i8], [17 x i8]* @name, i64 0, i64 0)
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define i32 @mynode() local_unnamed_addr #17 {
entry:
  ret i32 0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define i32 @numnodes() local_unnamed_addr #17 {
entry:
  ret i32 1
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @g_sync() local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @g_floatsum(float* nocapture %fpt) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @g_doublesum(double* nocapture %dpt) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @g_vecdoublesum(double* nocapture %dpt, i32 %ndoubles) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @g_complexsum(%struct.complex* nocapture %cpt) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @g_dcomplexsum(%struct.complex* nocapture %cpt) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @g_veccomplexsum(%struct.complex* nocapture %cpt, i32 %ncomplex) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @g_wvectorsum(%struct.wilson_vector* nocapture %wvpt) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @g_xor32(i32* nocapture %pt) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @g_floatmax(float* nocapture %fpt) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @g_doublemax(double* nocapture %dpt) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @broadcast_float(float* nocapture %fpt) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @broadcast_double(double* nocapture %dpt) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @broadcast_complex(%struct.complex* nocapture %cpt) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @broadcast_dcomplex(%struct.complex* nocapture %cpt) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @broadcast_bytes(i8* nocapture %buf, i32 %size) local_unnamed_addr #17 {
entry:
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @send_integer(i32 %tonode, i32* nocapture readnone %address) local_unnamed_addr #13 {
entry:
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @str.21, i64 0, i64 0))
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @receive_integer(i32* nocapture readnone %address) local_unnamed_addr #13 {
entry:
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @str.21, i64 0, i64 0))
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define double @dclock() local_unnamed_addr #17 {
entry:
  ret double 0.000000e+00
}

; Function Attrs: noinline noreturn nounwind optsize uwtable
define void @normal_exit(i32 %status) local_unnamed_addr #18 {
entry:
  tail call void @exit(i32 %status) #33
  unreachable
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @sub_su3_matrix(%struct.su3_matrix* nocapture readonly %a, %struct.su3_matrix* nocapture readonly %b, %struct.su3_matrix* nocapture %c) local_unnamed_addr #10 {
entry:
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %entry, %for.inc36
  %indvars.iv60 = phi i64 [ 0, %entry ], [ %indvars.iv.next61, %for.inc36 ]
  br label %for.body3

for.body3:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %real11 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 0
  %1 = load double, double* %real11, align 8, !tbaa !4
  %sub = fsub double %0, %1
  %real17 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 0
  store double %sub, double* %real17, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 1
  %2 = load double, double* %imag, align 8, !tbaa !9
  %imag28 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 1
  %3 = load double, double* %imag28, align 8, !tbaa !9
  %sub29 = fsub double %2, %3
  %imag35 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 1
  store double %sub29, double* %imag35, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc36, label %for.body3, !llvm.loop !137

for.inc36:                                        ; preds = %for.body3
  %indvars.iv.next61 = add nuw nsw i64 %indvars.iv60, 1
  %exitcond62.not = icmp eq i64 %indvars.iv.next61, 3
  br i1 %exitcond62.not, label %for.end38, label %for.cond1.preheader, !llvm.loop !138

for.end38:                                        ; preds = %for.inc36
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @cleanup_gathers(%struct.msg_tag** nocapture readonly %tags1, %struct.msg_tag** nocapture readonly %tags2) local_unnamed_addr #1 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv47 = phi i64 [ 0, %entry ], [ %indvars.iv.next48, %for.body ]
  %arrayidx = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tags1, i64 %indvars.iv47
  %0 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %0) #32
  %1 = sub nuw nsw i64 7, %indvars.iv47
  %arrayidx2 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tags1, i64 %1
  %2 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx2, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %2) #32
  %arrayidx4 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tags2, i64 %indvars.iv47
  %3 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx4, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %3) #32
  %arrayidx7 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tags2, i64 %1
  %4 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx7, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %4) #32
  %indvars.iv.next48 = add nuw nsw i64 %indvars.iv47, 1
  %exitcond50.not = icmp eq i64 %indvars.iv.next48, 4
  br i1 %exitcond50.not, label %for.body10, label %for.body, !llvm.loop !139

for.body10:                                       ; preds = %for.body, %for.body10
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body10 ], [ 8, %for.body ]
  %arrayidx12 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tags1, i64 %indvars.iv
  %5 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx12, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %5) #32
  %6 = sub nuw nsw i64 23, %indvars.iv
  %arrayidx15 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tags1, i64 %6
  %7 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx15, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %7) #32
  %arrayidx17 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tags2, i64 %indvars.iv
  %8 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx17, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %8) #32
  %arrayidx20 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tags2, i64 %6
  %9 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx20, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %9) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 12
  br i1 %exitcond.not, label %for.end23, label %for.body10, !llvm.loop !140

for.end23:                                        ; preds = %for.body10
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @cleanup_dslash_temps() local_unnamed_addr #1 {
entry:
  %.b = load i1, i1* @temp_not_allocated, align 4
  br i1 %.b, label %for.body, label %if.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds [9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 %indvars.iv
  %0 = bitcast %struct.su3_vector** %arrayidx to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !15
  tail call void @free(i8* %1) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 9
  br i1 %exitcond.not, label %if.end, label %for.body, !llvm.loop !141

if.end:                                           ; preds = %for.body, %entry
  store i1 false, i1* @temp_not_allocated, align 4
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @dslash_fn(i32 %src, i32 %dest, i32 %parity) local_unnamed_addr #1 {
entry:
  %tag = alloca [16 x %struct.msg_tag*], align 16
  %0 = bitcast [16 x %struct.msg_tag*]* %tag to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #31
  %1 = load i32, i32* @valid_longlinks, align 4, !tbaa !13
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (...) bitcast (void ()* @load_longlinks to void (...)*)() #32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* @valid_fatlinks, align 4, !tbaa !13
  %tobool1.not = icmp eq i32 %2, 0
  br i1 %tobool1.not, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  tail call void (...) bitcast (void ()* @load_fatlinks to void (...)*)() #32
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  switch i32 %parity, label %sw.epilog [
    i32 3, label %sw.bb5
    i32 1, label %sw.bb4
  ]

sw.bb4:                                           ; preds = %if.end3
  br label %sw.epilog

sw.bb5:                                           ; preds = %if.end3
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end3, %sw.bb5, %sw.bb4
  %cmp15 = phi i1 [ false, %sw.bb5 ], [ true, %sw.bb4 ], [ false, %if.end3 ]
  %cmp16 = phi i1 [ false, %sw.bb5 ], [ false, %sw.bb4 ], [ true, %if.end3 ]
  br label %for.body

for.body:                                         ; preds = %sw.epilog, %for.body
  %indvars.iv351 = phi i64 [ 0, %sw.epilog ], [ %indvars.iv.next352, %for.body ]
  %arrayidx = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %indvars.iv351
  %3 = load i8**, i8*** %arrayidx, align 8, !tbaa !15
  %4 = trunc i64 %indvars.iv351 to i32
  %call = tail call %struct.msg_tag* @start_gather(i32 %src, i32 48, i32 %4, i32 %parity, i8** %3) #32
  %arrayidx7 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %indvars.iv351
  store %struct.msg_tag* %call, %struct.msg_tag** %arrayidx7, align 8, !tbaa !15
  %5 = add nuw nsw i64 %indvars.iv351, 8
  %arrayidx10 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %5
  %6 = load i8**, i8*** %arrayidx10, align 8, !tbaa !15
  %7 = trunc i64 %5 to i32
  %call11 = tail call %struct.msg_tag* @start_gather(i32 %src, i32 48, i32 %7, i32 %parity, i8** %6) #32
  %arrayidx14 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %5
  store %struct.msg_tag* %call11, %struct.msg_tag** %arrayidx14, align 8, !tbaa !15
  %indvars.iv.next352 = add nuw nsw i64 %indvars.iv351, 1
  %exitcond354.not = icmp eq i64 %indvars.iv.next352, 4
  br i1 %exitcond354.not, label %for.end, label %for.body, !llvm.loop !142

for.end:                                          ; preds = %for.body
  %8 = load i32, i32* @even_sites_on_node, align 4
  %9 = load i32, i32* @sites_on_node, align 4
  %cond = select i1 %cmp15, i32 %8, i32 %9
  %cond20 = select i1 %cmp16, i32 %8, i32 0
  %idx.ext = sext i32 %src to i64
  %cmp24315 = icmp slt i32 %cond20, %cond
  br i1 %cmp24315, label %for.body25.preheader, label %for.body36.preheader

for.body25.preheader:                             ; preds = %for.end
  %10 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom21 = sext i32 %cond20 to i64
  %arrayidx22 = getelementptr inbounds %struct.site, %struct.site* %10, i64 %idxprom21
  br label %for.body25

for.body25:                                       ; preds = %for.body25.preheader, %for.body25
  %i.0317 = phi i32 [ %inc32, %for.body25 ], [ %cond20, %for.body25.preheader ]
  %s.0316 = phi %struct.site* [ %incdec.ptr, %for.body25 ], [ %arrayidx22, %for.body25.preheader ]
  %arraydecay = getelementptr inbounds %struct.site, %struct.site* %s.0316, i64 0, i32 10, i64 0
  %arraydecay26 = getelementptr inbounds %struct.site, %struct.site* %s.0316, i64 0, i32 9, i64 0
  %11 = bitcast %struct.site* %s.0316 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext
  %12 = bitcast i8* %add.ptr to %struct.su3_vector*
  %arraydecay27 = getelementptr inbounds %struct.site, %struct.site* %s.0316, i64 0, i32 19, i64 0
  tail call void @mult_adj_su3_mat_vec_4dir(%struct.su3_matrix* nonnull %arraydecay, %struct.su3_vector* %12, %struct.su3_vector* nonnull %arraydecay27) #32
  %arraydecay30 = getelementptr inbounds %struct.site, %struct.site* %s.0316, i64 0, i32 20, i64 0
  tail call void @mult_adj_su3_mat_vec_4dir(%struct.su3_matrix* nonnull %arraydecay26, %struct.su3_vector* %12, %struct.su3_vector* nonnull %arraydecay30) #32
  %inc32 = add i32 %i.0317, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0316, i64 1
  %exitcond350.not = icmp eq i32 %inc32, %cond
  br i1 %exitcond350.not, label %for.body36.preheader, label %for.body25, !llvm.loop !143

for.body36.preheader:                             ; preds = %for.body25, %for.end
  br label %for.body36

for.body36:                                       ; preds = %for.body36.preheader, %for.body36
  %indvars.iv344 = phi i64 [ %indvars.iv.next345, %for.body36 ], [ 0, %for.body36.preheader ]
  %dir.1314 = phi i32 [ %inc50, %for.body36 ], [ 0, %for.body36.preheader ]
  %13 = sub nuw nsw i64 7, %indvars.iv344
  %sub = sub nuw nsw i32 7, %dir.1314
  %arrayidx44 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %13
  %14 = load i8**, i8*** %arrayidx44, align 8, !tbaa !15
  %15 = trunc i64 %indvars.iv344 to i32
  %16 = mul i32 %15, 48
  %17 = add i32 %16, 2480
  %call45 = tail call %struct.msg_tag* @start_gather(i32 %17, i32 48, i32 %sub, i32 %parity, i8** %14) #32
  %arrayidx48 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %13
  store %struct.msg_tag* %call45, %struct.msg_tag** %arrayidx48, align 8, !tbaa !15
  %indvars.iv.next345 = add nuw nsw i64 %indvars.iv344, 1
  %inc50 = add nuw nsw i32 %dir.1314, 1
  %exitcond349.not = icmp eq i64 %indvars.iv.next345, 4
  br i1 %exitcond349.not, label %for.body55, label %for.body36, !llvm.loop !144

for.body55:                                       ; preds = %for.body36, %for.body55
  %indvars.iv339 = phi i64 [ %indvars.iv.next340, %for.body55 ], [ 8, %for.body36 ]
  %dir.2313 = phi i32 [ %inc75, %for.body55 ], [ 8, %for.body36 ]
  %18 = sub nuw nsw i64 23, %indvars.iv339
  %sub66 = sub nuw nsw i32 23, %dir.2313
  %arrayidx69 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %18
  %19 = load i8**, i8*** %arrayidx69, align 8, !tbaa !15
  %20 = trunc i64 %indvars.iv339 to i32
  %21 = mul i32 %20, 48
  %22 = add i32 %21, 2288
  %call70 = tail call %struct.msg_tag* @start_gather(i32 %22, i32 48, i32 %sub66, i32 %parity, i8** %19) #32
  %arrayidx73 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %18
  store %struct.msg_tag* %call70, %struct.msg_tag** %arrayidx73, align 8, !tbaa !15
  %indvars.iv.next340 = add nuw nsw i64 %indvars.iv339, 1
  %inc75 = add nuw nsw i32 %dir.2313, 1
  %exitcond343.not = icmp eq i64 %indvars.iv.next340, 12
  br i1 %exitcond343.not, label %for.body80, label %for.body55, !llvm.loop !145

for.body80:                                       ; preds = %for.body55, %for.body80
  %indvars.iv335 = phi i64 [ %indvars.iv.next336, %for.body80 ], [ 0, %for.body55 ]
  %arrayidx82 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %indvars.iv335
  %23 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx82, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %23) #32
  %24 = add nuw nsw i64 %indvars.iv335, 8
  %arrayidx85 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %24
  %25 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx85, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %25) #32
  %indvars.iv.next336 = add nuw nsw i64 %indvars.iv335, 1
  %exitcond338.not = icmp eq i64 %indvars.iv.next336, 4
  br i1 %exitcond338.not, label %for.body92, label %for.body80, !llvm.loop !146

for.body92:                                       ; preds = %for.body80, %for.body92
  %indvars.iv331 = phi i64 [ %indvars.iv.next332, %for.body92 ], [ 0, %for.body80 ]
  %26 = sub nuw nsw i64 7, %indvars.iv331
  %arrayidx95 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %26
  %27 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx95, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %27) #32
  %indvars.iv.next332 = add nuw nsw i64 %indvars.iv331, 1
  %exitcond334.not = icmp eq i64 %indvars.iv.next332, 4
  br i1 %exitcond334.not, label %for.body102, label %for.body92, !llvm.loop !147

for.body102:                                      ; preds = %for.body92, %for.body102
  %indvars.iv327 = phi i64 [ %indvars.iv.next328, %for.body102 ], [ 8, %for.body92 ]
  %28 = sub nuw nsw i64 23, %indvars.iv327
  %arrayidx105 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %28
  %29 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx105, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %29) #32
  %indvars.iv.next328 = add nuw nsw i64 %indvars.iv327, 1
  %exitcond330.not = icmp eq i64 %indvars.iv.next328, 12
  br i1 %exitcond330.not, label %for.end108, label %for.body102, !llvm.loop !148

for.end108:                                       ; preds = %for.body102
  %cmp110 = icmp eq i32 %parity, 2
  %30 = load i32, i32* @even_sites_on_node, align 4
  %31 = load i32, i32* @sites_on_node, align 4
  %cond115 = select i1 %cmp110, i32 %30, i32 %31
  %cmp116 = icmp eq i32 %parity, 1
  %cond121 = select i1 %cmp116, i32 %30, i32 0
  %idxprom122 = sext i32 %cond121 to i64
  %idx.ext140 = sext i32 %dest to i64
  %cmp125307 = icmp slt i32 %cond121, %cond115
  br i1 %cmp125307, label %for.body127.preheader, label %for.body181.preheader

for.body127.preheader:                            ; preds = %for.end108
  %32 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx123 = getelementptr inbounds %struct.site, %struct.site* %32, i64 %idxprom122
  br label %for.body127

for.body127:                                      ; preds = %for.body127.preheader, %for.body127
  %indvars.iv324 = phi i64 [ %idxprom122, %for.body127.preheader ], [ %indvars.iv.next325, %for.body127 ]
  %s.1308 = phi %struct.site* [ %arrayidx123, %for.body127.preheader ], [ %incdec.ptr176, %for.body127 ]
  %arraydecay129 = getelementptr inbounds %struct.site, %struct.site* %s.1308, i64 0, i32 10, i64 0
  %arraydecay131 = getelementptr inbounds %struct.site, %struct.site* %s.1308, i64 0, i32 9, i64 0
  %33 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx133 = getelementptr inbounds i8*, i8** %33, i64 %indvars.iv324
  %34 = bitcast i8** %arrayidx133 to %struct.su3_vector**
  %35 = load %struct.su3_vector*, %struct.su3_vector** %34, align 8, !tbaa !15
  %36 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 1), align 8, !tbaa !15
  %arrayidx135 = getelementptr inbounds i8*, i8** %36, i64 %indvars.iv324
  %37 = bitcast i8** %arrayidx135 to %struct.su3_vector**
  %38 = load %struct.su3_vector*, %struct.su3_vector** %37, align 8, !tbaa !15
  %39 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 2), align 16, !tbaa !15
  %arrayidx137 = getelementptr inbounds i8*, i8** %39, i64 %indvars.iv324
  %40 = bitcast i8** %arrayidx137 to %struct.su3_vector**
  %41 = load %struct.su3_vector*, %struct.su3_vector** %40, align 8, !tbaa !15
  %42 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 3), align 8, !tbaa !15
  %arrayidx139 = getelementptr inbounds i8*, i8** %42, i64 %indvars.iv324
  %43 = bitcast i8** %arrayidx139 to %struct.su3_vector**
  %44 = load %struct.su3_vector*, %struct.su3_vector** %43, align 8, !tbaa !15
  %45 = bitcast %struct.site* %s.1308 to i8*
  %add.ptr141 = getelementptr inbounds i8, i8* %45, i64 %idx.ext140
  %46 = bitcast i8* %add.ptr141 to %struct.su3_vector*
  tail call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* nonnull %arraydecay129, %struct.su3_vector* %35, %struct.su3_vector* %38, %struct.su3_vector* %41, %struct.su3_vector* %44, %struct.su3_vector* %46) #32
  %47 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 8), align 16, !tbaa !15
  %arrayidx143 = getelementptr inbounds i8*, i8** %47, i64 %indvars.iv324
  %48 = bitcast i8** %arrayidx143 to %struct.su3_vector**
  %49 = load %struct.su3_vector*, %struct.su3_vector** %48, align 8, !tbaa !15
  %50 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 9), align 8, !tbaa !15
  %arrayidx145 = getelementptr inbounds i8*, i8** %50, i64 %indvars.iv324
  %51 = bitcast i8** %arrayidx145 to %struct.su3_vector**
  %52 = load %struct.su3_vector*, %struct.su3_vector** %51, align 8, !tbaa !15
  %53 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 10), align 16, !tbaa !15
  %arrayidx147 = getelementptr inbounds i8*, i8** %53, i64 %indvars.iv324
  %54 = bitcast i8** %arrayidx147 to %struct.su3_vector**
  %55 = load %struct.su3_vector*, %struct.su3_vector** %54, align 8, !tbaa !15
  %56 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 11), align 8, !tbaa !15
  %arrayidx149 = getelementptr inbounds i8*, i8** %56, i64 %indvars.iv324
  %57 = bitcast i8** %arrayidx149 to %struct.su3_vector**
  %58 = load %struct.su3_vector*, %struct.su3_vector** %57, align 8, !tbaa !15
  %templongv1 = getelementptr inbounds %struct.site, %struct.site* %s.1308, i64 0, i32 21
  tail call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* nonnull %arraydecay131, %struct.su3_vector* %49, %struct.su3_vector* %52, %struct.su3_vector* %55, %struct.su3_vector* %58, %struct.su3_vector* nonnull %templongv1) #32
  %59 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 7), align 8, !tbaa !15
  %arrayidx153 = getelementptr inbounds i8*, i8** %59, i64 %indvars.iv324
  %60 = bitcast i8** %arrayidx153 to %struct.su3_vector**
  %61 = load %struct.su3_vector*, %struct.su3_vector** %60, align 8, !tbaa !15
  %62 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 6), align 16, !tbaa !15
  %arrayidx155 = getelementptr inbounds i8*, i8** %62, i64 %indvars.iv324
  %63 = bitcast i8** %arrayidx155 to %struct.su3_vector**
  %64 = load %struct.su3_vector*, %struct.su3_vector** %63, align 8, !tbaa !15
  %65 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 5), align 8, !tbaa !15
  %arrayidx157 = getelementptr inbounds i8*, i8** %65, i64 %indvars.iv324
  %66 = bitcast i8** %arrayidx157 to %struct.su3_vector**
  %67 = load %struct.su3_vector*, %struct.su3_vector** %66, align 8, !tbaa !15
  %68 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 4), align 16, !tbaa !15
  %arrayidx159 = getelementptr inbounds i8*, i8** %68, i64 %indvars.iv324
  %69 = bitcast i8** %arrayidx159 to %struct.su3_vector**
  %70 = load %struct.su3_vector*, %struct.su3_vector** %69, align 8, !tbaa !15
  tail call void @sub_four_su3_vecs(%struct.su3_vector* %46, %struct.su3_vector* %61, %struct.su3_vector* %64, %struct.su3_vector* %67, %struct.su3_vector* %70) #32
  %71 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 15), align 8, !tbaa !15
  %arrayidx162 = getelementptr inbounds i8*, i8** %71, i64 %indvars.iv324
  %72 = bitcast i8** %arrayidx162 to %struct.su3_vector**
  %73 = load %struct.su3_vector*, %struct.su3_vector** %72, align 8, !tbaa !15
  %74 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 14), align 16, !tbaa !15
  %arrayidx164 = getelementptr inbounds i8*, i8** %74, i64 %indvars.iv324
  %75 = bitcast i8** %arrayidx164 to %struct.su3_vector**
  %76 = load %struct.su3_vector*, %struct.su3_vector** %75, align 8, !tbaa !15
  %77 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 13), align 8, !tbaa !15
  %arrayidx166 = getelementptr inbounds i8*, i8** %77, i64 %indvars.iv324
  %78 = bitcast i8** %arrayidx166 to %struct.su3_vector**
  %79 = load %struct.su3_vector*, %struct.su3_vector** %78, align 8, !tbaa !15
  %80 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 12), align 16, !tbaa !15
  %arrayidx168 = getelementptr inbounds i8*, i8** %80, i64 %indvars.iv324
  %81 = bitcast i8** %arrayidx168 to %struct.su3_vector**
  %82 = load %struct.su3_vector*, %struct.su3_vector** %81, align 8, !tbaa !15
  tail call void @sub_four_su3_vecs(%struct.su3_vector* nonnull %templongv1, %struct.su3_vector* %73, %struct.su3_vector* %76, %struct.su3_vector* %79, %struct.su3_vector* %82) #32
  tail call void @add_su3_vector(%struct.su3_vector* %46, %struct.su3_vector* nonnull %templongv1, %struct.su3_vector* %46) #32
  %indvars.iv.next325 = add nsw i64 %indvars.iv324, 1
  %incdec.ptr176 = getelementptr inbounds %struct.site, %struct.site* %s.1308, i64 1
  %lftr.wideiv = trunc i64 %indvars.iv.next325 to i32
  %exitcond326.not = icmp eq i32 %cond115, %lftr.wideiv
  br i1 %exitcond326.not, label %for.body181.preheader, label %for.body127, !llvm.loop !149

for.body181.preheader:                            ; preds = %for.body127, %for.end108
  br label %for.body181

for.body181:                                      ; preds = %for.body181.preheader, %for.body181
  %indvars.iv320 = phi i64 [ %indvars.iv.next321, %for.body181 ], [ 0, %for.body181.preheader ]
  %arrayidx183 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %indvars.iv320
  %83 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx183, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %83) #32
  %84 = sub nuw nsw i64 7, %indvars.iv320
  %arrayidx186 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %84
  %85 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx186, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %85) #32
  %indvars.iv.next321 = add nuw nsw i64 %indvars.iv320, 1
  %exitcond323.not = icmp eq i64 %indvars.iv.next321, 4
  br i1 %exitcond323.not, label %for.body193, label %for.body181, !llvm.loop !150

for.body193:                                      ; preds = %for.body181, %for.body193
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body193 ], [ 8, %for.body181 ]
  %arrayidx195 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %indvars.iv
  %86 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx195, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %86) #32
  %87 = sub nuw nsw i64 23, %indvars.iv
  %arrayidx198 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %87
  %88 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx198, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %88) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 12
  br i1 %exitcond.not, label %for.end201, label %for.body193, !llvm.loop !151

for.end201:                                       ; preds = %for.body193
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @dslash_fn_special(i32 %src, i32 %dest, i32 %parity, %struct.msg_tag** nocapture %tag, i32 %start) local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @valid_longlinks, align 4, !tbaa !13
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void (...) bitcast (void ()* @load_longlinks to void (...)*)() #32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* @valid_fatlinks, align 4, !tbaa !13
  %tobool1.not = icmp eq i32 %1, 0
  br i1 %tobool1.not, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  tail call void (...) bitcast (void ()* @load_fatlinks to void (...)*)() #32
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  switch i32 %parity, label %sw.epilog [
    i32 3, label %sw.bb5
    i32 1, label %sw.bb4
  ]

sw.bb4:                                           ; preds = %if.end3
  br label %sw.epilog

sw.bb5:                                           ; preds = %if.end3
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end3, %sw.bb5, %sw.bb4
  %cmp34 = phi i1 [ false, %sw.bb5 ], [ true, %sw.bb4 ], [ false, %if.end3 ]
  %cmp35 = phi i1 [ false, %sw.bb5 ], [ false, %sw.bb4 ], [ true, %if.end3 ]
  %cmp6 = icmp eq i32 %start, 1
  br label %for.body

for.body:                                         ; preds = %sw.epilog, %for.inc
  %indvars.iv430 = phi i64 [ 0, %sw.epilog ], [ %indvars.iv.next431, %for.inc ]
  %arrayidx = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %indvars.iv430
  %2 = load i8**, i8*** %arrayidx, align 8, !tbaa !15
  br i1 %cmp6, label %if.then7, label %if.else

if.then7:                                         ; preds = %for.body
  %3 = trunc i64 %indvars.iv430 to i32
  %call = tail call %struct.msg_tag* @start_gather(i32 %src, i32 48, i32 %3, i32 %parity, i8** %2) #32
  %arrayidx9 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %indvars.iv430
  store %struct.msg_tag* %call, %struct.msg_tag** %arrayidx9, align 8, !tbaa !15
  br label %for.inc

if.else:                                          ; preds = %for.body
  %arrayidx13 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %indvars.iv430
  %4 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx13, align 8, !tbaa !15
  %5 = trunc i64 %indvars.iv430 to i32
  tail call void @restart_gather(i32 %src, i32 48, i32 %5, i32 %parity, i8** %2, %struct.msg_tag* %4) #32
  br label %for.inc

for.inc:                                          ; preds = %if.then7, %if.else
  %indvars.iv.next431 = add nuw nsw i64 %indvars.iv430, 1
  %exitcond432.not = icmp eq i64 %indvars.iv.next431, 4
  br i1 %exitcond432.not, label %for.body17, label %for.body, !llvm.loop !152

for.body17:                                       ; preds = %for.inc, %for.inc31
  %indvars.iv427 = phi i64 [ %indvars.iv.next428, %for.inc31 ], [ 8, %for.inc ]
  %arrayidx21 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %indvars.iv427
  %6 = load i8**, i8*** %arrayidx21, align 8, !tbaa !15
  br i1 %cmp6, label %if.then19, label %if.else25

if.then19:                                        ; preds = %for.body17
  %7 = trunc i64 %indvars.iv427 to i32
  %call22 = tail call %struct.msg_tag* @start_gather(i32 %src, i32 48, i32 %7, i32 %parity, i8** %6) #32
  %arrayidx24 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %indvars.iv427
  store %struct.msg_tag* %call22, %struct.msg_tag** %arrayidx24, align 8, !tbaa !15
  br label %for.inc31

if.else25:                                        ; preds = %for.body17
  %arrayidx29 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %indvars.iv427
  %8 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx29, align 8, !tbaa !15
  %9 = trunc i64 %indvars.iv427 to i32
  tail call void @restart_gather(i32 %src, i32 48, i32 %9, i32 %parity, i8** %6, %struct.msg_tag* %8) #32
  br label %for.inc31

for.inc31:                                        ; preds = %if.then19, %if.else25
  %indvars.iv.next428 = add nuw nsw i64 %indvars.iv427, 1
  %exitcond429.not = icmp eq i64 %indvars.iv.next428, 12
  br i1 %exitcond429.not, label %for.end33, label %for.body17, !llvm.loop !153

for.end33:                                        ; preds = %for.inc31
  %10 = load i32, i32* @even_sites_on_node, align 4
  %11 = load i32, i32* @sites_on_node, align 4
  %cond = select i1 %cmp34, i32 %10, i32 %11
  %cond39 = select i1 %cmp35, i32 %10, i32 0
  %idx.ext = sext i32 %src to i64
  %cmp43389 = icmp slt i32 %cond39, %cond
  br i1 %cmp43389, label %for.body44.preheader, label %for.body55.preheader

for.body44.preheader:                             ; preds = %for.end33
  %12 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom40 = sext i32 %cond39 to i64
  %arrayidx41 = getelementptr inbounds %struct.site, %struct.site* %12, i64 %idxprom40
  br label %for.body44

for.body44:                                       ; preds = %for.body44.preheader, %for.body44
  %i.0391 = phi i32 [ %inc51, %for.body44 ], [ %cond39, %for.body44.preheader ]
  %s.0390 = phi %struct.site* [ %incdec.ptr, %for.body44 ], [ %arrayidx41, %for.body44.preheader ]
  %arraydecay = getelementptr inbounds %struct.site, %struct.site* %s.0390, i64 0, i32 10, i64 0
  %arraydecay45 = getelementptr inbounds %struct.site, %struct.site* %s.0390, i64 0, i32 9, i64 0
  %13 = bitcast %struct.site* %s.0390 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext
  %14 = bitcast i8* %add.ptr to %struct.su3_vector*
  %arraydecay46 = getelementptr inbounds %struct.site, %struct.site* %s.0390, i64 0, i32 19, i64 0
  tail call void @mult_adj_su3_mat_vec_4dir(%struct.su3_matrix* nonnull %arraydecay, %struct.su3_vector* %14, %struct.su3_vector* nonnull %arraydecay46) #32
  %arraydecay49 = getelementptr inbounds %struct.site, %struct.site* %s.0390, i64 0, i32 20, i64 0
  tail call void @mult_adj_su3_mat_vec_4dir(%struct.su3_matrix* nonnull %arraydecay45, %struct.su3_vector* %14, %struct.su3_vector* nonnull %arraydecay49) #32
  %inc51 = add i32 %i.0391, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0390, i64 1
  %exitcond426.not = icmp eq i32 %inc51, %cond
  br i1 %exitcond426.not, label %for.body55.preheader, label %for.body44, !llvm.loop !154

for.body55.preheader:                             ; preds = %for.body44, %for.end33
  br label %for.body55

for.body55:                                       ; preds = %for.body55.preheader, %for.inc88
  %indvars.iv417 = phi i64 [ %indvars.iv.next418, %for.inc88 ], [ 0, %for.body55.preheader ]
  %dir.2387 = phi i32 [ %inc89, %for.inc88 ], [ 0, %for.body55.preheader ]
  %15 = sub nuw nsw i64 7, %indvars.iv417
  %sub = sub nuw nsw i32 7, %dir.2387
  %arrayidx65 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %15
  %16 = load i8**, i8*** %arrayidx65, align 8, !tbaa !15
  br i1 %cmp6, label %if.then57, label %if.else70

if.then57:                                        ; preds = %for.body55
  %17 = trunc i64 %indvars.iv417 to i32
  %18 = mul i32 %17, 48
  %19 = add i32 %18, 2480
  %call66 = tail call %struct.msg_tag* @start_gather(i32 %19, i32 48, i32 %sub, i32 %parity, i8** %16) #32
  %arrayidx69 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %15
  store %struct.msg_tag* %call66, %struct.msg_tag** %arrayidx69, align 8, !tbaa !15
  br label %for.inc88

if.else70:                                        ; preds = %for.body55
  %arrayidx86 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %15
  %20 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx86, align 8, !tbaa !15
  %21 = trunc i64 %indvars.iv417 to i32
  %22 = mul i32 %21, 48
  %23 = add i32 %22, 2480
  tail call void @restart_gather(i32 %23, i32 48, i32 %sub, i32 %parity, i8** %16, %struct.msg_tag* %20) #32
  br label %for.inc88

for.inc88:                                        ; preds = %if.then57, %if.else70
  %indvars.iv.next418 = add nuw nsw i64 %indvars.iv417, 1
  %inc89 = add nuw nsw i32 %dir.2387, 1
  %exitcond425.not = icmp eq i64 %indvars.iv.next418, 4
  br i1 %exitcond425.not, label %for.body94, label %for.body55, !llvm.loop !155

for.body94:                                       ; preds = %for.inc88, %for.inc135
  %indvars.iv410 = phi i64 [ %indvars.iv.next411, %for.inc135 ], [ 8, %for.inc88 ]
  %dir.3385 = phi i32 [ %inc136, %for.inc135 ], [ 8, %for.inc88 ]
  %24 = sub nuw nsw i64 23, %indvars.iv410
  %sub108 = sub nuw nsw i32 23, %dir.3385
  %arrayidx111 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %24
  %25 = load i8**, i8*** %arrayidx111, align 8, !tbaa !15
  br i1 %cmp6, label %if.then97, label %if.else116

if.then97:                                        ; preds = %for.body94
  %26 = trunc i64 %indvars.iv410 to i32
  %27 = mul i32 %26, 48
  %28 = add i32 %27, 2288
  %call112 = tail call %struct.msg_tag* @start_gather(i32 %28, i32 48, i32 %sub108, i32 %parity, i8** %25) #32
  %arrayidx115 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %24
  store %struct.msg_tag* %call112, %struct.msg_tag** %arrayidx115, align 8, !tbaa !15
  br label %for.inc135

if.else116:                                       ; preds = %for.body94
  %arrayidx133 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %24
  %29 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx133, align 8, !tbaa !15
  %30 = trunc i64 %indvars.iv410 to i32
  %31 = mul i32 %30, 48
  %32 = add i32 %31, 2288
  tail call void @restart_gather(i32 %32, i32 48, i32 %sub108, i32 %parity, i8** %25, %struct.msg_tag* %29) #32
  br label %for.inc135

for.inc135:                                       ; preds = %if.then97, %if.else116
  %indvars.iv.next411 = add nuw nsw i64 %indvars.iv410, 1
  %inc136 = add nuw nsw i32 %dir.3385, 1
  %exitcond416.not = icmp eq i64 %indvars.iv.next411, 12
  br i1 %exitcond416.not, label %for.body141, label %for.body94, !llvm.loop !156

for.body141:                                      ; preds = %for.inc135, %for.body141
  %indvars.iv407 = phi i64 [ %indvars.iv.next408, %for.body141 ], [ 0, %for.inc135 ]
  %arrayidx143 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %indvars.iv407
  %33 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx143, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %33) #32
  %indvars.iv.next408 = add nuw nsw i64 %indvars.iv407, 1
  %exitcond409.not = icmp eq i64 %indvars.iv.next408, 4
  br i1 %exitcond409.not, label %for.body150, label %for.body141, !llvm.loop !157

for.body150:                                      ; preds = %for.body141, %for.body150
  %indvars.iv404 = phi i64 [ %indvars.iv.next405, %for.body150 ], [ 8, %for.body141 ]
  %arrayidx152 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %indvars.iv404
  %34 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx152, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %34) #32
  %indvars.iv.next405 = add nuw nsw i64 %indvars.iv404, 1
  %exitcond406.not = icmp eq i64 %indvars.iv.next405, 12
  br i1 %exitcond406.not, label %for.body159, label %for.body150, !llvm.loop !158

for.body159:                                      ; preds = %for.body150, %for.body159
  %indvars.iv400 = phi i64 [ %indvars.iv.next401, %for.body159 ], [ 0, %for.body150 ]
  %35 = sub nuw nsw i64 7, %indvars.iv400
  %arrayidx162 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %35
  %36 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx162, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %36) #32
  %indvars.iv.next401 = add nuw nsw i64 %indvars.iv400, 1
  %exitcond403.not = icmp eq i64 %indvars.iv.next401, 4
  br i1 %exitcond403.not, label %for.body169, label %for.body159, !llvm.loop !159

for.body169:                                      ; preds = %for.body159, %for.body169
  %indvars.iv396 = phi i64 [ %indvars.iv.next397, %for.body169 ], [ 8, %for.body159 ]
  %37 = sub nuw nsw i64 23, %indvars.iv396
  %arrayidx172 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %37
  %38 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx172, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %38) #32
  %indvars.iv.next397 = add nuw nsw i64 %indvars.iv396, 1
  %exitcond399.not = icmp eq i64 %indvars.iv.next397, 12
  br i1 %exitcond399.not, label %for.end175, label %for.body169, !llvm.loop !160

for.end175:                                       ; preds = %for.body169
  %cmp177 = icmp eq i32 %parity, 2
  %39 = load i32, i32* @even_sites_on_node, align 4
  %40 = load i32, i32* @sites_on_node, align 4
  %cond182 = select i1 %cmp177, i32 %39, i32 %40
  %cmp183 = icmp eq i32 %parity, 1
  %cond188 = select i1 %cmp183, i32 %39, i32 0
  %idxprom189 = sext i32 %cond188 to i64
  %idx.ext207 = sext i32 %dest to i64
  %cmp192378 = icmp slt i32 %cond188, %cond182
  br i1 %cmp192378, label %for.body194.preheader, label %for.end244

for.body194.preheader:                            ; preds = %for.end175
  %41 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx190 = getelementptr inbounds %struct.site, %struct.site* %41, i64 %idxprom189
  br label %for.body194

for.body194:                                      ; preds = %for.body194.preheader, %for.body194
  %indvars.iv = phi i64 [ %idxprom189, %for.body194.preheader ], [ %indvars.iv.next, %for.body194 ]
  %s.1379 = phi %struct.site* [ %arrayidx190, %for.body194.preheader ], [ %incdec.ptr243, %for.body194 ]
  %arraydecay196 = getelementptr inbounds %struct.site, %struct.site* %s.1379, i64 0, i32 10, i64 0
  %arraydecay198 = getelementptr inbounds %struct.site, %struct.site* %s.1379, i64 0, i32 9, i64 0
  %42 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx200 = getelementptr inbounds i8*, i8** %42, i64 %indvars.iv
  %43 = bitcast i8** %arrayidx200 to %struct.su3_vector**
  %44 = load %struct.su3_vector*, %struct.su3_vector** %43, align 8, !tbaa !15
  %45 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 1), align 8, !tbaa !15
  %arrayidx202 = getelementptr inbounds i8*, i8** %45, i64 %indvars.iv
  %46 = bitcast i8** %arrayidx202 to %struct.su3_vector**
  %47 = load %struct.su3_vector*, %struct.su3_vector** %46, align 8, !tbaa !15
  %48 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 2), align 16, !tbaa !15
  %arrayidx204 = getelementptr inbounds i8*, i8** %48, i64 %indvars.iv
  %49 = bitcast i8** %arrayidx204 to %struct.su3_vector**
  %50 = load %struct.su3_vector*, %struct.su3_vector** %49, align 8, !tbaa !15
  %51 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 3), align 8, !tbaa !15
  %arrayidx206 = getelementptr inbounds i8*, i8** %51, i64 %indvars.iv
  %52 = bitcast i8** %arrayidx206 to %struct.su3_vector**
  %53 = load %struct.su3_vector*, %struct.su3_vector** %52, align 8, !tbaa !15
  %54 = bitcast %struct.site* %s.1379 to i8*
  %add.ptr208 = getelementptr inbounds i8, i8* %54, i64 %idx.ext207
  %55 = bitcast i8* %add.ptr208 to %struct.su3_vector*
  tail call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* nonnull %arraydecay196, %struct.su3_vector* %44, %struct.su3_vector* %47, %struct.su3_vector* %50, %struct.su3_vector* %53, %struct.su3_vector* %55) #32
  %56 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 8), align 16, !tbaa !15
  %arrayidx210 = getelementptr inbounds i8*, i8** %56, i64 %indvars.iv
  %57 = bitcast i8** %arrayidx210 to %struct.su3_vector**
  %58 = load %struct.su3_vector*, %struct.su3_vector** %57, align 8, !tbaa !15
  %59 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 9), align 8, !tbaa !15
  %arrayidx212 = getelementptr inbounds i8*, i8** %59, i64 %indvars.iv
  %60 = bitcast i8** %arrayidx212 to %struct.su3_vector**
  %61 = load %struct.su3_vector*, %struct.su3_vector** %60, align 8, !tbaa !15
  %62 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 10), align 16, !tbaa !15
  %arrayidx214 = getelementptr inbounds i8*, i8** %62, i64 %indvars.iv
  %63 = bitcast i8** %arrayidx214 to %struct.su3_vector**
  %64 = load %struct.su3_vector*, %struct.su3_vector** %63, align 8, !tbaa !15
  %65 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 11), align 8, !tbaa !15
  %arrayidx216 = getelementptr inbounds i8*, i8** %65, i64 %indvars.iv
  %66 = bitcast i8** %arrayidx216 to %struct.su3_vector**
  %67 = load %struct.su3_vector*, %struct.su3_vector** %66, align 8, !tbaa !15
  %templongv1 = getelementptr inbounds %struct.site, %struct.site* %s.1379, i64 0, i32 21
  tail call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* nonnull %arraydecay198, %struct.su3_vector* %58, %struct.su3_vector* %61, %struct.su3_vector* %64, %struct.su3_vector* %67, %struct.su3_vector* nonnull %templongv1) #32
  %68 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 7), align 8, !tbaa !15
  %arrayidx220 = getelementptr inbounds i8*, i8** %68, i64 %indvars.iv
  %69 = bitcast i8** %arrayidx220 to %struct.su3_vector**
  %70 = load %struct.su3_vector*, %struct.su3_vector** %69, align 8, !tbaa !15
  %71 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 6), align 16, !tbaa !15
  %arrayidx222 = getelementptr inbounds i8*, i8** %71, i64 %indvars.iv
  %72 = bitcast i8** %arrayidx222 to %struct.su3_vector**
  %73 = load %struct.su3_vector*, %struct.su3_vector** %72, align 8, !tbaa !15
  %74 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 5), align 8, !tbaa !15
  %arrayidx224 = getelementptr inbounds i8*, i8** %74, i64 %indvars.iv
  %75 = bitcast i8** %arrayidx224 to %struct.su3_vector**
  %76 = load %struct.su3_vector*, %struct.su3_vector** %75, align 8, !tbaa !15
  %77 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 4), align 16, !tbaa !15
  %arrayidx226 = getelementptr inbounds i8*, i8** %77, i64 %indvars.iv
  %78 = bitcast i8** %arrayidx226 to %struct.su3_vector**
  %79 = load %struct.su3_vector*, %struct.su3_vector** %78, align 8, !tbaa !15
  tail call void @sub_four_su3_vecs(%struct.su3_vector* %55, %struct.su3_vector* %70, %struct.su3_vector* %73, %struct.su3_vector* %76, %struct.su3_vector* %79) #32
  %80 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 15), align 8, !tbaa !15
  %arrayidx229 = getelementptr inbounds i8*, i8** %80, i64 %indvars.iv
  %81 = bitcast i8** %arrayidx229 to %struct.su3_vector**
  %82 = load %struct.su3_vector*, %struct.su3_vector** %81, align 8, !tbaa !15
  %83 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 14), align 16, !tbaa !15
  %arrayidx231 = getelementptr inbounds i8*, i8** %83, i64 %indvars.iv
  %84 = bitcast i8** %arrayidx231 to %struct.su3_vector**
  %85 = load %struct.su3_vector*, %struct.su3_vector** %84, align 8, !tbaa !15
  %86 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 13), align 8, !tbaa !15
  %arrayidx233 = getelementptr inbounds i8*, i8** %86, i64 %indvars.iv
  %87 = bitcast i8** %arrayidx233 to %struct.su3_vector**
  %88 = load %struct.su3_vector*, %struct.su3_vector** %87, align 8, !tbaa !15
  %89 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 12), align 16, !tbaa !15
  %arrayidx235 = getelementptr inbounds i8*, i8** %89, i64 %indvars.iv
  %90 = bitcast i8** %arrayidx235 to %struct.su3_vector**
  %91 = load %struct.su3_vector*, %struct.su3_vector** %90, align 8, !tbaa !15
  tail call void @sub_four_su3_vecs(%struct.su3_vector* nonnull %templongv1, %struct.su3_vector* %82, %struct.su3_vector* %85, %struct.su3_vector* %88, %struct.su3_vector* %91) #32
  tail call void @add_su3_vector(%struct.su3_vector* %55, %struct.su3_vector* nonnull %templongv1, %struct.su3_vector* %55) #32
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %incdec.ptr243 = getelementptr inbounds %struct.site, %struct.site* %s.1379, i64 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %cond182, %lftr.wideiv
  br i1 %exitcond.not, label %for.end244, label %for.body194, !llvm.loop !161

for.end244:                                       ; preds = %for.body194, %for.end175
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @dslash_fn_on_temp(%struct.su3_vector* %src, %struct.su3_vector* %dest, i32 %parity) local_unnamed_addr #1 {
entry:
  %tag = alloca [16 x %struct.msg_tag*], align 16
  %tempvec = alloca [4 x %struct.su3_vector*], align 16
  %templongvec = alloca [4 x %struct.su3_vector*], align 16
  %0 = bitcast [16 x %struct.msg_tag*]* %tag to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #31
  %1 = bitcast [4 x %struct.su3_vector*]* %tempvec to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #31
  %2 = bitcast [4 x %struct.su3_vector*]* %templongvec to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #31
  %3 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv = sext i32 %3 to i64
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv464 = phi i64 [ 0, %entry ], [ %indvars.iv.next465, %for.body ]
  %call = tail call noalias align 16 i8* @calloc(i64 %conv, i64 48) #32
  %arrayidx = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %tempvec, i64 0, i64 %indvars.iv464
  %4 = bitcast %struct.su3_vector** %arrayidx to i8**
  store i8* %call, i8** %4, align 8, !tbaa !15
  %call2 = tail call noalias align 16 i8* @calloc(i64 %conv, i64 48) #32
  %arrayidx4 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %templongvec, i64 0, i64 %indvars.iv464
  %5 = bitcast %struct.su3_vector** %arrayidx4 to i8**
  store i8* %call2, i8** %5, align 8, !tbaa !15
  %indvars.iv.next465 = add nuw nsw i64 %indvars.iv464, 1
  %exitcond466.not = icmp eq i64 %indvars.iv.next465, 4
  br i1 %exitcond466.not, label %for.end, label %for.body, !llvm.loop !162

for.end:                                          ; preds = %for.body
  %call6 = tail call noalias align 16 i8* @calloc(i64 %conv, i64 48) #32
  %6 = bitcast i8* %call6 to %struct.su3_vector*
  %7 = load i32, i32* @valid_longlinks, align 4, !tbaa !13
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  tail call void (...) bitcast (void ()* @load_longlinks to void (...)*)() #32
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end
  %8 = load i32, i32* @valid_fatlinks, align 4, !tbaa !13
  %tobool7.not = icmp eq i32 %8, 0
  br i1 %tobool7.not, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  tail call void (...) bitcast (void ()* @load_fatlinks to void (...)*)() #32
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end
  switch i32 %parity, label %sw.epilog [
    i32 3, label %sw.bb11
    i32 1, label %sw.bb10
  ]

sw.bb10:                                          ; preds = %if.end9
  br label %sw.epilog

sw.bb11:                                          ; preds = %if.end9
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end9, %sw.bb11, %sw.bb10
  %cmp31 = phi i1 [ false, %sw.bb11 ], [ true, %sw.bb10 ], [ false, %if.end9 ]
  %cmp33 = phi i1 [ false, %sw.bb11 ], [ false, %sw.bb10 ], [ true, %if.end9 ]
  %9 = bitcast %struct.su3_vector* %src to i8*
  br label %for.body15

for.body15:                                       ; preds = %sw.epilog, %for.body15
  %indvars.iv460 = phi i64 [ 0, %sw.epilog ], [ %indvars.iv.next461, %for.body15 ]
  %arrayidx17 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %indvars.iv460
  %10 = load i8**, i8*** %arrayidx17, align 8, !tbaa !15
  %11 = trunc i64 %indvars.iv460 to i32
  %call18 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %9, i32 48, i32 %11, i32 %parity, i8** %10) #32
  %arrayidx20 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %indvars.iv460
  store %struct.msg_tag* %call18, %struct.msg_tag** %arrayidx20, align 8, !tbaa !15
  %12 = add nuw nsw i64 %indvars.iv460, 8
  %arrayidx23 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %12
  %13 = load i8**, i8*** %arrayidx23, align 8, !tbaa !15
  %14 = trunc i64 %12 to i32
  %call24 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %9, i32 48, i32 %14, i32 %parity, i8** %13) #32
  %arrayidx27 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %12
  store %struct.msg_tag* %call24, %struct.msg_tag** %arrayidx27, align 8, !tbaa !15
  %indvars.iv.next461 = add nuw nsw i64 %indvars.iv460, 1
  %exitcond463.not = icmp eq i64 %indvars.iv.next461, 4
  br i1 %exitcond463.not, label %for.end30, label %for.body15, !llvm.loop !163

for.end30:                                        ; preds = %for.body15
  %15 = load i32, i32* @even_sites_on_node, align 4
  %16 = load i32, i32* @sites_on_node, align 4
  %cond = select i1 %cmp31, i32 %15, i32 %16
  %cond38 = select i1 %cmp33, i32 %15, i32 0
  %idxprom39 = sext i32 %cond38 to i64
  %arrayidx48 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %tempvec, i64 0, i64 0
  %17 = load %struct.su3_vector*, %struct.su3_vector** %arrayidx48, align 16
  %arrayidx51 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %tempvec, i64 0, i64 1
  %18 = load %struct.su3_vector*, %struct.su3_vector** %arrayidx51, align 8
  %arrayidx54 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %tempvec, i64 0, i64 2
  %19 = load %struct.su3_vector*, %struct.su3_vector** %arrayidx54, align 16
  %arrayidx57 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %tempvec, i64 0, i64 3
  %20 = load %struct.su3_vector*, %struct.su3_vector** %arrayidx57, align 8
  %arrayidx62 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %templongvec, i64 0, i64 0
  %21 = load %struct.su3_vector*, %struct.su3_vector** %arrayidx62, align 16
  %arrayidx65 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %templongvec, i64 0, i64 1
  %22 = load %struct.su3_vector*, %struct.su3_vector** %arrayidx65, align 8
  %arrayidx68 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %templongvec, i64 0, i64 2
  %23 = load %struct.su3_vector*, %struct.su3_vector** %arrayidx68, align 16
  %arrayidx71 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %templongvec, i64 0, i64 3
  %24 = load %struct.su3_vector*, %struct.su3_vector** %arrayidx71, align 8
  %cmp42415 = icmp slt i32 %cond38, %cond
  br i1 %cmp42415, label %for.body44.preheader, label %for.body80.preheader

for.body44.preheader:                             ; preds = %for.end30
  %25 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx40 = getelementptr inbounds %struct.site, %struct.site* %25, i64 %idxprom39
  br label %for.body44

for.body44:                                       ; preds = %for.body44.preheader, %for.body44
  %indvars.iv456 = phi i64 [ %idxprom39, %for.body44.preheader ], [ %indvars.iv.next457, %for.body44 ]
  %s.0416 = phi %struct.site* [ %arrayidx40, %for.body44.preheader ], [ %incdec.ptr, %for.body44 ]
  %arraydecay = getelementptr inbounds %struct.site, %struct.site* %s.0416, i64 0, i32 10, i64 0
  %arraydecay45 = getelementptr inbounds %struct.site, %struct.site* %s.0416, i64 0, i32 9, i64 0
  %arrayidx47 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %src, i64 %indvars.iv456
  %arrayidx50 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %17, i64 %indvars.iv456
  %arrayidx53 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %18, i64 %indvars.iv456
  %arrayidx56 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %19, i64 %indvars.iv456
  %arrayidx59 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %20, i64 %indvars.iv456
  tail call void @mult_adj_su3_mat_4vec(%struct.su3_matrix* nonnull %arraydecay, %struct.su3_vector* %arrayidx47, %struct.su3_vector* %arrayidx50, %struct.su3_vector* %arrayidx53, %struct.su3_vector* %arrayidx56, %struct.su3_vector* %arrayidx59) #32
  %arrayidx64 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %21, i64 %indvars.iv456
  %arrayidx67 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %22, i64 %indvars.iv456
  %arrayidx70 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %23, i64 %indvars.iv456
  %arrayidx73 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %24, i64 %indvars.iv456
  tail call void @mult_adj_su3_mat_4vec(%struct.su3_matrix* nonnull %arraydecay45, %struct.su3_vector* %arrayidx47, %struct.su3_vector* %arrayidx64, %struct.su3_vector* %arrayidx67, %struct.su3_vector* %arrayidx70, %struct.su3_vector* %arrayidx73) #32
  %indvars.iv.next457 = add nsw i64 %indvars.iv456, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0416, i64 1
  %lftr.wideiv458 = trunc i64 %indvars.iv.next457 to i32
  %exitcond459.not = icmp eq i32 %cond, %lftr.wideiv458
  br i1 %exitcond459.not, label %for.body80.preheader, label %for.body44, !llvm.loop !164

for.body80.preheader:                             ; preds = %for.body44, %for.end30
  br label %for.body80

for.body80:                                       ; preds = %for.body80.preheader, %for.body80
  %indvars.iv452 = phi i64 [ %indvars.iv.next453, %for.body80 ], [ 0, %for.body80.preheader ]
  %arrayidx82 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %tempvec, i64 0, i64 %indvars.iv452
  %26 = bitcast %struct.su3_vector** %arrayidx82 to i8**
  %27 = load i8*, i8** %26, align 8, !tbaa !15
  %28 = sub nuw nsw i64 7, %indvars.iv452
  %arrayidx85 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %28
  %29 = load i8**, i8*** %arrayidx85, align 8, !tbaa !15
  %30 = trunc i64 %28 to i32
  %call86 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %27, i32 48, i32 %30, i32 %parity, i8** %29) #32
  %arrayidx89 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %28
  store %struct.msg_tag* %call86, %struct.msg_tag** %arrayidx89, align 8, !tbaa !15
  %indvars.iv.next453 = add nuw nsw i64 %indvars.iv452, 1
  %exitcond455.not = icmp eq i64 %indvars.iv.next453, 4
  br i1 %exitcond455.not, label %for.body96, label %for.body80, !llvm.loop !165

for.body96:                                       ; preds = %for.body80, %for.body96
  %indvars.iv447 = phi i64 [ %indvars.iv.next448, %for.body96 ], [ 8, %for.body80 ]
  %31 = add nsw i64 %indvars.iv447, -8
  %arrayidx99 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %templongvec, i64 0, i64 %31
  %32 = bitcast %struct.su3_vector** %arrayidx99 to i8**
  %33 = load i8*, i8** %32, align 8, !tbaa !15
  %34 = sub nuw nsw i64 23, %indvars.iv447
  %arrayidx103 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %34
  %35 = load i8**, i8*** %arrayidx103, align 8, !tbaa !15
  %36 = trunc i64 %34 to i32
  %call104 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %33, i32 48, i32 %36, i32 %parity, i8** %35) #32
  %arrayidx107 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %34
  store %struct.msg_tag* %call104, %struct.msg_tag** %arrayidx107, align 8, !tbaa !15
  %indvars.iv.next448 = add nuw nsw i64 %indvars.iv447, 1
  %exitcond451.not = icmp eq i64 %indvars.iv.next448, 12
  br i1 %exitcond451.not, label %for.body114, label %for.body96, !llvm.loop !166

for.body114:                                      ; preds = %for.body96, %for.body114
  %indvars.iv443 = phi i64 [ %indvars.iv.next444, %for.body114 ], [ 0, %for.body96 ]
  %arrayidx116 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %indvars.iv443
  %37 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx116, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %37) #32
  %38 = add nuw nsw i64 %indvars.iv443, 8
  %arrayidx119 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %38
  %39 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx119, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %39) #32
  %indvars.iv.next444 = add nuw nsw i64 %indvars.iv443, 1
  %exitcond446.not = icmp eq i64 %indvars.iv.next444, 4
  br i1 %exitcond446.not, label %for.end122, label %for.body114, !llvm.loop !167

for.end122:                                       ; preds = %for.body114
  %cmp124 = icmp eq i32 %parity, 2
  %40 = load i32, i32* @even_sites_on_node, align 4
  %41 = load i32, i32* @sites_on_node, align 4
  %cond129 = select i1 %cmp124, i32 %40, i32 %41
  %cmp130 = icmp eq i32 %parity, 1
  %cond135 = select i1 %cmp130, i32 %40, i32 0
  %idxprom136 = sext i32 %cond135 to i64
  %cmp139409 = icmp slt i32 %cond135, %cond129
  br i1 %cmp139409, label %for.body141.preheader, label %for.body173.preheader

for.body141.preheader:                            ; preds = %for.end122
  %42 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx137 = getelementptr inbounds %struct.site, %struct.site* %42, i64 %idxprom136
  br label %for.body141

for.body141:                                      ; preds = %for.body141.preheader, %for.body141
  %indvars.iv439 = phi i64 [ %idxprom136, %for.body141.preheader ], [ %indvars.iv.next440, %for.body141 ]
  %s.1410 = phi %struct.site* [ %arrayidx137, %for.body141.preheader ], [ %incdec.ptr168, %for.body141 ]
  %arraydecay143 = getelementptr inbounds %struct.site, %struct.site* %s.1410, i64 0, i32 10, i64 0
  %arraydecay145 = getelementptr inbounds %struct.site, %struct.site* %s.1410, i64 0, i32 9, i64 0
  %43 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx147 = getelementptr inbounds i8*, i8** %43, i64 %indvars.iv439
  %44 = bitcast i8** %arrayidx147 to %struct.su3_vector**
  %45 = load %struct.su3_vector*, %struct.su3_vector** %44, align 8, !tbaa !15
  %46 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 1), align 8, !tbaa !15
  %arrayidx149 = getelementptr inbounds i8*, i8** %46, i64 %indvars.iv439
  %47 = bitcast i8** %arrayidx149 to %struct.su3_vector**
  %48 = load %struct.su3_vector*, %struct.su3_vector** %47, align 8, !tbaa !15
  %49 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 2), align 16, !tbaa !15
  %arrayidx151 = getelementptr inbounds i8*, i8** %49, i64 %indvars.iv439
  %50 = bitcast i8** %arrayidx151 to %struct.su3_vector**
  %51 = load %struct.su3_vector*, %struct.su3_vector** %50, align 8, !tbaa !15
  %52 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 3), align 8, !tbaa !15
  %arrayidx153 = getelementptr inbounds i8*, i8** %52, i64 %indvars.iv439
  %53 = bitcast i8** %arrayidx153 to %struct.su3_vector**
  %54 = load %struct.su3_vector*, %struct.su3_vector** %53, align 8, !tbaa !15
  %arrayidx155 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %dest, i64 %indvars.iv439
  tail call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* nonnull %arraydecay143, %struct.su3_vector* %45, %struct.su3_vector* %48, %struct.su3_vector* %51, %struct.su3_vector* %54, %struct.su3_vector* %arrayidx155) #32
  %55 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 8), align 16, !tbaa !15
  %arrayidx157 = getelementptr inbounds i8*, i8** %55, i64 %indvars.iv439
  %56 = bitcast i8** %arrayidx157 to %struct.su3_vector**
  %57 = load %struct.su3_vector*, %struct.su3_vector** %56, align 8, !tbaa !15
  %58 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 9), align 8, !tbaa !15
  %arrayidx159 = getelementptr inbounds i8*, i8** %58, i64 %indvars.iv439
  %59 = bitcast i8** %arrayidx159 to %struct.su3_vector**
  %60 = load %struct.su3_vector*, %struct.su3_vector** %59, align 8, !tbaa !15
  %61 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 10), align 16, !tbaa !15
  %arrayidx161 = getelementptr inbounds i8*, i8** %61, i64 %indvars.iv439
  %62 = bitcast i8** %arrayidx161 to %struct.su3_vector**
  %63 = load %struct.su3_vector*, %struct.su3_vector** %62, align 8, !tbaa !15
  %64 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 11), align 8, !tbaa !15
  %arrayidx163 = getelementptr inbounds i8*, i8** %64, i64 %indvars.iv439
  %65 = bitcast i8** %arrayidx163 to %struct.su3_vector**
  %66 = load %struct.su3_vector*, %struct.su3_vector** %65, align 8, !tbaa !15
  %arrayidx165 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %6, i64 %indvars.iv439
  tail call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* nonnull %arraydecay145, %struct.su3_vector* %57, %struct.su3_vector* %60, %struct.su3_vector* %63, %struct.su3_vector* %66, %struct.su3_vector* %arrayidx165) #32
  %indvars.iv.next440 = add nsw i64 %indvars.iv439, 1
  %incdec.ptr168 = getelementptr inbounds %struct.site, %struct.site* %s.1410, i64 1
  %lftr.wideiv441 = trunc i64 %indvars.iv.next440 to i32
  %exitcond442.not = icmp eq i32 %cond129, %lftr.wideiv441
  br i1 %exitcond442.not, label %for.body173.preheader, label %for.body141, !llvm.loop !168

for.body173.preheader:                            ; preds = %for.body141, %for.end122
  br label %for.body173

for.body173:                                      ; preds = %for.body173.preheader, %for.body173
  %indvars.iv435 = phi i64 [ %indvars.iv.next436, %for.body173 ], [ 0, %for.body173.preheader ]
  %67 = sub nuw nsw i64 7, %indvars.iv435
  %arrayidx176 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %67
  %68 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx176, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %68) #32
  %indvars.iv.next436 = add nuw nsw i64 %indvars.iv435, 1
  %exitcond438.not = icmp eq i64 %indvars.iv.next436, 4
  br i1 %exitcond438.not, label %for.body183, label %for.body173, !llvm.loop !169

for.body183:                                      ; preds = %for.body173, %for.body183
  %indvars.iv431 = phi i64 [ %indvars.iv.next432, %for.body183 ], [ 8, %for.body173 ]
  %69 = sub nuw nsw i64 23, %indvars.iv431
  %arrayidx186 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %69
  %70 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx186, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %70) #32
  %indvars.iv.next432 = add nuw nsw i64 %indvars.iv431, 1
  %exitcond434.not = icmp eq i64 %indvars.iv.next432, 12
  br i1 %exitcond434.not, label %for.end189, label %for.body183, !llvm.loop !170

for.end189:                                       ; preds = %for.body183
  %71 = load i32, i32* @even_sites_on_node, align 4
  %72 = load i32, i32* @sites_on_node, align 4
  %cond196 = select i1 %cmp124, i32 %71, i32 %72
  %cond202 = select i1 %cmp130, i32 %71, i32 0
  %cmp206405 = icmp slt i32 %cond202, %cond196
  br i1 %cmp206405, label %for.body208.preheader, label %for.body242.preheader

for.body208.preheader:                            ; preds = %for.end189
  %73 = sext i32 %cond202 to i64
  br label %for.body208

for.body208:                                      ; preds = %for.body208.preheader, %for.body208
  %indvars.iv428 = phi i64 [ %73, %for.body208.preheader ], [ %indvars.iv.next429, %for.body208 ]
  %arrayidx210 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %dest, i64 %indvars.iv428
  %74 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 7), align 8, !tbaa !15
  %arrayidx212 = getelementptr inbounds i8*, i8** %74, i64 %indvars.iv428
  %75 = bitcast i8** %arrayidx212 to %struct.su3_vector**
  %76 = load %struct.su3_vector*, %struct.su3_vector** %75, align 8, !tbaa !15
  %77 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 6), align 16, !tbaa !15
  %arrayidx214 = getelementptr inbounds i8*, i8** %77, i64 %indvars.iv428
  %78 = bitcast i8** %arrayidx214 to %struct.su3_vector**
  %79 = load %struct.su3_vector*, %struct.su3_vector** %78, align 8, !tbaa !15
  %80 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 5), align 8, !tbaa !15
  %arrayidx216 = getelementptr inbounds i8*, i8** %80, i64 %indvars.iv428
  %81 = bitcast i8** %arrayidx216 to %struct.su3_vector**
  %82 = load %struct.su3_vector*, %struct.su3_vector** %81, align 8, !tbaa !15
  %83 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 4), align 16, !tbaa !15
  %arrayidx218 = getelementptr inbounds i8*, i8** %83, i64 %indvars.iv428
  %84 = bitcast i8** %arrayidx218 to %struct.su3_vector**
  %85 = load %struct.su3_vector*, %struct.su3_vector** %84, align 8, !tbaa !15
  tail call void @sub_four_su3_vecs(%struct.su3_vector* %arrayidx210, %struct.su3_vector* %76, %struct.su3_vector* %79, %struct.su3_vector* %82, %struct.su3_vector* %85) #32
  %arrayidx220 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %6, i64 %indvars.iv428
  %86 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 15), align 8, !tbaa !15
  %arrayidx222 = getelementptr inbounds i8*, i8** %86, i64 %indvars.iv428
  %87 = bitcast i8** %arrayidx222 to %struct.su3_vector**
  %88 = load %struct.su3_vector*, %struct.su3_vector** %87, align 8, !tbaa !15
  %89 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 14), align 16, !tbaa !15
  %arrayidx224 = getelementptr inbounds i8*, i8** %89, i64 %indvars.iv428
  %90 = bitcast i8** %arrayidx224 to %struct.su3_vector**
  %91 = load %struct.su3_vector*, %struct.su3_vector** %90, align 8, !tbaa !15
  %92 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 13), align 8, !tbaa !15
  %arrayidx226 = getelementptr inbounds i8*, i8** %92, i64 %indvars.iv428
  %93 = bitcast i8** %arrayidx226 to %struct.su3_vector**
  %94 = load %struct.su3_vector*, %struct.su3_vector** %93, align 8, !tbaa !15
  %95 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 12), align 16, !tbaa !15
  %arrayidx228 = getelementptr inbounds i8*, i8** %95, i64 %indvars.iv428
  %96 = bitcast i8** %arrayidx228 to %struct.su3_vector**
  %97 = load %struct.su3_vector*, %struct.su3_vector** %96, align 8, !tbaa !15
  tail call void @sub_four_su3_vecs(%struct.su3_vector* %arrayidx220, %struct.su3_vector* %88, %struct.su3_vector* %91, %struct.su3_vector* %94, %struct.su3_vector* %97) #32
  tail call void @add_su3_vector(%struct.su3_vector* %arrayidx210, %struct.su3_vector* %arrayidx220, %struct.su3_vector* %arrayidx210) #32
  %indvars.iv.next429 = add nsw i64 %indvars.iv428, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next429 to i32
  %exitcond430.not = icmp eq i32 %cond196, %lftr.wideiv
  br i1 %exitcond430.not, label %for.body242.preheader, label %for.body208, !llvm.loop !171

for.body242.preheader:                            ; preds = %for.body208, %for.end189
  br label %for.body242

for.body242:                                      ; preds = %for.body242.preheader, %for.body242
  %indvars.iv424 = phi i64 [ %indvars.iv.next425, %for.body242 ], [ 0, %for.body242.preheader ]
  %arrayidx244 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %indvars.iv424
  %98 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx244, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %98) #32
  %99 = sub nuw nsw i64 7, %indvars.iv424
  %arrayidx247 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %99
  %100 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx247, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %100) #32
  %indvars.iv.next425 = add nuw nsw i64 %indvars.iv424, 1
  %exitcond427.not = icmp eq i64 %indvars.iv.next425, 4
  br i1 %exitcond427.not, label %for.body254, label %for.body242, !llvm.loop !172

for.body254:                                      ; preds = %for.body242, %for.body254
  %indvars.iv420 = phi i64 [ %indvars.iv.next421, %for.body254 ], [ 8, %for.body242 ]
  %arrayidx256 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %indvars.iv420
  %101 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx256, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %101) #32
  %102 = sub nuw nsw i64 23, %indvars.iv420
  %arrayidx259 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tag, i64 0, i64 %102
  %103 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx259, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %103) #32
  %indvars.iv.next421 = add nuw nsw i64 %indvars.iv420, 1
  %exitcond423.not = icmp eq i64 %indvars.iv.next421, 12
  br i1 %exitcond423.not, label %for.body266, label %for.body254, !llvm.loop !173

for.body266:                                      ; preds = %for.body254, %for.body266
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body266 ], [ 0, %for.body254 ]
  %arrayidx268 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %tempvec, i64 0, i64 %indvars.iv
  %104 = bitcast %struct.su3_vector** %arrayidx268 to i8**
  %105 = load i8*, i8** %104, align 8, !tbaa !15
  tail call void @free(i8* %105) #32
  %arrayidx270 = getelementptr inbounds [4 x %struct.su3_vector*], [4 x %struct.su3_vector*]* %templongvec, i64 0, i64 %indvars.iv
  %106 = bitcast %struct.su3_vector** %arrayidx270 to i8**
  %107 = load i8*, i8** %106, align 8, !tbaa !15
  tail call void @free(i8* %107) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.end273, label %for.body266, !llvm.loop !174

for.end273:                                       ; preds = %for.body266
  tail call void @free(i8* %call6) #32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @dslash_fn_on_temp_special(%struct.su3_vector* %src, %struct.su3_vector* %dest, i32 %parity, %struct.msg_tag** nocapture %tag, i32 %start) local_unnamed_addr #1 {
entry:
  %.b = load i1, i1* @temp_not_allocated, align 4
  br i1 %.b, label %if.end, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv = sext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv481 = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next482, %for.body ]
  %call = tail call noalias align 16 i8* @calloc(i64 %conv, i64 48) #32
  %arrayidx = getelementptr inbounds [9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 %indvars.iv481
  %1 = bitcast %struct.su3_vector** %arrayidx to i8**
  store i8* %call, i8** %1, align 8, !tbaa !15
  %call2 = tail call noalias align 16 i8* @calloc(i64 %conv, i64 48) #32
  %2 = add nuw nsw i64 %indvars.iv481, 4
  %arrayidx4 = getelementptr inbounds [9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 %2
  %3 = bitcast %struct.su3_vector** %arrayidx4 to i8**
  store i8* %call2, i8** %3, align 8, !tbaa !15
  %indvars.iv.next482 = add nuw nsw i64 %indvars.iv481, 1
  %exitcond484.not = icmp eq i64 %indvars.iv.next482, 4
  br i1 %exitcond484.not, label %for.end, label %for.body, !llvm.loop !175

for.end:                                          ; preds = %for.body
  %call6 = tail call noalias align 16 i8* @calloc(i64 %conv, i64 48) #32
  store i8* %call6, i8** bitcast (%struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 8) to i8**), align 16, !tbaa !15
  store i1 true, i1* @temp_not_allocated, align 4
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %4 = load i32, i32* @valid_longlinks, align 4, !tbaa !13
  %tobool7.not = icmp eq i32 %4, 0
  br i1 %tobool7.not, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  tail call void (...) bitcast (void ()* @load_longlinks to void (...)*)() #32
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end
  %5 = load i32, i32* @valid_fatlinks, align 4, !tbaa !13
  %tobool10.not = icmp eq i32 %5, 0
  br i1 %tobool10.not, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end9
  tail call void (...) bitcast (void ()* @load_fatlinks to void (...)*)() #32
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.end9
  switch i32 %parity, label %sw.epilog [
    i32 3, label %sw.bb14
    i32 1, label %sw.bb13
  ]

sw.bb13:                                          ; preds = %if.end12
  br label %sw.epilog

sw.bb14:                                          ; preds = %if.end12
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end12, %sw.bb14, %sw.bb13
  %cmp50 = phi i1 [ false, %sw.bb14 ], [ true, %sw.bb13 ], [ false, %if.end12 ]
  %cmp52 = phi i1 [ false, %sw.bb14 ], [ false, %sw.bb13 ], [ true, %if.end12 ]
  %cmp19 = icmp eq i32 %start, 1
  %6 = bitcast %struct.su3_vector* %src to i8*
  br label %for.body18

for.body18:                                       ; preds = %sw.epilog, %for.inc47
  %indvars.iv476 = phi i64 [ 0, %sw.epilog ], [ %indvars.iv.next477, %for.inc47 ]
  %arrayidx23 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %indvars.iv476
  %7 = load i8**, i8*** %arrayidx23, align 8, !tbaa !15
  br i1 %cmp19, label %if.then21, label %if.else

if.then21:                                        ; preds = %for.body18
  %8 = trunc i64 %indvars.iv476 to i32
  %call24 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %6, i32 48, i32 %8, i32 %parity, i8** %7) #32
  %arrayidx26 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %indvars.iv476
  store %struct.msg_tag* %call24, %struct.msg_tag** %arrayidx26, align 8, !tbaa !15
  %9 = add nuw nsw i64 %indvars.iv476, 8
  %arrayidx30 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %9
  %10 = load i8**, i8*** %arrayidx30, align 8, !tbaa !15
  %11 = trunc i64 %9 to i32
  %call31 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %6, i32 48, i32 %11, i32 %parity, i8** %10) #32
  %arrayidx34 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %9
  store %struct.msg_tag* %call31, %struct.msg_tag** %arrayidx34, align 8, !tbaa !15
  br label %for.inc47

if.else:                                          ; preds = %for.body18
  %arrayidx38 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %indvars.iv476
  %12 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx38, align 8, !tbaa !15
  %13 = trunc i64 %indvars.iv476 to i32
  tail call void @restart_gather_from_temp(i8* %6, i32 48, i32 %13, i32 %parity, i8** %7, %struct.msg_tag* %12) #32
  %14 = add nuw nsw i64 %indvars.iv476, 8
  %arrayidx42 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %14
  %15 = load i8**, i8*** %arrayidx42, align 8, !tbaa !15
  %arrayidx45 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %14
  %16 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx45, align 8, !tbaa !15
  %17 = trunc i64 %14 to i32
  tail call void @restart_gather_from_temp(i8* %6, i32 48, i32 %17, i32 %parity, i8** %15, %struct.msg_tag* %16) #32
  br label %for.inc47

for.inc47:                                        ; preds = %if.then21, %if.else
  %indvars.iv.next477 = add nuw nsw i64 %indvars.iv476, 1
  %exitcond480.not = icmp eq i64 %indvars.iv.next477, 4
  br i1 %exitcond480.not, label %for.end49, label %for.body18, !llvm.loop !176

for.end49:                                        ; preds = %for.inc47
  %18 = load i32, i32* @even_sites_on_node, align 4
  %19 = load i32, i32* @sites_on_node, align 4
  %cond = select i1 %cmp50, i32 %18, i32 %19
  %cond57 = select i1 %cmp52, i32 %18, i32 0
  %idxprom58 = sext i32 %cond57 to i64
  %cmp61438 = icmp slt i32 %cond57, %cond
  br i1 %cmp61438, label %for.body63.preheader, label %for.body91.preheader

for.body63.preheader:                             ; preds = %for.end49
  %20 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx59 = getelementptr inbounds %struct.site, %struct.site* %20, i64 %idxprom58
  br label %for.body63

for.body63:                                       ; preds = %for.body63.preheader, %for.body63
  %indvars.iv472 = phi i64 [ %idxprom58, %for.body63.preheader ], [ %indvars.iv.next473, %for.body63 ]
  %s.0439 = phi %struct.site* [ %arrayidx59, %for.body63.preheader ], [ %incdec.ptr, %for.body63 ]
  %arraydecay = getelementptr inbounds %struct.site, %struct.site* %s.0439, i64 0, i32 10, i64 0
  %arraydecay64 = getelementptr inbounds %struct.site, %struct.site* %s.0439, i64 0, i32 9, i64 0
  %arrayidx66 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %src, i64 %indvars.iv472
  %21 = load %struct.su3_vector*, %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx68 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %21, i64 %indvars.iv472
  %22 = load %struct.su3_vector*, %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 1), align 8, !tbaa !15
  %arrayidx70 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %22, i64 %indvars.iv472
  %23 = load %struct.su3_vector*, %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 2), align 16, !tbaa !15
  %arrayidx72 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %23, i64 %indvars.iv472
  %24 = load %struct.su3_vector*, %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 3), align 8, !tbaa !15
  %arrayidx74 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %24, i64 %indvars.iv472
  tail call void @mult_adj_su3_mat_4vec(%struct.su3_matrix* nonnull %arraydecay, %struct.su3_vector* %arrayidx66, %struct.su3_vector* %arrayidx68, %struct.su3_vector* %arrayidx70, %struct.su3_vector* %arrayidx72, %struct.su3_vector* %arrayidx74) #32
  %25 = load %struct.su3_vector*, %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 4), align 16, !tbaa !15
  %arrayidx78 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %25, i64 %indvars.iv472
  %26 = load %struct.su3_vector*, %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 5), align 8, !tbaa !15
  %arrayidx80 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %26, i64 %indvars.iv472
  %27 = load %struct.su3_vector*, %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 6), align 16, !tbaa !15
  %arrayidx82 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %27, i64 %indvars.iv472
  %28 = load %struct.su3_vector*, %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 7), align 8, !tbaa !15
  %arrayidx84 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %28, i64 %indvars.iv472
  tail call void @mult_adj_su3_mat_4vec(%struct.su3_matrix* nonnull %arraydecay64, %struct.su3_vector* %arrayidx66, %struct.su3_vector* %arrayidx78, %struct.su3_vector* %arrayidx80, %struct.su3_vector* %arrayidx82, %struct.su3_vector* %arrayidx84) #32
  %indvars.iv.next473 = add nsw i64 %indvars.iv472, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0439, i64 1
  %lftr.wideiv474 = trunc i64 %indvars.iv.next473 to i32
  %exitcond475.not = icmp eq i32 %cond, %lftr.wideiv474
  br i1 %exitcond475.not, label %for.body91.preheader, label %for.body63, !llvm.loop !177

for.body91.preheader:                             ; preds = %for.body63, %for.end49
  br label %for.body91

for.body91:                                       ; preds = %for.body91.preheader, %for.inc115
  %indvars.iv467 = phi i64 [ %indvars.iv.next468, %for.inc115 ], [ 0, %for.body91.preheader ]
  %arrayidx96 = getelementptr inbounds [9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 %indvars.iv467
  %29 = bitcast %struct.su3_vector** %arrayidx96 to i8**
  %30 = load i8*, i8** %29, align 8, !tbaa !15
  %31 = sub nuw nsw i64 7, %indvars.iv467
  %arrayidx99 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %31
  %32 = load i8**, i8*** %arrayidx99, align 8, !tbaa !15
  br i1 %cmp19, label %if.then94, label %if.else104

if.then94:                                        ; preds = %for.body91
  %33 = trunc i64 %31 to i32
  %call100 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %30, i32 48, i32 %33, i32 %parity, i8** %32) #32
  %arrayidx103 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %31
  store %struct.msg_tag* %call100, %struct.msg_tag** %arrayidx103, align 8, !tbaa !15
  br label %for.inc115

if.else104:                                       ; preds = %for.body91
  %arrayidx113 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %31
  %34 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx113, align 8, !tbaa !15
  %35 = trunc i64 %31 to i32
  tail call void @restart_gather_from_temp(i8* %30, i32 48, i32 %35, i32 %parity, i8** %32, %struct.msg_tag* %34) #32
  br label %for.inc115

for.inc115:                                       ; preds = %if.then94, %if.else104
  %indvars.iv.next468 = add nuw nsw i64 %indvars.iv467, 1
  %exitcond471.not = icmp eq i64 %indvars.iv.next468, 4
  br i1 %exitcond471.not, label %for.body121, label %for.body91, !llvm.loop !178

for.body121:                                      ; preds = %for.inc115, %for.inc150
  %indvars.iv460 = phi i64 [ %indvars.iv.next461, %for.inc150 ], [ 8, %for.inc115 ]
  %36 = add nsw i64 %indvars.iv460, -4
  %arrayidx128 = getelementptr inbounds [9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 %36
  %37 = bitcast %struct.su3_vector** %arrayidx128 to i8**
  %38 = load i8*, i8** %37, align 8, !tbaa !15
  %39 = sub nuw nsw i64 23, %indvars.iv460
  %arrayidx132 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %39
  %40 = load i8**, i8*** %arrayidx132, align 8, !tbaa !15
  br i1 %cmp19, label %if.then124, label %if.else137

if.then124:                                       ; preds = %for.body121
  %41 = trunc i64 %39 to i32
  %call133 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %38, i32 48, i32 %41, i32 %parity, i8** %40) #32
  %arrayidx136 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %39
  store %struct.msg_tag* %call133, %struct.msg_tag** %arrayidx136, align 8, !tbaa !15
  br label %for.inc150

if.else137:                                       ; preds = %for.body121
  %arrayidx148 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %39
  %42 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx148, align 8, !tbaa !15
  %43 = trunc i64 %39 to i32
  tail call void @restart_gather_from_temp(i8* %38, i32 48, i32 %43, i32 %parity, i8** %40, %struct.msg_tag* %42) #32
  br label %for.inc150

for.inc150:                                       ; preds = %if.then124, %if.else137
  %indvars.iv.next461 = add nuw nsw i64 %indvars.iv460, 1
  %exitcond466.not = icmp eq i64 %indvars.iv.next461, 12
  br i1 %exitcond466.not, label %for.body156, label %for.body121, !llvm.loop !179

for.body156:                                      ; preds = %for.inc150, %for.body156
  %indvars.iv456 = phi i64 [ %indvars.iv.next457, %for.body156 ], [ 0, %for.inc150 ]
  %arrayidx158 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %indvars.iv456
  %44 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx158, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %44) #32
  %45 = add nuw nsw i64 %indvars.iv456, 8
  %arrayidx161 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %45
  %46 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx161, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %46) #32
  %indvars.iv.next457 = add nuw nsw i64 %indvars.iv456, 1
  %exitcond459.not = icmp eq i64 %indvars.iv.next457, 4
  br i1 %exitcond459.not, label %for.end164, label %for.body156, !llvm.loop !180

for.end164:                                       ; preds = %for.body156
  %cmp166 = icmp eq i32 %parity, 2
  %47 = load i32, i32* @even_sites_on_node, align 4
  %48 = load i32, i32* @sites_on_node, align 4
  %cond171 = select i1 %cmp166, i32 %47, i32 %48
  %cmp172 = icmp eq i32 %parity, 1
  %cond177 = select i1 %cmp172, i32 %47, i32 0
  %idxprom178 = sext i32 %cond177 to i64
  %cmp181430 = icmp slt i32 %cond177, %cond171
  br i1 %cmp181430, label %for.body183.preheader, label %for.body215.preheader

for.body183.preheader:                            ; preds = %for.end164
  %49 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx179 = getelementptr inbounds %struct.site, %struct.site* %49, i64 %idxprom178
  br label %for.body183

for.body183:                                      ; preds = %for.body183.preheader, %for.body183
  %indvars.iv452 = phi i64 [ %idxprom178, %for.body183.preheader ], [ %indvars.iv.next453, %for.body183 ]
  %s.1431 = phi %struct.site* [ %arrayidx179, %for.body183.preheader ], [ %incdec.ptr210, %for.body183 ]
  %arraydecay185 = getelementptr inbounds %struct.site, %struct.site* %s.1431, i64 0, i32 10, i64 0
  %arraydecay187 = getelementptr inbounds %struct.site, %struct.site* %s.1431, i64 0, i32 9, i64 0
  %50 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx189 = getelementptr inbounds i8*, i8** %50, i64 %indvars.iv452
  %51 = bitcast i8** %arrayidx189 to %struct.su3_vector**
  %52 = load %struct.su3_vector*, %struct.su3_vector** %51, align 8, !tbaa !15
  %53 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 1), align 8, !tbaa !15
  %arrayidx191 = getelementptr inbounds i8*, i8** %53, i64 %indvars.iv452
  %54 = bitcast i8** %arrayidx191 to %struct.su3_vector**
  %55 = load %struct.su3_vector*, %struct.su3_vector** %54, align 8, !tbaa !15
  %56 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 2), align 16, !tbaa !15
  %arrayidx193 = getelementptr inbounds i8*, i8** %56, i64 %indvars.iv452
  %57 = bitcast i8** %arrayidx193 to %struct.su3_vector**
  %58 = load %struct.su3_vector*, %struct.su3_vector** %57, align 8, !tbaa !15
  %59 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 3), align 8, !tbaa !15
  %arrayidx195 = getelementptr inbounds i8*, i8** %59, i64 %indvars.iv452
  %60 = bitcast i8** %arrayidx195 to %struct.su3_vector**
  %61 = load %struct.su3_vector*, %struct.su3_vector** %60, align 8, !tbaa !15
  %arrayidx197 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %dest, i64 %indvars.iv452
  tail call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* nonnull %arraydecay185, %struct.su3_vector* %52, %struct.su3_vector* %55, %struct.su3_vector* %58, %struct.su3_vector* %61, %struct.su3_vector* %arrayidx197) #32
  %62 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 8), align 16, !tbaa !15
  %arrayidx199 = getelementptr inbounds i8*, i8** %62, i64 %indvars.iv452
  %63 = bitcast i8** %arrayidx199 to %struct.su3_vector**
  %64 = load %struct.su3_vector*, %struct.su3_vector** %63, align 8, !tbaa !15
  %65 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 9), align 8, !tbaa !15
  %arrayidx201 = getelementptr inbounds i8*, i8** %65, i64 %indvars.iv452
  %66 = bitcast i8** %arrayidx201 to %struct.su3_vector**
  %67 = load %struct.su3_vector*, %struct.su3_vector** %66, align 8, !tbaa !15
  %68 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 10), align 16, !tbaa !15
  %arrayidx203 = getelementptr inbounds i8*, i8** %68, i64 %indvars.iv452
  %69 = bitcast i8** %arrayidx203 to %struct.su3_vector**
  %70 = load %struct.su3_vector*, %struct.su3_vector** %69, align 8, !tbaa !15
  %71 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 11), align 8, !tbaa !15
  %arrayidx205 = getelementptr inbounds i8*, i8** %71, i64 %indvars.iv452
  %72 = bitcast i8** %arrayidx205 to %struct.su3_vector**
  %73 = load %struct.su3_vector*, %struct.su3_vector** %72, align 8, !tbaa !15
  %74 = load %struct.su3_vector*, %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 8), align 16, !tbaa !15
  %arrayidx207 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %74, i64 %indvars.iv452
  tail call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* nonnull %arraydecay187, %struct.su3_vector* %64, %struct.su3_vector* %67, %struct.su3_vector* %70, %struct.su3_vector* %73, %struct.su3_vector* %arrayidx207) #32
  %indvars.iv.next453 = add nsw i64 %indvars.iv452, 1
  %incdec.ptr210 = getelementptr inbounds %struct.site, %struct.site* %s.1431, i64 1
  %lftr.wideiv454 = trunc i64 %indvars.iv.next453 to i32
  %exitcond455.not = icmp eq i32 %cond171, %lftr.wideiv454
  br i1 %exitcond455.not, label %for.body215.preheader, label %for.body183, !llvm.loop !181

for.body215.preheader:                            ; preds = %for.body183, %for.end164
  br label %for.body215

for.body215:                                      ; preds = %for.body215.preheader, %for.body215
  %indvars.iv448 = phi i64 [ %indvars.iv.next449, %for.body215 ], [ 0, %for.body215.preheader ]
  %75 = sub nuw nsw i64 7, %indvars.iv448
  %arrayidx218 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %75
  %76 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx218, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %76) #32
  %indvars.iv.next449 = add nuw nsw i64 %indvars.iv448, 1
  %exitcond451.not = icmp eq i64 %indvars.iv.next449, 4
  br i1 %exitcond451.not, label %for.body225, label %for.body215, !llvm.loop !182

for.body225:                                      ; preds = %for.body215, %for.body225
  %indvars.iv444 = phi i64 [ %indvars.iv.next445, %for.body225 ], [ 8, %for.body215 ]
  %77 = sub nuw nsw i64 23, %indvars.iv444
  %arrayidx228 = getelementptr inbounds %struct.msg_tag*, %struct.msg_tag** %tag, i64 %77
  %78 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx228, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %78) #32
  %indvars.iv.next445 = add nuw nsw i64 %indvars.iv444, 1
  %exitcond447.not = icmp eq i64 %indvars.iv.next445, 12
  br i1 %exitcond447.not, label %for.end231, label %for.body225, !llvm.loop !183

for.end231:                                       ; preds = %for.body225
  %79 = load i32, i32* @even_sites_on_node, align 4
  %80 = load i32, i32* @sites_on_node, align 4
  %cond238 = select i1 %cmp166, i32 %79, i32 %80
  %cond244 = select i1 %cmp172, i32 %79, i32 0
  %cmp248426 = icmp slt i32 %cond244, %cond238
  br i1 %cmp248426, label %for.body250.preheader, label %for.end280

for.body250.preheader:                            ; preds = %for.end231
  %81 = sext i32 %cond244 to i64
  br label %for.body250

for.body250:                                      ; preds = %for.body250.preheader, %for.body250
  %indvars.iv = phi i64 [ %81, %for.body250.preheader ], [ %indvars.iv.next, %for.body250 ]
  %arrayidx252 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %dest, i64 %indvars.iv
  %82 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 7), align 8, !tbaa !15
  %arrayidx254 = getelementptr inbounds i8*, i8** %82, i64 %indvars.iv
  %83 = bitcast i8** %arrayidx254 to %struct.su3_vector**
  %84 = load %struct.su3_vector*, %struct.su3_vector** %83, align 8, !tbaa !15
  %85 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 6), align 16, !tbaa !15
  %arrayidx256 = getelementptr inbounds i8*, i8** %85, i64 %indvars.iv
  %86 = bitcast i8** %arrayidx256 to %struct.su3_vector**
  %87 = load %struct.su3_vector*, %struct.su3_vector** %86, align 8, !tbaa !15
  %88 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 5), align 8, !tbaa !15
  %arrayidx258 = getelementptr inbounds i8*, i8** %88, i64 %indvars.iv
  %89 = bitcast i8** %arrayidx258 to %struct.su3_vector**
  %90 = load %struct.su3_vector*, %struct.su3_vector** %89, align 8, !tbaa !15
  %91 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 4), align 16, !tbaa !15
  %arrayidx260 = getelementptr inbounds i8*, i8** %91, i64 %indvars.iv
  %92 = bitcast i8** %arrayidx260 to %struct.su3_vector**
  %93 = load %struct.su3_vector*, %struct.su3_vector** %92, align 8, !tbaa !15
  tail call void @sub_four_su3_vecs(%struct.su3_vector* %arrayidx252, %struct.su3_vector* %84, %struct.su3_vector* %87, %struct.su3_vector* %90, %struct.su3_vector* %93) #32
  %94 = load %struct.su3_vector*, %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 8), align 16, !tbaa !15
  %arrayidx262 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %94, i64 %indvars.iv
  %95 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 15), align 8, !tbaa !15
  %arrayidx264 = getelementptr inbounds i8*, i8** %95, i64 %indvars.iv
  %96 = bitcast i8** %arrayidx264 to %struct.su3_vector**
  %97 = load %struct.su3_vector*, %struct.su3_vector** %96, align 8, !tbaa !15
  %98 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 14), align 16, !tbaa !15
  %arrayidx266 = getelementptr inbounds i8*, i8** %98, i64 %indvars.iv
  %99 = bitcast i8** %arrayidx266 to %struct.su3_vector**
  %100 = load %struct.su3_vector*, %struct.su3_vector** %99, align 8, !tbaa !15
  %101 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 13), align 8, !tbaa !15
  %arrayidx268 = getelementptr inbounds i8*, i8** %101, i64 %indvars.iv
  %102 = bitcast i8** %arrayidx268 to %struct.su3_vector**
  %103 = load %struct.su3_vector*, %struct.su3_vector** %102, align 8, !tbaa !15
  %104 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 12), align 16, !tbaa !15
  %arrayidx270 = getelementptr inbounds i8*, i8** %104, i64 %indvars.iv
  %105 = bitcast i8** %arrayidx270 to %struct.su3_vector**
  %106 = load %struct.su3_vector*, %struct.su3_vector** %105, align 8, !tbaa !15
  tail call void @sub_four_su3_vecs(%struct.su3_vector* %arrayidx262, %struct.su3_vector* %97, %struct.su3_vector* %100, %struct.su3_vector* %103, %struct.su3_vector* %106) #32
  %107 = load %struct.su3_vector*, %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*], [9 x %struct.su3_vector*]* @temp, i64 0, i64 8), align 16, !tbaa !15
  %arrayidx274 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %107, i64 %indvars.iv
  tail call void @add_su3_vector(%struct.su3_vector* %arrayidx252, %struct.su3_vector* %arrayidx274, %struct.su3_vector* %arrayidx252) #32
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %cond238, %lftr.wideiv
  br i1 %exitcond.not, label %for.end280, label %for.body250, !llvm.loop !184

for.end280:                                       ; preds = %for.body250, %for.end231
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @su3_adjoint(%struct.su3_matrix* nocapture readonly %a, %struct.su3_matrix* nocapture %b) local_unnamed_addr #10 {
entry:
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %entry, %for.inc23
  %indvars.iv42 = phi i64 [ 0, %entry ], [ %indvars.iv.next43, %for.inc23 ]
  br label %for.body3

for.body3:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv, i64 %indvars.iv42, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %real11 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv42, i64 %indvars.iv, i32 0
  store double %0, double* %real11, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv, i64 %indvars.iv42, i32 1
  %1 = load double, double* %imag, align 8, !tbaa !9
  %fneg = fneg double %1
  %imag22 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv42, i64 %indvars.iv, i32 1
  store double %fneg, double* %imag22, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc23, label %for.body3, !llvm.loop !185

for.inc23:                                        ; preds = %for.body3
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1
  %exitcond44.not = icmp eq i64 %indvars.iv.next43, 3
  br i1 %exitcond44.not, label %for.end25, label %for.cond1.preheader, !llvm.loop !186

for.end25:                                        ; preds = %for.inc23
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @accum_gauge_hit(i32 %gauge_dir, i32 %parity) local_unnamed_addr #1 {
entry:
  %cmp = icmp eq i32 %parity, 1
  %0 = load i32, i32* @even_sites_on_node, align 4
  %cond = select i1 %cmp, i32 %0, i32 0
  %1 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom = sext i32 %cond to i64
  %cmp1 = icmp eq i32 %parity, 2
  %2 = load i32, i32* @sites_on_node, align 4
  %cond5353 = select i1 %cmp1, i32 %0, i32 %2
  %cmp6354 = icmp slt i32 %cond, %cond5353
  br i1 %cmp6354, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %1, i64 %idxprom
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv382 = phi i64 [ %idxprom, %for.body.preheader ], [ %indvars.iv.next383, %for.body ]
  %s.0356 = phi %struct.site* [ %arrayidx, %for.body.preheader ], [ %incdec.ptr, %for.body ]
  %3 = load i32, i32* @diffmat_offset, align 4, !tbaa !13
  %cmp7 = icmp sgt i32 %3, -1
  %4 = load %struct.su3_matrix*, %struct.su3_matrix** @diffmatp, align 8
  %arrayidx9 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %4, i64 %indvars.iv382
  %5 = bitcast %struct.site* %s.0356 to i8*
  %idx.ext330 = zext i32 %3 to i64
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext330
  %6 = bitcast i8* %add.ptr to %struct.su3_matrix*
  %arrayidx9.sink = select i1 %cmp7, %struct.su3_matrix* %6, %struct.su3_matrix* %arrayidx9
  tail call void @clear_su3mat(%struct.su3_matrix* %arrayidx9.sink) #32
  %7 = load i32, i32* @sumvec_offset, align 4, !tbaa !13
  %cmp10 = icmp sgt i32 %7, -1
  %8 = bitcast %struct.site* %s.0356 to i8*
  %idx.ext12331 = zext i32 %7 to i64
  %add.ptr13 = getelementptr inbounds i8, i8* %8, i64 %idx.ext12331
  %9 = bitcast i8* %add.ptr13 to %struct.su3_vector*
  %10 = load %struct.su3_vector*, %struct.su3_vector** @sumvecp, align 8
  %arrayidx16 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %10, i64 %indvars.iv382
  %.sink = select i1 %cmp10, %struct.su3_vector* %9, %struct.su3_vector* %arrayidx16
  tail call void @clearvec(%struct.su3_vector* %.sink) #32
  %indvars.iv.next383 = add nsw i64 %indvars.iv382, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0356, i64 1
  %11 = load i32, i32* @even_sites_on_node, align 4
  %12 = load i32, i32* @sites_on_node, align 4
  %cond5 = select i1 %cmp1, i32 %11, i32 %12
  %13 = sext i32 %cond5 to i64
  %cmp6 = icmp slt i64 %indvars.iv.next383, %13
  br i1 %cmp6, label %for.body, label %for.end.loopexit, !llvm.loop !187

for.end.loopexit:                                 ; preds = %for.body
  %.pre = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %.pre385 = select i1 %cmp, i32 %11, i32 0
  %.pre386 = sext i32 %.pre385 to i64
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %entry
  %cond30349.pre-phi = phi i32 [ %cond5, %for.end.loopexit ], [ %cond5353, %entry ]
  %idxprom23.pre-phi = phi i64 [ %.pre386, %for.end.loopexit ], [ %idxprom, %entry ]
  %cond22.pre-phi = phi i32 [ %.pre385, %for.end.loopexit ], [ %cond, %entry ]
  %14 = phi %struct.site* [ %.pre, %for.end.loopexit ], [ %1, %entry ]
  %cmp31350 = icmp slt i32 %cond22.pre-phi, %cond30349.pre-phi
  br i1 %cmp31350, label %for.cond33.preheader.preheader, label %for.end122

for.cond33.preheader.preheader:                   ; preds = %for.end
  %arrayidx24 = getelementptr inbounds %struct.site, %struct.site* %14, i64 %idxprom23.pre-phi
  %15 = zext i32 %gauge_dir to i64
  br label %for.cond33.preheader

for.cond33.preheader:                             ; preds = %for.cond33.preheader.preheader, %for.inc119
  %indvars.iv380 = phi i64 [ %idxprom23.pre-phi, %for.cond33.preheader.preheader ], [ %indvars.iv.next381, %for.inc119 ]
  %s.1352 = phi %struct.site* [ %arrayidx24, %for.cond33.preheader.preheader ], [ %incdec.ptr121, %for.inc119 ]
  %16 = bitcast %struct.site* %s.1352 to i8*
  br label %for.body35

for.body35:                                       ; preds = %for.cond33.preheader, %for.inc116
  %indvars.iv377 = phi i64 [ 0, %for.cond33.preheader ], [ %indvars.iv.next378, %for.inc116 ]
  %cmp36.not = icmp eq i64 %indvars.iv377, %15
  br i1 %cmp36.not, label %for.inc116, label %if.then37

if.then37:                                        ; preds = %for.body35
  %arrayidx39 = getelementptr inbounds %struct.site, %struct.site* %s.1352, i64 0, i32 8, i64 %indvars.iv377
  %17 = load i32, i32* @diffmat_offset, align 4, !tbaa !13
  %cmp40 = icmp sgt i32 %17, -1
  br i1 %cmp40, label %if.then41, label %if.else46

if.then41:                                        ; preds = %if.then37
  %idx.ext42332 = zext i32 %17 to i64
  %add.ptr43 = getelementptr inbounds i8, i8* %16, i64 %idx.ext42332
  %18 = bitcast i8* %add.ptr43 to %struct.su3_matrix*
  tail call void @sub_su3_matrix(%struct.su3_matrix* %18, %struct.su3_matrix* nonnull %arrayidx39, %struct.su3_matrix* %18) #32
  br label %if.end51

if.else46:                                        ; preds = %if.then37
  %19 = load %struct.su3_matrix*, %struct.su3_matrix** @diffmatp, align 8, !tbaa !15
  %arrayidx48 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %19, i64 %indvars.iv380
  tail call void @sub_su3_matrix(%struct.su3_matrix* %arrayidx48, %struct.su3_matrix* nonnull %arrayidx39, %struct.su3_matrix* %arrayidx48) #32
  br label %if.end51

if.end51:                                         ; preds = %if.else46, %if.then41
  %20 = load i32, i32* @sumvec_offset, align 4, !tbaa !13
  %cmp52 = icmp sgt i32 %20, -1
  br i1 %cmp52, label %for.cond54.preheader, label %for.cond82.preheader

for.cond82.preheader:                             ; preds = %if.end51
  %21 = load %struct.su3_vector*, %struct.su3_vector** @sumvecp, align 8, !tbaa !15
  br label %for.body84

for.cond54.preheader:                             ; preds = %if.end51
  %idx.ext61390 = zext i32 %20 to i64
  %add.ptr62 = getelementptr inbounds i8, i8* %16, i64 %idx.ext61390
  %c = bitcast i8* %add.ptr62 to [3 x %struct.complex]*
  br label %for.body56

for.body56:                                       ; preds = %for.cond54.preheader, %for.body56
  %indvars.iv374 = phi i64 [ 0, %for.cond54.preheader ], [ %indvars.iv.next375, %for.body56 ]
  %real = getelementptr inbounds %struct.site, %struct.site* %s.1352, i64 0, i32 8, i64 %indvars.iv377, i32 0, i64 %indvars.iv374, i64 %indvars.iv374, i32 0
  %22 = load double, double* %real, align 8, !tbaa !4
  %real65 = getelementptr inbounds [3 x %struct.complex], [3 x %struct.complex]* %c, i64 0, i64 %indvars.iv374, i32 0
  %23 = load double, double* %real65, align 8, !tbaa !4
  %add = fadd double %22, %23
  store double %add, double* %real65, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.site, %struct.site* %s.1352, i64 0, i32 8, i64 %indvars.iv377, i32 0, i64 %indvars.iv374, i64 %indvars.iv374, i32 1
  %24 = load double, double* %imag, align 8, !tbaa !9
  %imag76 = getelementptr inbounds [3 x %struct.complex], [3 x %struct.complex]* %c, i64 0, i64 %indvars.iv374, i32 1
  %25 = load double, double* %imag76, align 8, !tbaa !9
  %add77 = fadd double %24, %25
  store double %add77, double* %imag76, align 8, !tbaa !9
  %indvars.iv.next375 = add nuw nsw i64 %indvars.iv374, 1
  %exitcond376.not = icmp eq i64 %indvars.iv.next375, 3
  br i1 %exitcond376.not, label %for.inc116, label %for.body56, !llvm.loop !188

for.body84:                                       ; preds = %for.cond82.preheader, %for.body84
  %indvars.iv371 = phi i64 [ 0, %for.cond82.preheader ], [ %indvars.iv.next372, %for.body84 ]
  %real90 = getelementptr inbounds %struct.site, %struct.site* %s.1352, i64 0, i32 8, i64 %indvars.iv377, i32 0, i64 %indvars.iv371, i64 %indvars.iv371, i32 0
  %26 = load double, double* %real90, align 8, !tbaa !4
  %real96 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %21, i64 %indvars.iv380, i32 0, i64 %indvars.iv371, i32 0
  %27 = load double, double* %real96, align 8, !tbaa !4
  %add97 = fadd double %26, %27
  store double %add97, double* %real96, align 8, !tbaa !4
  %imag103 = getelementptr inbounds %struct.site, %struct.site* %s.1352, i64 0, i32 8, i64 %indvars.iv377, i32 0, i64 %indvars.iv371, i64 %indvars.iv371, i32 1
  %28 = load double, double* %imag103, align 8, !tbaa !9
  %imag109 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %21, i64 %indvars.iv380, i32 0, i64 %indvars.iv371, i32 1
  %29 = load double, double* %imag109, align 8, !tbaa !9
  %add110 = fadd double %28, %29
  store double %add110, double* %imag109, align 8, !tbaa !9
  %indvars.iv.next372 = add nuw nsw i64 %indvars.iv371, 1
  %exitcond373.not = icmp eq i64 %indvars.iv.next372, 3
  br i1 %exitcond373.not, label %for.inc116, label %for.body84, !llvm.loop !189

for.inc116:                                       ; preds = %for.body84, %for.body56, %for.body35
  %indvars.iv.next378 = add nuw nsw i64 %indvars.iv377, 1
  %exitcond379.not = icmp eq i64 %indvars.iv.next378, 4
  br i1 %exitcond379.not, label %for.inc119, label %for.body35, !llvm.loop !190

for.inc119:                                       ; preds = %for.inc116
  %indvars.iv.next381 = add nsw i64 %indvars.iv380, 1
  %incdec.ptr121 = getelementptr inbounds %struct.site, %struct.site* %s.1352, i64 1
  %30 = load i32, i32* @even_sites_on_node, align 4
  %31 = load i32, i32* @sites_on_node, align 4
  %cond30 = select i1 %cmp1, i32 %30, i32 %31
  %32 = sext i32 %cond30 to i64
  %cmp31 = icmp slt i64 %indvars.iv.next381, %32
  br i1 %cmp31, label %for.cond33.preheader, label %for.end122.loopexit, !llvm.loop !191

for.end122.loopexit:                              ; preds = %for.inc119
  %.pre384 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %.pre387 = select i1 %cmp, i32 %30, i32 0
  %.pre388 = sext i32 %.pre387 to i64
  br label %for.end122

for.end122:                                       ; preds = %for.end122.loopexit, %for.end
  %cond135341.pre-phi = phi i32 [ %cond30, %for.end122.loopexit ], [ %cond30349.pre-phi, %for.end ]
  %idxprom128.pre-phi = phi i64 [ %.pre388, %for.end122.loopexit ], [ %idxprom23.pre-phi, %for.end ]
  %cond127.pre-phi = phi i32 [ %.pre387, %for.end122.loopexit ], [ %cond22.pre-phi, %for.end ]
  %33 = phi %struct.site* [ %.pre384, %for.end122.loopexit ], [ %14, %for.end ]
  %cmp136342 = icmp slt i32 %cond127.pre-phi, %cond135341.pre-phi
  br i1 %cmp136342, label %for.cond138.preheader.preheader, label %for.end234

for.cond138.preheader.preheader:                  ; preds = %for.end122
  %arrayidx129 = getelementptr inbounds %struct.site, %struct.site* %33, i64 %idxprom128.pre-phi
  %34 = zext i32 %gauge_dir to i64
  br label %for.cond138.preheader

for.cond138.preheader:                            ; preds = %for.cond138.preheader.preheader, %for.inc231
  %indvars.iv369 = phi i64 [ %idxprom128.pre-phi, %for.cond138.preheader.preheader ], [ %indvars.iv.next370, %for.inc231 ]
  %s.2344 = phi %struct.site* [ %arrayidx129, %for.cond138.preheader.preheader ], [ %incdec.ptr233, %for.inc231 ]
  %35 = bitcast %struct.site* %s.2344 to i8*
  br label %for.body140

for.body140:                                      ; preds = %for.cond138.preheader, %for.inc228
  %indvars.iv366 = phi i64 [ 0, %for.cond138.preheader ], [ %indvars.iv.next367, %for.inc228 ]
  %cmp141.not = icmp eq i64 %indvars.iv366, %34
  br i1 %cmp141.not, label %for.inc228, label %if.then142

if.then142:                                       ; preds = %for.body140
  %arrayidx144 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %indvars.iv366
  %36 = load i8**, i8*** %arrayidx144, align 8, !tbaa !15
  %arrayidx146 = getelementptr inbounds i8*, i8** %36, i64 %indvars.iv369
  %37 = bitcast i8** %arrayidx146 to %struct.su3_matrix**
  %38 = load %struct.su3_matrix*, %struct.su3_matrix** %37, align 8, !tbaa !15
  %39 = load i32, i32* @diffmat_offset, align 4, !tbaa !13
  %cmp147 = icmp sgt i32 %39, -1
  br i1 %cmp147, label %if.then148, label %if.else153

if.then148:                                       ; preds = %if.then142
  %idx.ext149333 = zext i32 %39 to i64
  %add.ptr150 = getelementptr inbounds i8, i8* %35, i64 %idx.ext149333
  %40 = bitcast i8* %add.ptr150 to %struct.su3_matrix*
  tail call void @add_su3_matrix(%struct.su3_matrix* %40, %struct.su3_matrix* %38, %struct.su3_matrix* %40) #32
  br label %if.end158

if.else153:                                       ; preds = %if.then142
  %41 = load %struct.su3_matrix*, %struct.su3_matrix** @diffmatp, align 8, !tbaa !15
  %arrayidx155 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %41, i64 %indvars.iv369
  tail call void @add_su3_matrix(%struct.su3_matrix* %arrayidx155, %struct.su3_matrix* %38, %struct.su3_matrix* %arrayidx155) #32
  br label %if.end158

if.end158:                                        ; preds = %if.else153, %if.then148
  %42 = load i32, i32* @sumvec_offset, align 4, !tbaa !13
  %cmp159 = icmp sgt i32 %42, -1
  br i1 %cmp159, label %for.cond161.preheader, label %for.cond194.preheader

for.cond194.preheader:                            ; preds = %if.end158
  %43 = load %struct.su3_vector*, %struct.su3_vector** @sumvecp, align 8, !tbaa !15
  br label %for.body196

for.cond161.preheader:                            ; preds = %if.end158
  %idx.ext170389 = zext i32 %42 to i64
  %add.ptr171 = getelementptr inbounds i8, i8* %35, i64 %idx.ext170389
  %c172 = bitcast i8* %add.ptr171 to [3 x %struct.complex]*
  br label %for.body163

for.body163:                                      ; preds = %for.cond161.preheader, %for.body163
  %indvars.iv363 = phi i64 [ 0, %for.cond161.preheader ], [ %indvars.iv.next364, %for.body163 ]
  %real169 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %38, i64 0, i32 0, i64 %indvars.iv363, i64 %indvars.iv363, i32 0
  %44 = load double, double* %real169, align 8, !tbaa !4
  %real175 = getelementptr inbounds [3 x %struct.complex], [3 x %struct.complex]* %c172, i64 0, i64 %indvars.iv363, i32 0
  %45 = load double, double* %real175, align 8, !tbaa !4
  %add176 = fadd double %44, %45
  store double %add176, double* %real175, align 8, !tbaa !4
  %imag182 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %38, i64 0, i32 0, i64 %indvars.iv363, i64 %indvars.iv363, i32 1
  %46 = load double, double* %imag182, align 8, !tbaa !9
  %imag188 = getelementptr inbounds [3 x %struct.complex], [3 x %struct.complex]* %c172, i64 0, i64 %indvars.iv363, i32 1
  %47 = load double, double* %imag188, align 8, !tbaa !9
  %add189 = fadd double %46, %47
  store double %add189, double* %imag188, align 8, !tbaa !9
  %indvars.iv.next364 = add nuw nsw i64 %indvars.iv363, 1
  %exitcond365.not = icmp eq i64 %indvars.iv.next364, 3
  br i1 %exitcond365.not, label %for.inc228, label %for.body163, !llvm.loop !192

for.body196:                                      ; preds = %for.cond194.preheader, %for.body196
  %indvars.iv = phi i64 [ 0, %for.cond194.preheader ], [ %indvars.iv.next, %for.body196 ]
  %real202 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %38, i64 0, i32 0, i64 %indvars.iv, i64 %indvars.iv, i32 0
  %48 = load double, double* %real202, align 8, !tbaa !4
  %real208 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %43, i64 %indvars.iv369, i32 0, i64 %indvars.iv, i32 0
  %49 = load double, double* %real208, align 8, !tbaa !4
  %add209 = fadd double %48, %49
  store double %add209, double* %real208, align 8, !tbaa !4
  %imag215 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %38, i64 0, i32 0, i64 %indvars.iv, i64 %indvars.iv, i32 1
  %50 = load double, double* %imag215, align 8, !tbaa !9
  %imag221 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %43, i64 %indvars.iv369, i32 0, i64 %indvars.iv, i32 1
  %51 = load double, double* %imag221, align 8, !tbaa !9
  %add222 = fadd double %50, %51
  store double %add222, double* %imag221, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc228, label %for.body196, !llvm.loop !193

for.inc228:                                       ; preds = %for.body196, %for.body163, %for.body140
  %indvars.iv.next367 = add nuw nsw i64 %indvars.iv366, 1
  %exitcond368.not = icmp eq i64 %indvars.iv.next367, 4
  br i1 %exitcond368.not, label %for.inc231, label %for.body140, !llvm.loop !194

for.inc231:                                       ; preds = %for.inc228
  %indvars.iv.next370 = add nsw i64 %indvars.iv369, 1
  %incdec.ptr233 = getelementptr inbounds %struct.site, %struct.site* %s.2344, i64 1
  %52 = load i32, i32* @even_sites_on_node, align 4
  %53 = load i32, i32* @sites_on_node, align 4
  %cond135 = select i1 %cmp1, i32 %52, i32 %53
  %54 = sext i32 %cond135 to i64
  %cmp136 = icmp slt i64 %indvars.iv.next370, %54
  br i1 %cmp136, label %for.cond138.preheader, label %for.end234, !llvm.loop !195

for.end234:                                       ; preds = %for.inc231, %for.end122
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @do_hit(i32 %gauge_dir, i32 %parity, i32 %p, i32 %q, double %relax_boost, i32 %nvector, i32* nocapture readonly %vector_offset, i32* nocapture readonly %vector_parity, i32 %nantiherm, i32* nocapture readonly %antiherm_offset, i32* nocapture readonly %antiherm_parity) local_unnamed_addr #1 {
entry:
  %u = alloca %struct.su2_matrix, align 8
  %htemp = alloca %struct.su3_matrix, align 8
  %0 = bitcast %struct.su2_matrix* %u to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #31
  %1 = bitcast %struct.su3_matrix* %htemp to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %1) #31
  tail call void @accum_gauge_hit(i32 %gauge_dir, i32 %parity) #34
  %cmp = icmp eq i32 %parity, 1
  %2 = load i32, i32* @even_sites_on_node, align 4
  %cond = select i1 %cmp, i32 %2, i32 0
  %idxprom = sext i32 %cond to i64
  %cmp1 = icmp eq i32 %parity, 2
  %idxprom19 = sext i32 %p to i64
  %idxprom25 = sext i32 %q to i64
  %tmp.sroa.0.0..sroa_idx = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 0, i32 0
  %tmp.sroa.4.0..sroa_idx243 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 0, i32 1
  %tmp150.sroa.0.0..sroa_idx = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 1, i32 0
  %tmp150.sroa.4.0..sroa_idx240 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 1, i32 1
  %tmp155.sroa.0.0..sroa_idx = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 0, i32 0
  %tmp155.sroa.4.0..sroa_idx237 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 0, i32 1
  %tmp161.sroa.0.0..sroa_idx = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 1, i32 0
  %tmp161.sroa.4.0..sroa_idx234 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 1, i32 1
  %cmp180375 = icmp sgt i32 %nvector, 0
  %cmp208377 = icmp sgt i32 %nantiherm, 0
  %3 = load i32, i32* @sites_on_node, align 4
  %cond5379 = select i1 %cmp1, i32 %2, i32 %3
  %cmp6380 = icmp slt i32 %cond, %cond5379
  br i1 %cmp6380, label %for.body.preheader, label %for.end232

for.body.preheader:                               ; preds = %entry
  %4 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %4, i64 %idxprom
  %wide.trip.count = zext i32 %nvector to i64
  %wide.trip.count391 = zext i32 %nantiherm to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc230
  %indvars.iv393 = phi i64 [ %idxprom, %for.body.preheader ], [ %indvars.iv.next394, %for.inc230 ]
  %s.0381 = phi %struct.site* [ %arrayidx, %for.body.preheader ], [ %incdec.ptr, %for.inc230 ]
  %5 = load i32, i32* @sumvec_offset, align 4, !tbaa !13
  %cmp7 = icmp sgt i32 %5, -1
  br i1 %cmp7, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %6 = bitcast %struct.site* %s.0381 to i8*
  %idx.ext371 = zext i32 %5 to i64
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext371
  %c = bitcast i8* %add.ptr to [3 x %struct.complex]*
  %real = getelementptr inbounds [3 x %struct.complex], [3 x %struct.complex]* %c, i64 0, i64 %idxprom19, i32 0
  %real15 = getelementptr inbounds [3 x %struct.complex], [3 x %struct.complex]* %c, i64 0, i64 %idxprom25, i32 0
  br label %if.end

if.else:                                          ; preds = %for.body
  %7 = load %struct.su3_vector*, %struct.su3_vector** @sumvecp, align 8, !tbaa !15
  %real21 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %7, i64 %indvars.iv393, i32 0, i64 %idxprom19, i32 0
  %real27 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %7, i64 %indvars.iv393, i32 0, i64 %idxprom25, i32 0
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %real27.sink = phi double* [ %real27, %if.else ], [ %real15, %if.then ]
  %.sink.in = phi double* [ %real21, %if.else ], [ %real, %if.then ]
  %.sink = load double, double* %.sink.in, align 8, !tbaa !4
  %8 = load double, double* %real27.sink, align 8, !tbaa !4
  %add28 = fadd double %.sink, %8
  %9 = load i32, i32* @diffmat_offset, align 4, !tbaa !13
  %cmp29 = icmp sgt i32 %9, -1
  br i1 %cmp29, label %if.then30, label %if.else79

if.then30:                                        ; preds = %if.end
  %10 = bitcast %struct.site* %s.0381 to i8*
  %idx.ext31372 = zext i32 %9 to i64
  %add.ptr32 = getelementptr inbounds i8, i8* %10, i64 %idx.ext31372
  %e = bitcast i8* %add.ptr32 to [3 x [3 x %struct.complex]]*
  %imag = getelementptr inbounds [3 x [3 x %struct.complex]], [3 x [3 x %struct.complex]]* %e, i64 0, i64 %idxprom25, i64 %idxprom19, i32 1
  %11 = load double, double* %imag, align 8, !tbaa !9
  %imag44 = getelementptr inbounds [3 x [3 x %struct.complex]], [3 x [3 x %struct.complex]]* %e, i64 0, i64 %idxprom19, i64 %idxprom25, i32 1
  %12 = load double, double* %imag44, align 8, !tbaa !9
  %add45 = fadd double %11, %12
  %real53 = getelementptr inbounds [3 x [3 x %struct.complex]], [3 x [3 x %struct.complex]]* %e, i64 0, i64 %idxprom25, i64 %idxprom19, i32 0
  %13 = load double, double* %real53, align 8, !tbaa !4
  %real61 = getelementptr inbounds [3 x [3 x %struct.complex]], [3 x [3 x %struct.complex]]* %e, i64 0, i64 %idxprom19, i64 %idxprom25, i32 0
  %14 = load double, double* %real61, align 8, !tbaa !4
  %add62 = fsub double %14, %13
  %imag70 = getelementptr inbounds [3 x [3 x %struct.complex]], [3 x [3 x %struct.complex]]* %e, i64 0, i64 %idxprom19, i64 %idxprom19, i32 1
  %imag78 = getelementptr inbounds [3 x [3 x %struct.complex]], [3 x [3 x %struct.complex]]* %e, i64 0, i64 %idxprom25, i64 %idxprom25, i32 1
  br label %if.end132

if.else79:                                        ; preds = %if.end
  %15 = load %struct.su3_matrix*, %struct.su3_matrix** @diffmatp, align 8, !tbaa !15
  %imag87 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %15, i64 %indvars.iv393, i32 0, i64 %idxprom25, i64 %idxprom19, i32 1
  %16 = load double, double* %imag87, align 8, !tbaa !9
  %imag95 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %15, i64 %indvars.iv393, i32 0, i64 %idxprom19, i64 %idxprom25, i32 1
  %17 = load double, double* %imag95, align 8, !tbaa !9
  %add96 = fadd double %16, %17
  %real104 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %15, i64 %indvars.iv393, i32 0, i64 %idxprom25, i64 %idxprom19, i32 0
  %18 = load double, double* %real104, align 8, !tbaa !4
  %real113 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %15, i64 %indvars.iv393, i32 0, i64 %idxprom19, i64 %idxprom25, i32 0
  %19 = load double, double* %real113, align 8, !tbaa !4
  %add114 = fsub double %19, %18
  %imag122 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %15, i64 %indvars.iv393, i32 0, i64 %idxprom19, i64 %idxprom19, i32 1
  %imag130 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %15, i64 %indvars.iv393, i32 0, i64 %idxprom25, i64 %idxprom25, i32 1
  br label %if.end132

if.end132:                                        ; preds = %if.else79, %if.then30
  %imag130.sink = phi double* [ %imag130, %if.else79 ], [ %imag78, %if.then30 ]
  %.sink396.in = phi double* [ %imag122, %if.else79 ], [ %imag70, %if.then30 ]
  %a2.0 = phi double [ %add114, %if.else79 ], [ %add62, %if.then30 ]
  %a1.0 = phi double [ %add96, %if.else79 ], [ %add45, %if.then30 ]
  %.sink396 = load double, double* %.sink396.in, align 8, !tbaa !9
  %20 = load double, double* %imag130.sink, align 8, !tbaa !9
  %sub131 = fsub double %.sink396, %20
  %mul133 = fmul double %a2.0, %a2.0
  %21 = call double @llvm.fmuladd.f64(double %a1.0, double %a1.0, double %mul133)
  %22 = call double @llvm.fmuladd.f64(double %sub131, double %sub131, double %21)
  %mul = fmul double %add28, %add28
  %23 = call double @llvm.fmuladd.f64(double %relax_boost, double %mul, double %22)
  %add135 = fadd double %mul, %22
  %div = fdiv double %23, %add135
  %mul136 = fmul double %div, %div
  %24 = call double @llvm.fmuladd.f64(double %mul136, double %22, double %mul)
  %call = call double @sqrt(double %24) #32
  %div138 = fdiv double %div, %call
  %div139 = fdiv double %add28, %call
  %mul140 = fmul double %a1.0, %div138
  %mul141 = fmul double %a2.0, %div138
  %mul142 = fmul double %sub131, %div138
  %call146 = call { double, double } @cmplx(double %div139, double %mul142) #32
  %25 = extractvalue { double, double } %call146, 0
  %26 = extractvalue { double, double } %call146, 1
  store double %25, double* %tmp.sroa.0.0..sroa_idx, align 8, !tbaa.struct !10
  store double %26, double* %tmp.sroa.4.0..sroa_idx243, align 8, !tbaa.struct !12
  %call151 = call { double, double } @cmplx(double %mul141, double %mul140) #32
  %27 = extractvalue { double, double } %call151, 0
  %28 = extractvalue { double, double } %call151, 1
  store double %27, double* %tmp150.sroa.0.0..sroa_idx, align 8, !tbaa.struct !10
  store double %28, double* %tmp150.sroa.4.0..sroa_idx240, align 8, !tbaa.struct !12
  %fneg156 = fneg double %mul141
  %call157 = call { double, double } @cmplx(double %fneg156, double %mul140) #32
  %29 = extractvalue { double, double } %call157, 0
  %30 = extractvalue { double, double } %call157, 1
  store double %29, double* %tmp155.sroa.0.0..sroa_idx, align 8, !tbaa.struct !10
  store double %30, double* %tmp155.sroa.4.0..sroa_idx237, align 8, !tbaa.struct !12
  %fneg162 = fneg double %mul142
  %call163 = call { double, double } @cmplx(double %div139, double %fneg162) #32
  %31 = extractvalue { double, double } %call163, 0
  %32 = extractvalue { double, double } %call163, 1
  store double %31, double* %tmp161.sroa.0.0..sroa_idx, align 8, !tbaa.struct !10
  store double %32, double* %tmp161.sroa.4.0..sroa_idx234, align 8, !tbaa.struct !12
  br label %for.body166

for.body166:                                      ; preds = %if.end132, %for.body166
  %indvars.iv = phi i64 [ 0, %if.end132 ], [ %indvars.iv.next, %for.body166 ]
  %arrayidx168 = getelementptr inbounds %struct.site, %struct.site* %s.0381, i64 0, i32 8, i64 %indvars.iv
  call void @left_su2_hit_n(%struct.su2_matrix* nonnull %u, i32 %p, i32 %q, %struct.su3_matrix* nonnull %arrayidx168) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.body171, label %for.body166, !llvm.loop !196

for.cond179.preheader:                            ; preds = %for.body171
  %33 = bitcast %struct.site* %s.0381 to i8*
  br i1 %cmp180375, label %for.body181, label %for.cond207.preheader

for.body171:                                      ; preds = %for.body166, %for.body171
  %indvars.iv383 = phi i64 [ %indvars.iv.next384, %for.body171 ], [ 0, %for.body166 ]
  %arrayidx173 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %indvars.iv383
  %34 = load i8**, i8*** %arrayidx173, align 8, !tbaa !15
  %arrayidx175 = getelementptr inbounds i8*, i8** %34, i64 %indvars.iv393
  %35 = bitcast i8** %arrayidx175 to %struct.su3_matrix**
  %36 = load %struct.su3_matrix*, %struct.su3_matrix** %35, align 8, !tbaa !15
  call void @right_su2_hit_a(%struct.su2_matrix* nonnull %u, i32 %p, i32 %q, %struct.su3_matrix* %36) #32
  %indvars.iv.next384 = add nuw nsw i64 %indvars.iv383, 1
  %exitcond385.not = icmp eq i64 %indvars.iv.next384, 4
  br i1 %exitcond385.not, label %for.cond179.preheader, label %for.body171, !llvm.loop !197

for.cond207.preheader:                            ; preds = %for.inc204, %for.cond179.preheader
  br i1 %cmp208377, label %for.body209, label %for.inc230

for.body181:                                      ; preds = %for.cond179.preheader, %for.inc204
  %indvars.iv386 = phi i64 [ %indvars.iv.next387, %for.inc204 ], [ 0, %for.cond179.preheader ]
  %arrayidx183 = getelementptr inbounds i32, i32* %vector_parity, i64 %indvars.iv386
  %37 = load i32, i32* %arrayidx183, align 4, !tbaa !13
  %cmp184 = icmp eq i32 %37, 3
  %cmp187 = icmp eq i32 %37, %parity
  %or.cond = select i1 %cmp184, i1 true, i1 %cmp187
  br i1 %or.cond, label %if.then188, label %for.inc204

if.then188:                                       ; preds = %for.body181
  %arrayidx190 = getelementptr inbounds i32, i32* %vector_offset, i64 %indvars.iv386
  %38 = load i32, i32* %arrayidx190, align 4, !tbaa !13
  %idx.ext191 = sext i32 %38 to i64
  %add.ptr192 = getelementptr inbounds i8, i8* %33, i64 %idx.ext191
  %c193 = bitcast i8* %add.ptr192 to [3 x %struct.complex]*
  %arrayidx195 = getelementptr inbounds [3 x %struct.complex], [3 x %struct.complex]* %c193, i64 0, i64 %idxprom19
  %arrayidx202 = getelementptr inbounds [3 x %struct.complex], [3 x %struct.complex]* %c193, i64 0, i64 %idxprom25
  call void @mult_su2_mat_vec_elem_n(%struct.su2_matrix* nonnull %u, %struct.complex* %arrayidx195, %struct.complex* %arrayidx202) #32
  br label %for.inc204

for.inc204:                                       ; preds = %for.body181, %if.then188
  %indvars.iv.next387 = add nuw nsw i64 %indvars.iv386, 1
  %exitcond388.not = icmp eq i64 %indvars.iv.next387, %wide.trip.count
  br i1 %exitcond388.not, label %for.cond207.preheader, label %for.body181, !llvm.loop !198

for.body209:                                      ; preds = %for.cond207.preheader, %for.inc227
  %indvars.iv389 = phi i64 [ %indvars.iv.next390, %for.inc227 ], [ 0, %for.cond207.preheader ]
  %arrayidx211 = getelementptr inbounds i32, i32* %antiherm_parity, i64 %indvars.iv389
  %39 = load i32, i32* %arrayidx211, align 4, !tbaa !13
  %cmp212 = icmp eq i32 %39, 3
  %cmp216 = icmp eq i32 %39, %parity
  %or.cond370 = select i1 %cmp212, i1 true, i1 %cmp216
  br i1 %or.cond370, label %if.then217, label %for.inc227

if.then217:                                       ; preds = %for.body209
  %arrayidx219 = getelementptr inbounds i32, i32* %antiherm_offset, i64 %indvars.iv389
  %40 = load i32, i32* %arrayidx219, align 4, !tbaa !13
  %idx.ext220 = sext i32 %40 to i64
  %add.ptr221 = getelementptr inbounds i8, i8* %33, i64 %idx.ext220
  %41 = bitcast i8* %add.ptr221 to %struct.anti_hermitmat*
  call void @uncompress_anti_hermitian(%struct.anti_hermitmat* %41, %struct.su3_matrix* nonnull %htemp) #32
  call void @left_su2_hit_n(%struct.su2_matrix* nonnull %u, i32 %p, i32 %q, %struct.su3_matrix* nonnull %htemp) #32
  call void @right_su2_hit_a(%struct.su2_matrix* nonnull %u, i32 %p, i32 %q, %struct.su3_matrix* nonnull %htemp) #32
  %42 = load i32, i32* %arrayidx219, align 4, !tbaa !13
  %idx.ext224 = sext i32 %42 to i64
  %add.ptr225 = getelementptr inbounds i8, i8* %33, i64 %idx.ext224
  %43 = bitcast i8* %add.ptr225 to %struct.anti_hermitmat*
  call void @make_anti_hermitian(%struct.su3_matrix* nonnull %htemp, %struct.anti_hermitmat* %43) #32
  br label %for.inc227

for.inc227:                                       ; preds = %for.body209, %if.then217
  %indvars.iv.next390 = add nuw nsw i64 %indvars.iv389, 1
  %exitcond392.not = icmp eq i64 %indvars.iv.next390, %wide.trip.count391
  br i1 %exitcond392.not, label %for.inc230, label %for.body209, !llvm.loop !199

for.inc230:                                       ; preds = %for.inc227, %for.cond207.preheader
  %indvars.iv.next394 = add nsw i64 %indvars.iv393, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0381, i64 1
  %44 = load i32, i32* @even_sites_on_node, align 4
  %45 = load i32, i32* @sites_on_node, align 4
  %cond5 = select i1 %cmp1, i32 %44, i32 %45
  %46 = sext i32 %cond5 to i64
  %cmp6 = icmp slt i64 %indvars.iv.next394, %46
  br i1 %cmp6, label %for.body, label %for.end232, !llvm.loop !200

for.end232:                                       ; preds = %for.inc230, %entry
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define double @get_gauge_fix_action(i32 %gauge_dir, i32 %parity) local_unnamed_addr #1 {
entry:
  %gauge_fix_action = alloca double, align 8
  %0 = bitcast double* %gauge_fix_action to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %cmp = icmp eq i32 %parity, 1
  %1 = load i32, i32* @even_sites_on_node, align 4
  %cond = select i1 %cmp, i32 %1, i32 0
  %idxprom = sext i32 %cond to i64
  %cmp1 = icmp eq i32 %parity, 2
  %2 = load i32, i32* @sites_on_node, align 4
  %cond576 = select i1 %cmp1, i32 %1, i32 %2
  %cmp677 = icmp slt i32 %cond, %cond576
  br i1 %cmp677, label %for.cond7.preheader.preheader, label %for.cond24.preheader

for.cond7.preheader.preheader:                    ; preds = %entry
  %3 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %3, i64 %idxprom
  %4 = zext i32 %gauge_dir to i64
  br label %for.cond7.preheader

for.cond7.preheader:                              ; preds = %for.cond7.preheader.preheader, %for.inc21
  %indvars.iv82 = phi i64 [ %idxprom, %for.cond7.preheader.preheader ], [ %indvars.iv.next83, %for.inc21 ]
  %s.079 = phi %struct.site* [ %arrayidx, %for.cond7.preheader.preheader ], [ %incdec.ptr, %for.inc21 ]
  %add2070.lcssa7578 = phi double [ 0.000000e+00, %for.cond7.preheader.preheader ], [ %add2069, %for.inc21 ]
  br label %for.body9

for.cond24.preheader:                             ; preds = %for.inc21, %entry
  %add2070.lcssa75.lcssa = phi double [ 0.000000e+00, %entry ], [ %add2069, %for.inc21 ]
  store double %add2070.lcssa75.lcssa, double* %gauge_fix_action, align 8, !tbaa !11
  br label %for.body26

for.body9:                                        ; preds = %for.cond7.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond7.preheader ], [ %indvars.iv.next, %for.inc ]
  %add207071 = phi double [ %add2070.lcssa7578, %for.cond7.preheader ], [ %add2069, %for.inc ]
  %cmp10.not = icmp eq i64 %indvars.iv, %4
  br i1 %cmp10.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body9
  %arrayidx12 = getelementptr inbounds %struct.site, %struct.site* %s.079, i64 0, i32 8, i64 %indvars.iv
  %arrayidx14 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %indvars.iv
  %5 = load i8**, i8*** %arrayidx14, align 8, !tbaa !15
  %arrayidx16 = getelementptr inbounds i8*, i8** %5, i64 %indvars.iv82
  %6 = bitcast i8** %arrayidx16 to %struct.su3_matrix**
  %7 = load %struct.su3_matrix*, %struct.su3_matrix** %6, align 8, !tbaa !15
  %call = tail call { double, double } @trace_su3(%struct.su3_matrix* nonnull %arrayidx12) #32
  %8 = extractvalue { double, double } %call, 0
  %add = fadd double %add207071, %8
  %call18 = tail call { double, double } @trace_su3(%struct.su3_matrix* %7) #32
  %9 = extractvalue { double, double } %call18, 0
  %add20 = fadd double %add, %9
  br label %for.inc

for.inc:                                          ; preds = %for.body9, %if.then
  %add2069 = phi double [ %add207071, %for.body9 ], [ %add20, %if.then ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond81.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond81.not, label %for.inc21, label %for.body9, !llvm.loop !201

for.inc21:                                        ; preds = %for.inc
  %indvars.iv.next83 = add nsw i64 %indvars.iv82, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.079, i64 1
  %10 = load i32, i32* @even_sites_on_node, align 4
  %11 = load i32, i32* @sites_on_node, align 4
  %cond5 = select i1 %cmp1, i32 %10, i32 %11
  %12 = sext i32 %cond5 to i64
  %cmp6 = icmp slt i64 %indvars.iv.next83, %12
  br i1 %cmp6, label %for.cond7.preheader, label %for.cond24.preheader, !llvm.loop !202

for.body26:                                       ; preds = %for.cond24.preheader, %for.body26
  %dir.168 = phi i32 [ 0, %for.cond24.preheader ], [ %inc32, %for.body26 ]
  %ndir.067 = phi i32 [ 0, %for.cond24.preheader ], [ %spec.select, %for.body26 ]
  %cmp27.not = icmp ne i32 %dir.168, %gauge_dir
  %inc29 = zext i1 %cmp27.not to i32
  %spec.select = add nuw nsw i32 %ndir.067, %inc29
  %inc32 = add nuw nsw i32 %dir.168, 1
  %exitcond.not = icmp eq i32 %inc32, 4
  br i1 %exitcond.not, label %for.end33, label %for.body26, !llvm.loop !203

for.end33:                                        ; preds = %for.body26
  call void @g_doublesum(double* nonnull %gauge_fix_action) #32
  %13 = load double, double* %gauge_fix_action, align 8, !tbaa !11
  %mul = mul nsw i32 %spec.select, 6
  %14 = load i32, i32* @nx, align 4, !tbaa !13
  %mul34 = mul nsw i32 %mul, %14
  %15 = load i32, i32* @ny, align 4, !tbaa !13
  %mul35 = mul nsw i32 %mul34, %15
  %16 = load i32, i32* @nz, align 4, !tbaa !13
  %mul36 = mul nsw i32 %mul35, %16
  %17 = load i32, i32* @nt, align 4, !tbaa !13
  %mul37 = mul nsw i32 %mul36, %17
  %conv = sitofp i32 %mul37 to double
  %div = fdiv double %13, %conv
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret double %div
}

; Function Attrs: noinline nounwind optsize uwtable
define void @gaugefixstep(i32 %gauge_dir, double* nocapture %av_gauge_fix_action, double %relax_boost, i32 %nvector, i32* nocapture readonly %vector_offset, i32* nocapture readonly %vector_parity, i32 %nantiherm, i32* nocapture readonly %antiherm_offset, i32* nocapture readonly %antiherm_parity) local_unnamed_addr #1 {
entry:
  %mtag = alloca [8 x %struct.msg_tag*], align 16
  %0 = bitcast [8 x %struct.msg_tag*]* %mtag to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #31
  store double 0.000000e+00, double* %av_gauge_fix_action, align 8, !tbaa !11
  tail call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call = tail call i32 @fflush(%struct._IO_FILE* %1) #34
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %entry, %for.inc111
  %parity.0201 = phi i32 [ 1, %entry ], [ %inc112, %for.inc111 ]
  br label %for.body3

for.body3:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  %dir.0188 = phi i32 [ 0, %for.cond1.preheader ], [ %inc, %for.body3 ]
  %sub = sub nuw nsw i32 7, %dir.0188
  %arrayidx7 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %indvars.iv
  %2 = load i8**, i8*** %arrayidx7, align 8, !tbaa !15
  %3 = trunc i64 %indvars.iv to i32
  %4 = mul i32 %3, 144
  %5 = add i32 %4, 112
  %call8 = tail call %struct.msg_tag* @start_gather(i32 %5, i32 144, i32 %sub, i32 %parity.0201, i8** %2) #32
  %arrayidx10 = getelementptr inbounds [8 x %struct.msg_tag*], [8 x %struct.msg_tag*]* %mtag, i64 0, i64 %indvars.iv
  store %struct.msg_tag* %call8, %struct.msg_tag** %arrayidx10, align 8, !tbaa !15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %inc = add nuw nsw i32 %dir.0188, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.body14, label %for.body3, !llvm.loop !204

for.body14:                                       ; preds = %for.body3, %for.body14
  %indvars.iv205 = phi i64 [ %indvars.iv.next206, %for.body14 ], [ 0, %for.body3 ]
  %arrayidx16 = getelementptr inbounds [8 x %struct.msg_tag*], [8 x %struct.msg_tag*]* %mtag, i64 0, i64 %indvars.iv205
  %6 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx16, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %6) #32
  %indvars.iv.next206 = add nuw nsw i64 %indvars.iv205, 1
  %exitcond207.not = icmp eq i64 %indvars.iv.next206, 4
  br i1 %exitcond207.not, label %for.end19, label %for.body14, !llvm.loop !205

for.end19:                                        ; preds = %for.body14
  %call20 = tail call double @get_gauge_fix_action(i32 %gauge_dir, i32 %parity.0201) #34
  tail call void @do_hit(i32 %gauge_dir, i32 %parity.0201, i32 0, i32 1, double %relax_boost, i32 %nvector, i32* %vector_offset, i32* %vector_parity, i32 %nantiherm, i32* %antiherm_offset, i32* %antiherm_parity) #34
  tail call void @do_hit(i32 %gauge_dir, i32 %parity.0201, i32 1, i32 2, double %relax_boost, i32 %nvector, i32* %vector_offset, i32* %vector_parity, i32 %nantiherm, i32* %antiherm_offset, i32* %antiherm_parity) #34
  tail call void @do_hit(i32 %gauge_dir, i32 %parity.0201, i32 2, i32 0, double %relax_boost, i32 %nvector, i32* %vector_offset, i32* %vector_parity, i32 %nantiherm, i32* %antiherm_offset, i32* %antiherm_parity) #34
  %call21 = tail call double @get_gauge_fix_action(i32 %gauge_dir, i32 %parity.0201) #34
  %7 = load double, double* %av_gauge_fix_action, align 8, !tbaa !11
  %add = fadd double %call21, %7
  store double %add, double* %av_gauge_fix_action, align 8, !tbaa !11
  %cmp26 = icmp eq i32 %parity.0201, 1
  %cmp31 = icmp eq i32 %parity.0201, 2
  %xor66 = xor i32 %parity.0201, 3
  %cmp76 = icmp eq i32 %xor66, 1
  %cmp86 = icmp eq i32 %xor66, 2
  br label %for.body25

for.body25:                                       ; preds = %for.end19, %for.end105
  %indvars.iv212 = phi i64 [ 0, %for.end19 ], [ %indvars.iv.next213, %for.end105 ]
  tail call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %8 = load i32, i32* @even_sites_on_node, align 4
  %cond = select i1 %cmp26, i32 %8, i32 0
  %idxprom28 = sext i32 %cond to i64
  %arrayidx47 = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %indvars.iv212
  %9 = load i32, i32* @sites_on_node, align 4
  %cond36190 = select i1 %cmp31, i32 %8, i32 %9
  %cmp37191 = icmp slt i32 %cond, %cond36190
  br i1 %cmp37191, label %for.body39.preheader, label %for.end54

for.body39.preheader:                             ; preds = %for.body25
  %10 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx29 = getelementptr inbounds %struct.site, %struct.site* %10, i64 %idxprom28
  br label %for.body39

for.body39:                                       ; preds = %for.body39.preheader, %for.body39
  %indvars.iv208 = phi i64 [ %idxprom28, %for.body39.preheader ], [ %indvars.iv.next209, %for.body39 ]
  %s.0194 = phi %struct.site* [ %arrayidx29, %for.body39.preheader ], [ %incdec.ptr, %for.body39 ]
  %11 = load i32, i32* @diffmat_offset, align 4, !tbaa !13
  %cmp40 = icmp sgt i32 %11, -1
  %12 = load i8**, i8*** %arrayidx47, align 8, !tbaa !15
  %arrayidx45 = getelementptr inbounds i8*, i8** %12, i64 %indvars.iv208
  %13 = bitcast i8** %arrayidx45 to %struct.su3_matrix**
  %14 = load %struct.su3_matrix*, %struct.su3_matrix** %13, align 8, !tbaa !15
  %15 = bitcast %struct.site* %s.0194 to i8*
  %idx.ext187 = zext i32 %11 to i64
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %idx.ext187
  %16 = bitcast i8* %add.ptr to %struct.su3_matrix*
  %17 = load %struct.su3_matrix*, %struct.su3_matrix** @diffmatp, align 8
  %arrayidx51 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %17, i64 %indvars.iv208
  %.sink = select i1 %cmp40, %struct.su3_matrix* %16, %struct.su3_matrix* %arrayidx51
  tail call void @su3mat_copy(%struct.su3_matrix* %14, %struct.su3_matrix* %.sink) #32
  %indvars.iv.next209 = add nsw i64 %indvars.iv208, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0194, i64 1
  %18 = load i32, i32* @even_sites_on_node, align 4
  %19 = load i32, i32* @sites_on_node, align 4
  %cond36 = select i1 %cmp31, i32 %18, i32 %19
  %20 = sext i32 %cond36 to i64
  %cmp37 = icmp slt i64 %indvars.iv.next209, %20
  br i1 %cmp37, label %for.body39, label %for.end54, !llvm.loop !206

for.end54:                                        ; preds = %for.body39, %for.body25
  %arrayidx56 = getelementptr inbounds [8 x %struct.msg_tag*], [8 x %struct.msg_tag*]* %mtag, i64 0, i64 %indvars.iv212
  %21 = load %struct.msg_tag*, %struct.msg_tag** %arrayidx56, align 8, !tbaa !15
  tail call void @cleanup_gather(%struct.msg_tag* %21) #32
  tail call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %22 = load i32, i32* @diffmat_offset, align 4, !tbaa !13
  %cmp57 = icmp sgt i32 %22, -1
  br i1 %cmp57, label %if.then59, label %if.else65

if.then59:                                        ; preds = %for.end54
  %23 = load i8**, i8*** %arrayidx47, align 8, !tbaa !15
  %24 = trunc i64 %indvars.iv212 to i32
  %call62 = tail call %struct.msg_tag* @start_gather(i32 %22, i32 144, i32 %24, i32 %xor66, i8** %23) #32
  br label %if.end72

if.else65:                                        ; preds = %for.end54
  %25 = load i8*, i8** bitcast (%struct.su3_matrix** @diffmatp to i8**), align 8, !tbaa !15
  %26 = load i8**, i8*** %arrayidx47, align 8, !tbaa !15
  %27 = trunc i64 %indvars.iv212 to i32
  %call69 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %25, i32 144, i32 %27, i32 %xor66, i8** %26) #32
  br label %if.end72

if.end72:                                         ; preds = %if.else65, %if.then59
  %storemerge = phi %struct.msg_tag* [ %call69, %if.else65 ], [ %call62, %if.then59 ]
  store %struct.msg_tag* %storemerge, %struct.msg_tag** %arrayidx56, align 8, !tbaa !15
  tail call void @wait_gather(%struct.msg_tag* %storemerge) #32
  %28 = load i32, i32* @even_sites_on_node, align 4
  %cond81 = select i1 %cmp76, i32 %28, i32 0
  %idxprom82 = sext i32 %cond81 to i64
  %29 = load i32, i32* @sites_on_node, align 4
  %cond91195 = select i1 %cmp86, i32 %28, i32 %29
  %cmp92196 = icmp slt i32 %cond81, %cond91195
  br i1 %cmp92196, label %for.body94.preheader, label %for.end105

for.body94.preheader:                             ; preds = %if.end72
  %30 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx83 = getelementptr inbounds %struct.site, %struct.site* %30, i64 %idxprom82
  br label %for.body94

for.body94:                                       ; preds = %for.body94.preheader, %for.body94
  %indvars.iv210 = phi i64 [ %idxprom82, %for.body94.preheader ], [ %indvars.iv.next211, %for.body94 ]
  %s.1198 = phi %struct.site* [ %arrayidx83, %for.body94.preheader ], [ %incdec.ptr104, %for.body94 ]
  %31 = load i8**, i8*** %arrayidx47, align 8, !tbaa !15
  %arrayidx98 = getelementptr inbounds i8*, i8** %31, i64 %indvars.iv210
  %32 = bitcast i8** %arrayidx98 to %struct.su3_matrix**
  %33 = load %struct.su3_matrix*, %struct.su3_matrix** %32, align 8, !tbaa !15
  %arrayidx101 = getelementptr inbounds %struct.site, %struct.site* %s.1198, i64 0, i32 8, i64 %indvars.iv212
  tail call void @su3mat_copy(%struct.su3_matrix* %33, %struct.su3_matrix* nonnull %arrayidx101) #32
  %indvars.iv.next211 = add nsw i64 %indvars.iv210, 1
  %incdec.ptr104 = getelementptr inbounds %struct.site, %struct.site* %s.1198, i64 1
  %34 = load i32, i32* @even_sites_on_node, align 4
  %35 = load i32, i32* @sites_on_node, align 4
  %cond91 = select i1 %cmp86, i32 %34, i32 %35
  %36 = sext i32 %cond91 to i64
  %cmp92 = icmp slt i64 %indvars.iv.next211, %36
  br i1 %cmp92, label %for.body94, label %for.end105, !llvm.loop !207

for.end105:                                       ; preds = %for.body94, %if.end72
  tail call void @cleanup_gather(%struct.msg_tag* %storemerge) #32
  %indvars.iv.next213 = add nuw nsw i64 %indvars.iv212, 1
  %exitcond214.not = icmp eq i64 %indvars.iv.next213, 4
  br i1 %exitcond214.not, label %for.inc111, label %for.body25, !llvm.loop !208

for.inc111:                                       ; preds = %for.end105
  %inc112 = add nuw nsw i32 %parity.0201, 1
  %exitcond215.not = icmp eq i32 %inc112, 3
  br i1 %exitcond215.not, label %for.end113, label %for.cond1.preheader, !llvm.loop !209

for.end113:                                       ; preds = %for.inc111
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @gaugefixscratch(i32 %diffmat, i32 %sumvec) local_unnamed_addr #1 {
entry:
  store i32 %diffmat, i32* @diffmat_offset, align 4, !tbaa !13
  store %struct.su3_matrix* null, %struct.su3_matrix** @diffmatp, align 8, !tbaa !15
  %cmp = icmp slt i32 %diffmat, 0
  br i1 %cmp, label %if.then, label %if.end10

if.then:                                          ; preds = %entry
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv = sext i32 %0 to i64
  %call = tail call noalias align 16 i8* @calloc(i64 %conv, i64 144) #32
  store i8* %call, i8** bitcast (%struct.su3_matrix** @diffmatp to i8**), align 8, !tbaa !15
  %cmp1 = icmp eq i8* %call, null
  br i1 %cmp1, label %if.then3, label %if.end10

if.then3:                                         ; preds = %if.then
  %1 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp4 = icmp eq i32 %1, 0
  br i1 %cmp4, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.then3
  %puts27 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([31 x i8], [31 x i8]* @str.3, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then6, %if.then3
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call8 = tail call i32 @fflush(%struct._IO_FILE* %2) #34
  tail call void @terminate(i32 1) #32
  br label %if.end10

if.end10:                                         ; preds = %if.then, %if.end, %entry
  store i32 %sumvec, i32* @sumvec_offset, align 4, !tbaa !13
  store %struct.su3_vector* null, %struct.su3_vector** @sumvecp, align 8, !tbaa !15
  %cmp11 = icmp slt i32 %sumvec, 0
  br i1 %cmp11, label %if.then13, label %if.end26

if.then13:                                        ; preds = %if.end10
  %3 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv14 = sext i32 %3 to i64
  %call15 = tail call noalias align 16 i8* @calloc(i64 %conv14, i64 48) #32
  store i8* %call15, i8** bitcast (%struct.su3_vector** @sumvecp to i8**), align 8, !tbaa !15
  %cmp16 = icmp eq i8* %call15, null
  br i1 %cmp16, label %if.then18, label %if.end26

if.then18:                                        ; preds = %if.then13
  %4 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp19 = icmp eq i32 %4, 0
  br i1 %cmp19, label %if.then21, label %if.end23

if.then21:                                        ; preds = %if.then18
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([30 x i8], [30 x i8]* @str.92, i64 0, i64 0))
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %if.then18
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call24 = tail call i32 @fflush(%struct._IO_FILE* %5) #34
  tail call void @terminate(i32 1) #32
  br label %if.end26

if.end26:                                         ; preds = %if.then13, %if.end23, %if.end10
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @gaugefix(i32 %gauge_dir, double %relax_boost, i32 %max_gauge_iter, double %gauge_fix_tol, i32 %diffmat, i32 %sumvec, i32 %nvector, i32* nocapture readonly %vector_offset, i32* nocapture readonly %vector_parity, i32 %nantiherm, i32* nocapture readonly %antiherm_offset, i32* nocapture readonly %antiherm_parity) local_unnamed_addr #1 {
entry:
  %current_av = alloca double, align 8
  %0 = bitcast double* %current_av to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  tail call void @gaugefixscratch(i32 %diffmat, i32 %sumvec) #34
  %cmp34 = icmp sgt i32 %max_gauge_iter, 0
  br i1 %cmp34, label %for.body, label %if.end11

for.body:                                         ; preds = %entry, %for.inc
  %del_av.038 = phi double [ %del_av.133, %for.inc ], [ undef, %entry ]
  %old_av.037 = phi double [ %1, %for.inc ], [ undef, %entry ]
  %gauge_iter.035 = phi i32 [ %inc, %for.inc ], [ 0, %entry ]
  call void @gaugefixstep(i32 %gauge_dir, double* nonnull %current_av, double %relax_boost, i32 %nvector, i32* %vector_offset, i32* %vector_parity, i32 %nantiherm, i32* %antiherm_offset, i32* %antiherm_parity) #34
  %cmp1.not = icmp eq i32 %gauge_iter.035, 0
  %1 = load double, double* %current_av, align 8, !tbaa !11
  br i1 %cmp1.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %sub = fsub double %1, %old_av.037
  %2 = tail call double @llvm.fabs.f64(double %sub)
  %cmp2 = fcmp olt double %2, %gauge_fix_tol
  br i1 %cmp2, label %for.end, label %if.end4

if.end4:                                          ; preds = %if.then
  %rem = urem i32 %gauge_iter.035, 20
  %cmp5 = icmp eq i32 %rem, 19
  br i1 %cmp5, label %if.then6, label %for.inc

if.then6:                                         ; preds = %if.end4
  tail call void @reunitarize() #32
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.end4, %if.then6
  %del_av.133 = phi double [ %sub, %if.end4 ], [ %sub, %if.then6 ], [ %del_av.038, %for.body ]
  %inc = add nuw nsw i32 %gauge_iter.035, 1
  %exitcond.not = icmp eq i32 %inc, %max_gauge_iter
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !210

for.end:                                          ; preds = %for.inc, %if.then
  %gauge_iter.0.lcssa = phi i32 [ %max_gauge_iter, %for.inc ], [ %gauge_iter.035, %if.then ]
  %del_av.2 = phi double [ %del_av.133, %for.inc ], [ %sub, %if.then ]
  %rem8 = urem i32 %gauge_iter.0.lcssa, 20
  %cmp9.not = icmp eq i32 %rem8, 0
  br i1 %cmp9.not, label %if.end11, label %if.then10

if.then10:                                        ; preds = %for.end
  tail call void @reunitarize() #32
  br label %if.end11

if.end11:                                         ; preds = %entry, %if.then10, %for.end
  %del_av.247 = phi double [ %del_av.2, %if.then10 ], [ %del_av.2, %for.end ], [ undef, %entry ]
  %gauge_iter.0.lcssa46 = phi i32 [ %gauge_iter.0.lcssa, %if.then10 ], [ %gauge_iter.0.lcssa, %for.end ], [ 0, %entry ]
  %3 = phi double [ %1, %if.then10 ], [ %1, %for.end ], [ undef, %entry ]
  %4 = load i32, i32* @diffmat_offset, align 4, !tbaa !13
  %cmp12 = icmp slt i32 %4, 0
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end11
  %5 = load i8*, i8** bitcast (%struct.su3_matrix** @diffmatp to i8**), align 8, !tbaa !15
  tail call void @free(i8* %5) #32
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end11
  %6 = load i32, i32* @sumvec_offset, align 4, !tbaa !13
  %cmp15 = icmp slt i32 %6, 0
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end14
  %7 = load i8*, i8** bitcast (%struct.su3_vector** @sumvecp to i8**), align 8, !tbaa !15
  tail call void @free(i8* %7) #32
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %if.end14
  %8 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp18 = icmp eq i32 %8, 0
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end17
  %call = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2.93, i64 0, i64 0), i32 %gauge_iter.0.lcssa46, double %3, double %del_av.247) #34
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.end17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.gauge_file* @save_lattice(i32 %flag, i8* %filename) local_unnamed_addr #1 {
entry:
  %ssplaq = alloca double, align 8
  %stplaq = alloca double, align 8
  %0 = bitcast double* %ssplaq to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %1 = bitcast double* %stplaq to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #31
  %call = tail call double (...) bitcast (double ()* @dclock to double (...)*)() #32
  switch i32 %flag, label %sw.default [
    i32 20, label %sw.epilog
    i32 21, label %sw.bb1
    i32 22, label %sw.bb3
    i32 28, label %sw.bb5
    i32 23, label %sw.bb7
    i32 30, label %sw.bb9
    i32 31, label %sw.bb11
  ]

sw.bb1:                                           ; preds = %entry
  %call2 = tail call %struct.gauge_file* @save_ascii(i8* %filename) #32
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %call4 = tail call %struct.gauge_file* @save_serial(i8* %filename) #32
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  %call6 = tail call %struct.gauge_file* @save_parallel(i8* %filename) #32
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  %call8 = tail call %struct.gauge_file* @save_checkpoint(i8* %filename) #32
  br label %sw.epilog

sw.bb9:                                           ; preds = %entry
  %call10 = tail call %struct.gauge_file* @save_serial_archive(i8* %filename) #32
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  %call12 = tail call %struct.gauge_file* @save_parallel_archive(i8* %filename) #32
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([53 x i8], [53 x i8]* @str.94, i64 0, i64 0))
  tail call void @terminate(i32 1) #32
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %sw.default, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1
  %gf.0 = phi %struct.gauge_file* [ undef, %sw.default ], [ %call12, %sw.bb11 ], [ %call10, %sw.bb9 ], [ %call8, %sw.bb7 ], [ %call6, %sw.bb5 ], [ %call4, %sw.bb3 ], [ %call2, %sw.bb1 ], [ null, %entry ]
  %call14 = tail call double (...) bitcast (double ()* @dclock to double (...)*)() #32
  %cmp = icmp ne i32 %flag, 20
  %2 = load i32, i32* @this_node, align 4
  %cmp15 = icmp eq i32 %2, 0
  %or.cond = select i1 %cmp, i1 %cmp15, i1 false
  br i1 %or.cond, label %if.then16, label %if.end18

if.then16:                                        ; preds = %sw.epilog
  %add = fsub double %call14, %call
  %call17 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.95, i64 0, i64 0), double %add) #34
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %sw.epilog
  call void @d_plaquette(double* nonnull %ssplaq, double* nonnull %stplaq) #32
  %3 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp19 = icmp eq i32 %3, 0
  br i1 %cmp19, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end18
  %4 = load double, double* %ssplaq, align 8, !tbaa !11
  %5 = load double, double* %stplaq, align 8, !tbaa !11
  %call21 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2.96, i64 0, i64 0), double %4, double %5) #34
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret %struct.gauge_file* %gf.0
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.gauge_file* @reload_lattice(i32 %flag, i8* %filename) local_unnamed_addr #1 {
entry:
  %ssplaq = alloca double, align 8
  %stplaq = alloca double, align 8
  %max_deviation = alloca double, align 8
  %0 = bitcast double* %ssplaq to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %1 = bitcast double* %stplaq to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #31
  %2 = bitcast double* %max_deviation to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #31
  %call = tail call double (...) bitcast (double ()* @dclock to double (...)*)() #32
  switch i32 %flag, label %sw.default [
    i32 10, label %sw.epilog
    i32 11, label %sw.bb1
    i32 12, label %sw.bb2
    i32 13, label %sw.bb4
    i32 19, label %sw.bb6
  ]

sw.bb1:                                           ; preds = %entry
  tail call void @coldlat() #34
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %call3 = tail call %struct.gauge_file* @restore_ascii(i8* %filename) #32
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  %call5 = tail call %struct.gauge_file* @restore_serial(i8* %filename) #32
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  %call7 = tail call %struct.gauge_file* @restore_parallel(i8* %filename) #32
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %3 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.default
  %call8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3.99, i64 0, i64 0), i32 %flag) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.default
  tail call void @terminate(i32 1) #32
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %if.end, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb1
  %gf.0 = phi %struct.gauge_file* [ undef, %if.end ], [ %call7, %sw.bb6 ], [ %call5, %sw.bb4 ], [ %call3, %sw.bb2 ], [ null, %sw.bb1 ], [ null, %entry ]
  %call9 = tail call double (...) bitcast (double ()* @dclock to double (...)*)() #32
  %4 = and i32 %flag, -2
  %5 = icmp ne i32 %4, 10
  %6 = load i32, i32* @this_node, align 4
  %cmp13 = icmp eq i32 %6, 0
  %or.cond33 = select i1 %5, i1 %cmp13, i1 false
  br i1 %or.cond33, label %if.then14, label %if.end17

if.then14:                                        ; preds = %sw.epilog
  %add = fsub double %call9, %call
  %call15 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4.100, i64 0, i64 0), double %add) #34
  br label %if.end17

if.end17:                                         ; preds = %if.then14, %sw.epilog
  call void @d_plaquette(double* nonnull %ssplaq, double* nonnull %stplaq) #32
  %7 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp18 = icmp eq i32 %7, 0
  br i1 %cmp18, label %if.then19, label %if.end22

if.then19:                                        ; preds = %if.end17
  %8 = load double, double* %ssplaq, align 8, !tbaa !11
  %9 = load double, double* %stplaq, align 8, !tbaa !11
  %call20 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2.96, i64 0, i64 0), double %8, double %9) #34
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call21 = call i32 @fflush(%struct._IO_FILE* %10) #34
  br label %if.end22

if.end22:                                         ; preds = %if.then19, %if.end17
  %call23 = call double (...) bitcast (double ()* @dclock to double (...)*)() #32
  %call25 = call double @check_unitarity() #32
  store double %call25, double* %max_deviation, align 8, !tbaa !11
  call void @g_doublemax(double* nonnull %max_deviation) #32
  %call26 = call double (...) bitcast (double ()* @dclock to double (...)*)() #32
  %11 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp28 = icmp eq i32 %11, 0
  br i1 %cmp28, label %if.then29, label %if.end31

if.then29:                                        ; preds = %if.end22
  %12 = load double, double* %max_deviation, align 8, !tbaa !11
  %call30 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.101, i64 0, i64 0), double %12) #34
  br label %if.end31

if.end31:                                         ; preds = %if.then29, %if.end22
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call32 = call i32 @fflush(%struct._IO_FILE* %13) #34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret %struct.gauge_file* %gf.0
}

; Function Attrs: noinline nounwind optsize uwtable
define void @coldlat() local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp67 = icmp sgt i32 %0, 0
  br i1 %cmp67, label %for.cond1.preheader.preheader, label %for.end33

for.cond1.preheader.preheader:                    ; preds = %entry
  %1 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.preheader, %for.inc31
  %i.069 = phi i32 [ %inc32, %for.inc31 ], [ 0, %for.cond1.preheader.preheader ]
  %sit.068 = phi %struct.site* [ %incdec.ptr, %for.inc31 ], [ %1, %for.cond1.preheader.preheader ]
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.cond1.preheader, %for.inc28
  %indvars.iv73 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next74, %for.inc28 ]
  br label %for.cond7.preheader

for.cond7.preheader:                              ; preds = %for.cond4.preheader, %for.inc25
  %indvars.iv70 = phi i64 [ 0, %for.cond4.preheader ], [ %indvars.iv.next71, %for.inc25 ]
  br label %for.body9

for.body9:                                        ; preds = %for.cond7.preheader, %for.body9
  %indvars.iv = phi i64 [ 0, %for.cond7.preheader ], [ %indvars.iv.next, %for.body9 ]
  %cmp10.not = icmp eq i64 %indvars.iv70, %indvars.iv
  %. = select i1 %cmp10.not, double 1.000000e+00, double 0.000000e+00
  %call = tail call { double, double } @cmplx(double %., double 0.000000e+00) #32
  %.sink = extractvalue { double, double } %call, 1
  %.sink76 = extractvalue { double, double } %call, 0
  %2 = getelementptr inbounds %struct.site, %struct.site* %sit.068, i64 0, i32 8, i64 %indvars.iv73, i32 0, i64 %indvars.iv70, i64 %indvars.iv, i32 0
  store double %.sink76, double* %2, align 8
  %3 = getelementptr inbounds %struct.site, %struct.site* %sit.068, i64 0, i32 8, i64 %indvars.iv73, i32 0, i64 %indvars.iv70, i64 %indvars.iv, i32 1
  store double %.sink, double* %3, align 8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc25, label %for.body9, !llvm.loop !211

for.inc25:                                        ; preds = %for.body9
  %indvars.iv.next71 = add nuw nsw i64 %indvars.iv70, 1
  %exitcond72.not = icmp eq i64 %indvars.iv.next71, 3
  br i1 %exitcond72.not, label %for.inc28, label %for.cond7.preheader, !llvm.loop !212

for.inc28:                                        ; preds = %for.inc25
  %indvars.iv.next74 = add nuw nsw i64 %indvars.iv73, 1
  %exitcond75.not = icmp eq i64 %indvars.iv.next74, 4
  br i1 %exitcond75.not, label %for.inc31, label %for.cond4.preheader, !llvm.loop !213

for.inc31:                                        ; preds = %for.inc28
  %inc32 = add nuw nsw i32 %i.069, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %sit.068, i64 1
  %4 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp = icmp slt i32 %inc32, %4
  br i1 %cmp, label %for.cond1.preheader, label %for.end33, !llvm.loop !214

for.end33:                                        ; preds = %for.inc31, %entry
  %5 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp34 = icmp eq i32 %5, 0
  br i1 %cmp34, label %if.then35, label %if.end37

if.then35:                                        ; preds = %for.end33
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([32 x i8], [32 x i8]* @str.70, i64 0, i64 0))
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %for.end33
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @ask_starting_lattice(i32 %prompt, i32* nocapture %flag, i8* %filename) local_unnamed_addr #13 {
entry:
  %savebuf = alloca [256 x i8], align 16
  %0 = getelementptr inbounds [256 x i8], [256 x i8]* %savebuf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %0) #31
  %cmp.not = icmp eq i32 %prompt, 0
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %puts74 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([81 x i8], [81 x i8]* @str.65, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.104, i64 0, i64 0), i8* nonnull %0) #34
  %cmp2.not = icmp eq i32 %call1, 1
  br i1 %cmp2.not, label %if.end5, label %if.then3

if.then3:                                         ; preds = %if.end
  %puts73 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([63 x i8], [63 x i8]* @str.64, i64 0, i64 0))
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %call7 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.105, i64 0, i64 0), i8* nonnull %0) #34
  %bcmp = call i32 @bcmp(i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.106, i64 0, i64 0), i8* noundef nonnull dereferenceable(6) %0, i64 6)
  %cmp10 = icmp eq i32 %bcmp, 0
  br i1 %cmp10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.end5
  store i32 11, i32* %flag, align 4, !tbaa !13
  %putchar72 = call i32 @putchar(i32 10)
  br label %if.end40

if.else:                                          ; preds = %if.end5
  %bcmp66 = call i32 @bcmp(i8* noundef nonnull dereferenceable(9) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12.107, i64 0, i64 0), i8* noundef nonnull dereferenceable(9) %0, i64 9)
  %cmp15 = icmp eq i32 %bcmp66, 0
  br i1 %cmp15, label %if.then16, label %if.else18

if.then16:                                        ; preds = %if.else
  store i32 10, i32* %flag, align 4, !tbaa !13
  %putchar = call i32 @putchar(i32 10)
  br label %if.end40

if.else18:                                        ; preds = %if.else
  %bcmp67 = call i32 @bcmp(i8* noundef nonnull dereferenceable(13) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13.108, i64 0, i64 0), i8* noundef nonnull dereferenceable(13) %0, i64 13)
  %cmp21 = icmp eq i32 %bcmp67, 0
  br i1 %cmp21, label %if.then22, label %if.else23

if.then22:                                        ; preds = %if.else18
  store i32 12, i32* %flag, align 4, !tbaa !13
  br label %if.end40

if.else23:                                        ; preds = %if.else18
  %bcmp68 = call i32 @bcmp(i8* noundef nonnull dereferenceable(14) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14.109, i64 0, i64 0), i8* noundef nonnull dereferenceable(14) %0, i64 14)
  %cmp26 = icmp eq i32 %bcmp68, 0
  br i1 %cmp26, label %if.then27, label %if.else28

if.then27:                                        ; preds = %if.else23
  store i32 13, i32* %flag, align 4, !tbaa !13
  br label %if.end40

if.else28:                                        ; preds = %if.else23
  %bcmp69 = call i32 @bcmp(i8* noundef nonnull dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i8* noundef nonnull dereferenceable(16) %0, i64 16)
  %cmp31 = icmp eq i32 %bcmp69, 0
  br i1 %cmp31, label %if.then32, label %if.else33

if.then32:                                        ; preds = %if.else28
  store i32 19, i32* %flag, align 4, !tbaa !13
  br label %if.end40

if.else33:                                        ; preds = %if.else28
  %call35 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([69 x i8], [69 x i8]* @.str.16.110, i64 0, i64 0), i8* nonnull %0) #34
  br label %cleanup

if.end40:                                         ; preds = %if.then16, %if.then27, %if.then32, %if.then22, %if.then11
  %1 = load i32, i32* %flag, align 4, !tbaa !13
  %2 = and i32 %1, -2
  %switch = icmp eq i32 %2, 10
  br i1 %switch, label %cleanup, label %if.then43

if.then43:                                        ; preds = %if.end40
  br i1 %cmp.not, label %if.end47, label %if.then45

if.then45:                                        ; preds = %if.then43
  %puts71 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([38 x i8], [38 x i8]* @str.63, i64 0, i64 0))
  br label %if.end47

if.end47:                                         ; preds = %if.then45, %if.then43
  %call48 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.104, i64 0, i64 0), i8* %filename) #34
  %cmp49.not = icmp eq i32 %call48, 1
  br i1 %cmp49.not, label %if.end52, label %if.then50

if.then50:                                        ; preds = %if.end47
  %puts70 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([53 x i8], [53 x i8]* @str.62, i64 0, i64 0))
  br label %cleanup

if.end52:                                         ; preds = %if.end47
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) %filename)
  br label %cleanup

cleanup:                                          ; preds = %if.end40, %if.end52, %if.then50, %if.else33, %if.then3
  %retval.0 = phi i32 [ 1, %if.then3 ], [ 1, %if.then50 ], [ 1, %if.else33 ], [ 0, %if.end40 ], [ 0, %if.end52 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %0) #31
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @__isoc99_scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #8

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #21

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #6

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @ask_ending_lattice(i32 %prompt, i32* nocapture %flag, i8* %filename) local_unnamed_addr #13 {
entry:
  %savebuf = alloca [256 x i8], align 16
  %0 = getelementptr inbounds [256 x i8], [256 x i8]* %savebuf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %0) #31
  %cmp.not = icmp eq i32 %prompt, 0
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %puts86 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([141 x i8], [141 x i8]* @str.69, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.104, i64 0, i64 0), i8* nonnull %0) #34
  %cmp2.not = icmp eq i32 %call1, 1
  br i1 %cmp2.not, label %if.end5, label %if.then3

if.then3:                                         ; preds = %if.end
  %puts85 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([59 x i8], [59 x i8]* @str.68, i64 0, i64 0))
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %call7 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.105, i64 0, i64 0), i8* nonnull %0) #34
  %bcmp = call i32 @bcmp(i8* noundef nonnull dereferenceable(11) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22.113, i64 0, i64 0), i8* noundef nonnull dereferenceable(11) %0, i64 11)
  %cmp10 = icmp eq i32 %bcmp, 0
  br i1 %cmp10, label %if.then53.sink.split, label %if.else

if.else:                                          ; preds = %if.end5
  %bcmp77 = call i32 @bcmp(i8* noundef nonnull dereferenceable(12) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23.114, i64 0, i64 0), i8* noundef nonnull dereferenceable(12) %0, i64 12)
  %cmp14 = icmp eq i32 %bcmp77, 0
  br i1 %cmp14, label %if.then53.sink.split, label %if.else16

if.else16:                                        ; preds = %if.else
  %bcmp78 = call i32 @bcmp(i8* noundef nonnull dereferenceable(14) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24.115, i64 0, i64 0), i8* noundef nonnull dereferenceable(14) %0, i64 14)
  %cmp19 = icmp eq i32 %bcmp78, 0
  br i1 %cmp19, label %if.then53.sink.split, label %if.else21

if.else21:                                        ; preds = %if.else16
  %bcmp79 = call i32 @bcmp(i8* noundef nonnull dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25.116, i64 0, i64 0), i8* noundef nonnull dereferenceable(16) %0, i64 16)
  %cmp24 = icmp eq i32 %bcmp79, 0
  br i1 %cmp24, label %if.then53.sink.split, label %if.else26

if.else26:                                        ; preds = %if.else21
  %bcmp80 = call i32 @bcmp(i8* noundef nonnull dereferenceable(20) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26.117, i64 0, i64 0), i8* noundef nonnull dereferenceable(20) %0, i64 20)
  %cmp29 = icmp eq i32 %bcmp80, 0
  br i1 %cmp29, label %if.then53.sink.split, label %if.else31

if.else31:                                        ; preds = %if.else26
  %bcmp81 = call i32 @bcmp(i8* noundef nonnull dereferenceable(22) getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i64 0, i64 0), i8* noundef nonnull dereferenceable(22) %0, i64 22)
  %cmp34 = icmp eq i32 %bcmp81, 0
  br i1 %cmp34, label %if.then53.sink.split, label %if.else36

if.else36:                                        ; preds = %if.else31
  %bcmp82 = call i32 @bcmp(i8* noundef nonnull dereferenceable(7) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i8* noundef nonnull dereferenceable(7) %0, i64 7)
  %cmp39 = icmp eq i32 %bcmp82, 0
  br i1 %cmp39, label %if.end51, label %if.else42

if.else42:                                        ; preds = %if.else36
  %call44 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([70 x i8], [70 x i8]* @.str.29, i64 0, i64 0), i8* nonnull %0) #34
  br label %cleanup

if.end51:                                         ; preds = %if.else36
  store i32 20, i32* %flag, align 4, !tbaa !13
  %putchar = call i32 @putchar(i32 10)
  %.pr = load i32, i32* %flag, align 4, !tbaa !13
  %cmp52.not = icmp eq i32 %.pr, 20
  br i1 %cmp52.not, label %cleanup, label %if.then53

if.then53.sink.split:                             ; preds = %if.else31, %if.else26, %if.else21, %if.else16, %if.else, %if.end5
  %.sink = phi i32 [ 21, %if.end5 ], [ 22, %if.else ], [ 28, %if.else16 ], [ 23, %if.else21 ], [ 30, %if.else26 ], [ 31, %if.else31 ]
  store i32 %.sink, i32* %flag, align 4, !tbaa !13
  br label %if.then53

if.then53:                                        ; preds = %if.then53.sink.split, %if.end51
  br i1 %cmp.not, label %if.end57, label %if.then55

if.then55:                                        ; preds = %if.then53
  %puts84 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @str.67, i64 0, i64 0))
  br label %if.end57

if.end57:                                         ; preds = %if.then55, %if.then53
  %call58 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.104, i64 0, i64 0), i8* %filename) #34
  %cmp59.not = icmp eq i32 %call58, 1
  br i1 %cmp59.not, label %if.end62, label %if.then60

if.then60:                                        ; preds = %if.end57
  %puts83 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([50 x i8], [50 x i8]* @str.66, i64 0, i64 0))
  br label %cleanup

if.end62:                                         ; preds = %if.end57
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) %filename)
  br label %cleanup

cleanup:                                          ; preds = %if.end51, %if.end62, %if.then60, %if.else42, %if.then3
  %retval.0 = phi i32 [ 1, %if.then3 ], [ 1, %if.then60 ], [ 1, %if.else42 ], [ 0, %if.end62 ], [ 0, %if.end51 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %0) #31
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define void @funnylat() local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp112 = icmp sgt i32 %0, 0
  br i1 %cmp112, label %for.cond1.preheader.preheader, label %for.end74

for.cond1.preheader.preheader:                    ; preds = %entry
  %1 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.preheader, %for.inc72
  %i.0114 = phi i32 [ %inc73, %for.inc72 ], [ 0, %for.cond1.preheader.preheader ]
  %sit.0113 = phi %struct.site* [ %incdec.ptr, %for.inc72 ], [ %1, %for.cond1.preheader.preheader ]
  %x = getelementptr inbounds %struct.site, %struct.site* %sit.0113, i64 0, i32 0
  %y = getelementptr inbounds %struct.site, %struct.site* %sit.0113, i64 0, i32 1
  %z = getelementptr inbounds %struct.site, %struct.site* %sit.0113, i64 0, i32 2
  %t = getelementptr inbounds %struct.site, %struct.site* %sit.0113, i64 0, i32 3
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.cond1.preheader, %for.end16
  %indvars.iv118 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next119, %for.end16 ]
  br label %for.cond7.preheader

for.cond7.preheader:                              ; preds = %for.cond4.preheader, %for.inc14
  %indvars.iv115 = phi i64 [ 0, %for.cond4.preheader ], [ %indvars.iv.next116, %for.inc14 ]
  br label %for.body9

for.body9:                                        ; preds = %for.cond7.preheader, %for.body9
  %indvars.iv = phi i64 [ 0, %for.cond7.preheader ], [ %indvars.iv.next, %for.body9 ]
  %call = tail call { double, double } @cmplx(double 0.000000e+00, double 0.000000e+00) #32
  %2 = extractvalue { double, double } %call, 0
  %3 = extractvalue { double, double } %call, 1
  %tmp.sroa.0.0..sroa_idx = getelementptr inbounds %struct.site, %struct.site* %sit.0113, i64 0, i32 8, i64 %indvars.iv118, i32 0, i64 %indvars.iv115, i64 %indvars.iv, i32 0
  store double %2, double* %tmp.sroa.0.0..sroa_idx, align 8, !tbaa.struct !10
  %tmp.sroa.4.0..sroa_idx76 = getelementptr inbounds %struct.site, %struct.site* %sit.0113, i64 0, i32 8, i64 %indvars.iv118, i32 0, i64 %indvars.iv115, i64 %indvars.iv, i32 1
  store double %3, double* %tmp.sroa.4.0..sroa_idx76, align 8, !tbaa.struct !12
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc14, label %for.body9, !llvm.loop !215

for.inc14:                                        ; preds = %for.body9
  %indvars.iv.next116 = add nuw nsw i64 %indvars.iv115, 1
  %exitcond117.not = icmp eq i64 %indvars.iv.next116, 3
  br i1 %exitcond117.not, label %for.end16, label %for.cond7.preheader, !llvm.loop !216

for.end16:                                        ; preds = %for.inc14
  %4 = trunc i64 %indvars.iv118 to i32
  %conv = sitofp i32 %4 to double
  %real = getelementptr inbounds %struct.site, %struct.site* %sit.0113, i64 0, i32 8, i64 %indvars.iv118, i32 0, i64 0, i64 0, i32 0
  store double %conv, double* %real, align 8, !tbaa !4
  %5 = load i16, i16* %x, align 8, !tbaa !122
  %conv23 = sext i16 %5 to i32
  %mul = mul nsw i32 %conv23, 10
  %conv24 = sitofp i32 %mul to double
  %real31 = getelementptr inbounds %struct.site, %struct.site* %sit.0113, i64 0, i32 8, i64 %indvars.iv118, i32 0, i64 1, i64 1, i32 0
  store double %conv24, double* %real31, align 8, !tbaa !4
  %6 = load i16, i16* %y, align 2, !tbaa !123
  %conv32 = sext i16 %6 to i32
  %mul33 = mul nsw i32 %conv32, 100
  %conv34 = sitofp i32 %mul33 to double
  %real41 = getelementptr inbounds %struct.site, %struct.site* %sit.0113, i64 0, i32 8, i64 %indvars.iv118, i32 0, i64 2, i64 2, i32 0
  store double %conv34, double* %real41, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.site, %struct.site* %sit.0113, i64 0, i32 8, i64 %indvars.iv118, i32 0, i64 0, i64 0, i32 1
  store double %conv, double* %imag, align 8, !tbaa !9
  %7 = load i16, i16* %z, align 4, !tbaa !124
  %conv49 = sext i16 %7 to i32
  %mul50 = mul nsw i32 %conv49, 10
  %conv51 = sitofp i32 %mul50 to double
  %imag58 = getelementptr inbounds %struct.site, %struct.site* %sit.0113, i64 0, i32 8, i64 %indvars.iv118, i32 0, i64 1, i64 1, i32 1
  store double %conv51, double* %imag58, align 8, !tbaa !9
  %8 = load i16, i16* %t, align 2, !tbaa !19
  %conv59 = sext i16 %8 to i32
  %mul60 = mul nsw i32 %conv59, 100
  %conv61 = sitofp i32 %mul60 to double
  %imag68 = getelementptr inbounds %struct.site, %struct.site* %sit.0113, i64 0, i32 8, i64 %indvars.iv118, i32 0, i64 2, i64 2, i32 1
  store double %conv61, double* %imag68, align 8, !tbaa !9
  %indvars.iv.next119 = add nuw nsw i64 %indvars.iv118, 1
  %exitcond120.not = icmp eq i64 %indvars.iv.next119, 4
  br i1 %exitcond120.not, label %for.inc72, label %for.cond4.preheader, !llvm.loop !217

for.inc72:                                        ; preds = %for.end16
  %inc73 = add nuw nsw i32 %i.0114, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %sit.0113, i64 1
  %9 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp = icmp slt i32 %inc73, %9
  br i1 %cmp, label %for.cond1.preheader, label %for.end74, !llvm.loop !218

for.end74:                                        ; preds = %for.inc72, %entry
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @get_f(i32 %prompt, i8* %variable_name_string, double* %value) local_unnamed_addr #13 {
entry:
  %checkname = alloca [80 x i8], align 16
  %0 = getelementptr inbounds [80 x i8], [80 x i8]* %checkname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %0) #31
  %tobool.not = icmp eq i32 %prompt, 0
  br i1 %tobool.not, label %if.else8, label %while.body.preheader

while.body.preheader:                             ; preds = %entry
  %call59 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i8* %variable_name_string) #34
  %call160 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.104, i64 0, i64 0), i8* nonnull %0) #34
  %call361 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0), double* %value) #32
  %cmp462 = icmp eq i32 %call361, 1
  br i1 %cmp462, label %cleanup.loopexit, label %if.end

if.end:                                           ; preds = %while.body.preheader, %if.end
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @str.73, i64 0, i64 0))
  %call = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i8* %variable_name_string) #34
  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.104, i64 0, i64 0), i8* nonnull %0) #34
  %call3 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0), double* %value) #32
  %cmp4 = icmp eq i32 %call3, 1
  br i1 %cmp4, label %cleanup.loopexit, label %if.end

if.else8:                                         ; preds = %entry
  %call10 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.104, i64 0, i64 0), i8* nonnull %0) #34
  switch i32 %call10, label %if.else18 [
    i32 -1, label %if.then12
    i32 0, label %if.then16
  ]

if.then12:                                        ; preds = %if.else8
  %call13 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([41 x i8], [41 x i8]* @.str.37, i64 0, i64 0), i8* %variable_name_string) #34
  br label %cleanup

if.then16:                                        ; preds = %if.else8
  %call17 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([36 x i8], [36 x i8]* @.str.38, i64 0, i64 0), i8* %variable_name_string) #34
  br label %cleanup

if.else18:                                        ; preds = %if.else8
  %call20 = call i32 @strcmp(i8* noundef nonnull %0, i8* noundef nonnull dereferenceable(1) %variable_name_string) #36
  %cmp21.not = icmp eq i32 %call20, 0
  br i1 %cmp21.not, label %if.end27, label %if.then22

if.then22:                                        ; preds = %if.else18
  %call24 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i64 0, i64 0), i8* %variable_name_string, i8* nonnull %0) #34
  br label %cleanup

if.end27:                                         ; preds = %if.else18
  %call28 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.105, i64 0, i64 0), i8* %variable_name_string) #34
  %call29 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0), double* %value) #34
  switch i32 %call29, label %if.end38 [
    i32 -1, label %if.then31
    i32 0, label %if.then35
  ]

if.then31:                                        ; preds = %if.end27
  %call32 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([47 x i8], [47 x i8]* @.str.40, i64 0, i64 0), i8* %variable_name_string) #34
  br label %cleanup

if.then35:                                        ; preds = %if.end27
  %call36 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([43 x i8], [43 x i8]* @.str.41, i64 0, i64 0), i8* %variable_name_string) #34
  br label %cleanup

if.end38:                                         ; preds = %if.end27
  %1 = load double, double* %value, align 8, !tbaa !11
  %call39 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), double %1) #34
  br label %cleanup

cleanup.loopexit:                                 ; preds = %if.end, %while.body.preheader
  %2 = load double, double* %value, align 8, !tbaa !11
  %call6 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), i8* %variable_name_string, double %2) #34
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.end38, %if.then35, %if.then31, %if.then22, %if.then16, %if.then12
  %retval.0 = phi i32 [ 1, %if.then12 ], [ 1, %if.then16 ], [ 1, %if.then22 ], [ 1, %if.then31 ], [ 1, %if.then35 ], [ 0, %if.end38 ], [ 0, %cleanup.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %0) #31
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @__isoc99_sscanf(i8* nocapture noundef readonly, i8* nocapture noundef readonly, ...) local_unnamed_addr #8

; Function Attrs: argmemonly mustprogress nofree nounwind optsize readonly willreturn
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #22

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @get_i(i32 %prompt, i8* %variable_name_string, i32* %value) local_unnamed_addr #13 {
entry:
  %checkname = alloca [80 x i8], align 16
  %0 = getelementptr inbounds [80 x i8], [80 x i8]* %checkname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %0) #31
  %tobool.not = icmp eq i32 %prompt, 0
  br i1 %tobool.not, label %if.else8, label %while.body.preheader

while.body.preheader:                             ; preds = %entry
  %call59 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i8* %variable_name_string) #34
  %call160 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.104, i64 0, i64 0), i8* nonnull %0) #34
  %call361 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0), i32* %value) #32
  %cmp462 = icmp eq i32 %call361, 1
  br i1 %cmp462, label %cleanup.loopexit, label %if.end

if.end:                                           ; preds = %while.body.preheader, %if.end
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @str.73, i64 0, i64 0))
  %call = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i8* %variable_name_string) #34
  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.104, i64 0, i64 0), i8* nonnull %0) #34
  %call3 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0), i32* %value) #32
  %cmp4 = icmp eq i32 %call3, 1
  br i1 %cmp4, label %cleanup.loopexit, label %if.end

if.else8:                                         ; preds = %entry
  %call10 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.104, i64 0, i64 0), i8* nonnull %0) #34
  switch i32 %call10, label %if.else18 [
    i32 -1, label %if.then12
    i32 0, label %if.then16
  ]

if.then12:                                        ; preds = %if.else8
  %call13 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([41 x i8], [41 x i8]* @.str.45, i64 0, i64 0), i8* %variable_name_string) #34
  br label %cleanup

if.then16:                                        ; preds = %if.else8
  %call17 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46, i64 0, i64 0), i8* %variable_name_string) #34
  br label %cleanup

if.else18:                                        ; preds = %if.else8
  %call20 = call i32 @strcmp(i8* noundef nonnull %0, i8* noundef nonnull dereferenceable(1) %variable_name_string) #36
  %cmp21.not = icmp eq i32 %call20, 0
  br i1 %cmp21.not, label %if.end27, label %if.then22

if.then22:                                        ; preds = %if.else18
  %call24 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([49 x i8], [49 x i8]* @.str.47, i64 0, i64 0), i8* %variable_name_string, i8* nonnull %0) #34
  br label %cleanup

if.end27:                                         ; preds = %if.else18
  %call28 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.105, i64 0, i64 0), i8* %variable_name_string) #34
  %call29 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0), i32* %value) #34
  switch i32 %call29, label %if.end38 [
    i32 -1, label %if.then31
    i32 0, label %if.then35
  ]

if.then31:                                        ; preds = %if.end27
  %call32 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([47 x i8], [47 x i8]* @.str.48, i64 0, i64 0), i8* %variable_name_string) #34
  br label %cleanup

if.then35:                                        ; preds = %if.end27
  %call36 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([43 x i8], [43 x i8]* @.str.49, i64 0, i64 0), i8* %variable_name_string) #34
  br label %cleanup

if.end38:                                         ; preds = %if.end27
  %1 = load i32, i32* %value, align 4, !tbaa !13
  %call39 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), i32 %1) #34
  br label %cleanup

cleanup.loopexit:                                 ; preds = %if.end, %while.body.preheader
  %2 = load i32, i32* %value, align 4, !tbaa !13
  %call6 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i64 0, i64 0), i8* %variable_name_string, i32 %2) #34
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.end38, %if.then35, %if.then31, %if.then22, %if.then16, %if.then12
  %retval.0 = phi i32 [ 1, %if.then12 ], [ 1, %if.then16 ], [ 1, %if.then22 ], [ 1, %if.then31 ], [ 1, %if.then35 ], [ 0, %if.end38 ], [ 0, %cleanup.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %0) #31
  ret i32 %retval.0
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @get_s(i32 %prompt, i8* %variable_name_string, i8* %value) local_unnamed_addr #13 {
entry:
  %checkname = alloca [80 x i8], align 16
  %0 = getelementptr inbounds [80 x i8], [80 x i8]* %checkname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %0) #31
  %tobool.not = icmp eq i32 %prompt, 0
  br i1 %tobool.not, label %if.else6, label %while.body.preheader

while.body.preheader:                             ; preds = %entry
  %call57 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i8* %variable_name_string) #34
  %call158 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.104, i64 0, i64 0), i8* %value) #34
  %cmp259 = icmp eq i32 %call158, 1
  br i1 %cmp259, label %cleanup.loopexit, label %if.end

if.end:                                           ; preds = %while.body.preheader, %if.end
  %puts56 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([19 x i8], [19 x i8]* @str.73, i64 0, i64 0))
  %call = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i8* %variable_name_string) #34
  %call1 = tail call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.104, i64 0, i64 0), i8* %value) #34
  %cmp2 = icmp eq i32 %call1, 1
  br i1 %cmp2, label %cleanup.loopexit, label %if.end

if.else6:                                         ; preds = %entry
  %call7 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.104, i64 0, i64 0), i8* nonnull %0) #34
  switch i32 %call7, label %if.else15 [
    i32 -1, label %if.then9
    i32 0, label %if.then13
  ]

if.then9:                                         ; preds = %if.else6
  %call10 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([41 x i8], [41 x i8]* @.str.52, i64 0, i64 0), i8* %variable_name_string) #34
  br label %cleanup

if.then13:                                        ; preds = %if.else6
  %call14 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([36 x i8], [36 x i8]* @.str.53, i64 0, i64 0), i8* %variable_name_string) #34
  br label %cleanup

if.else15:                                        ; preds = %if.else6
  %call17 = call i32 @strcmp(i8* noundef nonnull %0, i8* noundef nonnull dereferenceable(1) %variable_name_string) #36
  %cmp18.not = icmp eq i32 %call17, 0
  br i1 %cmp18.not, label %if.end24, label %if.then19

if.then19:                                        ; preds = %if.else15
  %call21 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([49 x i8], [49 x i8]* @.str.54, i64 0, i64 0), i8* %variable_name_string, i8* nonnull %0) #34
  br label %cleanup

if.end24:                                         ; preds = %if.else15
  %call25 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.105, i64 0, i64 0), i8* %variable_name_string) #34
  %call26 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.104, i64 0, i64 0), i8* %value) #34
  switch i32 %call26, label %if.end35 [
    i32 -1, label %if.then28
    i32 0, label %if.then32
  ]

if.then28:                                        ; preds = %if.end24
  %call29 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([47 x i8], [47 x i8]* @.str.55, i64 0, i64 0), i8* %variable_name_string) #34
  br label %cleanup

if.then32:                                        ; preds = %if.end24
  %call33 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([43 x i8], [43 x i8]* @.str.56, i64 0, i64 0), i8* %variable_name_string) #34
  br label %cleanup

if.end35:                                         ; preds = %if.end24
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) %value)
  br label %cleanup

cleanup.loopexit:                                 ; preds = %if.end, %while.body.preheader
  %call4 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i8* %variable_name_string, i8* %value) #34
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.end35, %if.then32, %if.then28, %if.then19, %if.then13, %if.then9
  %retval.0 = phi i32 [ 1, %if.then9 ], [ 1, %if.then13 ], [ 1, %if.then19 ], [ 1, %if.then28 ], [ 1, %if.then32 ], [ 0, %if.end35 ], [ 0, %cleanup.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %0) #31
  ret i32 %retval.0
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @get_prompt(i32* %prompt) local_unnamed_addr #13 {
entry:
  %initial_prompt = alloca [80 x i8], align 16
  %0 = getelementptr inbounds [80 x i8], [80 x i8]* %initial_prompt, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %0) #31
  store i32 -1, i32* %prompt, align 4, !tbaa !13
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([40 x i8], [40 x i8]* @str.74, i64 0, i64 0))
  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.104, i64 0, i64 0), i8* nonnull %0) #34
  %bcmp = call i32 @bcmp(i8* noundef nonnull dereferenceable(7) %0, i8* noundef nonnull dereferenceable(7) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i64 0, i64 0), i64 7)
  %cmp = icmp eq i32 %bcmp, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call4 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0), i32* nonnull %prompt) #34
  br label %if.end15

if.else:                                          ; preds = %entry
  %1 = bitcast [80 x i8]* %initial_prompt to i16*
  %lhsv = load i16, i16* %1, align 16
  switch i16 %lhsv, label %if.end15 [
    i16 48, label %if.then8
    i16 49, label %if.then13
  ]

if.then8:                                         ; preds = %if.else
  store i32 0, i32* %prompt, align 4, !tbaa !13
  br label %cleanup

if.then13:                                        ; preds = %if.else
  store i32 1, i32* %prompt, align 4, !tbaa !13
  br label %cleanup

if.end15:                                         ; preds = %if.else, %if.then
  %.pr = load i32, i32* %prompt, align 4, !tbaa !13
  %switch = icmp ult i32 %.pr, 2
  br i1 %switch, label %cleanup, label %if.else19

if.else19:                                        ; preds = %if.end15
  %puts30 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([43 x i8], [43 x i8]* @str.75, i64 0, i64 0))
  br label %cleanup

cleanup:                                          ; preds = %if.then13, %if.then8, %if.end15, %if.else19
  %retval.0 = phi i32 [ 1, %if.else19 ], [ 0, %if.end15 ], [ 0, %if.then8 ], [ 0, %if.then13 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %0) #31
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define double @gaussian_rand_no(%struct.double_prn* %prn_pt) local_unnamed_addr #1 {
entry:
  %.b = load i1, i1* @gaussian_rand_no.iset, align 4
  br i1 %.b, label %if.else, label %do.body

do.body:                                          ; preds = %entry, %do.body
  %call = tail call double @myrand(%struct.double_prn* %prn_pt) #32
  %0 = tail call double @llvm.fmuladd.f64(double %call, double 2.000000e+00, double -1.000000e+00)
  %call1 = tail call double @myrand(%struct.double_prn* %prn_pt) #32
  %1 = tail call double @llvm.fmuladd.f64(double %call1, double 2.000000e+00, double -1.000000e+00)
  %mul2 = fmul double %1, %1
  %2 = tail call double @llvm.fmuladd.f64(double %0, double %0, double %mul2)
  %cmp3 = fcmp ult double %2, 1.000000e+00
  br i1 %cmp3, label %do.end, label %do.body, !llvm.loop !219

do.end:                                           ; preds = %do.body
  %call4 = tail call double @log(double %2) #32
  %fneg = fneg double %call4
  %div = fdiv double %fneg, %2
  %call5 = tail call double @sqrt(double %div) #32
  %mul = fmul double %0, %call5
  store double %mul, double* @gaussian_rand_no.gset, align 8, !tbaa !11
  store i1 true, i1* @gaussian_rand_no.iset, align 4
  %mul6 = fmul double %1, %call5
  br label %cleanup

if.else:                                          ; preds = %entry
  store i1 false, i1* @gaussian_rand_no.iset, align 4
  %3 = load double, double* @gaussian_rand_no.gset, align 8, !tbaa !11
  br label %cleanup

cleanup:                                          ; preds = %if.else, %do.end
  %retval.0 = phi double [ %mul6, %do.end ], [ %3, %if.else ]
  ret double %retval.0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @sub_su3_vector(%struct.su3_vector* nocapture readonly %a, %struct.su3_vector* nocapture readonly %b, %struct.su3_vector* nocapture %c) local_unnamed_addr #10 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %real = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %real5 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 %indvars.iv, i32 0
  %1 = load double, double* %real5, align 8, !tbaa !4
  %sub = fsub double %0, %1
  %real9 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 0
  store double %sub, double* %real9, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 1
  %2 = load double, double* %imag, align 8, !tbaa !9
  %imag16 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 %indvars.iv, i32 1
  %3 = load double, double* %imag16, align 8, !tbaa !9
  %sub17 = fsub double %2, %3
  %imag21 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 1
  store double %sub17, double* %imag21, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !220

for.end:                                          ; preds = %for.body
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @update_h(double %eps) local_unnamed_addr #1 {
entry:
  tail call void @rephase(i32 0) #32
  tail call void @imp_gauge_force(double %eps, i32 1840) #32
  tail call void @rephase(i32 1) #32
  tail call void @dslash_fn(i32 2336, i32 2336, i32 1) #32
  %0 = load i32, i32* @nflavors, align 4, !tbaa !13
  tail call void @eo_fermion_force(double %eps, i32 %0, i32 2336) #32
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @grsource_imp(i32 %dest, double %mass, i32 %parity) local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp44 = icmp sgt i32 %0, 0
  br i1 %cmp44, label %for.cond1.preheader.preheader, label %for.end12

for.cond1.preheader.preheader:                    ; preds = %entry
  %1 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.preheader, %for.inc10
  %s.046 = phi %struct.site* [ %incdec.ptr, %for.inc10 ], [ %1, %for.cond1.preheader.preheader ]
  %i.045 = phi i32 [ %inc11, %for.inc10 ], [ 0, %for.cond1.preheader.preheader ]
  %site_prn = getelementptr inbounds %struct.site, %struct.site* %s.046, i64 0, i32 6
  br label %for.body3

for.body3:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  %call = tail call double @gaussian_rand_no(%struct.double_prn* nonnull %site_prn) #32
  %real = getelementptr inbounds %struct.site, %struct.site* %s.046, i64 0, i32 18, i32 0, i64 %indvars.iv, i32 0
  store double %call, double* %real, align 8, !tbaa !4
  %call5 = tail call double @gaussian_rand_no(%struct.double_prn* nonnull %site_prn) #32
  %imag = getelementptr inbounds %struct.site, %struct.site* %s.046, i64 0, i32 18, i32 0, i64 %indvars.iv, i32 1
  store double %call5, double* %imag, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc10, label %for.body3, !llvm.loop !221

for.inc10:                                        ; preds = %for.body3
  %inc11 = add nuw nsw i32 %i.045, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.046, i64 1
  %2 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp = icmp slt i32 %inc11, %2
  br i1 %cmp, label %for.cond1.preheader, label %for.end12, !llvm.loop !222

for.end12:                                        ; preds = %for.inc10, %entry
  %3 = load i32, i32* @valid_longlinks, align 4, !tbaa !13
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %for.end12
  tail call void (...) bitcast (void ()* @load_longlinks to void (...)*)() #32
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end12
  %4 = load i32, i32* @valid_fatlinks, align 4, !tbaa !13
  %tobool13.not = icmp eq i32 %4, 0
  br i1 %tobool13.not, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end
  tail call void (...) bitcast (void ()* @load_fatlinks to void (...)*)() #32
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %if.end
  tail call void @dslash_fn(i32 2432, i32 %dest, i32 %parity) #32
  tail call void @scalar_mult_latvec(i32 %dest, double -1.000000e+00, i32 %dest, i32 %parity) #32
  %mul = fmul double %mass, 2.000000e+00
  tail call void @scalar_mult_add_latvec(i32 %dest, i32 2432, double %mul, i32 %dest, i32 %parity) #32
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @checkmul_imp(i32 %src, double %mass) local_unnamed_addr #1 {
entry:
  tail call void @dslash_fn(i32 %src, i32 2384, i32 3) #32
  %mul = fmul double %mass, 2.000000e+00
  tail call void @scalar_mult_add_latvec(i32 2384, i32 %src, double %mul, i32 2384, i32 3) #32
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp98 = icmp sgt i32 %0, 0
  br i1 %cmp98, label %for.body.preheader, label %for.end66

for.body.preheader:                               ; preds = %entry
  %1 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.end
  %s.0100 = phi %struct.site* [ %incdec.ptr, %for.end ], [ %1, %for.body.preheader ]
  %i.099 = phi i32 [ %inc65, %for.end ], [ 0, %for.body.preheader ]
  %x = getelementptr inbounds %struct.site, %struct.site* %s.0100, i64 0, i32 0
  %2 = load i16, i16* %x, align 8, !tbaa !122
  %conv17 = sext i16 %2 to i32
  %y = getelementptr inbounds %struct.site, %struct.site* %s.0100, i64 0, i32 1
  %3 = load i16, i16* %y, align 2, !tbaa !123
  %conv18 = sext i16 %3 to i32
  %z = getelementptr inbounds %struct.site, %struct.site* %s.0100, i64 0, i32 2
  %4 = load i16, i16* %z, align 4, !tbaa !124
  %conv19 = sext i16 %4 to i32
  %t = getelementptr inbounds %struct.site, %struct.site* %s.0100, i64 0, i32 3
  %5 = load i16, i16* %t, align 2, !tbaa !19
  %conv20 = sext i16 %5 to i32
  %call = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([18 x i8], [18 x i8]* @.str.126, i64 0, i64 0), i32 %conv17, i32 %conv18, i32 %conv19, i32 %conv20) #34
  br label %for.body24

for.body24:                                       ; preds = %for.body, %for.body24
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %for.body24 ]
  %real = getelementptr inbounds %struct.site, %struct.site* %s.0100, i64 0, i32 18, i32 0, i64 %indvars.iv, i32 0
  %6 = load double, double* %real, align 8, !tbaa !4
  %real30 = getelementptr inbounds %struct.site, %struct.site* %s.0100, i64 0, i32 17, i32 0, i64 %indvars.iv, i32 0
  %7 = load double, double* %real30, align 8, !tbaa !4
  %sub = fsub double %6, %7
  %8 = trunc i64 %indvars.iv to i32
  %call41 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.127, i64 0, i64 0), i32 %i.099, i32 %8, double %6, double %7, double %sub) #34
  %imag = getelementptr inbounds %struct.site, %struct.site* %s.0100, i64 0, i32 18, i32 0, i64 %indvars.iv, i32 1
  %9 = load double, double* %imag, align 8, !tbaa !9
  %imag50 = getelementptr inbounds %struct.site, %struct.site* %s.0100, i64 0, i32 17, i32 0, i64 %indvars.iv, i32 1
  %10 = load double, double* %imag50, align 8, !tbaa !9
  %sub61 = fsub double %9, %10
  %call62 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.127, i64 0, i64 0), i32 %i.099, i32 %8, double %9, double %10, double %sub61) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end, label %for.body24, !llvm.loop !223

for.end:                                          ; preds = %for.body24
  %putchar = tail call i32 @putchar(i32 10)
  %inc65 = add nuw nsw i32 %i.099, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0100, i64 1
  %11 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp = icmp slt i32 %inc65, %11
  br i1 %cmp, label %for.body, label %for.end66, !llvm.loop !224

for.end66:                                        ; preds = %for.end, %entry
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @add_su3_matrix(%struct.su3_matrix* nocapture readonly %a, %struct.su3_matrix* nocapture readonly %b, %struct.su3_matrix* nocapture %c) local_unnamed_addr #10 {
entry:
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %entry, %for.inc36
  %indvars.iv60 = phi i64 [ 0, %entry ], [ %indvars.iv.next61, %for.inc36 ]
  br label %for.body3

for.body3:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %real11 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 0
  %1 = load double, double* %real11, align 8, !tbaa !4
  %add = fadd double %0, %1
  %real17 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 0
  store double %add, double* %real17, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 1
  %2 = load double, double* %imag, align 8, !tbaa !9
  %imag28 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 1
  %3 = load double, double* %imag28, align 8, !tbaa !9
  %add29 = fadd double %2, %3
  %imag35 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 1
  store double %add29, double* %imag35, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc36, label %for.body3, !llvm.loop !225

for.inc36:                                        ; preds = %for.body3
  %indvars.iv.next61 = add nuw nsw i64 %indvars.iv60, 1
  %exitcond62.not = icmp eq i64 %indvars.iv.next61, 3
  br i1 %exitcond62.not, label %for.end38, label %for.cond1.preheader, !llvm.loop !226

for.end38:                                        ; preds = %for.inc36
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @add_su3_vector(%struct.su3_vector* nocapture readonly %a, %struct.su3_vector* nocapture readonly %b, %struct.su3_vector* nocapture %c) local_unnamed_addr #10 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %real = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %real5 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 %indvars.iv, i32 0
  %1 = load double, double* %real5, align 8, !tbaa !4
  %add = fadd double %0, %1
  %real9 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 0
  store double %add, double* %real9, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 1
  %2 = load double, double* %imag, align 8, !tbaa !9
  %imag16 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 %indvars.iv, i32 1
  %3 = load double, double* %imag16, align 8, !tbaa !9
  %add17 = fadd double %2, %3
  %imag21 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 1
  store double %add17, double* %imag21, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !227

for.end:                                          ; preds = %for.body
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @right_su2_hit_a(%struct.su2_matrix* %u, i32 %p, i32 %q, %struct.su3_matrix* %link) local_unnamed_addr #1 {
entry:
  %idxprom1 = sext i32 %p to i64
  %idxprom6 = sext i32 %q to i64
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %arrayidx2 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %link, i64 0, i32 0, i64 %indvars.iv, i64 %idxprom1
  %arrayidx7 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %link, i64 0, i32 0, i64 %indvars.iv, i64 %idxprom6
  tail call void @mult_su2_mat_vec_elem_a(%struct.su2_matrix* %u, %struct.complex* %arrayidx2, %struct.complex* %arrayidx7) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !228

for.end:                                          ; preds = %for.body
  ret void
}

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @scalar_mult_add_su3_matrix(%struct.su3_matrix* nocapture readonly %a, %struct.su3_matrix* nocapture readonly %b, double %s, %struct.su3_matrix* nocapture %c) local_unnamed_addr #4 {
entry:
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %entry, %for.inc35
  %indvars.iv60 = phi i64 [ 0, %entry ], [ %indvars.iv.next61, %for.inc35 ]
  br label %for.body3

for.body3:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %real11 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 0
  %1 = load double, double* %real11, align 8, !tbaa !4
  %2 = tail call double @llvm.fmuladd.f64(double %s, double %1, double %0)
  %real17 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 0
  store double %2, double* %real17, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 1
  %3 = load double, double* %imag, align 8, !tbaa !9
  %imag28 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 1
  %4 = load double, double* %imag28, align 8, !tbaa !9
  %5 = tail call double @llvm.fmuladd.f64(double %s, double %4, double %3)
  %imag34 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv60, i64 %indvars.iv, i32 1
  store double %5, double* %imag34, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc35, label %for.body3, !llvm.loop !229

for.inc35:                                        ; preds = %for.body3
  %indvars.iv.next61 = add nuw nsw i64 %indvars.iv60, 1
  %exitcond62.not = icmp eq i64 %indvars.iv.next61, 3
  br i1 %exitcond62.not, label %for.end37, label %for.cond1.preheader, !llvm.loop !230

for.end37:                                        ; preds = %for.inc35
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define { double, double } @trace_su3(%struct.su3_matrix* nocapture readonly %a) local_unnamed_addr #0 {
entry:
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 0, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %real5 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 1, i32 0
  %1 = load double, double* %real5, align 8, !tbaa !4
  %add = fadd double %0, %1
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 0, i32 1
  %2 = load double, double* %imag, align 8, !tbaa !9
  %imag13 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 1, i32 1
  %3 = load double, double* %imag13, align 8, !tbaa !9
  %add14 = fadd double %2, %3
  %real20 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 2, i32 0
  %4 = load double, double* %real20, align 8, !tbaa !4
  %add21 = fadd double %add, %4
  %imag27 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 2, i32 1
  %5 = load double, double* %imag27, align 8, !tbaa !9
  %add28 = fadd double %add14, %5
  %.fca.0.insert = insertvalue { double, double } undef, double %add21, 0
  %.fca.1.insert = insertvalue { double, double } %.fca.0.insert, double %add28, 1
  ret { double, double } %.fca.1.insert
}

; Function Attrs: noinline nounwind optsize uwtable
define void @setup_layout() local_unnamed_addr #1 {
entry:
  %call = tail call i32 (...) bitcast (i32 ()* @mynode to i32 (...)*)() #32
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([32 x i8], [32 x i8]* @.str.140, i64 0, i64 0)) #34
  %call2 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.141, i64 0, i64 0)) #34
  %putchar = tail call i32 @putchar(i32 10)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %0 = load i32, i32* @nx, align 4, !tbaa !13
  store i32 %0, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 0), align 16, !tbaa !13
  %1 = load i32, i32* @ny, align 4, !tbaa !13
  store i32 %1, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 1), align 4, !tbaa !13
  %2 = load i32, i32* @nz, align 4, !tbaa !13
  store i32 %2, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 2), align 8, !tbaa !13
  %3 = load i32, i32* @nt, align 4, !tbaa !13
  store i32 %3, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 3), align 4, !tbaa !13
  store i32 1, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @nsquares, i64 0, i64 3), align 4, !tbaa !13
  store i32 1, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @nsquares, i64 0, i64 2), align 8, !tbaa !13
  store i32 1, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @nsquares, i64 0, i64 1), align 4, !tbaa !13
  store i32 1, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @nsquares, i64 0, i64 0), align 16, !tbaa !13
  %call4104 = tail call i32 (...) bitcast (i32 ()* @numnodes to i32 (...)*)() #32
  %cmp5105 = icmp sgt i32 %call4104, 1
  br i1 %cmp5105, label %for.cond.preheader, label %while.end

for.cond.preheader:                               ; preds = %if.end, %if.end51
  %i.0106 = phi i32 [ %mul, %if.end51 ], [ 1, %if.end ]
  br label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.body ]
  %j.099 = phi i32 [ 1, %for.cond.preheader ], [ %j.1, %for.body ]
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* @squaresize, i64 0, i64 %indvars.iv
  %4 = load i32, i32* %arrayidx, align 4, !tbaa !13
  %cmp7 = icmp sgt i32 %4, %j.099
  %5 = and i32 %4, 1
  %cmp10 = icmp eq i32 %5, 0
  %or.cond = and i1 %cmp7, %cmp10
  %j.1 = select i1 %or.cond, i32 %4, i32 %j.099
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.body17, label %for.body, !llvm.loop !231

for.body17:                                       ; preds = %for.body, %for.inc27
  %indvars.iv110 = phi i64 [ %indvars.iv.next111, %for.inc27 ], [ 0, %for.body ]
  %arrayidx19 = getelementptr inbounds [4 x i32], [4 x i32]* @squaresize, i64 0, i64 %indvars.iv110
  %6 = load i32, i32* %arrayidx19, align 4, !tbaa !13
  %cmp20 = icmp eq i32 %6, %j.1
  br i1 %cmp20, label %land.lhs.true21, label %for.inc27

land.lhs.true21:                                  ; preds = %for.body17
  %arrayidx23 = getelementptr inbounds [4 x i32], [4 x i32]* @nsquares, i64 0, i64 %indvars.iv110
  %7 = load i32, i32* %arrayidx23, align 4, !tbaa !13
  %cmp24 = icmp sgt i32 %7, 1
  br i1 %cmp24, label %if.end51, label %for.inc27

for.inc27:                                        ; preds = %for.body17, %land.lhs.true21
  %indvars.iv.next111 = add nuw nsw i64 %indvars.iv110, 1
  %exitcond112.not = icmp eq i64 %indvars.iv.next111, 4
  br i1 %exitcond112.not, label %for.body34, label %for.body17, !llvm.loop !232

for.body34:                                       ; preds = %for.inc27, %for.inc40
  %indvars.iv113 = phi i64 [ %indvars.iv.next114, %for.inc40 ], [ 0, %for.inc27 ]
  %arrayidx36 = getelementptr inbounds [4 x i32], [4 x i32]* @squaresize, i64 0, i64 %indvars.iv113
  %8 = load i32, i32* %arrayidx36, align 4, !tbaa !13
  %cmp37 = icmp eq i32 %8, %j.1
  br i1 %cmp37, label %if.end51, label %for.inc40

for.inc40:                                        ; preds = %for.body34
  %indvars.iv.next114 = add nuw nsw i64 %indvars.iv113, 1
  %exitcond115.not = icmp eq i64 %indvars.iv.next114, 4
  br i1 %exitcond115.not, label %if.then45, label %for.body34, !llvm.loop !233

if.then45:                                        ; preds = %for.inc40
  %call46 = tail call i32 (...) bitcast (i32 ()* @mynode to i32 (...)*)() #32
  %cmp47 = icmp eq i32 %call46, 0
  br i1 %cmp47, label %if.then48, label %if.end50

if.then48:                                        ; preds = %if.then45
  %puts91 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([60 x i8], [60 x i8]* @str.5, i64 0, i64 0))
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %if.then45
  tail call void @terminate(i32 1) #32
  br label %if.end51

if.end51:                                         ; preds = %land.lhs.true21, %for.body34, %if.end50
  %dir.395 = phi i64 [ 4, %if.end50 ], [ %indvars.iv113, %for.body34 ], [ %indvars.iv110, %land.lhs.true21 ]
  %mul = shl nsw i32 %i.0106, 1
  %idxprom52 = and i64 %dir.395, 4294967295
  %arrayidx53 = getelementptr inbounds [4 x i32], [4 x i32]* @squaresize, i64 0, i64 %idxprom52
  %9 = load i32, i32* %arrayidx53, align 4, !tbaa !13
  %div = sdiv i32 %9, 2
  store i32 %div, i32* %arrayidx53, align 4, !tbaa !13
  %arrayidx55 = getelementptr inbounds [4 x i32], [4 x i32]* @nsquares, i64 0, i64 %idxprom52
  %10 = load i32, i32* %arrayidx55, align 4, !tbaa !13
  %mul56 = shl nsw i32 %10, 1
  store i32 %mul56, i32* %arrayidx55, align 4, !tbaa !13
  %call4 = tail call i32 (...) bitcast (i32 ()* @numnodes to i32 (...)*)() #32
  %cmp5 = icmp slt i32 %mul, %call4
  br i1 %cmp5, label %for.cond.preheader, label %while.end, !llvm.loop !234

while.end:                                        ; preds = %if.end51, %if.end
  %11 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 0), align 16, !tbaa !13
  %12 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 1), align 4, !tbaa !13
  %mul57 = mul nsw i32 %12, %11
  %13 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 2), align 8, !tbaa !13
  %mul58 = mul nsw i32 %mul57, %13
  %14 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 3), align 4, !tbaa !13
  %mul59 = mul nsw i32 %mul58, %14
  store i32 %mul59, i32* @sites_on_node, align 4, !tbaa !13
  %call60 = tail call i32 (...) bitcast (i32 ()* @mynode to i32 (...)*)() #32
  %cmp61 = icmp eq i32 %call60, 0
  br i1 %cmp61, label %if.then62, label %if.end68

if.then62:                                        ; preds = %while.end
  %15 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %16 = and i32 %15, 1
  %cmp64.not = icmp eq i32 %16, 0
  br i1 %cmp64.not, label %if.end68, label %if.then65

if.then65:                                        ; preds = %if.then62
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([34 x i8], [34 x i8]* @str.142, i64 0, i64 0))
  tail call void @terminate(i32 0) #32
  br label %if.end68

if.end68:                                         ; preds = %if.then62, %if.then65, %while.end
  %17 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %div69 = sdiv i32 %17, 2
  store i32 %div69, i32* @odd_sites_on_node, align 4, !tbaa !13
  store i32 %div69, i32* @even_sites_on_node, align 4, !tbaa !13
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define i32 @node_number(i32 %x, i32 %y, i32 %z, i32 %t) local_unnamed_addr #0 {
entry:
  %0 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 0), align 16, !tbaa !13
  %div = sdiv i32 %x, %0
  %1 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 1), align 4, !tbaa !13
  %div1 = sdiv i32 %y, %1
  %2 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 2), align 8, !tbaa !13
  %div2 = sdiv i32 %z, %2
  %3 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 3), align 4, !tbaa !13
  %div3 = sdiv i32 %t, %3
  %4 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @nsquares, i64 0, i64 0), align 16, !tbaa !13
  %5 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @nsquares, i64 0, i64 1), align 4, !tbaa !13
  %6 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @nsquares, i64 0, i64 2), align 8, !tbaa !13
  %mul = mul nsw i32 %6, %div3
  %add = add nsw i32 %mul, %div2
  %mul4 = mul nsw i32 %add, %5
  %add5 = add nsw i32 %mul4, %div1
  %mul6 = mul nsw i32 %add5, %4
  %add7 = add nsw i32 %mul6, %div
  ret i32 %add7
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define i32 @node_index(i32 %x, i32 %y, i32 %z, i32 %t) local_unnamed_addr #0 {
entry:
  %0 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 0), align 16, !tbaa !13
  %rem = srem i32 %x, %0
  %1 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 1), align 4, !tbaa !13
  %rem1 = srem i32 %y, %1
  %2 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 2), align 8, !tbaa !13
  %rem2 = srem i32 %z, %2
  %3 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @squaresize, i64 0, i64 3), align 4, !tbaa !13
  %rem3 = srem i32 %t, %3
  %mul = mul nsw i32 %rem3, %2
  %add = add nsw i32 %mul, %rem2
  %mul4 = mul nsw i32 %add, %1
  %add5 = add nsw i32 %mul4, %rem1
  %mul6 = mul nsw i32 %add5, %0
  %add8 = add nsw i32 %y, %x
  %add9 = add nsw i32 %add8, %z
  %add10 = add nsw i32 %add9, %t
  %4 = and i32 %add10, 1
  %cmp = icmp eq i32 %4, 0
  %5 = load i32, i32* @sites_on_node, align 4
  %add12 = select i1 %cmp, i32 0, i32 %5
  %add7 = add i32 %add12, %rem
  %retval.0.in = add i32 %add7, %mul6
  %retval.0 = sdiv i32 %retval.0.in, 2
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define i32 @num_sites(i32 %node) local_unnamed_addr #0 {
entry:
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  ret i32 %0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* nocapture readonly %a, %struct.su3_vector* nocapture readonly %b0, %struct.su3_vector* nocapture readonly %b1, %struct.su3_vector* nocapture readonly %b2, %struct.su3_vector* nocapture readonly %b3, %struct.su3_vector* nocapture %c) local_unnamed_addr #10 {
entry:
  %c182 = bitcast %struct.su3_vector* %c to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %c182, i8 0, i64 48, i1 false)
  br label %for.body7

for.body7:                                        ; preds = %entry, %for.inc93
  %indvars.iv179 = phi i64 [ 0, %entry ], [ %indvars.iv.next180, %for.inc93 ]
  %b.0176 = phi %struct.su3_vector* [ undef, %entry ], [ %b.1, %for.inc93 ]
  %0 = trunc i64 %indvars.iv179 to i32
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb8
    i32 2, label %sw.bb9
    i32 3, label %sw.bb10
  ]

sw.bb:                                            ; preds = %for.body7
  br label %sw.epilog

sw.bb8:                                           ; preds = %for.body7
  br label %sw.epilog

sw.bb9:                                           ; preds = %for.body7
  br label %sw.epilog

sw.bb10:                                          ; preds = %for.body7
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.body7, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb
  %b.1 = phi %struct.su3_vector* [ %b.0176, %for.body7 ], [ %b3, %sw.bb10 ], [ %b2, %sw.bb9 ], [ %b1, %sw.bb8 ], [ %b0, %sw.bb ]
  %real25 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b.1, i64 0, i32 0, i64 0, i32 0
  %imag28 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b.1, i64 0, i32 0, i64 0, i32 1
  %real44 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b.1, i64 0, i32 0, i64 1, i32 0
  %imag47 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b.1, i64 0, i32 0, i64 1, i32 1
  %real68 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b.1, i64 0, i32 0, i64 2, i32 0
  %imag71 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b.1, i64 0, i32 0, i64 2, i32 1
  br label %for.body13

for.body13:                                       ; preds = %sw.epilog, %for.body13
  %indvars.iv = phi i64 [ 0, %sw.epilog ], [ %indvars.iv.next, %for.body13 ]
  %real17 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 %indvars.iv179, i32 0, i64 %indvars.iv, i64 0, i32 0
  %1 = load double, double* %real17, align 8, !tbaa !4
  %imag22 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 %indvars.iv179, i32 0, i64 %indvars.iv, i64 0, i32 1
  %2 = load double, double* %imag22, align 8, !tbaa !9
  %3 = load double, double* %real25, align 8, !tbaa !4
  %4 = load double, double* %imag28, align 8, !tbaa !9
  %mul = fmul double %1, %3
  %mul29 = fmul double %2, %4
  %sub = fsub double %mul, %mul29
  %mul30 = fmul double %1, %4
  %mul31 = fmul double %2, %3
  %add = fadd double %mul31, %mul30
  %real36 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 %indvars.iv179, i32 0, i64 %indvars.iv, i64 1, i32 0
  %5 = load double, double* %real36, align 8, !tbaa !4
  %imag41 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 %indvars.iv179, i32 0, i64 %indvars.iv, i64 1, i32 1
  %6 = load double, double* %imag41, align 8, !tbaa !9
  %7 = load double, double* %real44, align 8, !tbaa !4
  %8 = load double, double* %imag47, align 8, !tbaa !9
  %mul48 = fmul double %5, %7
  %add49 = fadd double %sub, %mul48
  %mul50 = fmul double %6, %8
  %sub51 = fsub double %add49, %mul50
  %mul52 = fmul double %5, %8
  %add53 = fadd double %add, %mul52
  %mul54 = fmul double %6, %7
  %add55 = fadd double %mul54, %add53
  %real60 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 %indvars.iv179, i32 0, i64 %indvars.iv, i64 2, i32 0
  %9 = load double, double* %real60, align 8, !tbaa !4
  %imag65 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 %indvars.iv179, i32 0, i64 %indvars.iv, i64 2, i32 1
  %10 = load double, double* %imag65, align 8, !tbaa !9
  %11 = load double, double* %real68, align 8, !tbaa !4
  %12 = load double, double* %imag71, align 8, !tbaa !9
  %mul72 = fmul double %9, %11
  %add73 = fadd double %sub51, %mul72
  %mul74 = fmul double %10, %12
  %sub75 = fsub double %add73, %mul74
  %mul76 = fmul double %9, %12
  %add77 = fadd double %add55, %mul76
  %mul78 = fmul double %10, %11
  %add79 = fadd double %mul78, %add77
  %real83 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 0
  %13 = load double, double* %real83, align 8, !tbaa !4
  %add84 = fadd double %13, %sub75
  store double %add84, double* %real83, align 8, !tbaa !4
  %imag88 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 1
  %14 = load double, double* %imag88, align 8, !tbaa !9
  %add89 = fadd double %14, %add79
  store double %add89, double* %imag88, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc93, label %for.body13, !llvm.loop !235

for.inc93:                                        ; preds = %for.body13
  %indvars.iv.next180 = add nuw nsw i64 %indvars.iv179, 1
  %exitcond181.not = icmp eq i64 %indvars.iv.next180, 4
  br i1 %exitcond181.not, label %for.end95, label %for.body7, !llvm.loop !236

for.end95:                                        ; preds = %for.inc93
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @d_plaquette(double* nocapture %ss_plaq, double* nocapture %st_plaq) local_unnamed_addr #1 {
entry:
  %mtmp = alloca %struct.su3_matrix, align 8
  %ss_sum = alloca double, align 8
  %st_sum = alloca double, align 8
  %0 = bitcast %struct.su3_matrix* %mtmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %0) #31
  %1 = bitcast double* %ss_sum to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #31
  %2 = bitcast double* %st_sum to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #31
  store double 0.000000e+00, double* %st_sum, align 8, !tbaa !11
  store double 0.000000e+00, double* %ss_sum, align 8, !tbaa !11
  %3 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv = sext i32 %3 to i64
  %call = tail call noalias align 16 i8* @calloc(i64 %conv, i64 144) #32
  %4 = bitcast i8* %call to %struct.su3_matrix*
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %for.cond6.preheader.preheader

if.then:                                          ; preds = %entry
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([31 x i8], [31 x i8]* @str.149, i64 0, i64 0))
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call3 = tail call i32 @fflush(%struct._IO_FILE* %5) #34
  tail call void @terminate(i32 1) #32
  br label %for.cond6.preheader.preheader

for.cond6.preheader.preheader:                    ; preds = %if.then, %entry
  br label %for.cond6.preheader

for.cond6.preheader:                              ; preds = %for.cond6.preheader.preheader, %for.inc62
  %6 = phi double [ %37, %for.inc62 ], [ 0.000000e+00, %for.cond6.preheader.preheader ]
  %7 = phi double [ %38, %for.inc62 ], [ 0.000000e+00, %for.cond6.preheader.preheader ]
  %indvars.iv123 = phi i64 [ %indvars.iv.next124, %for.inc62 ], [ 1, %for.cond6.preheader.preheader ]
  %cmp44 = icmp eq i64 %indvars.iv123, 3
  %8 = trunc i64 %indvars.iv123 to i32
  %9 = trunc i64 %indvars.iv123 to i32
  %10 = mul i32 %9, 144
  %11 = add i32 %10, 112
  br label %for.body9

for.body9:                                        ; preds = %for.cond6.preheader, %for.end58
  %12 = phi double [ %6, %for.cond6.preheader ], [ %37, %for.end58 ]
  %13 = phi double [ %7, %for.cond6.preheader ], [ %38, %for.end58 ]
  %indvars.iv119 = phi i64 [ 0, %for.cond6.preheader ], [ %indvars.iv.next120, %for.end58 ]
  %14 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %15 = trunc i64 %indvars.iv119 to i32
  %16 = mul i32 %15, 144
  %17 = add i32 %16, 112
  %call13 = call %struct.msg_tag* @start_gather(i32 %17, i32 144, i32 %8, i32 3, i8** %14) #32
  %18 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 1), align 8, !tbaa !15
  %19 = trunc i64 %indvars.iv119 to i32
  %call23 = call %struct.msg_tag* @start_gather(i32 %11, i32 144, i32 %19, i32 3, i8** %18) #32
  %20 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp25110 = icmp sgt i32 %20, 0
  br i1 %cmp25110, label %for.body27.preheader, label %for.end

for.body27.preheader:                             ; preds = %for.body9
  %21 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body27

for.body27:                                       ; preds = %for.body27.preheader, %for.body27
  %indvars.iv = phi i64 [ 0, %for.body27.preheader ], [ %indvars.iv.next, %for.body27 ]
  %s.0111 = phi %struct.site* [ %21, %for.body27.preheader ], [ %incdec.ptr, %for.body27 ]
  %arrayidx30 = getelementptr inbounds %struct.site, %struct.site* %s.0111, i64 0, i32 8, i64 %indvars.iv123
  %arrayidx33 = getelementptr inbounds %struct.site, %struct.site* %s.0111, i64 0, i32 8, i64 %indvars.iv119
  %arrayidx35 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %4, i64 %indvars.iv
  call void @mult_su3_an(%struct.su3_matrix* nonnull %arrayidx33, %struct.su3_matrix* nonnull %arrayidx30, %struct.su3_matrix* %arrayidx35) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0111, i64 1
  %22 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %23 = sext i32 %22 to i64
  %cmp25 = icmp slt i64 %indvars.iv.next, %23
  br i1 %cmp25, label %for.body27, label %for.end, !llvm.loop !237

for.end:                                          ; preds = %for.body27, %for.body9
  call void @wait_gather(%struct.msg_tag* %call13) #32
  call void @wait_gather(%struct.msg_tag* %call23) #32
  %24 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp37113 = icmp sgt i32 %24, 0
  br i1 %cmp37113, label %for.body39, label %for.end58

for.body39:                                       ; preds = %for.end, %for.inc55
  %25 = phi double [ %33, %for.inc55 ], [ %12, %for.end ]
  %26 = phi double [ %34, %for.inc55 ], [ %13, %for.end ]
  %indvars.iv117 = phi i64 [ %indvars.iv.next118, %for.inc55 ], [ 0, %for.end ]
  %arrayidx41 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %4, i64 %indvars.iv117
  %27 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx43 = getelementptr inbounds i8*, i8** %27, i64 %indvars.iv117
  %28 = bitcast i8** %arrayidx43 to %struct.su3_matrix**
  %29 = load %struct.su3_matrix*, %struct.su3_matrix** %28, align 8, !tbaa !15
  call void @mult_su3_nn(%struct.su3_matrix* %arrayidx41, %struct.su3_matrix* %29, %struct.su3_matrix* nonnull %mtmp) #32
  %30 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 1), align 8, !tbaa !15
  %arrayidx48 = getelementptr inbounds i8*, i8** %30, i64 %indvars.iv117
  %31 = bitcast i8** %arrayidx48 to %struct.su3_matrix**
  %32 = load %struct.su3_matrix*, %struct.su3_matrix** %31, align 8, !tbaa !15
  %call49 = call double @realtrace_su3(%struct.su3_matrix* %32, %struct.su3_matrix* nonnull %mtmp) #32
  br i1 %cmp44, label %if.then46, label %if.else

if.then46:                                        ; preds = %for.body39
  %add = fadd double %call49, %25
  store double %add, double* %st_sum, align 8, !tbaa !11
  br label %for.inc55

if.else:                                          ; preds = %for.body39
  %add53 = fadd double %call49, %26
  store double %add53, double* %ss_sum, align 8, !tbaa !11
  br label %for.inc55

for.inc55:                                        ; preds = %if.then46, %if.else
  %33 = phi double [ %add, %if.then46 ], [ %25, %if.else ]
  %34 = phi double [ %26, %if.then46 ], [ %add53, %if.else ]
  %indvars.iv.next118 = add nuw nsw i64 %indvars.iv117, 1
  %35 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %36 = sext i32 %35 to i64
  %cmp37 = icmp slt i64 %indvars.iv.next118, %36
  br i1 %cmp37, label %for.body39, label %for.end58, !llvm.loop !238

for.end58:                                        ; preds = %for.inc55, %for.end
  %37 = phi double [ %12, %for.end ], [ %33, %for.inc55 ]
  %38 = phi double [ %13, %for.end ], [ %34, %for.inc55 ]
  call void @cleanup_gather(%struct.msg_tag* %call13) #32
  call void @cleanup_gather(%struct.msg_tag* %call23) #32
  %indvars.iv.next120 = add nuw nsw i64 %indvars.iv119, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next120, %indvars.iv123
  br i1 %exitcond.not, label %for.inc62, label %for.body9, !llvm.loop !239

for.inc62:                                        ; preds = %for.end58
  %indvars.iv.next124 = add nuw nsw i64 %indvars.iv123, 1
  %exitcond127.not = icmp eq i64 %indvars.iv.next124, 4
  br i1 %exitcond127.not, label %for.end64, label %for.cond6.preheader, !llvm.loop !240

for.end64:                                        ; preds = %for.inc62
  call void @g_doublesum(double* nonnull %ss_sum) #32
  call void @g_doublesum(double* nonnull %st_sum) #32
  %39 = load double, double* %ss_sum, align 8, !tbaa !11
  %40 = load i32, i32* @nx, align 4, !tbaa !13
  %mul = mul nsw i32 %40, 3
  %41 = load i32, i32* @ny, align 4, !tbaa !13
  %mul65 = mul nsw i32 %mul, %41
  %42 = load i32, i32* @nz, align 4, !tbaa !13
  %mul66 = mul nsw i32 %mul65, %42
  %43 = load i32, i32* @nt, align 4, !tbaa !13
  %mul67 = mul nsw i32 %mul66, %43
  %conv68 = sitofp i32 %mul67 to double
  %div = fdiv double %39, %conv68
  store double %div, double* %ss_plaq, align 8, !tbaa !11
  %44 = load double, double* %st_sum, align 8, !tbaa !11
  %div74 = fdiv double %44, %conv68
  store double %div74, double* %st_plaq, align 8, !tbaa !11
  call void @free(i8* %call) #32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %0) #31
  ret void
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize uwtable willreturn
define void @mult_su3_mat_hwvec(%struct.su3_matrix* nocapture readonly %mat, %struct.half_wilson_vector* nocapture readonly %src, %struct.half_wilson_vector* nocapture %dest) local_unnamed_addr #11 {
entry:
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 0, i64 0, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 0, i64 0, i32 1
  %1 = load double, double* %imag, align 8, !tbaa !9
  %real7 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 0, i32 0, i64 0, i32 0
  %2 = load double, double* %real7, align 8, !tbaa !4
  %imag12 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 0, i32 0, i64 0, i32 1
  %3 = load double, double* %imag12, align 8, !tbaa !9
  %real16 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 0, i64 1, i32 0
  %4 = load double, double* %real16, align 8, !tbaa !4
  %imag20 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 0, i64 1, i32 1
  %5 = load double, double* %imag20, align 8, !tbaa !9
  %real25 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 0, i32 0, i64 1, i32 0
  %6 = load double, double* %real25, align 8, !tbaa !4
  %imag30 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 0, i32 0, i64 1, i32 1
  %7 = load double, double* %imag30, align 8, !tbaa !9
  %real34 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 0, i64 2, i32 0
  %8 = load double, double* %real34, align 8, !tbaa !4
  %imag38 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 0, i64 2, i32 1
  %9 = load double, double* %imag38, align 8, !tbaa !9
  %real43 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 0, i32 0, i64 2, i32 0
  %10 = load double, double* %real43, align 8, !tbaa !4
  %imag48 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 0, i32 0, i64 2, i32 1
  %11 = load double, double* %imag48, align 8, !tbaa !9
  %12 = fneg double %1
  %neg = fmul double %3, %12
  %13 = tail call double @llvm.fmuladd.f64(double %0, double %2, double %neg)
  %14 = tail call double @llvm.fmuladd.f64(double %4, double %6, double %13)
  %neg50 = fneg double %5
  %15 = tail call double @llvm.fmuladd.f64(double %neg50, double %7, double %14)
  %16 = tail call double @llvm.fmuladd.f64(double %8, double %10, double %15)
  %neg51 = fneg double %9
  %17 = tail call double @llvm.fmuladd.f64(double %neg51, double %11, double %16)
  %real56 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 0, i32 0, i64 0, i32 0
  store double %17, double* %real56, align 8, !tbaa !4
  %mul57 = fmul double %1, %2
  %18 = tail call double @llvm.fmuladd.f64(double %0, double %3, double %mul57)
  %19 = tail call double @llvm.fmuladd.f64(double %4, double %7, double %18)
  %20 = tail call double @llvm.fmuladd.f64(double %5, double %6, double %19)
  %21 = tail call double @llvm.fmuladd.f64(double %8, double %11, double %20)
  %22 = tail call double @llvm.fmuladd.f64(double %9, double %10, double %21)
  %imag62 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 0, i32 0, i64 0, i32 1
  store double %22, double* %imag62, align 8, !tbaa !9
  %real66 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 1, i64 0, i32 0
  %23 = load double, double* %real66, align 8, !tbaa !4
  %imag70 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 1, i64 0, i32 1
  %24 = load double, double* %imag70, align 8, !tbaa !9
  %25 = load double, double* %real7, align 8, !tbaa !4
  %26 = load double, double* %imag12, align 8, !tbaa !9
  %real84 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 1, i64 1, i32 0
  %27 = load double, double* %real84, align 8, !tbaa !4
  %imag88 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 1, i64 1, i32 1
  %28 = load double, double* %imag88, align 8, !tbaa !9
  %29 = load double, double* %real25, align 8, !tbaa !4
  %30 = load double, double* %imag30, align 8, !tbaa !9
  %real102 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 1, i64 2, i32 0
  %31 = load double, double* %real102, align 8, !tbaa !4
  %imag106 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 1, i64 2, i32 1
  %32 = load double, double* %imag106, align 8, !tbaa !9
  %33 = load double, double* %real43, align 8, !tbaa !4
  %34 = load double, double* %imag48, align 8, !tbaa !9
  %35 = fneg double %24
  %neg118 = fmul double %26, %35
  %36 = tail call double @llvm.fmuladd.f64(double %23, double %25, double %neg118)
  %37 = tail call double @llvm.fmuladd.f64(double %27, double %29, double %36)
  %neg119 = fneg double %28
  %38 = tail call double @llvm.fmuladd.f64(double %neg119, double %30, double %37)
  %39 = tail call double @llvm.fmuladd.f64(double %31, double %33, double %38)
  %neg120 = fneg double %32
  %40 = tail call double @llvm.fmuladd.f64(double %neg120, double %34, double %39)
  %real125 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 0, i32 0, i64 1, i32 0
  store double %40, double* %real125, align 8, !tbaa !4
  %mul126 = fmul double %24, %25
  %41 = tail call double @llvm.fmuladd.f64(double %23, double %26, double %mul126)
  %42 = tail call double @llvm.fmuladd.f64(double %27, double %30, double %41)
  %43 = tail call double @llvm.fmuladd.f64(double %28, double %29, double %42)
  %44 = tail call double @llvm.fmuladd.f64(double %31, double %34, double %43)
  %45 = tail call double @llvm.fmuladd.f64(double %32, double %33, double %44)
  %imag131 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 0, i32 0, i64 1, i32 1
  store double %45, double* %imag131, align 8, !tbaa !9
  %real135 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 2, i64 0, i32 0
  %46 = load double, double* %real135, align 8, !tbaa !4
  %imag139 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 2, i64 0, i32 1
  %47 = load double, double* %imag139, align 8, !tbaa !9
  %48 = load double, double* %real7, align 8, !tbaa !4
  %49 = load double, double* %imag12, align 8, !tbaa !9
  %real153 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 2, i64 1, i32 0
  %50 = load double, double* %real153, align 8, !tbaa !4
  %imag157 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 2, i64 1, i32 1
  %51 = load double, double* %imag157, align 8, !tbaa !9
  %52 = load double, double* %real25, align 8, !tbaa !4
  %53 = load double, double* %imag30, align 8, !tbaa !9
  %real171 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 2, i64 2, i32 0
  %54 = load double, double* %real171, align 8, !tbaa !4
  %imag175 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 2, i64 2, i32 1
  %55 = load double, double* %imag175, align 8, !tbaa !9
  %56 = load double, double* %real43, align 8, !tbaa !4
  %57 = load double, double* %imag48, align 8, !tbaa !9
  %58 = fneg double %47
  %neg187 = fmul double %49, %58
  %59 = tail call double @llvm.fmuladd.f64(double %46, double %48, double %neg187)
  %60 = tail call double @llvm.fmuladd.f64(double %50, double %52, double %59)
  %neg188 = fneg double %51
  %61 = tail call double @llvm.fmuladd.f64(double %neg188, double %53, double %60)
  %62 = tail call double @llvm.fmuladd.f64(double %54, double %56, double %61)
  %neg189 = fneg double %55
  %63 = tail call double @llvm.fmuladd.f64(double %neg189, double %57, double %62)
  %real194 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 0, i32 0, i64 2, i32 0
  store double %63, double* %real194, align 8, !tbaa !4
  %mul195 = fmul double %47, %48
  %64 = tail call double @llvm.fmuladd.f64(double %46, double %49, double %mul195)
  %65 = tail call double @llvm.fmuladd.f64(double %50, double %53, double %64)
  %66 = tail call double @llvm.fmuladd.f64(double %51, double %52, double %65)
  %67 = tail call double @llvm.fmuladd.f64(double %54, double %57, double %66)
  %68 = tail call double @llvm.fmuladd.f64(double %55, double %56, double %67)
  %imag200 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 0, i32 0, i64 2, i32 1
  store double %68, double* %imag200, align 8, !tbaa !9
  %69 = load double, double* %real, align 8, !tbaa !4
  %70 = load double, double* %imag, align 8, !tbaa !9
  %real213 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 1, i32 0, i64 0, i32 0
  %71 = load double, double* %real213, align 8, !tbaa !4
  %imag218 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 1, i32 0, i64 0, i32 1
  %72 = load double, double* %imag218, align 8, !tbaa !9
  %73 = load double, double* %real16, align 8, !tbaa !4
  %74 = load double, double* %imag20, align 8, !tbaa !9
  %real231 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 1, i32 0, i64 1, i32 0
  %75 = load double, double* %real231, align 8, !tbaa !4
  %imag236 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 1, i32 0, i64 1, i32 1
  %76 = load double, double* %imag236, align 8, !tbaa !9
  %77 = load double, double* %real34, align 8, !tbaa !4
  %78 = load double, double* %imag38, align 8, !tbaa !9
  %real249 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 1, i32 0, i64 2, i32 0
  %79 = load double, double* %real249, align 8, !tbaa !4
  %imag254 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 1, i32 0, i64 2, i32 1
  %80 = load double, double* %imag254, align 8, !tbaa !9
  %81 = fneg double %70
  %neg256 = fmul double %72, %81
  %82 = tail call double @llvm.fmuladd.f64(double %69, double %71, double %neg256)
  %83 = tail call double @llvm.fmuladd.f64(double %73, double %75, double %82)
  %neg257 = fneg double %74
  %84 = tail call double @llvm.fmuladd.f64(double %neg257, double %76, double %83)
  %85 = tail call double @llvm.fmuladd.f64(double %77, double %79, double %84)
  %neg258 = fneg double %78
  %86 = tail call double @llvm.fmuladd.f64(double %neg258, double %80, double %85)
  %real263 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 1, i32 0, i64 0, i32 0
  store double %86, double* %real263, align 8, !tbaa !4
  %mul264 = fmul double %70, %71
  %87 = tail call double @llvm.fmuladd.f64(double %69, double %72, double %mul264)
  %88 = tail call double @llvm.fmuladd.f64(double %73, double %76, double %87)
  %89 = tail call double @llvm.fmuladd.f64(double %74, double %75, double %88)
  %90 = tail call double @llvm.fmuladd.f64(double %77, double %80, double %89)
  %91 = tail call double @llvm.fmuladd.f64(double %78, double %79, double %90)
  %imag269 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 1, i32 0, i64 0, i32 1
  store double %91, double* %imag269, align 8, !tbaa !9
  %92 = load double, double* %real66, align 8, !tbaa !4
  %93 = load double, double* %imag70, align 8, !tbaa !9
  %94 = load double, double* %real213, align 8, !tbaa !4
  %95 = load double, double* %imag218, align 8, !tbaa !9
  %96 = load double, double* %real84, align 8, !tbaa !4
  %97 = load double, double* %imag88, align 8, !tbaa !9
  %98 = load double, double* %real231, align 8, !tbaa !4
  %99 = load double, double* %imag236, align 8, !tbaa !9
  %100 = load double, double* %real102, align 8, !tbaa !4
  %101 = load double, double* %imag106, align 8, !tbaa !9
  %102 = load double, double* %real249, align 8, !tbaa !4
  %103 = load double, double* %imag254, align 8, !tbaa !9
  %104 = fneg double %93
  %neg325 = fmul double %95, %104
  %105 = tail call double @llvm.fmuladd.f64(double %92, double %94, double %neg325)
  %106 = tail call double @llvm.fmuladd.f64(double %96, double %98, double %105)
  %neg326 = fneg double %97
  %107 = tail call double @llvm.fmuladd.f64(double %neg326, double %99, double %106)
  %108 = tail call double @llvm.fmuladd.f64(double %100, double %102, double %107)
  %neg327 = fneg double %101
  %109 = tail call double @llvm.fmuladd.f64(double %neg327, double %103, double %108)
  %real332 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 1, i32 0, i64 1, i32 0
  store double %109, double* %real332, align 8, !tbaa !4
  %mul333 = fmul double %93, %94
  %110 = tail call double @llvm.fmuladd.f64(double %92, double %95, double %mul333)
  %111 = tail call double @llvm.fmuladd.f64(double %96, double %99, double %110)
  %112 = tail call double @llvm.fmuladd.f64(double %97, double %98, double %111)
  %113 = tail call double @llvm.fmuladd.f64(double %100, double %103, double %112)
  %114 = tail call double @llvm.fmuladd.f64(double %101, double %102, double %113)
  %imag338 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 1, i32 0, i64 1, i32 1
  store double %114, double* %imag338, align 8, !tbaa !9
  %115 = load double, double* %real135, align 8, !tbaa !4
  %116 = load double, double* %imag139, align 8, !tbaa !9
  %117 = load double, double* %real213, align 8, !tbaa !4
  %118 = load double, double* %imag218, align 8, !tbaa !9
  %119 = load double, double* %real153, align 8, !tbaa !4
  %120 = load double, double* %imag157, align 8, !tbaa !9
  %121 = load double, double* %real231, align 8, !tbaa !4
  %122 = load double, double* %imag236, align 8, !tbaa !9
  %123 = load double, double* %real171, align 8, !tbaa !4
  %124 = load double, double* %imag175, align 8, !tbaa !9
  %125 = load double, double* %real249, align 8, !tbaa !4
  %126 = load double, double* %imag254, align 8, !tbaa !9
  %127 = fneg double %116
  %neg394 = fmul double %118, %127
  %128 = tail call double @llvm.fmuladd.f64(double %115, double %117, double %neg394)
  %129 = tail call double @llvm.fmuladd.f64(double %119, double %121, double %128)
  %neg395 = fneg double %120
  %130 = tail call double @llvm.fmuladd.f64(double %neg395, double %122, double %129)
  %131 = tail call double @llvm.fmuladd.f64(double %123, double %125, double %130)
  %neg396 = fneg double %124
  %132 = tail call double @llvm.fmuladd.f64(double %neg396, double %126, double %131)
  %real401 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 1, i32 0, i64 2, i32 0
  store double %132, double* %real401, align 8, !tbaa !4
  %mul402 = fmul double %116, %117
  %133 = tail call double @llvm.fmuladd.f64(double %115, double %118, double %mul402)
  %134 = tail call double @llvm.fmuladd.f64(double %119, double %122, double %133)
  %135 = tail call double @llvm.fmuladd.f64(double %120, double %121, double %134)
  %136 = tail call double @llvm.fmuladd.f64(double %123, double %126, double %135)
  %137 = tail call double @llvm.fmuladd.f64(double %124, double %125, double %136)
  %imag407 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 1, i32 0, i64 2, i32 1
  store double %137, double* %imag407, align 8, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn
define void @scalar_mult_su3_matrix(%struct.su3_matrix* nocapture readonly %a, double %s, %struct.su3_matrix* nocapture %b) local_unnamed_addr #23 {
entry:
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 0, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %mul = fmul double %0, %s
  %real5 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 0, i64 0, i32 0
  store double %mul, double* %real5, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 0, i32 1
  %1 = load double, double* %imag, align 8, !tbaa !9
  %mul9 = fmul double %1, %s
  %imag13 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 0, i64 0, i32 1
  store double %mul9, double* %imag13, align 8, !tbaa !9
  %real17 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 1, i32 0
  %2 = load double, double* %real17, align 8, !tbaa !4
  %mul18 = fmul double %2, %s
  %real22 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 0, i64 1, i32 0
  store double %mul18, double* %real22, align 8, !tbaa !4
  %imag26 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 1, i32 1
  %3 = load double, double* %imag26, align 8, !tbaa !9
  %mul27 = fmul double %3, %s
  %imag31 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 0, i64 1, i32 1
  store double %mul27, double* %imag31, align 8, !tbaa !9
  %real35 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 2, i32 0
  %4 = load double, double* %real35, align 8, !tbaa !4
  %mul36 = fmul double %4, %s
  %real40 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 0, i64 2, i32 0
  store double %mul36, double* %real40, align 8, !tbaa !4
  %imag44 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 2, i32 1
  %5 = load double, double* %imag44, align 8, !tbaa !9
  %mul45 = fmul double %5, %s
  %imag49 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 0, i64 2, i32 1
  store double %mul45, double* %imag49, align 8, !tbaa !9
  %real53 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 0, i32 0
  %6 = load double, double* %real53, align 8, !tbaa !4
  %mul54 = fmul double %6, %s
  %real58 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 1, i64 0, i32 0
  store double %mul54, double* %real58, align 8, !tbaa !4
  %imag62 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 0, i32 1
  %7 = load double, double* %imag62, align 8, !tbaa !9
  %mul63 = fmul double %7, %s
  %imag67 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 1, i64 0, i32 1
  store double %mul63, double* %imag67, align 8, !tbaa !9
  %real71 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 1, i32 0
  %8 = load double, double* %real71, align 8, !tbaa !4
  %mul72 = fmul double %8, %s
  %real76 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 1, i64 1, i32 0
  store double %mul72, double* %real76, align 8, !tbaa !4
  %imag80 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 1, i32 1
  %9 = load double, double* %imag80, align 8, !tbaa !9
  %mul81 = fmul double %9, %s
  %imag85 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 1, i64 1, i32 1
  store double %mul81, double* %imag85, align 8, !tbaa !9
  %real89 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 2, i32 0
  %10 = load double, double* %real89, align 8, !tbaa !4
  %mul90 = fmul double %10, %s
  %real94 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 1, i64 2, i32 0
  store double %mul90, double* %real94, align 8, !tbaa !4
  %imag98 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 2, i32 1
  %11 = load double, double* %imag98, align 8, !tbaa !9
  %mul99 = fmul double %11, %s
  %imag103 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 1, i64 2, i32 1
  store double %mul99, double* %imag103, align 8, !tbaa !9
  %real107 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 0, i32 0
  %12 = load double, double* %real107, align 8, !tbaa !4
  %mul108 = fmul double %12, %s
  %real112 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 2, i64 0, i32 0
  store double %mul108, double* %real112, align 8, !tbaa !4
  %imag116 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 0, i32 1
  %13 = load double, double* %imag116, align 8, !tbaa !9
  %mul117 = fmul double %13, %s
  %imag121 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 2, i64 0, i32 1
  store double %mul117, double* %imag121, align 8, !tbaa !9
  %real125 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 1, i32 0
  %14 = load double, double* %real125, align 8, !tbaa !4
  %mul126 = fmul double %14, %s
  %real130 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 2, i64 1, i32 0
  store double %mul126, double* %real130, align 8, !tbaa !4
  %imag134 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 1, i32 1
  %15 = load double, double* %imag134, align 8, !tbaa !9
  %mul135 = fmul double %15, %s
  %imag139 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 2, i64 1, i32 1
  store double %mul135, double* %imag139, align 8, !tbaa !9
  %real143 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 2, i32 0
  %16 = load double, double* %real143, align 8, !tbaa !4
  %mul144 = fmul double %16, %s
  %real148 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 2, i64 2, i32 0
  store double %mul144, double* %real148, align 8, !tbaa !4
  %imag152 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 2, i32 1
  %17 = load double, double* %imag152, align 8, !tbaa !9
  %mul153 = fmul double %17, %s
  %imag157 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 2, i64 2, i32 1
  store double %mul153, double* %imag157, align 8, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly uwtable willreturn
define { double, double } @su3_dot(%struct.su3_vector* nocapture readonly %a, %struct.su3_vector* nocapture readonly %b) local_unnamed_addr #24 {
entry:
  %real = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 0, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 0, i32 1
  %1 = load double, double* %imag, align 8, !tbaa !9
  %real5 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 0, i32 0
  %2 = load double, double* %real5, align 8, !tbaa !4
  %imag8 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 0, i32 1
  %3 = load double, double* %imag8, align 8, !tbaa !9
  %mul9 = fmul double %1, %3
  %4 = tail call double @llvm.fmuladd.f64(double %0, double %2, double %mul9)
  %5 = fneg double %1
  %neg = fmul double %2, %5
  %6 = tail call double @llvm.fmuladd.f64(double %0, double %3, double %neg)
  %real13 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 1, i32 0
  %7 = load double, double* %real13, align 8, !tbaa !4
  %imag16 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 1, i32 1
  %8 = load double, double* %imag16, align 8, !tbaa !9
  %real19 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 1, i32 0
  %9 = load double, double* %real19, align 8, !tbaa !4
  %imag22 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 1, i32 1
  %10 = load double, double* %imag22, align 8, !tbaa !9
  %mul23 = fmul double %8, %10
  %11 = tail call double @llvm.fmuladd.f64(double %7, double %9, double %mul23)
  %add = fadd double %4, %11
  %12 = fneg double %8
  %neg25 = fmul double %9, %12
  %13 = tail call double @llvm.fmuladd.f64(double %7, double %10, double %neg25)
  %add26 = fadd double %6, %13
  %real29 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 2, i32 0
  %14 = load double, double* %real29, align 8, !tbaa !4
  %imag32 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 2, i32 1
  %15 = load double, double* %imag32, align 8, !tbaa !9
  %real35 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 2, i32 0
  %16 = load double, double* %real35, align 8, !tbaa !4
  %imag38 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 2, i32 1
  %17 = load double, double* %imag38, align 8, !tbaa !9
  %mul39 = fmul double %15, %17
  %18 = tail call double @llvm.fmuladd.f64(double %14, double %16, double %mul39)
  %add40 = fadd double %add, %18
  %19 = fneg double %15
  %neg42 = fmul double %16, %19
  %20 = tail call double @llvm.fmuladd.f64(double %14, double %17, double %neg42)
  %add43 = fadd double %add26, %20
  %.fca.0.insert = insertvalue { double, double } undef, double %add40, 0
  %.fca.1.insert = insertvalue { double, double } %.fca.0.insert, double %add43, 1
  ret { double, double } %.fca.1.insert
}

; Function Attrs: noinline nounwind optsize uwtable
define void @ranmom() local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp16 = icmp sgt i32 %0, 0
  br i1 %cmp16, label %for.cond1.preheader.preheader, label %for.end6

for.cond1.preheader.preheader:                    ; preds = %entry
  %1 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.preheader, %for.inc4
  %s.018 = phi %struct.site* [ %incdec.ptr, %for.inc4 ], [ %1, %for.cond1.preheader.preheader ]
  %i.017 = phi i32 [ %inc5, %for.inc4 ], [ 0, %for.cond1.preheader.preheader ]
  %site_prn = getelementptr inbounds %struct.site, %struct.site* %s.018, i64 0, i32 6
  br label %for.body3

for.body3:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %s.018, i64 0, i32 11, i64 %indvars.iv
  tail call void @random_anti_hermitian(%struct.anti_hermitmat* nonnull %arrayidx, %struct.double_prn* nonnull %site_prn) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.inc4, label %for.body3, !llvm.loop !241

for.inc4:                                         ; preds = %for.body3
  %inc5 = add nuw nsw i32 %i.017, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.018, i64 1
  %2 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp = icmp slt i32 %inc5, %2
  br i1 %cmp, label %for.cond1.preheader, label %for.end6, !llvm.loop !242

for.end6:                                         ; preds = %for.inc4, %entry
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn
define void @make_anti_hermitian(%struct.su3_matrix* nocapture readonly %m3, %struct.anti_hermitmat* nocapture %ah3) local_unnamed_addr #23 {
entry:
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %m3, i64 0, i32 0, i64 0, i64 0, i32 1
  %0 = load double, double* %imag, align 8, !tbaa !9
  %imag5 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %m3, i64 0, i32 0, i64 1, i64 1, i32 1
  %1 = load double, double* %imag5, align 8, !tbaa !9
  %add = fadd double %0, %1
  %imag9 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %m3, i64 0, i32 0, i64 2, i64 2, i32 1
  %2 = load double, double* %imag9, align 8, !tbaa !9
  %add10 = fadd double %add, %2
  %mul = fmul double %add10, 0x3FD5555551C112DA
  %sub = fsub double %0, %mul
  %m00im = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %ah3, i64 0, i32 3
  store double %sub, double* %m00im, align 8, !tbaa !243
  %sub19 = fsub double %1, %mul
  %m11im = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %ah3, i64 0, i32 4
  store double %sub19, double* %m11im, align 8, !tbaa !245
  %sub24 = fsub double %2, %mul
  %m22im = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %ah3, i64 0, i32 5
  store double %sub24, double* %m22im, align 8, !tbaa !246
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %m3, i64 0, i32 0, i64 0, i64 1, i32 0
  %3 = load double, double* %real, align 8, !tbaa !4
  %real31 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %m3, i64 0, i32 0, i64 1, i64 0, i32 0
  %4 = load double, double* %real31, align 8, !tbaa !4
  %sub32 = fsub double %3, %4
  %mul33 = fmul double %sub32, 5.000000e-01
  %real34 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %ah3, i64 0, i32 0, i32 0
  store double %mul33, double* %real34, align 8, !tbaa !247
  %real38 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %m3, i64 0, i32 0, i64 0, i64 2, i32 0
  %5 = load double, double* %real38, align 8, !tbaa !4
  %real42 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %m3, i64 0, i32 0, i64 2, i64 0, i32 0
  %6 = load double, double* %real42, align 8, !tbaa !4
  %sub43 = fsub double %5, %6
  %mul44 = fmul double %sub43, 5.000000e-01
  %real45 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %ah3, i64 0, i32 1, i32 0
  store double %mul44, double* %real45, align 8, !tbaa !248
  %real49 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %m3, i64 0, i32 0, i64 1, i64 2, i32 0
  %7 = load double, double* %real49, align 8, !tbaa !4
  %real53 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %m3, i64 0, i32 0, i64 2, i64 1, i32 0
  %8 = load double, double* %real53, align 8, !tbaa !4
  %sub54 = fsub double %7, %8
  %mul55 = fmul double %sub54, 5.000000e-01
  %real56 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %ah3, i64 0, i32 2, i32 0
  store double %mul55, double* %real56, align 8, !tbaa !249
  %imag60 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %m3, i64 0, i32 0, i64 0, i64 1, i32 1
  %9 = load double, double* %imag60, align 8, !tbaa !9
  %imag64 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %m3, i64 0, i32 0, i64 1, i64 0, i32 1
  %10 = load double, double* %imag64, align 8, !tbaa !9
  %add65 = fadd double %9, %10
  %mul66 = fmul double %add65, 5.000000e-01
  %imag68 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %ah3, i64 0, i32 0, i32 1
  store double %mul66, double* %imag68, align 8, !tbaa !250
  %imag72 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %m3, i64 0, i32 0, i64 0, i64 2, i32 1
  %11 = load double, double* %imag72, align 8, !tbaa !9
  %imag76 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %m3, i64 0, i32 0, i64 2, i64 0, i32 1
  %12 = load double, double* %imag76, align 8, !tbaa !9
  %add77 = fadd double %11, %12
  %mul78 = fmul double %add77, 5.000000e-01
  %imag80 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %ah3, i64 0, i32 1, i32 1
  store double %mul78, double* %imag80, align 8, !tbaa !251
  %imag84 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %m3, i64 0, i32 0, i64 1, i64 2, i32 1
  %13 = load double, double* %imag84, align 8, !tbaa !9
  %imag88 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %m3, i64 0, i32 0, i64 2, i64 1, i32 1
  %14 = load double, double* %imag88, align 8, !tbaa !9
  %add89 = fadd double %13, %14
  %mul90 = fmul double %add89, 5.000000e-01
  %imag92 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %ah3, i64 0, i32 2, i32 1
  store double %mul90, double* %imag92, align 8, !tbaa !252
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @phaseset() local_unnamed_addr #10 {
entry:
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %1 = load i32, i32* @nt, align 4
  %sub = add nsw i32 %1, -1
  %cmp72 = icmp sgt i32 %0, 0
  br i1 %cmp72, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %2 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %i.076 = phi i32 [ %inc, %for.inc ], [ 0, %for.body.preheader ]
  %sit.073 = phi %struct.site* [ %incdec.ptr, %for.inc ], [ %2, %for.body.preheader ]
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %sit.073, i64 0, i32 12, i64 3
  store double 1.000000e+00, double* %arrayidx, align 8, !tbaa !11
  %t = getelementptr inbounds %struct.site, %struct.site* %sit.073, i64 0, i32 3
  %3 = load i16, i16* %t, align 2, !tbaa !19
  %conv = sext i16 %3 to i32
  %rem69 = srem i16 %3, 2
  %cmp1 = icmp eq i16 %rem69, 1
  %spec.select = select i1 %cmp1, double -1.000000e+00, double 1.000000e+00
  %4 = getelementptr inbounds %struct.site, %struct.site* %sit.073, i64 0, i32 12, i64 0
  store double %spec.select, double* %4, align 8
  %x = getelementptr inbounds %struct.site, %struct.site* %sit.073, i64 0, i32 0
  %5 = load i16, i16* %x, align 8, !tbaa !122
  %rem870 = srem i16 %5, 2
  %cmp9 = icmp eq i16 %rem870, 1
  %fneg = fneg double %spec.select
  %6 = select i1 %cmp9, double %fneg, double %spec.select
  %7 = getelementptr inbounds %struct.site, %struct.site* %sit.073, i64 0, i32 12, i64 1
  store double %6, double* %7, align 8
  %y = getelementptr inbounds %struct.site, %struct.site* %sit.073, i64 0, i32 1
  %8 = load i16, i16* %y, align 2, !tbaa !123
  %rem2371 = srem i16 %8, 2
  %cmp24 = icmp eq i16 %rem2371, 1
  %fneg29 = fneg double %6
  %spec.select79 = select i1 %cmp24, double %fneg29, double %6
  %9 = getelementptr inbounds %struct.site, %struct.site* %sit.073, i64 0, i32 12, i64 2
  store double %spec.select79, double* %9, align 8
  %cmp40 = icmp eq i32 %sub, %conv
  br i1 %cmp40, label %if.then42, label %for.inc

if.then42:                                        ; preds = %for.body
  store double -1.000000e+00, double* %arrayidx, align 8, !tbaa !11
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then42
  %inc = add nuw nsw i32 %i.076, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %sit.073, i64 1
  %exitcond.not = icmp eq i32 %inc, %0
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !253

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @rephase(i32 %flag) local_unnamed_addr #1 {
entry:
  %cmp = icmp eq i32 %flag, 1
  %0 = load i32, i32* @phases_in, align 4
  %cmp1 = icmp eq i32 %0, 0
  %or.cond = select i1 %cmp, i1 %cmp1, i1 false
  br i1 %or.cond, label %if.end7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %cmp2 = icmp eq i32 %flag, 0
  %cmp4 = icmp eq i32 %0, 1
  %or.cond45 = select i1 %cmp2, i1 %cmp4, i1 false
  br i1 %or.cond45, label %if.end7, label %if.then

if.then:                                          ; preds = %lor.lhs.false
  %1 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp5 = icmp eq i32 %1, 0
  br i1 %cmp5, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.then
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([32 x i8], [32 x i8]* @str.156, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then6, %if.then
  tail call void @terminate(i32 1) #32
  br label %if.end7

if.end7:                                          ; preds = %lor.lhs.false, %entry, %if.end
  %2 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp872 = icmp sgt i32 %2, 0
  br i1 %cmp872, label %for.cond9.preheader.preheader, label %for.end44

for.cond9.preheader.preheader:                    ; preds = %if.end7
  %3 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.cond9.preheader

for.cond9.preheader:                              ; preds = %for.cond9.preheader.preheader, %for.inc42
  %s.074 = phi %struct.site* [ %incdec.ptr, %for.inc42 ], [ %3, %for.cond9.preheader.preheader ]
  %i.073 = phi i32 [ %inc43, %for.inc42 ], [ 0, %for.cond9.preheader.preheader ]
  br label %for.cond12.preheader

for.cond12.preheader:                             ; preds = %for.cond9.preheader, %for.inc39
  %indvars.iv78 = phi i64 [ 0, %for.cond9.preheader ], [ %indvars.iv.next79, %for.inc39 ]
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %s.074, i64 0, i32 12, i64 %indvars.iv78
  br label %for.cond15.preheader

for.cond15.preheader:                             ; preds = %for.cond12.preheader, %for.inc36
  %indvars.iv75 = phi i64 [ 0, %for.cond12.preheader ], [ %indvars.iv.next76, %for.inc36 ]
  br label %for.body17

for.body17:                                       ; preds = %for.cond15.preheader, %for.body17
  %indvars.iv = phi i64 [ 0, %for.cond15.preheader ], [ %indvars.iv.next, %for.body17 ]
  %4 = load double, double* %arrayidx, align 8, !tbaa !11
  %real = getelementptr inbounds %struct.site, %struct.site* %s.074, i64 0, i32 8, i64 %indvars.iv78, i32 0, i64 %indvars.iv75, i64 %indvars.iv, i32 0
  %5 = load double, double* %real, align 8, !tbaa !4
  %mul = fmul double %4, %5
  store double %mul, double* %real, align 8, !tbaa !4
  %6 = load double, double* %arrayidx, align 8, !tbaa !11
  %imag = getelementptr inbounds %struct.site, %struct.site* %s.074, i64 0, i32 8, i64 %indvars.iv78, i32 0, i64 %indvars.iv75, i64 %indvars.iv, i32 1
  %7 = load double, double* %imag, align 8, !tbaa !9
  %mul35 = fmul double %6, %7
  store double %mul35, double* %imag, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc36, label %for.body17, !llvm.loop !254

for.inc36:                                        ; preds = %for.body17
  %indvars.iv.next76 = add nuw nsw i64 %indvars.iv75, 1
  %exitcond77.not = icmp eq i64 %indvars.iv.next76, 3
  br i1 %exitcond77.not, label %for.inc39, label %for.cond15.preheader, !llvm.loop !255

for.inc39:                                        ; preds = %for.inc36
  %indvars.iv.next79 = add nuw nsw i64 %indvars.iv78, 1
  %exitcond80.not = icmp eq i64 %indvars.iv.next79, 4
  br i1 %exitcond80.not, label %for.inc42, label %for.cond12.preheader, !llvm.loop !256

for.inc42:                                        ; preds = %for.inc39
  %inc43 = add nuw nsw i32 %i.073, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.074, i64 1
  %exitcond81.not = icmp eq i32 %inc43, %2
  br i1 %exitcond81.not, label %for.end44, label %for.cond9.preheader, !llvm.loop !257

for.end44:                                        ; preds = %for.inc42, %if.end7
  store i32 %flag, i32* @phases_in, align 4, !tbaa !13
  ret void
}

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @mult_adj_su3_mat_vec_4dir(%struct.su3_matrix* nocapture readonly %mat, %struct.su3_vector* nocapture readonly %src, %struct.su3_vector* nocapture %dest) local_unnamed_addr #4 {
entry:
  %real = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %src, i64 0, i32 0, i64 0, i32 0
  %imag = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %src, i64 0, i32 0, i64 0, i32 1
  %real42 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %src, i64 0, i32 0, i64 1, i32 0
  %imag45 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %src, i64 0, i32 0, i64 1, i32 1
  %real87 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %src, i64 0, i32 0, i64 2, i32 0
  %imag90 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %src, i64 0, i32 0, i64 2, i32 1
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %c.0293 = phi %struct.su3_vector* [ %dest, %entry ], [ %incdec.ptr148, %for.body ]
  %n.0292 = phi i32 [ 0, %entry ], [ %inc, %for.body ]
  %a.0291 = phi %struct.su3_matrix* [ %mat, %entry ], [ %incdec.ptr, %for.body ]
  %0 = load double, double* %real, align 8, !tbaa !4
  %1 = load double, double* %imag, align 8, !tbaa !9
  %real6 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 0, i64 0, i32 0
  %2 = load double, double* %real6, align 8, !tbaa !4
  %real10 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 0, i64 1, i32 0
  %3 = load double, double* %real10, align 8, !tbaa !4
  %real14 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 0, i64 2, i32 0
  %4 = load double, double* %real14, align 8, !tbaa !4
  %mul = fmul double %0, %2
  %mul15 = fmul double %0, %3
  %mul16 = fmul double %0, %4
  %mul17 = fmul double %1, %2
  %mul18 = fmul double %1, %3
  %mul19 = fmul double %1, %4
  %imag23 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 0, i64 0, i32 1
  %5 = load double, double* %imag23, align 8, !tbaa !9
  %imag27 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 0, i64 1, i32 1
  %6 = load double, double* %imag27, align 8, !tbaa !9
  %imag31 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 0, i64 2, i32 1
  %7 = load double, double* %imag31, align 8, !tbaa !9
  %8 = tail call double @llvm.fmuladd.f64(double %5, double %1, double %mul)
  %9 = tail call double @llvm.fmuladd.f64(double %6, double %1, double %mul15)
  %10 = tail call double @llvm.fmuladd.f64(double %7, double %1, double %mul16)
  %neg = fneg double %5
  %11 = tail call double @llvm.fmuladd.f64(double %neg, double %0, double %mul17)
  %neg37 = fneg double %6
  %12 = tail call double @llvm.fmuladd.f64(double %neg37, double %0, double %mul18)
  %neg39 = fneg double %7
  %13 = tail call double @llvm.fmuladd.f64(double %neg39, double %0, double %mul19)
  %14 = load double, double* %real42, align 8, !tbaa !4
  %15 = load double, double* %imag45, align 8, !tbaa !9
  %real49 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 1, i64 0, i32 0
  %16 = load double, double* %real49, align 8, !tbaa !4
  %real53 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 1, i64 1, i32 0
  %17 = load double, double* %real53, align 8, !tbaa !4
  %real57 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 1, i64 2, i32 0
  %18 = load double, double* %real57, align 8, !tbaa !4
  %19 = tail call double @llvm.fmuladd.f64(double %16, double %14, double %8)
  %20 = tail call double @llvm.fmuladd.f64(double %17, double %14, double %9)
  %21 = tail call double @llvm.fmuladd.f64(double %18, double %14, double %10)
  %22 = tail call double @llvm.fmuladd.f64(double %16, double %15, double %11)
  %23 = tail call double @llvm.fmuladd.f64(double %17, double %15, double %12)
  %24 = tail call double @llvm.fmuladd.f64(double %18, double %15, double %13)
  %imag67 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 1, i64 0, i32 1
  %25 = load double, double* %imag67, align 8, !tbaa !9
  %imag71 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 1, i64 1, i32 1
  %26 = load double, double* %imag71, align 8, !tbaa !9
  %imag75 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 1, i64 2, i32 1
  %27 = load double, double* %imag75, align 8, !tbaa !9
  %28 = tail call double @llvm.fmuladd.f64(double %25, double %15, double %19)
  %29 = tail call double @llvm.fmuladd.f64(double %26, double %15, double %20)
  %30 = tail call double @llvm.fmuladd.f64(double %27, double %15, double %21)
  %neg80 = fneg double %25
  %31 = tail call double @llvm.fmuladd.f64(double %neg80, double %14, double %22)
  %neg82 = fneg double %26
  %32 = tail call double @llvm.fmuladd.f64(double %neg82, double %14, double %23)
  %neg84 = fneg double %27
  %33 = tail call double @llvm.fmuladd.f64(double %neg84, double %14, double %24)
  %34 = load double, double* %real87, align 8, !tbaa !4
  %35 = load double, double* %imag90, align 8, !tbaa !9
  %real94 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 2, i64 0, i32 0
  %36 = load double, double* %real94, align 8, !tbaa !4
  %real98 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 2, i64 1, i32 0
  %37 = load double, double* %real98, align 8, !tbaa !4
  %real102 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 2, i64 2, i32 0
  %38 = load double, double* %real102, align 8, !tbaa !4
  %39 = tail call double @llvm.fmuladd.f64(double %36, double %34, double %28)
  %40 = tail call double @llvm.fmuladd.f64(double %37, double %34, double %29)
  %41 = tail call double @llvm.fmuladd.f64(double %38, double %34, double %30)
  %42 = tail call double @llvm.fmuladd.f64(double %36, double %35, double %31)
  %43 = tail call double @llvm.fmuladd.f64(double %37, double %35, double %32)
  %44 = tail call double @llvm.fmuladd.f64(double %38, double %35, double %33)
  %imag112 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 2, i64 0, i32 1
  %45 = load double, double* %imag112, align 8, !tbaa !9
  %imag116 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 2, i64 1, i32 1
  %46 = load double, double* %imag116, align 8, !tbaa !9
  %imag120 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 0, i32 0, i64 2, i64 2, i32 1
  %47 = load double, double* %imag120, align 8, !tbaa !9
  %48 = tail call double @llvm.fmuladd.f64(double %45, double %35, double %39)
  %49 = tail call double @llvm.fmuladd.f64(double %46, double %35, double %40)
  %50 = tail call double @llvm.fmuladd.f64(double %47, double %35, double %41)
  %neg125 = fneg double %45
  %51 = tail call double @llvm.fmuladd.f64(double %neg125, double %34, double %42)
  %neg127 = fneg double %46
  %52 = tail call double @llvm.fmuladd.f64(double %neg127, double %34, double %43)
  %neg129 = fneg double %47
  %53 = tail call double @llvm.fmuladd.f64(double %neg129, double %34, double %44)
  %real132 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c.0293, i64 0, i32 0, i64 0, i32 0
  store double %48, double* %real132, align 8, !tbaa !4
  %imag135 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c.0293, i64 0, i32 0, i64 0, i32 1
  store double %51, double* %imag135, align 8, !tbaa !9
  %real138 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c.0293, i64 0, i32 0, i64 1, i32 0
  store double %49, double* %real138, align 8, !tbaa !4
  %imag141 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c.0293, i64 0, i32 0, i64 1, i32 1
  store double %52, double* %imag141, align 8, !tbaa !9
  %real144 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c.0293, i64 0, i32 0, i64 2, i32 0
  store double %50, double* %real144, align 8, !tbaa !4
  %imag147 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c.0293, i64 0, i32 0, i64 2, i32 1
  store double %53, double* %imag147, align 8, !tbaa !9
  %inc = add nuw nsw i32 %n.0292, 1
  %incdec.ptr = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a.0291, i64 1
  %incdec.ptr148 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c.0293, i64 1
  %exitcond.not = icmp eq i32 %inc, 4
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !258

for.end:                                          ; preds = %for.body
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @f_meas_imp(i32 %phi_off, i32 %xxx_off, double %mass) local_unnamed_addr #1 {
entry:
  %rpbp_e = alloca double, align 8
  %rpbp_o = alloca double, align 8
  %rfaction = alloca double, align 8
  %0 = bitcast double* %rpbp_e to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %1 = bitcast double* %rpbp_o to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #31
  %2 = bitcast double* %rfaction to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #31
  %3 = load i32, i32* @valid_longlinks, align 4, !tbaa !13
  %cmp = icmp eq i32 %3, 1
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void (...) bitcast (void ()* @load_longlinks to void (...)*)() #32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* @valid_fatlinks, align 4, !tbaa !13
  %cmp1 = icmp eq i32 %4, 1
  br i1 %cmp1, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void (...) bitcast (void ()* @load_fatlinks to void (...)*)() #32
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  tail call void @grsource_imp(i32 %phi_off, double %mass, i32 3) #32
  %call = tail call i32 @mat_invert_uml(i32 2432, i32 %xxx_off, i32 %phi_off, double %mass) #32
  %5 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idx.ext = sext i32 %phi_off to i64
  %idx.ext10 = sext i32 %xxx_off to i64
  %6 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %cmp7110 = icmp sgt i32 %6, 0
  br i1 %cmp7110, label %for.body9, label %for.end

for.body9:                                        ; preds = %if.end3, %for.body9
  %i.0114 = phi i32 [ %inc, %for.body9 ], [ 0, %if.end3 ]
  %st.0113 = phi %struct.site* [ %incdec.ptr, %for.body9 ], [ %5, %if.end3 ]
  %add108112 = phi double [ %add, %for.body9 ], [ 0.000000e+00, %if.end3 ]
  %add19109111 = phi double [ %add19, %for.body9 ], [ 0.000000e+00, %if.end3 ]
  %7 = bitcast %struct.site* %st.0113 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %idx.ext
  %8 = bitcast i8* %add.ptr to %struct.su3_vector*
  %add.ptr11 = getelementptr inbounds i8, i8* %7, i64 %idx.ext10
  %9 = bitcast i8* %add.ptr11 to %struct.su3_vector*
  %call12 = tail call { double, double } @su3_dot(%struct.su3_vector* %8, %struct.su3_vector* %9) #32
  %10 = extractvalue { double, double } %call12, 0
  %add = fadd double %add108112, %10
  %g_rand14 = getelementptr inbounds %struct.site, %struct.site* %st.0113, i64 0, i32 18
  %call17 = tail call { double, double } @su3_dot(%struct.su3_vector* nonnull %g_rand14, %struct.su3_vector* %9) #32
  %11 = extractvalue { double, double } %call17, 0
  %add19 = fadd double %add19109111, %11
  %inc = add nuw nsw i32 %i.0114, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %st.0113, i64 1
  %12 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %cmp7 = icmp slt i32 %inc, %12
  br i1 %cmp7, label %for.body9, label %for.end.loopexit, !llvm.loop !259

for.end.loopexit:                                 ; preds = %for.body9
  %.pre = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %if.end3
  %13 = phi %struct.site* [ %5, %if.end3 ], [ %.pre, %for.end.loopexit ]
  %add19109.lcssa = phi double [ 0.000000e+00, %if.end3 ], [ %add19, %for.end.loopexit ]
  %add108.lcssa = phi double [ 0.000000e+00, %if.end3 ], [ %add, %for.end.loopexit ]
  %.lcssa = phi i32 [ %6, %if.end3 ], [ %12, %for.end.loopexit ]
  store double %add108.lcssa, double* %rfaction, align 8, !tbaa !11
  store double %add19109.lcssa, double* %rpbp_e, align 8, !tbaa !11
  %14 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp22104 = icmp slt i32 %.lcssa, %14
  br i1 %cmp22104, label %for.body24.preheader, label %for.end35

for.body24.preheader:                             ; preds = %for.end
  %idxprom = sext i32 %.lcssa to i64
  %arrayidx20 = getelementptr inbounds %struct.site, %struct.site* %13, i64 %idxprom
  br label %for.body24

for.body24:                                       ; preds = %for.body24.preheader, %for.body24
  %i.1107 = phi i32 [ %inc33, %for.body24 ], [ %.lcssa, %for.body24.preheader ]
  %st.1106 = phi %struct.site* [ %incdec.ptr34, %for.body24 ], [ %arrayidx20, %for.body24.preheader ]
  %add31103105 = phi double [ %add31, %for.body24 ], [ 0.000000e+00, %for.body24.preheader ]
  %g_rand26 = getelementptr inbounds %struct.site, %struct.site* %st.1106, i64 0, i32 18
  %15 = bitcast %struct.site* %st.1106 to i8*
  %add.ptr28 = getelementptr inbounds i8, i8* %15, i64 %idx.ext10
  %16 = bitcast i8* %add.ptr28 to %struct.su3_vector*
  %call29 = tail call { double, double } @su3_dot(%struct.su3_vector* nonnull %g_rand26, %struct.su3_vector* %16) #32
  %17 = extractvalue { double, double } %call29, 0
  %add31 = fadd double %add31103105, %17
  %inc33 = add nsw i32 %i.1107, 1
  %incdec.ptr34 = getelementptr inbounds %struct.site, %struct.site* %st.1106, i64 1
  %18 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp22 = icmp slt i32 %inc33, %18
  br i1 %cmp22, label %for.body24, label %for.end35, !llvm.loop !260

for.end35:                                        ; preds = %for.body24, %for.end
  %add31103.lcssa = phi double [ 0.000000e+00, %for.end ], [ %add31, %for.body24 ]
  store double %add31103.lcssa, double* %rpbp_o, align 8, !tbaa !11
  call void @g_doublesum(double* nonnull %rpbp_o) #32
  call void @g_doublesum(double* nonnull %rpbp_e) #32
  call void @g_doublesum(double* nonnull %rfaction) #32
  %19 = load i32, i32* @volume, align 4, !tbaa !13
  %conv36 = sitofp i32 %19 to double
  %div = fdiv double 2.000000e+00, %conv36
  %20 = load double, double* %rfaction, align 8, !tbaa !11
  %div41 = fdiv double 1.000000e+00, %conv36
  %mul42 = fmul double %20, %div41
  %21 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp43 = icmp eq i32 %21, 0
  br i1 %cmp43, label %if.end48, label %for.end57

if.end48:                                         ; preds = %for.end35
  %22 = load double, double* %rpbp_e, align 8, !tbaa !11
  %mul39 = fmul double %div, %22
  %23 = load double, double* %rpbp_o, align 8, !tbaa !11
  %mul = fmul double %div, %23
  %call47 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([38 x i8], [38 x i8]* @.str.159, i64 0, i64 0), double %mass, double %mul39, double %mul, i32 1, i32 1) #34
  %.pr = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp49 = icmp eq i32 %.pr, 0
  br i1 %cmp49, label %if.then51, label %for.end57

if.then51:                                        ; preds = %if.end48
  %call53 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1.160, i64 0, i64 0), double %mass, double %mul42, i32 1, i32 1) #34
  br label %for.end57

for.end57:                                        ; preds = %for.end35, %if.end48, %if.then51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @update() local_unnamed_addr #1 {
entry:
  %final_rsq = alloca double, align 8
  %0 = bitcast double* %final_rsq to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  tail call void @ranmom() #32
  %1 = load i32, i32* @steps, align 4, !tbaa !13
  %cmp.not39 = icmp slt i32 %1, 1
  br i1 %cmp.not39, label %cleanup, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %step.041 = phi i32 [ %inc, %for.body ], [ 1, %entry ]
  %iters.040 = phi i32 [ %add, %for.body ], [ 0, %entry ]
  %2 = load double, double* @epsilon, align 8, !tbaa !11
  %3 = load i32, i32* @nflavors, align 4, !tbaa !13
  %conv = sitofp i32 %3 to double
  %div = fmul double %conv, 1.250000e-01
  %sub = fsub double 5.000000e-01, %div
  %mul = fmul double %2, %sub
  call void @update_u(double %mul) #32
  %4 = load double, double* @mass, align 8, !tbaa !11
  call void @grsource_imp(i32 2192, double %4, i32 2) #32
  %5 = load double, double* @epsilon, align 8, !tbaa !11
  %6 = load i32, i32* @nflavors, align 4, !tbaa !13
  %conv3 = sitofp i32 %6 to double
  %mul4 = fmul double %5, %conv3
  %div5 = fmul double %mul4, 1.250000e-01
  call void @update_u(double %div5) #32
  %7 = load double, double* @mass, align 8, !tbaa !11
  %8 = load i32, i32* @niter, align 4, !tbaa !13
  %9 = load double, double* @rsqmin, align 8, !tbaa !11
  %call = call i32 @ks_congrad(i32 2192, i32 2336, double %7, i32 %8, double %9, i32 2, double* nonnull %final_rsq) #32
  %add = add nsw i32 %call, %iters.040
  %10 = load double, double* @epsilon, align 8, !tbaa !11
  call void @update_h(double %10) #32
  %11 = load double, double* @epsilon, align 8, !tbaa !11
  %mul22 = fmul double %11, 5.000000e-01
  call void @update_u(double %mul22) #32
  call void @rephase(i32 0) #32
  call void @reunitarize() #32
  call void @rephase(i32 1) #32
  %inc = add nuw nsw i32 %step.041, 1
  %12 = load i32, i32* @steps, align 4, !tbaa !13
  %cmp.not.not = icmp slt i32 %step.041, %12
  br i1 %cmp.not.not, label %for.body, label %for.end, !llvm.loop !261

for.end:                                          ; preds = %for.body
  %cmp23 = icmp sgt i32 %12, 0
  br i1 %cmp23, label %if.then, label %cleanup

if.then:                                          ; preds = %for.end
  %div25 = sdiv i32 %add, %12
  br label %cleanup

cleanup:                                          ; preds = %entry, %for.end, %if.then
  %retval.0 = phi i32 [ %div25, %if.then ], [ -99, %for.end ], [ -99, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @ks_congrad(i32 %src, i32 %dest, double %mass, i32 %niter, double %rsqmin, i32 %parity, double* nocapture %final_rsq_ptr) local_unnamed_addr #1 {
entry:
  %rsq = alloca double, align 8
  %pkp = alloca double, align 8
  %source_norm = alloca double, align 8
  %tags1 = alloca [16 x %struct.msg_tag*], align 16
  %tags2 = alloca [16 x %struct.msg_tag*], align 16
  %0 = bitcast double* %rsq to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %1 = bitcast double* %pkp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #31
  %2 = bitcast double* %source_norm to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #31
  %3 = bitcast [16 x %struct.msg_tag*]* %tags1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %3) #31
  %4 = bitcast [16 x %struct.msg_tag*]* %tags2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #31
  %cond354 = icmp eq i32 %parity, 1
  %spec.select = select i1 %cond354, i32 1, i32 2
  %spec.select355 = select i1 %cond354, i32 2, i32 1
  %5 = load i32, i32* @valid_longlinks, align 4, !tbaa !13
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.then5, label %if.end6

if.then5:                                         ; preds = %entry
  tail call void (...) bitcast (void ()* @load_longlinks to void (...)*)() #32
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %entry
  %6 = load i32, i32* @valid_fatlinks, align 4, !tbaa !13
  %tobool7.not = icmp eq i32 %6, 0
  br i1 %tobool7.not, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end6
  tail call void (...) bitcast (void ()* @load_fatlinks to void (...)*)() #32
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end6
  %arraydecay = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tags1, i64 0, i64 0
  %arraydecay12 = getelementptr inbounds [16 x %struct.msg_tag*], [16 x %struct.msg_tag*]* %tags2, i64 0, i64 0
  %idx.ext = sext i32 %dest to i64
  %7 = fmul double %mass, -4.000000e+00
  %fneg = fmul double %7, %mass
  %idx.ext42 = sext i32 %src to i64
  %mul232 = mul nsw i32 %niter, 5
  br label %start.outer

start.outer:                                      ; preds = %start.outer.backedge, %if.end9
  %l_parity.1.ph = phi i32 [ %spec.select, %if.end9 ], [ 1, %start.outer.backedge ]
  %l_otherparity.1.ph = phi i32 [ %spec.select355, %if.end9 ], [ 2, %start.outer.backedge ]
  %cmp10.ph = phi i1 [ false, %if.end9 ], [ %cmp10.ph.be, %start.outer.backedge ]
  %parity.addr.0.ph = phi i32 [ %parity, %if.end9 ], [ 2, %start.outer.backedge ]
  %cmp29 = icmp eq i32 %l_parity.1.ph, 2
  %cmp31 = icmp eq i32 %l_parity.1.ph, 1
  br label %start

start:                                            ; preds = %start.outer, %do.end
  %iteration.0 = phi i32 [ %inc157, %do.end ], [ 0, %start.outer ]
  %cmp10 = phi i1 [ true, %do.end ], [ %cmp10.ph, %start.outer ]
  br i1 %cmp10, label %if.then11, label %if.end13

if.then11:                                        ; preds = %start
  call void @cleanup_gathers(%struct.msg_tag** nonnull %arraydecay, %struct.msg_tag** nonnull %arraydecay12) #32
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %start
  store double 0.000000e+00, double* %source_norm, align 8, !tbaa !11
  store double 0.000000e+00, double* %rsq, align 8, !tbaa !11
  call void @dslash_fn(i32 %dest, i32 2384, i32 %l_otherparity.1.ph) #32
  call void @dslash_fn(i32 2384, i32 2384, i32 %l_parity.1.ph) #32
  %8 = load i32, i32* @even_sites_on_node, align 4
  %9 = load i32, i32* @sites_on_node, align 4
  %cond = select i1 %cmp29, i32 %8, i32 %9
  %cond36 = select i1 %cmp31, i32 %8, i32 0
  %cmp38366 = icmp slt i32 %cond36, %cond
  br i1 %cmp38366, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %if.end13
  %10 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom = sext i32 %cond36 to i64
  %arrayidx37 = getelementptr inbounds %struct.site, %struct.site* %10, i64 %idxprom
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %i.0368 = phi i32 [ %inc, %for.body ], [ %cond36, %for.body.preheader ]
  %s.0367 = phi %struct.site* [ %incdec.ptr, %for.body ], [ %arrayidx37, %for.body.preheader ]
  %ttt40 = getelementptr inbounds %struct.site, %struct.site* %s.0367, i64 0, i32 17
  %11 = bitcast %struct.site* %s.0367 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext
  %12 = bitcast i8* %add.ptr to %struct.su3_vector*
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* nonnull %ttt40, %struct.su3_vector* %12, double %fneg, %struct.su3_vector* nonnull %ttt40) #32
  %add.ptr43 = getelementptr inbounds i8, i8* %11, i64 %idx.ext42
  %13 = bitcast i8* %add.ptr43 to %struct.su3_vector*
  %resid = getelementptr inbounds %struct.site, %struct.site* %s.0367, i64 0, i32 14
  call void @add_su3_vector(%struct.su3_vector* %13, %struct.su3_vector* nonnull %ttt40, %struct.su3_vector* nonnull %resid) #32
  %cg_p = getelementptr inbounds %struct.site, %struct.site* %s.0367, i64 0, i32 15
  %14 = bitcast %struct.su3_vector* %cg_p to i8*
  %15 = bitcast %struct.su3_vector* %resid to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %14, i8* noundef nonnull align 8 dereferenceable(48) %15, i64 48, i1 false), !tbaa.struct !262
  %call = call double @magsq_su3vec(%struct.su3_vector* %13) #32
  %16 = load double, double* %source_norm, align 8, !tbaa !11
  %add = fadd double %call, %16
  store double %add, double* %source_norm, align 8, !tbaa !11
  %call49 = call double @magsq_su3vec(%struct.su3_vector* nonnull %resid) #32
  %17 = load double, double* %rsq, align 8, !tbaa !11
  %add50 = fadd double %call49, %17
  store double %add50, double* %rsq, align 8, !tbaa !11
  %inc = add i32 %i.0368, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0367, i64 1
  %exitcond.not = icmp eq i32 %inc, %cond
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !263

for.end:                                          ; preds = %for.body, %if.end13
  call void @g_doublesum(double* nonnull %source_norm) #32
  call void @g_doublesum(double* nonnull %rsq) #32
  %inc51 = add nsw i32 %iteration.0, 1
  %18 = load i32, i32* @total_iters, align 4, !tbaa !13
  %inc52 = add nsw i32 %18, 1
  store i32 %inc52, i32* @total_iters, align 4, !tbaa !13
  %19 = load double, double* %source_norm, align 8, !tbaa !11
  %mul53 = fmul double %19, %rsqmin
  %20 = load double, double* %rsq, align 8, !tbaa !11
  %cmp54 = fcmp ugt double %20, %mul53
  br i1 %cmp54, label %do.body, label %if.then56

if.then56:                                        ; preds = %for.end
  %cmp57 = icmp eq i32 %parity.addr.0.ph, 3
  br i1 %cmp57, label %start.outer.backedge, label %if.end60

start.outer.backedge:                             ; preds = %if.then56, %if.then196, %if.end236
  %cmp10.ph.be = phi i1 [ false, %if.then56 ], [ true, %if.then196 ], [ true, %if.end236 ]
  br label %start.outer

if.end60:                                         ; preds = %if.then56
  store double %20, double* %final_rsq_ptr, align 8, !tbaa !11
  br label %cleanup

do.body:                                          ; preds = %for.end, %if.end207.do.body_crit_edge
  %21 = phi double [ %.pre, %if.end207.do.body_crit_edge ], [ %20, %for.end ]
  %iteration.1 = phi i32 [ %inc157, %if.end207.do.body_crit_edge ], [ %inc51, %for.end ]
  %cmp62 = phi i32 [ 0, %if.end207.do.body_crit_edge ], [ 1, %for.end ]
  store double 0.000000e+00, double* %pkp, align 8, !tbaa !11
  call void @dslash_fn_special(i32 2288, i32 2384, i32 %l_otherparity.1.ph, %struct.msg_tag** nonnull %arraydecay12, i32 %cmp62) #32
  call void @dslash_fn_special(i32 2384, i32 2384, i32 %l_parity.1.ph, %struct.msg_tag** nonnull %arraydecay, i32 %cmp62) #32
  store double 0.000000e+00, double* %pkp, align 8, !tbaa !11
  %22 = load i32, i32* @even_sites_on_node, align 4
  %23 = load i32, i32* @sites_on_node, align 4
  %cond132 = select i1 %cmp29, i32 %22, i32 %23
  %cond138 = select i1 %cmp31, i32 %22, i32 0
  %cmp142369 = icmp slt i32 %cond138, %cond132
  br i1 %cmp142369, label %for.body144.preheader, label %for.end156

for.body144.preheader:                            ; preds = %do.body
  %24 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom139 = sext i32 %cond138 to i64
  %arrayidx140 = getelementptr inbounds %struct.site, %struct.site* %24, i64 %idxprom139
  br label %for.body144

for.body144:                                      ; preds = %for.body144.preheader, %for.body144
  %i.1371 = phi i32 [ %inc154, %for.body144 ], [ %cond138, %for.body144.preheader ]
  %s.1370 = phi %struct.site* [ %incdec.ptr155, %for.body144 ], [ %arrayidx140, %for.body144.preheader ]
  %ttt145 = getelementptr inbounds %struct.site, %struct.site* %s.1370, i64 0, i32 17
  %cg_p146 = getelementptr inbounds %struct.site, %struct.site* %s.1370, i64 0, i32 15
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* nonnull %ttt145, %struct.su3_vector* nonnull %cg_p146, double %fneg, %struct.su3_vector* nonnull %ttt145) #32
  %call151 = call double @su3_rdot(%struct.su3_vector* nonnull %cg_p146, %struct.su3_vector* nonnull %ttt145) #32
  %25 = load double, double* %pkp, align 8, !tbaa !11
  %add152 = fadd double %call151, %25
  store double %add152, double* %pkp, align 8, !tbaa !11
  %inc154 = add i32 %i.1371, 1
  %incdec.ptr155 = getelementptr inbounds %struct.site, %struct.site* %s.1370, i64 1
  %exitcond385.not = icmp eq i32 %inc154, %cond132
  br i1 %exitcond385.not, label %for.end156, label %for.body144, !llvm.loop !264

for.end156:                                       ; preds = %for.body144, %do.body
  call void @g_doublesum(double* nonnull %pkp) #32
  %inc157 = add nsw i32 %iteration.1, 1
  %26 = load i32, i32* @total_iters, align 4, !tbaa !13
  %inc158 = add nsw i32 %26, 1
  store i32 %inc158, i32* @total_iters, align 4, !tbaa !13
  %27 = load double, double* %rsq, align 8, !tbaa !11
  %fneg159 = fneg double %27
  %28 = load double, double* %pkp, align 8, !tbaa !11
  %div = fdiv double %fneg159, %28
  store double 0.000000e+00, double* %rsq, align 8, !tbaa !11
  %29 = load i32, i32* @even_sites_on_node, align 4
  %30 = load i32, i32* @sites_on_node, align 4
  %cond166 = select i1 %cmp29, i32 %29, i32 %30
  %cond172 = select i1 %cmp31, i32 %29, i32 0
  %cmp176372 = icmp slt i32 %cond172, %cond166
  br i1 %cmp176372, label %for.body178.preheader, label %for.end193

for.body178.preheader:                            ; preds = %for.end156
  %31 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom173 = sext i32 %cond172 to i64
  %arrayidx174 = getelementptr inbounds %struct.site, %struct.site* %31, i64 %idxprom173
  br label %for.body178

for.body178:                                      ; preds = %for.body178.preheader, %for.body178
  %i.2374 = phi i32 [ %inc191, %for.body178 ], [ %cond172, %for.body178.preheader ]
  %s.2373 = phi %struct.site* [ %incdec.ptr192, %for.body178 ], [ %arrayidx174, %for.body178.preheader ]
  %32 = bitcast %struct.site* %s.2373 to i8*
  %add.ptr180 = getelementptr inbounds i8, i8* %32, i64 %idx.ext
  %33 = bitcast i8* %add.ptr180 to %struct.su3_vector*
  %cg_p181 = getelementptr inbounds %struct.site, %struct.site* %s.2373, i64 0, i32 15
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %33, %struct.su3_vector* nonnull %cg_p181, double %div, %struct.su3_vector* %33) #32
  %resid184 = getelementptr inbounds %struct.site, %struct.site* %s.2373, i64 0, i32 14
  %ttt185 = getelementptr inbounds %struct.site, %struct.site* %s.2373, i64 0, i32 17
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* nonnull %resid184, %struct.su3_vector* nonnull %ttt185, double %div, %struct.su3_vector* nonnull %resid184) #32
  %call188 = call double @magsq_su3vec(%struct.su3_vector* nonnull %resid184) #32
  %34 = load double, double* %rsq, align 8, !tbaa !11
  %add189 = fadd double %call188, %34
  store double %add189, double* %rsq, align 8, !tbaa !11
  %inc191 = add i32 %i.2374, 1
  %incdec.ptr192 = getelementptr inbounds %struct.site, %struct.site* %s.2373, i64 1
  %exitcond386.not = icmp eq i32 %inc191, %cond166
  br i1 %exitcond386.not, label %for.end193, label %for.body178, !llvm.loop !265

for.end193:                                       ; preds = %for.body178, %for.end156
  call void @g_doublesum(double* nonnull %rsq) #32
  %35 = load double, double* %rsq, align 8, !tbaa !11
  %cmp194 = fcmp ugt double %35, %mul53
  br i1 %cmp194, label %if.end207, label %if.then196

if.then196:                                       ; preds = %for.end193
  %cmp197 = icmp eq i32 %parity.addr.0.ph, 3
  br i1 %cmp197, label %start.outer.backedge, label %if.end200

if.end200:                                        ; preds = %if.then196
  store double %35, double* %final_rsq_ptr, align 8, !tbaa !11
  call void @cleanup_gathers(%struct.msg_tag** nonnull %arraydecay, %struct.msg_tag** nonnull %arraydecay12) #32
  br label %cleanup

if.end207:                                        ; preds = %for.end193
  %div208 = fdiv double %35, %21
  call void @scalar_mult_add_latvec(i32 2240, i32 2288, double %div208, i32 2288, i32 %l_parity.1.ph) #34
  %rem = srem i32 %inc157, %niter
  %cmp230.not = icmp eq i32 %rem, 0
  br i1 %cmp230.not, label %do.end, label %if.end207.do.body_crit_edge, !llvm.loop !266

if.end207.do.body_crit_edge:                      ; preds = %if.end207
  %.pre = load double, double* %rsq, align 8, !tbaa !11
  br label %do.body

do.end:                                           ; preds = %if.end207
  %cmp233 = icmp slt i32 %inc157, %mul232
  br i1 %cmp233, label %start, label %if.end236

if.end236:                                        ; preds = %do.end
  %cmp237 = icmp eq i32 %parity.addr.0.ph, 3
  br i1 %cmp237, label %start.outer.backedge, label %if.end240

if.end240:                                        ; preds = %if.end236
  %36 = load double, double* %rsq, align 8, !tbaa !11
  store double %36, double* %final_rsq_ptr, align 8, !tbaa !11
  call void @cleanup_gathers(%struct.msg_tag** nonnull %arraydecay, %struct.msg_tag** nonnull %arraydecay12) #32
  %37 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp247 = icmp eq i32 %37, 0
  br i1 %cmp247, label %if.then249, label %if.end251

if.then249:                                       ; preds = %if.end240
  %38 = load double, double* %rsq, align 8, !tbaa !11
  %call250 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([59 x i8], [59 x i8]* @.str.165, i64 0, i64 0), i32 %inc157, double %38, double %mul53) #34
  br label %if.end251

if.end251:                                        ; preds = %if.then249, %if.end240
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call252 = call i32 @fflush(%struct._IO_FILE* %39) #34
  br label %cleanup

cleanup:                                          ; preds = %if.end251, %if.end200, %if.end60
  %retval.0 = phi i32 [ %inc51, %if.end60 ], [ %inc157, %if.end200 ], [ %inc157, %if.end251 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #31
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %3) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define void @scalar_mult_add_latvec(i32 %src1, i32 %src2, double %scalar, i32 %dest, i32 %parity) local_unnamed_addr #1 {
entry:
  %cmp = icmp eq i32 %parity, 2
  %0 = load i32, i32* @even_sites_on_node, align 4
  %1 = load i32, i32* @sites_on_node, align 4
  %cond = select i1 %cmp, i32 %0, i32 %1
  %cmp1 = icmp eq i32 %parity, 1
  %cond5 = select i1 %cmp1, i32 %0, i32 0
  %idx.ext = sext i32 %src1 to i64
  %idx.ext7 = sext i32 %src2 to i64
  %idx.ext9 = sext i32 %dest to i64
  %cmp623 = icmp slt i32 %cond5, %cond
  br i1 %cmp623, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %2 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom = sext i32 %cond5 to i64
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %2, i64 %idxprom
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %i.025 = phi i32 [ %inc, %for.body ], [ %cond5, %for.body.preheader ]
  %s.024 = phi %struct.site* [ %incdec.ptr, %for.body ], [ %arrayidx, %for.body.preheader ]
  %3 = bitcast %struct.site* %s.024 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext
  %4 = bitcast i8* %add.ptr to %struct.su3_vector*
  %add.ptr8 = getelementptr inbounds i8, i8* %3, i64 %idx.ext7
  %5 = bitcast i8* %add.ptr8 to %struct.su3_vector*
  %add.ptr10 = getelementptr inbounds i8, i8* %3, i64 %idx.ext9
  %6 = bitcast i8* %add.ptr10 to %struct.su3_vector*
  tail call void @scalar_mult_add_su3_vector(%struct.su3_vector* %4, %struct.su3_vector* %5, double %scalar, %struct.su3_vector* %6) #32
  %inc = add i32 %i.025, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.024, i64 1
  %exitcond.not = icmp eq i32 %inc, %cond
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !267

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @clear_latvec(i32 %v, i32 %parity) local_unnamed_addr #10 {
entry:
  switch i32 %parity, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb10
    i32 3, label %sw.bb36
  ]

sw.bb:                                            ; preds = %entry
  %0 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %1 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %idx.ext = sext i32 %v to i64
  %cmp96 = icmp sgt i32 %1, 0
  br i1 %cmp96, label %for.body.preheader, label %sw.epilog

for.body.preheader:                               ; preds = %sw.bb
  %wide.trip.count = zext i32 %1 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvar = phi i64 [ 0, %for.body.preheader ], [ %indvar.next, %for.body ]
  %scevgep = getelementptr %struct.site, %struct.site* %0, i64 %indvar, i32 0
  %scevgep109 = bitcast i16* %scevgep to i8*
  %uglygep = getelementptr i8, i8* %scevgep109, i64 %idx.ext
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %uglygep, i8 0, i64 48, i1 false)
  %indvar.next = add nuw nsw i64 %indvar, 1
  %exitcond.not = icmp eq i64 %indvar.next, %wide.trip.count
  br i1 %exitcond.not, label %sw.epilog, label %for.body, !llvm.loop !268

sw.bb10:                                          ; preds = %entry
  %2 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %3 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom11 = sext i32 %2 to i64
  %4 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %idx.ext16 = sext i32 %v to i64
  %cmp14100 = icmp sgt i32 %4, %2
  br i1 %cmp14100, label %for.body15.preheader, label %sw.epilog

for.body15.preheader:                             ; preds = %sw.bb10
  %5 = sub i32 %4, %2
  br label %for.body15

for.body15:                                       ; preds = %for.body15.preheader, %for.body15
  %indvar110 = phi i64 [ 0, %for.body15.preheader ], [ %indvar.next111, %for.body15 ]
  %6 = add nsw i64 %indvar110, %idxprom11
  %scevgep112 = getelementptr %struct.site, %struct.site* %3, i64 %6, i32 0
  %scevgep112113 = bitcast i16* %scevgep112 to i8*
  %uglygep114 = getelementptr i8, i8* %scevgep112113, i64 %idx.ext16
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %uglygep114, i8 0, i64 48, i1 false)
  %indvar.next111 = add nuw nsw i64 %indvar110, 1
  %lftr.wideiv = trunc i64 %indvar.next111 to i32
  %exitcond115.not = icmp eq i32 %5, %lftr.wideiv
  br i1 %exitcond115.not, label %sw.epilog, label %for.body15, !llvm.loop !269

sw.bb36:                                          ; preds = %entry
  %7 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %8 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %idx.ext40 = sext i32 %v to i64
  %cmp38104 = icmp sgt i32 %8, 0
  br i1 %cmp38104, label %for.body39.preheader, label %sw.epilog

for.body39.preheader:                             ; preds = %sw.bb36
  %wide.trip.count121 = zext i32 %8 to i64
  br label %for.body39

for.body39:                                       ; preds = %for.body39.preheader, %for.body39
  %indvar116 = phi i64 [ 0, %for.body39.preheader ], [ %indvar.next117, %for.body39 ]
  %scevgep118 = getelementptr %struct.site, %struct.site* %7, i64 %indvar116, i32 0
  %scevgep118119 = bitcast i16* %scevgep118 to i8*
  %uglygep120 = getelementptr i8, i8* %scevgep118119, i64 %idx.ext40
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %uglygep120, i8 0, i64 48, i1 false)
  %indvar.next117 = add nuw nsw i64 %indvar116, 1
  %exitcond122.not = icmp eq i64 %indvar.next117, %wide.trip.count121
  br i1 %exitcond122.not, label %sw.epilog, label %for.body39, !llvm.loop !270

sw.epilog:                                        ; preds = %for.body39, %for.body15, %for.body, %sw.bb36, %sw.bb10, %sw.bb, %entry
  ret void
}

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @copy_latvec(i32 %src, i32 %dest, i32 %parity) local_unnamed_addr #4 {
entry:
  switch i32 %parity, label %sw.epilog [
    i32 2, label %for.cond.preheader
    i32 1, label %sw.bb3
    i32 3, label %for.cond20.preheader
  ]

for.cond20.preheader:                             ; preds = %entry
  %idx.ext25 = sext i32 %src to i64
  %idx.ext27 = sext i32 %dest to i64
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp2168 = icmp sgt i32 %0, 0
  br i1 %cmp2168, label %for.body22, label %sw.epilog

for.cond.preheader:                               ; preds = %entry
  %idx.ext = sext i32 %src to i64
  %idx.ext1 = sext i32 %dest to i64
  %1 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %cmp64 = icmp sgt i32 %1, 0
  br i1 %cmp64, label %for.body, label %sw.epilog

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %2 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %2, i64 %indvars.iv
  %3 = bitcast %struct.site* %arrayidx to i8*
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext
  %add.ptr2 = getelementptr inbounds i8, i8* %3, i64 %idx.ext1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %add.ptr2, i8* noundef nonnull align 8 dereferenceable(48) %add.ptr, i64 48, i1 false), !tbaa.struct !262
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %4 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %5 = sext i32 %4 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %5
  br i1 %cmp, label %for.body, label %sw.epilog, !llvm.loop !271

sw.bb3:                                           ; preds = %entry
  %6 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %idx.ext11 = sext i32 %src to i64
  %idx.ext13 = sext i32 %dest to i64
  %7 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp766 = icmp slt i32 %6, %7
  br i1 %cmp766, label %for.body8.preheader, label %sw.epilog

for.body8.preheader:                              ; preds = %sw.bb3
  %8 = sext i32 %6 to i64
  br label %for.body8

for.body8:                                        ; preds = %for.body8.preheader, %for.body8
  %indvars.iv72 = phi i64 [ %8, %for.body8.preheader ], [ %indvars.iv.next73, %for.body8 ]
  %9 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx10 = getelementptr inbounds %struct.site, %struct.site* %9, i64 %indvars.iv72
  %10 = bitcast %struct.site* %arrayidx10 to i8*
  %add.ptr12 = getelementptr inbounds i8, i8* %10, i64 %idx.ext11
  %add.ptr14 = getelementptr inbounds i8, i8* %10, i64 %idx.ext13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %add.ptr14, i8* noundef nonnull align 8 dereferenceable(48) %add.ptr12, i64 48, i1 false), !tbaa.struct !262
  %indvars.iv.next73 = add nsw i64 %indvars.iv72, 1
  %11 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %12 = sext i32 %11 to i64
  %cmp7 = icmp slt i64 %indvars.iv.next73, %12
  br i1 %cmp7, label %for.body8, label %sw.epilog, !llvm.loop !272

for.body22:                                       ; preds = %for.cond20.preheader, %for.body22
  %indvars.iv74 = phi i64 [ %indvars.iv.next75, %for.body22 ], [ 0, %for.cond20.preheader ]
  %13 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx24 = getelementptr inbounds %struct.site, %struct.site* %13, i64 %indvars.iv74
  %14 = bitcast %struct.site* %arrayidx24 to i8*
  %add.ptr26 = getelementptr inbounds i8, i8* %14, i64 %idx.ext25
  %add.ptr28 = getelementptr inbounds i8, i8* %14, i64 %idx.ext27
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %add.ptr28, i8* noundef nonnull align 8 dereferenceable(48) %add.ptr26, i64 48, i1 false), !tbaa.struct !262
  %indvars.iv.next75 = add nuw nsw i64 %indvars.iv74, 1
  %15 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %16 = sext i32 %15 to i64
  %cmp21 = icmp slt i64 %indvars.iv.next75, %16
  br i1 %cmp21, label %for.body22, label %sw.epilog, !llvm.loop !273

sw.epilog:                                        ; preds = %for.body22, %for.body8, %for.body, %for.cond20.preheader, %sw.bb3, %for.cond.preheader, %entry
  ret void
}

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @scalar2_mult_add_su3_vector(%struct.su3_vector* nocapture readonly %a, double %s1, %struct.su3_vector* nocapture readonly %b, double %s2, %struct.su3_vector* nocapture %c) local_unnamed_addr #4 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %real = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %real5 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 %indvars.iv, i32 0
  %1 = load double, double* %real5, align 8, !tbaa !4
  %mul6 = fmul double %1, %s2
  %2 = tail call double @llvm.fmuladd.f64(double %s1, double %0, double %mul6)
  %real10 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 0
  store double %2, double* %real10, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 1
  %3 = load double, double* %imag, align 8, !tbaa !9
  %imag17 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 %indvars.iv, i32 1
  %4 = load double, double* %imag17, align 8, !tbaa !9
  %mul18 = fmul double %4, %s2
  %5 = tail call double @llvm.fmuladd.f64(double %s1, double %3, double %mul18)
  %imag22 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 1
  store double %5, double* %imag22, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !274

for.end:                                          ; preds = %for.body
  ret void
}

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @scalar2_mult_add_latvec(i32 %src1, double %scalar1, i32 %src2, double %scalar2, i32 %dest, i32 %parity) local_unnamed_addr #4 {
entry:
  %cmp = icmp eq i32 %parity, 2
  %0 = load i32, i32* @even_sites_on_node, align 4
  %1 = load i32, i32* @sites_on_node, align 4
  %cond = select i1 %cmp, i32 %0, i32 %1
  %cmp1 = icmp eq i32 %parity, 1
  %cond5 = select i1 %cmp1, i32 %0, i32 0
  %idx.ext = sext i32 %src1 to i64
  %idx.ext7 = sext i32 %src2 to i64
  %idx.ext9 = sext i32 %dest to i64
  %cmp623 = icmp slt i32 %cond5, %cond
  br i1 %cmp623, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %2 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom = sext i32 %cond5 to i64
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %2, i64 %idxprom
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %i.025 = phi i32 [ %inc, %for.body ], [ %cond5, %for.body.preheader ]
  %s.024 = phi %struct.site* [ %incdec.ptr, %for.body ], [ %arrayidx, %for.body.preheader ]
  %3 = bitcast %struct.site* %s.024 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext
  %4 = bitcast i8* %add.ptr to %struct.su3_vector*
  %add.ptr8 = getelementptr inbounds i8, i8* %3, i64 %idx.ext7
  %5 = bitcast i8* %add.ptr8 to %struct.su3_vector*
  %add.ptr10 = getelementptr inbounds i8, i8* %3, i64 %idx.ext9
  %6 = bitcast i8* %add.ptr10 to %struct.su3_vector*
  tail call void @scalar2_mult_add_su3_vector(%struct.su3_vector* %4, double %scalar1, %struct.su3_vector* %5, double %scalar2, %struct.su3_vector* %6) #34
  %inc = add i32 %i.025, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.024, i64 1
  %exitcond.not = icmp eq i32 %inc, %cond
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !275

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @scalar_mult_latvec(i32 %src, double %scalar, i32 %dest, i32 %parity) local_unnamed_addr #1 {
entry:
  switch i32 %parity, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb3
    i32 3, label %sw.bb15
  ]

sw.bb:                                            ; preds = %entry
  %idx.ext = sext i32 %src to i64
  %idx.ext1 = sext i32 %dest to i64
  %0 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %cmp57 = icmp sgt i32 %0, 0
  br i1 %cmp57, label %for.body.preheader, label %sw.epilog

for.body.preheader:                               ; preds = %sw.bb
  %1 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %s.059 = phi %struct.site* [ %incdec.ptr, %for.body ], [ %1, %for.body.preheader ]
  %i.058 = phi i32 [ %inc, %for.body ], [ 0, %for.body.preheader ]
  %2 = bitcast %struct.site* %s.059 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext
  %3 = bitcast i8* %add.ptr to %struct.su3_vector*
  %add.ptr2 = getelementptr inbounds i8, i8* %2, i64 %idx.ext1
  %4 = bitcast i8* %add.ptr2 to %struct.su3_vector*
  tail call void @scalar_mult_su3_vector(%struct.su3_vector* %3, double %scalar, %struct.su3_vector* %4) #32
  %inc = add nuw nsw i32 %i.058, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.059, i64 1
  %5 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %cmp = icmp slt i32 %inc, %5
  br i1 %cmp, label %for.body, label %sw.epilog, !llvm.loop !276

sw.bb3:                                           ; preds = %entry
  %6 = load i32, i32* @even_sites_on_node, align 4, !tbaa !13
  %idx.ext7 = sext i32 %src to i64
  %idx.ext9 = sext i32 %dest to i64
  %7 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp560 = icmp slt i32 %6, %7
  br i1 %cmp560, label %for.body6.preheader, label %sw.epilog

for.body6.preheader:                              ; preds = %sw.bb3
  %8 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %8, i64 %idxprom
  br label %for.body6

for.body6:                                        ; preds = %for.body6.preheader, %for.body6
  %s.162 = phi %struct.site* [ %incdec.ptr13, %for.body6 ], [ %arrayidx, %for.body6.preheader ]
  %i.161 = phi i32 [ %inc12, %for.body6 ], [ %6, %for.body6.preheader ]
  %9 = bitcast %struct.site* %s.162 to i8*
  %add.ptr8 = getelementptr inbounds i8, i8* %9, i64 %idx.ext7
  %10 = bitcast i8* %add.ptr8 to %struct.su3_vector*
  %add.ptr10 = getelementptr inbounds i8, i8* %9, i64 %idx.ext9
  %11 = bitcast i8* %add.ptr10 to %struct.su3_vector*
  tail call void @scalar_mult_su3_vector(%struct.su3_vector* %10, double %scalar, %struct.su3_vector* %11) #32
  %inc12 = add nsw i32 %i.161, 1
  %incdec.ptr13 = getelementptr inbounds %struct.site, %struct.site* %s.162, i64 1
  %12 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp5 = icmp slt i32 %inc12, %12
  br i1 %cmp5, label %for.body6, label %sw.epilog, !llvm.loop !277

sw.bb15:                                          ; preds = %entry
  %idx.ext19 = sext i32 %src to i64
  %idx.ext21 = sext i32 %dest to i64
  %13 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp1763 = icmp sgt i32 %13, 0
  br i1 %cmp1763, label %for.body18.preheader, label %sw.epilog

for.body18.preheader:                             ; preds = %sw.bb15
  %14 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body18

for.body18:                                       ; preds = %for.body18.preheader, %for.body18
  %s.265 = phi %struct.site* [ %incdec.ptr25, %for.body18 ], [ %14, %for.body18.preheader ]
  %i.264 = phi i32 [ %inc24, %for.body18 ], [ 0, %for.body18.preheader ]
  %15 = bitcast %struct.site* %s.265 to i8*
  %add.ptr20 = getelementptr inbounds i8, i8* %15, i64 %idx.ext19
  %16 = bitcast i8* %add.ptr20 to %struct.su3_vector*
  %add.ptr22 = getelementptr inbounds i8, i8* %15, i64 %idx.ext21
  %17 = bitcast i8* %add.ptr22 to %struct.su3_vector*
  tail call void @scalar_mult_su3_vector(%struct.su3_vector* %16, double %scalar, %struct.su3_vector* %17) #32
  %inc24 = add nuw nsw i32 %i.264, 1
  %incdec.ptr25 = getelementptr inbounds %struct.site, %struct.site* %s.265, i64 1
  %18 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp17 = icmp slt i32 %inc24, %18
  br i1 %cmp17, label %for.body18, label %sw.epilog, !llvm.loop !278

sw.epilog:                                        ; preds = %for.body18, %for.body6, %for.body, %sw.bb15, %sw.bb3, %sw.bb, %entry
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @mult_su3_nn(%struct.su3_matrix* nocapture readonly %a, %struct.su3_matrix* nocapture readonly %b, %struct.su3_matrix* nocapture %c) local_unnamed_addr #10 {
entry:
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %entry, %for.inc90
  %indvars.iv172 = phi i64 [ 0, %entry ], [ %indvars.iv.next173, %for.inc90 ]
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv172, i64 0, i32 0
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv172, i64 0, i32 1
  %real26 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv172, i64 1, i32 0
  %imag31 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv172, i64 1, i32 1
  %real54 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv172, i64 2, i32 0
  %imag59 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 %indvars.iv172, i64 2, i32 1
  br label %for.body3

for.body3:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  %0 = load double, double* %real, align 8, !tbaa !4
  %1 = load double, double* %imag, align 8, !tbaa !9
  %real13 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 0, i64 %indvars.iv, i32 0
  %2 = load double, double* %real13, align 8, !tbaa !4
  %imag18 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 0, i64 %indvars.iv, i32 1
  %3 = load double, double* %imag18, align 8, !tbaa !9
  %mul = fmul double %0, %2
  %mul19 = fmul double %1, %3
  %sub = fsub double %mul, %mul19
  %mul20 = fmul double %0, %3
  %mul21 = fmul double %1, %2
  %add = fadd double %mul21, %mul20
  %4 = load double, double* %real26, align 8, !tbaa !4
  %5 = load double, double* %imag31, align 8, !tbaa !9
  %real36 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 1, i64 %indvars.iv, i32 0
  %6 = load double, double* %real36, align 8, !tbaa !4
  %imag41 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 1, i64 %indvars.iv, i32 1
  %7 = load double, double* %imag41, align 8, !tbaa !9
  %mul42 = fmul double %4, %6
  %add43 = fadd double %sub, %mul42
  %mul44 = fmul double %5, %7
  %sub45 = fsub double %add43, %mul44
  %mul46 = fmul double %4, %7
  %add47 = fadd double %add, %mul46
  %mul48 = fmul double %5, %6
  %add49 = fadd double %mul48, %add47
  %8 = load double, double* %real54, align 8, !tbaa !4
  %9 = load double, double* %imag59, align 8, !tbaa !9
  %real64 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 2, i64 %indvars.iv, i32 0
  %10 = load double, double* %real64, align 8, !tbaa !4
  %imag69 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %b, i64 0, i32 0, i64 2, i64 %indvars.iv, i32 1
  %11 = load double, double* %imag69, align 8, !tbaa !9
  %mul70 = fmul double %8, %10
  %add71 = fadd double %sub45, %mul70
  %mul72 = fmul double %9, %11
  %sub73 = fsub double %add71, %mul72
  %mul74 = fmul double %8, %11
  %add75 = fadd double %add49, %mul74
  %mul76 = fmul double %9, %10
  %add77 = fadd double %mul76, %add75
  %real83 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv172, i64 %indvars.iv, i32 0
  store double %sub73, double* %real83, align 8, !tbaa !4
  %imag89 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv172, i64 %indvars.iv, i32 1
  store double %add77, double* %imag89, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc90, label %for.body3, !llvm.loop !279

for.inc90:                                        ; preds = %for.body3
  %indvars.iv.next173 = add nuw nsw i64 %indvars.iv172, 1
  %exitcond174.not = icmp eq i64 %indvars.iv.next173, 3
  br i1 %exitcond174.not, label %for.end92, label %for.cond1.preheader, !llvm.loop !280

for.end92:                                        ; preds = %for.inc90
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn writeonly
define void @initialize_prn(%struct.double_prn* nocapture %prn_pt, i32 %seed, i32 %index) local_unnamed_addr #20 {
entry:
  %mul = shl nsw i32 %index, 3
  %add = add nsw i32 %mul, 69607
  %mul1 = mul nsw i32 %add, %seed
  %add2 = add nsw i32 %mul1, 12345
  %0 = lshr i32 %add2, 8
  %1 = zext i32 %0 to i64
  %r0 = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 0
  store i64 %1, i64* %r0, align 8, !tbaa !281
  %mul5 = mul nsw i32 %add2, %add
  %add6 = add nsw i32 %mul5, 12345
  %2 = lshr i32 %add6, 8
  %3 = zext i32 %2 to i64
  %r1 = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 1
  store i64 %3, i64* %r1, align 8, !tbaa !282
  %mul12 = mul nsw i32 %add6, %add
  %add13 = add nsw i32 %mul12, 12345
  %4 = lshr i32 %add13, 8
  %5 = zext i32 %4 to i64
  %r2 = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 2
  store i64 %5, i64* %r2, align 8, !tbaa !283
  %mul19 = mul nsw i32 %add13, %add
  %add20 = add nsw i32 %mul19, 12345
  %6 = lshr i32 %add20, 8
  %7 = zext i32 %6 to i64
  %r3 = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 3
  store i64 %7, i64* %r3, align 8, !tbaa !284
  %mul26 = mul nsw i32 %add20, %add
  %add27 = add nsw i32 %mul26, 12345
  %8 = lshr i32 %add27, 8
  %9 = zext i32 %8 to i64
  %r4 = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 4
  store i64 %9, i64* %r4, align 8, !tbaa !285
  %mul33 = mul nsw i32 %add27, %add
  %add34 = add nsw i32 %mul33, 12345
  %10 = lshr i32 %add34, 8
  %11 = zext i32 %10 to i64
  %r5 = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 5
  store i64 %11, i64* %r5, align 8, !tbaa !286
  %mul40 = mul nsw i32 %add34, %add
  %add41 = add nsw i32 %mul40, 12345
  %12 = lshr i32 %add41, 8
  %13 = zext i32 %12 to i64
  %r6 = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 6
  store i64 %13, i64* %r6, align 8, !tbaa !287
  %mul47 = mul nsw i32 %add41, %add
  %add48 = add nsw i32 %mul47, 12345
  %conv49 = sext i32 %add48 to i64
  %ic_state = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 9
  store i64 %conv49, i64* %ic_state, align 8, !tbaa !288
  %add51 = add nsw i32 %mul, 100005
  %conv52 = sext i32 %add51 to i64
  %multiplier = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 7
  store i64 %conv52, i64* %multiplier, align 8, !tbaa !289
  %addend = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 8
  store i64 12345, i64* %addend, align 8, !tbaa !290
  %scale = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 10
  store double 0x3E70000000000000, double* %scale, align 8, !tbaa !291
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn
define double @myrand(%struct.double_prn* nocapture %prn_pt) local_unnamed_addr #23 {
entry:
  %r5 = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 5
  %0 = load i64, i64* %r5, align 8, !tbaa !286
  %shr = lshr i64 %0, 7
  %r6 = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 6
  %1 = load i64, i64* %r6, align 8, !tbaa !287
  %shl = shl i64 %1, 17
  %or = or i64 %shl, %shr
  %r4 = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 4
  %2 = load i64, i64* %r4, align 8, !tbaa !285
  %shr1 = lshr i64 %2, 1
  %shl3 = shl i64 %0, 23
  %or4 = or i64 %shr1, %shl3
  %xor = xor i64 %or4, %or
  %3 = trunc i64 %xor to i32
  %conv = and i32 %3, 16777215
  store i64 %0, i64* %r6, align 8, !tbaa !287
  store i64 %2, i64* %r5, align 8, !tbaa !286
  %r3 = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 3
  %4 = load i64, i64* %r3, align 8, !tbaa !284
  store i64 %4, i64* %r4, align 8, !tbaa !285
  %r2 = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 2
  %5 = load i64, i64* %r2, align 8, !tbaa !283
  store i64 %5, i64* %r3, align 8, !tbaa !284
  %r1 = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 1
  %6 = load i64, i64* %r1, align 8, !tbaa !282
  store i64 %6, i64* %r2, align 8, !tbaa !283
  %r0 = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 0
  %7 = load i64, i64* %r0, align 8, !tbaa !281
  store i64 %7, i64* %r1, align 8, !tbaa !282
  %8 = zext i32 %conv to i64
  store i64 %8, i64* %r0, align 8, !tbaa !281
  %ic_state = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 9
  %9 = load i64, i64* %ic_state, align 8, !tbaa !288
  %multiplier = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 7
  %10 = load i64, i64* %multiplier, align 8, !tbaa !289
  %mul = mul i64 %10, %9
  %addend = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 8
  %11 = load i64, i64* %addend, align 8, !tbaa !290
  %add = add i64 %mul, %11
  %conv15 = trunc i64 %add to i32
  %sext = shl i64 %add, 32
  %conv16 = ashr exact i64 %sext, 32
  store i64 %conv16, i64* %ic_state, align 8, !tbaa !288
  %scale = getelementptr inbounds %struct.double_prn, %struct.double_prn* %prn_pt, i64 0, i32 10
  %12 = load double, double* %scale, align 8, !tbaa !291
  %13 = lshr i32 %conv15, 8
  %xor20 = xor i32 %13, %conv
  %conv21 = sitofp i32 %xor20 to double
  %mul22 = fmul double %12, %conv21
  ret double %mul22
}

; Function Attrs: noinline nounwind optsize uwtable
define void @left_su2_hit_n(%struct.su2_matrix* %u, i32 %p, i32 %q, %struct.su3_matrix* %link) local_unnamed_addr #1 {
entry:
  %idxprom = sext i32 %p to i64
  %idxprom4 = sext i32 %q to i64
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %arrayidx2 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %link, i64 0, i32 0, i64 %idxprom, i64 %indvars.iv
  %arrayidx7 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %link, i64 0, i32 0, i64 %idxprom4, i64 %indvars.iv
  tail call void @mult_su2_mat_vec_elem_n(%struct.su2_matrix* %u, %struct.complex* %arrayidx2, %struct.complex* %arrayidx7) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !292

for.end:                                          ; preds = %for.body
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable writeonly
define void @clear_su3mat(%struct.su3_matrix* nocapture %dest) local_unnamed_addr #25 {
entry:
  %dest26 = bitcast %struct.su3_matrix* %dest to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(144) %dest26, i8 0, i64 144, i1 false)
  ret void
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize uwtable willreturn
define i32 @check_deviation(double %deviation) local_unnamed_addr #11 {
entry:
  %0 = load double, double* @max_deviation, align 8, !tbaa !11
  %cmp = fcmp olt double %0, %deviation
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store double %deviation, double* @max_deviation, align 8, !tbaa !11
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load double, double* @av_deviation, align 8, !tbaa !11
  %2 = tail call double @llvm.fmuladd.f64(double %deviation, double %deviation, double %1)
  store double %2, double* @av_deviation, align 8, !tbaa !11
  %cmp1 = fcmp ogt double %deviation, 1.000000e-04
  %. = zext i1 %cmp1 to i32
  ret i32 %.
}

; Function Attrs: noinline nounwind optsize uwtable
define void @reunit_report_problem_matrix(%struct.su3_matrix* nocapture readonly %mat, i32 %i, i32 %dir) local_unnamed_addr #1 {
entry:
  %call = tail call i32 (...) bitcast (i32 ()* @mynode to i32 (...)*)() #32
  %call1 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([60 x i8], [60 x i8]* @.str.180, i64 0, i64 0), i32 %call, i32 %i, i32 %dir, double 1.000000e-04) #34
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([12 x i8], [12 x i8]* @str.181, i64 0, i64 0))
  br label %for.cond3.preheader

for.cond3.preheader:                              ; preds = %entry, %for.end
  %indvars.iv86 = phi i64 [ 0, %entry ], [ %indvars.iv.next87, %for.end ]
  br label %for.body5

for.body5:                                        ; preds = %for.cond3.preheader, %for.body5
  %indvars.iv83 = phi i64 [ 0, %for.cond3.preheader ], [ %indvars.iv.next84, %for.body5 ]
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 %indvars.iv86, i64 %indvars.iv83, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %call8 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.182, i64 0, i64 0), double %0) #34
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 %indvars.iv86, i64 %indvars.iv83, i32 1
  %1 = load double, double* %imag, align 8, !tbaa !9
  %call14 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.182, i64 0, i64 0), double %1) #34
  %indvars.iv.next84 = add nuw nsw i64 %indvars.iv83, 1
  %exitcond85.not = icmp eq i64 %indvars.iv.next84, 3
  br i1 %exitcond85.not, label %for.end, label %for.body5, !llvm.loop !293

for.end:                                          ; preds = %for.body5
  %putchar75 = tail call i32 @putchar(i32 10)
  %indvars.iv.next87 = add nuw nsw i64 %indvars.iv86, 1
  %exitcond88.not = icmp eq i64 %indvars.iv.next87, 3
  br i1 %exitcond88.not, label %for.end18, label %for.cond3.preheader, !llvm.loop !294

for.end18:                                        ; preds = %for.end
  %puts73 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @str.9, i64 0, i64 0))
  br label %for.cond23.preheader

for.cond23.preheader:                             ; preds = %for.end18, %for.end44
  %indvars.iv80 = phi i64 [ 0, %for.end18 ], [ %indvars.iv.next81, %for.end44 ]
  br label %for.body25

for.body25:                                       ; preds = %for.cond23.preheader, %for.body25
  %indvars.iv = phi i64 [ 0, %for.cond23.preheader ], [ %indvars.iv.next, %for.body25 ]
  %arrayidx30 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 %indvars.iv80, i64 %indvars.iv
  %2 = bitcast %struct.complex* %arrayidx30 to i64*
  %3 = load i64, i64* %2, align 8, !tbaa !4
  %ifval.sroa.0.0.extract.trunc = trunc i64 %3 to i32
  %call32 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.183, i64 0, i64 0), i32 %ifval.sroa.0.0.extract.trunc) #34
  %imag38 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 %indvars.iv80, i64 %indvars.iv, i32 1
  %4 = bitcast double* %imag38 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !9
  %ifval.sroa.0.0.extract.trunc52 = trunc i64 %5 to i32
  %call41 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.183, i64 0, i64 0), i32 %ifval.sroa.0.0.extract.trunc52) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end44, label %for.body25, !llvm.loop !295

for.end44:                                        ; preds = %for.body25
  %putchar = tail call i32 @putchar(i32 10)
  %indvars.iv.next81 = add nuw nsw i64 %indvars.iv80, 1
  %exitcond82.not = icmp eq i64 %indvars.iv.next81, 3
  br i1 %exitcond82.not, label %for.end48, label %for.cond23.preheader, !llvm.loop !296

for.end48:                                        ; preds = %for.end44
  %puts74 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @str.10, i64 0, i64 0))
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call50 = tail call i32 @fflush(%struct._IO_FILE* %6) #34
  ret void
}

; Function Attrs: mustprogress nofree noinline nounwind optsize uwtable willreturn
define i32 @reunit_su3(%struct.su3_matrix* nocapture %c) local_unnamed_addr #26 {
entry:
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 0, i64 0, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 0, i64 0, i32 1
  %1 = load double, double* %imag, align 8, !tbaa !9
  %mul13 = fmul double %1, %1
  %2 = tail call double @llvm.fmuladd.f64(double %0, double %0, double %mul13)
  %real17 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 0, i64 1, i32 0
  %3 = load double, double* %real17, align 8, !tbaa !4
  %4 = tail call double @llvm.fmuladd.f64(double %3, double %3, double %2)
  %imag25 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 0, i64 1, i32 1
  %5 = load double, double* %imag25, align 8, !tbaa !9
  %6 = tail call double @llvm.fmuladd.f64(double %5, double %5, double %4)
  %real33 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 0, i64 2, i32 0
  %7 = load double, double* %real33, align 8, !tbaa !4
  %8 = tail call double @llvm.fmuladd.f64(double %7, double %7, double %6)
  %imag41 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 0, i64 2, i32 1
  %9 = load double, double* %imag41, align 8, !tbaa !9
  %10 = tail call double @llvm.fmuladd.f64(double %9, double %9, double %8)
  %sub = fadd double %10, -1.000000e+00
  %11 = tail call double @llvm.fabs.f64(double %sub)
  %call = tail call i32 @check_deviation(double %11) #34
  %call46 = tail call double @sqrt(double %10) #32
  %div = fdiv double 1.000000e+00, %call46
  %12 = load double, double* %real, align 8, !tbaa !4
  %mul = fmul double %12, %div
  store double %mul, double* %real, align 8, !tbaa !4
  %13 = load double, double* %imag, align 8, !tbaa !9
  %mul55 = fmul double %div, %13
  store double %mul55, double* %imag, align 8, !tbaa !9
  %14 = load double, double* %real17, align 8, !tbaa !4
  %mul60 = fmul double %div, %14
  store double %mul60, double* %real17, align 8, !tbaa !4
  %15 = load double, double* %imag25, align 8, !tbaa !9
  %mul65 = fmul double %div, %15
  store double %mul65, double* %imag25, align 8, !tbaa !9
  %16 = load double, double* %real33, align 8, !tbaa !4
  %mul70 = fmul double %div, %16
  store double %mul70, double* %real33, align 8, !tbaa !4
  %17 = load double, double* %imag41, align 8, !tbaa !9
  %mul75 = fmul double %div, %17
  store double %mul75, double* %imag41, align 8, !tbaa !9
  %real83 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 1, i64 0, i32 0
  %18 = load double, double* %real83, align 8, !tbaa !4
  %imag92 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 1, i64 0, i32 1
  %19 = load double, double* %imag92, align 8, !tbaa !9
  %mul93 = fmul double %mul55, %19
  %20 = tail call double @llvm.fmuladd.f64(double %mul, double %18, double %mul93)
  %real101 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 1, i64 1, i32 0
  %21 = load double, double* %real101, align 8, !tbaa !4
  %22 = tail call double @llvm.fmuladd.f64(double %mul60, double %21, double %20)
  %imag110 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 1, i64 1, i32 1
  %23 = load double, double* %imag110, align 8, !tbaa !9
  %24 = tail call double @llvm.fmuladd.f64(double %mul65, double %23, double %22)
  %real119 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 1, i64 2, i32 0
  %25 = load double, double* %real119, align 8, !tbaa !4
  %26 = tail call double @llvm.fmuladd.f64(double %mul70, double %25, double %24)
  %imag128 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 1, i64 2, i32 1
  %27 = load double, double* %imag128, align 8, !tbaa !9
  %28 = tail call double @llvm.fmuladd.f64(double %mul75, double %27, double %26)
  %29 = fneg double %mul55
  %neg = fmul double %18, %29
  %30 = tail call double @llvm.fmuladd.f64(double %mul, double %19, double %neg)
  %31 = tail call double @llvm.fmuladd.f64(double %mul60, double %23, double %30)
  %neg166 = fneg double %mul65
  %32 = tail call double @llvm.fmuladd.f64(double %neg166, double %21, double %31)
  %33 = tail call double @llvm.fmuladd.f64(double %mul70, double %27, double %32)
  %neg185 = fneg double %mul75
  %34 = tail call double @llvm.fmuladd.f64(double %neg185, double %25, double %33)
  %mul187 = fmul double %34, %34
  %35 = tail call double @llvm.fmuladd.f64(double %28, double %28, double %mul187)
  %call188 = tail call i32 @check_deviation(double %35) #34
  %add189 = add nsw i32 %call188, %call
  %36 = load double, double* %real, align 8, !tbaa !4
  %37 = load double, double* %imag, align 8, !tbaa !9
  %38 = fneg double %34
  %neg200 = fmul double %37, %38
  %39 = tail call double @llvm.fmuladd.f64(double %28, double %36, double %neg200)
  %40 = load double, double* %real83, align 8, !tbaa !4
  %sub205 = fsub double %40, %39
  store double %sub205, double* %real83, align 8, !tbaa !4
  %mul215 = fmul double %34, %36
  %41 = tail call double @llvm.fmuladd.f64(double %28, double %37, double %mul215)
  %42 = load double, double* %imag92, align 8, !tbaa !9
  %sub220 = fsub double %42, %41
  store double %sub220, double* %imag92, align 8, !tbaa !9
  %43 = load double, double* %real17, align 8, !tbaa !4
  %44 = load double, double* %imag25, align 8, !tbaa !9
  %neg231 = fmul double %44, %38
  %45 = tail call double @llvm.fmuladd.f64(double %28, double %43, double %neg231)
  %46 = load double, double* %real101, align 8, !tbaa !4
  %sub236 = fsub double %46, %45
  store double %sub236, double* %real101, align 8, !tbaa !4
  %mul246 = fmul double %34, %43
  %47 = tail call double @llvm.fmuladd.f64(double %28, double %44, double %mul246)
  %48 = load double, double* %imag110, align 8, !tbaa !9
  %sub251 = fsub double %48, %47
  store double %sub251, double* %imag110, align 8, !tbaa !9
  %49 = load double, double* %real33, align 8, !tbaa !4
  %50 = load double, double* %imag41, align 8, !tbaa !9
  %neg262 = fmul double %50, %38
  %51 = tail call double @llvm.fmuladd.f64(double %28, double %49, double %neg262)
  %52 = load double, double* %real119, align 8, !tbaa !4
  %sub267 = fsub double %52, %51
  store double %sub267, double* %real119, align 8, !tbaa !4
  %mul277 = fmul double %34, %49
  %53 = tail call double @llvm.fmuladd.f64(double %28, double %50, double %mul277)
  %54 = load double, double* %imag128, align 8, !tbaa !9
  %sub282 = fsub double %54, %53
  store double %sub282, double* %imag128, align 8, !tbaa !9
  %mul300 = fmul double %sub220, %sub220
  %55 = tail call double @llvm.fmuladd.f64(double %sub205, double %sub205, double %mul300)
  %56 = tail call double @llvm.fmuladd.f64(double %sub236, double %sub236, double %55)
  %57 = tail call double @llvm.fmuladd.f64(double %sub251, double %sub251, double %56)
  %58 = tail call double @llvm.fmuladd.f64(double %sub267, double %sub267, double %57)
  %59 = tail call double @llvm.fmuladd.f64(double %sub282, double %sub282, double %58)
  %sub337 = fadd double %59, -1.000000e+00
  %60 = tail call double @llvm.fabs.f64(double %sub337)
  %call338 = tail call i32 @check_deviation(double %60) #34
  %add339 = add nsw i32 %add189, %call338
  %call340 = tail call double @sqrt(double %59) #32
  %div341 = fdiv double 1.000000e+00, %call340
  %61 = load double, double* %real83, align 8, !tbaa !4
  %mul346 = fmul double %61, %div341
  store double %mul346, double* %real83, align 8, !tbaa !4
  %62 = load double, double* %imag92, align 8, !tbaa !9
  %mul351 = fmul double %div341, %62
  store double %mul351, double* %imag92, align 8, !tbaa !9
  %63 = load double, double* %real101, align 8, !tbaa !4
  %mul356 = fmul double %div341, %63
  store double %mul356, double* %real101, align 8, !tbaa !4
  %64 = load double, double* %imag110, align 8, !tbaa !9
  %mul361 = fmul double %div341, %64
  store double %mul361, double* %imag110, align 8, !tbaa !9
  %65 = load double, double* %real119, align 8, !tbaa !4
  %mul366 = fmul double %div341, %65
  store double %mul366, double* %real119, align 8, !tbaa !4
  %66 = load double, double* %imag128, align 8, !tbaa !9
  %mul371 = fmul double %div341, %66
  store double %mul371, double* %imag128, align 8, !tbaa !9
  %real375 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 2, i64 0, i32 0
  %67 = load double, double* %real375, align 8, !tbaa !4
  %imag379 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 2, i64 0, i32 1
  %68 = load double, double* %imag379, align 8, !tbaa !9
  %real383 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 2, i64 1, i32 0
  %69 = load double, double* %real383, align 8, !tbaa !4
  %imag387 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 2, i64 1, i32 1
  %70 = load double, double* %imag387, align 8, !tbaa !9
  %real391 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 2, i64 2, i32 0
  %71 = load double, double* %real391, align 8, !tbaa !4
  %imag395 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 2, i64 2, i32 1
  %72 = load double, double* %imag395, align 8, !tbaa !9
  %73 = load double, double* %real, align 8, !tbaa !4
  %74 = load double, double* %imag, align 8, !tbaa !9
  %75 = load double, double* %real17, align 8, !tbaa !4
  %76 = load double, double* %imag25, align 8, !tbaa !9
  %77 = load double, double* %real33, align 8, !tbaa !4
  %78 = load double, double* %imag41, align 8, !tbaa !9
  %79 = fneg double %76
  %neg430 = fmul double %mul371, %79
  %80 = tail call double @llvm.fmuladd.f64(double %75, double %mul366, double %neg430)
  %mul432 = fmul double %mul366, %76
  %81 = tail call double @llvm.fmuladd.f64(double %75, double %mul371, double %mul432)
  %neg442 = fneg double %77
  %82 = tail call double @llvm.fmuladd.f64(double %neg442, double %mul356, double %80)
  %83 = tail call double @llvm.fmuladd.f64(double %78, double %mul361, double %82)
  %84 = tail call double @llvm.fmuladd.f64(double %neg442, double %mul361, double %81)
  %neg447 = fneg double %78
  %85 = tail call double @llvm.fmuladd.f64(double %neg447, double %mul356, double %84)
  store double %83, double* %real375, align 8, !tbaa !4
  %fneg = fneg double %85
  store double %fneg, double* %imag379, align 8, !tbaa !9
  %neg466 = fmul double %mul351, %neg447
  %86 = tail call double @llvm.fmuladd.f64(double %77, double %mul346, double %neg466)
  %mul468 = fmul double %mul346, %78
  %87 = tail call double @llvm.fmuladd.f64(double %77, double %mul351, double %mul468)
  %neg478 = fneg double %73
  %88 = tail call double @llvm.fmuladd.f64(double %neg478, double %mul366, double %86)
  %89 = tail call double @llvm.fmuladd.f64(double %74, double %mul371, double %88)
  %90 = tail call double @llvm.fmuladd.f64(double %neg478, double %mul371, double %87)
  %neg483 = fneg double %74
  %91 = tail call double @llvm.fmuladd.f64(double %neg483, double %mul366, double %90)
  store double %89, double* %real383, align 8, !tbaa !4
  %fneg488 = fneg double %91
  store double %fneg488, double* %imag387, align 8, !tbaa !9
  %neg503 = fmul double %mul361, %neg483
  %92 = tail call double @llvm.fmuladd.f64(double %73, double %mul356, double %neg503)
  %mul505 = fmul double %mul356, %74
  %93 = tail call double @llvm.fmuladd.f64(double %73, double %mul361, double %mul505)
  %neg515 = fneg double %75
  %94 = tail call double @llvm.fmuladd.f64(double %neg515, double %mul346, double %92)
  %95 = tail call double @llvm.fmuladd.f64(double %76, double %mul351, double %94)
  %96 = tail call double @llvm.fmuladd.f64(double %neg515, double %mul351, double %93)
  %97 = tail call double @llvm.fmuladd.f64(double %79, double %mul346, double %96)
  store double %95, double* %real391, align 8, !tbaa !4
  %fneg525 = fneg double %97
  store double %fneg525, double* %imag395, align 8, !tbaa !9
  %sub534 = fsub double %67, %83
  %sub545 = fadd double %68, %85
  %mul551 = fmul double %sub545, %sub545
  %98 = tail call double @llvm.fmuladd.f64(double %sub534, double %sub534, double %mul551)
  %sub556 = fsub double %69, %89
  %99 = tail call double @llvm.fmuladd.f64(double %sub556, double %sub556, double %98)
  %sub567 = fadd double %70, %91
  %100 = tail call double @llvm.fmuladd.f64(double %sub567, double %sub567, double %99)
  %sub578 = fsub double %71, %95
  %101 = tail call double @llvm.fmuladd.f64(double %sub578, double %sub578, double %100)
  %sub589 = fadd double %72, %97
  %102 = tail call double @llvm.fmuladd.f64(double %sub589, double %sub589, double %101)
  %call596 = tail call i32 @check_deviation(double %102) #34
  %add597 = add nsw i32 %add339, %call596
  ret i32 %add597
}

; Function Attrs: noinline nounwind optsize uwtable
define void @reunitarize() local_unnamed_addr #1 {
entry:
  store double 0.000000e+00, double* @max_deviation, align 8, !tbaa !11
  store double 0.000000e+00, double* @av_deviation, align 8, !tbaa !11
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp42 = icmp sgt i32 %0, 0
  br i1 %cmp42, label %for.cond1.preheader.preheader, label %if.end20

for.cond1.preheader.preheader:                    ; preds = %entry
  %1 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.preheader, %for.inc8
  %i.045 = phi i32 [ %inc9, %for.inc8 ], [ 0, %for.cond1.preheader.preheader ]
  %errcount.044 = phi i32 [ %add, %for.inc8 ], [ 0, %for.cond1.preheader.preheader ]
  %s.043 = phi %struct.site* [ %incdec.ptr, %for.inc8 ], [ %1, %for.cond1.preheader.preheader ]
  br label %for.body3

for.body3:                                        ; preds = %for.cond1.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.inc ]
  %errcount.141 = phi i32 [ %errcount.044, %for.cond1.preheader ], [ %add, %for.inc ]
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %s.043, i64 0, i32 8, i64 %indvars.iv
  %call = tail call i32 @reunit_su3(%struct.su3_matrix* nonnull %arrayidx) #34
  %add = add nsw i32 %call, %errcount.141
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %for.body3
  %2 = trunc i64 %indvars.iv to i32
  tail call void @reunit_report_problem_matrix(%struct.su3_matrix* nonnull %arrayidx, i32 %i.045, i32 %2) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body3
  %cmp4 = icmp sgt i32 %add, 100
  br i1 %cmp4, label %if.then5, label %for.inc

if.then5:                                         ; preds = %if.end
  %puts38 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([32 x i8], [32 x i8]* @str.12, i64 0, i64 0))
  tail call void @terminate(i32 1) #32
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then5
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.inc8, label %for.body3, !llvm.loop !297

for.inc8:                                         ; preds = %for.inc
  %inc9 = add nuw nsw i32 %i.045, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.043, i64 1
  %3 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp = icmp slt i32 %inc9, %3
  br i1 %cmp, label %for.cond1.preheader, label %for.end10, !llvm.loop !298

for.end10:                                        ; preds = %for.inc8
  %.pre = load double, double* @max_deviation, align 8, !tbaa !11
  %phi.cmp = fcmp ogt double %.pre, 1.000000e-04
  br i1 %phi.cmp, label %if.then12, label %if.end20

if.then12:                                        ; preds = %for.end10
  %call13 = tail call i32 (...) bitcast (i32 ()* @mynode to i32 (...)*)() #32
  %4 = load double, double* @max_deviation, align 8, !tbaa !11
  %call14 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.8.186, i64 0, i64 0), i32 %call13, double %4) #34
  %cmp16 = icmp sgt i32 %add, 99
  br i1 %cmp16, label %if.then17, label %if.end20

if.then17:                                        ; preds = %if.then12
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([32 x i8], [32 x i8]* @str.12, i64 0, i64 0))
  tail call void @terminate(i32 1) #32
  br label %if.end20

if.end20:                                         ; preds = %entry, %if.then12, %if.then17, %for.end10
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @update_u(double %eps) local_unnamed_addr #1 {
entry:
  %temp1 = alloca %struct.su3_matrix, align 8
  %temp2 = alloca %struct.su3_matrix, align 8
  %htemp = alloca %struct.su3_matrix, align 8
  %0 = bitcast %struct.su3_matrix* %temp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %0) #31
  %1 = bitcast %struct.su3_matrix* %temp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %1) #31
  %2 = bitcast %struct.su3_matrix* %htemp to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %2) #31
  %div = fmul double %eps, 5.000000e-01
  %div1 = fdiv double %eps, 3.000000e+00
  %div2 = fmul double %eps, 2.500000e-01
  %div3 = fdiv double %eps, 5.000000e+00
  %div4 = fdiv double %eps, 6.000000e+00
  %3 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp42 = icmp sgt i32 %3, 0
  br i1 %cmp42, label %for.cond5.preheader.preheader, label %for.end13

for.cond5.preheader.preheader:                    ; preds = %entry
  %4 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.cond5.preheader

for.cond5.preheader:                              ; preds = %for.cond5.preheader.preheader, %for.inc11
  %i.044 = phi i32 [ %inc12, %for.inc11 ], [ 0, %for.cond5.preheader.preheader ]
  %s.043 = phi %struct.site* [ %incdec.ptr, %for.inc11 ], [ %4, %for.cond5.preheader.preheader ]
  br label %for.body7

for.body7:                                        ; preds = %for.cond5.preheader, %for.body7
  %indvars.iv = phi i64 [ 0, %for.cond5.preheader ], [ %indvars.iv.next, %for.body7 ]
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %s.043, i64 0, i32 11, i64 %indvars.iv
  call void @uncompress_anti_hermitian(%struct.anti_hermitmat* nonnull %arrayidx, %struct.su3_matrix* nonnull %htemp) #32
  %arrayidx10 = getelementptr inbounds %struct.site, %struct.site* %s.043, i64 0, i32 8, i64 %indvars.iv
  call void @mult_su3_nn(%struct.su3_matrix* nonnull %htemp, %struct.su3_matrix* nonnull %arrayidx10, %struct.su3_matrix* nonnull %temp1) #32
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* nonnull %arrayidx10, %struct.su3_matrix* nonnull %temp1, double %div4, %struct.su3_matrix* nonnull %temp2) #32
  call void @mult_su3_nn(%struct.su3_matrix* nonnull %htemp, %struct.su3_matrix* nonnull %temp2, %struct.su3_matrix* nonnull %temp1) #32
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* nonnull %arrayidx10, %struct.su3_matrix* nonnull %temp1, double %div3, %struct.su3_matrix* nonnull %temp2) #32
  call void @mult_su3_nn(%struct.su3_matrix* nonnull %htemp, %struct.su3_matrix* nonnull %temp2, %struct.su3_matrix* nonnull %temp1) #32
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* nonnull %arrayidx10, %struct.su3_matrix* nonnull %temp1, double %div2, %struct.su3_matrix* nonnull %temp2) #32
  call void @mult_su3_nn(%struct.su3_matrix* nonnull %htemp, %struct.su3_matrix* nonnull %temp2, %struct.su3_matrix* nonnull %temp1) #32
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* nonnull %arrayidx10, %struct.su3_matrix* nonnull %temp1, double %div1, %struct.su3_matrix* nonnull %temp2) #32
  call void @mult_su3_nn(%struct.su3_matrix* nonnull %htemp, %struct.su3_matrix* nonnull %temp2, %struct.su3_matrix* nonnull %temp1) #32
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* nonnull %arrayidx10, %struct.su3_matrix* nonnull %temp1, double %div, %struct.su3_matrix* nonnull %temp2) #32
  call void @mult_su3_nn(%struct.su3_matrix* nonnull %htemp, %struct.su3_matrix* nonnull %temp2, %struct.su3_matrix* nonnull %temp1) #32
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* nonnull %arrayidx10, %struct.su3_matrix* nonnull %temp1, double %eps, %struct.su3_matrix* nonnull %temp2) #32
  call void @su3mat_copy(%struct.su3_matrix* nonnull %temp2, %struct.su3_matrix* nonnull %arrayidx10) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.inc11, label %for.body7, !llvm.loop !299

for.inc11:                                        ; preds = %for.body7
  %inc12 = add nuw nsw i32 %i.044, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.043, i64 1
  %5 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp = icmp slt i32 %inc12, %5
  br i1 %cmp, label %for.cond5.preheader, label %for.end13, !llvm.loop !300

for.end13:                                        ; preds = %for.inc11, %entry
  store i32 0, i32* @valid_longlinks, align 4, !tbaa !13
  store i32 0, i32* @valid_fatlinks, align 4, !tbaa !13
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @make_path_table() local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.end, label %if.end.thread

if.end.thread:                                    ; preds = %entry
  store i32 0, i32* @num_q_paths, align 4, !tbaa !13
  store i32 0, i32* @num_basic_paths, align 4, !tbaa !13
  br label %for.body.preheader

if.end:                                           ; preds = %entry
  %puts40 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([72 x i8], [72 x i8]* @quark_action_description.191, i64 0, i64 0))
  %.pr = load i32, i32* @this_node, align 4, !tbaa !13
  store i32 0, i32* @num_q_paths, align 4, !tbaa !13
  store i32 0, i32* @num_basic_paths, align 4, !tbaa !13
  %cmp1 = icmp eq i32 %.pr, 0
  br i1 %cmp1, label %if.then2, label %for.body.preheader

if.then2:                                         ; preds = %if.end
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([51 x i8], [51 x i8]* @str.192, i64 0, i64 0))
  br label %for.body.preheader

for.body.preheader:                               ; preds = %if.end.thread, %if.then2, %if.end
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %if.end21
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end21 ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr inbounds [6 x double], [6 x double]* @path_coeff, i64 0, i64 %indvars.iv
  %1 = load double, double* %arrayidx, align 8, !tbaa !11
  %arrayidx8 = getelementptr inbounds [6 x i32], [6 x i32]* @path_length_in, i64 0, i64 %indvars.iv
  %2 = load i32, i32* %arrayidx8, align 4, !tbaa !13
  %3 = load double, double* @u0, align 8
  %cmp942.not = icmp eq i64 %indvars.iv, 0
  br i1 %cmp942.not, label %for.end, label %for.body10.preheader

for.body10.preheader:                             ; preds = %for.body
  %smax = call i32 @llvm.smax.i32(i32 %2, i32 2)
  br label %for.body10

for.body10:                                       ; preds = %for.body10.preheader, %for.body10
  %this_coeff.044 = phi double [ %div, %for.body10 ], [ %1, %for.body10.preheader ]
  %k.043 = phi i32 [ %inc, %for.body10 ], [ 1, %for.body10.preheader ]
  %div = fdiv double %this_coeff.044, %3
  %inc = add nuw nsw i32 %k.043, 1
  %exitcond.not = icmp eq i32 %inc, %smax
  br i1 %exitcond.not, label %for.end, label %for.body10, !llvm.loop !301

for.end:                                          ; preds = %for.body10, %for.body
  %this_coeff.0.lcssa = phi double [ %1, %for.body ], [ %div, %for.body10 ]
  %arrayidx12 = getelementptr inbounds [6 x double], [6 x double]* @act_path_coeff, i64 0, i64 %indvars.iv
  store double %this_coeff.0.lcssa, double* %arrayidx12, align 8, !tbaa !11
  %arraydecay = getelementptr inbounds [6 x [7 x i32]], [6 x [7 x i32]]* @path_ind, i64 0, i64 %indvars.iv, i64 0
  %call17 = tail call i32 @add_basic_path(i32* nonnull %arraydecay, i32 %2, double %this_coeff.0.lcssa) #34
  %4 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp18 = icmp eq i32 %4, 0
  br i1 %cmp18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %for.end
  %5 = trunc i64 %indvars.iv to i32
  %call20 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2.193, i64 0, i64 0), i32 %5, double %this_coeff.0.lcssa, i32 %call17) #34
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %for.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond48.not = icmp eq i64 %indvars.iv.next, 6
  br i1 %exitcond48.not, label %for.end24, label %for.body, !llvm.loop !302

for.end24:                                        ; preds = %if.end21
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #5

; Function Attrs: noinline nounwind optsize uwtable
define i32 @add_basic_path(i32* nocapture readonly %basic_vec, i32 %length, double %coeff) local_unnamed_addr #1 {
entry:
  %perm = alloca [8 x i32], align 16
  %pp = alloca [8 x i32], align 16
  %ir = alloca [4 x i32], align 16
  %vec = alloca [7 x i32], align 16
  %vec282 = bitcast [7 x i32]* %vec to i8*
  %0 = bitcast [8 x i32]* %perm to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #31
  %1 = bitcast [8 x i32]* %pp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #31
  %2 = bitcast [4 x i32]* %ir to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #31
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %vec282) #31
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %perm, i64 0, i64 0
  %arrayidx2 = getelementptr inbounds [8 x i32], [8 x i32]* %perm, i64 0, i64 1
  %arrayidx7 = getelementptr inbounds [8 x i32], [8 x i32]* %perm, i64 0, i64 2
  %arrayidx12 = getelementptr inbounds [8 x i32], [8 x i32]* %perm, i64 0, i64 3
  %arrayidx39 = getelementptr inbounds [4 x i32], [4 x i32]* %ir, i64 0, i64 0
  %arrayidx44 = getelementptr inbounds [4 x i32], [4 x i32]* %ir, i64 0, i64 1
  %arrayidx49 = getelementptr inbounds [4 x i32], [4 x i32]* %ir, i64 0, i64 2
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %ir, i64 0, i64 3
  %cmp80244 = icmp sgt i32 %length, 0
  %cmp92246 = icmp slt i32 %length, 7
  %arraydecay = getelementptr inbounds [7 x i32], [7 x i32]* %vec, i64 0, i64 0
  %fneg = fneg double %coeff
  store i32 0, i32* %arrayidx, align 16, !tbaa !13
  %3 = sext i32 %length to i64
  %scevgep = getelementptr [7 x i32], [7 x i32]* %vec, i64 0, i64 %3
  %scevgep273 = bitcast i32* %scevgep to i8*
  %4 = sub i32 6, %length
  %5 = zext i32 %4 to i64
  %6 = shl nuw nsw i64 %5, 2
  %7 = add nuw nsw i64 %6, 4
  %wide.trip.count = zext i32 %length to i64
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc183
  %path_num.0267 = phi i32 [ 0, %entry ], [ %path_num.9, %for.inc183 ]
  %storemerge266 = phi i32 [ 0, %entry ], [ %inc185, %for.inc183 ]
  store i32 0, i32* %arrayidx2, align 4, !tbaa !13
  br label %for.body6

for.body6:                                        ; preds = %for.body, %for.inc179
  %path_num.1265 = phi i32 [ %path_num.0267, %for.body ], [ %path_num.9, %for.inc179 ]
  %storemerge222264 = phi i32 [ 0, %for.body ], [ %inc181, %for.inc179 ]
  %cmp19.not = icmp eq i32 %storemerge266, %storemerge222264
  store i32 0, i32* %arrayidx7, align 8, !tbaa !13
  br label %for.body11

for.body11:                                       ; preds = %for.body6, %for.inc175
  %path_num.2263 = phi i32 [ %path_num.1265, %for.body6 ], [ %path_num.9, %for.inc175 ]
  %storemerge223262 = phi i32 [ 0, %for.body6 ], [ %inc177, %for.inc175 ]
  %cmp22.not = icmp eq i32 %storemerge266, %storemerge223262
  %or.cond = select i1 %cmp19.not, i1 true, i1 %cmp22.not
  %cmp30.not = icmp eq i32 %storemerge222264, %storemerge223262
  store i32 0, i32* %arrayidx12, align 4, !tbaa !13
  br label %for.body16

for.body16:                                       ; preds = %for.body11, %for.inc171
  %path_num.3261 = phi i32 [ %path_num.2263, %for.body11 ], [ %path_num.9, %for.inc171 ]
  %storemerge224260 = phi i32 [ 0, %for.body11 ], [ %inc173, %for.inc171 ]
  %cmp26.not = icmp eq i32 %storemerge266, %storemerge224260
  %or.cond229 = select i1 %or.cond, i1 true, i1 %cmp26.not
  %or.cond230 = select i1 %or.cond229, i1 true, i1 %cmp30.not
  %cmp34.not = icmp eq i32 %storemerge222264, %storemerge224260
  %or.cond231 = select i1 %or.cond230, i1 true, i1 %cmp34.not
  %cmp38.not = icmp eq i32 %storemerge223262, %storemerge224260
  %or.cond232 = select i1 %or.cond231, i1 true, i1 %cmp38.not
  br i1 %or.cond232, label %for.inc171, label %if.then

if.then:                                          ; preds = %for.body16
  store i32 0, i32* %arrayidx39, align 16, !tbaa !13
  br label %for.body43

for.body43:                                       ; preds = %if.then, %for.inc166
  %path_num.4259 = phi i32 [ %path_num.3261, %if.then ], [ %path_num.8, %for.inc166 ]
  %cmp137 = phi i1 [ true, %if.then ], [ false, %for.inc166 ]
  %storemerge225258 = phi i32 [ 1, %if.then ], [ 2, %for.inc166 ]
  store i32 0, i32* %arrayidx44, align 4, !tbaa !13
  br label %for.body48

for.body48:                                       ; preds = %for.body43, %for.inc162
  %path_num.5257 = phi i32 [ %path_num.4259, %for.body43 ], [ %path_num.8, %for.inc162 ]
  %cmp47 = phi i1 [ true, %for.body43 ], [ false, %for.inc162 ]
  %storemerge226256 = phi i32 [ 1, %for.body43 ], [ 2, %for.inc162 ]
  store i32 0, i32* %arrayidx49, align 8, !tbaa !13
  br label %for.body53

for.body53:                                       ; preds = %for.body48, %for.inc158
  %path_num.6255 = phi i32 [ %path_num.5257, %for.body48 ], [ %path_num.8, %for.inc158 ]
  %cmp52 = phi i1 [ true, %for.body48 ], [ false, %for.inc158 ]
  %storemerge227254 = phi i32 [ 1, %for.body48 ], [ 2, %for.inc158 ]
  store i32 0, i32* %arrayidx54, align 4, !tbaa !13
  br label %for.cond59.preheader

for.cond59.preheader:                             ; preds = %for.body53, %for.inc154
  %path_num.7252 = phi i32 [ %path_num.6255, %for.body53 ], [ %path_num.8, %for.inc154 ]
  %cmp57 = phi i1 [ true, %for.body53 ], [ false, %for.inc154 ]
  %storemerge228251 = phi i32 [ 1, %for.body53 ], [ 2, %for.inc154 ]
  br label %for.body61

for.cond79.preheader:                             ; preds = %if.end
  br i1 %cmp80244, label %for.body81, label %for.cond91.preheader

for.body61:                                       ; preds = %for.cond59.preheader, %if.end
  %indvars.iv = phi i64 [ 0, %for.cond59.preheader ], [ %indvars.iv.next, %if.end ]
  %arrayidx62 = getelementptr inbounds [8 x i32], [8 x i32]* %perm, i64 0, i64 %indvars.iv
  %8 = load i32, i32* %arrayidx62, align 4, !tbaa !13
  %arrayidx64 = getelementptr inbounds [8 x i32], [8 x i32]* %pp, i64 0, i64 %indvars.iv
  store i32 %8, i32* %arrayidx64, align 4, !tbaa !13
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %ir, i64 0, i64 %indvars.iv
  %9 = load i32, i32* %arrayidx66, align 4, !tbaa !13
  %cmp67 = icmp eq i32 %9, 1
  br i1 %cmp67, label %if.then68, label %if.end

if.then68:                                        ; preds = %for.body61
  %sub = sub nsw i32 7, %8
  store i32 %sub, i32* %arrayidx64, align 4, !tbaa !13
  br label %if.end

if.end:                                           ; preds = %if.then68, %for.body61
  %10 = phi i32 [ %sub, %if.then68 ], [ %8, %for.body61 ]
  %sub75 = sub nsw i32 7, %10
  %11 = sub nuw nsw i64 7, %indvars.iv
  %arrayidx78 = getelementptr inbounds [8 x i32], [8 x i32]* %pp, i64 0, i64 %11
  store i32 %sub75, i32* %arrayidx78, align 4, !tbaa !13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.cond79.preheader, label %for.body61, !llvm.loop !303

for.cond91.preheader:                             ; preds = %for.body81, %for.cond79.preheader
  br i1 %cmp92246, label %for.body93.preheader, label %for.cond99.preheader

for.body93.preheader:                             ; preds = %for.cond91.preheader
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(1) %scevgep273, i8 -1, i64 %7, i1 false)
  br label %for.cond99.preheader

for.body81:                                       ; preds = %for.cond79.preheader, %for.body81
  %indvars.iv270 = phi i64 [ %indvars.iv.next271, %for.body81 ], [ 0, %for.cond79.preheader ]
  %arrayidx83 = getelementptr inbounds i32, i32* %basic_vec, i64 %indvars.iv270
  %12 = load i32, i32* %arrayidx83, align 4, !tbaa !13
  %idxprom84 = sext i32 %12 to i64
  %arrayidx85 = getelementptr inbounds [8 x i32], [8 x i32]* %pp, i64 0, i64 %idxprom84
  %13 = load i32, i32* %arrayidx85, align 4, !tbaa !13
  %arrayidx87 = getelementptr inbounds [7 x i32], [7 x i32]* %vec, i64 0, i64 %indvars.iv270
  store i32 %13, i32* %arrayidx87, align 4, !tbaa !13
  %indvars.iv.next271 = add nuw nsw i64 %indvars.iv270, 1
  %exitcond272.not = icmp eq i64 %indvars.iv.next271, %wide.trip.count
  br i1 %exitcond272.not, label %for.cond91.preheader, label %for.body81, !llvm.loop !304

for.cond99.preheader:                             ; preds = %for.body93.preheader, %for.cond91.preheader
  %14 = load i32, i32* @num_q_paths, align 4, !tbaa !13
  %cmp100248 = icmp sgt i32 %14, 0
  br i1 %cmp100248, label %for.body101.preheader, label %if.end119

for.body101.preheader:                            ; preds = %for.cond99.preheader
  %wide.trip.count278 = zext i32 %14 to i64
  br label %for.body101

for.cond99:                                       ; preds = %for.body101
  %exitcond279.not = icmp eq i64 %indvars.iv.next277, %wide.trip.count278
  br i1 %exitcond279.not, label %if.then112, label %for.body101, !llvm.loop !305

for.body101:                                      ; preds = %for.body101.preheader, %for.cond99
  %indvars.iv276 = phi i64 [ 0, %for.body101.preheader ], [ %indvars.iv.next277, %for.cond99 ]
  %arraydecay104 = getelementptr inbounds [688 x %struct.anon], [688 x %struct.anon]* @q_paths, i64 0, i64 %indvars.iv276, i32 0, i64 0
  %call = call i32 @is_path_equal(i32* nonnull %arraydecay, i32* nonnull %arraydecay104, i32 7) #34
  %cmp105 = icmp eq i32 %call, 1
  %indvars.iv.next277 = add nuw nsw i64 %indvars.iv276, 1
  br i1 %cmp105, label %for.inc154, label %for.cond99

if.then112:                                       ; preds = %for.cond99
  %cmp113 = icmp sgt i32 %14, 687
  br i1 %cmp113, label %if.then114, label %if.end119

if.then114:                                       ; preds = %if.then112
  %15 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp115 = icmp eq i32 %15, 0
  br i1 %cmp115, label %if.then116, label %if.end118

if.then116:                                       ; preds = %if.then114
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @str.6, i64 0, i64 0))
  br label %if.end118

if.end118:                                        ; preds = %if.then116, %if.then114
  tail call void @exit(i32 0) #33
  unreachable

if.end119:                                        ; preds = %for.cond99.preheader, %if.then112
  %idxprom120 = sext i32 %14 to i64
  %length122 = getelementptr inbounds [688 x %struct.anon], [688 x %struct.anon]* @q_paths, i64 0, i64 %idxprom120, i32 1
  store i32 %length, i32* %length122, align 4, !tbaa !306
  %scevgep280 = getelementptr [688 x %struct.anon], [688 x %struct.anon]* @q_paths, i64 0, i64 %idxprom120
  %scevgep280281 = bitcast %struct.anon* %scevgep280 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(28) %scevgep280281, i8* noundef nonnull align 16 dereferenceable(28) %vec282, i64 28, i1 false)
  %spec.select = select i1 %cmp137, double %coeff, double %fneg
  %spec.select290 = select i1 %cmp137, double 1.000000e+00, double -1.000000e+00
  %16 = getelementptr inbounds [688 x %struct.anon], [688 x %struct.anon]* @q_paths, i64 0, i64 %idxprom120, i32 2
  store double %spec.select, double* %16, align 16
  %17 = getelementptr inbounds [688 x %struct.anon], [688 x %struct.anon]* @q_paths, i64 0, i64 %idxprom120, i32 3
  store double %spec.select290, double* %17, align 8
  %inc151 = add nsw i32 %14, 1
  store i32 %inc151, i32* @num_q_paths, align 4, !tbaa !13
  %inc152 = add nsw i32 %path_num.7252, 1
  br label %for.inc154

for.inc154:                                       ; preds = %for.body101, %if.end119
  %path_num.8 = phi i32 [ %inc152, %if.end119 ], [ %path_num.7252, %for.body101 ]
  store i32 %storemerge228251, i32* %arrayidx54, align 4, !tbaa !13
  br i1 %cmp57, label %for.cond59.preheader, label %for.inc158, !llvm.loop !308

for.inc158:                                       ; preds = %for.inc154
  store i32 %storemerge227254, i32* %arrayidx49, align 8, !tbaa !13
  br i1 %cmp52, label %for.body53, label %for.inc162, !llvm.loop !309

for.inc162:                                       ; preds = %for.inc158
  store i32 %storemerge226256, i32* %arrayidx44, align 4, !tbaa !13
  br i1 %cmp47, label %for.body48, label %for.inc166, !llvm.loop !310

for.inc166:                                       ; preds = %for.inc162
  store i32 %storemerge225258, i32* %arrayidx39, align 16, !tbaa !13
  br i1 %cmp137, label %for.body43, label %for.inc171, !llvm.loop !311

for.inc171:                                       ; preds = %for.inc166, %for.body16
  %path_num.9 = phi i32 [ %path_num.3261, %for.body16 ], [ %path_num.8, %for.inc166 ]
  %inc173 = add nuw nsw i32 %storemerge224260, 1
  store i32 %inc173, i32* %arrayidx12, align 4, !tbaa !13
  %exitcond285.not = icmp eq i32 %inc173, 4
  br i1 %exitcond285.not, label %for.inc175, label %for.body16, !llvm.loop !312

for.inc175:                                       ; preds = %for.inc171
  %inc177 = add nuw nsw i32 %storemerge223262, 1
  store i32 %inc177, i32* %arrayidx7, align 8, !tbaa !13
  %exitcond286.not = icmp eq i32 %inc177, 4
  br i1 %exitcond286.not, label %for.inc179, label %for.body11, !llvm.loop !313

for.inc179:                                       ; preds = %for.inc175
  %inc181 = add nuw nsw i32 %storemerge222264, 1
  store i32 %inc181, i32* %arrayidx2, align 4, !tbaa !13
  %exitcond287.not = icmp eq i32 %inc181, 4
  br i1 %exitcond287.not, label %for.inc183, label %for.body6, !llvm.loop !314

for.inc183:                                       ; preds = %for.inc179
  %inc185 = add nuw nsw i32 %storemerge266, 1
  store i32 %inc185, i32* %arrayidx, align 16, !tbaa !13
  %exitcond288.not = icmp eq i32 %inc185, 4
  br i1 %exitcond288.not, label %for.end186, label %for.body, !llvm.loop !315

for.end186:                                       ; preds = %for.inc183
  %18 = load i32, i32* @num_basic_paths, align 4, !tbaa !13
  %inc187 = add nsw i32 %18, 1
  store i32 %inc187, i32* @num_basic_paths, align 4, !tbaa !13
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %vec282) #31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #31
  ret i32 %path_num.9
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @is_path_equal(i32* nocapture readonly %path1, i32* nocapture readonly %path2, i32 %length) local_unnamed_addr #27 {
entry:
  %cmp8 = icmp sgt i32 %length, 0
  br i1 %cmp8, label %for.body.preheader, label %cleanup

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %length to i64
  br label %for.body

for.cond:                                         ; preds = %for.body
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !316

for.body:                                         ; preds = %for.body.preheader, %for.cond
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.cond ]
  %arrayidx = getelementptr inbounds i32, i32* %path1, i64 %indvars.iv
  %0 = load i32, i32* %arrayidx, align 4, !tbaa !13
  %arrayidx2 = getelementptr inbounds i32, i32* %path2, i64 %indvars.iv
  %1 = load i32, i32* %arrayidx2, align 4, !tbaa !13
  %cmp3.not = icmp eq i32 %0, %1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp3.not, label %for.cond, label %cleanup

cleanup:                                          ; preds = %for.body, %for.cond, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 1, %for.cond ], [ 0, %for.body ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define void @path_transport(i32 %src, i32 %dest, i32 %parity, i32* nocapture readonly %dir, i32 %length) local_unnamed_addr #1 {
entry:
  %cmp = icmp sgt i32 %length, 0
  br i1 %cmp, label %for.body.preheader, label %if.else164

for.body.preheader:                               ; preds = %entry
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv = sext i32 %0 to i64
  %call = tail call noalias align 16 i8* @calloc(i64 %conv, i64 48) #32
  %call2 = tail call noalias align 16 i8* @calloc(i64 %conv, i64 48) #32
  %call4 = tail call noalias align 16 i8* @calloc(i64 %conv, i64 48) #32
  %1 = bitcast i8* %call4 to %struct.su3_vector*
  %idx.ext = sext i32 %src to i64
  %sub = add nsw i32 %length, -1
  %2 = bitcast i8* %call2 to %struct.su3_vector*
  %3 = bitcast i8* %call to %struct.su3_vector*
  %4 = zext i32 %length to i64
  %5 = zext i32 %sub to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %if.end135
  %indvars.iv326.in = phi i64 [ %4, %for.body.preheader ], [ %indvars.iv326, %if.end135 ]
  %tmp_otherparity.0312 = phi i32 [ undef, %for.body.preheader ], [ %tmp_otherparity.1, %if.end135 ]
  %tmp_parity.0311 = phi i32 [ undef, %for.body.preheader ], [ %tmp_parity.1, %if.end135 ]
  %tmp_dest.0310 = phi %struct.su3_vector* [ %2, %for.body.preheader ], [ %tmp_src.0309, %if.end135 ]
  %tmp_src.0309 = phi %struct.su3_vector* [ %3, %for.body.preheader ], [ %tmp_dest.0310, %if.end135 ]
  %indvars.iv326 = add nsw i64 %indvars.iv326.in, -1
  %6 = and i64 %indvars.iv326, 1
  %cmp7 = icmp eq i64 %6, 0
  %switch.tableidx = add i32 %parity, -1
  %7 = icmp ult i32 %switch.tableidx, 3
  br i1 %cmp7, label %if.then9, label %if.else

if.then9:                                         ; preds = %for.body
  br i1 %7, label %switch.lookup, label %if.end

if.else:                                          ; preds = %for.body
  br i1 %7, label %switch.lookup341, label %if.end

switch.lookup:                                    ; preds = %if.then9
  %8 = sext i32 %switch.tableidx to i64
  %switch.gep = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.path_transport_hwv.10, i64 0, i64 %8
  %switch.load = load i32, i32* %switch.gep, align 4
  br label %if.end

switch.lookup341:                                 ; preds = %if.else
  %9 = sext i32 %switch.tableidx to i64
  %switch.gep343 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.path_transport_hwv.10, i64 0, i64 %9
  %switch.load344 = load i32, i32* %switch.gep343, align 4
  br label %if.end

if.end:                                           ; preds = %switch.lookup341, %if.else, %switch.lookup, %if.then9
  %tmp_parity.1 = phi i32 [ %parity, %if.then9 ], [ %tmp_parity.0311, %if.else ], [ %parity, %switch.lookup ], [ %switch.load344, %switch.lookup341 ]
  %tmp_otherparity.1 = phi i32 [ %tmp_otherparity.0312, %if.then9 ], [ %parity, %if.else ], [ %switch.load, %switch.lookup ], [ %parity, %switch.lookup341 ]
  %cmp17 = icmp eq i64 %indvars.iv326, %5
  br i1 %cmp17, label %if.then19, label %if.end34

if.then19:                                        ; preds = %if.end
  %cmp20 = icmp eq i32 %tmp_otherparity.1, 1
  %10 = load i32, i32* @even_sites_on_node, align 4
  %cond = select i1 %cmp20, i32 %10, i32 0
  %idxprom = sext i32 %cond to i64
  %cmp23 = icmp eq i32 %tmp_otherparity.1, 2
  %11 = load i32, i32* @sites_on_node, align 4
  %cond28292 = select i1 %cmp23, i32 %10, i32 %11
  %cmp29293 = icmp slt i32 %cond, %cond28292
  br i1 %cmp29293, label %for.body31.preheader, label %if.end34

for.body31.preheader:                             ; preds = %if.then19
  %12 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %12, i64 %idxprom
  br label %for.body31

for.body31:                                       ; preds = %for.body31.preheader, %for.body31
  %indvars.iv318 = phi i64 [ %idxprom, %for.body31.preheader ], [ %indvars.iv.next319, %for.body31 ]
  %s.0294 = phi %struct.site* [ %arrayidx, %for.body31.preheader ], [ %incdec.ptr, %for.body31 ]
  %arrayidx33 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %tmp_src.0309, i64 %indvars.iv318
  %13 = bitcast %struct.site* %s.0294 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext
  %14 = bitcast %struct.su3_vector* %arrayidx33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %14, i8* noundef nonnull align 8 dereferenceable(48) %add.ptr, i64 48, i1 false), !tbaa.struct !262
  %indvars.iv.next319 = add nsw i64 %indvars.iv318, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0294, i64 1
  %15 = load i32, i32* @even_sites_on_node, align 4
  %16 = load i32, i32* @sites_on_node, align 4
  %cond28 = select i1 %cmp23, i32 %15, i32 %16
  %17 = sext i32 %cond28 to i64
  %cmp29 = icmp slt i64 %indvars.iv.next319, %17
  br i1 %cmp29, label %for.body31, label %if.end34, !llvm.loop !317

if.end34:                                         ; preds = %for.body31, %if.then19, %if.end
  %arrayidx36 = getelementptr inbounds i32, i32* %dir, i64 %indvars.iv326
  %18 = load i32, i32* %arrayidx36, align 4, !tbaa !13
  %cmp37 = icmp slt i32 %18, 4
  br i1 %cmp37, label %if.then39, label %if.else73

if.then39:                                        ; preds = %if.end34
  %19 = bitcast %struct.su3_vector* %tmp_src.0309 to i8*
  %20 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call42 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %19, i32 48, i32 %18, i32 %tmp_parity.1, i8** %20) #32
  tail call void @wait_gather(%struct.msg_tag* %call42) #32
  %cmp43 = icmp eq i32 %tmp_parity.1, 1
  %21 = load i32, i32* @even_sites_on_node, align 4
  %cond48 = select i1 %cmp43, i32 %21, i32 0
  %idxprom49 = sext i32 %cond48 to i64
  %cmp52 = icmp eq i32 %tmp_parity.1, 2
  %22 = load i32, i32* @sites_on_node, align 4
  %cond57303 = select i1 %cmp52, i32 %21, i32 %22
  %cmp58304 = icmp slt i32 %cond48, %cond57303
  br i1 %cmp58304, label %for.body60.preheader, label %if.end135

for.body60.preheader:                             ; preds = %if.then39
  %23 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx50 = getelementptr inbounds %struct.site, %struct.site* %23, i64 %idxprom49
  br label %for.body60

for.body60:                                       ; preds = %for.body60.preheader, %for.body60
  %indvars.iv324 = phi i64 [ %idxprom49, %for.body60.preheader ], [ %indvars.iv.next325, %for.body60 ]
  %s.1305 = phi %struct.site* [ %arrayidx50, %for.body60.preheader ], [ %incdec.ptr71, %for.body60 ]
  %24 = load i32, i32* %arrayidx36, align 4, !tbaa !13
  %idxprom63 = sext i32 %24 to i64
  %arrayidx64 = getelementptr inbounds %struct.site, %struct.site* %s.1305, i64 0, i32 8, i64 %idxprom63
  %25 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx66 = getelementptr inbounds i8*, i8** %25, i64 %indvars.iv324
  %26 = bitcast i8** %arrayidx66 to %struct.su3_vector**
  %27 = load %struct.su3_vector*, %struct.su3_vector** %26, align 8, !tbaa !15
  %arrayidx68 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %tmp_dest.0310, i64 %indvars.iv324
  tail call void @mult_su3_mat_vec(%struct.su3_matrix* nonnull %arrayidx64, %struct.su3_vector* %27, %struct.su3_vector* %arrayidx68) #32
  %indvars.iv.next325 = add nsw i64 %indvars.iv324, 1
  %incdec.ptr71 = getelementptr inbounds %struct.site, %struct.site* %s.1305, i64 1
  %28 = load i32, i32* @even_sites_on_node, align 4
  %29 = load i32, i32* @sites_on_node, align 4
  %cond57 = select i1 %cmp52, i32 %28, i32 %29
  %30 = sext i32 %cond57 to i64
  %cmp58 = icmp slt i64 %indvars.iv.next325, %30
  br i1 %cmp58, label %for.body60, label %if.end135, !llvm.loop !318

if.else73:                                        ; preds = %if.end34
  %cmp74 = icmp eq i32 %tmp_otherparity.1, 1
  %31 = load i32, i32* @even_sites_on_node, align 4
  %cond79 = select i1 %cmp74, i32 %31, i32 0
  %idxprom80 = sext i32 %cond79 to i64
  %cmp83 = icmp eq i32 %tmp_otherparity.1, 2
  %32 = load i32, i32* @sites_on_node, align 4
  %cond88296 = select i1 %cmp83, i32 %31, i32 %32
  %cmp89297 = icmp slt i32 %cond79, %cond88296
  br i1 %cmp89297, label %for.body91.preheader, label %for.end105

for.body91.preheader:                             ; preds = %if.else73
  %33 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %sub95331 = sub nsw i32 7, %18
  %idxprom96332 = sext i32 %sub95331 to i64
  %arrayidx97333 = getelementptr inbounds %struct.site, %struct.site* %33, i64 %idxprom80, i32 8, i64 %idxprom96332
  %arrayidx99334 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %tmp_src.0309, i64 %idxprom80
  %arrayidx101335 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %1, i64 %idxprom80
  tail call void @mult_adj_su3_mat_vec(%struct.su3_matrix* nonnull %arrayidx97333, %struct.su3_vector* %arrayidx99334, %struct.su3_vector* %arrayidx101335) #32
  %indvars.iv.next321336 = add nsw i64 %idxprom80, 1
  %34 = load i32, i32* @even_sites_on_node, align 4
  %35 = load i32, i32* @sites_on_node, align 4
  %cond88337 = select i1 %cmp83, i32 %34, i32 %35
  %36 = sext i32 %cond88337 to i64
  %cmp89338 = icmp slt i64 %indvars.iv.next321336, %36
  br i1 %cmp89338, label %for.body91.for.body91_crit_edge.lr.ph, label %for.end105.loopexit, !llvm.loop !319

for.body91.for.body91_crit_edge.lr.ph:            ; preds = %for.body91.preheader
  %arrayidx81 = getelementptr inbounds %struct.site, %struct.site* %33, i64 %idxprom80
  br label %for.body91.for.body91_crit_edge

for.body91.for.body91_crit_edge:                  ; preds = %for.body91.for.body91_crit_edge.lr.ph, %for.body91.for.body91_crit_edge
  %indvars.iv.next321340 = phi i64 [ %indvars.iv.next321336, %for.body91.for.body91_crit_edge.lr.ph ], [ %indvars.iv.next321, %for.body91.for.body91_crit_edge ]
  %s.2298339 = phi %struct.site* [ %arrayidx81, %for.body91.for.body91_crit_edge.lr.ph ], [ %incdec.ptr104, %for.body91.for.body91_crit_edge ]
  %incdec.ptr104 = getelementptr inbounds %struct.site, %struct.site* %s.2298339, i64 1
  %.pre = load i32, i32* %arrayidx36, align 4, !tbaa !13
  %sub95 = sub nsw i32 7, %.pre
  %idxprom96 = sext i32 %sub95 to i64
  %arrayidx97 = getelementptr inbounds %struct.site, %struct.site* %s.2298339, i64 1, i32 8, i64 %idxprom96
  %arrayidx99 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %tmp_src.0309, i64 %indvars.iv.next321340
  %arrayidx101 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %1, i64 %indvars.iv.next321340
  tail call void @mult_adj_su3_mat_vec(%struct.su3_matrix* nonnull %arrayidx97, %struct.su3_vector* %arrayidx99, %struct.su3_vector* %arrayidx101) #32
  %indvars.iv.next321 = add nsw i64 %indvars.iv.next321340, 1
  %37 = load i32, i32* @even_sites_on_node, align 4
  %38 = load i32, i32* @sites_on_node, align 4
  %cond88 = select i1 %cmp83, i32 %37, i32 %38
  %39 = sext i32 %cond88 to i64
  %cmp89 = icmp slt i64 %indvars.iv.next321, %39
  br i1 %cmp89, label %for.body91.for.body91_crit_edge, label %for.end105.loopexit, !llvm.loop !319

for.end105.loopexit:                              ; preds = %for.body91.for.body91_crit_edge, %for.body91.preheader
  %.pre328 = load i32, i32* %arrayidx36, align 4, !tbaa !13
  br label %for.end105

for.end105:                                       ; preds = %for.end105.loopexit, %if.else73
  %40 = phi i32 [ %.pre328, %for.end105.loopexit ], [ %18, %if.else73 ]
  %41 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call108 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %call4, i32 48, i32 %40, i32 %tmp_parity.1, i8** %41) #32
  tail call void @wait_gather(%struct.msg_tag* %call108) #32
  %cmp109 = icmp eq i32 %tmp_parity.1, 1
  %42 = load i32, i32* @even_sites_on_node, align 4
  %cond114 = select i1 %cmp109, i32 %42, i32 0
  %cmp118 = icmp eq i32 %tmp_parity.1, 2
  %43 = load i32, i32* @sites_on_node, align 4
  %cond123300 = select i1 %cmp118, i32 %42, i32 %43
  %cmp124301 = icmp slt i32 %cond114, %cond123300
  br i1 %cmp124301, label %for.body126.preheader, label %if.end135

for.body126.preheader:                            ; preds = %for.end105
  %44 = sext i32 %cond114 to i64
  br label %for.body126

for.body126:                                      ; preds = %for.body126.preheader, %for.body126
  %indvars.iv322 = phi i64 [ %44, %for.body126.preheader ], [ %indvars.iv.next323, %for.body126 ]
  %arrayidx128 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %tmp_dest.0310, i64 %indvars.iv322
  %45 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx130 = getelementptr inbounds i8*, i8** %45, i64 %indvars.iv322
  %46 = load i8*, i8** %arrayidx130, align 8, !tbaa !15
  %47 = bitcast %struct.su3_vector* %arrayidx128 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %47, i8* noundef nonnull align 8 dereferenceable(48) %46, i64 48, i1 false), !tbaa.struct !262
  %indvars.iv.next323 = add nsw i64 %indvars.iv322, 1
  %48 = load i32, i32* @even_sites_on_node, align 4
  %49 = load i32, i32* @sites_on_node, align 4
  %cond123 = select i1 %cmp118, i32 %48, i32 %49
  %50 = sext i32 %cond123 to i64
  %cmp124 = icmp slt i64 %indvars.iv.next323, %50
  br i1 %cmp124, label %for.body126, label %if.end135, !llvm.loop !320

if.end135:                                        ; preds = %for.body126, %for.body60, %for.end105, %if.then39
  %call108.sink = phi %struct.msg_tag* [ %call42, %if.then39 ], [ %call108, %for.end105 ], [ %call42, %for.body60 ], [ %call108, %for.body126 ]
  tail call void @cleanup_gather(%struct.msg_tag* %call108.sink) #32
  %cmp5 = icmp sgt i64 %indvars.iv326.in, 1
  br i1 %cmp5, label %for.body, label %for.end137, !llvm.loop !321

for.end137:                                       ; preds = %if.end135
  %.pre329 = load i32, i32* @sites_on_node, align 4
  %cmp138 = icmp eq i32 %parity, 1
  %51 = load i32, i32* @even_sites_on_node, align 4
  %cond143 = select i1 %cmp138, i32 %51, i32 0
  %idxprom144 = sext i32 %cond143 to i64
  %cmp147 = icmp eq i32 %parity, 2
  %idx.ext156 = sext i32 %dest to i64
  %cond152288 = select i1 %cmp147, i32 %51, i32 %.pre329
  %cmp153289 = icmp slt i32 %cond143, %cond152288
  br i1 %cmp153289, label %for.body155.preheader, label %for.end163

for.body155.preheader:                            ; preds = %for.end137
  %52 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx145 = getelementptr inbounds %struct.site, %struct.site* %52, i64 %idxprom144
  br label %for.body155

for.body155:                                      ; preds = %for.body155.preheader, %for.body155
  %indvars.iv = phi i64 [ %idxprom144, %for.body155.preheader ], [ %indvars.iv.next, %for.body155 ]
  %s.4290 = phi %struct.site* [ %arrayidx145, %for.body155.preheader ], [ %incdec.ptr162, %for.body155 ]
  %53 = bitcast %struct.site* %s.4290 to i8*
  %add.ptr157 = getelementptr inbounds i8, i8* %53, i64 %idx.ext156
  %arrayidx159 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %tmp_dest.0310, i64 %indvars.iv
  %54 = bitcast %struct.su3_vector* %arrayidx159 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %add.ptr157, i8* noundef nonnull align 8 dereferenceable(48) %54, i64 48, i1 false), !tbaa.struct !262
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %incdec.ptr162 = getelementptr inbounds %struct.site, %struct.site* %s.4290, i64 1
  %55 = load i32, i32* @even_sites_on_node, align 4
  %56 = load i32, i32* @sites_on_node, align 4
  %cond152 = select i1 %cmp147, i32 %55, i32 %56
  %57 = sext i32 %cond152 to i64
  %cmp153 = icmp slt i64 %indvars.iv.next, %57
  br i1 %cmp153, label %for.body155, label %for.end163, !llvm.loop !322

for.end163:                                       ; preds = %for.body155, %for.end137
  %58 = bitcast %struct.su3_vector* %tmp_dest.0310 to i8*
  tail call void @free(i8* %58) #32
  %59 = bitcast %struct.su3_vector* %tmp_src.0309 to i8*
  tail call void @free(i8* %59) #32
  tail call void @free(i8* %call4) #32
  br label %if.end195

if.else164:                                       ; preds = %entry
  %cmp165.not = icmp eq i32 %src, %dest
  br i1 %cmp165.not, label %if.end195, label %if.then167

if.then167:                                       ; preds = %if.else164
  %cmp168 = icmp eq i32 %parity, 1
  %60 = load i32, i32* @even_sites_on_node, align 4
  %cond173 = select i1 %cmp168, i32 %60, i32 0
  %cmp177 = icmp eq i32 %parity, 2
  %idx.ext186 = sext i32 %dest to i64
  %idx.ext188 = sext i32 %src to i64
  %61 = load i32, i32* @sites_on_node, align 4
  %cond182314 = select i1 %cmp177, i32 %60, i32 %61
  %cmp183315 = icmp slt i32 %cond173, %cond182314
  br i1 %cmp183315, label %for.body185.preheader, label %if.end195

for.body185.preheader:                            ; preds = %if.then167
  %62 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom174 = sext i32 %cond173 to i64
  %arrayidx175 = getelementptr inbounds %struct.site, %struct.site* %62, i64 %idxprom174
  br label %for.body185

for.body185:                                      ; preds = %for.body185.preheader, %for.body185
  %i.5317 = phi i32 [ %inc191, %for.body185 ], [ %cond173, %for.body185.preheader ]
  %s.5316 = phi %struct.site* [ %incdec.ptr192, %for.body185 ], [ %arrayidx175, %for.body185.preheader ]
  %63 = bitcast %struct.site* %s.5316 to i8*
  %add.ptr187 = getelementptr inbounds i8, i8* %63, i64 %idx.ext186
  %add.ptr189 = getelementptr inbounds i8, i8* %63, i64 %idx.ext188
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %add.ptr187, i8* noundef nonnull align 8 dereferenceable(48) %add.ptr189, i64 48, i1 false), !tbaa.struct !262
  %inc191 = add nsw i32 %i.5317, 1
  %incdec.ptr192 = getelementptr inbounds %struct.site, %struct.site* %s.5316, i64 1
  %64 = load i32, i32* @even_sites_on_node, align 4
  %65 = load i32, i32* @sites_on_node, align 4
  %cond182 = select i1 %cmp177, i32 %64, i32 %65
  %cmp183 = icmp slt i32 %inc191, %cond182
  br i1 %cmp183, label %for.body185, label %if.end195, !llvm.loop !323

if.end195:                                        ; preds = %for.body185, %if.then167, %if.else164, %for.end163
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @path_transport_hwv(i32 %src, i32 %dest, i32 %parity, i32* nocapture readonly %dir, i32 %length) local_unnamed_addr #1 {
entry:
  %cmp = icmp sgt i32 %length, 0
  br i1 %cmp, label %for.body.preheader, label %if.else164

for.body.preheader:                               ; preds = %entry
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv = sext i32 %0 to i64
  %call = tail call noalias align 16 i8* @calloc(i64 %conv, i64 96) #32
  %call2 = tail call noalias align 16 i8* @calloc(i64 %conv, i64 96) #32
  %call4 = tail call noalias align 16 i8* @calloc(i64 %conv, i64 96) #32
  %1 = bitcast i8* %call4 to %struct.half_wilson_vector*
  %idx.ext = sext i32 %src to i64
  %sub = add nsw i32 %length, -1
  %2 = bitcast i8* %call2 to %struct.half_wilson_vector*
  %3 = bitcast i8* %call to %struct.half_wilson_vector*
  %4 = zext i32 %length to i64
  %5 = zext i32 %sub to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %if.end135
  %indvars.iv326.in = phi i64 [ %4, %for.body.preheader ], [ %indvars.iv326, %if.end135 ]
  %tmp_otherparity.0312 = phi i32 [ undef, %for.body.preheader ], [ %tmp_otherparity.1, %if.end135 ]
  %tmp_parity.0311 = phi i32 [ undef, %for.body.preheader ], [ %tmp_parity.1, %if.end135 ]
  %tmp_dest.0310 = phi %struct.half_wilson_vector* [ %2, %for.body.preheader ], [ %tmp_src.0309, %if.end135 ]
  %tmp_src.0309 = phi %struct.half_wilson_vector* [ %3, %for.body.preheader ], [ %tmp_dest.0310, %if.end135 ]
  %indvars.iv326 = add nsw i64 %indvars.iv326.in, -1
  %6 = and i64 %indvars.iv326, 1
  %cmp7 = icmp eq i64 %6, 0
  %switch.tableidx = add i32 %parity, -1
  %7 = icmp ult i32 %switch.tableidx, 3
  br i1 %cmp7, label %if.then9, label %if.else

if.then9:                                         ; preds = %for.body
  br i1 %7, label %switch.lookup, label %if.end

if.else:                                          ; preds = %for.body
  br i1 %7, label %switch.lookup341, label %if.end

switch.lookup:                                    ; preds = %if.then9
  %8 = sext i32 %switch.tableidx to i64
  %switch.gep = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.path_transport_hwv.10, i64 0, i64 %8
  %switch.load = load i32, i32* %switch.gep, align 4
  br label %if.end

switch.lookup341:                                 ; preds = %if.else
  %9 = sext i32 %switch.tableidx to i64
  %switch.gep343 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.path_transport_hwv.10, i64 0, i64 %9
  %switch.load344 = load i32, i32* %switch.gep343, align 4
  br label %if.end

if.end:                                           ; preds = %switch.lookup341, %if.else, %switch.lookup, %if.then9
  %tmp_parity.1 = phi i32 [ %parity, %if.then9 ], [ %tmp_parity.0311, %if.else ], [ %parity, %switch.lookup ], [ %switch.load344, %switch.lookup341 ]
  %tmp_otherparity.1 = phi i32 [ %tmp_otherparity.0312, %if.then9 ], [ %parity, %if.else ], [ %switch.load, %switch.lookup ], [ %parity, %switch.lookup341 ]
  %cmp17 = icmp eq i64 %indvars.iv326, %5
  br i1 %cmp17, label %if.then19, label %if.end34

if.then19:                                        ; preds = %if.end
  %cmp20 = icmp eq i32 %tmp_otherparity.1, 1
  %10 = load i32, i32* @even_sites_on_node, align 4
  %cond = select i1 %cmp20, i32 %10, i32 0
  %idxprom = sext i32 %cond to i64
  %cmp23 = icmp eq i32 %tmp_otherparity.1, 2
  %11 = load i32, i32* @sites_on_node, align 4
  %cond28292 = select i1 %cmp23, i32 %10, i32 %11
  %cmp29293 = icmp slt i32 %cond, %cond28292
  br i1 %cmp29293, label %for.body31.preheader, label %if.end34

for.body31.preheader:                             ; preds = %if.then19
  %12 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %12, i64 %idxprom
  br label %for.body31

for.body31:                                       ; preds = %for.body31.preheader, %for.body31
  %indvars.iv318 = phi i64 [ %idxprom, %for.body31.preheader ], [ %indvars.iv.next319, %for.body31 ]
  %s.0294 = phi %struct.site* [ %arrayidx, %for.body31.preheader ], [ %incdec.ptr, %for.body31 ]
  %arrayidx33 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %tmp_src.0309, i64 %indvars.iv318
  %13 = bitcast %struct.site* %s.0294 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %idx.ext
  %14 = bitcast %struct.half_wilson_vector* %arrayidx33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(96) %14, i8* noundef nonnull align 8 dereferenceable(96) %add.ptr, i64 96, i1 false), !tbaa.struct !324
  %indvars.iv.next319 = add nsw i64 %indvars.iv318, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0294, i64 1
  %15 = load i32, i32* @even_sites_on_node, align 4
  %16 = load i32, i32* @sites_on_node, align 4
  %cond28 = select i1 %cmp23, i32 %15, i32 %16
  %17 = sext i32 %cond28 to i64
  %cmp29 = icmp slt i64 %indvars.iv.next319, %17
  br i1 %cmp29, label %for.body31, label %if.end34, !llvm.loop !325

if.end34:                                         ; preds = %for.body31, %if.then19, %if.end
  %arrayidx36 = getelementptr inbounds i32, i32* %dir, i64 %indvars.iv326
  %18 = load i32, i32* %arrayidx36, align 4, !tbaa !13
  %cmp37 = icmp slt i32 %18, 4
  br i1 %cmp37, label %if.then39, label %if.else73

if.then39:                                        ; preds = %if.end34
  %19 = bitcast %struct.half_wilson_vector* %tmp_src.0309 to i8*
  %20 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call42 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %19, i32 96, i32 %18, i32 %tmp_parity.1, i8** %20) #32
  tail call void @wait_gather(%struct.msg_tag* %call42) #32
  %cmp43 = icmp eq i32 %tmp_parity.1, 1
  %21 = load i32, i32* @even_sites_on_node, align 4
  %cond48 = select i1 %cmp43, i32 %21, i32 0
  %idxprom49 = sext i32 %cond48 to i64
  %cmp52 = icmp eq i32 %tmp_parity.1, 2
  %22 = load i32, i32* @sites_on_node, align 4
  %cond57303 = select i1 %cmp52, i32 %21, i32 %22
  %cmp58304 = icmp slt i32 %cond48, %cond57303
  br i1 %cmp58304, label %for.body60.preheader, label %if.end135

for.body60.preheader:                             ; preds = %if.then39
  %23 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx50 = getelementptr inbounds %struct.site, %struct.site* %23, i64 %idxprom49
  br label %for.body60

for.body60:                                       ; preds = %for.body60.preheader, %for.body60
  %indvars.iv324 = phi i64 [ %idxprom49, %for.body60.preheader ], [ %indvars.iv.next325, %for.body60 ]
  %s.1305 = phi %struct.site* [ %arrayidx50, %for.body60.preheader ], [ %incdec.ptr71, %for.body60 ]
  %24 = load i32, i32* %arrayidx36, align 4, !tbaa !13
  %idxprom63 = sext i32 %24 to i64
  %arrayidx64 = getelementptr inbounds %struct.site, %struct.site* %s.1305, i64 0, i32 8, i64 %idxprom63
  %25 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx66 = getelementptr inbounds i8*, i8** %25, i64 %indvars.iv324
  %26 = bitcast i8** %arrayidx66 to %struct.half_wilson_vector**
  %27 = load %struct.half_wilson_vector*, %struct.half_wilson_vector** %26, align 8, !tbaa !15
  %arrayidx68 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %tmp_dest.0310, i64 %indvars.iv324
  tail call void @mult_su3_mat_hwvec(%struct.su3_matrix* nonnull %arrayidx64, %struct.half_wilson_vector* %27, %struct.half_wilson_vector* %arrayidx68) #32
  %indvars.iv.next325 = add nsw i64 %indvars.iv324, 1
  %incdec.ptr71 = getelementptr inbounds %struct.site, %struct.site* %s.1305, i64 1
  %28 = load i32, i32* @even_sites_on_node, align 4
  %29 = load i32, i32* @sites_on_node, align 4
  %cond57 = select i1 %cmp52, i32 %28, i32 %29
  %30 = sext i32 %cond57 to i64
  %cmp58 = icmp slt i64 %indvars.iv.next325, %30
  br i1 %cmp58, label %for.body60, label %if.end135, !llvm.loop !326

if.else73:                                        ; preds = %if.end34
  %cmp74 = icmp eq i32 %tmp_otherparity.1, 1
  %31 = load i32, i32* @even_sites_on_node, align 4
  %cond79 = select i1 %cmp74, i32 %31, i32 0
  %idxprom80 = sext i32 %cond79 to i64
  %cmp83 = icmp eq i32 %tmp_otherparity.1, 2
  %32 = load i32, i32* @sites_on_node, align 4
  %cond88296 = select i1 %cmp83, i32 %31, i32 %32
  %cmp89297 = icmp slt i32 %cond79, %cond88296
  br i1 %cmp89297, label %for.body91.preheader, label %for.end105

for.body91.preheader:                             ; preds = %if.else73
  %33 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %sub95331 = sub nsw i32 7, %18
  %idxprom96332 = sext i32 %sub95331 to i64
  %arrayidx97333 = getelementptr inbounds %struct.site, %struct.site* %33, i64 %idxprom80, i32 8, i64 %idxprom96332
  %arrayidx99334 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %tmp_src.0309, i64 %idxprom80
  %arrayidx101335 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %1, i64 %idxprom80
  tail call void @mult_adj_su3_mat_hwvec(%struct.su3_matrix* nonnull %arrayidx97333, %struct.half_wilson_vector* %arrayidx99334, %struct.half_wilson_vector* %arrayidx101335) #32
  %indvars.iv.next321336 = add nsw i64 %idxprom80, 1
  %34 = load i32, i32* @even_sites_on_node, align 4
  %35 = load i32, i32* @sites_on_node, align 4
  %cond88337 = select i1 %cmp83, i32 %34, i32 %35
  %36 = sext i32 %cond88337 to i64
  %cmp89338 = icmp slt i64 %indvars.iv.next321336, %36
  br i1 %cmp89338, label %for.body91.for.body91_crit_edge.lr.ph, label %for.end105.loopexit, !llvm.loop !327

for.body91.for.body91_crit_edge.lr.ph:            ; preds = %for.body91.preheader
  %arrayidx81 = getelementptr inbounds %struct.site, %struct.site* %33, i64 %idxprom80
  br label %for.body91.for.body91_crit_edge

for.body91.for.body91_crit_edge:                  ; preds = %for.body91.for.body91_crit_edge.lr.ph, %for.body91.for.body91_crit_edge
  %indvars.iv.next321340 = phi i64 [ %indvars.iv.next321336, %for.body91.for.body91_crit_edge.lr.ph ], [ %indvars.iv.next321, %for.body91.for.body91_crit_edge ]
  %s.2298339 = phi %struct.site* [ %arrayidx81, %for.body91.for.body91_crit_edge.lr.ph ], [ %incdec.ptr104, %for.body91.for.body91_crit_edge ]
  %incdec.ptr104 = getelementptr inbounds %struct.site, %struct.site* %s.2298339, i64 1
  %.pre = load i32, i32* %arrayidx36, align 4, !tbaa !13
  %sub95 = sub nsw i32 7, %.pre
  %idxprom96 = sext i32 %sub95 to i64
  %arrayidx97 = getelementptr inbounds %struct.site, %struct.site* %s.2298339, i64 1, i32 8, i64 %idxprom96
  %arrayidx99 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %tmp_src.0309, i64 %indvars.iv.next321340
  %arrayidx101 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %1, i64 %indvars.iv.next321340
  tail call void @mult_adj_su3_mat_hwvec(%struct.su3_matrix* nonnull %arrayidx97, %struct.half_wilson_vector* %arrayidx99, %struct.half_wilson_vector* %arrayidx101) #32
  %indvars.iv.next321 = add nsw i64 %indvars.iv.next321340, 1
  %37 = load i32, i32* @even_sites_on_node, align 4
  %38 = load i32, i32* @sites_on_node, align 4
  %cond88 = select i1 %cmp83, i32 %37, i32 %38
  %39 = sext i32 %cond88 to i64
  %cmp89 = icmp slt i64 %indvars.iv.next321, %39
  br i1 %cmp89, label %for.body91.for.body91_crit_edge, label %for.end105.loopexit, !llvm.loop !327

for.end105.loopexit:                              ; preds = %for.body91.for.body91_crit_edge, %for.body91.preheader
  %.pre328 = load i32, i32* %arrayidx36, align 4, !tbaa !13
  br label %for.end105

for.end105:                                       ; preds = %for.end105.loopexit, %if.else73
  %40 = phi i32 [ %.pre328, %for.end105.loopexit ], [ %18, %if.else73 ]
  %41 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call108 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %call4, i32 96, i32 %40, i32 %tmp_parity.1, i8** %41) #32
  tail call void @wait_gather(%struct.msg_tag* %call108) #32
  %cmp109 = icmp eq i32 %tmp_parity.1, 1
  %42 = load i32, i32* @even_sites_on_node, align 4
  %cond114 = select i1 %cmp109, i32 %42, i32 0
  %cmp118 = icmp eq i32 %tmp_parity.1, 2
  %43 = load i32, i32* @sites_on_node, align 4
  %cond123300 = select i1 %cmp118, i32 %42, i32 %43
  %cmp124301 = icmp slt i32 %cond114, %cond123300
  br i1 %cmp124301, label %for.body126.preheader, label %if.end135

for.body126.preheader:                            ; preds = %for.end105
  %44 = sext i32 %cond114 to i64
  br label %for.body126

for.body126:                                      ; preds = %for.body126.preheader, %for.body126
  %indvars.iv322 = phi i64 [ %44, %for.body126.preheader ], [ %indvars.iv.next323, %for.body126 ]
  %arrayidx128 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %tmp_dest.0310, i64 %indvars.iv322
  %45 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx130 = getelementptr inbounds i8*, i8** %45, i64 %indvars.iv322
  %46 = load i8*, i8** %arrayidx130, align 8, !tbaa !15
  %47 = bitcast %struct.half_wilson_vector* %arrayidx128 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(96) %47, i8* noundef nonnull align 8 dereferenceable(96) %46, i64 96, i1 false), !tbaa.struct !324
  %indvars.iv.next323 = add nsw i64 %indvars.iv322, 1
  %48 = load i32, i32* @even_sites_on_node, align 4
  %49 = load i32, i32* @sites_on_node, align 4
  %cond123 = select i1 %cmp118, i32 %48, i32 %49
  %50 = sext i32 %cond123 to i64
  %cmp124 = icmp slt i64 %indvars.iv.next323, %50
  br i1 %cmp124, label %for.body126, label %if.end135, !llvm.loop !328

if.end135:                                        ; preds = %for.body126, %for.body60, %for.end105, %if.then39
  %call108.sink = phi %struct.msg_tag* [ %call42, %if.then39 ], [ %call108, %for.end105 ], [ %call42, %for.body60 ], [ %call108, %for.body126 ]
  tail call void @cleanup_gather(%struct.msg_tag* %call108.sink) #32
  %cmp5 = icmp sgt i64 %indvars.iv326.in, 1
  br i1 %cmp5, label %for.body, label %for.end137, !llvm.loop !329

for.end137:                                       ; preds = %if.end135
  %.pre329 = load i32, i32* @sites_on_node, align 4
  %cmp138 = icmp eq i32 %parity, 1
  %51 = load i32, i32* @even_sites_on_node, align 4
  %cond143 = select i1 %cmp138, i32 %51, i32 0
  %idxprom144 = sext i32 %cond143 to i64
  %cmp147 = icmp eq i32 %parity, 2
  %idx.ext156 = sext i32 %dest to i64
  %cond152288 = select i1 %cmp147, i32 %51, i32 %.pre329
  %cmp153289 = icmp slt i32 %cond143, %cond152288
  br i1 %cmp153289, label %for.body155.preheader, label %for.end163

for.body155.preheader:                            ; preds = %for.end137
  %52 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx145 = getelementptr inbounds %struct.site, %struct.site* %52, i64 %idxprom144
  br label %for.body155

for.body155:                                      ; preds = %for.body155.preheader, %for.body155
  %indvars.iv = phi i64 [ %idxprom144, %for.body155.preheader ], [ %indvars.iv.next, %for.body155 ]
  %s.4290 = phi %struct.site* [ %arrayidx145, %for.body155.preheader ], [ %incdec.ptr162, %for.body155 ]
  %53 = bitcast %struct.site* %s.4290 to i8*
  %add.ptr157 = getelementptr inbounds i8, i8* %53, i64 %idx.ext156
  %arrayidx159 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %tmp_dest.0310, i64 %indvars.iv
  %54 = bitcast %struct.half_wilson_vector* %arrayidx159 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(96) %add.ptr157, i8* noundef nonnull align 8 dereferenceable(96) %54, i64 96, i1 false), !tbaa.struct !324
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %incdec.ptr162 = getelementptr inbounds %struct.site, %struct.site* %s.4290, i64 1
  %55 = load i32, i32* @even_sites_on_node, align 4
  %56 = load i32, i32* @sites_on_node, align 4
  %cond152 = select i1 %cmp147, i32 %55, i32 %56
  %57 = sext i32 %cond152 to i64
  %cmp153 = icmp slt i64 %indvars.iv.next, %57
  br i1 %cmp153, label %for.body155, label %for.end163, !llvm.loop !330

for.end163:                                       ; preds = %for.body155, %for.end137
  %58 = bitcast %struct.half_wilson_vector* %tmp_dest.0310 to i8*
  tail call void @free(i8* %58) #32
  %59 = bitcast %struct.half_wilson_vector* %tmp_src.0309 to i8*
  tail call void @free(i8* %59) #32
  tail call void @free(i8* %call4) #32
  br label %if.end195

if.else164:                                       ; preds = %entry
  %cmp165.not = icmp eq i32 %src, %dest
  br i1 %cmp165.not, label %if.end195, label %if.then167

if.then167:                                       ; preds = %if.else164
  %cmp168 = icmp eq i32 %parity, 1
  %60 = load i32, i32* @even_sites_on_node, align 4
  %cond173 = select i1 %cmp168, i32 %60, i32 0
  %cmp177 = icmp eq i32 %parity, 2
  %idx.ext186 = sext i32 %dest to i64
  %idx.ext188 = sext i32 %src to i64
  %61 = load i32, i32* @sites_on_node, align 4
  %cond182314 = select i1 %cmp177, i32 %60, i32 %61
  %cmp183315 = icmp slt i32 %cond173, %cond182314
  br i1 %cmp183315, label %for.body185.preheader, label %if.end195

for.body185.preheader:                            ; preds = %if.then167
  %62 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom174 = sext i32 %cond173 to i64
  %arrayidx175 = getelementptr inbounds %struct.site, %struct.site* %62, i64 %idxprom174
  br label %for.body185

for.body185:                                      ; preds = %for.body185.preheader, %for.body185
  %i.5317 = phi i32 [ %inc191, %for.body185 ], [ %cond173, %for.body185.preheader ]
  %s.5316 = phi %struct.site* [ %incdec.ptr192, %for.body185 ], [ %arrayidx175, %for.body185.preheader ]
  %63 = bitcast %struct.site* %s.5316 to i8*
  %add.ptr187 = getelementptr inbounds i8, i8* %63, i64 %idx.ext186
  %add.ptr189 = getelementptr inbounds i8, i8* %63, i64 %idx.ext188
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(96) %add.ptr187, i8* noundef nonnull align 8 dereferenceable(96) %add.ptr189, i64 96, i1 false), !tbaa.struct !324
  %inc191 = add nsw i32 %i.5317, 1
  %incdec.ptr192 = getelementptr inbounds %struct.site, %struct.site* %s.5316, i64 1
  %64 = load i32, i32* @even_sites_on_node, align 4
  %65 = load i32, i32* @sites_on_node, align 4
  %cond182 = select i1 %cmp177, i32 %64, i32 %65
  %cmp183 = icmp slt i32 %inc191, %cond182
  br i1 %cmp183, label %for.body185, label %if.end195, !llvm.loop !331

if.end195:                                        ; preds = %for.body185, %if.then167, %if.else164, %for.end163
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @load_longlinks() local_unnamed_addr #1 {
entry:
  %disp = alloca [4 x i32], align 16
  %0 = bitcast [4 x i32]* %disp to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #31
  %1 = load i32, i32* @phases_in, align 4, !tbaa !13
  %cmp.not = icmp eq i32 %1, 1
  br i1 %cmp.not, label %if.end3, label %if.then

if.then:                                          ; preds = %entry
  %2 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp1 = icmp eq i32 %2, 0
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([38 x i8], [38 x i8]* @str.7, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  tail call void @terminate(i32 0) #32
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry
  %.pre = load i32, i32* @sites_on_node, align 4, !tbaa !13
  br label %for.body

for.body:                                         ; preds = %if.end3, %for.inc88
  %3 = phi i32 [ %.pre, %if.end3 ], [ %21, %for.inc88 ]
  %indvars.iv151 = phi i64 [ 0, %if.end3 ], [ %indvars.iv.next152, %for.inc88 ]
  %cmp6132 = icmp sgt i32 %3, 0
  br i1 %cmp6132, label %for.body7.preheader, label %for.cond8.preheader

for.body7.preheader:                              ; preds = %for.body
  %4 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body7

for.cond8.preheader:                              ; preds = %for.body7, %for.body
  %5 = phi i32 [ %3, %for.body ], [ %7, %for.body7 ]
  %arrayidx51 = getelementptr inbounds [4 x i32], [4 x i32]* %disp, i64 0, i64 %indvars.iv151
  %6 = load i32, i32* @num_q_paths, align 4, !tbaa !13
  %cmp9142 = icmp sgt i32 %6, 0
  br i1 %cmp9142, label %for.cond11.preheader, label %for.inc88

for.body7:                                        ; preds = %for.body7.preheader, %for.body7
  %s.0134 = phi %struct.site* [ %incdec.ptr, %for.body7 ], [ %4, %for.body7.preheader ]
  %i.0133 = phi i32 [ %inc, %for.body7 ], [ 0, %for.body7.preheader ]
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %s.0134, i64 0, i32 9, i64 %indvars.iv151
  tail call void @clear_su3mat(%struct.su3_matrix* nonnull %arrayidx) #32
  %inc = add nuw nsw i32 %i.0133, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0134, i64 1
  %7 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp6 = icmp slt i32 %inc, %7
  br i1 %cmp6, label %for.body7, label %for.cond8.preheader, !llvm.loop !332

for.cond11.preheader:                             ; preds = %for.cond8.preheader, %for.inc85
  %8 = phi i32 [ %18, %for.inc85 ], [ %5, %for.cond8.preheader ]
  %indvars.iv149 = phi i64 [ %indvars.iv.next150, %for.inc85 ], [ 0, %for.cond8.preheader ]
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  %length = getelementptr inbounds [688 x %struct.anon], [688 x %struct.anon]* @q_paths, i64 0, i64 %indvars.iv149, i32 1
  %9 = load i32, i32* %length, align 4, !tbaa !306
  %cmp22136 = icmp sgt i32 %9, 0
  br i1 %cmp22136, label %for.body23.preheader, label %for.end49

for.body23.preheader:                             ; preds = %for.cond11.preheader
  %wide.trip.count = zext i32 %9 to i64
  br label %for.body23

for.body23:                                       ; preds = %for.body23.preheader, %for.body23
  %indvars.iv = phi i64 [ 0, %for.body23.preheader ], [ %indvars.iv.next, %for.body23 ]
  %arrayidx28 = getelementptr inbounds [688 x %struct.anon], [688 x %struct.anon]* @q_paths, i64 0, i64 %indvars.iv149, i32 0, i64 %indvars.iv
  %10 = load i32, i32* %arrayidx28, align 4, !tbaa !13
  %cmp29 = icmp slt i32 %10, 4
  %sub = sub nsw i32 7, %10
  %.sink = select i1 %cmp29, i32 %10, i32 %sub
  %.sink157 = select i1 %cmp29, i32 1, i32 -1
  %idxprom36 = sext i32 %.sink to i64
  %arrayidx37 = getelementptr inbounds [4 x i32], [4 x i32]* %disp, i64 0, i64 %idxprom36
  %11 = load i32, i32* %arrayidx37, align 4, !tbaa !13
  %inc38 = add nsw i32 %11, %.sink157
  store i32 %inc38, i32* %arrayidx37, align 4, !tbaa !13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end49, label %for.body23, !llvm.loop !333

for.end49:                                        ; preds = %for.body23, %for.cond11.preheader
  %12 = load i32, i32* %arrayidx51, align 4, !tbaa !13
  %add = add nsw i32 %12, 3
  store i32 %add, i32* %arrayidx51, align 4, !tbaa !13
  br label %for.body54

for.cond52:                                       ; preds = %for.body54
  %indvars.iv.next147 = add nuw nsw i64 %indvars.iv146, 1
  %exitcond148.not = icmp eq i64 %indvars.iv.next147, 4
  br i1 %exitcond148.not, label %if.end65, label %for.body54, !llvm.loop !334

for.body54:                                       ; preds = %for.end49, %for.cond52
  %indvars.iv146 = phi i64 [ 0, %for.end49 ], [ %indvars.iv.next147, %for.cond52 ]
  %arrayidx56 = getelementptr inbounds [4 x i32], [4 x i32]* %disp, i64 0, i64 %indvars.iv146
  %13 = load i32, i32* %arrayidx56, align 4, !tbaa !13
  %cmp57.not = icmp eq i32 %13, 0
  br i1 %cmp57.not, label %for.cond52, label %for.inc85

if.end65:                                         ; preds = %for.cond52
  %arraydecay = getelementptr inbounds [688 x %struct.anon], [688 x %struct.anon]* @q_paths, i64 0, i64 %indvars.iv149, i32 0, i64 0
  tail call void @path_product(i32* nonnull %arraydecay, i32 %9) #32
  %coeff = getelementptr inbounds [688 x %struct.anon], [688 x %struct.anon]* @q_paths, i64 0, i64 %indvars.iv149, i32 2
  %14 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp73139 = icmp sgt i32 %14, 0
  br i1 %cmp73139, label %for.body74.preheader, label %for.inc85

for.body74.preheader:                             ; preds = %if.end65
  %15 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body74

for.body74:                                       ; preds = %for.body74.preheader, %for.body74
  %s.1141 = phi %struct.site* [ %incdec.ptr83, %for.body74 ], [ %15, %for.body74.preheader ]
  %i.4140 = phi i32 [ %inc82, %for.body74 ], [ 0, %for.body74.preheader ]
  %tempmat1 = getelementptr inbounds %struct.site, %struct.site* %s.1141, i64 0, i32 22
  %staple = getelementptr inbounds %struct.site, %struct.site* %s.1141, i64 0, i32 23
  tail call void @su3_adjoint(%struct.su3_matrix* nonnull %tempmat1, %struct.su3_matrix* nonnull %staple) #32
  %arrayidx77 = getelementptr inbounds %struct.site, %struct.site* %s.1141, i64 0, i32 9, i64 %indvars.iv151
  %16 = load double, double* %coeff, align 16, !tbaa !335
  %fneg = fneg double %16
  tail call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* nonnull %arrayidx77, %struct.su3_matrix* nonnull %staple, double %fneg, %struct.su3_matrix* nonnull %arrayidx77) #32
  %inc82 = add nuw nsw i32 %i.4140, 1
  %incdec.ptr83 = getelementptr inbounds %struct.site, %struct.site* %s.1141, i64 1
  %17 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp73 = icmp slt i32 %inc82, %17
  br i1 %cmp73, label %for.body74, label %for.inc85, !llvm.loop !336

for.inc85:                                        ; preds = %for.body54, %for.body74, %if.end65
  %18 = phi i32 [ %14, %if.end65 ], [ %17, %for.body74 ], [ %8, %for.body54 ]
  %indvars.iv.next150 = add nuw nsw i64 %indvars.iv149, 1
  %19 = load i32, i32* @num_q_paths, align 4, !tbaa !13
  %20 = sext i32 %19 to i64
  %cmp9 = icmp slt i64 %indvars.iv.next150, %20
  br i1 %cmp9, label %for.cond11.preheader, label %for.inc88, !llvm.loop !337

for.inc88:                                        ; preds = %for.inc85, %for.cond8.preheader
  %21 = phi i32 [ %5, %for.cond8.preheader ], [ %18, %for.inc85 ]
  %indvars.iv.next152 = add nuw nsw i64 %indvars.iv151, 1
  %exitcond153.not = icmp eq i64 %indvars.iv.next152, 4
  br i1 %exitcond153.not, label %for.end90, label %for.body, !llvm.loop !338

for.end90:                                        ; preds = %for.inc88
  store i32 1, i32* @valid_longlinks, align 4, !tbaa !13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @load_fatlinks() local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @phases_in, align 4, !tbaa !13
  %cmp.not = icmp eq i32 %0, 1
  br i1 %cmp.not, label %if.end3, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp1 = icmp eq i32 %1, 0
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([37 x i8], [37 x i8]* @str.8, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  tail call void @terminate(i32 0) #32
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry
  %2 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 0), align 16, !tbaa !11
  %3 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 5), align 8, !tbaa !11
  %4 = tail call double @llvm.fmuladd.f64(double %3, double -6.000000e+00, double %2)
  br label %for.body

for.body:                                         ; preds = %if.end3, %for.inc87
  %indvars.iv = phi i64 [ 0, %if.end3 ], [ %indvars.iv.next, %for.inc87 ]
  %dir.0139 = phi i32 [ 0, %if.end3 ], [ %inc88, %for.inc87 ]
  %5 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp6130 = icmp sgt i32 %5, 0
  br i1 %cmp6130, label %for.body7.preheader, label %for.cond10.preheader

for.body7.preheader:                              ; preds = %for.body
  %6 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body7

for.cond10.preheader:                             ; preds = %for.body7, %for.body
  %arrayidx20.idx = mul nuw nsw i32 %dir.0139, 144
  %arrayidx20.offs = add nuw nsw i32 %arrayidx20.idx, 112
  %7 = trunc i64 %indvars.iv to i32
  br label %for.body12

for.body7:                                        ; preds = %for.body7.preheader, %for.body7
  %i.0132 = phi i32 [ %inc, %for.body7 ], [ 0, %for.body7.preheader ]
  %s.0131 = phi %struct.site* [ %incdec.ptr, %for.body7 ], [ %6, %for.body7.preheader ]
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %s.0131, i64 0, i32 10, i64 %indvars.iv
  %arrayidx9 = getelementptr inbounds %struct.site, %struct.site* %s.0131, i64 0, i32 8, i64 %indvars.iv
  tail call void @scalar_mult_su3_matrix(%struct.su3_matrix* nonnull %arrayidx9, double %4, %struct.su3_matrix* nonnull %arrayidx) #32
  %inc = add nuw nsw i32 %i.0132, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0131, i64 1
  %8 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp6 = icmp slt i32 %inc, %8
  br i1 %cmp6, label %for.body7, label %for.cond10.preheader, !llvm.loop !339

for.body12:                                       ; preds = %for.cond10.preheader, %for.inc84
  %nu.0137 = phi i32 [ 0, %for.cond10.preheader ], [ %inc85, %for.inc84 ]
  %9 = zext i32 %nu.0137 to i64
  %cmp13.not = icmp eq i64 %indvars.iv, %9
  br i1 %cmp13.not, label %for.inc84, label %if.then14

if.then14:                                        ; preds = %for.body12
  %10 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 2), align 16, !tbaa !11
  tail call void @compute_gen_staple(i32 3056, i32 %7, i32 %nu.0137, i32 %arrayidx20.offs, double %10) #34
  %11 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 5), align 8, !tbaa !11
  tail call void @compute_gen_staple(i32 -1, i32 %7, i32 %nu.0137, i32 3056, double %11) #34
  br label %for.body36

for.body36:                                       ; preds = %if.then14, %for.inc80
  %rho.0135 = phi i32 [ 0, %if.then14 ], [ %inc81, %for.inc80 ]
  %12 = zext i32 %rho.0135 to i64
  %cmp37.not = icmp eq i64 %indvars.iv, %12
  %cmp39.not = icmp eq i32 %rho.0135, %nu.0137
  %or.cond = select i1 %cmp37.not, i1 true, i1 %cmp39.not
  br i1 %or.cond, label %for.inc80, label %if.then41

if.then41:                                        ; preds = %for.body36
  %13 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 3), align 8, !tbaa !11
  tail call void @compute_gen_staple(i32 2912, i32 %7, i32 %rho.0135, i32 3056, double %13) #34
  br label %for.body58

for.body58:                                       ; preds = %if.then41, %for.inc76
  %sig.0133 = phi i32 [ 0, %if.then41 ], [ %inc77, %for.inc76 ]
  %14 = zext i32 %sig.0133 to i64
  %cmp59.not = icmp eq i64 %indvars.iv, %14
  %cmp62.not = icmp eq i32 %sig.0133, %nu.0137
  %or.cond128 = select i1 %cmp59.not, i1 true, i1 %cmp62.not
  %cmp65.not = icmp eq i32 %sig.0133, %rho.0135
  %or.cond129 = select i1 %or.cond128, i1 true, i1 %cmp65.not
  br i1 %or.cond129, label %for.inc76, label %if.then67

if.then67:                                        ; preds = %for.body58
  %15 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 4), align 16, !tbaa !11
  tail call void @compute_gen_staple(i32 -1, i32 %7, i32 %sig.0133, i32 2912, double %15) #34
  br label %for.inc76

for.inc76:                                        ; preds = %for.body58, %if.then67
  %inc77 = add nuw nsw i32 %sig.0133, 1
  %exitcond.not = icmp eq i32 %inc77, 4
  br i1 %exitcond.not, label %for.inc80, label %for.body58, !llvm.loop !340

for.inc80:                                        ; preds = %for.inc76, %for.body36
  %inc81 = add nuw nsw i32 %rho.0135, 1
  %exitcond140.not = icmp eq i32 %inc81, 4
  br i1 %exitcond140.not, label %for.inc84, label %for.body36, !llvm.loop !341

for.inc84:                                        ; preds = %for.inc80, %for.body12
  %inc85 = add nuw nsw i32 %nu.0137, 1
  %exitcond141.not = icmp eq i32 %inc85, 4
  br i1 %exitcond141.not, label %for.inc87, label %for.body12, !llvm.loop !342

for.inc87:                                        ; preds = %for.inc84
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %inc88 = add nuw nsw i32 %dir.0139, 1
  %exitcond144.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond144.not, label %for.end89, label %for.body, !llvm.loop !343

for.end89:                                        ; preds = %for.inc87
  store i32 1, i32* @valid_fatlinks, align 4, !tbaa !13
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @compute_gen_staple(i32 %staple, i32 %mu, i32 %nu, i32 %link, double %coef) local_unnamed_addr #1 {
entry:
  %tmat1 = alloca %struct.su3_matrix, align 8
  %tmat2 = alloca %struct.su3_matrix, align 8
  %0 = bitcast %struct.su3_matrix* %tmat1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %0) #31
  %1 = bitcast %struct.su3_matrix* %tmat2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %1) #31
  %2 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call = tail call %struct.msg_tag* @start_gather(i32 %link, i32 144, i32 %nu, i32 3, i8** %2) #32
  %idxprom = sext i32 %nu to i64
  %arrayidx2.idx = mul i32 %nu, 144
  %arrayidx2.offs = add i32 %arrayidx2.idx, 112
  %3 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 1), align 8, !tbaa !15
  %call4 = tail call %struct.msg_tag* @start_gather(i32 %arrayidx2.offs, i32 144, i32 %mu, i32 3, i8** %3) #32
  tail call void @wait_gather(%struct.msg_tag* %call) #32
  tail call void @wait_gather(%struct.msg_tag* %call4) #32
  %cmp.not = icmp eq i32 %staple, -1
  br i1 %cmp.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %idx.ext = sext i32 %staple to i64
  %4 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp6182 = icmp sgt i32 %4, 0
  br i1 %cmp6182, label %for.body.preheader, label %if.end

for.body.preheader:                               ; preds = %if.then
  %5 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv193 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next194, %for.body ]
  %s.0183 = phi %struct.site* [ %5, %for.body.preheader ], [ %incdec.ptr, %for.body ]
  %6 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx9 = getelementptr inbounds i8*, i8** %6, i64 %indvars.iv193
  %7 = bitcast i8** %arrayidx9 to %struct.su3_matrix**
  %8 = load %struct.su3_matrix*, %struct.su3_matrix** %7, align 8, !tbaa !15
  %9 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 1), align 8, !tbaa !15
  %arrayidx11 = getelementptr inbounds i8*, i8** %9, i64 %indvars.iv193
  %10 = bitcast i8** %arrayidx11 to %struct.su3_matrix**
  %11 = load %struct.su3_matrix*, %struct.su3_matrix** %10, align 8, !tbaa !15
  call void @mult_su3_na(%struct.su3_matrix* %8, %struct.su3_matrix* %11, %struct.su3_matrix* nonnull %tmat1) #32
  %arrayidx14 = getelementptr inbounds %struct.site, %struct.site* %s.0183, i64 0, i32 8, i64 %idxprom
  %12 = bitcast %struct.site* %s.0183 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext
  %13 = bitcast i8* %add.ptr to %struct.su3_matrix*
  call void @mult_su3_nn(%struct.su3_matrix* nonnull %arrayidx14, %struct.su3_matrix* nonnull %tmat1, %struct.su3_matrix* %13) #32
  %indvars.iv.next194 = add nuw nsw i64 %indvars.iv193, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0183, i64 1
  %14 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %15 = sext i32 %14 to i64
  %cmp6 = icmp slt i64 %indvars.iv.next194, %15
  br i1 %cmp6, label %for.body, label %if.end, !llvm.loop !344

if.else:                                          ; preds = %entry
  %idxprom26 = sext i32 %mu to i64
  %16 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp16179 = icmp sgt i32 %16, 0
  br i1 %cmp16179, label %for.body18.preheader, label %if.end

for.body18.preheader:                             ; preds = %if.else
  %17 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body18

for.body18:                                       ; preds = %for.body18.preheader, %for.body18
  %indvars.iv191 = phi i64 [ 0, %for.body18.preheader ], [ %indvars.iv.next192, %for.body18 ]
  %s.1180 = phi %struct.site* [ %17, %for.body18.preheader ], [ %incdec.ptr30, %for.body18 ]
  %18 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx20 = getelementptr inbounds i8*, i8** %18, i64 %indvars.iv191
  %19 = bitcast i8** %arrayidx20 to %struct.su3_matrix**
  %20 = load %struct.su3_matrix*, %struct.su3_matrix** %19, align 8, !tbaa !15
  %21 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 1), align 8, !tbaa !15
  %arrayidx22 = getelementptr inbounds i8*, i8** %21, i64 %indvars.iv191
  %22 = bitcast i8** %arrayidx22 to %struct.su3_matrix**
  %23 = load %struct.su3_matrix*, %struct.su3_matrix** %22, align 8, !tbaa !15
  call void @mult_su3_na(%struct.su3_matrix* %20, %struct.su3_matrix* %23, %struct.su3_matrix* nonnull %tmat1) #32
  %arrayidx25 = getelementptr inbounds %struct.site, %struct.site* %s.1180, i64 0, i32 8, i64 %idxprom
  call void @mult_su3_nn(%struct.su3_matrix* nonnull %arrayidx25, %struct.su3_matrix* nonnull %tmat1, %struct.su3_matrix* nonnull %tmat2) #32
  %arrayidx27 = getelementptr inbounds %struct.site, %struct.site* %s.1180, i64 0, i32 10, i64 %idxprom26
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* nonnull %arrayidx27, %struct.su3_matrix* nonnull %tmat2, double %coef, %struct.su3_matrix* nonnull %arrayidx27) #32
  %indvars.iv.next192 = add nuw nsw i64 %indvars.iv191, 1
  %incdec.ptr30 = getelementptr inbounds %struct.site, %struct.site* %s.1180, i64 1
  %24 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %25 = sext i32 %24 to i64
  %cmp16 = icmp slt i64 %indvars.iv.next192, %25
  br i1 %cmp16, label %for.body18, label %if.end, !llvm.loop !345

if.end:                                           ; preds = %for.body, %for.body18, %if.then, %if.else
  call void @cleanup_gather(%struct.msg_tag* %call) #32
  call void @cleanup_gather(%struct.msg_tag* %call4) #32
  %26 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv32 = sext i32 %26 to i64
  %call33 = call noalias align 16 i8* @calloc(i64 %conv32, i64 144) #32
  %27 = bitcast i8* %call33 to %struct.su3_matrix*
  %28 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call43 = call %struct.msg_tag* @start_gather(i32 %arrayidx2.offs, i32 144, i32 %mu, i32 3, i8** %28) #32
  call void @wait_gather(%struct.msg_tag* %call43) #32
  %idx.ext51 = sext i32 %link to i64
  %29 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp45176 = icmp sgt i32 %29, 0
  br i1 %cmp45176, label %for.body47.preheader, label %for.end60

for.body47.preheader:                             ; preds = %if.end
  %30 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body47

for.body47:                                       ; preds = %for.body47.preheader, %for.body47
  %indvars.iv189 = phi i64 [ 0, %for.body47.preheader ], [ %indvars.iv.next190, %for.body47 ]
  %s.2177 = phi %struct.site* [ %30, %for.body47.preheader ], [ %incdec.ptr59, %for.body47 ]
  %arrayidx50 = getelementptr inbounds %struct.site, %struct.site* %s.2177, i64 0, i32 8, i64 %idxprom
  %31 = bitcast %struct.site* %s.2177 to i8*
  %add.ptr52 = getelementptr inbounds i8, i8* %31, i64 %idx.ext51
  %32 = bitcast i8* %add.ptr52 to %struct.su3_matrix*
  call void @mult_su3_an(%struct.su3_matrix* nonnull %arrayidx50, %struct.su3_matrix* %32, %struct.su3_matrix* nonnull %tmat1) #32
  %33 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx54 = getelementptr inbounds i8*, i8** %33, i64 %indvars.iv189
  %34 = bitcast i8** %arrayidx54 to %struct.su3_matrix**
  %35 = load %struct.su3_matrix*, %struct.su3_matrix** %34, align 8, !tbaa !15
  %arrayidx56 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %27, i64 %indvars.iv189
  call void @mult_su3_nn(%struct.su3_matrix* nonnull %tmat1, %struct.su3_matrix* %35, %struct.su3_matrix* %arrayidx56) #32
  %indvars.iv.next190 = add nuw nsw i64 %indvars.iv189, 1
  %incdec.ptr59 = getelementptr inbounds %struct.site, %struct.site* %s.2177, i64 1
  %36 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %37 = sext i32 %36 to i64
  %cmp45 = icmp slt i64 %indvars.iv.next190, %37
  br i1 %cmp45, label %for.body47, label %for.end60, !llvm.loop !346

for.end60:                                        ; preds = %for.body47, %if.end
  call void @cleanup_gather(%struct.msg_tag* %call43) #32
  %sub = sub nsw i32 7, %nu
  %38 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call61 = call %struct.msg_tag* @start_gather_from_temp(i8* %call33, i32 144, i32 %sub, i32 3, i8** %38) #32
  call void @wait_gather(%struct.msg_tag* %call61) #32
  br i1 %cmp.not, label %if.else84, label %if.then64

if.then64:                                        ; preds = %for.end60
  %idx.ext69 = sext i32 %staple to i64
  %idxprom76 = sext i32 %mu to i64
  %39 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp66173 = icmp sgt i32 %39, 0
  br i1 %cmp66173, label %for.body68.preheader, label %if.end98

for.body68.preheader:                             ; preds = %if.then64
  %40 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body68

for.body68:                                       ; preds = %for.body68.preheader, %for.body68
  %indvars.iv187 = phi i64 [ 0, %for.body68.preheader ], [ %indvars.iv.next188, %for.body68 ]
  %s.3174 = phi %struct.site* [ %40, %for.body68.preheader ], [ %incdec.ptr82, %for.body68 ]
  %41 = bitcast %struct.site* %s.3174 to i8*
  %add.ptr70 = getelementptr inbounds i8, i8* %41, i64 %idx.ext69
  %42 = bitcast i8* %add.ptr70 to %struct.su3_matrix*
  %43 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx72 = getelementptr inbounds i8*, i8** %43, i64 %indvars.iv187
  %44 = bitcast i8** %arrayidx72 to %struct.su3_matrix**
  %45 = load %struct.su3_matrix*, %struct.su3_matrix** %44, align 8, !tbaa !15
  call void @add_su3_matrix(%struct.su3_matrix* %42, %struct.su3_matrix* %45, %struct.su3_matrix* %42) #32
  %arrayidx77 = getelementptr inbounds %struct.site, %struct.site* %s.3174, i64 0, i32 10, i64 %idxprom76
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* nonnull %arrayidx77, %struct.su3_matrix* %42, double %coef, %struct.su3_matrix* nonnull %arrayidx77) #32
  %indvars.iv.next188 = add nuw nsw i64 %indvars.iv187, 1
  %incdec.ptr82 = getelementptr inbounds %struct.site, %struct.site* %s.3174, i64 1
  %46 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %47 = sext i32 %46 to i64
  %cmp66 = icmp slt i64 %indvars.iv.next188, %47
  br i1 %cmp66, label %for.body68, label %if.end98, !llvm.loop !347

if.else84:                                        ; preds = %for.end60
  %idxprom90 = sext i32 %mu to i64
  %48 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp86170 = icmp sgt i32 %48, 0
  br i1 %cmp86170, label %for.body88.preheader, label %if.end98

for.body88.preheader:                             ; preds = %if.else84
  %49 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body88

for.body88:                                       ; preds = %for.body88.preheader, %for.body88
  %indvars.iv = phi i64 [ 0, %for.body88.preheader ], [ %indvars.iv.next, %for.body88 ]
  %s.4171 = phi %struct.site* [ %49, %for.body88.preheader ], [ %incdec.ptr96, %for.body88 ]
  %arrayidx91 = getelementptr inbounds %struct.site, %struct.site* %s.4171, i64 0, i32 10, i64 %idxprom90
  %50 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx93 = getelementptr inbounds i8*, i8** %50, i64 %indvars.iv
  %51 = bitcast i8** %arrayidx93 to %struct.su3_matrix**
  %52 = load %struct.su3_matrix*, %struct.su3_matrix** %51, align 8, !tbaa !15
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* nonnull %arrayidx91, %struct.su3_matrix* %52, double %coef, %struct.su3_matrix* nonnull %arrayidx91) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %incdec.ptr96 = getelementptr inbounds %struct.site, %struct.site* %s.4171, i64 1
  %53 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %54 = sext i32 %53 to i64
  %cmp86 = icmp slt i64 %indvars.iv.next, %54
  br i1 %cmp86, label %for.body88, label %if.end98, !llvm.loop !348

if.end98:                                         ; preds = %for.body68, %for.body88, %if.then64, %if.else84
  call void @free(i8* %call33) #32
  call void @cleanup_gather(%struct.msg_tag* %call61) #32
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @eo_fermion_force(double %eps, i32 %nflavors, i32 %x_off) local_unnamed_addr #1 {
entry:
  %DirectLinks = alloca [8 x i32], align 16
  %DirectLinks447 = bitcast [8 x i32]* %DirectLinks to i8*
  %tempvec = alloca [8 x %struct.su3_vector*], align 16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %DirectLinks447) #31
  %0 = bitcast [8 x %struct.su3_vector*]* %tempvec to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #31
  %conv = sitofp i32 %nflavors to double
  %div = fmul double %conv, 2.500000e-01
  %mul = fmul double %div, 2.000000e+00
  %1 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 0), align 16, !tbaa !11
  %2 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 1), align 8, !tbaa !11
  %3 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 2), align 16, !tbaa !11
  %4 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 3), align 8, !tbaa !11
  %5 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 4), align 16, !tbaa !11
  %6 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 5), align 8, !tbaa !11
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %DirectLinks447, i8 0, i64 32, i1 false)
  %mul1 = fmul double %mul, %eps
  %mul2 = fmul double %mul1, %1
  %mul3 = fmul double %mul1, %2
  %mul4 = fmul double %mul1, %3
  %mul5 = fmul double %mul1, %4
  %mul6 = fmul double %mul1, %5
  %mul7 = fmul double %mul1, %6
  %7 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv13 = sext i32 %7 to i64
  br label %for.body12

for.body12:                                       ; preds = %entry, %for.body12
  %indvars.iv444 = phi i64 [ 0, %entry ], [ %indvars.iv.next445, %for.body12 ]
  %call = tail call noalias align 16 i8* @calloc(i64 %conv13, i64 48) #32
  %arrayidx15 = getelementptr inbounds [8 x %struct.su3_vector*], [8 x %struct.su3_vector*]* %tempvec, i64 0, i64 %indvars.iv444
  %8 = bitcast %struct.su3_vector** %arrayidx15 to i8**
  store i8* %call, i8** %8, align 8, !tbaa !15
  %indvars.iv.next445 = add nuw nsw i64 %indvars.iv444, 1
  %exitcond446.not = icmp eq i64 %indvars.iv.next445, 8
  br i1 %exitcond446.not, label %for.end18, label %for.body12, !llvm.loop !349

for.end18:                                        ; preds = %for.body12
  %call20 = tail call noalias align 16 i8* @calloc(i64 %conv13, i64 48) #32
  %9 = bitcast i8* %call20 to %struct.su3_vector*
  %idx.ext = sext i32 %x_off to i64
  %cmp22420 = icmp sgt i32 %7, 0
  br i1 %cmp22420, label %for.body24.preheader, label %for.cond30.preheader

for.body24.preheader:                             ; preds = %for.end18
  %10 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %wide.trip.count = zext i32 %7 to i64
  br label %for.body24

for.cond30.preheader:                             ; preds = %for.body24, %for.end18
  %arrayidx42 = getelementptr inbounds [8 x %struct.su3_vector*], [8 x %struct.su3_vector*]* %tempvec, i64 0, i64 0
  %11 = load %struct.su3_vector*, %struct.su3_vector** %arrayidx42, align 16
  %arrayidx45 = getelementptr inbounds [8 x %struct.su3_vector*], [8 x %struct.su3_vector*]* %tempvec, i64 0, i64 7
  %12 = load %struct.su3_vector*, %struct.su3_vector** %arrayidx45, align 8
  %fneg = fneg double %mul4
  %arrayidx70 = getelementptr inbounds [8 x %struct.su3_vector*], [8 x %struct.su3_vector*]* %tempvec, i64 0, i64 1
  %13 = load %struct.su3_vector*, %struct.su3_vector** %arrayidx70, align 8
  %arrayidx73 = getelementptr inbounds [8 x %struct.su3_vector*], [8 x %struct.su3_vector*]* %tempvec, i64 0, i64 6
  %14 = load %struct.su3_vector*, %struct.su3_vector** %arrayidx73, align 16
  %arrayidx106 = getelementptr inbounds [8 x %struct.su3_vector*], [8 x %struct.su3_vector*]* %tempvec, i64 0, i64 2
  %15 = load %struct.su3_vector*, %struct.su3_vector** %arrayidx106, align 16
  %arrayidx109 = getelementptr inbounds [8 x %struct.su3_vector*], [8 x %struct.su3_vector*]* %tempvec, i64 0, i64 3
  %16 = load %struct.su3_vector*, %struct.su3_vector** %arrayidx109, align 8
  %fneg115 = fneg double %mul6
  %arrayidx118 = getelementptr inbounds [8 x %struct.su3_vector*], [8 x %struct.su3_vector*]* %tempvec, i64 0, i64 4
  %17 = load %struct.su3_vector*, %struct.su3_vector** %arrayidx118, align 16
  %div123 = fdiv double %mul6, %mul5
  %fneg147 = fneg double %mul5
  %div152 = fdiv double %mul5, %mul4
  %fneg187 = fneg double %mul7
  %div192 = fdiv double %mul7, %mul4
  %fneg233 = fneg double %mul3
  br label %for.cond34.preheader

for.body24:                                       ; preds = %for.body24.preheader, %for.body24
  %indvars.iv441 = phi i64 [ 0, %for.body24.preheader ], [ %indvars.iv.next442, %for.body24 ]
  %s.0421 = phi %struct.site* [ %10, %for.body24.preheader ], [ %incdec.ptr, %for.body24 ]
  %arrayidx26 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %9, i64 %indvars.iv441
  %18 = bitcast %struct.site* %s.0421 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %idx.ext
  %19 = bitcast %struct.su3_vector* %arrayidx26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(48) %19, i8* noundef nonnull align 8 dereferenceable(48) %add.ptr, i64 48, i1 false), !tbaa.struct !262
  %indvars.iv.next442 = add nuw nsw i64 %indvars.iv441, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0421, i64 1
  %exitcond443.not = icmp eq i64 %indvars.iv.next442, %wide.trip.count
  br i1 %exitcond443.not, label %for.cond30.preheader, label %for.body24, !llvm.loop !350

for.cond34.preheader:                             ; preds = %for.cond30.preheader, %for.inc248
  %indvars.iv437 = phi i64 [ 0, %for.cond30.preheader ], [ %indvars.iv.next438, %for.inc248 ]
  %20 = sub nuw nsw i64 7, %indvars.iv437
  %cmp46 = icmp ult i64 %indvars.iv437, 4
  %21 = trunc i64 %indvars.iv437 to i32
  br label %for.body37

for.body37:                                       ; preds = %for.cond34.preheader, %for.inc245
  %indvars.iv433 = phi i64 [ 0, %for.cond34.preheader ], [ %indvars.iv.next434, %for.inc245 ]
  %cmp38.not = icmp eq i64 %indvars.iv433, %indvars.iv437
  %cmp40.not = icmp eq i64 %indvars.iv433, %20
  %or.cond = select i1 %cmp38.not, i1 true, i1 %cmp40.not
  br i1 %or.cond, label %for.inc245, label %if.then

if.then:                                          ; preds = %for.body37
  %22 = sub nuw nsw i64 7, %indvars.iv433
  %23 = trunc i64 %22 to i32
  tail call void @u_shift_fermion(%struct.su3_vector* %9, %struct.su3_vector* %11, i32 %23) #34
  tail call void @u_shift_fermion(%struct.su3_vector* %11, %struct.su3_vector* %12, i32 %21) #34
  br i1 %cmp46, label %if.then48, label %for.body54.preheader

if.then48:                                        ; preds = %if.then
  tail call void @add_force_to_mom(%struct.su3_vector* %12, %struct.su3_vector* %11, i32 %21, double %fneg) #34
  br label %for.body54.preheader

for.body54.preheader:                             ; preds = %if.then48, %if.then
  br label %for.body54

for.body54:                                       ; preds = %for.body54.preheader, %for.inc171
  %nu.0413 = phi i32 [ %inc172, %for.inc171 ], [ 0, %for.body54.preheader ]
  %24 = zext i32 %nu.0413 to i64
  %cmp55.not = icmp eq i64 %indvars.iv433, %24
  %cmp59.not = icmp eq i64 %22, %24
  %or.cond398 = select i1 %cmp55.not, i1 true, i1 %cmp59.not
  %cmp62.not = icmp eq i64 %indvars.iv437, %24
  %or.cond399 = select i1 %or.cond398, i1 true, i1 %cmp62.not
  %cmp66.not = icmp eq i64 %20, %24
  %or.cond400 = select i1 %or.cond399, i1 true, i1 %cmp66.not
  br i1 %or.cond400, label %for.inc171, label %if.then68

if.then68:                                        ; preds = %for.body54
  %sub71 = sub nuw nsw i32 7, %nu.0413
  tail call void @u_shift_fermion(%struct.su3_vector* %11, %struct.su3_vector* %13, i32 %sub71) #34
  tail call void @u_shift_fermion(%struct.su3_vector* %13, %struct.su3_vector* %14, i32 %21) #34
  br i1 %cmp46, label %if.then76, label %for.body83.preheader

if.then76:                                        ; preds = %if.then68
  tail call void @add_force_to_mom(%struct.su3_vector* %14, %struct.su3_vector* %13, i32 %21, double %mul5) #34
  br label %for.body83.preheader

for.body83.preheader:                             ; preds = %if.then76, %if.then68
  br label %for.body83

for.body83:                                       ; preds = %for.body83.preheader, %for.inc142
  %rho.0409 = phi i32 [ %inc143, %for.inc142 ], [ 0, %for.body83.preheader ]
  %25 = zext i32 %rho.0409 to i64
  %cmp84.not = icmp eq i64 %indvars.iv433, %25
  %cmp88.not = icmp eq i64 %22, %25
  %or.cond401 = select i1 %cmp84.not, i1 true, i1 %cmp88.not
  %cmp91.not = icmp eq i32 %rho.0409, %nu.0413
  %or.cond402 = select i1 %or.cond401, i1 true, i1 %cmp91.not
  %cmp95.not = icmp eq i32 %rho.0409, %sub71
  %or.cond403 = select i1 %or.cond402, i1 true, i1 %cmp95.not
  %cmp98.not = icmp eq i64 %indvars.iv437, %25
  %or.cond404 = select i1 %or.cond403, i1 true, i1 %cmp98.not
  %cmp102.not = icmp eq i64 %20, %25
  %or.cond405 = select i1 %or.cond404, i1 true, i1 %cmp102.not
  br i1 %or.cond405, label %for.inc142, label %if.then104

if.then104:                                       ; preds = %for.body83
  %sub107 = sub nuw nsw i32 7, %rho.0409
  tail call void @u_shift_fermion(%struct.su3_vector* %13, %struct.su3_vector* %15, i32 %sub107) #34
  tail call void @u_shift_fermion(%struct.su3_vector* %15, %struct.su3_vector* %16, i32 %21) #34
  br i1 %cmp46, label %if.then112, label %if.end116

if.then112:                                       ; preds = %if.then104
  tail call void @add_force_to_mom(%struct.su3_vector* %16, %struct.su3_vector* %15, i32 %21, double %fneg115) #34
  br label %if.end116

if.end116:                                        ; preds = %if.then112, %if.then104
  tail call void @u_shift_fermion(%struct.su3_vector* %16, %struct.su3_vector* %17, i32 %rho.0409) #34
  tail call void @side_link_force(i32 %rho.0409, i32 %21, double %mul6, %struct.su3_vector* %13, %struct.su3_vector* %16, %struct.su3_vector* %15, %struct.su3_vector* %17) #34
  %26 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp125407 = icmp sgt i32 %26, 0
  br i1 %cmp125407, label %for.body127, label %for.inc142

for.body127:                                      ; preds = %if.end116, %for.body127
  %indvars.iv425 = phi i64 [ %indvars.iv.next426, %for.body127 ], [ 0, %if.end116 ]
  %arrayidx130 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %14, i64 %indvars.iv425
  %arrayidx133 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %17, i64 %indvars.iv425
  tail call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx130, %struct.su3_vector* %arrayidx133, double %div123, %struct.su3_vector* %arrayidx130) #32
  %indvars.iv.next426 = add nuw nsw i64 %indvars.iv425, 1
  %27 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %28 = sext i32 %27 to i64
  %cmp125 = icmp slt i64 %indvars.iv.next426, %28
  br i1 %cmp125, label %for.body127, label %for.inc142, !llvm.loop !351

for.inc142:                                       ; preds = %for.body127, %if.end116, %for.body83
  %inc143 = add nuw nsw i32 %rho.0409, 1
  %exitcond427.not = icmp eq i32 %inc143, 8
  br i1 %exitcond427.not, label %for.end144, label %for.body83, !llvm.loop !352

for.end144:                                       ; preds = %for.inc142
  tail call void @u_shift_fermion(%struct.su3_vector* %14, %struct.su3_vector* %16, i32 %nu.0413) #34
  tail call void @side_link_force(i32 %nu.0413, i32 %21, double %fneg147, %struct.su3_vector* %11, %struct.su3_vector* %14, %struct.su3_vector* %13, %struct.su3_vector* %16) #34
  %29 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp154411 = icmp sgt i32 %29, 0
  br i1 %cmp154411, label %for.body156, label %for.inc171

for.body156:                                      ; preds = %for.end144, %for.body156
  %indvars.iv428 = phi i64 [ %indvars.iv.next429, %for.body156 ], [ 0, %for.end144 ]
  %arrayidx159 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %12, i64 %indvars.iv428
  %arrayidx162 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %16, i64 %indvars.iv428
  tail call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx159, %struct.su3_vector* %arrayidx162, double %div152, %struct.su3_vector* %arrayidx159) #32
  %indvars.iv.next429 = add nuw nsw i64 %indvars.iv428, 1
  %30 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %31 = sext i32 %30 to i64
  %cmp154 = icmp slt i64 %indvars.iv.next429, %31
  br i1 %cmp154, label %for.body156, label %for.inc171, !llvm.loop !353

for.inc171:                                       ; preds = %for.body156, %for.end144, %for.body54
  %inc172 = add nuw nsw i32 %nu.0413, 1
  %exitcond430.not = icmp eq i32 %inc172, 8
  br i1 %exitcond430.not, label %for.end173, label %for.body54, !llvm.loop !354

for.end173:                                       ; preds = %for.inc171
  tail call void @u_shift_fermion(%struct.su3_vector* %11, %struct.su3_vector* %13, i32 %23) #34
  tail call void @u_shift_fermion(%struct.su3_vector* %13, %struct.su3_vector* %14, i32 %21) #34
  br i1 %cmp46, label %if.then181, label %if.end184

if.then181:                                       ; preds = %for.end173
  tail call void @add_force_to_mom(%struct.su3_vector* %14, %struct.su3_vector* %13, i32 %21, double %mul7) #34
  br label %if.end184

if.end184:                                        ; preds = %if.then181, %for.end173
  %32 = trunc i64 %indvars.iv433 to i32
  tail call void @u_shift_fermion(%struct.su3_vector* %14, %struct.su3_vector* %16, i32 %32) #34
  tail call void @side_link_force(i32 %32, i32 %21, double %fneg187, %struct.su3_vector* %11, %struct.su3_vector* %14, %struct.su3_vector* %13, %struct.su3_vector* %16) #34
  %33 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp194415 = icmp sgt i32 %33, 0
  br i1 %cmp194415, label %for.body196, label %for.end209

for.body196:                                      ; preds = %if.end184, %for.body196
  %indvars.iv431 = phi i64 [ %indvars.iv.next432, %for.body196 ], [ 0, %if.end184 ]
  %arrayidx199 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %12, i64 %indvars.iv431
  %arrayidx202 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %16, i64 %indvars.iv431
  tail call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx199, %struct.su3_vector* %arrayidx202, double %div192, %struct.su3_vector* %arrayidx199) #32
  %indvars.iv.next432 = add nuw nsw i64 %indvars.iv431, 1
  %34 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %35 = sext i32 %34 to i64
  %cmp194 = icmp slt i64 %indvars.iv.next432, %35
  br i1 %cmp194, label %for.body196, label %for.end209, !llvm.loop !355

for.end209:                                       ; preds = %for.body196, %if.end184
  %cmp210 = icmp ult i64 %indvars.iv433, 4
  br i1 %cmp210, label %if.then212, label %if.end215

if.then212:                                       ; preds = %for.end209
  tail call void @u_shift_fermion(%struct.su3_vector* %12, %struct.su3_vector* %16, i32 %32) #34
  br label %if.end215

if.end215:                                        ; preds = %if.then212, %for.end209
  tail call void @side_link_force(i32 %32, i32 %21, double %mul4, %struct.su3_vector* %9, %struct.su3_vector* %12, %struct.su3_vector* %11, %struct.su3_vector* %16) #34
  %arrayidx220 = getelementptr inbounds [8 x i32], [8 x i32]* %DirectLinks, i64 0, i64 %indvars.iv433
  %36 = load i32, i32* %arrayidx220, align 4, !tbaa !13
  %tobool.not = icmp eq i32 %36, 0
  br i1 %tobool.not, label %if.then221, label %for.inc245

if.then221:                                       ; preds = %if.end215
  store i32 1, i32* %arrayidx220, align 4, !tbaa !13
  %cmp224 = icmp ugt i64 %indvars.iv433, 3
  br i1 %cmp224, label %if.then226, label %if.else

if.then226:                                       ; preds = %if.then221
  tail call void @add_force_to_mom(%struct.su3_vector* %11, %struct.su3_vector* %9, i32 %23, double %mul2) #34
  tail call void @u_shift_fermion(%struct.su3_vector* %9, %struct.su3_vector* %17, i32 %32) #34
  tail call void @add_force_to_mom(%struct.su3_vector* %13, %struct.su3_vector* %17, i32 %23, double %fneg233) #34
  tail call void @u_shift_fermion(%struct.su3_vector* %13, %struct.su3_vector* %17, i32 %23) #34
  tail call void @add_force_to_mom(%struct.su3_vector* %17, %struct.su3_vector* %9, i32 %23, double %mul3) #34
  br label %for.inc245

if.else:                                          ; preds = %if.then221
  tail call void @u_shift_fermion(%struct.su3_vector* %9, %struct.su3_vector* %17, i32 %32) #34
  tail call void @add_force_to_mom(%struct.su3_vector* %17, %struct.su3_vector* %13, i32 %32, double %mul3) #34
  br label %for.inc245

for.inc245:                                       ; preds = %for.body37, %if.then226, %if.else, %if.end215
  %indvars.iv.next434 = add nuw nsw i64 %indvars.iv433, 1
  %exitcond436.not = icmp eq i64 %indvars.iv.next434, 8
  br i1 %exitcond436.not, label %for.inc248, label %for.body37, !llvm.loop !356

for.inc248:                                       ; preds = %for.inc245
  %indvars.iv.next438 = add nuw nsw i64 %indvars.iv437, 1
  %exitcond440.not = icmp eq i64 %indvars.iv.next438, 8
  br i1 %exitcond440.not, label %for.end250, label %for.cond34.preheader, !llvm.loop !357

for.end250:                                       ; preds = %for.inc248
  tail call void @free(i8* %call20) #32
  br label %for.body254

for.body254:                                      ; preds = %for.end250, %for.body254
  %indvars.iv = phi i64 [ 0, %for.end250 ], [ %indvars.iv.next, %for.body254 ]
  %arrayidx256 = getelementptr inbounds [8 x %struct.su3_vector*], [8 x %struct.su3_vector*]* %tempvec, i64 0, i64 %indvars.iv
  %37 = bitcast %struct.su3_vector** %arrayidx256 to i8**
  %38 = load i8*, i8** %37, align 8, !tbaa !15
  tail call void @free(i8* %38) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 8
  br i1 %exitcond.not, label %for.end259, label %for.body254, !llvm.loop !358

for.end259:                                       ; preds = %for.body254
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %DirectLinks447) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @u_shift_fermion(%struct.su3_vector* %src, %struct.su3_vector* %dest, i32 %dir) local_unnamed_addr #1 {
entry:
  %cmp = icmp slt i32 %dir, 4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.su3_vector* %src to i8*
  %1 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call = tail call %struct.msg_tag* @start_gather_from_temp(i8* %0, i32 48, i32 %dir, i32 3, i8** %1) #32
  tail call void @wait_gather(%struct.msg_tag* %call) #32
  %idxprom = sext i32 %dir to i64
  %2 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp165 = icmp sgt i32 %2, 0
  br i1 %cmp165, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %if.then
  %3 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %s.066 = phi %struct.site* [ %3, %for.body.preheader ], [ %incdec.ptr, %for.body ]
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %s.066, i64 0, i32 8, i64 %idxprom
  %4 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx3 = getelementptr inbounds i8*, i8** %4, i64 %indvars.iv
  %5 = bitcast i8** %arrayidx3 to %struct.su3_vector**
  %6 = load %struct.su3_vector*, %struct.su3_vector** %5, align 8, !tbaa !15
  %arrayidx5 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %dest, i64 %indvars.iv
  tail call void @mult_su3_mat_vec(%struct.su3_matrix* nonnull %arrayidx, %struct.su3_vector* %6, %struct.su3_vector* %arrayidx5) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.066, i64 1
  %7 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %8 = sext i32 %7 to i64
  %cmp1 = icmp slt i64 %indvars.iv.next, %8
  br i1 %cmp1, label %for.body, label %for.end, !llvm.loop !359

for.end:                                          ; preds = %for.body, %if.then
  tail call void @cleanup_gather(%struct.msg_tag* %call) #32
  br label %if.end

if.else:                                          ; preds = %entry
  %9 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv = sext i32 %9 to i64
  %call6 = tail call noalias align 16 i8* @calloc(i64 %conv, i64 48) #32
  %10 = bitcast i8* %call6 to %struct.su3_vector*
  %sub = sub nsw i32 7, %dir
  %idxprom12 = sext i32 %sub to i64
  %cmp870 = icmp sgt i32 %9, 0
  br i1 %cmp870, label %for.body10.preheader, label %for.end21

for.body10.preheader:                             ; preds = %if.else
  %11 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body10

for.body10:                                       ; preds = %for.body10.preheader, %for.body10
  %indvars.iv75 = phi i64 [ 0, %for.body10.preheader ], [ %indvars.iv.next76, %for.body10 ]
  %s.171 = phi %struct.site* [ %11, %for.body10.preheader ], [ %incdec.ptr20, %for.body10 ]
  %arrayidx13 = getelementptr inbounds %struct.site, %struct.site* %s.171, i64 0, i32 8, i64 %idxprom12
  %arrayidx15 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %src, i64 %indvars.iv75
  %arrayidx17 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %10, i64 %indvars.iv75
  tail call void @mult_adj_su3_mat_vec(%struct.su3_matrix* nonnull %arrayidx13, %struct.su3_vector* %arrayidx15, %struct.su3_vector* %arrayidx17) #32
  %indvars.iv.next76 = add nuw nsw i64 %indvars.iv75, 1
  %incdec.ptr20 = getelementptr inbounds %struct.site, %struct.site* %s.171, i64 1
  %12 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %13 = sext i32 %12 to i64
  %cmp8 = icmp slt i64 %indvars.iv.next76, %13
  br i1 %cmp8, label %for.body10, label %for.end21, !llvm.loop !360

for.end21:                                        ; preds = %for.body10, %if.else
  %14 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call22 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %call6, i32 48, i32 %dir, i32 3, i8** %14) #32
  tail call void @wait_gather(%struct.msg_tag* %call22) #32
  %15 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp2468 = icmp sgt i32 %15, 0
  br i1 %cmp2468, label %for.body26, label %for.end34

for.body26:                                       ; preds = %for.end21, %for.body26
  %indvars.iv73 = phi i64 [ %indvars.iv.next74, %for.body26 ], [ 0, %for.end21 ]
  %arrayidx28 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %dest, i64 %indvars.iv73
  %16 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx30 = getelementptr inbounds i8*, i8** %16, i64 %indvars.iv73
  %17 = load i8*, i8** %arrayidx30, align 8, !tbaa !15
  %18 = bitcast %struct.su3_vector* %arrayidx28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %18, i8* noundef nonnull align 8 dereferenceable(48) %17, i64 48, i1 false), !tbaa.struct !262
  %indvars.iv.next74 = add nuw nsw i64 %indvars.iv73, 1
  %19 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %20 = sext i32 %19 to i64
  %cmp24 = icmp slt i64 %indvars.iv.next74, %20
  br i1 %cmp24, label %for.body26, label %for.end34, !llvm.loop !361

for.end34:                                        ; preds = %for.body26, %for.end21
  tail call void @cleanup_gather(%struct.msg_tag* %call22) #32
  tail call void @free(i8* %call6) #32
  br label %if.end

if.end:                                           ; preds = %for.end34, %for.end
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @add_force_to_mom(%struct.su3_vector* %back, %struct.su3_vector* %forw, i32 %dir, double %coeff) local_unnamed_addr #1 {
entry:
  %tmat = alloca %struct.su3_matrix, align 8
  %tmat2 = alloca %struct.su3_matrix, align 8
  %0 = bitcast %struct.su3_matrix* %tmat to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %0) #31
  %1 = bitcast %struct.su3_matrix* %tmat2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %1) #31
  %cmp = icmp sgt i32 %dir, 3
  %sub = sub nsw i32 7, %dir
  %fneg = fneg double %coeff
  %dir.addr.0 = select i1 %cmp, i32 %sub, i32 %dir
  %coeff.addr.0 = select i1 %cmp, double %fneg, double %coeff
  %fneg5 = fneg double %coeff.addr.0
  %idxprom = sext i32 %dir.addr.0 to i64
  %2 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp128 = icmp sgt i32 %2, 0
  br i1 %cmp128, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %3 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %s.029 = phi %struct.site* [ %3, %for.body.preheader ], [ %incdec.ptr, %for.body ]
  %parity = getelementptr inbounds %struct.site, %struct.site* %s.029, i64 0, i32 4
  %4 = load i8, i8* %parity, align 8, !tbaa !125
  %cmp2 = icmp eq i8 %4, 1
  %tmp_coeff.0 = select i1 %cmp2, double %fneg5, double %coeff.addr.0
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %s.029, i64 0, i32 11, i64 %idxprom
  call void @uncompress_anti_hermitian(%struct.anti_hermitmat* nonnull %arrayidx, %struct.su3_matrix* nonnull %tmat2) #32
  %arrayidx8 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %back, i64 %indvars.iv
  %arrayidx10 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %forw, i64 %indvars.iv
  call void @su3_projector(%struct.su3_vector* %arrayidx8, %struct.su3_vector* %arrayidx10, %struct.su3_matrix* nonnull %tmat) #32
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* nonnull %tmat2, %struct.su3_matrix* nonnull %tmat, double %tmp_coeff.0, %struct.su3_matrix* nonnull %tmat2) #32
  call void @make_anti_hermitian(%struct.su3_matrix* nonnull %tmat2, %struct.anti_hermitmat* nonnull %arrayidx) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.029, i64 1
  %5 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %6 = sext i32 %5 to i64
  %cmp1 = icmp slt i64 %indvars.iv.next, %6
  br i1 %cmp1, label %for.body, label %for.end, !llvm.loop !362

for.end:                                          ; preds = %for.body, %entry
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @side_link_force(i32 %mu, i32 %nu, double %coeff, %struct.su3_vector* %Path, %struct.su3_vector* %Path_nu, %struct.su3_vector* %Path_mu, %struct.su3_vector* %Path_numu) local_unnamed_addr #1 {
entry:
  %cmp = icmp slt i32 %mu, 4
  %cmp1 = icmp slt i32 %nu, 4
  br i1 %cmp, label %if.then, label %if.else3

if.then:                                          ; preds = %entry
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  tail call void @add_force_to_mom(%struct.su3_vector* %Path_numu, %struct.su3_vector* %Path, i32 %mu, double %coeff) #34
  br label %if.end10

if.else:                                          ; preds = %if.then
  %sub = sub nsw i32 7, %mu
  %fneg = fneg double %coeff
  tail call void @add_force_to_mom(%struct.su3_vector* %Path, %struct.su3_vector* %Path_numu, i32 %sub, double %fneg) #34
  br label %if.end10

if.else3:                                         ; preds = %entry
  br i1 %cmp1, label %if.then5, label %if.else7

if.then5:                                         ; preds = %if.else3
  %fneg6 = fneg double %coeff
  tail call void @add_force_to_mom(%struct.su3_vector* %Path_nu, %struct.su3_vector* %Path_mu, i32 %mu, double %fneg6) #34
  br label %if.end10

if.else7:                                         ; preds = %if.else3
  %sub8 = sub nsw i32 7, %mu
  tail call void @add_force_to_mom(%struct.su3_vector* %Path_mu, %struct.su3_vector* %Path_nu, i32 %sub8, double %coeff) #34
  br label %if.end10

if.end10:                                         ; preds = %if.then5, %if.else7, %if.then2, %if.else
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @eo_fermion_force_3f(double %eps, i32 %nflav1, i32 %x1_off, i32 %nflav2, i32 %x2_off) local_unnamed_addr #1 {
entry:
  %DirectLinks = alloca [8 x i32], align 16
  %DirectLinks606 = bitcast [8 x i32]* %DirectLinks to i8*
  %OneLink = alloca [2 x double], align 16
  %Lepage = alloca [2 x double], align 16
  %Naik = alloca [2 x double], align 16
  %FiveSt = alloca [2 x double], align 16
  %ThreeSt = alloca [2 x double], align 16
  %SevenSt = alloca [2 x double], align 16
  %mNaik = alloca [2 x double], align 16
  %mLepage = alloca [2 x double], align 16
  %mFiveSt = alloca [2 x double], align 16
  %mThreeSt = alloca [2 x double], align 16
  %mSevenSt = alloca [2 x double], align 16
  %hwvec = alloca [8 x %struct.half_wilson_vector*], align 16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %DirectLinks606) #31
  %0 = bitcast [2 x double]* %OneLink to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #31
  %1 = bitcast [2 x double]* %Lepage to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #31
  %2 = bitcast [2 x double]* %Naik to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #31
  %3 = bitcast [2 x double]* %FiveSt to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #31
  %4 = bitcast [2 x double]* %ThreeSt to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #31
  %5 = bitcast [2 x double]* %SevenSt to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #31
  %6 = bitcast [2 x double]* %mNaik to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #31
  %7 = bitcast [2 x double]* %mLepage to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #31
  %8 = bitcast [2 x double]* %mFiveSt to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #31
  %9 = bitcast [2 x double]* %mThreeSt to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #31
  %10 = bitcast [2 x double]* %mSevenSt to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #31
  %11 = bitcast [8 x %struct.half_wilson_vector*]* %hwvec to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #31
  %conv = sitofp i32 %nflav1 to double
  %div = fmul double %conv, 2.500000e-01
  %mul = fmul double %div, 2.000000e+00
  %mul1 = fmul double %mul, %eps
  %12 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 0), align 16, !tbaa !11
  %mul2 = fmul double %mul1, %12
  %arrayidx = getelementptr inbounds [2 x double], [2 x double]* %OneLink, i64 0, i64 0
  store double %mul2, double* %arrayidx, align 16, !tbaa !11
  %13 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 1), align 8, !tbaa !11
  %mul3 = fmul double %mul1, %13
  %arrayidx4 = getelementptr inbounds [2 x double], [2 x double]* %Naik, i64 0, i64 0
  store double %mul3, double* %arrayidx4, align 16, !tbaa !11
  %fneg = fneg double %mul3
  %arrayidx6 = getelementptr inbounds [2 x double], [2 x double]* %mNaik, i64 0, i64 0
  store double %fneg, double* %arrayidx6, align 16, !tbaa !11
  %14 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 2), align 16, !tbaa !11
  %mul7 = fmul double %mul1, %14
  %arrayidx8 = getelementptr inbounds [2 x double], [2 x double]* %ThreeSt, i64 0, i64 0
  store double %mul7, double* %arrayidx8, align 16, !tbaa !11
  %fneg10 = fneg double %mul7
  %arrayidx11 = getelementptr inbounds [2 x double], [2 x double]* %mThreeSt, i64 0, i64 0
  store double %fneg10, double* %arrayidx11, align 16, !tbaa !11
  %15 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 3), align 8, !tbaa !11
  %mul12 = fmul double %mul1, %15
  %arrayidx13 = getelementptr inbounds [2 x double], [2 x double]* %FiveSt, i64 0, i64 0
  store double %mul12, double* %arrayidx13, align 16, !tbaa !11
  %fneg15 = fneg double %mul12
  %arrayidx16 = getelementptr inbounds [2 x double], [2 x double]* %mFiveSt, i64 0, i64 0
  store double %fneg15, double* %arrayidx16, align 16, !tbaa !11
  %16 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 4), align 16, !tbaa !11
  %mul17 = fmul double %mul1, %16
  %arrayidx18 = getelementptr inbounds [2 x double], [2 x double]* %SevenSt, i64 0, i64 0
  store double %mul17, double* %arrayidx18, align 16, !tbaa !11
  %fneg20 = fneg double %mul17
  %arrayidx21 = getelementptr inbounds [2 x double], [2 x double]* %mSevenSt, i64 0, i64 0
  store double %fneg20, double* %arrayidx21, align 16, !tbaa !11
  %17 = load double, double* getelementptr inbounds ([6 x double], [6 x double]* @act_path_coeff, i64 0, i64 5), align 8, !tbaa !11
  %mul22 = fmul double %mul1, %17
  %arrayidx23 = getelementptr inbounds [2 x double], [2 x double]* %Lepage, i64 0, i64 0
  store double %mul22, double* %arrayidx23, align 16, !tbaa !11
  %fneg25 = fneg double %mul22
  %arrayidx26 = getelementptr inbounds [2 x double], [2 x double]* %mLepage, i64 0, i64 0
  store double %fneg25, double* %arrayidx26, align 16, !tbaa !11
  %conv27 = sitofp i32 %nflav2 to double
  %div28 = fmul double %conv27, 2.500000e-01
  %mul29 = fmul double %div28, 2.000000e+00
  %mul30 = fmul double %mul29, %eps
  %mul31 = fmul double %mul30, %12
  %arrayidx32 = getelementptr inbounds [2 x double], [2 x double]* %OneLink, i64 0, i64 1
  store double %mul31, double* %arrayidx32, align 8, !tbaa !11
  %mul33 = fmul double %mul30, %13
  %arrayidx34 = getelementptr inbounds [2 x double], [2 x double]* %Naik, i64 0, i64 1
  store double %mul33, double* %arrayidx34, align 8, !tbaa !11
  %fneg36 = fneg double %mul33
  %arrayidx37 = getelementptr inbounds [2 x double], [2 x double]* %mNaik, i64 0, i64 1
  store double %fneg36, double* %arrayidx37, align 8, !tbaa !11
  %mul38 = fmul double %mul30, %14
  %arrayidx39 = getelementptr inbounds [2 x double], [2 x double]* %ThreeSt, i64 0, i64 1
  store double %mul38, double* %arrayidx39, align 8, !tbaa !11
  %fneg41 = fneg double %mul38
  %arrayidx42 = getelementptr inbounds [2 x double], [2 x double]* %mThreeSt, i64 0, i64 1
  store double %fneg41, double* %arrayidx42, align 8, !tbaa !11
  %mul43 = fmul double %mul30, %15
  %arrayidx44 = getelementptr inbounds [2 x double], [2 x double]* %FiveSt, i64 0, i64 1
  store double %mul43, double* %arrayidx44, align 8, !tbaa !11
  %fneg46 = fneg double %mul43
  %arrayidx47 = getelementptr inbounds [2 x double], [2 x double]* %mFiveSt, i64 0, i64 1
  store double %fneg46, double* %arrayidx47, align 8, !tbaa !11
  %mul48 = fmul double %mul30, %16
  %arrayidx49 = getelementptr inbounds [2 x double], [2 x double]* %SevenSt, i64 0, i64 1
  store double %mul48, double* %arrayidx49, align 8, !tbaa !11
  %fneg51 = fneg double %mul48
  %arrayidx52 = getelementptr inbounds [2 x double], [2 x double]* %mSevenSt, i64 0, i64 1
  store double %fneg51, double* %arrayidx52, align 8, !tbaa !11
  %mul53 = fmul double %mul30, %17
  %arrayidx54 = getelementptr inbounds [2 x double], [2 x double]* %Lepage, i64 0, i64 1
  store double %mul53, double* %arrayidx54, align 8, !tbaa !11
  %fneg56 = fneg double %mul53
  %arrayidx57 = getelementptr inbounds [2 x double], [2 x double]* %mLepage, i64 0, i64 1
  store double %fneg56, double* %arrayidx57, align 8, !tbaa !11
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(32) %DirectLinks606, i8 0, i64 32, i1 false)
  %18 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv64 = sext i32 %18 to i64
  br label %for.body63

for.body63:                                       ; preds = %entry, %for.body63
  %indvars.iv603 = phi i64 [ 0, %entry ], [ %indvars.iv.next604, %for.body63 ]
  %call = tail call noalias align 16 i8* @calloc(i64 %conv64, i64 96) #32
  %arrayidx66 = getelementptr inbounds [8 x %struct.half_wilson_vector*], [8 x %struct.half_wilson_vector*]* %hwvec, i64 0, i64 %indvars.iv603
  %19 = bitcast %struct.half_wilson_vector** %arrayidx66 to i8**
  store i8* %call, i8** %19, align 8, !tbaa !15
  %indvars.iv.next604 = add nuw nsw i64 %indvars.iv603, 1
  %exitcond605.not = icmp eq i64 %indvars.iv.next604, 8
  br i1 %exitcond605.not, label %for.end69, label %for.body63, !llvm.loop !363

for.end69:                                        ; preds = %for.body63
  %call71 = tail call noalias align 16 i8* @calloc(i64 %conv64, i64 96) #32
  %20 = bitcast i8* %call71 to %struct.half_wilson_vector*
  %idx.ext = sext i32 %x1_off to i64
  %idx.ext83 = sext i32 %x2_off to i64
  %cmp73579 = icmp sgt i32 %18, 0
  br i1 %cmp73579, label %for.body75.preheader, label %for.cond88.preheader

for.body75.preheader:                             ; preds = %for.end69
  %21 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %wide.trip.count = zext i32 %18 to i64
  br label %for.body75

for.cond88.preheader:                             ; preds = %for.body75, %for.end69
  %arrayidx100 = getelementptr inbounds [8 x %struct.half_wilson_vector*], [8 x %struct.half_wilson_vector*]* %hwvec, i64 0, i64 0
  %22 = load %struct.half_wilson_vector*, %struct.half_wilson_vector** %arrayidx100, align 16
  %arrayidx103 = getelementptr inbounds [8 x %struct.half_wilson_vector*], [8 x %struct.half_wilson_vector*]* %hwvec, i64 0, i64 7
  %23 = load %struct.half_wilson_vector*, %struct.half_wilson_vector** %arrayidx103, align 8
  %arrayidx128 = getelementptr inbounds [8 x %struct.half_wilson_vector*], [8 x %struct.half_wilson_vector*]* %hwvec, i64 0, i64 1
  %24 = load %struct.half_wilson_vector*, %struct.half_wilson_vector** %arrayidx128, align 8
  %arrayidx131 = getelementptr inbounds [8 x %struct.half_wilson_vector*], [8 x %struct.half_wilson_vector*]* %hwvec, i64 0, i64 6
  %25 = load %struct.half_wilson_vector*, %struct.half_wilson_vector** %arrayidx131, align 16
  %arrayidx165 = getelementptr inbounds [8 x %struct.half_wilson_vector*], [8 x %struct.half_wilson_vector*]* %hwvec, i64 0, i64 2
  %26 = load %struct.half_wilson_vector*, %struct.half_wilson_vector** %arrayidx165, align 16
  %arrayidx168 = getelementptr inbounds [8 x %struct.half_wilson_vector*], [8 x %struct.half_wilson_vector*]* %hwvec, i64 0, i64 3
  %27 = load %struct.half_wilson_vector*, %struct.half_wilson_vector** %arrayidx168, align 8
  %arrayidx177 = getelementptr inbounds [8 x %struct.half_wilson_vector*], [8 x %struct.half_wilson_vector*]* %hwvec, i64 0, i64 4
  %28 = load %struct.half_wilson_vector*, %struct.half_wilson_vector** %arrayidx177, align 16
  br label %for.cond92.preheader

for.body75:                                       ; preds = %for.body75.preheader, %for.body75
  %indvars.iv600 = phi i64 [ 0, %for.body75.preheader ], [ %indvars.iv.next601, %for.body75 ]
  %s.0580 = phi %struct.site* [ %21, %for.body75.preheader ], [ %incdec.ptr, %for.body75 ]
  %h = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %20, i64 %indvars.iv600, i32 0
  %29 = bitcast %struct.site* %s.0580 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %29, i64 %idx.ext
  %30 = bitcast [2 x %struct.su3_vector]* %h to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(48) %30, i8* noundef nonnull align 8 dereferenceable(48) %add.ptr, i64 48, i1 false), !tbaa.struct !262
  %arrayidx82 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %20, i64 %indvars.iv600, i32 0, i64 1
  %add.ptr84 = getelementptr inbounds i8, i8* %29, i64 %idx.ext83
  %31 = bitcast %struct.su3_vector* %arrayidx82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(48) %31, i8* noundef nonnull align 8 dereferenceable(48) %add.ptr84, i64 48, i1 false), !tbaa.struct !262
  %indvars.iv.next601 = add nuw nsw i64 %indvars.iv600, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0580, i64 1
  %exitcond602.not = icmp eq i64 %indvars.iv.next601, %wide.trip.count
  br i1 %exitcond602.not, label %for.cond88.preheader, label %for.body75, !llvm.loop !364

for.cond92.preheader:                             ; preds = %for.cond88.preheader, %for.inc403
  %32 = phi double [ %mul53, %for.cond88.preheader ], [ %79, %for.inc403 ]
  %33 = phi double [ %mul22, %for.cond88.preheader ], [ %80, %for.inc403 ]
  %34 = phi double [ %mul43, %for.cond88.preheader ], [ %81, %for.inc403 ]
  %35 = phi double [ %mul12, %for.cond88.preheader ], [ %82, %for.inc403 ]
  %36 = phi double [ %mul43, %for.cond88.preheader ], [ %83, %for.inc403 ]
  %37 = phi double [ %mul12, %for.cond88.preheader ], [ %84, %for.inc403 ]
  %indvars.iv596 = phi i64 [ 0, %for.cond88.preheader ], [ %indvars.iv.next597, %for.inc403 ]
  %38 = sub nuw nsw i64 7, %indvars.iv596
  %cmp104 = icmp ult i64 %indvars.iv596, 4
  %39 = trunc i64 %indvars.iv596 to i32
  br label %for.body95

for.body95:                                       ; preds = %for.cond92.preheader, %for.inc400
  %40 = phi double [ %32, %for.cond92.preheader ], [ %79, %for.inc400 ]
  %41 = phi double [ %33, %for.cond92.preheader ], [ %80, %for.inc400 ]
  %42 = phi double [ %34, %for.cond92.preheader ], [ %81, %for.inc400 ]
  %43 = phi double [ %35, %for.cond92.preheader ], [ %82, %for.inc400 ]
  %44 = phi double [ %36, %for.cond92.preheader ], [ %83, %for.inc400 ]
  %45 = phi double [ %37, %for.cond92.preheader ], [ %84, %for.inc400 ]
  %indvars.iv592 = phi i64 [ 0, %for.cond92.preheader ], [ %indvars.iv.next593, %for.inc400 ]
  %cmp96.not = icmp eq i64 %indvars.iv592, %indvars.iv596
  %cmp98.not = icmp eq i64 %indvars.iv592, %38
  %or.cond = select i1 %cmp96.not, i1 true, i1 %cmp98.not
  br i1 %or.cond, label %for.inc400, label %if.then

if.then:                                          ; preds = %for.body95
  %46 = sub nuw nsw i64 7, %indvars.iv592
  %47 = trunc i64 %46 to i32
  tail call void @u_shift_hw_fermion(%struct.half_wilson_vector* %20, %struct.half_wilson_vector* %22, i32 %47) #34
  tail call void @u_shift_hw_fermion(%struct.half_wilson_vector* %22, %struct.half_wilson_vector* %23, i32 %39) #34
  br i1 %cmp104, label %if.then106, label %if.end

if.then106:                                       ; preds = %if.then
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %23, %struct.half_wilson_vector* %22, i32 %39, double* nonnull %arrayidx11) #34
  br label %if.end

if.end:                                           ; preds = %if.then106, %if.then
  %48 = load double, double* %arrayidx8, align 16
  %49 = load double, double* %arrayidx39, align 8
  br label %for.body112

for.body112:                                      ; preds = %if.end, %for.inc291
  %50 = phi double [ %42, %if.end ], [ %68, %for.inc291 ]
  %51 = phi double [ %43, %if.end ], [ %69, %for.inc291 ]
  %52 = phi double [ %44, %if.end ], [ %70, %for.inc291 ]
  %53 = phi double [ %45, %if.end ], [ %71, %for.inc291 ]
  %nu.0572 = phi i32 [ 0, %if.end ], [ %inc292, %for.inc291 ]
  %54 = zext i32 %nu.0572 to i64
  %cmp113.not = icmp eq i64 %indvars.iv592, %54
  %cmp117.not = icmp eq i64 %46, %54
  %or.cond557 = select i1 %cmp113.not, i1 true, i1 %cmp117.not
  %cmp120.not = icmp eq i64 %indvars.iv596, %54
  %or.cond558 = select i1 %or.cond557, i1 true, i1 %cmp120.not
  %cmp124.not = icmp eq i64 %38, %54
  %or.cond559 = select i1 %or.cond558, i1 true, i1 %cmp124.not
  br i1 %or.cond559, label %for.inc291, label %if.then126

if.then126:                                       ; preds = %for.body112
  %sub129 = sub nuw nsw i32 7, %nu.0572
  tail call void @u_shift_hw_fermion(%struct.half_wilson_vector* %22, %struct.half_wilson_vector* %24, i32 %sub129) #34
  tail call void @u_shift_hw_fermion(%struct.half_wilson_vector* %24, %struct.half_wilson_vector* %25, i32 %39) #34
  br i1 %cmp104, label %if.then134, label %if.end138

if.then134:                                       ; preds = %if.then126
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %25, %struct.half_wilson_vector* %24, i32 %39, double* nonnull %arrayidx13) #34
  %.pre = load double, double* %arrayidx13, align 16
  %.pre609 = load double, double* %arrayidx44, align 8
  br label %if.end138

if.end138:                                        ; preds = %if.then134, %if.then126
  %55 = phi double [ %.pre609, %if.then134 ], [ %50, %if.then126 ]
  %56 = phi double [ %.pre, %if.then134 ], [ %51, %if.then126 ]
  %57 = phi double [ %.pre609, %if.then134 ], [ %52, %if.then126 ]
  %58 = phi double [ %.pre, %if.then134 ], [ %53, %if.then126 ]
  br label %for.body142

for.body142:                                      ; preds = %if.end138, %for.inc232
  %rho.0568 = phi i32 [ 0, %if.end138 ], [ %inc233, %for.inc232 ]
  %59 = zext i32 %rho.0568 to i64
  %cmp143.not = icmp eq i64 %indvars.iv592, %59
  %cmp147.not = icmp eq i64 %46, %59
  %or.cond560 = select i1 %cmp143.not, i1 true, i1 %cmp147.not
  %cmp150.not = icmp eq i32 %rho.0568, %nu.0572
  %or.cond561 = select i1 %or.cond560, i1 true, i1 %cmp150.not
  %cmp154.not = icmp eq i32 %rho.0568, %sub129
  %or.cond562 = select i1 %or.cond561, i1 true, i1 %cmp154.not
  %cmp157.not = icmp eq i64 %indvars.iv596, %59
  %or.cond563 = select i1 %or.cond562, i1 true, i1 %cmp157.not
  %cmp161.not = icmp eq i64 %38, %59
  %or.cond564 = select i1 %or.cond563, i1 true, i1 %cmp161.not
  br i1 %or.cond564, label %for.inc232, label %if.then163

if.then163:                                       ; preds = %for.body142
  %sub166 = sub nuw nsw i32 7, %rho.0568
  tail call void @u_shift_hw_fermion(%struct.half_wilson_vector* %24, %struct.half_wilson_vector* %26, i32 %sub166) #34
  tail call void @u_shift_hw_fermion(%struct.half_wilson_vector* %26, %struct.half_wilson_vector* %27, i32 %39) #34
  br i1 %cmp104, label %if.then171, label %if.end175

if.then171:                                       ; preds = %if.then163
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %27, %struct.half_wilson_vector* %26, i32 %39, double* nonnull %arrayidx21) #34
  br label %if.end175

if.end175:                                        ; preds = %if.then171, %if.then163
  tail call void @u_shift_hw_fermion(%struct.half_wilson_vector* %27, %struct.half_wilson_vector* %28, i32 %rho.0568) #34
  call void @side_link_3f_force(i32 %rho.0568, i32 %39, double* nonnull %arrayidx18, %struct.half_wilson_vector* %24, %struct.half_wilson_vector* %27, %struct.half_wilson_vector* %26, %struct.half_wilson_vector* %28) #34
  %60 = load double, double* %arrayidx18, align 16, !tbaa !11
  %div185 = fdiv double %60, %58
  %61 = load double, double* %arrayidx49, align 8, !tbaa !11
  %div189 = fdiv double %61, %57
  %62 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp192566 = icmp sgt i32 %62, 0
  br i1 %cmp192566, label %for.body194, label %for.inc232

for.body194:                                      ; preds = %if.end175, %for.body194
  %indvars.iv584 = phi i64 [ %indvars.iv.next585, %for.body194 ], [ 0, %if.end175 ]
  %arrayidx199 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %25, i64 %indvars.iv584, i32 0, i64 0
  %arrayidx204 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %28, i64 %indvars.iv584, i32 0, i64 0
  tail call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx199, %struct.su3_vector* %arrayidx204, double %div185, %struct.su3_vector* %arrayidx199) #32
  %arrayidx215 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %25, i64 %indvars.iv584, i32 0, i64 1
  %arrayidx220 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %28, i64 %indvars.iv584, i32 0, i64 1
  tail call void @scalar_mult_add_su3_vector(%struct.su3_vector* nonnull %arrayidx215, %struct.su3_vector* nonnull %arrayidx220, double %div189, %struct.su3_vector* nonnull %arrayidx215) #32
  %indvars.iv.next585 = add nuw nsw i64 %indvars.iv584, 1
  %63 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %64 = sext i32 %63 to i64
  %cmp192 = icmp slt i64 %indvars.iv.next585, %64
  br i1 %cmp192, label %for.body194, label %for.inc232, !llvm.loop !365

for.inc232:                                       ; preds = %for.body194, %if.end175, %for.body142
  %inc233 = add nuw nsw i32 %rho.0568, 1
  %exitcond586.not = icmp eq i32 %inc233, 8
  br i1 %exitcond586.not, label %for.end234, label %for.body142, !llvm.loop !366

for.end234:                                       ; preds = %for.inc232
  tail call void @u_shift_hw_fermion(%struct.half_wilson_vector* %25, %struct.half_wilson_vector* %27, i32 %nu.0572) #34
  call void @side_link_3f_force(i32 %nu.0572, i32 %39, double* nonnull %arrayidx16, %struct.half_wilson_vector* %22, %struct.half_wilson_vector* %25, %struct.half_wilson_vector* %24, %struct.half_wilson_vector* %27) #34
  %div244 = fdiv double %56, %48
  %div248 = fdiv double %55, %49
  %65 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp251570 = icmp sgt i32 %65, 0
  br i1 %cmp251570, label %for.body253, label %for.inc291

for.body253:                                      ; preds = %for.end234, %for.body253
  %indvars.iv587 = phi i64 [ %indvars.iv.next588, %for.body253 ], [ 0, %for.end234 ]
  %arrayidx258 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %23, i64 %indvars.iv587, i32 0, i64 0
  %arrayidx263 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %27, i64 %indvars.iv587, i32 0, i64 0
  tail call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx258, %struct.su3_vector* %arrayidx263, double %div244, %struct.su3_vector* %arrayidx258) #32
  %arrayidx274 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %23, i64 %indvars.iv587, i32 0, i64 1
  %arrayidx279 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %27, i64 %indvars.iv587, i32 0, i64 1
  tail call void @scalar_mult_add_su3_vector(%struct.su3_vector* nonnull %arrayidx274, %struct.su3_vector* nonnull %arrayidx279, double %div248, %struct.su3_vector* nonnull %arrayidx274) #32
  %indvars.iv.next588 = add nuw nsw i64 %indvars.iv587, 1
  %66 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %67 = sext i32 %66 to i64
  %cmp251 = icmp slt i64 %indvars.iv.next588, %67
  br i1 %cmp251, label %for.body253, label %for.inc291, !llvm.loop !367

for.inc291:                                       ; preds = %for.body253, %for.end234, %for.body112
  %68 = phi double [ %55, %for.end234 ], [ %50, %for.body112 ], [ %55, %for.body253 ]
  %69 = phi double [ %56, %for.end234 ], [ %51, %for.body112 ], [ %56, %for.body253 ]
  %70 = phi double [ %55, %for.end234 ], [ %52, %for.body112 ], [ %55, %for.body253 ]
  %71 = phi double [ %56, %for.end234 ], [ %53, %for.body112 ], [ %56, %for.body253 ]
  %inc292 = add nuw nsw i32 %nu.0572, 1
  %exitcond589.not = icmp eq i32 %inc292, 8
  br i1 %exitcond589.not, label %for.end293, label %for.body112, !llvm.loop !368

for.end293:                                       ; preds = %for.inc291
  tail call void @u_shift_hw_fermion(%struct.half_wilson_vector* %22, %struct.half_wilson_vector* %24, i32 %47) #34
  tail call void @u_shift_hw_fermion(%struct.half_wilson_vector* %24, %struct.half_wilson_vector* %25, i32 %39) #34
  br i1 %cmp104, label %if.then301, label %if.end305

if.then301:                                       ; preds = %for.end293
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %25, %struct.half_wilson_vector* %24, i32 %39, double* nonnull %arrayidx23) #34
  %.pre610 = load double, double* %arrayidx23, align 16, !tbaa !11
  %.pre611 = load double, double* %arrayidx54, align 8, !tbaa !11
  br label %if.end305

if.end305:                                        ; preds = %if.then301, %for.end293
  %72 = phi double [ %.pre611, %if.then301 ], [ %40, %for.end293 ]
  %73 = phi double [ %.pre610, %if.then301 ], [ %41, %for.end293 ]
  %74 = trunc i64 %indvars.iv592 to i32
  tail call void @u_shift_hw_fermion(%struct.half_wilson_vector* %25, %struct.half_wilson_vector* %27, i32 %74) #34
  call void @side_link_3f_force(i32 %74, i32 %39, double* nonnull %arrayidx26, %struct.half_wilson_vector* %22, %struct.half_wilson_vector* %25, %struct.half_wilson_vector* %24, %struct.half_wilson_vector* %27) #34
  %div315 = fdiv double %73, %48
  %div319 = fdiv double %72, %49
  %75 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp322574 = icmp sgt i32 %75, 0
  br i1 %cmp322574, label %for.body324, label %for.end360

for.body324:                                      ; preds = %if.end305, %for.body324
  %indvars.iv590 = phi i64 [ %indvars.iv.next591, %for.body324 ], [ 0, %if.end305 ]
  %arrayidx329 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %23, i64 %indvars.iv590, i32 0, i64 0
  %arrayidx334 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %27, i64 %indvars.iv590, i32 0, i64 0
  tail call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx329, %struct.su3_vector* %arrayidx334, double %div315, %struct.su3_vector* %arrayidx329) #32
  %arrayidx345 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %23, i64 %indvars.iv590, i32 0, i64 1
  %arrayidx350 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %27, i64 %indvars.iv590, i32 0, i64 1
  tail call void @scalar_mult_add_su3_vector(%struct.su3_vector* nonnull %arrayidx345, %struct.su3_vector* nonnull %arrayidx350, double %div319, %struct.su3_vector* nonnull %arrayidx345) #32
  %indvars.iv.next591 = add nuw nsw i64 %indvars.iv590, 1
  %76 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %77 = sext i32 %76 to i64
  %cmp322 = icmp slt i64 %indvars.iv.next591, %77
  br i1 %cmp322, label %for.body324, label %for.end360, !llvm.loop !369

for.end360:                                       ; preds = %for.body324, %if.end305
  %cmp361 = icmp ult i64 %indvars.iv592, 4
  br i1 %cmp361, label %if.then363, label %if.end366

if.then363:                                       ; preds = %for.end360
  tail call void @u_shift_hw_fermion(%struct.half_wilson_vector* %23, %struct.half_wilson_vector* %27, i32 %74) #34
  br label %if.end366

if.end366:                                        ; preds = %if.then363, %for.end360
  call void @side_link_3f_force(i32 %74, i32 %39, double* nonnull %arrayidx8, %struct.half_wilson_vector* %20, %struct.half_wilson_vector* %23, %struct.half_wilson_vector* %22, %struct.half_wilson_vector* %27) #34
  %arrayidx372 = getelementptr inbounds [8 x i32], [8 x i32]* %DirectLinks, i64 0, i64 %indvars.iv592
  %78 = load i32, i32* %arrayidx372, align 4, !tbaa !13
  %tobool.not = icmp eq i32 %78, 0
  br i1 %tobool.not, label %if.then373, label %for.inc400

if.then373:                                       ; preds = %if.end366
  store i32 1, i32* %arrayidx372, align 4, !tbaa !13
  %cmp376 = icmp ugt i64 %indvars.iv592, 3
  br i1 %cmp376, label %if.then378, label %if.else

if.then378:                                       ; preds = %if.then373
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %22, %struct.half_wilson_vector* %20, i32 %47, double* nonnull %arrayidx) #34
  tail call void @u_shift_hw_fermion(%struct.half_wilson_vector* %20, %struct.half_wilson_vector* %28, i32 %74) #34
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %24, %struct.half_wilson_vector* %28, i32 %47, double* nonnull %arrayidx6) #34
  tail call void @u_shift_hw_fermion(%struct.half_wilson_vector* %24, %struct.half_wilson_vector* %28, i32 %47) #34
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %28, %struct.half_wilson_vector* %20, i32 %47, double* nonnull %arrayidx4) #34
  br label %for.inc400

if.else:                                          ; preds = %if.then373
  tail call void @u_shift_hw_fermion(%struct.half_wilson_vector* %20, %struct.half_wilson_vector* %28, i32 %74) #34
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %28, %struct.half_wilson_vector* %24, i32 %74, double* nonnull %arrayidx4) #34
  br label %for.inc400

for.inc400:                                       ; preds = %for.body95, %if.then378, %if.else, %if.end366
  %79 = phi double [ %40, %for.body95 ], [ %72, %if.then378 ], [ %72, %if.else ], [ %72, %if.end366 ]
  %80 = phi double [ %41, %for.body95 ], [ %73, %if.then378 ], [ %73, %if.else ], [ %73, %if.end366 ]
  %81 = phi double [ %42, %for.body95 ], [ %68, %if.then378 ], [ %68, %if.else ], [ %68, %if.end366 ]
  %82 = phi double [ %43, %for.body95 ], [ %69, %if.then378 ], [ %69, %if.else ], [ %69, %if.end366 ]
  %83 = phi double [ %44, %for.body95 ], [ %70, %if.then378 ], [ %70, %if.else ], [ %70, %if.end366 ]
  %84 = phi double [ %45, %for.body95 ], [ %71, %if.then378 ], [ %71, %if.else ], [ %71, %if.end366 ]
  %indvars.iv.next593 = add nuw nsw i64 %indvars.iv592, 1
  %exitcond595.not = icmp eq i64 %indvars.iv.next593, 8
  br i1 %exitcond595.not, label %for.inc403, label %for.body95, !llvm.loop !370

for.inc403:                                       ; preds = %for.inc400
  %indvars.iv.next597 = add nuw nsw i64 %indvars.iv596, 1
  %exitcond599.not = icmp eq i64 %indvars.iv.next597, 8
  br i1 %exitcond599.not, label %for.end405, label %for.cond92.preheader, !llvm.loop !371

for.end405:                                       ; preds = %for.inc403
  tail call void @free(i8* %call71) #32
  br label %for.body409

for.body409:                                      ; preds = %for.end405, %for.body409
  %indvars.iv = phi i64 [ 0, %for.end405 ], [ %indvars.iv.next, %for.body409 ]
  %arrayidx411 = getelementptr inbounds [8 x %struct.half_wilson_vector*], [8 x %struct.half_wilson_vector*]* %hwvec, i64 0, i64 %indvars.iv
  %85 = bitcast %struct.half_wilson_vector** %arrayidx411 to i8**
  %86 = load i8*, i8** %85, align 8, !tbaa !15
  tail call void @free(i8* %86) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 8
  br i1 %exitcond.not, label %for.end414, label %for.body409, !llvm.loop !372

for.end414:                                       ; preds = %for.body409
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %DirectLinks606) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @u_shift_hw_fermion(%struct.half_wilson_vector* %src, %struct.half_wilson_vector* %dest, i32 %dir) local_unnamed_addr #1 {
entry:
  %cmp = icmp slt i32 %dir, 4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.half_wilson_vector* %src to i8*
  %1 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call = tail call %struct.msg_tag* @start_gather_from_temp(i8* %0, i32 96, i32 %dir, i32 3, i8** %1) #32
  tail call void @wait_gather(%struct.msg_tag* %call) #32
  %idxprom = sext i32 %dir to i64
  %2 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp165 = icmp sgt i32 %2, 0
  br i1 %cmp165, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %if.then
  %3 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %s.066 = phi %struct.site* [ %3, %for.body.preheader ], [ %incdec.ptr, %for.body ]
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %s.066, i64 0, i32 8, i64 %idxprom
  %4 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx3 = getelementptr inbounds i8*, i8** %4, i64 %indvars.iv
  %5 = bitcast i8** %arrayidx3 to %struct.half_wilson_vector**
  %6 = load %struct.half_wilson_vector*, %struct.half_wilson_vector** %5, align 8, !tbaa !15
  %arrayidx5 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 %indvars.iv
  tail call void @mult_su3_mat_hwvec(%struct.su3_matrix* nonnull %arrayidx, %struct.half_wilson_vector* %6, %struct.half_wilson_vector* %arrayidx5) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.066, i64 1
  %7 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %8 = sext i32 %7 to i64
  %cmp1 = icmp slt i64 %indvars.iv.next, %8
  br i1 %cmp1, label %for.body, label %for.end, !llvm.loop !373

for.end:                                          ; preds = %for.body, %if.then
  tail call void @cleanup_gather(%struct.msg_tag* %call) #32
  br label %if.end

if.else:                                          ; preds = %entry
  %9 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv = sext i32 %9 to i64
  %call6 = tail call noalias align 16 i8* @calloc(i64 %conv, i64 96) #32
  %10 = bitcast i8* %call6 to %struct.half_wilson_vector*
  %sub = sub nsw i32 7, %dir
  %idxprom12 = sext i32 %sub to i64
  %cmp870 = icmp sgt i32 %9, 0
  br i1 %cmp870, label %for.body10.preheader, label %for.end21

for.body10.preheader:                             ; preds = %if.else
  %11 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body10

for.body10:                                       ; preds = %for.body10.preheader, %for.body10
  %indvars.iv75 = phi i64 [ 0, %for.body10.preheader ], [ %indvars.iv.next76, %for.body10 ]
  %s.171 = phi %struct.site* [ %11, %for.body10.preheader ], [ %incdec.ptr20, %for.body10 ]
  %arrayidx13 = getelementptr inbounds %struct.site, %struct.site* %s.171, i64 0, i32 8, i64 %idxprom12
  %arrayidx15 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 %indvars.iv75
  %arrayidx17 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %10, i64 %indvars.iv75
  tail call void @mult_adj_su3_mat_hwvec(%struct.su3_matrix* nonnull %arrayidx13, %struct.half_wilson_vector* %arrayidx15, %struct.half_wilson_vector* %arrayidx17) #32
  %indvars.iv.next76 = add nuw nsw i64 %indvars.iv75, 1
  %incdec.ptr20 = getelementptr inbounds %struct.site, %struct.site* %s.171, i64 1
  %12 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %13 = sext i32 %12 to i64
  %cmp8 = icmp slt i64 %indvars.iv.next76, %13
  br i1 %cmp8, label %for.body10, label %for.end21, !llvm.loop !374

for.end21:                                        ; preds = %for.body10, %if.else
  %14 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %call22 = tail call %struct.msg_tag* @start_gather_from_temp(i8* %call6, i32 96, i32 %dir, i32 3, i8** %14) #32
  tail call void @wait_gather(%struct.msg_tag* %call22) #32
  %15 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp2468 = icmp sgt i32 %15, 0
  br i1 %cmp2468, label %for.body26, label %for.end34

for.body26:                                       ; preds = %for.end21, %for.body26
  %indvars.iv73 = phi i64 [ %indvars.iv.next74, %for.body26 ], [ 0, %for.end21 ]
  %arrayidx28 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 %indvars.iv73
  %16 = load i8**, i8*** getelementptr inbounds ([16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 0), align 16, !tbaa !15
  %arrayidx30 = getelementptr inbounds i8*, i8** %16, i64 %indvars.iv73
  %17 = load i8*, i8** %arrayidx30, align 8, !tbaa !15
  %18 = bitcast %struct.half_wilson_vector* %arrayidx28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(96) %18, i8* noundef nonnull align 8 dereferenceable(96) %17, i64 96, i1 false), !tbaa.struct !324
  %indvars.iv.next74 = add nuw nsw i64 %indvars.iv73, 1
  %19 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %20 = sext i32 %19 to i64
  %cmp24 = icmp slt i64 %indvars.iv.next74, %20
  br i1 %cmp24, label %for.body26, label %for.end34, !llvm.loop !375

for.end34:                                        ; preds = %for.body26, %for.end21
  tail call void @cleanup_gather(%struct.msg_tag* %call22) #32
  tail call void @free(i8* %call6) #32
  br label %if.end

if.end:                                           ; preds = %for.end34, %for.end
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @add_3f_force_to_mom(%struct.half_wilson_vector* %back, %struct.half_wilson_vector* %forw, i32 %dir, double* nocapture %coeff) local_unnamed_addr #1 {
entry:
  %tmat = alloca %struct.su3_matrix, align 8
  %tmat2 = alloca %struct.su3_matrix, align 8
  %0 = bitcast %struct.su3_matrix* %tmat to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %0) #31
  %1 = bitcast %struct.su3_matrix* %tmat2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %1) #31
  %cmp = icmp sgt i32 %dir, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %sub = sub nsw i32 7, %dir
  %2 = load double, double* %coeff, align 8, !tbaa !11
  %fneg = fneg double %2
  store double %fneg, double* %coeff, align 8, !tbaa !11
  %arrayidx2 = getelementptr inbounds double, double* %coeff, i64 1
  %3 = load double, double* %arrayidx2, align 8, !tbaa !11
  %fneg3 = fneg double %3
  store double %fneg3, double* %arrayidx2, align 8, !tbaa !11
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %dir.addr.0 = phi i32 [ %sub, %if.then ], [ %dir, %entry ]
  %arrayidx17 = getelementptr inbounds double, double* %coeff, i64 1
  %idxprom = sext i32 %dir.addr.0 to i64
  %4 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp565 = icmp sgt i32 %4, 0
  br i1 %cmp565, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %if.end
  %5 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %if.end19
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %if.end19 ]
  %s.066 = phi %struct.site* [ %5, %for.body.preheader ], [ %incdec.ptr, %if.end19 ]
  %parity = getelementptr inbounds %struct.site, %struct.site* %s.066, i64 0, i32 4
  %6 = load i8, i8* %parity, align 8, !tbaa !125
  %cmp6 = icmp eq i8 %6, 1
  %7 = load double, double* %coeff, align 8, !tbaa !11
  br i1 %cmp6, label %if.then8, label %if.else

if.then8:                                         ; preds = %for.body
  %fneg10 = fneg double %7
  %8 = load double, double* %arrayidx17, align 8, !tbaa !11
  %fneg13 = fneg double %8
  br label %if.end19

if.else:                                          ; preds = %for.body
  %9 = load double, double* %arrayidx17, align 8, !tbaa !11
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then8
  %tmp_coeff.sroa.5.0 = phi double [ %fneg13, %if.then8 ], [ %9, %if.else ]
  %tmp_coeff.sroa.0.0 = phi double [ %fneg10, %if.then8 ], [ %7, %if.else ]
  %arrayidx20 = getelementptr inbounds %struct.site, %struct.site* %s.066, i64 0, i32 11, i64 %idxprom
  call void @uncompress_anti_hermitian(%struct.anti_hermitmat* nonnull %arrayidx20, %struct.su3_matrix* nonnull %tmat2) #32
  %arrayidx23 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %back, i64 %indvars.iv, i32 0, i64 0
  %arrayidx27 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %forw, i64 %indvars.iv, i32 0, i64 0
  call void @su3_projector(%struct.su3_vector* %arrayidx23, %struct.su3_vector* %arrayidx27, %struct.su3_matrix* nonnull %tmat) #32
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* nonnull %tmat2, %struct.su3_matrix* nonnull %tmat, double %tmp_coeff.sroa.0.0, %struct.su3_matrix* nonnull %tmat2) #32
  %arrayidx32 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %back, i64 %indvars.iv, i32 0, i64 1
  %arrayidx36 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %forw, i64 %indvars.iv, i32 0, i64 1
  call void @su3_projector(%struct.su3_vector* nonnull %arrayidx32, %struct.su3_vector* nonnull %arrayidx36, %struct.su3_matrix* nonnull %tmat) #32
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* nonnull %tmat2, %struct.su3_matrix* nonnull %tmat, double %tmp_coeff.sroa.5.0, %struct.su3_matrix* nonnull %tmat2) #32
  call void @make_anti_hermitian(%struct.su3_matrix* nonnull %tmat2, %struct.anti_hermitmat* nonnull %arrayidx20) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.066, i64 1
  %10 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %11 = sext i32 %10 to i64
  %cmp5 = icmp slt i64 %indvars.iv.next, %11
  br i1 %cmp5, label %for.body, label %for.end, !llvm.loop !376

for.end:                                          ; preds = %if.end19, %if.end
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @side_link_3f_force(i32 %mu, i32 %nu, double* nocapture %coeff, %struct.half_wilson_vector* %Path, %struct.half_wilson_vector* %Path_nu, %struct.half_wilson_vector* %Path_mu, %struct.half_wilson_vector* %Path_numu) local_unnamed_addr #1 {
entry:
  %m_coeff = alloca [2 x double], align 16
  %0 = bitcast [2 x double]* %m_coeff to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #31
  %1 = load double, double* %coeff, align 8, !tbaa !11
  %fneg = fneg double %1
  %arrayidx1 = getelementptr inbounds [2 x double], [2 x double]* %m_coeff, i64 0, i64 0
  store double %fneg, double* %arrayidx1, align 16, !tbaa !11
  %arrayidx2 = getelementptr inbounds double, double* %coeff, i64 1
  %2 = load double, double* %arrayidx2, align 8, !tbaa !11
  %fneg3 = fneg double %2
  %arrayidx4 = getelementptr inbounds [2 x double], [2 x double]* %m_coeff, i64 0, i64 1
  store double %fneg3, double* %arrayidx4, align 8, !tbaa !11
  %cmp = icmp slt i32 %mu, 4
  %cmp5 = icmp slt i32 %nu, 4
  br i1 %cmp, label %if.then, label %if.else7

if.then:                                          ; preds = %entry
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.then
  tail call void @add_3f_force_to_mom(%struct.half_wilson_vector* %Path_numu, %struct.half_wilson_vector* %Path, i32 %mu, double* nonnull %coeff) #34
  br label %if.end14

if.else:                                          ; preds = %if.then
  %sub = sub nsw i32 7, %mu
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %Path, %struct.half_wilson_vector* %Path_numu, i32 %sub, double* nonnull %arrayidx1) #34
  br label %if.end14

if.else7:                                         ; preds = %entry
  br i1 %cmp5, label %if.then9, label %if.else11

if.then9:                                         ; preds = %if.else7
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %Path_nu, %struct.half_wilson_vector* %Path_mu, i32 %mu, double* nonnull %arrayidx1) #34
  br label %if.end14

if.else11:                                        ; preds = %if.else7
  %sub12 = sub nsw i32 7, %mu
  tail call void @add_3f_force_to_mom(%struct.half_wilson_vector* %Path_mu, %struct.half_wilson_vector* %Path_nu, i32 %sub12, double* nonnull %coeff) #34
  br label %if.end14

if.end14:                                         ; preds = %if.then9, %if.else11, %if.then6, %if.else
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #31
  ret void
}

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @byterevn(i32* nocapture %w, i32 %n) local_unnamed_addr #4 {
entry:
  %cmp23 = icmp sgt i32 %n, 0
  br i1 %cmp23, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %n to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds i32, i32* %w, i64 %indvars.iv
  %0 = load i32, i32* %arrayidx, align 4, !tbaa !13
  %or7 = tail call i32 @llvm.bswap.i32(i32 %0)
  store i32 %or7, i32* %arrayidx, align 4, !tbaa !13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !377

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #5

; Function Attrs: noinline nounwind optsize uwtable
define double @check_unitarity() local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp134 = icmp sgt i32 %0, 0
  br i1 %cmp134, label %for.cond1.preheader.preheader, label %if.end76

for.cond1.preheader.preheader:                    ; preds = %entry
  %1 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.preheader, %for.inc67
  %i.0138 = phi i32 [ %inc68, %for.inc67 ], [ 0, %for.cond1.preheader.preheader ]
  %av_deviation.0137 = phi double [ %10, %for.inc67 ], [ 0.000000e+00, %for.cond1.preheader.preheader ]
  %max_deviation.0136 = phi double [ %max_deviation.2, %for.inc67 ], [ 0.000000e+00, %for.cond1.preheader.preheader ]
  %s.0135 = phi %struct.site* [ %incdec.ptr, %for.inc67 ], [ %1, %for.cond1.preheader.preheader ]
  br label %for.body3

for.body3:                                        ; preds = %for.cond1.preheader, %if.end
  %indvars.iv150 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next151, %if.end ]
  %av_deviation.1133 = phi double [ %av_deviation.0137, %for.cond1.preheader ], [ %10, %if.end ]
  %max_deviation.1132 = phi double [ %max_deviation.0136, %for.cond1.preheader ], [ %max_deviation.2, %if.end ]
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %s.0135, i64 0, i32 8, i64 %indvars.iv150
  %call = tail call double @check_su3(%struct.su3_matrix* nonnull %arrayidx) #34
  %cmp4 = fcmp ogt double %call, 1.000000e-04
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body3
  %call5 = tail call i32 (...) bitcast (i32 ()* @mynode to i32 (...)*)() #32
  %2 = trunc i64 %indvars.iv150 to i32
  %call6 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([61 x i8], [61 x i8]* @.str.202, i64 0, i64 0), i32 %call5, i32 %i.0138, i32 %2, double %call) #34
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([12 x i8], [12 x i8]* @str.203, i64 0, i64 0))
  br label %for.cond11.preheader

for.cond11.preheader:                             ; preds = %if.then, %for.end
  %indvars.iv141 = phi i64 [ 0, %if.then ], [ %indvars.iv.next142, %for.end ]
  br label %for.body13

for.body13:                                       ; preds = %for.cond11.preheader, %for.body13
  %indvars.iv = phi i64 [ 0, %for.cond11.preheader ], [ %indvars.iv.next, %for.body13 ]
  %real = getelementptr inbounds %struct.site, %struct.site* %s.0135, i64 0, i32 8, i64 %indvars.iv150, i32 0, i64 %indvars.iv141, i64 %indvars.iv, i32 0
  %3 = load double, double* %real, align 8, !tbaa !4
  %call18 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.204, i64 0, i64 0), double %3) #34
  %imag = getelementptr inbounds %struct.site, %struct.site* %s.0135, i64 0, i32 8, i64 %indvars.iv150, i32 0, i64 %indvars.iv141, i64 %indvars.iv, i32 1
  %4 = load double, double* %imag, align 8, !tbaa !9
  %call24 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.204, i64 0, i64 0), double %4) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end, label %for.body13, !llvm.loop !378

for.end:                                          ; preds = %for.body13
  %putchar125 = tail call i32 @putchar(i32 10)
  %indvars.iv.next142 = add nuw nsw i64 %indvars.iv141, 1
  %exitcond143.not = icmp eq i64 %indvars.iv.next142, 3
  br i1 %exitcond143.not, label %for.end28, label %for.cond11.preheader, !llvm.loop !379

for.end28:                                        ; preds = %for.end
  %puts123 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @str.8.205, i64 0, i64 0))
  br label %for.cond33.preheader

for.cond33.preheader:                             ; preds = %for.end28, %for.end54
  %indvars.iv147 = phi i64 [ 0, %for.end28 ], [ %indvars.iv.next148, %for.end54 ]
  br label %for.body35

for.body35:                                       ; preds = %for.cond33.preheader, %for.body35
  %indvars.iv144 = phi i64 [ 0, %for.cond33.preheader ], [ %indvars.iv.next145, %for.body35 ]
  %arrayidx40 = getelementptr inbounds %struct.site, %struct.site* %s.0135, i64 0, i32 8, i64 %indvars.iv150, i32 0, i64 %indvars.iv147, i64 %indvars.iv144
  %5 = bitcast %struct.complex* %arrayidx40 to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !4
  %ifval.sroa.0.0.extract.trunc = trunc i64 %6 to i32
  %call42 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.206, i64 0, i64 0), i32 %ifval.sroa.0.0.extract.trunc) #34
  %imag48 = getelementptr inbounds %struct.site, %struct.site* %s.0135, i64 0, i32 8, i64 %indvars.iv150, i32 0, i64 %indvars.iv147, i64 %indvars.iv144, i32 1
  %7 = bitcast double* %imag48 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !9
  %ifval.sroa.0.0.extract.trunc78 = trunc i64 %8 to i32
  %call51 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.206, i64 0, i64 0), i32 %ifval.sroa.0.0.extract.trunc78) #34
  %indvars.iv.next145 = add nuw nsw i64 %indvars.iv144, 1
  %exitcond146.not = icmp eq i64 %indvars.iv.next145, 3
  br i1 %exitcond146.not, label %for.end54, label %for.body35, !llvm.loop !380

for.end54:                                        ; preds = %for.body35
  %putchar = tail call i32 @putchar(i32 10)
  %indvars.iv.next148 = add nuw nsw i64 %indvars.iv147, 1
  %exitcond149.not = icmp eq i64 %indvars.iv.next148, 3
  br i1 %exitcond149.not, label %for.end58, label %for.cond33.preheader, !llvm.loop !381

for.end58:                                        ; preds = %for.end54
  %puts124 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([5 x i8], [5 x i8]* @str.9.207, i64 0, i64 0))
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call60 = tail call i32 @fflush(%struct._IO_FILE* %9) #34
  tail call void @terminate(i32 1) #32
  br label %if.end

if.end:                                           ; preds = %for.end58, %for.body3
  %cmp61 = fcmp olt double %max_deviation.1132, %call
  %max_deviation.2 = select i1 %cmp61, double %call, double %max_deviation.1132
  %10 = tail call double @llvm.fmuladd.f64(double %call, double %call, double %av_deviation.1133)
  %indvars.iv.next151 = add nuw nsw i64 %indvars.iv150, 1
  %exitcond152.not = icmp eq i64 %indvars.iv.next151, 4
  br i1 %exitcond152.not, label %for.inc67, label %for.body3, !llvm.loop !382

for.inc67:                                        ; preds = %if.end
  %inc68 = add nuw nsw i32 %i.0138, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0135, i64 1
  %11 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp = icmp slt i32 %inc68, %11
  br i1 %cmp, label %for.cond1.preheader, label %for.end69, !llvm.loop !383

for.end69:                                        ; preds = %for.inc67
  %phi.bo = shl i32 %inc68, 2
  %phi.cast = sitofp i32 %phi.bo to double
  %div = fdiv double %10, %phi.cast
  %call70 = tail call double @sqrt(double %div) #32
  %cmp71 = fcmp ogt double %max_deviation.2, 1.000000e-04
  br i1 %cmp71, label %if.then73, label %if.end76

if.then73:                                        ; preds = %for.end69
  %call74 = tail call i32 (...) bitcast (i32 ()* @mynode to i32 (...)*)() #32
  %call75 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7.208, i64 0, i64 0), i32 %call74, double %max_deviation.2) #34
  br label %if.end76

if.end76:                                         ; preds = %entry, %if.then73, %for.end69
  %max_deviation.0.lcssa159 = phi double [ %max_deviation.2, %if.then73 ], [ %max_deviation.2, %for.end69 ], [ 0.000000e+00, %entry ]
  ret double %max_deviation.0.lcssa159
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define double @check_su3(%struct.su3_matrix* readonly %c) local_unnamed_addr #13 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %max.0498 = phi double [ 0.000000e+00, %entry ], [ %max.1, %for.body ]
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv, i64 0, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv, i64 0, i32 1
  %1 = load double, double* %imag, align 8, !tbaa !9
  %mul16 = fmul double %1, %1
  %2 = tail call double @llvm.fmuladd.f64(double %0, double %0, double %mul16)
  %real21 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv, i64 1, i32 0
  %3 = load double, double* %real21, align 8, !tbaa !4
  %4 = tail call double @llvm.fmuladd.f64(double %3, double %3, double %2)
  %imag31 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv, i64 1, i32 1
  %5 = load double, double* %imag31, align 8, !tbaa !9
  %6 = tail call double @llvm.fmuladd.f64(double %5, double %5, double %4)
  %real41 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv, i64 2, i32 0
  %7 = load double, double* %real41, align 8, !tbaa !4
  %8 = tail call double @llvm.fmuladd.f64(double %7, double %7, double %6)
  %imag51 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv, i64 2, i32 1
  %9 = load double, double* %imag51, align 8, !tbaa !9
  %10 = tail call double @llvm.fmuladd.f64(double %9, double %9, double %8)
  %call = tail call double @sqrt(double %10) #32
  %sub = fadd double %call, -1.000000e+00
  %11 = tail call double @llvm.fabs.f64(double %sub)
  %cmp57 = fcmp olt double %max.0498, %11
  %max.1 = select i1 %cmp57, double %11, double %max.0498
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !384

for.end:                                          ; preds = %for.body
  %real61 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 0, i64 0, i32 0
  %12 = load double, double* %real61, align 8, !tbaa !4
  %real65 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 1, i64 0, i32 0
  %13 = load double, double* %real65, align 8, !tbaa !4
  %imag69 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 0, i64 0, i32 1
  %14 = load double, double* %imag69, align 8, !tbaa !9
  %imag73 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 1, i64 0, i32 1
  %15 = load double, double* %imag73, align 8, !tbaa !9
  %mul74 = fmul double %14, %15
  %16 = tail call double @llvm.fmuladd.f64(double %12, double %13, double %mul74)
  %real78 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 0, i64 1, i32 0
  %17 = load double, double* %real78, align 8, !tbaa !4
  %real82 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 1, i64 1, i32 0
  %18 = load double, double* %real82, align 8, !tbaa !4
  %19 = tail call double @llvm.fmuladd.f64(double %17, double %18, double %16)
  %imag86 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 0, i64 1, i32 1
  %20 = load double, double* %imag86, align 8, !tbaa !9
  %imag90 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 1, i64 1, i32 1
  %21 = load double, double* %imag90, align 8, !tbaa !9
  %22 = tail call double @llvm.fmuladd.f64(double %20, double %21, double %19)
  %real94 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 0, i64 2, i32 0
  %23 = load double, double* %real94, align 8, !tbaa !4
  %real98 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 1, i64 2, i32 0
  %24 = load double, double* %real98, align 8, !tbaa !4
  %25 = tail call double @llvm.fmuladd.f64(double %23, double %24, double %22)
  %imag102 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 0, i64 2, i32 1
  %26 = load double, double* %imag102, align 8, !tbaa !9
  %imag106 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 1, i64 2, i32 1
  %27 = load double, double* %imag106, align 8, !tbaa !9
  %28 = tail call double @llvm.fmuladd.f64(double %26, double %27, double %25)
  %29 = fneg double %14
  %neg = fmul double %13, %29
  %30 = tail call double @llvm.fmuladd.f64(double %12, double %15, double %neg)
  %31 = tail call double @llvm.fmuladd.f64(double %17, double %21, double %30)
  %neg140 = fneg double %20
  %32 = tail call double @llvm.fmuladd.f64(double %neg140, double %18, double %31)
  %33 = tail call double @llvm.fmuladd.f64(double %23, double %27, double %32)
  %neg157 = fneg double %26
  %34 = tail call double @llvm.fmuladd.f64(double %neg157, double %24, double %33)
  %mul158 = fmul double %34, %34
  %35 = tail call double @llvm.fmuladd.f64(double %28, double %28, double %mul158)
  %call159 = tail call double @sqrt(double %35) #32
  %cmp160 = fcmp olt double %max.1, %call159
  %max.2 = select i1 %cmp160, double %call159, double %max.1
  %36 = load double, double* %real61, align 8, !tbaa !4
  %real170 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 2, i64 0, i32 0
  %37 = load double, double* %real170, align 8, !tbaa !4
  %38 = load double, double* %imag69, align 8, !tbaa !9
  %imag178 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 2, i64 0, i32 1
  %39 = load double, double* %imag178, align 8, !tbaa !9
  %mul179 = fmul double %38, %39
  %40 = tail call double @llvm.fmuladd.f64(double %36, double %37, double %mul179)
  %41 = load double, double* %real78, align 8, !tbaa !4
  %real187 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 2, i64 1, i32 0
  %42 = load double, double* %real187, align 8, !tbaa !4
  %43 = tail call double @llvm.fmuladd.f64(double %41, double %42, double %40)
  %44 = load double, double* %imag86, align 8, !tbaa !9
  %imag195 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 2, i64 1, i32 1
  %45 = load double, double* %imag195, align 8, !tbaa !9
  %46 = tail call double @llvm.fmuladd.f64(double %44, double %45, double %43)
  %47 = load double, double* %real94, align 8, !tbaa !4
  %real203 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 2, i64 2, i32 0
  %48 = load double, double* %real203, align 8, !tbaa !4
  %49 = tail call double @llvm.fmuladd.f64(double %47, double %48, double %46)
  %50 = load double, double* %imag102, align 8, !tbaa !9
  %imag211 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 2, i64 2, i32 1
  %51 = load double, double* %imag211, align 8, !tbaa !9
  %52 = tail call double @llvm.fmuladd.f64(double %50, double %51, double %49)
  %53 = fneg double %38
  %neg229 = fmul double %37, %53
  %54 = tail call double @llvm.fmuladd.f64(double %36, double %39, double %neg229)
  %55 = tail call double @llvm.fmuladd.f64(double %41, double %45, double %54)
  %neg246 = fneg double %44
  %56 = tail call double @llvm.fmuladd.f64(double %neg246, double %42, double %55)
  %57 = tail call double @llvm.fmuladd.f64(double %47, double %51, double %56)
  %neg263 = fneg double %50
  %58 = tail call double @llvm.fmuladd.f64(double %neg263, double %48, double %57)
  %mul264 = fmul double %58, %58
  %59 = tail call double @llvm.fmuladd.f64(double %52, double %52, double %mul264)
  %call265 = tail call double @sqrt(double %59) #32
  %cmp266 = fcmp olt double %max.2, %call265
  %max.3 = select i1 %cmp266, double %call265, double %max.2
  %60 = load double, double* %real65, align 8, !tbaa !4
  %61 = load double, double* %real170, align 8, !tbaa !4
  %62 = load double, double* %imag73, align 8, !tbaa !9
  %63 = load double, double* %imag178, align 8, !tbaa !9
  %mul285 = fmul double %62, %63
  %64 = tail call double @llvm.fmuladd.f64(double %60, double %61, double %mul285)
  %65 = load double, double* %real82, align 8, !tbaa !4
  %66 = load double, double* %real187, align 8, !tbaa !4
  %67 = tail call double @llvm.fmuladd.f64(double %65, double %66, double %64)
  %68 = load double, double* %imag90, align 8, !tbaa !9
  %69 = load double, double* %imag195, align 8, !tbaa !9
  %70 = tail call double @llvm.fmuladd.f64(double %68, double %69, double %67)
  %71 = load double, double* %real98, align 8, !tbaa !4
  %72 = load double, double* %real203, align 8, !tbaa !4
  %73 = tail call double @llvm.fmuladd.f64(double %71, double %72, double %70)
  %74 = load double, double* %imag106, align 8, !tbaa !9
  %75 = load double, double* %imag211, align 8, !tbaa !9
  %76 = tail call double @llvm.fmuladd.f64(double %74, double %75, double %73)
  %77 = fneg double %62
  %neg335 = fmul double %61, %77
  %78 = tail call double @llvm.fmuladd.f64(double %60, double %63, double %neg335)
  %79 = tail call double @llvm.fmuladd.f64(double %65, double %69, double %78)
  %neg352 = fneg double %68
  %80 = tail call double @llvm.fmuladd.f64(double %neg352, double %66, double %79)
  %81 = tail call double @llvm.fmuladd.f64(double %71, double %75, double %80)
  %neg369 = fneg double %74
  %82 = tail call double @llvm.fmuladd.f64(double %neg369, double %72, double %81)
  %mul370 = fmul double %82, %82
  %83 = tail call double @llvm.fmuladd.f64(double %76, double %76, double %mul370)
  %call371 = tail call double @sqrt(double %83) #32
  %cmp372 = fcmp olt double %max.3, %call371
  %max.4 = select i1 %cmp372, double %call371, double %max.3
  ret double %max.4
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @mult_adj_su3_mat_vec(%struct.su3_matrix* nocapture readonly %a, %struct.su3_vector* nocapture readonly %b, %struct.su3_vector* nocapture %c) local_unnamed_addr #10 {
entry:
  %real8 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 0, i32 0
  %imag11 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 0, i32 1
  %real27 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 1, i32 0
  %imag30 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 1, i32 1
  %real51 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 2, i32 0
  %imag54 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 2, i32 1
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 %indvars.iv, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 0, i64 %indvars.iv, i32 1
  %1 = load double, double* %imag, align 8, !tbaa !9
  %2 = load double, double* %real8, align 8, !tbaa !4
  %3 = load double, double* %imag11, align 8, !tbaa !9
  %mul = fmul double %0, %2
  %mul12 = fmul double %1, %3
  %add = fadd double %mul, %mul12
  %mul13 = fmul double %0, %3
  %mul14 = fmul double %1, %2
  %sub = fsub double %mul13, %mul14
  %real19 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 %indvars.iv, i32 0
  %4 = load double, double* %real19, align 8, !tbaa !4
  %imag24 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 1, i64 %indvars.iv, i32 1
  %5 = load double, double* %imag24, align 8, !tbaa !9
  %6 = load double, double* %real27, align 8, !tbaa !4
  %7 = load double, double* %imag30, align 8, !tbaa !9
  %mul31 = fmul double %4, %6
  %add32 = fadd double %add, %mul31
  %mul33 = fmul double %5, %7
  %add34 = fadd double %add32, %mul33
  %mul35 = fmul double %4, %7
  %add36 = fadd double %sub, %mul35
  %mul37 = fmul double %5, %6
  %sub38 = fsub double %add36, %mul37
  %real43 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 %indvars.iv, i32 0
  %8 = load double, double* %real43, align 8, !tbaa !4
  %imag48 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %a, i64 0, i32 0, i64 2, i64 %indvars.iv, i32 1
  %9 = load double, double* %imag48, align 8, !tbaa !9
  %10 = load double, double* %real51, align 8, !tbaa !4
  %11 = load double, double* %imag54, align 8, !tbaa !9
  %mul55 = fmul double %8, %10
  %add56 = fadd double %add34, %mul55
  %mul57 = fmul double %9, %11
  %add58 = fadd double %add56, %mul57
  %mul59 = fmul double %8, %11
  %add60 = fadd double %sub38, %mul59
  %mul61 = fmul double %9, %10
  %sub62 = fsub double %add60, %mul61
  %real66 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 0
  store double %add58, double* %real66, align 8, !tbaa !4
  %imag70 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 1
  store double %sub62, double* %imag70, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !385

for.end:                                          ; preds = %for.body
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn
define void @uncompress_anti_hermitian(%struct.anti_hermitmat* nocapture readonly %mat_antihermit, %struct.su3_matrix* nocapture %mat_su3) local_unnamed_addr #23 {
entry:
  %m00im = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 3
  %0 = load double, double* %m00im, align 8, !tbaa !243
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 0, i64 0, i32 1
  store double %0, double* %imag, align 8, !tbaa !9
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 0, i64 0, i32 0
  store double 0.000000e+00, double* %real, align 8, !tbaa !4
  %m11im = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 4
  %1 = load double, double* %m11im, align 8, !tbaa !245
  %imag8 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 1, i64 1, i32 1
  store double %1, double* %imag8, align 8, !tbaa !9
  %real12 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 1, i64 1, i32 0
  store double 0.000000e+00, double* %real12, align 8, !tbaa !4
  %m22im = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 5
  %2 = load double, double* %m22im, align 8, !tbaa !246
  %imag16 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 2, i64 2, i32 1
  store double %2, double* %imag16, align 8, !tbaa !9
  %real20 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 2, i64 2, i32 0
  store double 0.000000e+00, double* %real20, align 8, !tbaa !4
  %imag21 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 0, i32 1
  %3 = load double, double* %imag21, align 8, !tbaa !250
  %imag25 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 0, i64 1, i32 1
  store double %3, double* %imag25, align 8, !tbaa !9
  %real27 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 0, i32 0
  %4 = load double, double* %real27, align 8, !tbaa !247
  %real31 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 0, i64 1, i32 0
  store double %4, double* %real31, align 8, !tbaa !4
  %fneg = fneg double %4
  %real35 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 1, i64 0, i32 0
  store double %fneg, double* %real35, align 8, !tbaa !4
  %5 = load double, double* %imag21, align 8, !tbaa !250
  %imag41 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 1, i64 0, i32 1
  store double %5, double* %imag41, align 8, !tbaa !9
  %imag42 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 1, i32 1
  %6 = load double, double* %imag42, align 8, !tbaa !251
  %imag46 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 0, i64 2, i32 1
  store double %6, double* %imag46, align 8, !tbaa !9
  %real48 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 1, i32 0
  %7 = load double, double* %real48, align 8, !tbaa !248
  %real52 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 0, i64 2, i32 0
  store double %7, double* %real52, align 8, !tbaa !4
  %fneg53 = fneg double %7
  %real57 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 2, i64 0, i32 0
  store double %fneg53, double* %real57, align 8, !tbaa !4
  %8 = load double, double* %imag42, align 8, !tbaa !251
  %imag63 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 2, i64 0, i32 1
  store double %8, double* %imag63, align 8, !tbaa !9
  %imag64 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 2, i32 1
  %9 = load double, double* %imag64, align 8, !tbaa !252
  %imag68 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 1, i64 2, i32 1
  store double %9, double* %imag68, align 8, !tbaa !9
  %real70 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 2, i32 0
  %10 = load double, double* %real70, align 8, !tbaa !249
  %real74 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 1, i64 2, i32 0
  store double %10, double* %real74, align 8, !tbaa !4
  %fneg75 = fneg double %10
  %real79 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 2, i64 1, i32 0
  store double %fneg75, double* %real79, align 8, !tbaa !4
  %11 = load double, double* %imag64, align 8, !tbaa !252
  %imag85 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat_su3, i64 0, i32 0, i64 2, i64 1, i32 1
  store double %11, double* %imag85, align 8, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize uwtable willreturn
define void @mult_su2_mat_vec_elem_a(%struct.su2_matrix* nocapture readonly %u, %struct.complex* nocapture %x0, %struct.complex* nocapture %x1) local_unnamed_addr #11 {
entry:
  %t0.sroa.0.0..sroa_idx = getelementptr inbounds %struct.complex, %struct.complex* %x0, i64 0, i32 0
  %t0.sroa.0.0.copyload = load double, double* %t0.sroa.0.0..sroa_idx, align 8, !tbaa.struct !10
  %t0.sroa.7.0..sroa_idx124 = getelementptr inbounds %struct.complex, %struct.complex* %x0, i64 0, i32 1
  %t0.sroa.7.0.copyload = load double, double* %t0.sroa.7.0..sroa_idx124, align 8, !tbaa.struct !12
  %t1.sroa.0.0..sroa_idx = getelementptr inbounds %struct.complex, %struct.complex* %x1, i64 0, i32 0
  %t1.sroa.0.0.copyload = load double, double* %t1.sroa.0.0..sroa_idx, align 8, !tbaa.struct !10
  %t1.sroa.7.0..sroa_idx115 = getelementptr inbounds %struct.complex, %struct.complex* %x1, i64 0, i32 1
  %t1.sroa.7.0.copyload = load double, double* %t1.sroa.7.0..sroa_idx115, align 8, !tbaa.struct !12
  %real2 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 0, i32 0
  %0 = load double, double* %real2, align 8, !tbaa !4
  %imag6 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 0, i32 1
  %1 = load double, double* %imag6, align 8, !tbaa !9
  %mul7 = fmul double %t0.sroa.7.0.copyload, %1
  %2 = tail call double @llvm.fmuladd.f64(double %t0.sroa.0.0.copyload, double %0, double %mul7)
  %3 = fneg double %t0.sroa.0.0.copyload
  %neg = fmul double %1, %3
  %4 = tail call double @llvm.fmuladd.f64(double %t0.sroa.7.0.copyload, double %0, double %neg)
  %real25 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 1, i32 0
  %5 = load double, double* %real25, align 8, !tbaa !4
  %imag30 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 0, i64 1, i32 1
  %6 = load double, double* %imag30, align 8, !tbaa !9
  %mul31 = fmul double %t1.sroa.7.0.copyload, %6
  %7 = tail call double @llvm.fmuladd.f64(double %t1.sroa.0.0.copyload, double %5, double %mul31)
  %8 = fneg double %t1.sroa.0.0.copyload
  %neg44 = fmul double %6, %8
  %9 = tail call double @llvm.fmuladd.f64(double %t1.sroa.7.0.copyload, double %5, double %neg44)
  %add = fadd double %2, %7
  store double %add, double* %t0.sroa.0.0..sroa_idx, align 8, !tbaa !4
  %add51 = fadd double %4, %9
  store double %add51, double* %t0.sroa.7.0..sroa_idx124, align 8, !tbaa !9
  %real57 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 0, i32 0
  %10 = load double, double* %real57, align 8, !tbaa !4
  %imag62 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 0, i32 1
  %11 = load double, double* %imag62, align 8, !tbaa !9
  %mul63 = fmul double %t0.sroa.7.0.copyload, %11
  %12 = tail call double @llvm.fmuladd.f64(double %t0.sroa.0.0.copyload, double %10, double %mul63)
  %neg76 = fmul double %11, %3
  %13 = tail call double @llvm.fmuladd.f64(double %t0.sroa.7.0.copyload, double %10, double %neg76)
  %real82 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 1, i32 0
  %14 = load double, double* %real82, align 8, !tbaa !4
  %imag87 = getelementptr inbounds %struct.su2_matrix, %struct.su2_matrix* %u, i64 0, i32 0, i64 1, i64 1, i32 1
  %15 = load double, double* %imag87, align 8, !tbaa !9
  %mul88 = fmul double %t1.sroa.7.0.copyload, %15
  %16 = tail call double @llvm.fmuladd.f64(double %t1.sroa.0.0.copyload, double %14, double %mul88)
  %neg101 = fmul double %15, %8
  %17 = tail call double @llvm.fmuladd.f64(double %t1.sroa.7.0.copyload, double %14, double %neg101)
  %add105 = fadd double %12, %16
  store double %add105, double* %t1.sroa.0.0..sroa_idx, align 8, !tbaa !4
  %add109 = fadd double %13, %17
  store double %add109, double* %t1.sroa.7.0..sroa_idx115, align 8, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define { double, double } @cmplx(double %x, double %y) local_unnamed_addr #17 {
entry:
  %.fca.0.insert = insertvalue { double, double } undef, double %x, 0
  %.fca.1.insert = insertvalue { double, double } %.fca.0.insert, double %y, 1
  ret { double, double } %.fca.1.insert
}

; Function Attrs: noinline nounwind optsize uwtable
define void @random_anti_hermitian(%struct.anti_hermitmat* nocapture %mat_antihermit, %struct.double_prn* %prn_pt) local_unnamed_addr #1 {
entry:
  %call1 = tail call double @gaussian_rand_no(%struct.double_prn* %prn_pt) #32
  %call2 = tail call double @gaussian_rand_no(%struct.double_prn* %prn_pt) #32
  %0 = tail call double @llvm.fmuladd.f64(double %call2, double 0x3FE279A74590331C, double %call1)
  %m00im = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 3
  store double %0, double* %m00im, align 8, !tbaa !243
  %fneg = fneg double %call1
  %1 = tail call double @llvm.fmuladd.f64(double %call2, double 0x3FE279A74590331C, double %fneg)
  %m11im = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 4
  store double %1, double* %m11im, align 8, !tbaa !245
  %mul3 = fmul double %call2, 0xBFF279A74590331C
  %m22im = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 5
  store double %mul3, double* %m22im, align 8, !tbaa !246
  %call4 = tail call double @gaussian_rand_no(%struct.double_prn* %prn_pt) #32
  %real = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 0, i32 0
  store double %call4, double* %real, align 8, !tbaa !247
  %call5 = tail call double @gaussian_rand_no(%struct.double_prn* %prn_pt) #32
  %real6 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 1, i32 0
  store double %call5, double* %real6, align 8, !tbaa !248
  %call7 = tail call double @gaussian_rand_no(%struct.double_prn* %prn_pt) #32
  %real8 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 2, i32 0
  store double %call7, double* %real8, align 8, !tbaa !249
  %call9 = tail call double @gaussian_rand_no(%struct.double_prn* %prn_pt) #32
  %imag = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 0, i32 1
  store double %call9, double* %imag, align 8, !tbaa !250
  %call11 = tail call double @gaussian_rand_no(%struct.double_prn* %prn_pt) #32
  %imag13 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 1, i32 1
  store double %call11, double* %imag13, align 8, !tbaa !251
  %call14 = tail call double @gaussian_rand_no(%struct.double_prn* %prn_pt) #32
  %imag16 = getelementptr inbounds %struct.anti_hermitmat, %struct.anti_hermitmat* %mat_antihermit, i64 0, i32 2, i32 1
  store double %call14, double* %imag16, align 8, !tbaa !252
  ret void
}

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @scalar_mult_add_su3_vector(%struct.su3_vector* nocapture readonly %a, %struct.su3_vector* nocapture readonly %b, double %s, %struct.su3_vector* nocapture %c) local_unnamed_addr #4 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %real = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %real5 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 %indvars.iv, i32 0
  %1 = load double, double* %real5, align 8, !tbaa !4
  %2 = tail call double @llvm.fmuladd.f64(double %s, double %1, double %0)
  %real9 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 0
  store double %2, double* %real9, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv, i32 1
  %3 = load double, double* %imag, align 8, !tbaa !9
  %imag16 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 %indvars.iv, i32 1
  %4 = load double, double* %imag16, align 8, !tbaa !9
  %5 = tail call double @llvm.fmuladd.f64(double %s, double %4, double %3)
  %imag20 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %c, i64 0, i32 0, i64 %indvars.iv, i32 1
  store double %5, double* %imag20, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !386

for.end:                                          ; preds = %for.body
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn
define void @sub_four_su3_vecs(%struct.su3_vector* nocapture %a, %struct.su3_vector* nocapture readonly %b1, %struct.su3_vector* nocapture readonly %b2, %struct.su3_vector* nocapture readonly %b3, %struct.su3_vector* nocapture readonly %b4) local_unnamed_addr #23 {
entry:
  %real = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 0, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %real3 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b1, i64 0, i32 0, i64 0, i32 0
  %1 = load double, double* %real3, align 8, !tbaa !4
  %sub = fsub double %0, %1
  store double %sub, double* %real, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 0, i32 1
  %2 = load double, double* %imag, align 8, !tbaa !9
  %imag11 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b1, i64 0, i32 0, i64 0, i32 1
  %3 = load double, double* %imag11, align 8, !tbaa !9
  %sub12 = fsub double %2, %3
  store double %sub12, double* %imag, align 8, !tbaa !9
  %real18 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 1, i32 0
  %4 = load double, double* %real18, align 8, !tbaa !4
  %real21 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b1, i64 0, i32 0, i64 1, i32 0
  %5 = load double, double* %real21, align 8, !tbaa !4
  %sub22 = fsub double %4, %5
  store double %sub22, double* %real18, align 8, !tbaa !4
  %imag28 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 1, i32 1
  %6 = load double, double* %imag28, align 8, !tbaa !9
  %imag31 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b1, i64 0, i32 0, i64 1, i32 1
  %7 = load double, double* %imag31, align 8, !tbaa !9
  %sub32 = fsub double %6, %7
  store double %sub32, double* %imag28, align 8, !tbaa !9
  %real38 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 2, i32 0
  %8 = load double, double* %real38, align 8, !tbaa !4
  %real41 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b1, i64 0, i32 0, i64 2, i32 0
  %9 = load double, double* %real41, align 8, !tbaa !4
  %sub42 = fsub double %8, %9
  store double %sub42, double* %real38, align 8, !tbaa !4
  %imag48 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 2, i32 1
  %10 = load double, double* %imag48, align 8, !tbaa !9
  %imag51 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b1, i64 0, i32 0, i64 2, i32 1
  %11 = load double, double* %imag51, align 8, !tbaa !9
  %sub52 = fsub double %10, %11
  store double %sub52, double* %imag48, align 8, !tbaa !9
  %real61 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b2, i64 0, i32 0, i64 0, i32 0
  %12 = load double, double* %real61, align 8, !tbaa !4
  %sub62 = fsub double %sub, %12
  store double %sub62, double* %real, align 8, !tbaa !4
  %imag71 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b2, i64 0, i32 0, i64 0, i32 1
  %13 = load double, double* %imag71, align 8, !tbaa !9
  %sub72 = fsub double %sub12, %13
  store double %sub72, double* %imag, align 8, !tbaa !9
  %real81 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b2, i64 0, i32 0, i64 1, i32 0
  %14 = load double, double* %real81, align 8, !tbaa !4
  %sub82 = fsub double %sub22, %14
  store double %sub82, double* %real18, align 8, !tbaa !4
  %imag91 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b2, i64 0, i32 0, i64 1, i32 1
  %15 = load double, double* %imag91, align 8, !tbaa !9
  %sub92 = fsub double %sub32, %15
  store double %sub92, double* %imag28, align 8, !tbaa !9
  %real101 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b2, i64 0, i32 0, i64 2, i32 0
  %16 = load double, double* %real101, align 8, !tbaa !4
  %sub102 = fsub double %sub42, %16
  store double %sub102, double* %real38, align 8, !tbaa !4
  %imag111 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b2, i64 0, i32 0, i64 2, i32 1
  %17 = load double, double* %imag111, align 8, !tbaa !9
  %sub112 = fsub double %sub52, %17
  store double %sub112, double* %imag48, align 8, !tbaa !9
  %real121 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b3, i64 0, i32 0, i64 0, i32 0
  %18 = load double, double* %real121, align 8, !tbaa !4
  %sub122 = fsub double %sub62, %18
  store double %sub122, double* %real, align 8, !tbaa !4
  %imag131 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b3, i64 0, i32 0, i64 0, i32 1
  %19 = load double, double* %imag131, align 8, !tbaa !9
  %sub132 = fsub double %sub72, %19
  store double %sub132, double* %imag, align 8, !tbaa !9
  %real141 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b3, i64 0, i32 0, i64 1, i32 0
  %20 = load double, double* %real141, align 8, !tbaa !4
  %sub142 = fsub double %sub82, %20
  store double %sub142, double* %real18, align 8, !tbaa !4
  %imag151 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b3, i64 0, i32 0, i64 1, i32 1
  %21 = load double, double* %imag151, align 8, !tbaa !9
  %sub152 = fsub double %sub92, %21
  store double %sub152, double* %imag28, align 8, !tbaa !9
  %real161 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b3, i64 0, i32 0, i64 2, i32 0
  %22 = load double, double* %real161, align 8, !tbaa !4
  %sub162 = fsub double %sub102, %22
  store double %sub162, double* %real38, align 8, !tbaa !4
  %imag171 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b3, i64 0, i32 0, i64 2, i32 1
  %23 = load double, double* %imag171, align 8, !tbaa !9
  %sub172 = fsub double %sub112, %23
  store double %sub172, double* %imag48, align 8, !tbaa !9
  %real181 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b4, i64 0, i32 0, i64 0, i32 0
  %24 = load double, double* %real181, align 8, !tbaa !4
  %sub182 = fsub double %sub122, %24
  store double %sub182, double* %real, align 8, !tbaa !4
  %imag191 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b4, i64 0, i32 0, i64 0, i32 1
  %25 = load double, double* %imag191, align 8, !tbaa !9
  %sub192 = fsub double %sub132, %25
  store double %sub192, double* %imag, align 8, !tbaa !9
  %real201 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b4, i64 0, i32 0, i64 1, i32 0
  %26 = load double, double* %real201, align 8, !tbaa !4
  %sub202 = fsub double %sub142, %26
  store double %sub202, double* %real18, align 8, !tbaa !4
  %imag211 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b4, i64 0, i32 0, i64 1, i32 1
  %27 = load double, double* %imag211, align 8, !tbaa !9
  %sub212 = fsub double %sub152, %27
  store double %sub212, double* %imag28, align 8, !tbaa !9
  %real221 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b4, i64 0, i32 0, i64 2, i32 0
  %28 = load double, double* %real221, align 8, !tbaa !4
  %sub222 = fsub double %sub162, %28
  store double %sub222, double* %real38, align 8, !tbaa !4
  %imag231 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b4, i64 0, i32 0, i64 2, i32 1
  %29 = load double, double* %imag231, align 8, !tbaa !9
  %sub232 = fsub double %sub172, %29
  store double %sub232, double* %imag48, align 8, !tbaa !9
  ret void
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize uwtable willreturn
define void @mult_adj_su3_mat_hwvec(%struct.su3_matrix* nocapture readonly %mat, %struct.half_wilson_vector* nocapture readonly %src, %struct.half_wilson_vector* nocapture %dest) local_unnamed_addr #11 {
entry:
  %real = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 0, i64 0, i32 0
  %0 = load double, double* %real, align 8, !tbaa !4
  %imag = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 0, i64 0, i32 1
  %1 = load double, double* %imag, align 8, !tbaa !9
  %real7 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 0, i32 0, i64 0, i32 0
  %2 = load double, double* %real7, align 8, !tbaa !4
  %imag12 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 0, i32 0, i64 0, i32 1
  %3 = load double, double* %imag12, align 8, !tbaa !9
  %real16 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 1, i64 0, i32 0
  %4 = load double, double* %real16, align 8, !tbaa !4
  %imag20 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 1, i64 0, i32 1
  %5 = load double, double* %imag20, align 8, !tbaa !9
  %real25 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 0, i32 0, i64 1, i32 0
  %6 = load double, double* %real25, align 8, !tbaa !4
  %imag30 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 0, i32 0, i64 1, i32 1
  %7 = load double, double* %imag30, align 8, !tbaa !9
  %real34 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 2, i64 0, i32 0
  %8 = load double, double* %real34, align 8, !tbaa !4
  %imag38 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 2, i64 0, i32 1
  %9 = load double, double* %imag38, align 8, !tbaa !9
  %real43 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 0, i32 0, i64 2, i32 0
  %10 = load double, double* %real43, align 8, !tbaa !4
  %imag48 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 0, i32 0, i64 2, i32 1
  %11 = load double, double* %imag48, align 8, !tbaa !9
  %mul49 = fmul double %1, %3
  %12 = tail call double @llvm.fmuladd.f64(double %0, double %2, double %mul49)
  %13 = tail call double @llvm.fmuladd.f64(double %4, double %6, double %12)
  %14 = tail call double @llvm.fmuladd.f64(double %5, double %7, double %13)
  %15 = tail call double @llvm.fmuladd.f64(double %8, double %10, double %14)
  %16 = tail call double @llvm.fmuladd.f64(double %9, double %11, double %15)
  %real54 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 0, i32 0, i64 0, i32 0
  store double %16, double* %real54, align 8, !tbaa !4
  %17 = fneg double %1
  %neg = fmul double %2, %17
  %18 = tail call double @llvm.fmuladd.f64(double %0, double %3, double %neg)
  %19 = tail call double @llvm.fmuladd.f64(double %4, double %7, double %18)
  %neg56 = fneg double %5
  %20 = tail call double @llvm.fmuladd.f64(double %neg56, double %6, double %19)
  %21 = tail call double @llvm.fmuladd.f64(double %8, double %11, double %20)
  %neg57 = fneg double %9
  %22 = tail call double @llvm.fmuladd.f64(double %neg57, double %10, double %21)
  %imag62 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 0, i32 0, i64 0, i32 1
  store double %22, double* %imag62, align 8, !tbaa !9
  %real66 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 0, i64 1, i32 0
  %23 = load double, double* %real66, align 8, !tbaa !4
  %imag70 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 0, i64 1, i32 1
  %24 = load double, double* %imag70, align 8, !tbaa !9
  %25 = load double, double* %real7, align 8, !tbaa !4
  %26 = load double, double* %imag12, align 8, !tbaa !9
  %real84 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 1, i64 1, i32 0
  %27 = load double, double* %real84, align 8, !tbaa !4
  %imag88 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 1, i64 1, i32 1
  %28 = load double, double* %imag88, align 8, !tbaa !9
  %29 = load double, double* %real25, align 8, !tbaa !4
  %30 = load double, double* %imag30, align 8, !tbaa !9
  %real102 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 2, i64 1, i32 0
  %31 = load double, double* %real102, align 8, !tbaa !4
  %imag106 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 2, i64 1, i32 1
  %32 = load double, double* %imag106, align 8, !tbaa !9
  %33 = load double, double* %real43, align 8, !tbaa !4
  %34 = load double, double* %imag48, align 8, !tbaa !9
  %mul117 = fmul double %24, %26
  %35 = tail call double @llvm.fmuladd.f64(double %23, double %25, double %mul117)
  %36 = tail call double @llvm.fmuladd.f64(double %27, double %29, double %35)
  %37 = tail call double @llvm.fmuladd.f64(double %28, double %30, double %36)
  %38 = tail call double @llvm.fmuladd.f64(double %31, double %33, double %37)
  %39 = tail call double @llvm.fmuladd.f64(double %32, double %34, double %38)
  %real122 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 0, i32 0, i64 1, i32 0
  store double %39, double* %real122, align 8, !tbaa !4
  %40 = fneg double %24
  %neg124 = fmul double %25, %40
  %41 = tail call double @llvm.fmuladd.f64(double %23, double %26, double %neg124)
  %42 = tail call double @llvm.fmuladd.f64(double %27, double %30, double %41)
  %neg125 = fneg double %28
  %43 = tail call double @llvm.fmuladd.f64(double %neg125, double %29, double %42)
  %44 = tail call double @llvm.fmuladd.f64(double %31, double %34, double %43)
  %neg126 = fneg double %32
  %45 = tail call double @llvm.fmuladd.f64(double %neg126, double %33, double %44)
  %imag131 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 0, i32 0, i64 1, i32 1
  store double %45, double* %imag131, align 8, !tbaa !9
  %real135 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 0, i64 2, i32 0
  %46 = load double, double* %real135, align 8, !tbaa !4
  %imag139 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 0, i64 2, i32 1
  %47 = load double, double* %imag139, align 8, !tbaa !9
  %48 = load double, double* %real7, align 8, !tbaa !4
  %49 = load double, double* %imag12, align 8, !tbaa !9
  %real153 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 1, i64 2, i32 0
  %50 = load double, double* %real153, align 8, !tbaa !4
  %imag157 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 1, i64 2, i32 1
  %51 = load double, double* %imag157, align 8, !tbaa !9
  %52 = load double, double* %real25, align 8, !tbaa !4
  %53 = load double, double* %imag30, align 8, !tbaa !9
  %real171 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 2, i64 2, i32 0
  %54 = load double, double* %real171, align 8, !tbaa !4
  %imag175 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %mat, i64 0, i32 0, i64 2, i64 2, i32 1
  %55 = load double, double* %imag175, align 8, !tbaa !9
  %56 = load double, double* %real43, align 8, !tbaa !4
  %57 = load double, double* %imag48, align 8, !tbaa !9
  %mul186 = fmul double %47, %49
  %58 = tail call double @llvm.fmuladd.f64(double %46, double %48, double %mul186)
  %59 = tail call double @llvm.fmuladd.f64(double %50, double %52, double %58)
  %60 = tail call double @llvm.fmuladd.f64(double %51, double %53, double %59)
  %61 = tail call double @llvm.fmuladd.f64(double %54, double %56, double %60)
  %62 = tail call double @llvm.fmuladd.f64(double %55, double %57, double %61)
  %real191 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 0, i32 0, i64 2, i32 0
  store double %62, double* %real191, align 8, !tbaa !4
  %63 = fneg double %47
  %neg193 = fmul double %48, %63
  %64 = tail call double @llvm.fmuladd.f64(double %46, double %49, double %neg193)
  %65 = tail call double @llvm.fmuladd.f64(double %50, double %53, double %64)
  %neg194 = fneg double %51
  %66 = tail call double @llvm.fmuladd.f64(double %neg194, double %52, double %65)
  %67 = tail call double @llvm.fmuladd.f64(double %54, double %57, double %66)
  %neg195 = fneg double %55
  %68 = tail call double @llvm.fmuladd.f64(double %neg195, double %56, double %67)
  %imag200 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 0, i32 0, i64 2, i32 1
  store double %68, double* %imag200, align 8, !tbaa !9
  %69 = load double, double* %real, align 8, !tbaa !4
  %70 = load double, double* %imag, align 8, !tbaa !9
  %real213 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 1, i32 0, i64 0, i32 0
  %71 = load double, double* %real213, align 8, !tbaa !4
  %imag218 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 1, i32 0, i64 0, i32 1
  %72 = load double, double* %imag218, align 8, !tbaa !9
  %73 = load double, double* %real16, align 8, !tbaa !4
  %74 = load double, double* %imag20, align 8, !tbaa !9
  %real231 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 1, i32 0, i64 1, i32 0
  %75 = load double, double* %real231, align 8, !tbaa !4
  %imag236 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 1, i32 0, i64 1, i32 1
  %76 = load double, double* %imag236, align 8, !tbaa !9
  %77 = load double, double* %real34, align 8, !tbaa !4
  %78 = load double, double* %imag38, align 8, !tbaa !9
  %real249 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 1, i32 0, i64 2, i32 0
  %79 = load double, double* %real249, align 8, !tbaa !4
  %imag254 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %src, i64 0, i32 0, i64 1, i32 0, i64 2, i32 1
  %80 = load double, double* %imag254, align 8, !tbaa !9
  %mul255 = fmul double %70, %72
  %81 = tail call double @llvm.fmuladd.f64(double %69, double %71, double %mul255)
  %82 = tail call double @llvm.fmuladd.f64(double %73, double %75, double %81)
  %83 = tail call double @llvm.fmuladd.f64(double %74, double %76, double %82)
  %84 = tail call double @llvm.fmuladd.f64(double %77, double %79, double %83)
  %85 = tail call double @llvm.fmuladd.f64(double %78, double %80, double %84)
  %real260 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 1, i32 0, i64 0, i32 0
  store double %85, double* %real260, align 8, !tbaa !4
  %86 = fneg double %70
  %neg262 = fmul double %71, %86
  %87 = tail call double @llvm.fmuladd.f64(double %69, double %72, double %neg262)
  %88 = tail call double @llvm.fmuladd.f64(double %73, double %76, double %87)
  %neg263 = fneg double %74
  %89 = tail call double @llvm.fmuladd.f64(double %neg263, double %75, double %88)
  %90 = tail call double @llvm.fmuladd.f64(double %77, double %80, double %89)
  %neg264 = fneg double %78
  %91 = tail call double @llvm.fmuladd.f64(double %neg264, double %79, double %90)
  %imag269 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 1, i32 0, i64 0, i32 1
  store double %91, double* %imag269, align 8, !tbaa !9
  %92 = load double, double* %real66, align 8, !tbaa !4
  %93 = load double, double* %imag70, align 8, !tbaa !9
  %94 = load double, double* %real213, align 8, !tbaa !4
  %95 = load double, double* %imag218, align 8, !tbaa !9
  %96 = load double, double* %real84, align 8, !tbaa !4
  %97 = load double, double* %imag88, align 8, !tbaa !9
  %98 = load double, double* %real231, align 8, !tbaa !4
  %99 = load double, double* %imag236, align 8, !tbaa !9
  %100 = load double, double* %real102, align 8, !tbaa !4
  %101 = load double, double* %imag106, align 8, !tbaa !9
  %102 = load double, double* %real249, align 8, !tbaa !4
  %103 = load double, double* %imag254, align 8, !tbaa !9
  %mul324 = fmul double %93, %95
  %104 = tail call double @llvm.fmuladd.f64(double %92, double %94, double %mul324)
  %105 = tail call double @llvm.fmuladd.f64(double %96, double %98, double %104)
  %106 = tail call double @llvm.fmuladd.f64(double %97, double %99, double %105)
  %107 = tail call double @llvm.fmuladd.f64(double %100, double %102, double %106)
  %108 = tail call double @llvm.fmuladd.f64(double %101, double %103, double %107)
  %real329 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 1, i32 0, i64 1, i32 0
  store double %108, double* %real329, align 8, !tbaa !4
  %109 = fneg double %93
  %neg331 = fmul double %94, %109
  %110 = tail call double @llvm.fmuladd.f64(double %92, double %95, double %neg331)
  %111 = tail call double @llvm.fmuladd.f64(double %96, double %99, double %110)
  %neg332 = fneg double %97
  %112 = tail call double @llvm.fmuladd.f64(double %neg332, double %98, double %111)
  %113 = tail call double @llvm.fmuladd.f64(double %100, double %103, double %112)
  %neg333 = fneg double %101
  %114 = tail call double @llvm.fmuladd.f64(double %neg333, double %102, double %113)
  %imag338 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 1, i32 0, i64 1, i32 1
  store double %114, double* %imag338, align 8, !tbaa !9
  %115 = load double, double* %real135, align 8, !tbaa !4
  %116 = load double, double* %imag139, align 8, !tbaa !9
  %117 = load double, double* %real213, align 8, !tbaa !4
  %118 = load double, double* %imag218, align 8, !tbaa !9
  %119 = load double, double* %real153, align 8, !tbaa !4
  %120 = load double, double* %imag157, align 8, !tbaa !9
  %121 = load double, double* %real231, align 8, !tbaa !4
  %122 = load double, double* %imag236, align 8, !tbaa !9
  %123 = load double, double* %real171, align 8, !tbaa !4
  %124 = load double, double* %imag175, align 8, !tbaa !9
  %125 = load double, double* %real249, align 8, !tbaa !4
  %126 = load double, double* %imag254, align 8, !tbaa !9
  %mul393 = fmul double %116, %118
  %127 = tail call double @llvm.fmuladd.f64(double %115, double %117, double %mul393)
  %128 = tail call double @llvm.fmuladd.f64(double %119, double %121, double %127)
  %129 = tail call double @llvm.fmuladd.f64(double %120, double %122, double %128)
  %130 = tail call double @llvm.fmuladd.f64(double %123, double %125, double %129)
  %131 = tail call double @llvm.fmuladd.f64(double %124, double %126, double %130)
  %real398 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 1, i32 0, i64 2, i32 0
  store double %131, double* %real398, align 8, !tbaa !4
  %132 = fneg double %116
  %neg400 = fmul double %117, %132
  %133 = tail call double @llvm.fmuladd.f64(double %115, double %118, double %neg400)
  %134 = tail call double @llvm.fmuladd.f64(double %119, double %122, double %133)
  %neg401 = fneg double %120
  %135 = tail call double @llvm.fmuladd.f64(double %neg401, double %121, double %134)
  %136 = tail call double @llvm.fmuladd.f64(double %123, double %126, double %135)
  %neg402 = fneg double %124
  %137 = tail call double @llvm.fmuladd.f64(double %neg402, double %125, double %136)
  %imag407 = getelementptr inbounds %struct.half_wilson_vector, %struct.half_wilson_vector* %dest, i64 0, i32 0, i64 1, i32 0, i64 2, i32 1
  store double %137, double* %imag407, align 8, !tbaa !9
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct._IO_FILE* @g_open(i8* %filename, i8* %mode) local_unnamed_addr #1 {
entry:
  %0 = load i8, i8* %mode, align 1, !tbaa !26
  switch i8 %0, label %if.else17 [
    i8 97, label %if.then
    i8 119, label %if.end21
    i8 114, label %if.then12
  ]

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @this_node, align 4, !tbaa !13
  %call = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([48 x i8], [48 x i8]* @.str.225, i64 0, i64 0), i32 %1) #34
  br label %cleanup

if.then12:                                        ; preds = %entry
  %call13 = tail call i8* @strchr(i8* noundef nonnull %mode, i32 43) #36
  %cmp14.not = icmp eq i8* %call13, null
  %spec.store.select = select i1 %cmp14.not, i32 0, i32 2
  br label %if.end21

if.else17:                                        ; preds = %entry
  %2 = load i32, i32* @this_node, align 4, !tbaa !13
  %call18 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1.226, i64 0, i64 0), i32 %2, i8* nonnull %mode) #34
  br label %cleanup

if.end21:                                         ; preds = %entry, %if.then12
  %oflg.0 = phi i32 [ %spec.store.select, %if.then12 ], [ 65, %entry ]
  %call22 = tail call i32 (i8*, i32, ...) @open(i8* %filename, i32 %oflg.0, i32 420) #32
  %cmp23 = icmp eq i32 %call22, -1
  br i1 %cmp23, label %if.then25, label %if.end28

if.then25:                                        ; preds = %if.end21
  %3 = load i32, i32* @this_node, align 4, !tbaa !13
  %call26 = tail call i32* @__errno_location() #37
  %4 = load i32, i32* %call26, align 4, !tbaa !13
  %call27 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.227, i64 0, i64 0), i32 %3, i32 %4, i8* %filename) #34
  br label %cleanup

if.end28:                                         ; preds = %if.end21
  %call29 = tail call noalias align 16 dereferenceable_or_null(4) i8* @calloc(i64 1, i64 4) #32
  %5 = bitcast i8* %call29 to i32*
  %cmp30 = icmp eq i8* %call29, null
  br i1 %cmp30, label %if.then32, label %if.end35

if.then32:                                        ; preds = %if.end28
  %6 = load i32, i32* @this_node, align 4, !tbaa !13
  %call33 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3.228, i64 0, i64 0), i32 %6) #34
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call34 = tail call i32 @fflush(%struct._IO_FILE* %7) #34
  tail call void @terminate(i32 1) #32
  br label %if.end35

if.end35:                                         ; preds = %if.then32, %if.end28
  store i32 %call22, i32* %5, align 16, !tbaa !13
  %8 = bitcast i8* %call29 to %struct._IO_FILE*
  br label %cleanup

cleanup:                                          ; preds = %if.end35, %if.then25, %if.else17, %if.then
  %retval.0 = phi %struct._IO_FILE* [ null, %if.then ], [ null, %if.then25 ], [ %8, %if.end35 ], [ null, %if.else17 ]
  ret %struct._IO_FILE* %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind optsize readonly willreturn
declare i8* @strchr(i8*, i32) local_unnamed_addr #22

; Function Attrs: nofree optsize
declare noundef i32 @open(i8* nocapture noundef readonly, i32 noundef, ...) local_unnamed_addr #28

; Function Attrs: mustprogress nofree nosync nounwind optsize readnone willreturn
declare i32* @__errno_location() local_unnamed_addr #29

; Function Attrs: noinline nounwind optsize uwtable
define i32 @g_seek(%struct._IO_FILE* nocapture readonly %stream, i64 %offset, i32 %whence) local_unnamed_addr #1 {
entry:
  %0 = getelementptr %struct._IO_FILE, %struct._IO_FILE* %stream, i64 0, i32 0
  %1 = load i32, i32* %0, align 4, !tbaa !13
  %call = tail call i64 @lseek(i32 %1, i64 %offset, i32 %whence) #32
  %conv = trunc i64 %call to i32
  ret i32 %conv
}

; Function Attrs: nounwind optsize
declare i64 @lseek(i32, i64, i32) local_unnamed_addr #19

; Function Attrs: nofree noinline nounwind optsize uwtable
define i64 @g_write(i8* nocapture readonly %ptr, i64 %size, i64 %nmemb, %struct._IO_FILE* nocapture readonly %stream) local_unnamed_addr #13 {
entry:
  %0 = getelementptr %struct._IO_FILE, %struct._IO_FILE* %stream, i64 0, i32 0
  %1 = load i32, i32* %0, align 4, !tbaa !13
  %mul = shl i64 %size, 32
  %sext = mul i64 %mul, %nmemb
  %conv1 = ashr exact i64 %sext, 32
  %call = tail call i64 @write(i32 %1, i8* %ptr, i64 %conv1) #32
  %div = udiv i64 %call, %size
  ret i64 %div
}

; Function Attrs: nofree optsize
declare noundef i64 @write(i32 noundef, i8* nocapture noundef readonly, i64 noundef) local_unnamed_addr #28

; Function Attrs: nofree noinline nounwind optsize uwtable
define i64 @g_read(i8* nocapture %ptr, i64 %size, i64 %nmemb, %struct._IO_FILE* nocapture readonly %stream) local_unnamed_addr #13 {
entry:
  %0 = getelementptr %struct._IO_FILE, %struct._IO_FILE* %stream, i64 0, i32 0
  %1 = load i32, i32* %0, align 4, !tbaa !13
  %mul = shl i64 %size, 32
  %sext = mul i64 %mul, %nmemb
  %conv1 = ashr exact i64 %sext, 32
  %call = tail call i64 @read(i32 %1, i8* %ptr, i64 %conv1) #32
  %div = udiv i64 %call, %size
  ret i64 %div
}

; Function Attrs: nofree optsize
declare noundef i64 @read(i32 noundef, i8* nocapture noundef, i64 noundef) local_unnamed_addr #28

; Function Attrs: noinline nounwind optsize uwtable
define i32 @g_close(%struct._IO_FILE* nocapture %stream) local_unnamed_addr #1 {
entry:
  %0 = getelementptr %struct._IO_FILE, %struct._IO_FILE* %stream, i64 0, i32 0
  %1 = load i32, i32* %0, align 4, !tbaa !13
  %call = tail call i32 @close(i32 %1) #32
  %2 = bitcast %struct._IO_FILE* %stream to i8*
  tail call void @free(i8* %2) #32
  ret i32 %call
}

; Function Attrs: optsize
declare i32 @close(i32) local_unnamed_addr #30

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn writeonly
define void @clearvec(%struct.su3_vector* nocapture %v) local_unnamed_addr #20 {
entry:
  %0 = bitcast %struct.su3_vector* %v to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(48) %0, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @qcdhdr_get_str(i8* nocapture readonly %s, %struct.QCDheader* nocapture readonly %hdr, i8** nocapture %q) local_unnamed_addr #13 {
entry:
  %ntoken = getelementptr inbounds %struct.QCDheader, %struct.QCDheader* %hdr, i64 0, i32 0
  %0 = load i32, i32* %ntoken, align 8, !tbaa !387
  %1 = trunc i32 %0 to i8
  %cmp14 = icmp sgt i8 %1, 0
  br i1 %cmp14, label %for.body.lr.ph, label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %token = getelementptr inbounds %struct.QCDheader, %struct.QCDheader* %hdr, i64 0, i32 1
  %2 = load i8**, i8*** %token, align 8, !tbaa !389
  %sext = shl i32 %0, 24
  %3 = ashr exact i32 %sext, 24
  %smax = call i32 @llvm.smax.i32(i32 %3, i32 1)
  %wide.trip.count = zext i32 %smax to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %indvars.iv
  %4 = load i8*, i8** %arrayidx, align 8, !tbaa !15
  %call = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %s, i8* noundef nonnull dereferenceable(1) %4) #36
  %cmp3 = icmp eq i32 %call, 0
  br i1 %cmp3, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %idxprom.le = and i64 %indvars.iv, 4294967295
  %value = getelementptr inbounds %struct.QCDheader, %struct.QCDheader* %hdr, i64 0, i32 2
  %5 = load i8**, i8*** %value, align 8, !tbaa !390
  %arrayidx6 = getelementptr inbounds i8*, i8** %5, i64 %idxprom.le
  %6 = load i8*, i8** %arrayidx6, align 8, !tbaa !15
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !391

cleanup:                                          ; preds = %for.inc, %entry, %if.then
  %storemerge = phi i8* [ %6, %if.then ], [ null, %entry ], [ null, %for.inc ]
  %retval.0 = phi i32 [ 0, %if.then ], [ -1, %entry ], [ -1, %for.inc ]
  store i8* %storemerge, i8** %q, align 8, !tbaa !15
  ret i32 %retval.0
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @qcdhdr_get_int(i8* nocapture readonly %s, %struct.QCDheader* nocapture readonly %hdr, i32* %q) local_unnamed_addr #13 {
entry:
  %p = alloca i8*, align 8
  %0 = bitcast i8** %p to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %call = call i32 @qcdhdr_get_str(i8* %s, %struct.QCDheader* %hdr, i8** nonnull %p) #34
  %1 = load i8*, i8** %p, align 8, !tbaa !15
  %cmp = icmp eq i8* %1, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call1 = tail call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i64 0, i64 0), i32* %q) #32
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ -1, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret i32 %retval.0
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @qcdhdr_get_int32x(i8* nocapture readonly %s, %struct.QCDheader* nocapture readonly %hdr, i32* nocapture %q) local_unnamed_addr #13 {
entry:
  %p = alloca i8*, align 8
  %r = alloca i32, align 4
  %0 = bitcast i8** %p to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %1 = bitcast i32* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #31
  %call = call i32 @qcdhdr_get_str(i8* %s, %struct.QCDheader* %hdr, i8** nonnull %p) #34
  %2 = load i8*, i8** %p, align 8, !tbaa !15
  %cmp = icmp eq i8* %2, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call1 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.232, i64 0, i64 0), i32* nonnull %r) #32
  %3 = load i32, i32* %r, align 4, !tbaa !13
  store i32 %3, i32* %q, align 4, !tbaa !13
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ -1, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret i32 %retval.0
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @qcdhdr_get_double(i8* nocapture readonly %s, %struct.QCDheader* nocapture readonly %hdr, double* %q) local_unnamed_addr #13 {
entry:
  %p = alloca i8*, align 8
  %0 = bitcast i8** %p to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %call = call i32 @qcdhdr_get_str(i8* %s, %struct.QCDheader* %hdr, i8** nonnull %p) #34
  %1 = load i8*, i8** %p, align 8, !tbaa !15
  %cmp = icmp eq i8* %1, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call1 = tail call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.233, i64 0, i64 0), double* %q) #32
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ -1, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define void @error_exit(i8* nocapture readonly %s) local_unnamed_addr #1 {
entry:
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) %s)
  tail call void @terminate(i32 1) #32
  ret void
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize uwtable willreturn
define void @complete_U(double* %u) local_unnamed_addr #11 {
entry:
  %arrayidx = getelementptr inbounds double, double* %u, i64 2
  %0 = load double, double* %arrayidx, align 8, !tbaa !11
  %arrayidx1 = getelementptr inbounds double, double* %u, i64 10
  %1 = load double, double* %arrayidx1, align 8, !tbaa !11
  %arrayidx2 = getelementptr inbounds double, double* %u, i64 4
  %2 = load double, double* %arrayidx2, align 8, !tbaa !11
  %arrayidx3 = getelementptr inbounds double, double* %u, i64 8
  %3 = load double, double* %arrayidx3, align 8, !tbaa !11
  %4 = fneg double %2
  %neg = fmul double %3, %4
  %5 = tail call double @llvm.fmuladd.f64(double %0, double %1, double %neg)
  %arrayidx5 = getelementptr inbounds double, double* %u, i64 3
  %6 = load double, double* %arrayidx5, align 8, !tbaa !11
  %arrayidx6 = getelementptr inbounds double, double* %u, i64 11
  %7 = load double, double* %arrayidx6, align 8, !tbaa !11
  %neg7 = fneg double %6
  %8 = tail call double @llvm.fmuladd.f64(double %neg7, double %7, double %5)
  %arrayidx8 = getelementptr inbounds double, double* %u, i64 5
  %9 = load double, double* %arrayidx8, align 8, !tbaa !11
  %arrayidx9 = getelementptr inbounds double, double* %u, i64 9
  %10 = load double, double* %arrayidx9, align 8, !tbaa !11
  %11 = tail call double @llvm.fmuladd.f64(double %9, double %10, double %8)
  %arrayidx10 = getelementptr inbounds double, double* %u, i64 12
  store double %11, double* %arrayidx10, align 8, !tbaa !11
  %12 = fneg double %0
  %neg16 = fmul double %7, %12
  %13 = tail call double @llvm.fmuladd.f64(double %2, double %10, double %neg16)
  %14 = tail call double @llvm.fmuladd.f64(double %9, double %3, double %13)
  %15 = tail call double @llvm.fmuladd.f64(double %neg7, double %1, double %14)
  %arrayidx22 = getelementptr inbounds double, double* %u, i64 13
  store double %15, double* %arrayidx22, align 8, !tbaa !11
  %arrayidx24 = getelementptr inbounds double, double* %u, i64 6
  %16 = load double, double* %arrayidx24, align 8, !tbaa !11
  %17 = load double, double* %u, align 8, !tbaa !11
  %18 = fneg double %17
  %neg28 = fmul double %1, %18
  %19 = tail call double @llvm.fmuladd.f64(double %2, double %16, double %neg28)
  %arrayidx30 = getelementptr inbounds double, double* %u, i64 7
  %20 = load double, double* %arrayidx30, align 8, !tbaa !11
  %neg31 = fneg double %9
  %21 = tail call double @llvm.fmuladd.f64(double %neg31, double %20, double %19)
  %arrayidx32 = getelementptr inbounds double, double* %u, i64 1
  %22 = load double, double* %arrayidx32, align 8, !tbaa !11
  %23 = tail call double @llvm.fmuladd.f64(double %22, double %7, double %21)
  %arrayidx34 = getelementptr inbounds double, double* %u, i64 14
  store double %23, double* %arrayidx34, align 8, !tbaa !11
  %neg40 = fmul double %20, %4
  %24 = tail call double @llvm.fmuladd.f64(double %17, double %7, double %neg40)
  %25 = tail call double @llvm.fmuladd.f64(double %22, double %1, double %24)
  %26 = tail call double @llvm.fmuladd.f64(double %neg31, double %16, double %25)
  %arrayidx46 = getelementptr inbounds double, double* %u, i64 15
  store double %26, double* %arrayidx46, align 8, !tbaa !11
  %neg52 = fmul double %16, %12
  %27 = tail call double @llvm.fmuladd.f64(double %17, double %3, double %neg52)
  %neg55 = fneg double %22
  %28 = tail call double @llvm.fmuladd.f64(double %neg55, double %10, double %27)
  %29 = tail call double @llvm.fmuladd.f64(double %6, double %20, double %28)
  %arrayidx58 = getelementptr inbounds double, double* %u, i64 16
  store double %29, double* %arrayidx58, align 8, !tbaa !11
  %neg64 = fmul double %10, %18
  %30 = tail call double @llvm.fmuladd.f64(double %0, double %20, double %neg64)
  %31 = tail call double @llvm.fmuladd.f64(double %6, double %16, double %30)
  %32 = tail call double @llvm.fmuladd.f64(double %neg55, double %3, double %31)
  %arrayidx70 = getelementptr inbounds double, double* %u, i64 17
  store double %32, double* %arrayidx70, align 8, !tbaa !11
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define i32 @big_endian() local_unnamed_addr #17 {
entry:
  ret i32 0
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define noalias %struct.QCDheader* @qcdhdr_get_hdr(%struct._IO_FILE* nocapture %in) local_unnamed_addr #13 {
entry:
  %line = alloca [1024 x i8], align 16
  %0 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %0) #31
  %call = call i8* @fgets(i8* nonnull %0, i32 1024, %struct._IO_FILE* %in) #34
  %call1 = call noalias align 16 dereferenceable_or_null(4096) i8* @calloc(i64 512, i64 8) #32
  %call2 = call noalias align 16 dereferenceable_or_null(4096) i8* @calloc(i64 512, i64 8) #32
  %call3 = call noalias align 16 dereferenceable_or_null(24) i8* @calloc(i64 1, i64 24) #32
  %1 = bitcast i8* %call3 to %struct.QCDheader*
  %token = getelementptr inbounds %struct.QCDheader, %struct.QCDheader* %1, i64 0, i32 1
  %2 = bitcast i8*** %token to i8**
  store i8* %call1, i8** %2, align 8, !tbaa !389
  %value = getelementptr inbounds %struct.QCDheader, %struct.QCDheader* %1, i64 0, i32 2
  %3 = bitcast i8*** %value to i8**
  store i8* %call2, i8** %3, align 16, !tbaa !390
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @str.234, i64 0, i64 0))
  %4 = ptrtoint [1024 x i8]* %line to i64
  %5 = trunc i64 %4 to i32
  %sub = sub i32 1, %5
  %call660 = call i8* @fgets(i8* nonnull %0, i32 1024, %struct._IO_FILE* %in) #34
  %call861 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.235, i64 0, i64 0), i8* nonnull %0) #34
  %bcmp62 = call i32 @bcmp(i8* noundef nonnull dereferenceable(12) %0, i8* noundef nonnull dereferenceable(12) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.236, i64 0, i64 0), i64 12)
  %cmp63 = icmp eq i32 %bcmp62, 0
  %6 = bitcast i8* %call1 to i8**
  %7 = bitcast i8* %call2 to i8**
  br i1 %cmp63, label %while.end, label %if.end

if.end:                                           ; preds = %entry, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end ], [ 0, %entry ]
  %call12 = call i8* @strchr(i8* noundef nonnull %0, i32 32) #36
  store i8 0, i8* %call12, align 1, !tbaa !26
  %8 = ptrtoint i8* %call12 to i64
  %9 = trunc i64 %8 to i32
  %add = add i32 %sub, %9
  %div = sdiv i32 %add, 8
  %add14 = add nsw i32 %div, 1
  %conv = sext i32 %add14 to i64
  %call15 = call noalias align 16 i8* @calloc(i64 %conv, i64 8) #32
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %indvars.iv
  store i8* %call15, i8** %arrayidx, align 8, !tbaa !15
  %call18 = call i8* @strcpy(i8* noundef nonnull dereferenceable(1) %call15, i8* noundef nonnull %0) #32
  %incdec.ptr = getelementptr inbounds i8, i8* %call12, i64 1
  %call19 = call i8* @strchr(i8* noundef nonnull %incdec.ptr, i32 61) #36
  %incdec.ptr20 = getelementptr inbounds i8, i8* %call19, i64 1
  %call21 = call i64 @strlen(i8* noundef nonnull %incdec.ptr20) #36
  %sub23 = shl i64 %call21, 32
  %sext = add i64 %sub23, -4294967296
  %idxprom24 = ashr exact i64 %sext, 32
  %arrayidx25 = getelementptr inbounds i8, i8* %incdec.ptr20, i64 %idxprom24
  store i8 0, i8* %arrayidx25, align 1, !tbaa !26
  %conv26 = ashr exact i64 %sub23, 32
  %call27 = call noalias align 16 i8* @calloc(i64 %conv26, i64 1) #32
  %arrayidx30 = getelementptr inbounds i8*, i8** %7, i64 %indvars.iv
  store i8* %call27, i8** %arrayidx30, align 8, !tbaa !15
  %call31 = call i8* @strcpy(i8* noundef nonnull dereferenceable(1) %call27, i8* noundef nonnull %incdec.ptr20) #32
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %call6 = call i8* @fgets(i8* nonnull %0, i32 1024, %struct._IO_FILE* %in) #34
  %call8 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.235, i64 0, i64 0), i8* nonnull %0) #34
  %bcmp = call i32 @bcmp(i8* noundef nonnull dereferenceable(12) %0, i8* noundef nonnull dereferenceable(12) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.236, i64 0, i64 0), i64 12)
  %cmp = icmp eq i32 %bcmp, 0
  br i1 %cmp, label %while.end.loopexit, label %if.end, !llvm.loop !392

while.end.loopexit:                               ; preds = %if.end
  %10 = trunc i64 %indvars.iv.next to i32
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %entry
  %n.0.lcssa = phi i32 [ 0, %entry ], [ %10, %while.end.loopexit ]
  %ntoken = getelementptr inbounds %struct.QCDheader, %struct.QCDheader* %1, i64 0, i32 0
  store i32 %n.0.lcssa, i32* %ntoken, align 16, !tbaa !387
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %0) #31
  ret %struct.QCDheader* %1
}

; Function Attrs: nofree nounwind optsize
declare noundef i8* @fgets(i8* noundef, i32 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #8

; Function Attrs: argmemonly mustprogress nofree nounwind optsize readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #22

; Function Attrs: noinline nounwind optsize uwtable
define void @qcdhdr_destroy_hdr(%struct.QCDheader* %hdr) local_unnamed_addr #1 {
entry:
  %cmp = icmp eq %struct.QCDheader* %hdr, null
  br i1 %cmp, label %cleanup, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %ntoken = getelementptr inbounds %struct.QCDheader, %struct.QCDheader* %hdr, i64 0, i32 0
  %value = getelementptr inbounds %struct.QCDheader, %struct.QCDheader* %hdr, i64 0, i32 2
  %token = getelementptr inbounds %struct.QCDheader, %struct.QCDheader* %hdr, i64 0, i32 1
  %0 = load i32, i32* %ntoken, align 8, !tbaa !387
  %cmp116 = icmp sgt i32 %0, 0
  br i1 %cmp116, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %1 = load i8**, i8*** %value, align 8, !tbaa !390
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %indvars.iv
  %2 = load i8*, i8** %arrayidx, align 8, !tbaa !15
  tail call void @free(i8* %2) #32
  %3 = load i8**, i8*** %token, align 8, !tbaa !389
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %indvars.iv
  %4 = load i8*, i8** %arrayidx3, align 8, !tbaa !15
  tail call void @free(i8* %4) #32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32, i32* %ntoken, align 8, !tbaa !387
  %6 = sext i32 %5 to i64
  %cmp1 = icmp slt i64 %indvars.iv.next, %6
  br i1 %cmp1, label %for.body, label %for.end, !llvm.loop !393

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %7 = bitcast i8*** %token to i8**
  %8 = load i8*, i8** %7, align 8, !tbaa !389
  tail call void @free(i8* %8) #32
  %9 = bitcast i8*** %value to i8**
  %10 = load i8*, i8** %9, align 8, !tbaa !390
  tail call void @free(i8* %10) #32
  %11 = bitcast %struct.QCDheader* %hdr to i8*
  tail call void @free(i8* %11) #32
  br label %cleanup

cleanup:                                          ; preds = %entry, %for.end
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @swrite_data(%struct._IO_FILE* nocapture %fp, i8* nocapture %src, i64 %size, i8* %myname, i8* %descrip) local_unnamed_addr #1 {
entry:
  %call = tail call i64 @fwrite(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #34
  %cmp.not = icmp eq i64 %call, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = load i32, i32* @this_node, align 4, !tbaa !13
  %call1 = tail call i32* @__errno_location() #37
  %1 = load i32, i32* %call1, align 4, !tbaa !13
  %call2 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7.237, i64 0, i64 0), i8* %myname, i32 %0, i8* %descrip, i32 %1) #34
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call3 = tail call i32 @fflush(%struct._IO_FILE* %2) #34
  tail call void @terminate(i32 1) #32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noundef i64 @fwrite(i8* nocapture noundef, i64 noundef, i64 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #8

; Function Attrs: noinline nounwind optsize uwtable
define void @pwrite_data(%struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) local_unnamed_addr #1 {
entry:
  %call = tail call i64 @g_write(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #32
  %cmp.not = icmp eq i64 %call, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = load i32, i32* @this_node, align 4, !tbaa !13
  %call1 = tail call i32* @__errno_location() #37
  %1 = load i32, i32* %call1, align 4, !tbaa !13
  %call2 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8.238, i64 0, i64 0), i8* %myname, i32 %0, i8* %descrip, i32 %1) #34
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call3 = tail call i32 @fflush(%struct._IO_FILE* %2) #34
  tail call void @terminate(i32 1) #32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @pswrite_data(i32 %parallel, %struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) local_unnamed_addr #1 {
entry:
  %tobool.not = icmp eq i32 %parallel, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  tail call void @pwrite_data(%struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #34
  br label %if.end

if.else:                                          ; preds = %entry
  tail call void @swrite_data(%struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #34
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @sread_data(%struct._IO_FILE* nocapture %fp, i8* nocapture %src, i64 %size, i8* %myname, i8* %descrip) local_unnamed_addr #13 {
entry:
  %call = tail call i64 @fread(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #34
  %cmp.not = icmp eq i64 %call, 1
  br i1 %cmp.not, label %return, label %if.then

if.then:                                          ; preds = %entry
  %0 = load i32, i32* @this_node, align 4, !tbaa !13
  %call1 = tail call i32* @__errno_location() #37
  %1 = load i32, i32* %call1, align 4, !tbaa !13
  %call2 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9.239, i64 0, i64 0), i8* %myname, i32 %0, i8* %descrip, i32 %1) #34
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call3 = tail call i32 @fflush(%struct._IO_FILE* %2) #34
  br label %return

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind optsize
declare noundef i64 @fread(i8* nocapture noundef, i64 noundef, i64 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #8

; Function Attrs: noinline nounwind optsize uwtable
define i32 @pread_data(%struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) local_unnamed_addr #1 {
entry:
  %call = tail call i64 @g_read(i8* %src, i64 %size, i64 1, %struct._IO_FILE* %fp) #32
  %cmp.not = icmp eq i64 %call, 1
  br i1 %cmp.not, label %return, label %if.then

if.then:                                          ; preds = %entry
  %0 = load i32, i32* @this_node, align 4, !tbaa !13
  %call1 = tail call i32* @__errno_location() #37
  %1 = load i32, i32* %call1, align 4, !tbaa !13
  %call2 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9.239, i64 0, i64 0), i8* %myname, i32 %0, i8* %descrip, i32 %1) #34
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call3 = tail call i32 @fflush(%struct._IO_FILE* %2) #34
  br label %return

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @pread_byteorder(i32 %byterevflag, %struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) local_unnamed_addr #1 {
entry:
  %call = tail call i32 @pread_data(%struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #34
  %cmp = icmp eq i32 %byterevflag, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = bitcast i8* %src to i32*
  %div = lshr i64 %size, 2
  %conv = trunc i64 %div to i32
  tail call void @byterevn(i32* %0, i32 %conv) #32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 %call
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @sread_byteorder(i32 %byterevflag, %struct._IO_FILE* nocapture %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) local_unnamed_addr #1 {
entry:
  %call = tail call i32 @sread_data(%struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #34
  %cmp = icmp eq i32 %byterevflag, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = bitcast i8* %src to i32*
  %div = lshr i64 %size, 2
  %conv = trunc i64 %div to i32
  tail call void @byterevn(i32* %0, i32 %conv) #32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 %call
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @psread_data(i32 %parallel, %struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) local_unnamed_addr #1 {
entry:
  %tobool.not = icmp eq i32 %parallel, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 @pread_data(%struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #34
  br label %return

if.else:                                          ; preds = %entry
  %call1 = tail call i32 @sread_data(%struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #34
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %call1, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @psread_byteorder(i32 %byterevflag, i32 %parallel, %struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) local_unnamed_addr #1 {
entry:
  %tobool.not = icmp eq i32 %parallel, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 @pread_byteorder(i32 %byterevflag, %struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #34
  br label %return

if.else:                                          ; preds = %entry
  %call1 = tail call i32 @sread_byteorder(i32 %byterevflag, %struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #34
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %call1, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define void @pwrite_gauge_hdr(%struct._IO_FILE* %fp, %struct.gauge_header* %gh) local_unnamed_addr #1 {
entry:
  %myname = alloca [17 x i8], align 16
  %0 = getelementptr inbounds [17 x i8], [17 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %0) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(17) %0, i8* noundef nonnull align 16 dereferenceable(17) getelementptr inbounds ([17 x i8], [17 x i8]* @__const.pwrite_gauge_hdr.myname, i64 0, i64 0), i64 17, i1 false)
  %1 = bitcast %struct.gauge_header* %gh to i8*
  call void @pwrite_data(%struct._IO_FILE* %fp, i8* %1, i64 4, i8* nonnull %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10.240, i64 0, i64 0)) #34
  %arraydecay1 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %gh, i64 0, i32 2, i64 0
  %2 = bitcast i32* %arraydecay1 to i8*
  call void @pwrite_data(%struct._IO_FILE* %fp, i8* nonnull %2, i64 16, i8* nonnull %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.241, i64 0, i64 0)) #34
  %arraydecay3 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %gh, i64 0, i32 1, i64 0
  call void @pwrite_data(%struct._IO_FILE* %fp, i8* nonnull %arraydecay3, i64 64, i8* nonnull %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12.242, i64 0, i64 0)) #34
  %order = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %gh, i64 0, i32 4
  %3 = bitcast i32* %order to i8*
  call void @pwrite_data(%struct._IO_FILE* %fp, i8* nonnull %3, i64 4, i8* nonnull %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.243, i64 0, i64 0)) #34
  %header_bytes = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %gh, i64 0, i32 3
  store i32 88, i32* %header_bytes, align 4, !tbaa !394
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @swrite_gauge_hdr(%struct._IO_FILE* nocapture %fp, %struct.gauge_header* nocapture %gh) local_unnamed_addr #1 {
entry:
  %myname = alloca [17 x i8], align 16
  %0 = getelementptr inbounds [17 x i8], [17 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %0) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(17) %0, i8* noundef nonnull align 16 dereferenceable(17) getelementptr inbounds ([17 x i8], [17 x i8]* @__const.swrite_gauge_hdr.myname, i64 0, i64 0), i64 17, i1 false)
  %1 = bitcast %struct.gauge_header* %gh to i8*
  call void @swrite_data(%struct._IO_FILE* %fp, i8* %1, i64 4, i8* nonnull %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10.240, i64 0, i64 0)) #34
  %arraydecay1 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %gh, i64 0, i32 2, i64 0
  %2 = bitcast i32* %arraydecay1 to i8*
  call void @swrite_data(%struct._IO_FILE* %fp, i8* nonnull %2, i64 16, i8* nonnull %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.241, i64 0, i64 0)) #34
  %arraydecay3 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %gh, i64 0, i32 1, i64 0
  call void @swrite_data(%struct._IO_FILE* %fp, i8* nonnull %arraydecay3, i64 64, i8* nonnull %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12.242, i64 0, i64 0)) #34
  %order = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %gh, i64 0, i32 4
  %3 = bitcast i32* %order to i8*
  call void @swrite_data(%struct._IO_FILE* %fp, i8* nonnull %3, i64 4, i8* nonnull %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.243, i64 0, i64 0)) #34
  %header_bytes = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %gh, i64 0, i32 3
  store i32 88, i32* %header_bytes, align 4, !tbaa !394
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %0) #31
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @write_gauge_info_item(%struct._IO_FILE* nocapture %fpout, i8* %keyword, i8* %fmt, i8* %src, i32 %count, i32 %stride) local_unnamed_addr #13 {
entry:
  %0 = load i8*, i8** getelementptr inbounds ([36 x i8*], [36 x i8*]* @gauge_info_keyword, i64 0, i64 0), align 8, !tbaa !15
  %strlenfirst105 = load i8, i8* %0, align 1
  %cmp.not106 = icmp eq i8 %strlenfirst105, 0
  br i1 %cmp.not106, label %if.then, label %land.rhs

for.cond:                                         ; preds = %land.rhs
  %arrayidx = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([36 x i8*]* @gauge_info_keyword to [0 x i8*]*), i64 0, i64 %indvars.iv.next
  %1 = load i8*, i8** %arrayidx, align 8, !tbaa !15
  %strlenfirst = load i8, i8* %1, align 1
  %cmp.not = icmp eq i8 %strlenfirst, 0
  br i1 %cmp.not, label %if.then, label %land.rhs, !llvm.loop !396

land.rhs:                                         ; preds = %entry, %for.cond
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond ], [ 0, %entry ]
  %2 = phi i8* [ %1, %for.cond ], [ %0, %entry ]
  %call3 = tail call i32 @strcmp(i8* noundef nonnull %2, i8* noundef nonnull dereferenceable(1) %keyword) #36
  %cmp4.not = icmp eq i32 %call3, 0
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  br i1 %cmp4.not, label %if.end, label %for.cond

if.then:                                          ; preds = %for.cond, %entry
  %call9 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([57 x i8], [57 x i8]* @.str.14.246, i64 0, i64 0), i8* %keyword) #34
  br label %if.end

if.end:                                           ; preds = %land.rhs, %if.then
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fpout, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.247, i64 0, i64 0), i8* %keyword) #34
  %cmp11 = icmp sgt i32 %count, 1
  br i1 %cmp11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fpout, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.248, i64 0, i64 0), i32 %count) #34
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end
  %cmp15 = icmp eq i32 %count, 0
  %spec.store.select = select i1 %cmp15, i32 1, i32 %count
  %idx.ext = sext i32 %stride to i64
  %cmp19101 = icmp sgt i32 %spec.store.select, 0
  br i1 %cmp19101, label %for.body20, label %for.end54

for.body20:                                       ; preds = %if.end14, %for.inc52
  %data.0103 = phi i8* [ %add.ptr, %for.inc52 ], [ %src, %if.end14 ]
  %k.0102 = phi i32 [ %inc53, %for.inc52 ], [ 0, %if.end14 ]
  %fputc96 = tail call i32 @fputc(i32 32, %struct._IO_FILE* %fpout)
  %strchr = tail call i8* @strchr(i8* noundef nonnull dereferenceable(1) %fmt, i32 115)
  %cmp23.not = icmp eq i8* %strchr, null
  br i1 %cmp23.not, label %if.else, label %if.then24

if.then24:                                        ; preds = %for.body20
  %call25 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fpout, i8* %fmt, i8* %data.0103) #34
  br label %for.inc52

if.else:                                          ; preds = %for.body20
  %strchr97 = tail call i8* @strchr(i8* noundef nonnull dereferenceable(1) %fmt, i32 100)
  %cmp27.not = icmp eq i8* %strchr97, null
  br i1 %cmp27.not, label %if.else30, label %if.then28

if.then28:                                        ; preds = %if.else
  %3 = bitcast i8* %data.0103 to i32*
  %4 = load i32, i32* %3, align 4, !tbaa !13
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fpout, i8* %fmt, i32 %4) #34
  br label %for.inc52

if.else30:                                        ; preds = %if.else
  %strchr98 = tail call i8* @strchr(i8* noundef nonnull dereferenceable(1) %fmt, i32 101)
  %cmp32.not = icmp eq i8* %strchr98, null
  br i1 %cmp32.not, label %if.else35, label %if.then33

if.then33:                                        ; preds = %if.else30
  %5 = bitcast i8* %data.0103 to double*
  %6 = load double, double* %5, align 8, !tbaa !11
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fpout, i8* %fmt, double %6) #34
  br label %for.inc52

if.else35:                                        ; preds = %if.else30
  %strchr99 = tail call i8* @strchr(i8* noundef nonnull dereferenceable(1) %fmt, i32 102)
  %cmp37.not = icmp eq i8* %strchr99, null
  br i1 %cmp37.not, label %if.else40, label %if.then38

if.then38:                                        ; preds = %if.else35
  %7 = bitcast i8* %data.0103 to double*
  %8 = load double, double* %7, align 8, !tbaa !11
  %call39 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fpout, i8* %fmt, double %8) #34
  br label %for.inc52

if.else40:                                        ; preds = %if.else35
  %strchr100 = tail call i8* @strchr(i8* noundef nonnull dereferenceable(1) %fmt, i32 103)
  %cmp42.not = icmp eq i8* %strchr100, null
  br i1 %cmp42.not, label %if.else45, label %if.then43

if.then43:                                        ; preds = %if.else40
  %9 = bitcast i8* %data.0103 to double*
  %10 = load double, double* %9, align 8, !tbaa !11
  %call44 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fpout, i8* %fmt, double %10) #34
  br label %for.inc52

if.else45:                                        ; preds = %if.else40
  %call46 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.249, i64 0, i64 0), i8* %fmt) #34
  br label %cleanup

for.inc52:                                        ; preds = %if.then24, %if.then33, %if.then43, %if.then38, %if.then28
  %inc53 = add nuw nsw i32 %k.0102, 1
  %add.ptr = getelementptr inbounds i8, i8* %data.0103, i64 %idx.ext
  %exitcond.not = icmp eq i32 %inc53, %spec.store.select
  br i1 %exitcond.not, label %for.end54, label %for.body20, !llvm.loop !397

for.end54:                                        ; preds = %for.inc52, %if.end14
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fpout)
  br label %cleanup

cleanup:                                          ; preds = %for.end54, %if.else45
  %retval.0 = phi i32 [ 1, %if.else45 ], [ 0, %for.end54 ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind
declare noundef i32 @fputc(i32 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize uwtable
define void @write_gauge_info_file(%struct.gauge_file* nocapture readonly %gf) local_unnamed_addr #1 {
entry:
  %info_filename = alloca [256 x i8], align 16
  %sums = alloca [20 x i8], align 16
  %0 = getelementptr inbounds [256 x i8], [256 x i8]* %info_filename, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %0) #31
  %1 = getelementptr inbounds [20 x i8], [20 x i8]* %sums, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %1) #31
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 1
  %2 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %filename = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 2
  %3 = load i8*, i8** %filename, align 8, !tbaa !401
  %call = call i8* @strcpy(i8* noundef nonnull %0, i8* noundef nonnull dereferenceable(1) %3) #32
  %strlen = call i64 @strlen(i8* noundef nonnull %0)
  %endptr = getelementptr [256 x i8], [256 x i8]* %info_filename, i64 0, i64 %strlen
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(6) %endptr, i8* noundef nonnull align 1 dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25.250, i64 0, i64 0), i64 6, i1 false)
  %call4 = call %struct._IO_FILE* @fopen(i8* nonnull %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26.251, i64 0, i64 0)) #34
  %cmp = icmp eq %struct._IO_FILE* %call4, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %4 = bitcast %struct.gauge_header* %2 to i8*
  %call7 = call i32 @write_gauge_info_item(%struct._IO_FILE* nonnull %call4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10.240, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i64 0, i64 0), i8* %4, i32 0, i32 0) #34
  %arraydecay8 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %2, i64 0, i32 1, i64 0
  %call9 = call i32 @write_gauge_info_item(%struct._IO_FILE* nonnull %call4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12.242, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.252, i64 0, i64 0), i8* nonnull %arraydecay8, i32 0, i32 0) #34
  %sum29 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 6, i32 1
  %5 = load i32, i32* %sum29, align 4, !tbaa !402
  %sum31 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  %6 = load i32, i32* %sum31, align 4, !tbaa !403
  %call12 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %1, i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29.253, i64 0, i64 0), i32 %5, i32 %6) #32
  %call14 = call i32 @write_gauge_info_item(%struct._IO_FILE* nonnull %call4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.252, i64 0, i64 0), i8* nonnull %1, i32 0, i32 0) #34
  %call15 = call i32 @write_gauge_info_item(%struct._IO_FILE* nonnull %call4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i64 0, i64 0), i8* bitcast (i32* @nx to i8*), i32 0, i32 0) #34
  %call16 = call i32 @write_gauge_info_item(%struct._IO_FILE* nonnull %call4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i64 0, i64 0), i8* bitcast (i32* @ny to i8*), i32 0, i32 0) #34
  %call17 = call i32 @write_gauge_info_item(%struct._IO_FILE* nonnull %call4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33.254, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i64 0, i64 0), i8* bitcast (i32* @nz to i8*), i32 0, i32 0) #34
  %call18 = call i32 @write_gauge_info_item(%struct._IO_FILE* nonnull %call4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34.255, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i64 0, i64 0), i8* bitcast (i32* @nt to i8*), i32 0, i32 0) #34
  call void @write_appl_gauge_info(%struct._IO_FILE* nonnull %call4) #32
  %call19 = call i32 @fclose(%struct._IO_FILE* nonnull %call4) #34
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.end
  %.sink = phi i8* [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35.256, i64 0, i64 0), %if.end ], [ getelementptr inbounds ([54 x i8], [54 x i8]* @.str.27.257, i64 0, i64 0), %entry ]
  %call21 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) %.sink, i8* nonnull %0) #34
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %0) #31
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noalias noundef %struct._IO_FILE* @fopen(i8* nocapture noundef readonly, i8* nocapture noundef readonly) local_unnamed_addr #8

; Function Attrs: nofree nounwind optsize
declare noundef i32 @sprintf(i8* noalias nocapture noundef writeonly, i8* nocapture noundef readonly, ...) local_unnamed_addr #8

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fclose(%struct._IO_FILE* nocapture noundef) local_unnamed_addr #8

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct.gauge_file* @setup_input_gauge_file(i8* %filename) local_unnamed_addr #1 {
entry:
  %myname = alloca [23 x i8], align 16
  %0 = getelementptr inbounds [23 x i8], [23 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 23, i8* nonnull %0) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(23) %0, i8* noundef nonnull align 16 dereferenceable(23) getelementptr inbounds ([23 x i8], [23 x i8]* @__const.setup_input_gauge_file.myname, i64 0, i64 0), i64 23, i1 false)
  %call = tail call noalias align 16 dereferenceable_or_null(56) i8* @calloc(i64 1, i64 56) #32
  %1 = bitcast i8* %call to %struct.gauge_file*
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i64 0, i64 0), i8* nonnull %0) #34
  call void @terminate(i32 1) #32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %filename2 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %1, i64 0, i32 2
  store i8* %filename, i8** %filename2, align 16, !tbaa !401
  %call3 = call noalias align 16 dereferenceable_or_null(92) i8* @calloc(i64 1, i64 92) #32
  %cmp4 = icmp eq i8* %call3, null
  br i1 %cmp4, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end
  %call7 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37.258, i64 0, i64 0), i8* nonnull %0) #34
  call void @terminate(i32 1) #32
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.end
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %1, i64 0, i32 1
  %2 = bitcast %struct.gauge_header** %header to i8**
  store i8* %call3, i8** %2, align 8, !tbaa !398
  call void @llvm.lifetime.end.p0i8(i64 23, i8* nonnull %0) #31
  ret %struct.gauge_file* %1
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct.gauge_file* @setup_output_gauge_file() local_unnamed_addr #1 {
entry:
  %myname = alloca [24 x i8], align 16
  %time_stamp = alloca i64, align 8
  %0 = getelementptr inbounds [24 x i8], [24 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(24) %0, i8* noundef nonnull align 16 dereferenceable(24) getelementptr inbounds ([24 x i8], [24 x i8]* @__const.setup_output_gauge_file.myname, i64 0, i64 0), i64 24, i1 false)
  %1 = bitcast i64* %time_stamp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #31
  %call = tail call noalias align 16 dereferenceable_or_null(56) i8* @calloc(i64 1, i64 56) #32
  %2 = bitcast i8* %call to %struct.gauge_file*
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i64 0, i64 0), i8* nonnull %0) #34
  call void @terminate(i32 1) #32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call2 = call noalias align 16 dereferenceable_or_null(92) i8* @calloc(i64 1, i64 92) #32
  %3 = bitcast i8* %call2 to %struct.gauge_header*
  %cmp3 = icmp eq i8* %call2, null
  br i1 %cmp3, label %if.then4, label %if.end7

if.then4:                                         ; preds = %if.end
  %call6 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37.258, i64 0, i64 0), i8* nonnull %0) #34
  call void @terminate(i32 1) #32
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %2, i64 0, i32 1
  %4 = bitcast %struct.gauge_header** %header to i8**
  store i8* %call2, i8** %4, align 8, !tbaa !398
  %magic_number = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 0
  store i32 20103, i32* %magic_number, align 16, !tbaa !404
  %5 = load i32, i32* @nx, align 4, !tbaa !13
  %arrayidx = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 2, i64 0
  store i32 %5, i32* %arrayidx, align 4, !tbaa !13
  %6 = load i32, i32* @ny, align 4, !tbaa !13
  %arrayidx10 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 2, i64 1
  store i32 %6, i32* %arrayidx10, align 8, !tbaa !13
  %7 = load i32, i32* @nz, align 4, !tbaa !13
  %arrayidx12 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 2, i64 2
  store i32 %7, i32* %arrayidx12, align 4, !tbaa !13
  %8 = load i32, i32* @nt, align 4, !tbaa !13
  %arrayidx14 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 2, i64 3
  store i32 %8, i32* %arrayidx14, align 16, !tbaa !13
  %9 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp15 = icmp eq i32 %9, 0
  br i1 %cmp15, label %if.then16, label %if.end45

if.then16:                                        ; preds = %if.end7
  %call17 = call i64 @time(i64* nonnull %time_stamp) #32
  %arraydecay19 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 1, i64 0
  %call20 = call i8* @ctime(i64* nonnull %time_stamp) #32
  %call21 = call i8* @strcpy(i8* noundef nonnull %arraydecay19, i8* noundef nonnull dereferenceable(1) %call20) #32
  %call24 = call i64 @strlen(i8* noundef nonnull %arraydecay19) #36
  %10 = trunc i64 %call24 to i32
  %i.071 = add i32 %10, 1
  %cmp2572 = icmp slt i32 %i.071, 64
  br i1 %cmp2572, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %if.then16
  %11 = sext i32 %i.071 to i64
  %12 = add nsw i64 %11, 4
  %scevgep = getelementptr i8, i8* %call2, i64 %12
  %13 = sub i64 62, %call24
  %14 = and i64 %13, 4294967295
  %15 = add nuw nsw i64 %14, 1
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(1) %scevgep, i8 0, i64 %15, i1 false)
  br label %for.end

for.end:                                          ; preds = %for.body.preheader, %if.then16
  %call32 = call i64 @strlen(i8* noundef nonnull %arraydecay19) #36
  %sub = add i64 %call32, -1
  %arrayidx33 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 1, i64 %sub
  %16 = load i8, i8* %arrayidx33, align 1, !tbaa !26
  %cmp35 = icmp eq i8 %16, 10
  br i1 %cmp35, label %if.then37, label %if.end45

if.then37:                                        ; preds = %for.end
  store i8 0, i8* %arrayidx33, align 1, !tbaa !26
  br label %if.end45

if.end45:                                         ; preds = %for.end, %if.then37, %if.end7
  %arraydecay47 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 1, i64 0
  call void @broadcast_bytes(i8* nonnull %arraydecay47, i32 64) #32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #31
  ret %struct.gauge_file* %2
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct.gauge_file* @w_serial_i(i8* %filename) local_unnamed_addr #1 {
entry:
  %myname = alloca [11 x i8], align 1
  %0 = getelementptr inbounds [11 x i8], [11 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 11, i8* nonnull %0) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(11) %0, i8* noundef nonnull align 1 dereferenceable(11) getelementptr inbounds ([11 x i8], [11 x i8]* @__const.w_serial_i.myname, i64 0, i64 0), i64 11, i1 false)
  %call = tail call %struct.gauge_file* @setup_output_gauge_file() #34
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 1
  %1 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %order = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %1, i64 0, i32 4
  store i32 0, i32* %order, align 4, !tbaa !405
  %2 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call1 = tail call %struct._IO_FILE* @fopen(i8* %filename, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38.259, i64 0, i64 0)) #34
  %cmp2 = icmp eq %struct._IO_FILE* %call1, null
  br i1 %cmp2, label %if.then3, label %if.end7

if.then3:                                         ; preds = %if.then
  %3 = load i32, i32* @this_node, align 4, !tbaa !13
  %call4 = tail call i32* @__errno_location() #37
  %4 = load i32, i32* %call4, align 4, !tbaa !13
  %call5 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([42 x i8], [42 x i8]* @.str.39.260, i64 0, i64 0), i8* nonnull %0, i32 %3, i8* %filename, i32 %4) #34
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call6 = call i32 @fflush(%struct._IO_FILE* %5) #34
  call void @terminate(i32 1) #32
  br label %if.end7

if.end7:                                          ; preds = %if.then, %if.then3
  call void @swrite_gauge_hdr(%struct._IO_FILE* %call1, %struct.gauge_header* nonnull %1) #34
  %.pr = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp8 = icmp eq i32 %.pr, 0
  br i1 %cmp8, label %if.end12, label %if.else

if.else:                                          ; preds = %entry, %if.end7
  br label %if.end12

if.end12:                                         ; preds = %if.end7, %if.else
  %.sink = phi %struct._IO_FILE* [ null, %if.else ], [ %call1, %if.end7 ]
  %fp11 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* %.sink, %struct._IO_FILE** %fp11, align 8, !tbaa !406
  %filename13 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 2
  store i8* %filename, i8** %filename13, align 8, !tbaa !401
  %byterevflag = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 3
  store i32 0, i32* %byterevflag, align 8, !tbaa !407
  %rank2rcv = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 4
  store i32* null, i32** %rank2rcv, align 8, !tbaa !408
  %parallel = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 5
  store i32 0, i32* %parallel, align 8, !tbaa !409
  call void @llvm.lifetime.end.p0i8(i64 11, i8* nonnull %0) #31
  ret %struct.gauge_file* %call
}

; Function Attrs: noinline nounwind optsize uwtable
define void @read_checksum(i32 %parallel, %struct.gauge_file* %gf, %struct.gauge_check* nocapture readonly %test_gc) local_unnamed_addr #1 {
entry:
  %myname = alloca [14 x i8], align 1
  %0 = getelementptr inbounds [14 x i8], [14 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %0) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(14) %0, i8* noundef nonnull align 1 dereferenceable(14) getelementptr inbounds ([14 x i8], [14 x i8]* @__const.read_checksum.myname, i64 0, i64 0), i64 14, i1 false)
  %byterevflag = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 3
  %1 = load i32, i32* %byterevflag, align 8, !tbaa !407
  %fp = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !406
  %sum29 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 6, i32 1
  %3 = bitcast i32* %sum29 to i8*
  %call = call i32 @psread_byteorder(i32 %1, i32 %parallel, %struct._IO_FILE* %2, i8* nonnull %3, i64 4, i8* nonnull %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40.261, i64 0, i64 0)) #34
  %cmp.not = icmp eq i32 %call, 0
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @terminate(i32 1) #32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %byterevflag, align 8, !tbaa !407
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !406
  %sum31 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  %6 = bitcast i32* %sum31 to i8*
  %call5 = call i32 @psread_byteorder(i32 %4, i32 %parallel, %struct._IO_FILE* %5, i8* nonnull %6, i64 4, i8* nonnull %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40.261, i64 0, i64 0)) #34
  %cmp6.not = icmp eq i32 %call5, 0
  br i1 %cmp6.not, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end
  call void @terminate(i32 1) #32
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end
  %7 = load i32, i32* %sum29, align 4, !tbaa !402
  %sum2911 = getelementptr inbounds %struct.gauge_check, %struct.gauge_check* %test_gc, i64 0, i32 1
  %8 = load i32, i32* %sum2911, align 4, !tbaa !410
  %cmp12.not = icmp eq i32 %7, %8
  br i1 %cmp12.not, label %lor.lhs.false, label %if.end8.if.then17_crit_edge

if.end8.if.then17_crit_edge:                      ; preds = %if.end8
  %sum3120.phi.trans.insert = getelementptr inbounds %struct.gauge_check, %struct.gauge_check* %test_gc, i64 0, i32 0
  %.pre = load i32, i32* %sum3120.phi.trans.insert, align 4, !tbaa !411
  %.pre49 = load i32, i32* %sum31, align 4, !tbaa !403
  br label %if.then17

lor.lhs.false:                                    ; preds = %if.end8
  %9 = load i32, i32* %sum31, align 4, !tbaa !403
  %sum3115 = getelementptr inbounds %struct.gauge_check, %struct.gauge_check* %test_gc, i64 0, i32 0
  %10 = load i32, i32* %sum3115, align 4, !tbaa !411
  %cmp16.not = icmp eq i32 %9, %10
  br i1 %cmp16.not, label %if.else, label %if.then17

if.then17:                                        ; preds = %if.end8.if.then17_crit_edge, %lor.lhs.false
  %11 = phi i32 [ %.pre49, %if.end8.if.then17_crit_edge ], [ %9, %lor.lhs.false ]
  %12 = phi i32 [ %.pre, %if.end8.if.then17_crit_edge ], [ %10, %lor.lhs.false ]
  %call25 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([54 x i8], [54 x i8]* @.str.41.262, i64 0, i64 0), i8* nonnull %0, i32 %8, i32 %12, i32 %7, i32 %11) #34
  br label %if.end32

if.else:                                          ; preds = %lor.lhs.false
  %call30 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42.263, i64 0, i64 0), i32 %7, i32 %9) #34
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call31 = call i32 @fflush(%struct._IO_FILE* %13) #34
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then17
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @write_checksum(i32 %parallel, %struct.gauge_file* %gf) local_unnamed_addr #1 {
entry:
  %myname = alloca [15 x i8], align 1
  %0 = getelementptr inbounds [15 x i8], [15 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %0) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(15) %0, i8* noundef nonnull align 1 dereferenceable(15) getelementptr inbounds ([15 x i8], [15 x i8]* @__const.write_checksum.myname, i64 0, i64 0), i64 15, i1 false)
  %fp = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !406
  %sum29 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 6, i32 1
  %2 = bitcast i32* %sum29 to i8*
  call void @pswrite_data(i32 %parallel, %struct._IO_FILE* %1, i8* nonnull %2, i64 4, i8* nonnull %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40.261, i64 0, i64 0)) #34
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !406
  %sum31 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  %4 = bitcast i32* %sum31 to i8*
  call void @pswrite_data(i32 %parallel, %struct._IO_FILE* %3, i8* nonnull %4, i64 4, i8* nonnull %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40.261, i64 0, i64 0)) #34
  %5 = load i32, i32* %sum29, align 4, !tbaa !402
  %6 = load i32, i32* %sum31, align 4, !tbaa !403
  %call = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43.264, i64 0, i64 0), i32 %5, i32 %6) #34
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @w_serial(%struct.gauge_file* %gf) local_unnamed_addr #1 {
entry:
  %tbuf = alloca [4 x %struct.su3_matrix], align 16
  %0 = bitcast [4 x %struct.su3_matrix]* %tbuf to i8*
  call void @llvm.lifetime.start.p0i8(i64 576, i8* nonnull %0) #31
  %1 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end18

if.then:                                          ; preds = %entry
  %parallel = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 5
  %2 = load i32, i32* %parallel, align 8, !tbaa !409
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %if.end, label %if.then1

if.then1:                                         ; preds = %if.then
  %puts260 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @str.177, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then
  %call2 = tail call noalias align 16 dereferenceable_or_null(2359296) i8* @calloc(i64 16384, i64 144) #32
  %3 = bitcast i8* %call2 to %struct.su3_matrix*
  %cmp3 = icmp eq i8* %call2, null
  br i1 %cmp3, label %if.then4, label %if.end7

if.then4:                                         ; preds = %if.end
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([35 x i8], [35 x i8]* @str.176, i64 0, i64 0))
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call6 = tail call i32 @fflush(%struct._IO_FILE* %4) #34
  tail call void @terminate(i32 1) #32
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end
  %fp8 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp8, align 8, !tbaa !406
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 1
  %6 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %header_bytes = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 3
  %7 = load i32, i32* %header_bytes, align 4, !tbaa !394
  %conv = sext i32 %7 to i64
  %add9 = add nsw i64 %conv, 8
  %call10 = tail call i32 @fseek(%struct._IO_FILE* %5, i64 %add9, i32 0) #34
  %cmp11 = icmp slt i32 %call10, 0
  br i1 %cmp11, label %if.then13, label %if.end18

if.then13:                                        ; preds = %if.end7
  %8 = load i32, i32* @this_node, align 4, !tbaa !13
  %call14 = tail call i32* @__errno_location() #37
  %9 = load i32, i32* %call14, align 4, !tbaa !13
  %filename = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 2
  %10 = load i8*, i8** %filename, align 8, !tbaa !401
  %call15 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([50 x i8], [50 x i8]* @.str.46.265, i64 0, i64 0), i32 %8, i32 %9, i8* %10) #34
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call16 = tail call i32 @fflush(%struct._IO_FILE* %11) #34
  tail call void @terminate(i32 1) #32
  br label %if.end18

if.end18:                                         ; preds = %if.end7, %if.then13, %entry
  %lbuf.0 = phi %struct.su3_matrix* [ %3, %if.then13 ], [ %3, %if.end7 ], [ undef, %entry ]
  %checksum_offset.0 = phi i64 [ %conv, %if.then13 ], [ %conv, %if.end7 ], [ undef, %entry ]
  %gh.0 = phi %struct.gauge_header* [ %6, %if.then13 ], [ %6, %if.end7 ], [ undef, %entry ]
  %fp.0 = phi %struct._IO_FILE* [ %5, %if.then13 ], [ %5, %if.end7 ], [ undef, %entry ]
  %sum31 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  store i32 0, i32* %sum31, align 4, !tbaa !403
  %sum29 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 6, i32 1
  store i32 0, i32* %sum29, align 4, !tbaa !402
  %12 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv20 = sext i32 %12 to i64
  %mul = mul nsw i64 %conv20, 144
  %13 = load i32, i32* @this_node, align 4, !tbaa !13
  %conv21 = sext i32 %13 to i64
  %mul22 = mul i64 %mul, %conv21
  tail call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %14 = bitcast %struct.su3_matrix* %lbuf.0 to i8*
  %filename127 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 2
  %15 = load i32, i32* @nt, align 4, !tbaa !13
  %cmp30311 = icmp sgt i32 %15, 0
  br i1 %cmp30311, label %for.cond32.preheader.preheader, label %for.end155

for.cond32.preheader.preheader:                   ; preds = %if.end18
  %rem28 = urem i64 %mul22, 31
  %conv29 = trunc i64 %rem28 to i32
  %rem = urem i64 %mul22, 29
  %conv23 = trunc i64 %rem to i32
  %.pre = load i32, i32* @nz, align 4, !tbaa !13
  br label %for.cond32.preheader

for.cond32.preheader:                             ; preds = %for.cond32.preheader.preheader, %for.inc153
  %16 = phi i32 [ %46, %for.inc153 ], [ %15, %for.cond32.preheader.preheader ]
  %17 = phi i32 [ %47, %for.inc153 ], [ %.pre, %for.cond32.preheader.preheader ]
  %18 = phi i32 [ %48, %for.inc153 ], [ %.pre, %for.cond32.preheader.preheader ]
  %t.0317 = phi i32 [ %inc154, %for.inc153 ], [ 0, %for.cond32.preheader.preheader ]
  %currentnode.0316 = phi i32 [ %currentnode.1.lcssa, %for.inc153 ], [ 0, %for.cond32.preheader.preheader ]
  %rank29.0315 = phi i32 [ %rank29.1.lcssa, %for.inc153 ], [ %conv23, %for.cond32.preheader.preheader ]
  %rank31.0314 = phi i32 [ %rank31.1.lcssa, %for.inc153 ], [ %conv29, %for.cond32.preheader.preheader ]
  %j.0313 = phi i32 [ %j.1.lcssa, %for.inc153 ], [ 0, %for.cond32.preheader.preheader ]
  %buf_length.0312 = phi i32 [ %buf_length.1.lcssa, %for.inc153 ], [ 0, %for.cond32.preheader.preheader ]
  %cmp33298 = icmp sgt i32 %18, 0
  br i1 %cmp33298, label %for.cond36.preheader.preheader, label %for.inc153

for.cond36.preheader.preheader:                   ; preds = %for.cond32.preheader
  %.pre322 = load i32, i32* @ny, align 4, !tbaa !13
  br label %for.cond36.preheader

for.cond36.preheader:                             ; preds = %for.cond36.preheader.preheader, %for.inc150
  %19 = phi i32 [ %43, %for.inc150 ], [ %17, %for.cond36.preheader.preheader ]
  %20 = phi i32 [ %44, %for.inc150 ], [ %.pre322, %for.cond36.preheader.preheader ]
  %21 = phi i32 [ %45, %for.inc150 ], [ %.pre322, %for.cond36.preheader.preheader ]
  %z.0304 = phi i32 [ %inc151, %for.inc150 ], [ 0, %for.cond36.preheader.preheader ]
  %currentnode.1303 = phi i32 [ %currentnode.2.lcssa, %for.inc150 ], [ %currentnode.0316, %for.cond36.preheader.preheader ]
  %rank29.1302 = phi i32 [ %rank29.2.lcssa, %for.inc150 ], [ %rank29.0315, %for.cond36.preheader.preheader ]
  %rank31.1301 = phi i32 [ %rank31.2.lcssa, %for.inc150 ], [ %rank31.0314, %for.cond36.preheader.preheader ]
  %j.1300 = phi i32 [ %j.2.lcssa, %for.inc150 ], [ %j.0313, %for.cond36.preheader.preheader ]
  %buf_length.1299 = phi i32 [ %buf_length.2.lcssa, %for.inc150 ], [ %buf_length.0312, %for.cond36.preheader.preheader ]
  %cmp37285 = icmp sgt i32 %21, 0
  br i1 %cmp37285, label %for.cond40.preheader.preheader, label %for.inc150

for.cond40.preheader.preheader:                   ; preds = %for.cond36.preheader
  %.pre323 = load i32, i32* @nx, align 4, !tbaa !13
  br label %for.cond40.preheader

for.cond40.preheader:                             ; preds = %for.cond40.preheader.preheader, %for.inc147
  %22 = phi i32 [ %41, %for.inc147 ], [ %20, %for.cond40.preheader.preheader ]
  %23 = phi i32 [ %42, %for.inc147 ], [ %.pre323, %for.cond40.preheader.preheader ]
  %y.0291 = phi i32 [ %inc148, %for.inc147 ], [ 0, %for.cond40.preheader.preheader ]
  %currentnode.2290 = phi i32 [ %currentnode.3.lcssa, %for.inc147 ], [ %currentnode.1303, %for.cond40.preheader.preheader ]
  %rank29.2289 = phi i32 [ %rank29.3.lcssa, %for.inc147 ], [ %rank29.1302, %for.cond40.preheader.preheader ]
  %rank31.2288 = phi i32 [ %rank31.3.lcssa, %for.inc147 ], [ %rank31.1301, %for.cond40.preheader.preheader ]
  %j.2287 = phi i32 [ %j.3.lcssa, %for.inc147 ], [ %j.1300, %for.cond40.preheader.preheader ]
  %buf_length.2286 = phi i32 [ %buf_length.3.lcssa, %for.inc147 ], [ %buf_length.1299, %for.cond40.preheader.preheader ]
  %cmp41270 = icmp sgt i32 %23, 0
  br i1 %cmp41270, label %for.body43, label %for.inc147

for.body43:                                       ; preds = %for.cond40.preheader, %for.inc143
  %x.0278 = phi i32 [ %inc144, %for.inc143 ], [ 0, %for.cond40.preheader ]
  %currentnode.3277 = phi i32 [ %currentnode.4, %for.inc143 ], [ %currentnode.2290, %for.cond40.preheader ]
  %rank29.3276 = phi i32 [ %rank29.5, %for.inc143 ], [ %rank29.2289, %for.cond40.preheader ]
  %rank31.3275 = phi i32 [ %rank31.5, %for.inc143 ], [ %rank31.2288, %for.cond40.preheader ]
  %j.3272 = phi i32 [ %inc145, %for.inc143 ], [ %j.2287, %for.cond40.preheader ]
  %buf_length.3271 = phi i32 [ %buf_length.4, %for.inc143 ], [ %buf_length.2286, %for.cond40.preheader ]
  %call44 = call i32 @node_number(i32 %x.0278, i32 %y.0291, i32 %z.0304, i32 %t.0317) #32
  %cmp45.not = icmp eq i32 %call44, %currentnode.3277
  br i1 %cmp45.not, label %if.end62thread-pre-split, label %if.then47

if.then47:                                        ; preds = %for.body43
  %24 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp48 = icmp eq i32 %24, 0
  %cmp50 = icmp ne i32 %call44, 0
  %or.cond = select i1 %cmp48, i1 %cmp50, i1 false
  br i1 %or.cond, label %if.then52, label %if.end53

if.then52:                                        ; preds = %if.then47
  call void @send_field(i8* nonnull %0, i32 4, i32 %call44) #32
  %.pre324 = load i32, i32* @this_node, align 4, !tbaa !13
  br label %if.end53

if.end53:                                         ; preds = %if.then52, %if.then47
  %25 = phi i32 [ %.pre324, %if.then52 ], [ %24, %if.then47 ]
  %cmp54 = icmp eq i32 %25, %call44
  %or.cond173 = and i1 %cmp50, %cmp54
  br i1 %or.cond173, label %if.then59, label %if.end62

if.then59:                                        ; preds = %if.end53
  call void @get_field(i8* nonnull %0, i32 4) #32
  br label %if.end62thread-pre-split

if.end62thread-pre-split:                         ; preds = %for.body43, %if.then59
  %currentnode.4.ph = phi i32 [ %call44, %if.then59 ], [ %currentnode.3277, %for.body43 ]
  %.pr = load i32, i32* @this_node, align 4, !tbaa !13
  br label %if.end62

if.end62:                                         ; preds = %if.end62thread-pre-split, %if.end53
  %26 = phi i32 [ %.pr, %if.end62thread-pre-split ], [ %25, %if.end53 ]
  %currentnode.4 = phi i32 [ %currentnode.4.ph, %if.end62thread-pre-split ], [ %call44, %if.end53 ]
  %cmp63 = icmp eq i32 %26, 0
  br i1 %cmp63, label %if.then65, label %if.else132

if.then65:                                        ; preds = %if.end62
  %cmp66 = icmp eq i32 %currentnode.4, 0
  br i1 %cmp66, label %if.then68, label %if.else

if.then68:                                        ; preds = %if.then65
  %call69 = call i32 @node_index(i32 %x.0278, i32 %y.0291, i32 %z.0304, i32 %t.0317) #32
  %27 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom74 = sext i32 %call69 to i64
  br label %for.body73

for.body73:                                       ; preds = %if.then68, %for.body73
  %indvars.iv = phi i64 [ 0, %if.then68 ], [ %indvars.iv.next, %for.body73 ]
  %arrayidx = getelementptr inbounds [4 x %struct.su3_matrix], [4 x %struct.su3_matrix]* %tbuf, i64 0, i64 %indvars.iv
  %arrayidx77 = getelementptr inbounds %struct.site, %struct.site* %27, i64 %idxprom74, i32 8, i64 %indvars.iv
  %28 = bitcast %struct.su3_matrix* %arrayidx to i8*
  %29 = bitcast %struct.su3_matrix* %arrayidx77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(144) %28, i8* noundef nonnull align 8 dereferenceable(144) %29, i64 144, i1 false), !tbaa.struct !25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %if.end79, label %for.body73, !llvm.loop !412

if.else:                                          ; preds = %if.then65
  call void @get_field(i8* nonnull %0, i32 576) #32
  br label %if.end79

if.end79:                                         ; preds = %for.body73, %if.else
  %mul80 = shl nsw i32 %buf_length.3271, 2
  %idxprom81 = sext i32 %mul80 to i64
  %arrayidx82 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %lbuf.0, i64 %idxprom81
  %30 = bitcast %struct.su3_matrix* %arrayidx82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(576) %30, i8* noundef nonnull align 16 dereferenceable(576) %0, i64 576, i1 false)
  %31 = bitcast %struct.su3_matrix* %arrayidx82 to i32*
  %sum29.promoted = load i32, i32* %sum29, align 4, !tbaa !402
  %sum31.promoted = load i32, i32* %sum31, align 4, !tbaa !403
  br label %for.body90

for.body90:                                       ; preds = %if.end79, %for.body90
  %val.0269 = phi i32* [ %31, %if.end79 ], [ %incdec.ptr, %for.body90 ]
  %rank29.4268 = phi i32 [ %rank29.3276, %if.end79 ], [ %spec.store.select, %for.body90 ]
  %rank31.4267 = phi i32 [ %rank31.3275, %if.end79 ], [ %spec.store.select174, %for.body90 ]
  %k.1266 = phi i32 [ 0, %if.end79 ], [ %inc111, %for.body90 ]
  %xor262265 = phi i32 [ %sum29.promoted, %if.end79 ], [ %xor, %for.body90 ]
  %xor99263264 = phi i32 [ %sum31.promoted, %if.end79 ], [ %xor99, %for.body90 ]
  %32 = load i32, i32* %val.0269, align 4, !tbaa !13
  %shl = shl i32 %32, %rank29.4268
  %sub = sub nsw i32 32, %rank29.4268
  %shr = lshr i32 %32, %sub
  %or = or i32 %shl, %shr
  %xor = xor i32 %or, %xor262265
  %shl93 = shl i32 %32, %rank31.4267
  %sub94 = sub nsw i32 32, %rank31.4267
  %shr95 = lshr i32 %32, %sub94
  %or96 = or i32 %shl93, %shr95
  %xor99 = xor i32 %xor99263264, %or96
  %inc100 = add nsw i32 %rank29.4268, 1
  %cmp101 = icmp sgt i32 %rank29.4268, 27
  %spec.store.select = select i1 %cmp101, i32 0, i32 %inc100
  %inc105 = add nsw i32 %rank31.4267, 1
  %cmp106 = icmp sgt i32 %rank31.4267, 29
  %spec.store.select174 = select i1 %cmp106, i32 0, i32 %inc105
  %inc111 = add nuw nsw i32 %k.1266, 1
  %incdec.ptr = getelementptr inbounds i32, i32* %val.0269, i64 1
  %exitcond321.not = icmp eq i32 %inc111, 144
  br i1 %exitcond321.not, label %for.end112, label %for.body90, !llvm.loop !413

for.end112:                                       ; preds = %for.body90
  store i32 %xor, i32* %sum29, align 4, !tbaa !402
  store i32 %xor99, i32* %sum31, align 4, !tbaa !403
  %inc113 = add nsw i32 %buf_length.3271, 1
  %cmp114 = icmp eq i32 %inc113, 4096
  br i1 %cmp114, label %if.then119, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end112
  %33 = load i32, i32* @volume, align 4, !tbaa !13
  %sub116 = add nsw i32 %33, -1
  %cmp117 = icmp eq i32 %j.3272, %sub116
  br i1 %cmp117, label %if.then119, label %for.inc143

if.then119:                                       ; preds = %lor.lhs.false, %for.end112
  %conv120 = sext i32 %inc113 to i64
  %call121 = call i64 @fwrite(i8* %14, i64 576, i64 %conv120, %struct._IO_FILE* %fp.0) #34
  %conv122 = trunc i64 %call121 to i32
  %cmp123.not = icmp eq i32 %inc113, %conv122
  br i1 %cmp123.not, label %for.inc143, label %if.then125

if.then125:                                       ; preds = %if.then119
  %34 = load i32, i32* @this_node, align 4, !tbaa !13
  %call126 = tail call i32* @__errno_location() #37
  %35 = load i32, i32* %call126, align 4, !tbaa !13
  %36 = load i8*, i8** %filename127, align 8, !tbaa !401
  %call128 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.47.266, i64 0, i64 0), i32 %34, i32 %35, i8* %36) #34
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call129 = call i32 @fflush(%struct._IO_FILE* %37) #34
  call void @terminate(i32 1) #32
  br label %for.inc143

if.else132:                                       ; preds = %if.end62
  %cmp133 = icmp eq i32 %26, %currentnode.4
  br i1 %cmp133, label %if.then135, label %for.inc143

if.then135:                                       ; preds = %if.else132
  %call136 = call i32 @node_index(i32 %x.0278, i32 %y.0291, i32 %z.0304, i32 %t.0317) #32
  %38 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom137 = sext i32 %call136 to i64
  %arraydecay140 = getelementptr inbounds %struct.site, %struct.site* %38, i64 %idxprom137, i32 8, i64 0
  %39 = bitcast %struct.su3_matrix* %arraydecay140 to i8*
  call void @send_field(i8* nonnull %39, i32 576, i32 0) #32
  br label %for.inc143

for.inc143:                                       ; preds = %if.then119, %if.then125, %lor.lhs.false, %if.then135, %if.else132
  %buf_length.4 = phi i32 [ %inc113, %lor.lhs.false ], [ %buf_length.3271, %if.then135 ], [ %buf_length.3271, %if.else132 ], [ 0, %if.then125 ], [ 0, %if.then119 ]
  %rank31.5 = phi i32 [ %spec.store.select174, %lor.lhs.false ], [ %rank31.3275, %if.then135 ], [ %rank31.3275, %if.else132 ], [ %spec.store.select174, %if.then125 ], [ %spec.store.select174, %if.then119 ]
  %rank29.5 = phi i32 [ %spec.store.select, %lor.lhs.false ], [ %rank29.3276, %if.then135 ], [ %rank29.3276, %if.else132 ], [ %spec.store.select, %if.then125 ], [ %spec.store.select, %if.then119 ]
  %inc144 = add nuw nsw i32 %x.0278, 1
  %inc145 = add nsw i32 %j.3272, 1
  %40 = load i32, i32* @nx, align 4, !tbaa !13
  %cmp41 = icmp slt i32 %inc144, %40
  br i1 %cmp41, label %for.body43, label %for.inc147.loopexit, !llvm.loop !414

for.inc147.loopexit:                              ; preds = %for.inc143
  %.pre325 = load i32, i32* @ny, align 4, !tbaa !13
  br label %for.inc147

for.inc147:                                       ; preds = %for.inc147.loopexit, %for.cond40.preheader
  %41 = phi i32 [ %22, %for.cond40.preheader ], [ %.pre325, %for.inc147.loopexit ]
  %42 = phi i32 [ %23, %for.cond40.preheader ], [ %40, %for.inc147.loopexit ]
  %buf_length.3.lcssa = phi i32 [ %buf_length.2286, %for.cond40.preheader ], [ %buf_length.4, %for.inc147.loopexit ]
  %j.3.lcssa = phi i32 [ %j.2287, %for.cond40.preheader ], [ %inc145, %for.inc147.loopexit ]
  %rank31.3.lcssa = phi i32 [ %rank31.2288, %for.cond40.preheader ], [ %rank31.5, %for.inc147.loopexit ]
  %rank29.3.lcssa = phi i32 [ %rank29.2289, %for.cond40.preheader ], [ %rank29.5, %for.inc147.loopexit ]
  %currentnode.3.lcssa = phi i32 [ %currentnode.2290, %for.cond40.preheader ], [ %currentnode.4, %for.inc147.loopexit ]
  %inc148 = add nuw nsw i32 %y.0291, 1
  %cmp37 = icmp slt i32 %inc148, %41
  br i1 %cmp37, label %for.cond40.preheader, label %for.inc150.loopexit, !llvm.loop !415

for.inc150.loopexit:                              ; preds = %for.inc147
  %.pre326 = load i32, i32* @nz, align 4, !tbaa !13
  br label %for.inc150

for.inc150:                                       ; preds = %for.inc150.loopexit, %for.cond36.preheader
  %43 = phi i32 [ %19, %for.cond36.preheader ], [ %.pre326, %for.inc150.loopexit ]
  %44 = phi i32 [ %20, %for.cond36.preheader ], [ %41, %for.inc150.loopexit ]
  %45 = phi i32 [ %21, %for.cond36.preheader ], [ %41, %for.inc150.loopexit ]
  %buf_length.2.lcssa = phi i32 [ %buf_length.1299, %for.cond36.preheader ], [ %buf_length.3.lcssa, %for.inc150.loopexit ]
  %j.2.lcssa = phi i32 [ %j.1300, %for.cond36.preheader ], [ %j.3.lcssa, %for.inc150.loopexit ]
  %rank31.2.lcssa = phi i32 [ %rank31.1301, %for.cond36.preheader ], [ %rank31.3.lcssa, %for.inc150.loopexit ]
  %rank29.2.lcssa = phi i32 [ %rank29.1302, %for.cond36.preheader ], [ %rank29.3.lcssa, %for.inc150.loopexit ]
  %currentnode.2.lcssa = phi i32 [ %currentnode.1303, %for.cond36.preheader ], [ %currentnode.3.lcssa, %for.inc150.loopexit ]
  %inc151 = add nuw nsw i32 %z.0304, 1
  %cmp33 = icmp slt i32 %inc151, %43
  br i1 %cmp33, label %for.cond36.preheader, label %for.inc153.loopexit, !llvm.loop !416

for.inc153.loopexit:                              ; preds = %for.inc150
  %.pre327 = load i32, i32* @nt, align 4, !tbaa !13
  br label %for.inc153

for.inc153:                                       ; preds = %for.inc153.loopexit, %for.cond32.preheader
  %46 = phi i32 [ %16, %for.cond32.preheader ], [ %.pre327, %for.inc153.loopexit ]
  %47 = phi i32 [ %17, %for.cond32.preheader ], [ %43, %for.inc153.loopexit ]
  %48 = phi i32 [ %18, %for.cond32.preheader ], [ %43, %for.inc153.loopexit ]
  %buf_length.1.lcssa = phi i32 [ %buf_length.0312, %for.cond32.preheader ], [ %buf_length.2.lcssa, %for.inc153.loopexit ]
  %j.1.lcssa = phi i32 [ %j.0313, %for.cond32.preheader ], [ %j.2.lcssa, %for.inc153.loopexit ]
  %rank31.1.lcssa = phi i32 [ %rank31.0314, %for.cond32.preheader ], [ %rank31.2.lcssa, %for.inc153.loopexit ]
  %rank29.1.lcssa = phi i32 [ %rank29.0315, %for.cond32.preheader ], [ %rank29.2.lcssa, %for.inc153.loopexit ]
  %currentnode.1.lcssa = phi i32 [ %currentnode.0316, %for.cond32.preheader ], [ %currentnode.2.lcssa, %for.inc153.loopexit ]
  %inc154 = add nuw nsw i32 %t.0317, 1
  %cmp30 = icmp slt i32 %inc154, %46
  br i1 %cmp30, label %for.cond32.preheader, label %for.end155, !llvm.loop !417

for.end155:                                       ; preds = %for.inc153, %if.end18
  call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %49 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp156 = icmp eq i32 %49, 0
  br i1 %cmp156, label %if.then158, label %if.end172

if.then158:                                       ; preds = %for.end155
  call void @free(i8* %14) #32
  %50 = load i8*, i8** %filename127, align 8, !tbaa !401
  %call160 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([54 x i8], [54 x i8]* @.str.48.267, i64 0, i64 0), i8* %50) #34
  %arraydecay161 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %gh.0, i64 0, i32 1, i64 0
  %call162 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49.268, i64 0, i64 0), i8* nonnull %arraydecay161) #34
  %call163 = call i32 @fseek(%struct._IO_FILE* %fp.0, i64 %checksum_offset.0, i32 0) #34
  %cmp164 = icmp slt i32 %call163, 0
  br i1 %cmp164, label %if.then166, label %if.end171

if.then166:                                       ; preds = %if.then158
  %51 = load i32, i32* @this_node, align 4, !tbaa !13
  %call167 = tail call i32* @__errno_location() #37
  %52 = load i32, i32* %call167, align 4, !tbaa !13
  %53 = load i8*, i8** %filename127, align 8, !tbaa !401
  %call169 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([50 x i8], [50 x i8]* @.str.46.265, i64 0, i64 0), i32 %51, i32 %52, i8* %53) #34
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call170 = call i32 @fflush(%struct._IO_FILE* %54) #34
  call void @terminate(i32 1) #32
  br label %if.end171

if.end171:                                        ; preds = %if.then166, %if.then158
  call void @write_checksum(i32 0, %struct.gauge_file* nonnull %gf) #34
  br label %if.end172

if.end172:                                        ; preds = %if.end171, %for.end155
  call void @llvm.lifetime.end.p0i8(i64 576, i8* nonnull %0) #31
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fseek(%struct._IO_FILE* nocapture noundef, i64 noundef, i32 noundef) local_unnamed_addr #8

; Function Attrs: noinline nounwind optsize uwtable
define void @w_serial_f(%struct.gauge_file* nocapture readonly %gf) local_unnamed_addr #1 {
entry:
  tail call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %0 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %parallel = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 5
  %1 = load i32, i32* %parallel, align 8, !tbaa !409
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end3, label %if.then1

if.then1:                                         ; preds = %if.then
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([54 x i8], [54 x i8]* @str.178, i64 0, i64 0))
  br label %if.end3

if.end3:                                          ; preds = %if.then, %if.then1
  %fp = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !406
  %call2 = tail call i32 @fclose(%struct._IO_FILE* %2) #34
  %.pr = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp4 = icmp eq i32 %.pr, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  tail call void @write_gauge_info_file(%struct.gauge_file* nonnull %gf) #34
  br label %if.end6

if.end6:                                          ; preds = %entry, %if.then5, %if.end3
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @read_site_list(i32 %parallel, %struct.gauge_file* nocapture %gf) local_unnamed_addr #1 {
entry:
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 1
  %0 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %order = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %0, i64 0, i32 4
  %1 = load i32, i32* %order, align 4, !tbaa !405
  %cmp.not = icmp eq i32 %1, 0
  br i1 %cmp.not, label %if.else41, label %if.then

if.then:                                          ; preds = %entry
  %2 = load i32, i32* @volume, align 4, !tbaa !13
  %conv = sext i32 %2 to i64
  %call = tail call noalias align 16 i8* @calloc(i64 %conv, i64 4) #32
  %rank2rcv = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 4
  %3 = bitcast i32** %rank2rcv to i8**
  store i8* %call, i8** %3, align 8, !tbaa !408
  %cmp2 = icmp eq i8* %call, null
  br i1 %cmp2, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.then
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([44 x i8], [44 x i8]* @str.179, i64 0, i64 0))
  tail call void @terminate(i32 1) #32
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  %4 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp6 = icmp eq i32 %4, 0
  br i1 %cmp6, label %if.then8, label %if.end37

if.then8:                                         ; preds = %if.end
  %tobool.not = icmp eq i32 %parallel, 0
  %5 = load i8*, i8** %3, align 8, !tbaa !408
  %6 = load i32, i32* @volume, align 4, !tbaa !13
  %conv21 = sext i32 %6 to i64
  %fp22 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp22, align 8, !tbaa !406
  br i1 %tobool.not, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.then8
  %call12 = tail call i64 @g_read(i8* %5, i64 4, i64 %conv21, %struct._IO_FILE* %7) #32
  %conv13 = trunc i64 %call12 to i32
  %8 = load i32, i32* @volume, align 4, !tbaa !13
  %cmp14.not = icmp eq i32 %8, %conv13
  br i1 %cmp14.not, label %if.end31, label %if.end31.sink.split

if.else:                                          ; preds = %if.then8
  %call23 = tail call i64 @fread(i8* %5, i64 4, i64 %conv21, %struct._IO_FILE* %7) #34
  %conv24 = trunc i64 %call23 to i32
  %9 = load i32, i32* @volume, align 4, !tbaa !13
  %cmp25.not = icmp eq i32 %9, %conv24
  br i1 %cmp25.not, label %if.end31, label %if.end31.sink.split

if.end31.sink.split:                              ; preds = %if.else, %if.then9
  %10 = load i32, i32* @this_node, align 4, !tbaa !13
  %call28 = tail call i32* @__errno_location() #37
  %11 = load i32, i32* %call28, align 4, !tbaa !13
  %call29 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([49 x i8], [49 x i8]* @.str.52.269, i64 0, i64 0), i32 %10, i32 %11) #34
  tail call void @terminate(i32 1) #32
  br label %if.end31

if.end31:                                         ; preds = %if.end31.sink.split, %if.else, %if.then9
  %byterevflag = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 3
  %12 = load i32, i32* %byterevflag, align 8, !tbaa !407
  %cmp32 = icmp eq i32 %12, 1
  br i1 %cmp32, label %if.then34, label %if.end37

if.then34:                                        ; preds = %if.end31
  %13 = load i32*, i32** %rank2rcv, align 8, !tbaa !408
  %14 = load i32, i32* @volume, align 4, !tbaa !13
  tail call void @byterevn(i32* %13, i32 %14) #32
  br label %if.end37

if.end37:                                         ; preds = %if.end31, %if.then34, %if.end
  %15 = load i8*, i8** %3, align 8, !tbaa !408
  %16 = load i32, i32* @volume, align 4, !tbaa !13
  %mul = shl i32 %16, 2
  tail call void @broadcast_bytes(i8* %15, i32 %mul) #32
  br label %if.end43

if.else41:                                        ; preds = %entry
  %rank2rcv42 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 4
  store i32* null, i32** %rank2rcv42, align 8, !tbaa !408
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.end37
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @read_v3_gauge_hdr(%struct.gauge_file* nocapture readonly %gf, i32 %parallel, i32* nocapture %byterevflag) local_unnamed_addr #1 {
entry:
  %c1 = alloca double, align 8
  %c2 = alloca double, align 8
  %myname = alloca [18 x i8], align 16
  %0 = bitcast double* %c1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %1 = bitcast double* %c2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #31
  %2 = getelementptr inbounds [18 x i8], [18 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 18, i8* nonnull %2) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(18) %2, i8* noundef nonnull align 16 dereferenceable(18) getelementptr inbounds ([18 x i8], [18 x i8]* @__const.read_v3_gauge_hdr.myname, i64 0, i64 0), i64 18, i1 false)
  %fp1 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp1, align 8, !tbaa !406
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 1
  %4 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %magic_number = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %4, i64 0, i32 0
  %5 = load i32, i32* %magic_number, align 4, !tbaa !404
  %cmp = icmp eq i32 %5, 0
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %puts162 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([73 x i8], [73 x i8]* @str.183, i64 0, i64 0))
  %6 = bitcast %struct.gauge_header* %4 to i8*
  %call3 = call i32 @psread_data(i32 %parallel, %struct._IO_FILE* %3, i8* %6, i64 4, i8* nonnull %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54.270, i64 0, i64 0)) #34
  %cmp4.not = icmp eq i32 %call3, 0
  br i1 %cmp4.not, label %if.end6thread-pre-split, label %if.then5

if.then5:                                         ; preds = %if.then
  call void @terminate(i32 1) #32
  br label %if.end6thread-pre-split

if.end6thread-pre-split:                          ; preds = %if.then5, %if.then
  %.pr = load i32, i32* %magic_number, align 4, !tbaa !404
  br label %if.end6

if.end6:                                          ; preds = %if.end6thread-pre-split, %entry
  %7 = phi i32 [ %.pr, %if.end6thread-pre-split ], [ %5, %entry ]
  %cmp9 = icmp eq i32 %7, 59354
  br i1 %cmp9, label %if.then10, label %if.else12

if.then10:                                        ; preds = %if.end6
  %puts161 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([48 x i8], [48 x i8]* @str.182, i64 0, i64 0))
  store i32 0, i32* %byterevflag, align 4, !tbaa !13
  br label %for.body.preheader

for.body.preheader:                               ; preds = %if.then16, %if.then10
  br label %for.body

if.else12:                                        ; preds = %if.end6
  call void @byterevn(i32* nonnull %magic_number, i32 1) #32
  %8 = load i32, i32* %magic_number, align 4, !tbaa !404
  %cmp15 = icmp eq i32 %8, 59354
  br i1 %cmp15, label %if.then16, label %if.else20

if.then16:                                        ; preds = %if.else12
  store i32 1, i32* %byterevflag, align 4, !tbaa !13
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([66 x i8], [66 x i8]* @str.180, i64 0, i64 0))
  %puts160 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([38 x i8], [38 x i8]* @str.181.271, i64 0, i64 0))
  %call19 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.58.272, i64 0, i64 0), i32 4, i32 8) #34
  call void @terminate(i32 1) #32
  br label %for.body.preheader

if.else20:                                        ; preds = %if.else12
  store i32 %7, i32* %magic_number, align 4, !tbaa !404
  br label %cleanup

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv165 = phi i64 [ %indvars.iv.next166, %for.inc ], [ 0, %for.body.preheader ]
  %9 = load i32, i32* %byterevflag, align 4, !tbaa !13
  %arrayidx = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %4, i64 0, i32 2, i64 %indvars.iv165
  %10 = bitcast i32* %arrayidx to i8*
  %call26 = call i32 @psread_byteorder(i32 %9, i32 %parallel, %struct._IO_FILE* %3, i8* nonnull %10, i64 4, i8* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.241, i64 0, i64 0)) #34
  %cmp27.not = icmp eq i32 %call26, 0
  br i1 %cmp27.not, label %if.end29, label %if.then28

if.then28:                                        ; preds = %for.body
  call void @terminate(i32 1) #32
  br label %if.end29

if.end29:                                         ; preds = %if.then28, %for.body
  br i1 %cmp, label %if.then30, label %for.inc

if.then30:                                        ; preds = %if.end29
  %11 = load i32, i32* %byterevflag, align 4, !tbaa !13
  %call35 = call i32 @psread_byteorder(i32 %11, i32 %parallel, %struct._IO_FILE* %3, i8* nonnull %10, i64 4, i8* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.241, i64 0, i64 0)) #34
  %cmp36.not = icmp eq i32 %call35, 0
  br i1 %cmp36.not, label %for.inc, label %if.then37

if.then37:                                        ; preds = %if.then30
  call void @terminate(i32 1) #32
  br label %for.inc

for.inc:                                          ; preds = %if.end29, %if.then37, %if.then30
  %indvars.iv.next166 = add nuw nsw i64 %indvars.iv165, 1
  %exitcond167.not = icmp eq i64 %indvars.iv.next166, 4
  br i1 %exitcond167.not, label %for.end, label %for.body, !llvm.loop !418

for.end:                                          ; preds = %for.inc
  %arrayidx41 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %4, i64 0, i32 2, i64 0
  %12 = load i32, i32* %arrayidx41, align 4, !tbaa !13
  %13 = load i32, i32* @nx, align 4, !tbaa !13
  %cmp42.not = icmp eq i32 %12, %13
  br i1 %cmp42.not, label %lor.lhs.false, label %for.end.if.then54_crit_edge

for.end.if.then54_crit_edge:                      ; preds = %for.end
  %.pre = load i32, i32* @ny, align 4
  br label %if.then54

lor.lhs.false:                                    ; preds = %for.end
  %arrayidx44 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %4, i64 0, i32 2, i64 1
  %14 = load i32, i32* %arrayidx44, align 4, !tbaa !13
  %15 = load i32, i32* @ny, align 4, !tbaa !13
  %cmp45.not = icmp eq i32 %14, %15
  br i1 %cmp45.not, label %lor.lhs.false46, label %if.then54

lor.lhs.false46:                                  ; preds = %lor.lhs.false
  %arrayidx48 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %4, i64 0, i32 2, i64 2
  %16 = load i32, i32* %arrayidx48, align 4, !tbaa !13
  %17 = load i32, i32* @nz, align 4, !tbaa !13
  %cmp49.not = icmp eq i32 %16, %17
  br i1 %cmp49.not, label %lor.lhs.false50, label %if.then54

lor.lhs.false50:                                  ; preds = %lor.lhs.false46
  %arrayidx52 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %4, i64 0, i32 2, i64 3
  %18 = load i32, i32* %arrayidx52, align 4, !tbaa !13
  %19 = load i32, i32* @nt, align 4, !tbaa !13
  %cmp53.not = icmp eq i32 %18, %19
  br i1 %cmp53.not, label %if.end88, label %if.then54

if.then54:                                        ; preds = %for.end.if.then54_crit_edge, %lor.lhs.false50, %lor.lhs.false46, %lor.lhs.false
  %20 = phi i32 [ %.pre, %for.end.if.then54_crit_edge ], [ %14, %lor.lhs.false50 ], [ %14, %lor.lhs.false46 ], [ %15, %lor.lhs.false ]
  %cmp55 = icmp ne i32 %13, -1
  %cmp57 = icmp ne i32 %20, -1
  %or.cond = select i1 %cmp55, i1 true, i1 %cmp57
  %21 = load i32, i32* @nz, align 4
  %cmp59 = icmp ne i32 %21, -1
  %or.cond112 = select i1 %or.cond, i1 true, i1 %cmp59
  %22 = load i32, i32* @nt, align 4
  %cmp61 = icmp ne i32 %22, -1
  %or.cond113 = select i1 %or.cond112, i1 true, i1 %cmp61
  br i1 %or.cond113, label %if.then62, label %if.else76

if.then62:                                        ; preds = %if.then54
  %call63 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([49 x i8], [49 x i8]* @.str.59, i64 0, i64 0)) #34
  br label %for.body66

for.body66:                                       ; preds = %if.then62, %for.body66
  %indvars.iv = phi i64 [ 0, %if.then62 ], [ %indvars.iv.next, %for.body66 ]
  %arrayidx69 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %4, i64 0, i32 2, i64 %indvars.iv
  %23 = load i32, i32* %arrayidx69, align 4, !tbaa !13
  %call70 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.60, i64 0, i64 0), i32 %23) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.end73, label %for.body66, !llvm.loop !419

for.end73:                                        ; preds = %for.body66
  %putchar = call i32 @putchar(i32 10)
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call75 = call i32 @fflush(%struct._IO_FILE* %24) #34
  call void @terminate(i32 1) #32
  br label %if.end88

if.else76:                                        ; preds = %if.then54
  store i32 %12, i32* @nx, align 4, !tbaa !13
  %arrayidx80 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %4, i64 0, i32 2, i64 1
  %25 = load i32, i32* %arrayidx80, align 4, !tbaa !13
  store i32 %25, i32* @ny, align 4, !tbaa !13
  %arrayidx82 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %4, i64 0, i32 2, i64 2
  %26 = load i32, i32* %arrayidx82, align 4, !tbaa !13
  store i32 %26, i32* @nz, align 4, !tbaa !13
  %arrayidx84 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %4, i64 0, i32 2, i64 3
  %27 = load i32, i32* %arrayidx84, align 4, !tbaa !13
  store i32 %27, i32* @nt, align 4, !tbaa !13
  %mul = mul nsw i32 %25, %12
  %mul85 = mul nsw i32 %mul, %26
  %mul86 = mul nsw i32 %mul85, %27
  store i32 %mul86, i32* @volume, align 4, !tbaa !13
  br label %if.end88

if.end88:                                         ; preds = %for.end73, %if.else76, %lor.lhs.false50
  %spec.select = select i1 %cmp, i32 48, i32 28
  %28 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %4, i64 0, i32 3
  store i32 %spec.select, i32* %28, align 4
  %order = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %4, i64 0, i32 4
  store i32 0, i32* %order, align 4, !tbaa !405
  %29 = load i32, i32* %byterevflag, align 4, !tbaa !13
  %call95 = call i32 @psread_byteorder(i32 %29, i32 %parallel, %struct._IO_FILE* %3, i8* nonnull %0, i64 8, i8* nonnull %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i64 0, i64 0)) #34
  %cmp96.not = icmp eq i32 %call95, 0
  br i1 %cmp96.not, label %if.end98, label %if.then97

if.then97:                                        ; preds = %if.end88
  call void @terminate(i32 1) #32
  br label %if.end98

if.end98:                                         ; preds = %if.then97, %if.end88
  %30 = load i32, i32* %byterevflag, align 4, !tbaa !13
  %call100 = call i32 @psread_byteorder(i32 %30, i32 %parallel, %struct._IO_FILE* %3, i8* nonnull %1, i64 8, i8* nonnull %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0)) #34
  %cmp101.not = icmp eq i32 %call100, 0
  br i1 %cmp101.not, label %if.end103, label %if.then102

if.then102:                                       ; preds = %if.end98
  call void @terminate(i32 1) #32
  br label %if.end103

if.end103:                                        ; preds = %if.then102, %if.end98
  %31 = load double, double* %c1, align 8, !tbaa !11
  %32 = load double, double* %c2, align 8, !tbaa !11
  %call104 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63, i64 0, i64 0), double %31, double %32) #34
  br label %cleanup

cleanup:                                          ; preds = %if.end103, %if.else20
  %retval.0 = phi i32 [ 0, %if.end103 ], [ 1, %if.else20 ]
  call void @llvm.lifetime.end.p0i8(i64 18, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @read_1996_gauge_hdr(%struct.gauge_file* nocapture readonly %gf, i32 %parallel, i32* nocapture %byterevflag) local_unnamed_addr #1 {
entry:
  %gauge_field = alloca %struct.anon.234, align 8
  %myname = alloca [20 x i8], align 16
  %0 = bitcast %struct.anon.234* %gauge_field to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %0) #31
  %1 = getelementptr inbounds [20 x i8], [20 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %1) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(20) %1, i8* noundef nonnull align 16 dereferenceable(20) getelementptr inbounds ([20 x i8], [20 x i8]* @__const.read_1996_gauge_hdr.myname, i64 0, i64 0), i64 20, i1 false)
  %fp1 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp1, align 8, !tbaa !406
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 1
  %3 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %magic_number = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 0
  %4 = load i32, i32* %magic_number, align 4, !tbaa !404
  %cmp = icmp eq i32 %4, 53546
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %puts182 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([49 x i8], [49 x i8]* @str.186, i64 0, i64 0))
  store i32 0, i32* %byterevflag, align 4, !tbaa !13
  br label %if.end12

if.else:                                          ; preds = %entry
  tail call void @byterevn(i32* nonnull %magic_number, i32 1) #32
  %5 = load i32, i32* %magic_number, align 4, !tbaa !404
  %cmp5 = icmp eq i32 %5, 53546
  br i1 %cmp5, label %if.then6, label %if.else10

if.then6:                                         ; preds = %if.else
  store i32 1, i32* %byterevflag, align 4, !tbaa !13
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([67 x i8], [67 x i8]* @str.184, i64 0, i64 0))
  %puts181 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([40 x i8], [40 x i8]* @str.185, i64 0, i64 0))
  %call9 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.58.272, i64 0, i64 0), i32 4, i32 8) #34
  tail call void @terminate(i32 1) #32
  %.pre = load i32, i32* %byterevflag, align 4, !tbaa !13
  br label %if.end12

if.else10:                                        ; preds = %if.else
  store i32 %4, i32* %magic_number, align 4, !tbaa !404
  br label %cleanup

if.end12:                                         ; preds = %if.then6, %if.then
  %6 = phi i32 [ %.pre, %if.then6 ], [ 0, %if.then ]
  %dims = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 2
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %dims, i64 0, i64 0
  %7 = bitcast [4 x i32]* %dims to i8*
  %call14 = call i32 @psread_byteorder(i32 %6, i32 %parallel, %struct._IO_FILE* %2, i8* nonnull %7, i64 16, i8* nonnull %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.241, i64 0, i64 0)) #34
  %cmp15.not = icmp eq i32 %call14, 0
  br i1 %cmp15.not, label %if.end17, label %if.then16

if.then16:                                        ; preds = %if.end12
  call void @terminate(i32 1) #32
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %if.end12
  %8 = load i32, i32* %arraydecay, align 4, !tbaa !13
  %9 = load i32, i32* @nx, align 4, !tbaa !13
  %cmp19.not = icmp eq i32 %8, %9
  br i1 %cmp19.not, label %lor.lhs.false, label %if.end17.if.then31_crit_edge

if.end17.if.then31_crit_edge:                     ; preds = %if.end17
  %.pre188 = load i32, i32* @ny, align 4
  br label %if.then31

lor.lhs.false:                                    ; preds = %if.end17
  %arrayidx21 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 2, i64 1
  %10 = load i32, i32* %arrayidx21, align 4, !tbaa !13
  %11 = load i32, i32* @ny, align 4, !tbaa !13
  %cmp22.not = icmp eq i32 %10, %11
  br i1 %cmp22.not, label %lor.lhs.false23, label %if.then31

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %arrayidx25 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 2, i64 2
  %12 = load i32, i32* %arrayidx25, align 4, !tbaa !13
  %13 = load i32, i32* @nz, align 4, !tbaa !13
  %cmp26.not = icmp eq i32 %12, %13
  br i1 %cmp26.not, label %lor.lhs.false27, label %if.then31

lor.lhs.false27:                                  ; preds = %lor.lhs.false23
  %arrayidx29 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 2, i64 3
  %14 = load i32, i32* %arrayidx29, align 4, !tbaa !13
  %15 = load i32, i32* @nt, align 4, !tbaa !13
  %cmp30.not = icmp eq i32 %14, %15
  br i1 %cmp30.not, label %if.end59, label %if.then31

if.then31:                                        ; preds = %if.end17.if.then31_crit_edge, %lor.lhs.false27, %lor.lhs.false23, %lor.lhs.false
  %16 = phi i32 [ %.pre188, %if.end17.if.then31_crit_edge ], [ %10, %lor.lhs.false27 ], [ %10, %lor.lhs.false23 ], [ %11, %lor.lhs.false ]
  %cmp32 = icmp ne i32 %9, -1
  %cmp34 = icmp ne i32 %16, -1
  %or.cond = select i1 %cmp32, i1 true, i1 %cmp34
  %17 = load i32, i32* @nz, align 4
  %cmp36 = icmp ne i32 %17, -1
  %or.cond130 = select i1 %or.cond, i1 true, i1 %cmp36
  %18 = load i32, i32* @nt, align 4
  %cmp38 = icmp ne i32 %18, -1
  %or.cond131 = select i1 %or.cond130, i1 true, i1 %cmp38
  br i1 %or.cond131, label %if.then39, label %if.else47

if.then39:                                        ; preds = %if.then31
  %call40 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([51 x i8], [51 x i8]* @.str.67, i64 0, i64 0)) #34
  br label %for.body

for.body:                                         ; preds = %if.then39, %for.body
  %indvars.iv186 = phi i64 [ 0, %if.then39 ], [ %indvars.iv.next187, %for.body ]
  %arrayidx43 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 2, i64 %indvars.iv186
  %19 = load i32, i32* %arrayidx43, align 4, !tbaa !13
  %call44 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.60, i64 0, i64 0), i32 %19) #34
  %indvars.iv.next187 = add nuw nsw i64 %indvars.iv186, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next187, 4
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !420

for.end:                                          ; preds = %for.body
  %putchar = call i32 @putchar(i32 10)
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call46 = call i32 @fflush(%struct._IO_FILE* %20) #34
  call void @terminate(i32 1) #32
  br label %if.end59

if.else47:                                        ; preds = %if.then31
  store i32 %8, i32* @nx, align 4, !tbaa !13
  %arrayidx51 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 2, i64 1
  %21 = load i32, i32* %arrayidx51, align 4, !tbaa !13
  store i32 %21, i32* @ny, align 4, !tbaa !13
  %arrayidx53 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 2, i64 2
  %22 = load i32, i32* %arrayidx53, align 4, !tbaa !13
  store i32 %22, i32* @nz, align 4, !tbaa !13
  %arrayidx55 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 2, i64 3
  %23 = load i32, i32* %arrayidx55, align 4, !tbaa !13
  store i32 %23, i32* @nt, align 4, !tbaa !13
  %mul = mul nsw i32 %21, %8
  %mul56 = mul nsw i32 %mul, %22
  %mul57 = mul nsw i32 %mul56, %23
  store i32 %mul57, i32* @volume, align 4, !tbaa !13
  br label %if.end59

if.end59:                                         ; preds = %for.end, %if.else47, %lor.lhs.false27
  %24 = load i32, i32* %byterevflag, align 4, !tbaa !13
  %header_bytes = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 3
  %25 = bitcast i32* %header_bytes to i8*
  %call61 = call i32 @psread_byteorder(i32 %24, i32 %parallel, %struct._IO_FILE* %2, i8* nonnull %25, i64 4, i8* nonnull %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #34
  %cmp62.not = icmp eq i32 %call61, 0
  br i1 %cmp62.not, label %if.end64, label %if.then63

if.then63:                                        ; preds = %if.end59
  call void @terminate(i32 1) #32
  br label %if.end64

if.end64:                                         ; preds = %if.then63, %if.end59
  %26 = load i32, i32* %byterevflag, align 4, !tbaa !13
  %order = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 4
  %27 = bitcast i32* %order to i8*
  %call66 = call i32 @psread_byteorder(i32 %26, i32 %parallel, %struct._IO_FILE* %2, i8* nonnull %27, i64 4, i8* nonnull %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.243, i64 0, i64 0)) #34
  %cmp67.not = icmp eq i32 %call66, 0
  br i1 %cmp67.not, label %if.end69, label %if.then68

if.then68:                                        ; preds = %if.end64
  call void @terminate(i32 1) #32
  br label %if.end69

if.end69:                                         ; preds = %if.then68, %if.end64
  %28 = load i32, i32* %byterevflag, align 4, !tbaa !13
  %n_descript = getelementptr inbounds %struct.anon.234, %struct.anon.234* %gauge_field, i64 0, i32 0
  %call71 = call i32 @psread_byteorder(i32 %28, i32 %parallel, %struct._IO_FILE* %2, i8* nonnull %0, i64 4, i8* nonnull %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.69, i64 0, i64 0)) #34
  %cmp72.not = icmp eq i32 %call71, 0
  br i1 %cmp72.not, label %if.end74, label %if.then73

if.then73:                                        ; preds = %if.end69
  call void @terminate(i32 1) #32
  br label %if.end74

if.end74:                                         ; preds = %if.then73, %if.end69
  %29 = load i32, i32* %n_descript, align 8, !tbaa !421
  %cmp76 = icmp sgt i32 %29, 200
  br i1 %cmp76, label %if.then77, label %if.end81

if.then77:                                        ; preds = %if.end74
  %call79 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([55 x i8], [55 x i8]* @.str.70, i64 0, i64 0), i32 %29) #34
  %call80 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @.str.71, i64 0, i64 0), i32 200) #34
  call void @terminate(i32 1) #32
  br label %if.end81

if.end81:                                         ; preds = %if.then77, %if.end74
  %arraydecay82 = getelementptr inbounds %struct.anon.234, %struct.anon.234* %gauge_field, i64 0, i32 1, i64 0
  %call84 = call i32 @psread_data(i32 %parallel, %struct._IO_FILE* %2, i8* nonnull %arraydecay82, i64 200, i8* nonnull %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i64 0, i64 0)) #34
  %cmp85.not = icmp eq i32 %call84, 0
  br i1 %cmp85.not, label %if.end87, label %if.then86

if.then86:                                        ; preds = %if.end81
  call void @terminate(i32 1) #32
  br label %if.end87

if.end87:                                         ; preds = %if.then86, %if.end81
  %30 = load i32, i32* %n_descript, align 8, !tbaa !421
  %sub = add nsw i32 %30, -1
  %idxprom90 = sext i32 %sub to i64
  %arrayidx91 = getelementptr inbounds %struct.anon.234, %struct.anon.234* %gauge_field, i64 0, i32 1, i64 %idxprom90
  store i8 0, i8* %arrayidx91, align 1, !tbaa !26
  %call94 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @.str.73, i64 0, i64 0), i8* nonnull %arraydecay82) #34
  %31 = load i32, i32* %byterevflag, align 4, !tbaa !13
  %n_param = getelementptr inbounds %struct.anon.234, %struct.anon.234* %gauge_field, i64 0, i32 2
  %32 = bitcast i32* %n_param to i8*
  %call96 = call i32 @psread_byteorder(i32 %31, i32 %parallel, %struct._IO_FILE* %2, i8* nonnull %32, i64 4, i8* nonnull %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0)) #34
  %cmp97.not = icmp eq i32 %call96, 0
  br i1 %cmp97.not, label %if.end99, label %if.then98

if.then98:                                        ; preds = %if.end87
  call void @terminate(i32 1) #32
  br label %if.end99

if.end99:                                         ; preds = %if.then98, %if.end87
  %33 = load i32, i32* %n_param, align 4, !tbaa !423
  %cmp101 = icmp sgt i32 %33, 2
  br i1 %cmp101, label %if.then102, label %if.end106

if.then102:                                       ; preds = %if.end99
  %call104 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([61 x i8], [61 x i8]* @.str.75, i64 0, i64 0), i32 %33) #34
  %call105 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @.str.71, i64 0, i64 0), i32 2) #34
  call void @terminate(i32 1) #32
  %.pre189 = load i32, i32* %n_param, align 4, !tbaa !423
  br label %if.end106

if.end106:                                        ; preds = %if.then102, %if.end99
  %34 = phi i32 [ %.pre189, %if.then102 ], [ %33, %if.end99 ]
  %cmp109183 = icmp sgt i32 %34, 0
  br i1 %cmp109183, label %for.body110, label %cleanup

for.body110:                                      ; preds = %if.end106, %if.end117
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end117 ], [ 0, %if.end106 ]
  %35 = load i32, i32* %byterevflag, align 4, !tbaa !13
  %arrayidx112 = getelementptr inbounds %struct.anon.234, %struct.anon.234* %gauge_field, i64 0, i32 3, i64 %indvars.iv
  %36 = bitcast double* %arrayidx112 to i8*
  %call114 = call i32 @psread_byteorder(i32 %35, i32 %parallel, %struct._IO_FILE* %2, i8* nonnull %36, i64 8, i8* nonnull %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.76, i64 0, i64 0)) #34
  %cmp115.not = icmp eq i32 %call114, 0
  br i1 %cmp115.not, label %if.end117, label %if.then116

if.then116:                                       ; preds = %for.body110
  call void @terminate(i32 1) #32
  br label %if.end117

if.end117:                                        ; preds = %if.then116, %for.body110
  %37 = load double, double* %arrayidx112, align 8, !tbaa !11
  %38 = trunc i64 %indvars.iv to i32
  %call121 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([28 x i8], [28 x i8]* @.str.77, i64 0, i64 0), i32 %38, double %37) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %39 = load i32, i32* %n_param, align 4, !tbaa !423
  %40 = sext i32 %39 to i64
  %cmp109 = icmp slt i64 %indvars.iv.next, %40
  br i1 %cmp109, label %for.body110, label %cleanup, !llvm.loop !424

cleanup:                                          ; preds = %if.end117, %if.end106, %if.else10
  %retval.0 = phi i32 [ 1, %if.else10 ], [ 0, %if.end106 ], [ 0, %if.end117 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %0) #31
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @read_gauge_hdr(%struct.gauge_file* nocapture %gf, i32 %parallel) local_unnamed_addr #1 {
entry:
  %btmp = alloca i32, align 4
  %byterevflag = alloca i32, align 4
  %myname = alloca [15 x i8], align 1
  %dims = alloca [4 x i32], align 16
  %chksum = alloca i32, align 4
  %0 = bitcast i32* %btmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #31
  %1 = bitcast i32* %byterevflag to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #31
  %2 = getelementptr inbounds [15 x i8], [15 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %2) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(15) %2, i8* noundef nonnull align 1 dereferenceable(15) getelementptr inbounds ([15 x i8], [15 x i8]* @__const.read_gauge_hdr.myname, i64 0, i64 0), i64 15, i1 false)
  %3 = bitcast [4 x i32]* %dims to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #31
  %4 = bitcast i32* %chksum to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #31
  %fp1 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp1, align 8, !tbaa !406
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 1
  %6 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %magic_number = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 0
  %7 = bitcast %struct.gauge_header* %6 to i8*
  %call = call i32 @psread_data(i32 %parallel, %struct._IO_FILE* %5, i8* %7, i64 4, i8* nonnull %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54.270, i64 0, i64 0)) #34
  %cmp.not = icmp eq i32 %call, 0
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @terminate(i32 1) #32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %magic_number, align 4, !tbaa !404
  store i32 %8, i32* %btmp, align 4, !tbaa !13
  call void @byterevn(i32* nonnull %btmp, i32 1) #32
  %cmp4 = icmp eq i32 %8, 1111836489
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end
  %puts242 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @str.189, i64 0, i64 0))
  store i32 0, i32* %byterevflag, align 4, !tbaa !13
  br label %if.then42

if.else:                                          ; preds = %if.end
  %9 = load i32, i32* %btmp, align 4, !tbaa !13
  %cmp7 = icmp eq i32 %9, 1111836489
  br i1 %cmp7, label %if.then8, label %if.else14

if.then8:                                         ; preds = %if.else
  %puts241 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([45 x i8], [45 x i8]* @str.188, i64 0, i64 0))
  store i32 1, i32* %byterevflag, align 4, !tbaa !13
  %10 = load i32, i32* %btmp, align 4, !tbaa !13
  store i32 %10, i32* %magic_number, align 4, !tbaa !404
  %call12 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @.str.80, i64 0, i64 0), i8* nonnull %2) #34
  %call13 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.58.272, i64 0, i64 0), i32 4, i32 8) #34
  call void @terminate(i32 1) #32
  br label %if.then42

if.else14:                                        ; preds = %if.else
  %cmp15 = icmp eq i32 %8, 20103
  br i1 %cmp15, label %if.then16, label %if.else17

if.then16:                                        ; preds = %if.else14
  store i32 0, i32* %byterevflag, align 4, !tbaa !13
  br label %if.else86

if.else17:                                        ; preds = %if.else14
  %cmp18 = icmp eq i32 %9, 20103
  br i1 %cmp18, label %if.then19, label %if.else25

if.then19:                                        ; preds = %if.else17
  store i32 1, i32* %byterevflag, align 4, !tbaa !13
  store i32 20103, i32* %magic_number, align 4, !tbaa !404
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([27 x i8], [27 x i8]* @str.187, i64 0, i64 0))
  %call23 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @.str.80, i64 0, i64 0), i8* nonnull %2) #34
  %call24 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.58.272, i64 0, i64 0), i32 4, i32 8) #34
  call void @terminate(i32 1) #32
  br label %if.else86

if.else25:                                        ; preds = %if.else17
  %call26 = call i32 @read_v3_gauge_hdr(%struct.gauge_file* nonnull %gf, i32 %parallel, i32* nonnull %byterevflag) #34
  %cmp27.not = icmp eq i32 %call26, 0
  br i1 %cmp27.not, label %cleanup, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else25
  %call28 = call i32 @read_1996_gauge_hdr(%struct.gauge_file* nonnull %gf, i32 %parallel, i32* nonnull %byterevflag) #34
  %cmp29.not = icmp eq i32 %call28, 0
  br i1 %cmp29.not, label %cleanup, label %if.then30

if.then30:                                        ; preds = %land.lhs.true
  %call32 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([67 x i8], [67 x i8]* @.str.82, i64 0, i64 0), i8* nonnull %2) #34
  %call33 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([25 x i8], [25 x i8]* @.str.83, i64 0, i64 0), i32 20103, i32 %8) #34
  %conv = sext i32 %8 to i64
  %11 = inttoptr i64 %conv to i8*
  %call34 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([25 x i8], [25 x i8]* @.str.84, i64 0, i64 0), i8* nonnull inttoptr (i64 20103 to i8*), i8* %11) #34
  call void @terminate(i32 1) #32
  br label %cleanup

if.then42:                                        ; preds = %if.then8, %if.then5
  %12 = phi i32 [ 1, %if.then8 ], [ 0, %if.then5 ]
  %13 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %order = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %13, i64 0, i32 4
  store i32 0, i32* %order, align 4, !tbaa !405
  %tobool.not = icmp eq i32 %parallel, 0
  br i1 %tobool.not, label %if.end47, label %if.then44

if.then44:                                        ; preds = %if.then42
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !15
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.85, i64 0, i64 0), i8* nonnull %2) #35
  call void @terminate(i32 1) #32
  br label %if.end47

if.end47:                                         ; preds = %if.then44, %if.then42
  %call48 = call %struct.QCDheader* @qcdhdr_get_hdr(%struct._IO_FILE* %5) #34
  %arraydecay49 = getelementptr inbounds [4 x i32], [4 x i32]* %dims, i64 0, i64 0
  %call50 = call i32 @qcdhdr_get_int(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.86, i64 0, i64 0), %struct.QCDheader* %call48, i32* nonnull %arraydecay49) #34
  %cmp51 = icmp eq i32 %call50, -1
  br i1 %cmp51, label %if.then53, label %if.end54

if.then53:                                        ; preds = %if.end47
  call void @error_exit(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.87, i64 0, i64 0)) #34
  br label %if.end54

if.end54:                                         ; preds = %if.then53, %if.end47
  %add.ptr56 = getelementptr inbounds [4 x i32], [4 x i32]* %dims, i64 0, i64 1
  %call57 = call i32 @qcdhdr_get_int(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.88, i64 0, i64 0), %struct.QCDheader* %call48, i32* nonnull %add.ptr56) #34
  %cmp58 = icmp eq i32 %call57, -1
  br i1 %cmp58, label %if.then60, label %if.end61

if.then60:                                        ; preds = %if.end54
  call void @error_exit(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.89, i64 0, i64 0)) #34
  br label %if.end61

if.end61:                                         ; preds = %if.then60, %if.end54
  %add.ptr63 = getelementptr inbounds [4 x i32], [4 x i32]* %dims, i64 0, i64 2
  %call64 = call i32 @qcdhdr_get_int(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.90, i64 0, i64 0), %struct.QCDheader* %call48, i32* nonnull %add.ptr63) #34
  %cmp65 = icmp eq i32 %call64, -1
  br i1 %cmp65, label %if.then67, label %if.end68

if.then67:                                        ; preds = %if.end61
  call void @error_exit(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.91, i64 0, i64 0)) #34
  br label %if.end68

if.end68:                                         ; preds = %if.then67, %if.end61
  %add.ptr70 = getelementptr inbounds [4 x i32], [4 x i32]* %dims, i64 0, i64 3
  %call71 = call i32 @qcdhdr_get_int(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.92, i64 0, i64 0), %struct.QCDheader* %call48, i32* nonnull %add.ptr70) #34
  %cmp72 = icmp eq i32 %call71, -1
  br i1 %cmp72, label %if.then74, label %for.body.preheader

if.then74:                                        ; preds = %if.end68
  call void @error_exit(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.93, i64 0, i64 0)) #34
  br label %for.body.preheader

for.body.preheader:                               ; preds = %if.then74, %if.end68
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv251 = phi i64 [ %indvars.iv.next252, %for.body ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %dims, i64 0, i64 %indvars.iv251
  %15 = load i32, i32* %arrayidx, align 4, !tbaa !13
  %arrayidx80 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 2, i64 %indvars.iv251
  store i32 %15, i32* %arrayidx80, align 4, !tbaa !13
  %indvars.iv.next252 = add nuw nsw i64 %indvars.iv251, 1
  %exitcond253.not = icmp eq i64 %indvars.iv.next252, 4
  br i1 %exitcond253.not, label %for.end, label %for.body, !llvm.loop !425

for.end:                                          ; preds = %for.body
  %call81 = call i32 @qcdhdr_get_int32x(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.94, i64 0, i64 0), %struct.QCDheader* %call48, i32* nonnull %chksum) #34
  %cmp82 = icmp eq i32 %call81, -1
  br i1 %cmp82, label %if.then84, label %if.end85

if.then84:                                        ; preds = %for.end
  call void @error_exit(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.95, i64 0, i64 0)) #34
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %for.end
  %16 = load i32, i32* %chksum, align 4, !tbaa !13
  %sum31 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  store i32 %16, i32* %sum31, align 4, !tbaa !403
  br label %if.end95

if.else86:                                        ; preds = %if.then16, %if.then19
  %17 = phi i32 [ 0, %if.then16 ], [ 1, %if.then19 ]
  %arraydecay88 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 2, i64 0
  %18 = bitcast i32* %arraydecay88 to i8*
  %call90 = call i32 @psread_byteorder(i32 %17, i32 %parallel, %struct._IO_FILE* %5, i8* nonnull %18, i64 16, i8* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.241, i64 0, i64 0)) #34
  %cmp91.not = icmp eq i32 %call90, 0
  br i1 %cmp91.not, label %if.end95, label %if.then93

if.then93:                                        ; preds = %if.else86
  call void @terminate(i32 1) #32
  br label %if.end95

if.end95:                                         ; preds = %if.else86, %if.then93, %if.end85
  %19 = phi i32 [ %12, %if.end85 ], [ %17, %if.then93 ], [ %17, %if.else86 ]
  %tobool155.not245 = phi i1 [ false, %if.end85 ], [ true, %if.then93 ], [ true, %if.else86 ]
  %hdr.0 = phi %struct.QCDheader* [ %call48, %if.end85 ], [ undef, %if.then93 ], [ undef, %if.else86 ]
  %arrayidx97 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 2, i64 0
  %20 = load i32, i32* %arrayidx97, align 4, !tbaa !13
  %21 = load i32, i32* @nx, align 4, !tbaa !13
  %cmp98.not = icmp eq i32 %20, %21
  br i1 %cmp98.not, label %lor.lhs.false, label %if.end95.if.then114_crit_edge

if.end95.if.then114_crit_edge:                    ; preds = %if.end95
  %.pre = load i32, i32* @ny, align 4
  br label %if.then114

lor.lhs.false:                                    ; preds = %if.end95
  %arrayidx101 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 2, i64 1
  %22 = load i32, i32* %arrayidx101, align 4, !tbaa !13
  %23 = load i32, i32* @ny, align 4, !tbaa !13
  %cmp102.not = icmp eq i32 %22, %23
  br i1 %cmp102.not, label %lor.lhs.false104, label %if.then114

lor.lhs.false104:                                 ; preds = %lor.lhs.false
  %arrayidx106 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 2, i64 2
  %24 = load i32, i32* %arrayidx106, align 4, !tbaa !13
  %25 = load i32, i32* @nz, align 4, !tbaa !13
  %cmp107.not = icmp eq i32 %24, %25
  br i1 %cmp107.not, label %lor.lhs.false109, label %if.then114

lor.lhs.false109:                                 ; preds = %lor.lhs.false104
  %arrayidx111 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 2, i64 3
  %26 = load i32, i32* %arrayidx111, align 4, !tbaa !13
  %27 = load i32, i32* @nt, align 4, !tbaa !13
  %cmp112.not = icmp eq i32 %26, %27
  br i1 %cmp112.not, label %if.end154, label %if.then114

if.then114:                                       ; preds = %if.end95.if.then114_crit_edge, %lor.lhs.false109, %lor.lhs.false104, %lor.lhs.false
  %28 = phi i32 [ %.pre, %if.end95.if.then114_crit_edge ], [ %22, %lor.lhs.false109 ], [ %22, %lor.lhs.false104 ], [ %23, %lor.lhs.false ]
  %cmp115 = icmp ne i32 %21, -1
  %cmp118 = icmp ne i32 %28, -1
  %or.cond = select i1 %cmp115, i1 true, i1 %cmp118
  %29 = load i32, i32* @nz, align 4
  %cmp121 = icmp ne i32 %29, -1
  %or.cond184 = select i1 %or.cond, i1 true, i1 %cmp121
  %30 = load i32, i32* @nt, align 4
  %cmp124 = icmp ne i32 %30, -1
  %or.cond185 = select i1 %or.cond184, i1 true, i1 %cmp124
  br i1 %or.cond185, label %if.then126, label %if.else142

if.then126:                                       ; preds = %if.then114
  %call128 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([34 x i8], [34 x i8]* @.str.96, i64 0, i64 0), i8* nonnull %2) #34
  br label %for.body132

for.body132:                                      ; preds = %if.then126, %for.body132
  %indvars.iv = phi i64 [ 0, %if.then126 ], [ %indvars.iv.next, %for.body132 ]
  %arrayidx135 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 2, i64 %indvars.iv
  %31 = load i32, i32* %arrayidx135, align 4, !tbaa !13
  %call136 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.60, i64 0, i64 0), i32 %31) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.end139, label %for.body132, !llvm.loop !426

for.end139:                                       ; preds = %for.body132
  %putchar = call i32 @putchar(i32 10)
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call141 = call i32 @fflush(%struct._IO_FILE* %32) #34
  call void @terminate(i32 1) #32
  br label %if.end154

if.else142:                                       ; preds = %if.then114
  store i32 %20, i32* @nx, align 4, !tbaa !13
  %arrayidx146 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 2, i64 1
  %33 = load i32, i32* %arrayidx146, align 4, !tbaa !13
  store i32 %33, i32* @ny, align 4, !tbaa !13
  %arrayidx148 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 2, i64 2
  %34 = load i32, i32* %arrayidx148, align 4, !tbaa !13
  store i32 %34, i32* @nz, align 4, !tbaa !13
  %arrayidx150 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 2, i64 3
  %35 = load i32, i32* %arrayidx150, align 4, !tbaa !13
  store i32 %35, i32* @nt, align 4, !tbaa !13
  %mul = mul nsw i32 %33, %20
  %mul151 = mul nsw i32 %mul, %34
  %mul152 = mul nsw i32 %mul151, %35
  store i32 %mul152, i32* @volume, align 4, !tbaa !13
  br label %if.end154

if.end154:                                        ; preds = %for.end139, %if.else142, %lor.lhs.false109
  br i1 %tobool155.not245, label %if.else157, label %if.then156

if.then156:                                       ; preds = %if.end154
  call void @qcdhdr_destroy_hdr(%struct.QCDheader* %hdr.0) #34
  br label %cleanup

if.else157:                                       ; preds = %if.end154
  %arraydecay158 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 1, i64 0
  %call160 = call i32 @psread_data(i32 %parallel, %struct._IO_FILE* %5, i8* nonnull %arraydecay158, i64 64, i8* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.97, i64 0, i64 0)) #34
  %cmp161.not = icmp eq i32 %call160, 0
  br i1 %cmp161.not, label %if.end164, label %if.then163

if.then163:                                       ; preds = %if.else157
  call void @terminate(i32 1) #32
  br label %if.end164

if.end164:                                        ; preds = %if.then163, %if.else157
  %header_bytes = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 3
  store i32 88, i32* %header_bytes, align 4, !tbaa !394
  %order165 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 4
  %36 = bitcast i32* %order165 to i8*
  %call167 = call i32 @psread_byteorder(i32 %19, i32 %parallel, %struct._IO_FILE* %5, i8* nonnull %36, i64 4, i8* nonnull %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.98, i64 0, i64 0)) #34
  %cmp168.not = icmp eq i32 %call167, 0
  br i1 %cmp168.not, label %cleanup, label %if.then170

if.then170:                                       ; preds = %if.end164
  call void @terminate(i32 1) #32
  br label %cleanup

cleanup:                                          ; preds = %if.then156, %if.then170, %if.end164, %if.else25, %land.lhs.true, %if.then30
  %retval.0 = load i32, i32* %byterevflag, align 4, !tbaa !13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #31
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #31
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct.gauge_file* @r_serial_i(i8* %filename) local_unnamed_addr #1 {
entry:
  %byterevflag = alloca i32, align 4
  %0 = bitcast i32* %byterevflag to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #31
  %call = tail call %struct.gauge_file* @setup_input_gauge_file(i8* %filename) #34
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 1
  %1 = bitcast %struct.gauge_header** %header to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !398
  %parallel = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 5
  store i32 0, i32* %parallel, align 8, !tbaa !409
  %3 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call1 = tail call %struct._IO_FILE* @fopen(i8* %filename, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i64 0, i64 0)) #34
  %cmp2 = icmp eq %struct._IO_FILE* %call1, null
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %4 = load i32, i32* @this_node, align 4, !tbaa !13
  %call4 = tail call i32* @__errno_location() #37
  %5 = load i32, i32* %call4, align 4, !tbaa !13
  %call5 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([50 x i8], [50 x i8]* @.str.100, i64 0, i64 0), i32 %4, i8* %filename, i32 %5) #34
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call6 = tail call i32 @fflush(%struct._IO_FILE* %6) #34
  tail call void @terminate(i32 1) #32
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %fp7 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp7, align 8, !tbaa !406
  %call8 = tail call i32 @read_gauge_hdr(%struct.gauge_file* nonnull %call, i32 0) #34
  store i32 %call8, i32* %byterevflag, align 4, !tbaa !13
  br label %if.end10

if.else:                                          ; preds = %entry
  %fp9 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp9, align 8, !tbaa !406
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.end
  call void @broadcast_bytes(i8* nonnull %0, i32 4) #32
  %7 = load i32, i32* %byterevflag, align 4, !tbaa !13
  %byterevflag11 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 3
  store i32 %7, i32* %byterevflag11, align 8, !tbaa !407
  call void @broadcast_bytes(i8* %2, i32 92) #32
  call void @read_site_list(i32 0, %struct.gauge_file* nonnull %call) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #31
  ret %struct.gauge_file* %call
}

; Function Attrs: noinline nounwind optsize uwtable
define void @r_serial(%struct.gauge_file* %gf) local_unnamed_addr #1 {
entry:
  %test_gc = alloca %struct.gauge_check, align 4
  %myname = alloca [9 x i8], align 1
  %0 = bitcast %struct.gauge_check* %test_gc to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %1 = getelementptr inbounds [9 x i8], [9 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %1) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(9) %1, i8* noundef nonnull align 1 dereferenceable(9) getelementptr inbounds ([9 x i8], [9 x i8]* @__const.r_serial.myname, i64 0, i64 0), i64 9, i1 false)
  %fp1 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp1, align 8, !tbaa !406
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 1
  %3 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %filename2 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 2
  %4 = load i8*, i8** %filename2, align 8, !tbaa !401
  %byterevflag3 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 3
  %5 = load i32, i32* %byterevflag3, align 8, !tbaa !407
  %6 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp = icmp eq i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end38

if.then:                                          ; preds = %entry
  %magic_number = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 0
  %7 = load i32, i32* %magic_number, align 4, !tbaa !404
  %switch.selectcmp = icmp eq i32 %7, 53546
  %switch.select = select i1 %switch.selectcmp, i64 4, i64 0
  %switch.selectcmp271 = icmp eq i32 %7, 20103
  %switch.select272 = select i1 %switch.selectcmp271, i64 8, i64 %switch.select
  %order = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 4
  %8 = load i32, i32* %order, align 4, !tbaa !405
  %cmp12 = icmp eq i32 %8, 0
  %9 = load i32, i32* @volume, align 4
  %conv = sext i32 %9 to i64
  %mul = shl nsw i64 %conv, 2
  %coord_list_size.0 = select i1 %cmp12, i64 0, i64 %mul
  %header_bytes = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 3
  %10 = load i32, i32* %header_bytes, align 4, !tbaa !394
  %conv17 = sext i32 %10 to i64
  %add = add nsw i64 %coord_list_size.0, %conv17
  %add18 = add nsw i64 %add, %switch.select272
  %parallel = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 5
  %11 = load i32, i32* %parallel, align 8, !tbaa !409
  %tobool.not = icmp eq i32 %11, 0
  br i1 %tobool.not, label %if.end20, label %if.then19

if.then19:                                        ; preds = %if.then
  %call = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([48 x i8], [48 x i8]* @.str.101, i64 0, i64 0), i8* nonnull %1) #34
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.then
  %call21 = call noalias align 16 dereferenceable_or_null(2359296) i8* @calloc(i64 16384, i64 144) #32
  %12 = bitcast i8* %call21 to %struct.su3_matrix*
  %cmp22 = icmp eq i8* %call21, null
  br i1 %cmp22, label %if.then24, label %if.end28

if.then24:                                        ; preds = %if.end20
  %13 = load i32, i32* @this_node, align 4, !tbaa !13
  %call26 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([31 x i8], [31 x i8]* @.str.102, i64 0, i64 0), i8* nonnull %1, i32 %13) #34
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call27 = call i32 @fflush(%struct._IO_FILE* %14) #34
  call void @terminate(i32 1) #32
  br label %if.end28

if.end28:                                         ; preds = %if.then24, %if.end20
  %call29 = call i32 @fseek(%struct._IO_FILE* %2, i64 %add18, i32 0) #34
  %cmp30 = icmp slt i32 %call29, 0
  br i1 %cmp30, label %if.then32, label %if.end38

if.then32:                                        ; preds = %if.end28
  %call34 = tail call i32* @__errno_location() #37
  %15 = load i32, i32* %call34, align 4, !tbaa !13
  %call35 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([43 x i8], [43 x i8]* @.str.103, i64 0, i64 0), i8* nonnull %1, i32 %15, i8* %4) #34
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call36 = call i32 @fflush(%struct._IO_FILE* %16) #34
  call void @terminate(i32 1) #32
  br label %if.end38

if.end38:                                         ; preds = %if.end28, %if.then32, %entry
  %checksum_offset.0 = phi i64 [ undef, %entry ], [ %add, %if.then32 ], [ %add, %if.end28 ]
  %lbuf.0 = phi %struct.su3_matrix* [ undef, %entry ], [ %12, %if.then32 ], [ %12, %if.end28 ]
  %sum29 = getelementptr inbounds %struct.gauge_check, %struct.gauge_check* %test_gc, i64 0, i32 1
  store i32 0, i32* %sum29, align 4, !tbaa !410
  %sum31 = getelementptr inbounds %struct.gauge_check, %struct.gauge_check* %test_gc, i64 0, i32 0
  store i32 0, i32* %sum31, align 4, !tbaa !411
  call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %rank2rcv = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 4
  %17 = bitcast %struct.su3_matrix* %lbuf.0 to i8*
  %cmp105 = icmp eq i32 %5, 1
  %18 = load i32, i32* @volume, align 4, !tbaa !13
  %cmp39277 = icmp sgt i32 %18, 0
  br i1 %cmp39277, label %for.body, label %for.end152

for.body:                                         ; preds = %if.end38, %for.inc150
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc150 ], [ 0, %if.end38 ]
  %rank31.0286 = phi i32 [ %rank31.2, %for.inc150 ], [ 0, %if.end38 ]
  %rank29.0285 = phi i32 [ %rank29.2, %for.inc150 ], [ 0, %if.end38 ]
  %where_in_buf.1284 = phi i32 [ %where_in_buf.3, %for.inc150 ], [ 0, %if.end38 ]
  %buf_length.1283 = phi i32 [ %buf_length.3, %for.inc150 ], [ 0, %if.end38 ]
  %i.0278 = phi i32 [ %i.2, %for.inc150 ], [ undef, %if.end38 ]
  %19 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %order42 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %19, i64 0, i32 4
  %20 = load i32, i32* %order42, align 4, !tbaa !405
  %cmp43 = icmp eq i32 %20, 0
  %21 = trunc i64 %indvars.iv to i32
  br i1 %cmp43, label %if.end47, label %if.else46

if.else46:                                        ; preds = %for.body
  %22 = load i32*, i32** %rank2rcv, align 8, !tbaa !408
  %arrayidx = getelementptr inbounds i32, i32* %22, i64 %indvars.iv
  %23 = load i32, i32* %arrayidx, align 4, !tbaa !13
  br label %if.end47

if.end47:                                         ; preds = %for.body, %if.else46
  %rcv_coords.0 = phi i32 [ %23, %if.else46 ], [ %21, %for.body ]
  %24 = load i32, i32* @nx, align 4, !tbaa !13
  %rem = srem i32 %rcv_coords.0, %24
  %div = sdiv i32 %rcv_coords.0, %24
  %25 = load i32, i32* @ny, align 4, !tbaa !13
  %rem48 = srem i32 %div, %25
  %div49 = sdiv i32 %div, %25
  %26 = load i32, i32* @nz, align 4, !tbaa !13
  %rem50 = srem i32 %div49, %26
  %div51 = sdiv i32 %div49, %26
  %27 = load i32, i32* @nt, align 4, !tbaa !13
  %rem52 = srem i32 %div51, %27
  %call53 = call i32 @node_number(i32 %rem, i32 %rem48, i32 %rem50, i32 %rem52) #32
  %28 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp54 = icmp eq i32 %28, 0
  br i1 %cmp54, label %if.then56, label %if.else91

if.then56:                                        ; preds = %if.end47
  %cmp57 = icmp eq i32 %where_in_buf.1284, %buf_length.1283
  br i1 %cmp57, label %if.then59, label %if.end75

if.then59:                                        ; preds = %if.then56
  %29 = load i32, i32* @volume, align 4, !tbaa !13
  %sub = sub nsw i32 %29, %21
  %30 = icmp slt i32 %sub, 4096
  %spec.store.select = select i1 %30, i32 %sub, i32 4096
  %conv64 = sext i32 %spec.store.select to i64
  %call65 = call i64 @fread(i8* %17, i64 576, i64 %conv64, %struct._IO_FILE* %2) #34
  %conv66 = trunc i64 %call65 to i32
  %cmp67.not = icmp eq i32 %spec.store.select, %conv66
  br i1 %cmp67.not, label %if.end75, label %if.then69

if.then69:                                        ; preds = %if.then59
  %31 = load i32, i32* @this_node, align 4, !tbaa !13
  %call71 = tail call i32* @__errno_location() #37
  %32 = load i32, i32* %call71, align 4, !tbaa !13
  %call72 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([55 x i8], [55 x i8]* @.str.104, i64 0, i64 0), i8* nonnull %1, i32 %31, i32 %32, i8* %4) #34
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call73 = call i32 @fflush(%struct._IO_FILE* %33) #34
  call void @terminate(i32 1) #32
  br label %if.end75

if.end75:                                         ; preds = %if.then59, %if.then69, %if.then56
  %buf_length.2 = phi i32 [ %buf_length.1283, %if.then56 ], [ %spec.store.select, %if.then69 ], [ %spec.store.select, %if.then59 ]
  %where_in_buf.2 = phi i32 [ %where_in_buf.1284, %if.then56 ], [ 0, %if.then69 ], [ 0, %if.then59 ]
  %cmp76 = icmp eq i32 %call53, 0
  br i1 %cmp76, label %if.then78, label %if.else86

if.then78:                                        ; preds = %if.end75
  %call79 = call i32 @node_index(i32 %rem, i32 %rem48, i32 %rem50, i32 %rem52) #32
  %34 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom80 = sext i32 %call79 to i64
  %arrayidx82 = getelementptr inbounds %struct.site, %struct.site* %34, i64 %idxprom80, i32 8, i64 0
  %35 = bitcast %struct.su3_matrix* %arrayidx82 to i8*
  %mul83 = shl nsw i32 %where_in_buf.2, 2
  %idxprom84 = sext i32 %mul83 to i64
  %arrayidx85 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %lbuf.0, i64 %idxprom84
  %36 = bitcast %struct.su3_matrix* %arrayidx85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(576) %35, i8* noundef nonnull align 1 dereferenceable(576) %36, i64 576, i1 false)
  br label %if.end90

if.else86:                                        ; preds = %if.end75
  %mul87 = shl nsw i32 %where_in_buf.2, 2
  %idxprom88 = sext i32 %mul87 to i64
  %arrayidx89 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %lbuf.0, i64 %idxprom88
  %37 = bitcast %struct.su3_matrix* %arrayidx89 to i8*
  call void @send_field(i8* %37, i32 576, i32 %call53) #32
  br label %if.end90

if.end90:                                         ; preds = %if.else86, %if.then78
  %i.1 = phi i32 [ %call79, %if.then78 ], [ %i.0278, %if.else86 ]
  %inc = add nsw i32 %where_in_buf.2, 1
  br label %if.end101

if.else91:                                        ; preds = %if.end47
  %cmp92 = icmp eq i32 %28, %call53
  br i1 %cmp92, label %if.then94, label %if.end101

if.then94:                                        ; preds = %if.else91
  %call95 = call i32 @node_index(i32 %rem, i32 %rem48, i32 %rem50, i32 %rem52) #32
  %38 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom96 = sext i32 %call95 to i64
  %arrayidx99 = getelementptr inbounds %struct.site, %struct.site* %38, i64 %idxprom96, i32 8, i64 0
  %39 = bitcast %struct.su3_matrix* %arrayidx99 to i8*
  call void @get_field(i8* nonnull %39, i32 576) #32
  br label %if.end101

if.end101:                                        ; preds = %if.else91, %if.then94, %if.end90
  %i.2 = phi i32 [ %i.1, %if.end90 ], [ %call95, %if.then94 ], [ %i.0278, %if.else91 ]
  %buf_length.3 = phi i32 [ %buf_length.2, %if.end90 ], [ %buf_length.1283, %if.then94 ], [ %buf_length.1283, %if.else91 ]
  %where_in_buf.3 = phi i32 [ %inc, %if.end90 ], [ %where_in_buf.1284, %if.then94 ], [ %where_in_buf.1284, %if.else91 ]
  %40 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp102 = icmp eq i32 %40, %call53
  br i1 %cmp102, label %if.then104, label %if.else140

if.then104:                                       ; preds = %if.end101
  br i1 %cmp105, label %if.then107, label %if.then104.if.end112_crit_edge

if.then104.if.end112_crit_edge:                   ; preds = %if.then104
  %.pre288 = sext i32 %i.2 to i64
  br label %if.end112

if.then107:                                       ; preds = %if.then104
  %41 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom108 = sext i32 %i.2 to i64
  %arrayidx111 = getelementptr inbounds %struct.site, %struct.site* %41, i64 %idxprom108, i32 8, i64 0
  %42 = bitcast %struct.su3_matrix* %arrayidx111 to i32*
  call void @byterevn(i32* nonnull %42, i32 144) #32
  br label %if.end112

if.end112:                                        ; preds = %if.then104.if.end112_crit_edge, %if.then107
  %idxprom113.pre-phi = phi i64 [ %.pre288, %if.then104.if.end112_crit_edge ], [ %idxprom108, %if.then107 ]
  %43 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx116 = getelementptr inbounds %struct.site, %struct.site* %43, i64 %idxprom113.pre-phi, i32 8, i64 0
  %44 = bitcast %struct.su3_matrix* %arrayidx116 to i32*
  %.pre = load i32, i32* %sum29, align 4, !tbaa !410
  %.pre287 = load i32, i32* %sum31, align 4, !tbaa !411
  br label %for.body120

for.body120:                                      ; preds = %if.end112, %for.body120
  %45 = phi i32 [ %.pre287, %if.end112 ], [ %xor128, %for.body120 ]
  %46 = phi i32 [ %.pre, %if.end112 ], [ %xor, %for.body120 ]
  %rank31.1276 = phi i32 [ %rank31.0286, %if.end112 ], [ %spec.store.select178, %for.body120 ]
  %rank29.1275 = phi i32 [ %rank29.0285, %if.end112 ], [ %spec.store.select177, %for.body120 ]
  %val.0274 = phi i32* [ %44, %if.end112 ], [ %incdec.ptr, %for.body120 ]
  %k.0273 = phi i32 [ 0, %if.end112 ], [ %inc139, %for.body120 ]
  %47 = load i32, i32* %val.0274, align 4, !tbaa !13
  %shl = shl i32 %47, %rank29.1275
  %sub121 = sub nsw i32 32, %rank29.1275
  %shr = lshr i32 %47, %sub121
  %or = or i32 %shl, %shr
  %xor = xor i32 %or, %46
  store i32 %xor, i32* %sum29, align 4, !tbaa !410
  %48 = load i32, i32* %val.0274, align 4, !tbaa !13
  %shl123 = shl i32 %48, %rank31.1276
  %sub124 = sub nsw i32 32, %rank31.1276
  %shr125 = lshr i32 %48, %sub124
  %or126 = or i32 %shl123, %shr125
  %xor128 = xor i32 %or126, %45
  store i32 %xor128, i32* %sum31, align 4, !tbaa !411
  %inc129 = add nsw i32 %rank29.1275, 1
  %cmp130 = icmp sgt i32 %rank29.1275, 27
  %spec.store.select177 = select i1 %cmp130, i32 0, i32 %inc129
  %inc134 = add nsw i32 %rank31.1276, 1
  %cmp135 = icmp sgt i32 %rank31.1276, 29
  %spec.store.select178 = select i1 %cmp135, i32 0, i32 %inc134
  %inc139 = add nuw nsw i32 %k.0273, 1
  %incdec.ptr = getelementptr inbounds i32, i32* %val.0274, i64 1
  %exitcond.not = icmp eq i32 %inc139, 144
  br i1 %exitcond.not, label %for.inc150, label %for.body120, !llvm.loop !427

if.else140:                                       ; preds = %if.end101
  %add142 = add i32 %rank29.0285, 144
  %add145 = add i32 %rank31.0286, 144
  %rem147 = srem i32 %add142, 29
  %rem148 = srem i32 %add145, 31
  br label %for.inc150

for.inc150:                                       ; preds = %for.body120, %if.else140
  %rank29.2 = phi i32 [ %rem147, %if.else140 ], [ %spec.store.select177, %for.body120 ]
  %rank31.2 = phi i32 [ %rem148, %if.else140 ], [ %spec.store.select178, %for.body120 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %49 = load i32, i32* @volume, align 4, !tbaa !13
  %50 = sext i32 %49 to i64
  %cmp39 = icmp slt i64 %indvars.iv.next, %50
  br i1 %cmp39, label %for.body, label %for.end152, !llvm.loop !428

for.end152:                                       ; preds = %for.inc150, %if.end38
  call void @g_xor32(i32* nonnull %sum29) #32
  call void @g_xor32(i32* nonnull %sum31) #32
  %51 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp155 = icmp eq i32 %51, 0
  br i1 %cmp155, label %if.then157, label %if.end176

if.then157:                                       ; preds = %for.end152
  %call158 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([59 x i8], [59 x i8]* @.str.105, i64 0, i64 0), i8* %4) #34
  %magic_number159 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 0
  %52 = load i32, i32* %magic_number159, align 4, !tbaa !404
  %cmp160 = icmp eq i32 %52, 20103
  br i1 %cmp160, label %if.then162, label %if.end174

if.then162:                                       ; preds = %if.then157
  %arraydecay163 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %3, i64 0, i32 1, i64 0
  %call164 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49.268, i64 0, i64 0), i8* nonnull %arraydecay163) #34
  %call165 = call i32 @fseek(%struct._IO_FILE* %2, i64 %checksum_offset.0, i32 0) #34
  %cmp166 = icmp slt i32 %call165, 0
  br i1 %cmp166, label %if.then168, label %if.end173

if.then168:                                       ; preds = %if.then162
  %call170 = tail call i32* @__errno_location() #37
  %53 = load i32, i32* %call170, align 4, !tbaa !13
  %call171 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([43 x i8], [43 x i8]* @.str.103, i64 0, i64 0), i8* nonnull %1, i32 %53, i8* %4) #34
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call172 = call i32 @fflush(%struct._IO_FILE* %54) #34
  call void @terminate(i32 1) #32
  br label %if.end173

if.end173:                                        ; preds = %if.then168, %if.then162
  call void @read_checksum(i32 0, %struct.gauge_file* %gf, %struct.gauge_check* nonnull %test_gc) #34
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then157
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call175 = call i32 @fflush(%struct._IO_FILE* %55) #34
  call void @free(i8* %17) #32
  br label %if.end176

if.end176:                                        ; preds = %if.end174, %for.end152
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @r_serial_arch(%struct.gauge_file* nocapture %gf) local_unnamed_addr #1 {
entry:
  %test_gc = alloca %struct.gauge_check, align 4
  %tmpsu3 = alloca [4 x %struct.su3_matrix], align 16
  %myname = alloca [14 x i8], align 1
  %U = alloca [4 x [18 x double]], align 16
  %0 = bitcast %struct.gauge_check* %test_gc to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %1 = bitcast [4 x %struct.su3_matrix]* %tmpsu3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 576, i8* nonnull %1) #31
  %2 = getelementptr inbounds [14 x i8], [14 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %2) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(14) %2, i8* noundef nonnull align 1 dereferenceable(14) getelementptr inbounds ([14 x i8], [14 x i8]* @__const.r_serial_arch.myname, i64 0, i64 0), i64 14, i1 false)
  %3 = bitcast [4 x [18 x double]]* %U to i8*
  call void @llvm.lifetime.start.p0i8(i64 576, i8* nonnull %3) #31
  %fp1 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp1, align 8, !tbaa !406
  %filename2 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 2
  %5 = load i8*, i8** %filename2, align 8, !tbaa !401
  %6 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp = icmp eq i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end17

if.then:                                          ; preds = %entry
  %parallel = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 5
  %7 = load i32, i32* %parallel, align 8, !tbaa !409
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.then
  %call = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([48 x i8], [48 x i8]* @.str.101, i64 0, i64 0), i8* nonnull %2) #34
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  %8 = load i32, i32* @nx, align 4, !tbaa !13
  %9 = load i32, i32* @ny, align 4, !tbaa !13
  %10 = load i32, i32* @nz, align 4, !tbaa !13
  %mul = mul i32 %8, 48
  %mul6 = mul i32 %mul, %9
  %mul7 = mul i32 %mul6, %10
  %conv = sext i32 %mul7 to i64
  %call8 = call noalias align 16 i8* @calloc(i64 %conv, i64 8) #32
  %11 = bitcast i8* %call8 to double*
  %cmp9 = icmp eq i8* %call8, null
  br i1 %cmp9, label %if.then11, label %if.end17

if.then11:                                        ; preds = %if.end
  %12 = load i32, i32* @this_node, align 4, !tbaa !13
  %call13 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([55 x i8], [55 x i8]* @.str.106, i64 0, i64 0), i8* nonnull %2, i32 %12) #34
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([40 x i8], [40 x i8]* @str.190, i64 0, i64 0))
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call15 = call i32 @fflush(%struct._IO_FILE* %13) #34
  call void @terminate(i32 1) #32
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then11, %entry
  %uin.0 = phi double* [ null, %if.then11 ], [ %11, %if.end ], [ undef, %entry ]
  %sum29 = getelementptr inbounds %struct.gauge_check, %struct.gauge_check* %test_gc, i64 0, i32 1
  store i32 0, i32* %sum29, align 4, !tbaa !410
  %sum31 = getelementptr inbounds %struct.gauge_check, %struct.gauge_check* %test_gc, i64 0, i32 0
  store i32 0, i32* %sum31, align 4, !tbaa !411
  call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %14 = bitcast double* %uin.0 to i8*
  %15 = bitcast double* %uin.0 to i32*
  %16 = load i32, i32* @volume, align 4, !tbaa !13
  %cmp18301 = icmp sgt i32 %16, 0
  br i1 %cmp18301, label %for.body, label %for.end164

for.body:                                         ; preds = %if.end17, %for.inc162
  %chksum.0306 = phi i32 [ %chksum.3, %for.inc162 ], [ 0, %if.end17 ]
  %rank31.0305 = phi i32 [ %rank31.2, %for.inc162 ], [ 0, %if.end17 ]
  %rank29.0304 = phi i32 [ %rank29.2, %for.inc162 ], [ 0, %if.end17 ]
  %rcv_rank.0303 = phi i32 [ %inc163, %for.inc162 ], [ 0, %if.end17 ]
  %i.0302 = phi i32 [ %i.1, %for.inc162 ], [ undef, %if.end17 ]
  %17 = load i32, i32* @nx, align 4, !tbaa !13
  %rem = srem i32 %rcv_rank.0303, %17
  %div = sdiv i32 %rcv_rank.0303, %17
  %18 = load i32, i32* @ny, align 4, !tbaa !13
  %rem20 = srem i32 %div, %18
  %div21 = sdiv i32 %div, %18
  %19 = load i32, i32* @nz, align 4, !tbaa !13
  %rem22 = srem i32 %div21, %19
  %div23 = sdiv i32 %div21, %19
  %20 = load i32, i32* @nt, align 4, !tbaa !13
  %rem24 = srem i32 %div23, %20
  %call25 = call i32 @node_number(i32 %rem, i32 %rem20, i32 %rem22, i32 %rem24) #32
  %21 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp26 = icmp eq i32 %21, 0
  br i1 %cmp26, label %if.then28, label %if.else109

if.then28:                                        ; preds = %for.body
  %call29 = call i64 @fread(i8* %14, i64 384, i64 1, %struct._IO_FILE* %4) #34
  %conv30 = trunc i64 %call29 to i32
  %cmp31.not = icmp eq i32 %conv30, 1
  br i1 %cmp31.not, label %if.then40, label %if.then33

if.then33:                                        ; preds = %if.then28
  %22 = load i32, i32* @this_node, align 4, !tbaa !13
  %call35 = tail call i32* @__errno_location() #37
  %23 = load i32, i32* %call35, align 4, !tbaa !13
  %call36 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([55 x i8], [55 x i8]* @.str.104, i64 0, i64 0), i8* nonnull %2, i32 %22, i32 %23, i8* %5) #34
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call37 = call i32 @fflush(%struct._IO_FILE* %24) #34
  call void @terminate(i32 1) #32
  br label %if.then40

if.then40:                                        ; preds = %if.then28, %if.then33
  call void @byterevn(i32* %15, i32 48) #32
  br label %for.cond46.preheader

for.cond46.preheader:                             ; preds = %if.then40, %for.inc97
  %indvars.iv318 = phi i64 [ 0, %if.then40 ], [ %indvars.iv.next319, %for.inc97 ]
  %chksum.1296 = phi i32 [ %chksum.0306, %if.then40 ], [ %add, %for.inc97 ]
  %q.0295 = phi double* [ %uin.0, %if.then40 ], [ %incdec.ptr, %for.inc97 ]
  br label %for.body49

for.body49:                                       ; preds = %for.cond46.preheader, %for.body49
  %indvars.iv = phi i64 [ 0, %for.cond46.preheader ], [ %indvars.iv.next, %for.body49 ]
  %chksum.2291 = phi i32 [ %chksum.1296, %for.cond46.preheader ], [ %add, %for.body49 ]
  %q.1290 = phi double* [ %q.0295, %for.cond46.preheader ], [ %incdec.ptr, %for.body49 ]
  %25 = bitcast double* %q.1290 to i32*
  %26 = load i32, i32* %25, align 4, !tbaa !13
  %add = add i32 %26, %chksum.2291
  %incdec.ptr = getelementptr inbounds double, double* %q.1290, i64 1
  %27 = load double, double* %q.1290, align 8, !tbaa !11
  %arrayidx51 = getelementptr inbounds [4 x [18 x double]], [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv318, i64 %indvars.iv
  store double %27, double* %arrayidx51, align 8, !tbaa !11
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 12
  br i1 %exitcond.not, label %for.end, label %for.body49, !llvm.loop !429

for.end:                                          ; preds = %for.body49
  %arraydecay54 = getelementptr inbounds [4 x [18 x double]], [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv318, i64 0
  call void @complete_U(double* nonnull %arraydecay54) #34
  br label %for.cond59.preheader

for.cond59.preheader:                             ; preds = %for.end, %for.inc94
  %indvars.iv314 = phi i64 [ 0, %for.end ], [ %indvars.iv.next315, %for.inc94 ]
  %28 = mul nuw nsw i64 %indvars.iv314, 3
  br label %for.body62

for.body62:                                       ; preds = %for.cond59.preheader, %for.body62
  %indvars.iv308 = phi i64 [ 0, %for.cond59.preheader ], [ %indvars.iv.next309, %for.body62 ]
  %29 = add nuw nsw i64 %indvars.iv308, %28
  %30 = shl nuw nsw i64 %29, 1
  %arrayidx69 = getelementptr inbounds [4 x [18 x double]], [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv318, i64 %30
  %31 = load double, double* %arrayidx69, align 16, !tbaa !11
  %real = getelementptr inbounds [4 x %struct.su3_matrix], [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv318, i32 0, i64 %indvars.iv314, i64 %indvars.iv308, i32 0
  store double %31, double* %real, align 16, !tbaa !4
  %32 = or i64 %30, 1
  %arrayidx83 = getelementptr inbounds [4 x [18 x double]], [4 x [18 x double]]* %U, i64 0, i64 %indvars.iv318, i64 %32
  %33 = load double, double* %arrayidx83, align 8, !tbaa !11
  %imag = getelementptr inbounds [4 x %struct.su3_matrix], [4 x %struct.su3_matrix]* %tmpsu3, i64 0, i64 %indvars.iv318, i32 0, i64 %indvars.iv314, i64 %indvars.iv308, i32 1
  store double %33, double* %imag, align 8, !tbaa !9
  %indvars.iv.next309 = add nuw nsw i64 %indvars.iv308, 1
  %exitcond313.not = icmp eq i64 %indvars.iv.next309, 3
  br i1 %exitcond313.not, label %for.inc94, label %for.body62, !llvm.loop !430

for.inc94:                                        ; preds = %for.body62
  %indvars.iv.next315 = add nuw nsw i64 %indvars.iv314, 1
  %exitcond317.not = icmp eq i64 %indvars.iv.next315, 3
  br i1 %exitcond317.not, label %for.inc97, label %for.cond59.preheader, !llvm.loop !431

for.inc97:                                        ; preds = %for.inc94
  %indvars.iv.next319 = add nuw nsw i64 %indvars.iv318, 1
  %exitcond320.not = icmp eq i64 %indvars.iv.next319, 4
  br i1 %exitcond320.not, label %for.end99, label %for.cond46.preheader, !llvm.loop !432

for.end99:                                        ; preds = %for.inc97
  %cmp100 = icmp eq i32 %call25, 0
  br i1 %cmp100, label %if.then102, label %if.else

if.then102:                                       ; preds = %for.end99
  %call103 = call i32 @node_index(i32 %rem, i32 %rem20, i32 %rem22, i32 %rem24) #32
  %34 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom104 = sext i32 %call103 to i64
  %arrayidx106 = getelementptr inbounds %struct.site, %struct.site* %34, i64 %idxprom104, i32 8, i64 0
  %35 = bitcast %struct.su3_matrix* %arrayidx106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(576) %35, i8* noundef nonnull align 16 dereferenceable(576) %1, i64 576, i1 false)
  br label %if.end119

if.else:                                          ; preds = %for.end99
  call void @send_field(i8* nonnull %1, i32 576, i32 %call25) #32
  br label %if.end119

if.else109:                                       ; preds = %for.body
  %cmp110 = icmp eq i32 %21, %call25
  br i1 %cmp110, label %if.then112, label %if.end119

if.then112:                                       ; preds = %if.else109
  %call113 = call i32 @node_index(i32 %rem, i32 %rem20, i32 %rem22, i32 %rem24) #32
  %36 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom114 = sext i32 %call113 to i64
  %arrayidx117 = getelementptr inbounds %struct.site, %struct.site* %36, i64 %idxprom114, i32 8, i64 0
  %37 = bitcast %struct.su3_matrix* %arrayidx117 to i8*
  call void @get_field(i8* nonnull %37, i32 576) #32
  br label %if.end119

if.end119:                                        ; preds = %if.else109, %if.then112, %if.then102, %if.else
  %i.1 = phi i32 [ %call103, %if.then102 ], [ %i.0302, %if.else ], [ %call113, %if.then112 ], [ %i.0302, %if.else109 ]
  %chksum.3 = phi i32 [ %add, %if.then102 ], [ %add, %if.else ], [ %chksum.0306, %if.then112 ], [ %chksum.0306, %if.else109 ]
  %38 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp120 = icmp eq i32 %38, %call25
  br i1 %cmp120, label %if.then122, label %if.else152

if.then122:                                       ; preds = %if.end119
  %39 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom123 = sext i32 %i.1 to i64
  %arrayidx126 = getelementptr inbounds %struct.site, %struct.site* %39, i64 %idxprom123, i32 8, i64 0
  %40 = bitcast %struct.su3_matrix* %arrayidx126 to i32*
  %.pre = load i32, i32* %sum29, align 4, !tbaa !410
  %.pre322 = load i32, i32* %sum31, align 4, !tbaa !411
  br label %for.body130

for.body130:                                      ; preds = %if.then122, %for.body130
  %41 = phi i32 [ %.pre322, %if.then122 ], [ %xor137, %for.body130 ]
  %42 = phi i32 [ %.pre, %if.then122 ], [ %xor, %for.body130 ]
  %rank31.1300 = phi i32 [ %rank31.0305, %if.then122 ], [ %spec.store.select189, %for.body130 ]
  %rank29.1299 = phi i32 [ %rank29.0304, %if.then122 ], [ %spec.store.select, %for.body130 ]
  %val.0298 = phi i32* [ %40, %if.then122 ], [ %incdec.ptr150, %for.body130 ]
  %k.0297 = phi i32 [ 0, %if.then122 ], [ %inc149, %for.body130 ]
  %43 = load i32, i32* %val.0298, align 4, !tbaa !13
  %shl = shl i32 %43, %rank29.1299
  %sub = sub nsw i32 32, %rank29.1299
  %shr = lshr i32 %43, %sub
  %or = or i32 %shl, %shr
  %xor = xor i32 %or, %42
  store i32 %xor, i32* %sum29, align 4, !tbaa !410
  %44 = load i32, i32* %val.0298, align 4, !tbaa !13
  %shl132 = shl i32 %44, %rank31.1300
  %sub133 = sub nsw i32 32, %rank31.1300
  %shr134 = lshr i32 %44, %sub133
  %or135 = or i32 %shl132, %shr134
  %xor137 = xor i32 %or135, %41
  store i32 %xor137, i32* %sum31, align 4, !tbaa !411
  %inc138 = add nsw i32 %rank29.1299, 1
  %cmp139 = icmp sgt i32 %rank29.1299, 27
  %spec.store.select = select i1 %cmp139, i32 0, i32 %inc138
  %inc143 = add nsw i32 %rank31.1300, 1
  %cmp144 = icmp sgt i32 %rank31.1300, 29
  %spec.store.select189 = select i1 %cmp144, i32 0, i32 %inc143
  %inc149 = add nuw nsw i32 %k.0297, 1
  %incdec.ptr150 = getelementptr inbounds i32, i32* %val.0298, i64 1
  %exitcond321.not = icmp eq i32 %inc149, 144
  br i1 %exitcond321.not, label %for.inc162, label %for.body130, !llvm.loop !433

if.else152:                                       ; preds = %if.end119
  %add154 = add i32 %rank29.0304, 144
  %add157 = add i32 %rank31.0305, 144
  %rem159 = srem i32 %add154, 29
  %rem160 = srem i32 %add157, 31
  br label %for.inc162

for.inc162:                                       ; preds = %for.body130, %if.else152
  %rank29.2 = phi i32 [ %rem159, %if.else152 ], [ %spec.store.select, %for.body130 ]
  %rank31.2 = phi i32 [ %rem160, %if.else152 ], [ %spec.store.select189, %for.body130 ]
  %inc163 = add nuw nsw i32 %rcv_rank.0303, 1
  %45 = load i32, i32* @volume, align 4, !tbaa !13
  %cmp18 = icmp slt i32 %inc163, %45
  br i1 %cmp18, label %for.body, label %for.end164, !llvm.loop !434

for.end164:                                       ; preds = %for.inc162, %if.end17
  %chksum.0.lcssa = phi i32 [ 0, %if.end17 ], [ %chksum.3, %for.inc162 ]
  call void @g_xor32(i32* nonnull %sum29) #32
  call void @g_xor32(i32* nonnull %sum31) #32
  %46 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp167 = icmp eq i32 %46, 0
  br i1 %cmp167, label %if.then169, label %if.end188

if.then169:                                       ; preds = %for.end164
  %call170 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([60 x i8], [60 x i8]* @.str.108, i64 0, i64 0), i8* %5) #34
  %sum31171 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  %47 = load i32, i32* %sum31171, align 4, !tbaa !403
  %cmp172.not = icmp eq i32 %chksum.0.lcssa, %47
  br i1 %cmp172.not, label %if.else178, label %if.then174

if.then174:                                       ; preds = %if.then169
  %call177 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([56 x i8], [56 x i8]* @.str.109, i64 0, i64 0), i32 %chksum.0.lcssa, i32 %47) #34
  br label %if.end180

if.else178:                                       ; preds = %if.then169
  %call179 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([32 x i8], [32 x i8]* @.str.110, i64 0, i64 0), i32 %chksum.0.lcssa) #34
  br label %if.end180

if.end180:                                        ; preds = %if.else178, %if.then174
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call181 = call i32 @fflush(%struct._IO_FILE* %48) #34
  call void @free(i8* %14) #32
  %49 = load i32, i32* %sum29, align 4, !tbaa !410
  %sum29184 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 6, i32 1
  store i32 %49, i32* %sum29184, align 4, !tbaa !402
  %50 = load i32, i32* %sum31, align 4, !tbaa !411
  store i32 %50, i32* %sum31171, align 4, !tbaa !403
  br label %if.end188

if.end188:                                        ; preds = %if.end180, %for.end164
  call void @llvm.lifetime.end.p0i8(i64 576, i8* nonnull %3) #31
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 576, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @r_serial_f(%struct.gauge_file* nocapture readonly %gf) local_unnamed_addr #1 {
entry:
  tail call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %0 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end3

if.then:                                          ; preds = %entry
  %parallel = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 5
  %1 = load i32, i32* %parallel, align 8, !tbaa !409
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end, label %if.then1

if.then1:                                         ; preds = %if.then
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([54 x i8], [54 x i8]* @str.191, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then
  %fp = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !406
  %call2 = tail call i32 @fclose(%struct._IO_FILE* %2) #34
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry
  %rank2rcv = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 4
  %3 = load i32*, i32** %rank2rcv, align 8, !tbaa !408
  %cmp4.not = icmp eq i32* %3, null
  br i1 %cmp4.not, label %if.end7, label %if.then5

if.then5:                                         ; preds = %if.end3
  %4 = bitcast i32* %3 to i8*
  tail call void @free(i8* %4) #32
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.end3
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @write_site_list(%struct._IO_FILE* %fp, %struct.gauge_header* nocapture readonly %gh) local_unnamed_addr #1 {
entry:
  %header_bytes = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %gh, i64 0, i32 3
  %0 = load i32, i32* %header_bytes, align 4, !tbaa !394
  %conv = sext i32 %0 to i64
  %1 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv1 = sext i32 %1 to i64
  %mul = shl nsw i64 %conv1, 2
  %2 = load i32, i32* @this_node, align 4, !tbaa !13
  %conv2 = sext i32 %2 to i64
  %mul3 = mul i64 %mul, %conv2
  %add = add i64 %mul3, %conv
  %call = tail call noalias align 16 i8* @calloc(i64 %conv1, i64 4) #32
  %3 = bitcast i8* %call to i32*
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call6 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([44 x i8], [44 x i8]* @.str.112, i64 0, i64 0), i32 %2) #34
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call7 = tail call i32 @fflush(%struct._IO_FILE* %4) #34
  tail call void @terminate(i32 1) #32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call8 = tail call i32 @g_seek(%struct._IO_FILE* %fp, i64 %add, i32 0) #32
  %cmp9 = icmp slt i32 %call8, 0
  br i1 %cmp9, label %if.then11, label %if.end15

if.then11:                                        ; preds = %if.end
  %5 = load i32, i32* @this_node, align 4, !tbaa !13
  %call12 = tail call i32* @__errno_location() #37
  %6 = load i32, i32* %call12, align 4, !tbaa !13
  %call13 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.113, i64 0, i64 0), i32 %5, i64 %add, i32 %6) #34
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call14 = tail call i32 @fflush(%struct._IO_FILE* %7) #34
  tail call void @terminate(i32 1) #32
  br label %if.end15

if.end15:                                         ; preds = %if.then11, %if.end
  %8 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %9 = load i32, i32* @nx, align 4
  %10 = load i32, i32* @ny, align 4
  %11 = load i32, i32* @nz, align 4
  %cmp1656 = icmp sgt i32 %8, 0
  br i1 %cmp1656, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %if.end15
  %12 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %wide.trip.count = zext i32 %8 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %s.057 = phi %struct.site* [ %12, %for.body.preheader ], [ %incdec.ptr, %for.body ]
  %t = getelementptr inbounds %struct.site, %struct.site* %s.057, i64 0, i32 3
  %13 = load i16, i16* %t, align 2, !tbaa !19
  %conv18 = sext i16 %13 to i32
  %mul19 = mul nsw i32 %11, %conv18
  %z = getelementptr inbounds %struct.site, %struct.site* %s.057, i64 0, i32 2
  %14 = load i16, i16* %z, align 4, !tbaa !124
  %conv20 = sext i16 %14 to i32
  %add21 = add nsw i32 %mul19, %conv20
  %mul22 = mul nsw i32 %add21, %10
  %y = getelementptr inbounds %struct.site, %struct.site* %s.057, i64 0, i32 1
  %15 = load i16, i16* %y, align 2, !tbaa !123
  %conv23 = sext i16 %15 to i32
  %add24 = add nsw i32 %mul22, %conv23
  %mul25 = mul nsw i32 %add24, %9
  %x = getelementptr inbounds %struct.site, %struct.site* %s.057, i64 0, i32 0
  %16 = load i16, i16* %x, align 8, !tbaa !122
  %conv26 = sext i16 %16 to i32
  %add27 = add nsw i32 %mul25, %conv26
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %indvars.iv
  store i32 %add27, i32* %arrayidx, align 4, !tbaa !13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.057, i64 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !435

for.end:                                          ; preds = %for.body, %if.end15
  %conv29 = sext i32 %8 to i64
  %call30 = tail call i64 @g_write(i8* %call, i64 4, i64 %conv29, %struct._IO_FILE* %fp) #32
  %conv31 = trunc i64 %call30 to i32
  %17 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp32.not = icmp eq i32 %17, %conv31
  br i1 %cmp32.not, label %if.end38, label %if.then34

if.then34:                                        ; preds = %for.end
  %18 = load i32, i32* @this_node, align 4, !tbaa !13
  %call35 = tail call i32* @__errno_location() #37
  %19 = load i32, i32* %call35, align 4, !tbaa !13
  %call36 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([48 x i8], [48 x i8]* @.str.114, i64 0, i64 0), i32 %18, i32 %19) #34
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call37 = tail call i32 @fflush(%struct._IO_FILE* %20) #34
  tail call void @terminate(i32 1) #32
  br label %if.end38

if.end38:                                         ; preds = %if.then34, %for.end
  tail call void @free(i8* %call) #32
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct.gauge_file* @parallel_open(i32 %order, i8* %filename) local_unnamed_addr #1 {
entry:
  %call = tail call %struct.gauge_file* @setup_output_gauge_file() #34
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 1
  %0 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %order1 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %0, i64 0, i32 4
  store i32 %order, i32* %order1, align 4, !tbaa !405
  %call2 = tail call %struct._IO_FILE* @g_open(i8* %filename, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38.259, i64 0, i64 0)) #32
  %cmp = icmp eq %struct._IO_FILE* %call2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @this_node, align 4, !tbaa !13
  %call3 = tail call i32* @__errno_location() #37
  %2 = load i32, i32* %call3, align 4, !tbaa !13
  %call4 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.115, i64 0, i64 0), i32 %1, i8* %filename, i32 %2) #34
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call5 = tail call i32 @fflush(%struct._IO_FILE* %3) #34
  tail call void @terminate(i32 1) #32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp6 = icmp eq i32 %4, 0
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end
  tail call void @pwrite_gauge_hdr(%struct._IO_FILE* %call2, %struct.gauge_header* nonnull %0) #34
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end
  %header_bytes = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %0, i64 0, i32 3
  %5 = bitcast i32* %header_bytes to i8*
  tail call void @broadcast_bytes(i8* nonnull %5, i32 4) #32
  %cmp9.not = icmp eq i32 %order, 0
  br i1 %cmp9.not, label %if.end11, label %if.then10

if.then10:                                        ; preds = %if.end8
  tail call void @write_site_list(%struct._IO_FILE* %call2, %struct.gauge_header* nonnull %0) #34
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end8
  %fp12 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %fp12, align 8, !tbaa !406
  %filename13 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 2
  store i8* %filename, i8** %filename13, align 8, !tbaa !401
  %byterevflag = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 3
  store i32 0, i32* %byterevflag, align 8, !tbaa !407
  %parallel = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 5
  store i32 1, i32* %parallel, align 8, !tbaa !409
  ret %struct.gauge_file* %call
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct.gauge_file* @w_parallel_i(i8* %filename) local_unnamed_addr #1 {
entry:
  %call = tail call %struct.gauge_file* @parallel_open(i32 0, i8* %filename) #34
  ret %struct.gauge_file* %call
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct.gauge_file* @w_checkpoint_i(i8* %filename) local_unnamed_addr #1 {
entry:
  %call = tail call %struct.gauge_file* @parallel_open(i32 1, i8* %filename) #34
  ret %struct.gauge_file* %call
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct.su3_matrix* @w_parallel_setup(%struct.gauge_file* nocapture readonly %gf, i64* nocapture %checksum_offset) local_unnamed_addr #1 {
entry:
  %myname = alloca [17 x i8], align 16
  %0 = getelementptr inbounds [17 x i8], [17 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %0) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(17) %0, i8* noundef nonnull align 16 dereferenceable(17) getelementptr inbounds ([17 x i8], [17 x i8]* @__const.w_parallel_setup.myname, i64 0, i64 0), i64 17, i1 false)
  %parallel = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 5
  %1 = load i32, i32* %parallel, align 8, !tbaa !409
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([47 x i8], [47 x i8]* @.str.116, i64 0, i64 0), i8* nonnull %0) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call1 = call noalias align 16 dereferenceable_or_null(2359296) i8* @calloc(i64 16384, i64 144) #32
  %cmp = icmp eq i8* %call1, null
  br i1 %cmp, label %if.then2, label %if.end6

if.then2:                                         ; preds = %if.end
  %2 = load i32, i32* @this_node, align 4, !tbaa !13
  %call4 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([31 x i8], [31 x i8]* @.str.102, i64 0, i64 0), i8* nonnull %0, i32 %2) #34
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call5 = call i32 @fflush(%struct._IO_FILE* %3) #34
  call void @terminate(i32 1) #32
  br label %if.end6

if.end6:                                          ; preds = %if.then2, %if.end
  %fp7 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp7, align 8, !tbaa !406
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 1
  %5 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %mul = shl nsw i32 %5, 2
  %conv = sext i32 %mul to i64
  %mul8 = mul nsw i64 %conv, 144
  %6 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %order = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 4
  %7 = load i32, i32* %order, align 4, !tbaa !405
  %cmp10 = icmp eq i32 %7, 0
  %8 = load i32, i32* @volume, align 4
  %conv13 = sext i32 %8 to i64
  %mul14 = shl nsw i64 %conv13, 2
  %coord_list_size.0 = select i1 %cmp10, i64 0, i64 %mul14
  %header_bytes = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 3
  %9 = load i32, i32* %header_bytes, align 4, !tbaa !394
  %conv17 = sext i32 %9 to i64
  %add = add nsw i64 %coord_list_size.0, %conv17
  store i64 %add, i64* %checksum_offset, align 8, !tbaa !436
  %add18 = add nsw i64 %add, 8
  %10 = load i32, i32* @this_node, align 4, !tbaa !13
  %conv19 = sext i32 %10 to i64
  %mul20 = mul nsw i64 %mul8, %conv19
  %add21 = add nsw i64 %add18, %mul20
  %call22 = call i32 @g_seek(%struct._IO_FILE* %4, i64 %add21, i32 0) #32
  %cmp23 = icmp slt i32 %call22, 0
  br i1 %cmp23, label %if.then25, label %if.end30

if.then25:                                        ; preds = %if.end6
  %11 = load i32, i32* @this_node, align 4, !tbaa !13
  %call27 = tail call i32* @__errno_location() #37
  %12 = load i32, i32* %call27, align 4, !tbaa !13
  %filename = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 2
  %13 = load i8*, i8** %filename, align 8, !tbaa !401
  %call28 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([48 x i8], [48 x i8]* @.str.117, i64 0, i64 0), i8* nonnull %0, i32 %11, i64 %add21, i32 %12, i8* %13) #34
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call29 = call i32 @fflush(%struct._IO_FILE* %14) #34
  call void @terminate(i32 1) #32
  br label %if.end30

if.end30:                                         ; preds = %if.then25, %if.end6
  %15 = bitcast i8* %call1 to %struct.su3_matrix*
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %0) #31
  ret %struct.su3_matrix* %15
}

; Function Attrs: noinline nounwind optsize uwtable
define void @w_parallel(%struct.gauge_file* %gf) local_unnamed_addr #1 {
entry:
  %checksum_offset = alloca i64, align 8
  %msg = alloca %struct.anon.0, align 8
  %myname = alloca [11 x i8], align 1
  %0 = bitcast i64* %checksum_offset to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %1 = bitcast %struct.anon.0* %msg to i8*
  call void @llvm.lifetime.start.p0i8(i64 584, i8* nonnull %1) #31
  %2 = getelementptr inbounds [11 x i8], [11 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 11, i8* nonnull %2) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(11) %2, i8* noundef nonnull align 1 dereferenceable(11) getelementptr inbounds ([11 x i8], [11 x i8]* @__const.w_parallel.myname, i64 0, i64 0), i64 11, i1 false)
  %fp1 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp1, align 8, !tbaa !406
  %call = call %struct.su3_matrix* @w_parallel_setup(%struct.gauge_file* %gf, i64* nonnull %checksum_offset) #34
  %call383 = bitcast %struct.su3_matrix* %call to i8*
  %sum31 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  store i32 0, i32* %sum31, align 4, !tbaa !403
  %sum29 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 6, i32 1
  store i32 0, i32* %sum29, align 4, !tbaa !402
  tail call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(589824) %call383, i8 0, i64 589824, i1 false)
  %x50 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %msg, i64 0, i32 0
  %y52 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %msg, i64 0, i32 1
  %z54 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %msg, i64 0, i32 2
  %t56 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %msg, i64 0, i32 3
  %arraydecay58 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %msg, i64 0, i32 4, i64 0
  %4 = bitcast %struct.su3_matrix* %arraydecay58 to i8*
  %filename = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 2
  %5 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp30371 = icmp sgt i32 %5, 0
  br i1 %cmp30371, label %for.cond32.preheader, label %for.end203

for.cond32.preheader:                             ; preds = %entry, %for.end200
  %6 = phi i32 [ %40, %for.end200 ], [ %5, %entry ]
  %buf_length.0374 = phi i32 [ %buf_length.1.lcssa, %for.end200 ], [ 0, %entry ]
  %ksite.0372 = phi i32 [ %add, %for.end200 ], [ 0, %entry ]
  %add = add nuw nsw i32 %ksite.0372, 4096
  %7 = load i32, i32* @number_of_nodes, align 4, !tbaa !13
  %cmp33366 = icmp sgt i32 %7, 0
  br i1 %cmp33366, label %for.cond35.preheader, label %for.end200

for.cond35.preheader:                             ; preds = %for.cond32.preheader, %for.inc198
  %8 = phi i32 [ %38, %for.inc198 ], [ %7, %for.cond32.preheader ]
  %9 = phi i32 [ %39, %for.inc198 ], [ %6, %for.cond32.preheader ]
  %buf_length.1369 = phi i32 [ %buf_length.2.lcssa, %for.inc198 ], [ %buf_length.0374, %for.cond32.preheader ]
  %destnode.0367 = phi i32 [ %inc199, %for.inc198 ], [ 0, %for.cond32.preheader ]
  %cmp36361 = icmp slt i32 %ksite.0372, %9
  br i1 %cmp36361, label %for.body38, label %for.inc198

for.body38:                                       ; preds = %for.cond35.preheader, %for.inc195
  %10 = phi i32 [ %37, %for.inc195 ], [ %9, %for.cond35.preheader ]
  %buf_length.2364 = phi i32 [ %buf_length.3, %for.inc195 ], [ %buf_length.1369, %for.cond35.preheader ]
  %isite.0363 = phi i32 [ %inc196, %for.inc195 ], [ %ksite.0372, %for.cond35.preheader ]
  %mul = mul nsw i32 %10, %destnode.0367
  %add39 = add nsw i32 %mul, %isite.0363
  %11 = load i32, i32* @nx, align 4, !tbaa !13
  %rem40 = srem i32 %add39, %11
  %div = sdiv i32 %add39, %11
  %12 = load i32, i32* @ny, align 4, !tbaa !13
  %rem41 = srem i32 %div, %12
  %div42 = sdiv i32 %div, %12
  %13 = load i32, i32* @nz, align 4, !tbaa !13
  %rem43 = srem i32 %div42, %13
  %div44 = sdiv i32 %div42, %13
  %14 = load i32, i32* @nt, align 4, !tbaa !13
  %rem45 = srem i32 %div44, %14
  %call46 = call i32 @node_number(i32 %rem40, i32 %rem41, i32 %rem43, i32 %rem45) #32
  %15 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp47 = icmp ne i32 %15, %call46
  %cmp48.not = icmp eq i32 %destnode.0367, %call46
  %or.cond349 = select i1 %cmp47, i1 true, i1 %cmp48.not
  br i1 %or.cond349, label %if.else, label %if.then49

if.then49:                                        ; preds = %for.body38
  %conv = trunc i32 %rem40 to i16
  store i16 %conv, i16* %x50, align 8, !tbaa !437
  %conv51 = trunc i32 %rem41 to i16
  store i16 %conv51, i16* %y52, align 2, !tbaa !439
  %conv53 = trunc i32 %rem43 to i16
  store i16 %conv53, i16* %z54, align 4, !tbaa !440
  %conv55 = trunc i32 %rem45 to i16
  store i16 %conv55, i16* %t56, align 2, !tbaa !441
  %call57 = call i32 @node_index(i32 %rem40, i32 %rem41, i32 %rem43, i32 %rem45) #32
  %16 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom59 = sext i32 %call57 to i64
  %arraydecay62 = getelementptr inbounds %struct.site, %struct.site* %16, i64 %idxprom59, i32 8, i64 0
  %17 = bitcast %struct.su3_matrix* %arraydecay62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(576) %4, i8* noundef nonnull align 1 dereferenceable(576) %17, i64 576, i1 false)
  call void @send_field(i8* nonnull %1, i32 584, i32 %destnode.0367) #32
  br label %for.inc195

if.else:                                          ; preds = %for.body38
  %cmp63 = icmp eq i32 %15, %destnode.0367
  br i1 %cmp63, label %if.then65, label %for.inc195

if.then65:                                        ; preds = %if.else
  br i1 %cmp48.not, label %if.then68, label %if.else80

if.then68:                                        ; preds = %if.then65
  %call69 = call i32 @node_index(i32 %rem40, i32 %rem41, i32 %rem43, i32 %rem45) #32
  %mul70 = shl nsw i32 %buf_length.2364, 2
  %idxprom71 = sext i32 %mul70 to i64
  %arrayidx72 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %call, i64 %idxprom71
  %18 = bitcast %struct.su3_matrix* %arrayidx72 to i8*
  %19 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom73 = sext i32 %call69 to i64
  %arraydecay76 = getelementptr inbounds %struct.site, %struct.site* %19, i64 %idxprom73, i32 8, i64 0
  %20 = bitcast %struct.su3_matrix* %arraydecay76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(576) %18, i8* noundef nonnull align 1 dereferenceable(576) %20, i64 576, i1 false)
  br label %if.end105

if.else80:                                        ; preds = %if.then65
  call void @get_field(i8* nonnull %1, i32 584) #32
  %21 = load i16, i16* %x50, align 8, !tbaa !437
  %conv82 = sext i16 %21 to i32
  %22 = load i32, i32* @nx, align 4, !tbaa !13
  %23 = load i16, i16* %y52, align 2, !tbaa !439
  %conv84 = sext i16 %23 to i32
  %24 = load i32, i32* @ny, align 4, !tbaa !13
  %25 = load i16, i16* %z54, align 4, !tbaa !440
  %conv86 = sext i16 %25 to i32
  %26 = load i32, i32* @nz, align 4, !tbaa !13
  %27 = load i16, i16* %t56, align 2, !tbaa !441
  %conv88 = sext i16 %27 to i32
  %mul89 = mul nsw i32 %26, %conv88
  %add90 = add nsw i32 %mul89, %conv86
  %mul91 = mul nsw i32 %add90, %24
  %add92 = add nsw i32 %mul91, %conv84
  %mul93 = mul nsw i32 %add92, %22
  %add94 = add nsw i32 %mul93, %conv82
  %28 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %rem95 = srem i32 %add94, %28
  %rem96 = srem i32 %rem95, 4096
  %mul97 = shl nsw i32 %rem96, 2
  %idxprom98 = sext i32 %mul97 to i64
  %arrayidx99 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %call, i64 %idxprom98
  %29 = bitcast %struct.su3_matrix* %arrayidx99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(576) %29, i8* noundef nonnull align 8 dereferenceable(576) %4, i64 576, i1 false)
  br label %if.end105

if.end105:                                        ; preds = %if.else80, %if.then68
  %idxprom109.pre-phi = phi i64 [ %idxprom98, %if.else80 ], [ %idxprom71, %if.then68 ]
  %rank29.0.in = phi i32 [ %add94, %if.else80 ], [ %add39, %if.then68 ]
  %rank29.0 = mul i32 %rank29.0.in, 144
  %rem106 = srem i32 %rank29.0, 29
  %rem107 = srem i32 %rank29.0, 31
  %arrayidx110 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %call, i64 %idxprom109.pre-phi
  %30 = bitcast %struct.su3_matrix* %arrayidx110 to i32*
  %sum29.promoted = load i32, i32* %sum29, align 4, !tbaa !402
  %sum31.promoted = load i32, i32* %sum31, align 4, !tbaa !403
  br label %for.body114

for.body114:                                      ; preds = %if.end105, %for.body114
  %val.0357 = phi i32* [ %30, %if.end105 ], [ %incdec.ptr, %for.body114 ]
  %rank29.1356 = phi i32 [ %rem106, %if.end105 ], [ %spec.store.select, %for.body114 ]
  %rank31.1355 = phi i32 [ %rem107, %if.end105 ], [ %spec.store.select226, %for.body114 ]
  %k.1354 = phi i32 [ 0, %if.end105 ], [ %inc135, %for.body114 ]
  %xor350353 = phi i32 [ %sum29.promoted, %if.end105 ], [ %xor, %for.body114 ]
  %xor123351352 = phi i32 [ %sum31.promoted, %if.end105 ], [ %xor123, %for.body114 ]
  %31 = load i32, i32* %val.0357, align 4, !tbaa !13
  %shl = shl i32 %31, %rank29.1356
  %sub = sub nsw i32 32, %rank29.1356
  %shr = lshr i32 %31, %sub
  %or = or i32 %shl, %shr
  %xor = xor i32 %or, %xor350353
  %shl117 = shl i32 %31, %rank31.1355
  %sub118 = sub nsw i32 32, %rank31.1355
  %shr119 = lshr i32 %31, %sub118
  %or120 = or i32 %shl117, %shr119
  %xor123 = xor i32 %xor123351352, %or120
  %inc124 = add nsw i32 %rank29.1356, 1
  %cmp125 = icmp sgt i32 %rank29.1356, 27
  %spec.store.select = select i1 %cmp125, i32 0, i32 %inc124
  %inc129 = add nsw i32 %rank31.1355, 1
  %cmp130 = icmp sgt i32 %rank31.1355, 29
  %spec.store.select226 = select i1 %cmp130, i32 0, i32 %inc129
  %inc135 = add nuw nsw i32 %k.1354, 1
  %incdec.ptr = getelementptr inbounds i32, i32* %val.0357, i64 1
  %exitcond.not = icmp eq i32 %inc135, 144
  br i1 %exitcond.not, label %for.end136, label %for.body114, !llvm.loop !442

for.end136:                                       ; preds = %for.body114
  store i32 %xor, i32* %sum29, align 4, !tbaa !402
  store i32 %xor123, i32* %sum31, align 4, !tbaa !403
  %inc137 = add nsw i32 %buf_length.2364, 1
  %cmp138 = icmp eq i32 %inc137, 4096
  br i1 %cmp138, label %if.then143, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end136
  %32 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %sub140 = add nsw i32 %32, -1
  %cmp141 = icmp eq i32 %isite.0363, %sub140
  br i1 %cmp141, label %if.then143, label %for.inc195

if.then143:                                       ; preds = %lor.lhs.false, %for.end136
  %conv144 = sext i32 %inc137 to i64
  %call145 = call i64 @g_write(i8* %call383, i64 576, i64 %conv144, %struct._IO_FILE* %3) #32
  %conv146 = trunc i64 %call145 to i32
  %cmp147.not = icmp eq i32 %inc137, %conv146
  br i1 %cmp147.not, label %if.end154, label %if.then149

if.then149:                                       ; preds = %if.then143
  %33 = load i32, i32* @this_node, align 4, !tbaa !13
  %call151 = tail call i32* @__errno_location() #37
  %34 = load i32, i32* %call151, align 4, !tbaa !13
  %35 = load i8*, i8** %filename, align 8, !tbaa !401
  %call152 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([56 x i8], [56 x i8]* @.str.119, i64 0, i64 0), i8* nonnull %2, i32 %33, i32 %34, i8* %35) #34
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call153 = call i32 @fflush(%struct._IO_FILE* %36) #34
  call void @terminate(i32 1) #32
  br label %if.end154

if.end154:                                        ; preds = %if.then149, %if.then143
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(589824) %call383, i8 0, i64 589824, i1 false)
  br label %for.inc195

for.inc195:                                       ; preds = %if.end154, %if.then49, %lor.lhs.false, %if.else
  %buf_length.3 = phi i32 [ %buf_length.2364, %if.then49 ], [ %inc137, %lor.lhs.false ], [ %buf_length.2364, %if.else ], [ 0, %if.end154 ]
  %inc196 = add nuw nsw i32 %isite.0363, 1
  %37 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp36 = icmp slt i32 %inc196, %37
  %cmp37 = icmp ult i32 %inc196, %add
  %or.cond = select i1 %cmp36, i1 %cmp37, i1 false
  br i1 %or.cond, label %for.body38, label %for.inc198.loopexit, !llvm.loop !443

for.inc198.loopexit:                              ; preds = %for.inc195
  %.pre = load i32, i32* @number_of_nodes, align 4, !tbaa !13
  br label %for.inc198

for.inc198:                                       ; preds = %for.inc198.loopexit, %for.cond35.preheader
  %38 = phi i32 [ %8, %for.cond35.preheader ], [ %.pre, %for.inc198.loopexit ]
  %39 = phi i32 [ %9, %for.cond35.preheader ], [ %37, %for.inc198.loopexit ]
  %buf_length.2.lcssa = phi i32 [ %buf_length.1369, %for.cond35.preheader ], [ %buf_length.3, %for.inc198.loopexit ]
  %inc199 = add nuw nsw i32 %destnode.0367, 1
  %cmp33 = icmp slt i32 %inc199, %38
  br i1 %cmp33, label %for.cond35.preheader, label %for.end200, !llvm.loop !444

for.end200:                                       ; preds = %for.inc198, %for.cond32.preheader
  %buf_length.1.lcssa = phi i32 [ %buf_length.0374, %for.cond32.preheader ], [ %buf_length.2.lcssa, %for.inc198 ]
  call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %40 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp30 = icmp slt i32 %add, %40
  br i1 %cmp30, label %for.cond32.preheader, label %for.end203, !llvm.loop !445

for.end203:                                       ; preds = %for.end200, %entry
  call void @free(i8* %call383) #32
  call void @g_xor32(i32* nonnull %sum29) #32
  call void @g_xor32(i32* nonnull %sum31) #32
  %41 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp208 = icmp eq i32 %41, 0
  br i1 %cmp208, label %if.then210, label %if.end225

if.then210:                                       ; preds = %for.end203
  %42 = load i64, i64* %checksum_offset, align 8, !tbaa !436
  %call211 = call i32 @g_seek(%struct._IO_FILE* %3, i64 %42, i32 0) #32
  %cmp212 = icmp slt i32 %call211, 0
  br i1 %cmp212, label %if.then214, label %if.end220

if.then214:                                       ; preds = %if.then210
  %43 = load i32, i32* @this_node, align 4, !tbaa !13
  %call216 = tail call i32* @__errno_location() #37
  %44 = load i32, i32* %call216, align 4, !tbaa !13
  %45 = load i8*, i8** %filename, align 8, !tbaa !401
  %call218 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([61 x i8], [61 x i8]* @.str.120, i64 0, i64 0), i8* nonnull %2, i32 %43, i64 %42, i32 %44, i8* %45) #34
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call219 = call i32 @fflush(%struct._IO_FILE* %46) #34
  call void @terminate(i32 1) #32
  br label %if.end220

if.end220:                                        ; preds = %if.then214, %if.then210
  call void @write_checksum(i32 1, %struct.gauge_file* %gf) #34
  %47 = load i8*, i8** %filename, align 8, !tbaa !401
  %call222 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([57 x i8], [57 x i8]* @.str.121, i64 0, i64 0), i8* %47) #34
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 1
  %48 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %arraydecay223 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %48, i64 0, i32 1, i64 0
  %call224 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49.268, i64 0, i64 0), i8* nonnull %arraydecay223) #34
  br label %if.end225

if.end225:                                        ; preds = %if.end220, %for.end203
  call void @llvm.lifetime.end.p0i8(i64 11, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 584, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @w_checkpoint(%struct.gauge_file* %gf) local_unnamed_addr #1 {
entry:
  %checksum_offset = alloca i64, align 8
  %myname = alloca [13 x i8], align 1
  %0 = bitcast i64* %checksum_offset to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #31
  %1 = getelementptr inbounds [13 x i8], [13 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %1) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(13) %1, i8* noundef nonnull align 1 dereferenceable(13) getelementptr inbounds ([13 x i8], [13 x i8]* @__const.w_checkpoint.myname, i64 0, i64 0), i64 13, i1 false)
  %fp1 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp1, align 8, !tbaa !406
  %call = call %struct.su3_matrix* @w_parallel_setup(%struct.gauge_file* %gf, i64* nonnull %checksum_offset) #34
  %sum31 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 6, i32 0
  store i32 0, i32* %sum31, align 4, !tbaa !403
  %sum29 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 6, i32 1
  store i32 0, i32* %sum29, align 4, !tbaa !402
  %3 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv = sext i32 %3 to i64
  %mul = mul nsw i64 %conv, 144
  %4 = load i32, i32* @this_node, align 4, !tbaa !13
  %conv3 = sext i32 %4 to i64
  %mul4 = mul i64 %mul, %conv3
  %5 = bitcast %struct.su3_matrix* %call to i8*
  %filename = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 2
  %cmp139 = icmp sgt i32 %3, 0
  br i1 %cmp139, label %for.body.preheader, label %for.end63

for.body.preheader:                               ; preds = %entry
  %rem10 = urem i64 %mul4, 31
  %conv11 = trunc i64 %rem10 to i32
  %rem = urem i64 %mul4, 29
  %conv5 = trunc i64 %rem to i32
  br label %for.body

for.body:                                         ; preds = %for.inc60.for.body_crit_edge, %for.body.preheader
  %sum31.promoted = phi i32 [ 0, %for.body.preheader ], [ %sum31.promoted.pre, %for.inc60.for.body_crit_edge ]
  %sum29.promoted = phi i32 [ 0, %for.body.preheader ], [ %sum29.promoted.pre, %for.inc60.for.body_crit_edge ]
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc60.for.body_crit_edge ]
  %6 = phi i32 [ %3, %for.body.preheader ], [ %18, %for.inc60.for.body_crit_edge ]
  %buf_length.0142 = phi i32 [ 0, %for.body.preheader ], [ %buf_length.1, %for.inc60.for.body_crit_edge ]
  %rank31.0141 = phi i32 [ %conv11, %for.body.preheader ], [ %spec.store.select86, %for.inc60.for.body_crit_edge ]
  %rank29.0140 = phi i32 [ %conv5, %for.body.preheader ], [ %spec.store.select, %for.inc60.for.body_crit_edge ]
  %mul13 = shl nsw i32 %buf_length.0142, 2
  %idxprom = sext i32 %mul13 to i64
  %arrayidx = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %call, i64 %idxprom
  %7 = bitcast %struct.su3_matrix* %arrayidx to i8*
  %8 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arraydecay = getelementptr inbounds %struct.site, %struct.site* %8, i64 %indvars.iv, i32 8, i64 0
  %9 = bitcast %struct.su3_matrix* %arraydecay to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(576) %7, i8* noundef nonnull align 1 dereferenceable(576) %9, i64 576, i1 false)
  %10 = bitcast %struct.su3_matrix* %arrayidx to i32*
  br label %for.body22

for.body22:                                       ; preds = %for.body, %for.body22
  %rank31.1138 = phi i32 [ %rank31.0141, %for.body ], [ %spec.store.select86, %for.body22 ]
  %rank29.1137 = phi i32 [ %rank29.0140, %for.body ], [ %spec.store.select, %for.body22 ]
  %k.0136 = phi i32 [ 0, %for.body ], [ %inc39, %for.body22 ]
  %val.0135 = phi i32* [ %10, %for.body ], [ %incdec.ptr, %for.body22 ]
  %xor131134 = phi i32 [ %sum29.promoted, %for.body ], [ %xor, %for.body22 ]
  %xor31132133 = phi i32 [ %sum31.promoted, %for.body ], [ %xor31, %for.body22 ]
  %11 = load i32, i32* %val.0135, align 4, !tbaa !13
  %shl = shl i32 %11, %rank29.1137
  %sub = sub nsw i32 32, %rank29.1137
  %shr = lshr i32 %11, %sub
  %or = or i32 %shl, %shr
  %xor = xor i32 %or, %xor131134
  %shl25 = shl i32 %11, %rank31.1138
  %sub26 = sub nsw i32 32, %rank31.1138
  %shr27 = lshr i32 %11, %sub26
  %or28 = or i32 %shl25, %shr27
  %xor31 = xor i32 %xor31132133, %or28
  %inc = add nsw i32 %rank29.1137, 1
  %cmp32 = icmp sgt i32 %rank29.1137, 27
  %spec.store.select = select i1 %cmp32, i32 0, i32 %inc
  %inc34 = add nsw i32 %rank31.1138, 1
  %cmp35 = icmp sgt i32 %rank31.1138, 29
  %spec.store.select86 = select i1 %cmp35, i32 0, i32 %inc34
  %inc39 = add nuw nsw i32 %k.0136, 1
  %incdec.ptr = getelementptr inbounds i32, i32* %val.0135, i64 1
  %exitcond.not = icmp eq i32 %inc39, 144
  br i1 %exitcond.not, label %for.end, label %for.body22, !llvm.loop !446

for.end:                                          ; preds = %for.body22
  store i32 %xor, i32* %sum29, align 4, !tbaa !402
  store i32 %xor31, i32* %sum31, align 4, !tbaa !403
  %inc40 = add nsw i32 %buf_length.0142, 1
  %cmp41 = icmp eq i32 %inc40, 4096
  %sub43 = add nsw i32 %6, -1
  %12 = zext i32 %sub43 to i64
  %cmp44 = icmp eq i64 %indvars.iv, %12
  %or.cond = select i1 %cmp41, i1 true, i1 %cmp44
  br i1 %or.cond, label %if.then46, label %for.inc60

if.then46:                                        ; preds = %for.end
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call47 = call i32 @fflush(%struct._IO_FILE* %13) #34
  %conv48 = sext i32 %inc40 to i64
  %call49 = call i64 @g_write(i8* %5, i64 576, i64 %conv48, %struct._IO_FILE* %2) #32
  %conv50 = trunc i64 %call49 to i32
  %cmp51.not = icmp eq i32 %inc40, %conv50
  br i1 %cmp51.not, label %for.inc60, label %if.then53

if.then53:                                        ; preds = %if.then46
  %14 = load i32, i32* @this_node, align 4, !tbaa !13
  %call55 = tail call i32* @__errno_location() #37
  %15 = load i32, i32* %call55, align 4, !tbaa !13
  %16 = load i8*, i8** %filename, align 8, !tbaa !401
  %call56 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([56 x i8], [56 x i8]* @.str.119, i64 0, i64 0), i8* nonnull %1, i32 %14, i32 %15, i8* %16) #34
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call57 = call i32 @fflush(%struct._IO_FILE* %17) #34
  call void @terminate(i32 1) #32
  br label %for.inc60

for.inc60:                                        ; preds = %for.end, %if.then46, %if.then53
  %buf_length.1 = phi i32 [ 0, %if.then53 ], [ 0, %if.then46 ], [ %inc40, %for.end ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %18 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %19 = sext i32 %18 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %19
  br i1 %cmp, label %for.inc60.for.body_crit_edge, label %for.end63, !llvm.loop !447

for.inc60.for.body_crit_edge:                     ; preds = %for.inc60
  %sum29.promoted.pre = load i32, i32* %sum29, align 4, !tbaa !402
  %sum31.promoted.pre = load i32, i32* %sum31, align 4, !tbaa !403
  br label %for.body

for.end63:                                        ; preds = %for.inc60, %entry
  call void @free(i8* %5) #32
  call void @g_xor32(i32* nonnull %sum29) #32
  call void @g_xor32(i32* nonnull %sum31) #32
  %20 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp68 = icmp eq i32 %20, 0
  br i1 %cmp68, label %if.then70, label %if.end85

if.then70:                                        ; preds = %for.end63
  %21 = load i64, i64* %checksum_offset, align 8, !tbaa !436
  %call71 = call i32 @g_seek(%struct._IO_FILE* %2, i64 %21, i32 0) #32
  %cmp72 = icmp slt i32 %call71, 0
  br i1 %cmp72, label %if.then74, label %if.end80

if.then74:                                        ; preds = %if.then70
  %22 = load i32, i32* @this_node, align 4, !tbaa !13
  %call76 = tail call i32* @__errno_location() #37
  %23 = load i32, i32* %call76, align 4, !tbaa !13
  %24 = load i8*, i8** %filename, align 8, !tbaa !401
  %call78 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([61 x i8], [61 x i8]* @.str.120, i64 0, i64 0), i8* nonnull %1, i32 %22, i64 %21, i32 %23, i8* %24) #34
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call79 = call i32 @fflush(%struct._IO_FILE* %25) #34
  call void @terminate(i32 1) #32
  br label %if.end80

if.end80:                                         ; preds = %if.then74, %if.then70
  call void @write_checksum(i32 1, %struct.gauge_file* nonnull %gf) #34
  %26 = load i8*, i8** %filename, align 8, !tbaa !401
  %call82 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([46 x i8], [46 x i8]* @.str.122, i64 0, i64 0), i8* %26) #34
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 1
  %27 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %arraydecay83 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %27, i64 0, i32 1, i64 0
  %call84 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49.268, i64 0, i64 0), i8* nonnull %arraydecay83) #34
  br label %if.end85

if.end85:                                         ; preds = %if.end80, %for.end63
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @w_parallel_f(%struct.gauge_file* nocapture %gf) local_unnamed_addr #1 {
entry:
  tail call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %fp = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !406
  %cmp.not = icmp eq %struct._IO_FILE* %0, null
  br i1 %cmp.not, label %if.end5, label %if.then

if.then:                                          ; preds = %entry
  %parallel = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 5
  %1 = load i32, i32* %parallel, align 8, !tbaa !409
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([56 x i8], [56 x i8]* @str.192.273, i64 0, i64 0))
  %.pre = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !406
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then
  %2 = phi %struct._IO_FILE* [ %.pre, %if.then1 ], [ %0, %if.then ]
  %call3 = tail call i32 @g_close(%struct._IO_FILE* %2) #32
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp, align 8, !tbaa !406
  br label %if.end5

if.end5:                                          ; preds = %if.end, %entry
  %3 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp6 = icmp eq i32 %3, 0
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end5
  tail call void @write_gauge_info_file(%struct.gauge_file* nonnull %gf) #34
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end5
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct.gauge_file* @r_parallel_i(i8* %filename) local_unnamed_addr #1 {
entry:
  %byterevflag = alloca i32, align 4
  %0 = bitcast i32* %byterevflag to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #31
  %call = tail call %struct.gauge_file* @setup_input_gauge_file(i8* %filename) #34
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 1
  %1 = bitcast %struct.gauge_header** %header to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !398
  %parallel = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 5
  store i32 1, i32* %parallel, align 8, !tbaa !409
  %call1 = tail call %struct._IO_FILE* @g_open(i8* %filename, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i64 0, i64 0)) #32
  %cmp = icmp eq %struct._IO_FILE* %call1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32, i32* @this_node, align 4, !tbaa !13
  %call2 = tail call i32* @__errno_location() #37
  %4 = load i32, i32* %call2, align 4, !tbaa !13
  %call3 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([52 x i8], [52 x i8]* @.str.124, i64 0, i64 0), i32 %3, i8* %filename, i32 %4) #34
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call4 = tail call i32 @fflush(%struct._IO_FILE* %5) #34
  tail call void @terminate(i32 1) #32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %fp5 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp5, align 8, !tbaa !406
  %6 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp6 = icmp eq i32 %6, 0
  br i1 %cmp6, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.end
  %call8 = tail call i32 @read_gauge_hdr(%struct.gauge_file* nonnull %call, i32 1) #34
  store i32 %call8, i32* %byterevflag, align 4, !tbaa !13
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.end
  call void @broadcast_bytes(i8* nonnull %0, i32 4) #32
  %7 = load i32, i32* %byterevflag, align 4, !tbaa !13
  %byterevflag10 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 3
  store i32 %7, i32* %byterevflag10, align 8, !tbaa !407
  call void @broadcast_bytes(i8* %2, i32 92) #32
  call void @read_site_list(i32 1, %struct.gauge_file* nonnull %call) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #31
  ret %struct.gauge_file* %call
}

; Function Attrs: noinline nounwind optsize uwtable
define void @r_parallel(%struct.gauge_file* %gf) local_unnamed_addr #1 {
entry:
  %msg = alloca %struct.anon.0, align 8
  %test_gc = alloca %struct.gauge_check, align 4
  %myname = alloca [11 x i8], align 1
  %0 = bitcast %struct.anon.0* %msg to i8*
  call void @llvm.lifetime.start.p0i8(i64 584, i8* nonnull %0) #31
  %1 = bitcast %struct.gauge_check* %test_gc to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #31
  %2 = getelementptr inbounds [11 x i8], [11 x i8]* %myname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 11, i8* nonnull %2) #31
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(11) %2, i8* noundef nonnull align 1 dereferenceable(11) getelementptr inbounds ([11 x i8], [11 x i8]* @__const.r_parallel.myname, i64 0, i64 0), i64 11, i1 false)
  %fp1 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp1, align 8, !tbaa !406
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 1
  %4 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %filename2 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 2
  %5 = load i8*, i8** %filename2, align 8, !tbaa !401
  %byterevflag3 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 3
  %parallel = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 5
  %6 = load i32, i32* %parallel, align 8, !tbaa !409
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([48 x i8], [48 x i8]* @.str.125, i64 0, i64 0), i8* nonnull %2) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call4 = call noalias align 16 dereferenceable_or_null(2359296) i8* @calloc(i64 16384, i64 144) #32
  %7 = bitcast i8* %call4 to %struct.su3_matrix*
  %cmp = icmp eq i8* %call4, null
  br i1 %cmp, label %if.then5, label %if.end9

if.then5:                                         ; preds = %if.end
  %8 = load i32, i32* @this_node, align 4, !tbaa !13
  %call7 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([31 x i8], [31 x i8]* @.str.102, i64 0, i64 0), i8* nonnull %2, i32 %8) #34
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call8 = call i32 @fflush(%struct._IO_FILE* %9) #34
  call void @terminate(i32 1) #32
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %if.end
  %10 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %mul = shl nsw i32 %10, 2
  %conv = sext i32 %mul to i64
  %mul10 = mul nsw i64 %conv, 144
  %magic_number = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %4, i64 0, i32 0
  %11 = load i32, i32* %magic_number, align 4, !tbaa !404
  %switch.selectcmp = icmp eq i32 %11, 53546
  %switch.select = select i1 %switch.selectcmp, i64 4, i64 0
  %switch.selectcmp352 = icmp eq i32 %11, 20103
  %switch.select353 = select i1 %switch.selectcmp352, i64 8, i64 %switch.select
  %12 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %order = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %12, i64 0, i32 4
  %13 = load i32, i32* %order, align 4, !tbaa !405
  %cmp22 = icmp eq i32 %13, 0
  %14 = load i32, i32* @volume, align 4
  %conv26 = sext i32 %14 to i64
  %mul27 = shl nsw i64 %conv26, 2
  %coord_list_size.0 = select i1 %cmp22, i64 0, i64 %mul27
  %header_bytes = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %12, i64 0, i32 3
  %15 = load i32, i32* %header_bytes, align 4, !tbaa !394
  %conv30 = sext i32 %15 to i64
  %add = add nsw i64 %coord_list_size.0, %conv30
  %add31 = add nsw i64 %add, %switch.select353
  %16 = load i32, i32* @this_node, align 4, !tbaa !13
  %conv32 = sext i32 %16 to i64
  %mul33 = mul nsw i64 %mul10, %conv32
  %add34 = add nsw i64 %add31, %mul33
  %call35 = call i32 @g_seek(%struct._IO_FILE* %3, i64 %add34, i32 0) #32
  %cmp36 = icmp slt i32 %call35, 0
  br i1 %cmp36, label %if.then38, label %if.end43

if.then38:                                        ; preds = %if.end9
  %17 = load i32, i32* @this_node, align 4, !tbaa !13
  %call40 = tail call i32* @__errno_location() #37
  %18 = load i32, i32* %call40, align 4, !tbaa !13
  %call41 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([48 x i8], [48 x i8]* @.str.117, i64 0, i64 0), i8* nonnull %2, i32 %17, i64 %add34, i32 %18, i8* %5) #34
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call42 = call i32 @fflush(%struct._IO_FILE* %19) #34
  call void @terminate(i32 1) #32
  br label %if.end43

if.end43:                                         ; preds = %if.then38, %if.end9
  %sum29 = getelementptr inbounds %struct.gauge_check, %struct.gauge_check* %test_gc, i64 0, i32 1
  store i32 0, i32* %sum29, align 4, !tbaa !410
  %sum31 = getelementptr inbounds %struct.gauge_check, %struct.gauge_check* %test_gc, i64 0, i32 0
  store i32 0, i32* %sum31, align 4, !tbaa !411
  %20 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv44 = sext i32 %20 to i64
  %mul45 = mul nsw i64 %conv44, 144
  %21 = load i32, i32* @this_node, align 4, !tbaa !13
  %conv46 = sext i32 %21 to i64
  %mul47 = mul i64 %mul45, %conv46
  call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %rank2rcv = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 4
  %x170 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %msg, i64 0, i32 0
  %y172 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %msg, i64 0, i32 1
  %z174 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %msg, i64 0, i32 2
  %t176 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %msg, i64 0, i32 3
  %arraydecay207 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %msg, i64 0, i32 4, i64 0
  %22 = bitcast %struct.su3_matrix* %arraydecay207 to i8*
  %23 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp55382 = icmp sgt i32 %23, 0
  br i1 %cmp55382, label %for.cond57.preheader.preheader, label %for.end218

for.cond57.preheader.preheader:                   ; preds = %if.end43
  %rem53 = urem i64 %mul47, 31
  %conv54 = trunc i64 %rem53 to i32
  %rem = urem i64 %mul47, 29
  %conv48 = trunc i64 %rem to i32
  br label %for.cond57.preheader

for.cond57.preheader:                             ; preds = %for.cond57.preheader.preheader, %for.end215
  %24 = phi i32 [ %73, %for.end215 ], [ %23, %for.cond57.preheader.preheader ]
  %buf_length.0388 = phi i32 [ %buf_length.1.lcssa, %for.end215 ], [ 0, %for.cond57.preheader.preheader ]
  %where_in_buf.0387 = phi i32 [ %where_in_buf.1.lcssa, %for.end215 ], [ 0, %for.cond57.preheader.preheader ]
  %rank29.0386 = phi i32 [ %rank29.1.lcssa, %for.end215 ], [ %conv48, %for.cond57.preheader.preheader ]
  %rank31.0385 = phi i32 [ %rank31.1.lcssa, %for.end215 ], [ %conv54, %for.cond57.preheader.preheader ]
  %ksite.0383 = phi i32 [ %add64, %for.end215 ], [ 0, %for.cond57.preheader.preheader ]
  %add64 = add nuw nsw i32 %ksite.0383, 4
  %25 = load i32, i32* @number_of_nodes, align 4, !tbaa !13
  %cmp58371 = icmp sgt i32 %25, 0
  br i1 %cmp58371, label %for.cond61.preheader, label %for.end215

for.cond61.preheader:                             ; preds = %for.cond57.preheader, %for.inc213
  %26 = phi i32 [ %71, %for.inc213 ], [ %25, %for.cond57.preheader ]
  %27 = phi i32 [ %72, %for.inc213 ], [ %24, %for.cond57.preheader ]
  %buf_length.1377 = phi i32 [ %buf_length.2.lcssa, %for.inc213 ], [ %buf_length.0388, %for.cond57.preheader ]
  %where_in_buf.1376 = phi i32 [ %where_in_buf.2.lcssa, %for.inc213 ], [ %where_in_buf.0387, %for.cond57.preheader ]
  %rank29.1375 = phi i32 [ %rank29.2.lcssa, %for.inc213 ], [ %rank29.0386, %for.cond57.preheader ]
  %rank31.1374 = phi i32 [ %rank31.2.lcssa, %for.inc213 ], [ %rank31.0385, %for.cond57.preheader ]
  %sendnode.0372 = phi i32 [ %inc214, %for.inc213 ], [ 0, %for.cond57.preheader ]
  %cmp62359 = icmp slt i32 %ksite.0383, %27
  br i1 %cmp62359, label %for.body67, label %for.inc213

for.body67:                                       ; preds = %for.cond61.preheader, %for.inc210
  %28 = phi i32 [ %70, %for.inc210 ], [ %27, %for.cond61.preheader ]
  %buf_length.2367 = phi i32 [ %buf_length.4, %for.inc210 ], [ %buf_length.1377, %for.cond61.preheader ]
  %where_in_buf.2366 = phi i32 [ %where_in_buf.4, %for.inc210 ], [ %where_in_buf.1376, %for.cond61.preheader ]
  %rank29.2365 = phi i32 [ %rank29.4, %for.inc210 ], [ %rank29.1375, %for.cond61.preheader ]
  %rank31.2364 = phi i32 [ %rank31.4, %for.inc210 ], [ %rank31.1374, %for.cond61.preheader ]
  %isite.0361 = phi i32 [ %inc211, %for.inc210 ], [ %ksite.0383, %for.cond61.preheader ]
  %mul68 = mul nsw i32 %28, %sendnode.0372
  %add69 = add nsw i32 %mul68, %isite.0361
  %29 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %order71 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %29, i64 0, i32 4
  %30 = load i32, i32* %order71, align 4, !tbaa !405
  %cmp72 = icmp eq i32 %30, 0
  br i1 %cmp72, label %if.end76, label %if.else75

if.else75:                                        ; preds = %for.body67
  %31 = load i32*, i32** %rank2rcv, align 8, !tbaa !408
  %idxprom = sext i32 %add69 to i64
  %arrayidx = getelementptr inbounds i32, i32* %31, i64 %idxprom
  %32 = load i32, i32* %arrayidx, align 4, !tbaa !13
  br label %if.end76

if.end76:                                         ; preds = %for.body67, %if.else75
  %rcv_coords.0 = phi i32 [ %32, %if.else75 ], [ %add69, %for.body67 ]
  %33 = load i32, i32* @nx, align 4, !tbaa !13
  %rem77 = srem i32 %rcv_coords.0, %33
  %div = sdiv i32 %rcv_coords.0, %33
  %34 = load i32, i32* @ny, align 4, !tbaa !13
  %rem78 = srem i32 %div, %34
  %div79 = sdiv i32 %div, %34
  %35 = load i32, i32* @nz, align 4, !tbaa !13
  %rem80 = srem i32 %div79, %35
  %div81 = sdiv i32 %div79, %35
  %36 = load i32, i32* @nt, align 4, !tbaa !13
  %rem82 = srem i32 %div81, %36
  %call83 = call i32 @node_number(i32 %rem77, i32 %rem78, i32 %rem80, i32 %rem82) #32
  %37 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp84 = icmp eq i32 %37, %sendnode.0372
  br i1 %cmp84, label %if.then86, label %if.else166

if.then86:                                        ; preds = %if.end76
  %cmp87 = icmp eq i32 %where_in_buf.2366, %buf_length.2367
  br i1 %cmp87, label %if.then89, label %if.end106

if.then89:                                        ; preds = %if.then86
  %38 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %sub = sub nsw i32 %38, %isite.0361
  %39 = icmp slt i32 %sub, 4096
  %spec.store.select = select i1 %39, i32 %sub, i32 4096
  %mul94 = shl nsw i32 %spec.store.select, 2
  %conv95 = sext i32 %mul94 to i64
  %mul96 = mul nsw i64 %conv95, 144
  %call97 = call i64 @g_read(i8* %call4, i64 %mul96, i64 1, %struct._IO_FILE* %3) #32
  %cmp98.not = icmp eq i64 %call97, 1
  br i1 %cmp98.not, label %if.end106, label %if.then100

if.then100:                                       ; preds = %if.then89
  %40 = load i32, i32* @this_node, align 4, !tbaa !13
  %call102 = tail call i32* @__errno_location() #37
  %41 = load i32, i32* %call102, align 4, !tbaa !13
  %call103 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([55 x i8], [55 x i8]* @.str.104, i64 0, i64 0), i8* nonnull %2, i32 %40, i32 %41, i8* %5) #34
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call104 = call i32 @fflush(%struct._IO_FILE* %42) #34
  call void @terminate(i32 1) #32
  br label %if.end106

if.end106:                                        ; preds = %if.then89, %if.then100, %if.then86
  %where_in_buf.3 = phi i32 [ %where_in_buf.2366, %if.then86 ], [ 0, %if.then100 ], [ 0, %if.then89 ]
  %buf_length.3 = phi i32 [ %buf_length.2367, %if.then86 ], [ %spec.store.select, %if.then100 ], [ %spec.store.select, %if.then89 ]
  %43 = load i32, i32* %byterevflag3, align 8, !tbaa !407
  %cmp108 = icmp eq i32 %43, 1
  %mul111 = shl nsw i32 %where_in_buf.3, 2
  %idxprom112 = sext i32 %mul111 to i64
  br i1 %cmp108, label %if.then110, label %if.end114

if.then110:                                       ; preds = %if.end106
  %arrayidx113 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %7, i64 %idxprom112
  %44 = bitcast %struct.su3_matrix* %arrayidx113 to i32*
  call void @byterevn(i32* %44, i32 144) #32
  br label %if.end114

if.end114:                                        ; preds = %if.end106, %if.then110
  %arrayidx117 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %7, i64 %idxprom112
  %45 = bitcast %struct.su3_matrix* %arrayidx117 to i32*
  %sum29.promoted = load i32, i32* %sum29, align 4, !tbaa !410
  %sum31.promoted = load i32, i32* %sum31, align 4, !tbaa !411
  br label %for.body121

for.body121:                                      ; preds = %if.end114, %for.body121
  %val.0358 = phi i32* [ %45, %if.end114 ], [ %incdec.ptr, %for.body121 ]
  %k.0357 = phi i32 [ 0, %if.end114 ], [ %inc139, %for.body121 ]
  %rank29.3356 = phi i32 [ %rank29.2365, %if.end114 ], [ %spec.store.select243, %for.body121 ]
  %rank31.3355 = phi i32 [ %rank31.2364, %if.end114 ], [ %spec.store.select244, %for.body121 ]
  %46 = phi i32 [ %sum29.promoted, %if.end114 ], [ %xor, %for.body121 ]
  %47 = phi i32 [ %sum31.promoted, %if.end114 ], [ %xor129, %for.body121 ]
  %48 = load i32, i32* %val.0358, align 4, !tbaa !13
  %shl = shl i32 %48, %rank29.3356
  %sub122 = sub nsw i32 32, %rank29.3356
  %shr = lshr i32 %48, %sub122
  %or = or i32 %shl, %shr
  %xor = xor i32 %or, %46
  %shl124 = shl i32 %48, %rank31.3355
  %sub125 = sub nsw i32 32, %rank31.3355
  %shr126 = lshr i32 %48, %sub125
  %or127 = or i32 %shl124, %shr126
  %xor129 = xor i32 %47, %or127
  %inc = add nsw i32 %rank29.3356, 1
  %cmp130 = icmp sgt i32 %rank29.3356, 27
  %spec.store.select243 = select i1 %cmp130, i32 0, i32 %inc
  %inc134 = add nsw i32 %rank31.3355, 1
  %cmp135 = icmp sgt i32 %rank31.3355, 29
  %spec.store.select244 = select i1 %cmp135, i32 0, i32 %inc134
  %inc139 = add nuw nsw i32 %k.0357, 1
  %incdec.ptr = getelementptr inbounds i32, i32* %val.0358, i64 1
  %exitcond.not = icmp eq i32 %inc139, 144
  br i1 %exitcond.not, label %for.end, label %for.body121, !llvm.loop !448

for.end:                                          ; preds = %for.body121
  store i32 %xor, i32* %sum29, align 4, !tbaa !410
  store i32 %xor129, i32* %sum31, align 4, !tbaa !411
  %cmp140 = icmp eq i32 %call83, %sendnode.0372
  br i1 %cmp140, label %if.then142, label %if.else150

if.then142:                                       ; preds = %for.end
  %call143 = call i32 @node_index(i32 %rem77, i32 %rem78, i32 %rem80, i32 %rem82) #32
  %49 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom144 = sext i32 %call143 to i64
  %arraydecay146 = getelementptr inbounds %struct.site, %struct.site* %49, i64 %idxprom144, i32 8, i64 0
  %50 = bitcast %struct.su3_matrix* %arraydecay146 to i8*
  %51 = bitcast %struct.su3_matrix* %arrayidx117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(576) %50, i8* noundef nonnull align 16 dereferenceable(576) %51, i64 576, i1 false)
  br label %if.end164

if.else150:                                       ; preds = %for.end
  %conv151 = trunc i32 %rem77 to i16
  store i16 %conv151, i16* %x170, align 8, !tbaa !437
  %conv153 = trunc i32 %rem78 to i16
  store i16 %conv153, i16* %y172, align 2, !tbaa !439
  %conv155 = trunc i32 %rem80 to i16
  store i16 %conv155, i16* %z174, align 4, !tbaa !440
  %conv157 = trunc i32 %rem82 to i16
  store i16 %conv157, i16* %t176, align 2, !tbaa !441
  %52 = bitcast %struct.su3_matrix* %arrayidx117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(576) %22, i8* noundef nonnull align 16 dereferenceable(576) %52, i64 576, i1 false)
  call void @send_field(i8* nonnull %0, i32 584, i32 %call83) #32
  br label %if.end164

if.end164:                                        ; preds = %if.else150, %if.then142
  %inc165 = add nsw i32 %where_in_buf.3, 1
  br label %for.inc210

if.else166:                                       ; preds = %if.end76
  %cmp167 = icmp eq i32 %37, %call83
  br i1 %cmp167, label %if.then169, label %for.inc210

if.then169:                                       ; preds = %if.else166
  call void @get_field(i8* nonnull %0, i32 584) #32
  %53 = load i16, i16* %x170, align 8, !tbaa !437
  %conv171 = sext i16 %53 to i32
  %54 = load i16, i16* %y172, align 2, !tbaa !439
  %conv173 = sext i16 %54 to i32
  %55 = load i16, i16* %z174, align 4, !tbaa !440
  %conv175 = sext i16 %55 to i32
  %56 = load i16, i16* %t176, align 2, !tbaa !441
  %conv177 = sext i16 %56 to i32
  %call178 = call i32 @node_index(i32 %conv171, i32 %conv173, i32 %conv175, i32 %conv177) #32
  %57 = load i32, i32* @this_node, align 4, !tbaa !13
  %58 = load i16, i16* %x170, align 8, !tbaa !437
  %conv180 = sext i16 %58 to i32
  %59 = load i16, i16* %y172, align 2, !tbaa !439
  %conv182 = sext i16 %59 to i32
  %60 = load i16, i16* %z174, align 4, !tbaa !440
  %conv184 = sext i16 %60 to i32
  %61 = load i16, i16* %t176, align 2, !tbaa !441
  %conv186 = sext i16 %61 to i32
  %call187 = call i32 @node_number(i32 %conv180, i32 %conv182, i32 %conv184, i32 %conv186) #32
  %cmp188.not = icmp eq i32 %57, %call187
  br i1 %cmp188.not, label %if.end201, label %if.then190

if.then190:                                       ; preds = %if.then169
  %62 = load i32, i32* @this_node, align 4, !tbaa !13
  %63 = load i16, i16* %x170, align 8, !tbaa !437
  %conv192 = sext i16 %63 to i32
  %64 = load i16, i16* %y172, align 2, !tbaa !439
  %conv194 = sext i16 %64 to i32
  %65 = load i16, i16* %z174, align 4, !tbaa !440
  %conv196 = sext i16 %65 to i32
  %66 = load i16, i16* %t176, align 2, !tbaa !441
  %conv198 = sext i16 %66 to i32
  %call199 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([37 x i8], [37 x i8]* @.str.126.274, i64 0, i64 0), i32 %62, i32 %conv192, i32 %conv194, i32 %conv196, i32 %conv198) #34
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call200 = call i32 @fflush(%struct._IO_FILE* %67) #34
  call void @terminate(i32 1) #32
  br label %if.end201

if.end201:                                        ; preds = %if.then190, %if.then169
  %68 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom202 = sext i32 %call178 to i64
  %arraydecay205 = getelementptr inbounds %struct.site, %struct.site* %68, i64 %idxprom202, i32 8, i64 0
  %69 = bitcast %struct.su3_matrix* %arraydecay205 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(576) %69, i8* noundef nonnull align 8 dereferenceable(576) %22, i64 576, i1 false)
  br label %for.inc210

for.inc210:                                       ; preds = %if.end164, %if.end201, %if.else166
  %rank31.4 = phi i32 [ %spec.store.select244, %if.end164 ], [ %rank31.2364, %if.end201 ], [ %rank31.2364, %if.else166 ]
  %rank29.4 = phi i32 [ %spec.store.select243, %if.end164 ], [ %rank29.2365, %if.end201 ], [ %rank29.2365, %if.else166 ]
  %where_in_buf.4 = phi i32 [ %inc165, %if.end164 ], [ %where_in_buf.2366, %if.end201 ], [ %where_in_buf.2366, %if.else166 ]
  %buf_length.4 = phi i32 [ %buf_length.3, %if.end164 ], [ %buf_length.2367, %if.end201 ], [ %buf_length.2367, %if.else166 ]
  %inc211 = add nuw nsw i32 %isite.0361, 1
  %70 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp62 = icmp slt i32 %inc211, %70
  %cmp65 = icmp ult i32 %inc211, %add64
  %or.cond = select i1 %cmp62, i1 %cmp65, i1 false
  br i1 %or.cond, label %for.body67, label %for.inc213.loopexit, !llvm.loop !449

for.inc213.loopexit:                              ; preds = %for.inc210
  %.pre = load i32, i32* @number_of_nodes, align 4, !tbaa !13
  br label %for.inc213

for.inc213:                                       ; preds = %for.inc213.loopexit, %for.cond61.preheader
  %71 = phi i32 [ %26, %for.cond61.preheader ], [ %.pre, %for.inc213.loopexit ]
  %72 = phi i32 [ %27, %for.cond61.preheader ], [ %70, %for.inc213.loopexit ]
  %rank31.2.lcssa = phi i32 [ %rank31.1374, %for.cond61.preheader ], [ %rank31.4, %for.inc213.loopexit ]
  %rank29.2.lcssa = phi i32 [ %rank29.1375, %for.cond61.preheader ], [ %rank29.4, %for.inc213.loopexit ]
  %where_in_buf.2.lcssa = phi i32 [ %where_in_buf.1376, %for.cond61.preheader ], [ %where_in_buf.4, %for.inc213.loopexit ]
  %buf_length.2.lcssa = phi i32 [ %buf_length.1377, %for.cond61.preheader ], [ %buf_length.4, %for.inc213.loopexit ]
  %inc214 = add nuw nsw i32 %sendnode.0372, 1
  %cmp58 = icmp slt i32 %inc214, %71
  br i1 %cmp58, label %for.cond61.preheader, label %for.end215, !llvm.loop !450

for.end215:                                       ; preds = %for.inc213, %for.cond57.preheader
  %rank31.1.lcssa = phi i32 [ %rank31.0385, %for.cond57.preheader ], [ %rank31.2.lcssa, %for.inc213 ]
  %rank29.1.lcssa = phi i32 [ %rank29.0386, %for.cond57.preheader ], [ %rank29.2.lcssa, %for.inc213 ]
  %where_in_buf.1.lcssa = phi i32 [ %where_in_buf.0387, %for.cond57.preheader ], [ %where_in_buf.2.lcssa, %for.inc213 ]
  %buf_length.1.lcssa = phi i32 [ %buf_length.0388, %for.cond57.preheader ], [ %buf_length.2.lcssa, %for.inc213 ]
  call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %73 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp55 = icmp slt i32 %add64, %73
  br i1 %cmp55, label %for.cond57.preheader, label %for.end218, !llvm.loop !451

for.end218:                                       ; preds = %for.end215, %if.end43
  call void @free(i8* %call4) #32
  call void @g_xor32(i32* nonnull %sum29) #32
  call void @g_xor32(i32* nonnull %sum31) #32
  %74 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp221 = icmp eq i32 %74, 0
  br i1 %cmp221, label %if.then223, label %if.end242

if.then223:                                       ; preds = %for.end218
  %call224 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.127, i64 0, i64 0), i8* %5) #34
  %75 = load i32, i32* %magic_number, align 4, !tbaa !404
  %cmp226 = icmp eq i32 %75, 20103
  br i1 %cmp226, label %if.then228, label %if.end240

if.then228:                                       ; preds = %if.then223
  %arraydecay229 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %4, i64 0, i32 1, i64 0
  %call230 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49.268, i64 0, i64 0), i8* nonnull %arraydecay229) #34
  %call231 = call i32 @g_seek(%struct._IO_FILE* %3, i64 %add, i32 0) #32
  %cmp232 = icmp slt i32 %call231, 0
  br i1 %cmp232, label %if.then234, label %if.end239

if.then234:                                       ; preds = %if.then228
  %call236 = tail call i32* @__errno_location() #37
  %76 = load i32, i32* %call236, align 4, !tbaa !13
  %call237 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([60 x i8], [60 x i8]* @.str.128, i64 0, i64 0), i8* nonnull %2, i64 %add34, i32 %76, i8* %5) #34
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call238 = call i32 @fflush(%struct._IO_FILE* %77) #34
  call void @terminate(i32 1) #32
  br label %if.end239

if.end239:                                        ; preds = %if.then234, %if.then228
  call void @read_checksum(i32 1, %struct.gauge_file* %gf, %struct.gauge_check* nonnull %test_gc) #34
  br label %if.end240

if.end240:                                        ; preds = %if.end239, %if.then223
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call241 = call i32 @fflush(%struct._IO_FILE* %78) #34
  br label %if.end242

if.end242:                                        ; preds = %if.end240, %for.end218
  call void @llvm.lifetime.end.p0i8(i64 11, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 584, i8* nonnull %0) #31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @r_parallel_f(%struct.gauge_file* nocapture %gf) local_unnamed_addr #1 {
entry:
  tail call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %fp = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 0
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !406
  %cmp.not = icmp eq %struct._IO_FILE* %0, null
  br i1 %cmp.not, label %if.end5, label %if.then

if.then:                                          ; preds = %entry
  %parallel = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %gf, i64 0, i32 5
  %1 = load i32, i32* %parallel, align 8, !tbaa !409
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([56 x i8], [56 x i8]* @str.193, i64 0, i64 0))
  %.pre = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !406
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then
  %2 = phi %struct._IO_FILE* [ %.pre, %if.then1 ], [ %0, %if.then ]
  %call3 = tail call i32 @g_close(%struct._IO_FILE* %2) #32
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp, align 8, !tbaa !406
  br label %if.end5

if.end5:                                          ; preds = %if.end, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct.gauge_file* @restore_ascii(i8* %filename) local_unnamed_addr #1 {
entry:
  %version_number = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %t = alloca i32, align 4
  %lbuf = alloca [4 x %struct.su3_matrix], align 16
  %0 = bitcast i32* %version_number to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #31
  %1 = bitcast i32* %x to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #31
  %2 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #31
  %3 = bitcast i32* %z to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #31
  %4 = bitcast i32* %t to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #31
  %5 = bitcast [4 x %struct.su3_matrix]* %lbuf to i8*
  call void @llvm.lifetime.start.p0i8(i64 576, i8* nonnull %5) #31
  %call = tail call %struct.gauge_file* @setup_input_gauge_file(i8* %filename) #34
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 1
  %6 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %parallel = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 5
  store i32 0, i32* %parallel, align 8, !tbaa !409
  %7 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp = icmp eq i32 %7, 0
  br i1 %cmp, label %if.then, label %if.else82

if.then:                                          ; preds = %entry
  %call1 = tail call %struct._IO_FILE* @fopen(i8* %filename, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.130, i64 0, i64 0)) #34
  %cmp2 = icmp eq %struct._IO_FILE* %call1, null
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %call4 = tail call i32* @__errno_location() #37
  %8 = load i32, i32* %call4, align 4, !tbaa !13
  %call5 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([30 x i8], [30 x i8]* @.str.131, i64 0, i64 0), i8* %filename, i32 %8) #34
  tail call void @terminate(i32 1) #32
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %fp6 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp6, align 8, !tbaa !406
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i64 0, i64 0), i32* nonnull %version_number) #32
  %cmp8.not = icmp eq i32 %call7, 1
  br i1 %cmp8.not, label %if.end11, label %if.then9

if.then9:                                         ; preds = %if.end
  %puts266 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([44 x i8], [44 x i8]* @str.198, i64 0, i64 0))
  call void @terminate(i32 1) #32
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end
  %9 = load i32, i32* %version_number, align 4, !tbaa !13
  %magic_number = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 0
  store i32 %9, i32* %magic_number, align 4, !tbaa !404
  %cmp13.not = icmp eq i32 %9, 20103
  br i1 %cmp13.not, label %if.end18, label %if.then14

if.then14:                                        ; preds = %if.end11
  %puts265 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([58 x i8], [58 x i8]* @str.197, i64 0, i64 0))
  %10 = load i32, i32* %magic_number, align 4, !tbaa !404
  %call17 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([27 x i8], [27 x i8]* @.str.134, i64 0, i64 0), i32 %10, i32 20103) #34
  call void @terminate(i32 1) #32
  br label %if.end18

if.end18:                                         ; preds = %if.then14, %if.end11
  %arraydecay = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 1, i64 0
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.135, i64 0, i64 0), i8* nonnull %arraydecay) #32
  %cmp20.not = icmp eq i32 %call19, 1
  br i1 %cmp20.not, label %if.end26, label %if.then21

if.then21:                                        ; preds = %if.end18
  %puts264 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([40 x i8], [40 x i8]* @str.196, i64 0, i64 0))
  %call25 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([24 x i8], [24 x i8]* @.str.137, i64 0, i64 0), i32 %call19, i8* nonnull %arraydecay) #34
  call void @terminate(i32 1) #32
  br label %if.end26

if.end26:                                         ; preds = %if.then21, %if.end18
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.138, i64 0, i64 0), i32* nonnull %x, i32* nonnull %y, i32* nonnull %z, i32* nonnull %t) #32
  %cmp28.not = icmp eq i32 %call27, 4
  br i1 %cmp28.not, label %if.end31, label %if.then29

if.then29:                                        ; preds = %if.end26
  %puts263 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([43 x i8], [43 x i8]* @str.195, i64 0, i64 0))
  call void @terminate(i32 1) #32
  br label %if.end31

if.end31:                                         ; preds = %if.then29, %if.end26
  %11 = load i32, i32* %x, align 4, !tbaa !13
  %arrayidx = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 2, i64 0
  store i32 %11, i32* %arrayidx, align 4, !tbaa !13
  %12 = load i32, i32* %y, align 4, !tbaa !13
  %arrayidx33 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 2, i64 1
  store i32 %12, i32* %arrayidx33, align 4, !tbaa !13
  %13 = load i32, i32* %z, align 4, !tbaa !13
  %arrayidx35 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 2, i64 2
  store i32 %13, i32* %arrayidx35, align 4, !tbaa !13
  %14 = load i32, i32* %t, align 4, !tbaa !13
  %arrayidx37 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 2, i64 3
  store i32 %14, i32* %arrayidx37, align 4, !tbaa !13
  %15 = load i32, i32* @nx, align 4, !tbaa !13
  %cmp40.not = icmp eq i32 %11, %15
  %16 = load i32, i32* @ny, align 4
  %cmp43.not = icmp eq i32 %12, %16
  %or.cond268 = select i1 %cmp40.not, i1 %cmp43.not, i1 false
  %17 = load i32, i32* @nz, align 4
  br i1 %or.cond268, label %lor.lhs.false44, label %if.end31.if.then52_crit_edge

if.end31.if.then52_crit_edge:                     ; preds = %if.end31
  %.pre293 = load i32, i32* @nt, align 4
  br label %if.then52

lor.lhs.false44:                                  ; preds = %if.end31
  %cmp47.not = icmp eq i32 %13, %17
  %18 = load i32, i32* @nt, align 4
  %cmp51.not = icmp eq i32 %14, %18
  %or.cond267 = select i1 %cmp47.not, i1 %cmp51.not, i1 false
  br i1 %or.cond267, label %if.end81, label %if.then52

if.then52:                                        ; preds = %if.end31.if.then52_crit_edge, %lor.lhs.false44
  %19 = phi i32 [ %.pre293, %if.end31.if.then52_crit_edge ], [ %18, %lor.lhs.false44 ]
  %cmp53 = icmp ne i32 %15, -1
  %cmp55 = icmp ne i32 %16, -1
  %or.cond = select i1 %cmp53, i1 true, i1 %cmp55
  %cmp57 = icmp ne i32 %17, -1
  %or.cond190 = select i1 %or.cond, i1 true, i1 %cmp57
  %cmp59 = icmp ne i32 %19, -1
  %or.cond191 = select i1 %or.cond190, i1 true, i1 %cmp59
  br i1 %or.cond191, label %if.then60, label %if.else

if.then60:                                        ; preds = %if.then52
  %call69 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([51 x i8], [51 x i8]* @.str.140.277, i64 0, i64 0), i32 %11, i32 %12, i32 %13, i32 %14) #34
  call void @terminate(i32 1) #32
  br label %if.end81

if.else:                                          ; preds = %if.then52
  store i32 %11, i32* @nx, align 4, !tbaa !13
  store i32 %12, i32* @ny, align 4, !tbaa !13
  store i32 %13, i32* @nz, align 4, !tbaa !13
  store i32 %14, i32* @nt, align 4, !tbaa !13
  %mul = mul nsw i32 %12, %11
  %mul78 = mul nsw i32 %mul, %13
  %mul79 = mul nsw i32 %mul78, %14
  store i32 %mul79, i32* @volume, align 4, !tbaa !13
  br label %if.end81

if.end81:                                         ; preds = %lor.lhs.false44, %if.then60, %if.else
  %order = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 4
  store i32 0, i32* %order, align 4, !tbaa !405
  br label %if.end84

if.else82:                                        ; preds = %entry
  %fp83 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp83, align 8, !tbaa !406
  br label %if.end84

if.end84:                                         ; preds = %if.else82, %if.end81
  %fp.0 = phi %struct._IO_FILE* [ %call1, %if.end81 ], [ undef, %if.else82 ]
  %byterevflag = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 3
  store i32 0, i32* %byterevflag, align 8, !tbaa !407
  %20 = bitcast %struct.gauge_header* %6 to i8*
  call void @broadcast_bytes(i8* %20, i32 92) #32
  call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  store i32 0, i32* %t, align 4, !tbaa !13
  %21 = load i32, i32* @nt, align 4, !tbaa !13
  %cmp85279 = icmp sgt i32 %21, 0
  br i1 %cmp85279, label %for.cond86.preheader.preheader, label %for.end179

for.cond86.preheader.preheader:                   ; preds = %if.end84
  %.pre294 = load i32, i32* @nz, align 4, !tbaa !13
  br label %for.cond86.preheader

for.cond86.preheader:                             ; preds = %for.cond86.preheader.preheader, %for.inc177
  %22 = phi i32 [ %21, %for.cond86.preheader.preheader ], [ %60, %for.inc177 ]
  %23 = phi i32 [ 0, %for.cond86.preheader.preheader ], [ %inc178, %for.inc177 ]
  %24 = phi i32 [ %.pre294, %for.cond86.preheader.preheader ], [ %62, %for.inc177 ]
  %25 = phi i32 [ %.pre294, %for.cond86.preheader.preheader ], [ %63, %for.inc177 ]
  store i32 0, i32* %z, align 4, !tbaa !13
  %cmp87278 = icmp sgt i32 %25, 0
  br i1 %cmp87278, label %for.cond89.preheader.preheader, label %for.inc177

for.cond89.preheader.preheader:                   ; preds = %for.cond86.preheader
  %.pre295 = load i32, i32* @ny, align 4, !tbaa !13
  br label %for.cond89.preheader

for.cond89.preheader:                             ; preds = %for.cond89.preheader.preheader, %for.inc174
  %26 = phi i32 [ %24, %for.cond89.preheader.preheader ], [ %56, %for.inc174 ]
  %27 = phi i32 [ 0, %for.cond89.preheader.preheader ], [ %inc175, %for.inc174 ]
  %28 = phi i32 [ %.pre295, %for.cond89.preheader.preheader ], [ %58, %for.inc174 ]
  %29 = phi i32 [ %.pre295, %for.cond89.preheader.preheader ], [ %59, %for.inc174 ]
  store i32 0, i32* %y, align 4, !tbaa !13
  %cmp90277 = icmp sgt i32 %29, 0
  br i1 %cmp90277, label %for.cond92.preheader.preheader, label %for.inc174

for.cond92.preheader.preheader:                   ; preds = %for.cond89.preheader
  %.pre296 = load i32, i32* @nx, align 4, !tbaa !13
  br label %for.cond92.preheader

for.cond92.preheader:                             ; preds = %for.cond92.preheader.preheader, %for.inc171
  %30 = phi i32 [ %28, %for.cond92.preheader.preheader ], [ %53, %for.inc171 ]
  %31 = phi i32 [ 0, %for.cond92.preheader.preheader ], [ %inc172, %for.inc171 ]
  %32 = phi i32 [ %.pre296, %for.cond92.preheader.preheader ], [ %55, %for.inc171 ]
  store i32 0, i32* %x, align 4, !tbaa !13
  %cmp93275 = icmp sgt i32 %32, 0
  br i1 %cmp93275, label %for.body94, label %for.inc171

for.body94:                                       ; preds = %for.cond92.preheader, %for.inc168
  %33 = phi i32 [ %.pre297, %for.inc168 ], [ %31, %for.cond92.preheader ]
  %storemerge262276 = phi i32 [ %inc169, %for.inc168 ], [ 0, %for.cond92.preheader ]
  %34 = load i32, i32* %z, align 4, !tbaa !13
  %35 = load i32, i32* %t, align 4, !tbaa !13
  %call95 = call i32 @node_number(i32 %storemerge262276, i32 %33, i32 %34, i32 %35) #32
  %36 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp96 = icmp eq i32 %36, 0
  br i1 %cmp96, label %for.cond101.preheader, label %if.else148

for.cond101.preheader:                            ; preds = %for.body94, %for.inc127
  %indvars.iv287 = phi i64 [ %indvars.iv.next288, %for.inc127 ], [ 0, %for.body94 ]
  br label %for.cond104.preheader

for.cond104.preheader:                            ; preds = %for.cond101.preheader, %for.inc124
  %indvars.iv284 = phi i64 [ 0, %for.cond101.preheader ], [ %indvars.iv.next285, %for.inc124 ]
  br label %for.body106

for.body106:                                      ; preds = %for.cond104.preheader, %for.inc
  %indvars.iv281 = phi i64 [ 0, %for.cond104.preheader ], [ %indvars.iv.next282, %for.inc ]
  %real = getelementptr inbounds [4 x %struct.su3_matrix], [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv287, i32 0, i64 %indvars.iv284, i64 %indvars.iv281, i32 0
  %imag = getelementptr inbounds [4 x %struct.su3_matrix], [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv287, i32 0, i64 %indvars.iv284, i64 %indvars.iv281, i32 1
  %call119 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %fp.0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.141, i64 0, i64 0), double* nonnull %real, double* nonnull %imag) #32
  %cmp120.not = icmp eq i32 %call119, 2
  br i1 %cmp120.not, label %for.inc, label %if.then121

if.then121:                                       ; preds = %for.body106
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([37 x i8], [37 x i8]* @str.194, i64 0, i64 0))
  call void @terminate(i32 1) #32
  br label %for.inc

for.inc:                                          ; preds = %for.body106, %if.then121
  %indvars.iv.next282 = add nuw nsw i64 %indvars.iv281, 1
  %exitcond283.not = icmp eq i64 %indvars.iv.next282, 3
  br i1 %exitcond283.not, label %for.inc124, label %for.body106, !llvm.loop !452

for.inc124:                                       ; preds = %for.inc
  %indvars.iv.next285 = add nuw nsw i64 %indvars.iv284, 1
  %exitcond286.not = icmp eq i64 %indvars.iv.next285, 3
  br i1 %exitcond286.not, label %for.inc127, label %for.cond104.preheader, !llvm.loop !453

for.inc127:                                       ; preds = %for.inc124
  %indvars.iv.next288 = add nuw nsw i64 %indvars.iv287, 1
  %exitcond289.not = icmp eq i64 %indvars.iv.next288, 4
  br i1 %exitcond289.not, label %for.end129, label %for.cond101.preheader, !llvm.loop !454

for.end129:                                       ; preds = %for.inc127
  %cmp130 = icmp eq i32 %call95, 0
  br i1 %cmp130, label %if.then131, label %if.else145

if.then131:                                       ; preds = %for.end129
  %37 = load i32, i32* %x, align 4, !tbaa !13
  %38 = load i32, i32* %y, align 4, !tbaa !13
  %39 = load i32, i32* %z, align 4, !tbaa !13
  %40 = load i32, i32* %t, align 4, !tbaa !13
  %call132 = call i32 @node_index(i32 %37, i32 %38, i32 %39, i32 %40) #32
  %idxprom136 = sext i32 %call132 to i64
  br label %for.body135

for.body135:                                      ; preds = %if.then131, %for.body135
  %indvars.iv290 = phi i64 [ 0, %if.then131 ], [ %indvars.iv.next291, %for.body135 ]
  %41 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx139 = getelementptr inbounds %struct.site, %struct.site* %41, i64 %idxprom136, i32 8, i64 %indvars.iv290
  %arrayidx141 = getelementptr inbounds [4 x %struct.su3_matrix], [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv290
  %42 = bitcast %struct.su3_matrix* %arrayidx139 to i8*
  %43 = bitcast %struct.su3_matrix* %arrayidx141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(144) %42, i8* noundef nonnull align 16 dereferenceable(144) %43, i64 144, i1 false), !tbaa.struct !25
  %indvars.iv.next291 = add nuw nsw i64 %indvars.iv290, 1
  %exitcond292.not = icmp eq i64 %indvars.iv.next291, 4
  br i1 %exitcond292.not, label %for.inc168, label %for.body135, !llvm.loop !455

if.else145:                                       ; preds = %for.end129
  call void @send_field(i8* nonnull %5, i32 576, i32 %call95) #32
  br label %for.inc168

if.else148:                                       ; preds = %for.body94
  %cmp149 = icmp eq i32 %36, %call95
  br i1 %cmp149, label %if.then150, label %for.inc168

if.then150:                                       ; preds = %if.else148
  call void @get_field(i8* nonnull %5, i32 576) #32
  %44 = load i32, i32* %x, align 4, !tbaa !13
  %45 = load i32, i32* %y, align 4, !tbaa !13
  %46 = load i32, i32* %z, align 4, !tbaa !13
  %47 = load i32, i32* %t, align 4, !tbaa !13
  %call152 = call i32 @node_index(i32 %44, i32 %45, i32 %46, i32 %47) #32
  %idxprom156 = sext i32 %call152 to i64
  br label %for.body155

for.body155:                                      ; preds = %if.then150, %for.body155
  %indvars.iv = phi i64 [ 0, %if.then150 ], [ %indvars.iv.next, %for.body155 ]
  %48 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %arrayidx160 = getelementptr inbounds %struct.site, %struct.site* %48, i64 %idxprom156, i32 8, i64 %indvars.iv
  %arrayidx162 = getelementptr inbounds [4 x %struct.su3_matrix], [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv
  %49 = bitcast %struct.su3_matrix* %arrayidx160 to i8*
  %50 = bitcast %struct.su3_matrix* %arrayidx162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(144) %49, i8* noundef nonnull align 16 dereferenceable(144) %50, i64 144, i1 false), !tbaa.struct !25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.inc168, label %for.body155, !llvm.loop !456

for.inc168:                                       ; preds = %for.body155, %for.body135, %if.else145, %if.else148
  %51 = load i32, i32* %x, align 4, !tbaa !13
  %inc169 = add nsw i32 %51, 1
  store i32 %inc169, i32* %x, align 4, !tbaa !13
  %52 = load i32, i32* @nx, align 4, !tbaa !13
  %cmp93 = icmp slt i32 %inc169, %52
  %.pre297 = load i32, i32* %y, align 4, !tbaa !13
  br i1 %cmp93, label %for.body94, label %for.inc171.loopexit, !llvm.loop !457

for.inc171.loopexit:                              ; preds = %for.inc168
  %.pre299 = load i32, i32* @ny, align 4, !tbaa !13
  br label %for.inc171

for.inc171:                                       ; preds = %for.inc171.loopexit, %for.cond92.preheader
  %53 = phi i32 [ %.pre299, %for.inc171.loopexit ], [ %30, %for.cond92.preheader ]
  %54 = phi i32 [ %.pre297, %for.inc171.loopexit ], [ %31, %for.cond92.preheader ]
  %55 = phi i32 [ %52, %for.inc171.loopexit ], [ %32, %for.cond92.preheader ]
  %inc172 = add nsw i32 %54, 1
  store i32 %inc172, i32* %y, align 4, !tbaa !13
  %cmp90 = icmp slt i32 %inc172, %53
  br i1 %cmp90, label %for.cond92.preheader, label %for.inc174.loopexit, !llvm.loop !458

for.inc174.loopexit:                              ; preds = %for.inc171
  %.pre300 = load i32, i32* %z, align 4, !tbaa !13
  %.pre301 = load i32, i32* @nz, align 4, !tbaa !13
  br label %for.inc174

for.inc174:                                       ; preds = %for.inc174.loopexit, %for.cond89.preheader
  %56 = phi i32 [ %.pre301, %for.inc174.loopexit ], [ %26, %for.cond89.preheader ]
  %57 = phi i32 [ %.pre300, %for.inc174.loopexit ], [ %27, %for.cond89.preheader ]
  %58 = phi i32 [ %53, %for.inc174.loopexit ], [ %28, %for.cond89.preheader ]
  %59 = phi i32 [ %53, %for.inc174.loopexit ], [ %29, %for.cond89.preheader ]
  %inc175 = add nsw i32 %57, 1
  store i32 %inc175, i32* %z, align 4, !tbaa !13
  %cmp87 = icmp slt i32 %inc175, %56
  br i1 %cmp87, label %for.cond89.preheader, label %for.inc177.loopexit, !llvm.loop !459

for.inc177.loopexit:                              ; preds = %for.inc174
  %.pre302 = load i32, i32* %t, align 4, !tbaa !13
  %.pre303 = load i32, i32* @nt, align 4, !tbaa !13
  br label %for.inc177

for.inc177:                                       ; preds = %for.inc177.loopexit, %for.cond86.preheader
  %60 = phi i32 [ %.pre303, %for.inc177.loopexit ], [ %22, %for.cond86.preheader ]
  %61 = phi i32 [ %.pre302, %for.inc177.loopexit ], [ %23, %for.cond86.preheader ]
  %62 = phi i32 [ %56, %for.inc177.loopexit ], [ %24, %for.cond86.preheader ]
  %63 = phi i32 [ %56, %for.inc177.loopexit ], [ %25, %for.cond86.preheader ]
  %inc178 = add nsw i32 %61, 1
  store i32 %inc178, i32* %t, align 4, !tbaa !13
  %cmp85 = icmp slt i32 %inc178, %60
  br i1 %cmp85, label %for.cond86.preheader, label %for.end179, !llvm.loop !460

for.end179:                                       ; preds = %for.inc177, %if.end84
  call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %64 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp180 = icmp eq i32 %64, 0
  br i1 %cmp180, label %if.then181, label %if.end189

if.then181:                                       ; preds = %for.end179
  %call182 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([50 x i8], [50 x i8]* @.str.143, i64 0, i64 0), i8* %filename) #34
  %arraydecay184 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %6, i64 0, i32 1, i64 0
  %call185 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49.268, i64 0, i64 0), i8* nonnull %arraydecay184) #34
  %call186 = call i32 @fclose(%struct._IO_FILE* %fp.0) #34
  %fp187 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp187, align 8, !tbaa !406
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call188 = call i32 @fflush(%struct._IO_FILE* %65) #34
  br label %if.end189

if.end189:                                        ; preds = %if.then181, %for.end179
  call void @llvm.lifetime.end.p0i8(i64 576, i8* nonnull %5) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #31
  ret %struct.gauge_file* %call
}

; Function Attrs: optsize
declare i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #30

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct.gauge_file* @save_ascii(i8* %filename) local_unnamed_addr #1 {
entry:
  %lbuf = alloca [4 x %struct.su3_matrix], align 16
  %0 = bitcast [4 x %struct.su3_matrix]* %lbuf to i8*
  call void @llvm.lifetime.start.p0i8(i64 576, i8* nonnull %0) #31
  %call = tail call %struct.gauge_file* @setup_output_gauge_file() #34
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 1
  %1 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %2 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end23

if.then:                                          ; preds = %entry
  %call1 = tail call %struct._IO_FILE* @fopen(i8* %filename, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26.251, i64 0, i64 0)) #34
  %cmp2 = icmp eq %struct._IO_FILE* %call1, null
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %call4 = tail call i32* @__errno_location() #37
  %3 = load i32, i32* %call4, align 4, !tbaa !13
  %call5 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([30 x i8], [30 x i8]* @.str.131, i64 0, i64 0), i8* %filename, i32 %3) #34
  tail call void @terminate(i32 1) #32
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %fp6 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 0
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp6, align 8, !tbaa !406
  %parallel = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 5
  store i32 0, i32* %parallel, align 8, !tbaa !409
  %filename7 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 2
  store i8* %filename, i8** %filename7, align 8, !tbaa !401
  %byterevflag = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 3
  store i32 0, i32* %byterevflag, align 8, !tbaa !407
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.144, i64 0, i64 0), i32 20103) #34
  %cmp9 = icmp eq i32 %call8, 0
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end
  %puts216 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([32 x i8], [32 x i8]* @str.202, i64 0, i64 0))
  tail call void @terminate(i32 1) #32
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end
  %arraydecay = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %1, i64 0, i32 1, i64 0
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.146, i64 0, i64 0), i8* nonnull %arraydecay) #34
  %cmp14 = icmp eq i32 %call13, 0
  br i1 %cmp14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end12
  %puts215 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([28 x i8], [28 x i8]* @str.201, i64 0, i64 0))
  tail call void @terminate(i32 1) #32
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end12
  %4 = load i32, i32* @nx, align 4, !tbaa !13
  %5 = load i32, i32* @ny, align 4, !tbaa !13
  %6 = load i32, i32* @nz, align 4, !tbaa !13
  %7 = load i32, i32* @nt, align 4, !tbaa !13
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.148, i64 0, i64 0), i32 %4, i32 %5, i32 %6, i32 %7) #34
  %cmp19 = icmp eq i32 %call18, 0
  br i1 %cmp19, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end17
  %puts214 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([28 x i8], [28 x i8]* @str.200, i64 0, i64 0))
  tail call void @terminate(i32 1) #32
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end17
  tail call void @write_gauge_info_file(%struct.gauge_file* nonnull %call) #34
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %entry
  %fp.0 = phi %struct._IO_FILE* [ %call1, %if.end22 ], [ undef, %entry ]
  tail call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %8 = load i32, i32* @nt, align 4, !tbaa !13
  %cmp24237 = icmp sgt i32 %8, 0
  br i1 %cmp24237, label %for.cond25.preheader.preheader, label %for.end130

for.cond25.preheader.preheader:                   ; preds = %if.end23
  %.pre = load i32, i32* @nz, align 4, !tbaa !13
  br label %for.cond25.preheader

for.cond25.preheader:                             ; preds = %for.cond25.preheader.preheader, %for.inc128
  %9 = phi i32 [ %34, %for.inc128 ], [ %8, %for.cond25.preheader.preheader ]
  %10 = phi i32 [ %35, %for.inc128 ], [ %.pre, %for.cond25.preheader.preheader ]
  %11 = phi i32 [ %36, %for.inc128 ], [ %.pre, %for.cond25.preheader.preheader ]
  %currentnode.0240 = phi i32 [ %currentnode.1.lcssa, %for.inc128 ], [ 0, %for.cond25.preheader.preheader ]
  %t.0238 = phi i32 [ %inc129, %for.inc128 ], [ 0, %for.cond25.preheader.preheader ]
  %cmp26232 = icmp sgt i32 %11, 0
  br i1 %cmp26232, label %for.cond28.preheader.preheader, label %for.inc128

for.cond28.preheader.preheader:                   ; preds = %for.cond25.preheader
  %.pre257 = load i32, i32* @ny, align 4, !tbaa !13
  br label %for.cond28.preheader

for.cond28.preheader:                             ; preds = %for.cond28.preheader.preheader, %for.inc125
  %12 = phi i32 [ %31, %for.inc125 ], [ %10, %for.cond28.preheader.preheader ]
  %13 = phi i32 [ %32, %for.inc125 ], [ %.pre257, %for.cond28.preheader.preheader ]
  %14 = phi i32 [ %33, %for.inc125 ], [ %.pre257, %for.cond28.preheader.preheader ]
  %currentnode.1235 = phi i32 [ %currentnode.2.lcssa, %for.inc125 ], [ %currentnode.0240, %for.cond28.preheader.preheader ]
  %z.0233 = phi i32 [ %inc126, %for.inc125 ], [ 0, %for.cond28.preheader.preheader ]
  %cmp29227 = icmp sgt i32 %14, 0
  br i1 %cmp29227, label %for.cond31.preheader.preheader, label %for.inc125

for.cond31.preheader.preheader:                   ; preds = %for.cond28.preheader
  %.pre258 = load i32, i32* @nx, align 4, !tbaa !13
  br label %for.cond31.preheader

for.cond31.preheader:                             ; preds = %for.cond31.preheader.preheader, %for.inc122
  %15 = phi i32 [ %29, %for.inc122 ], [ %13, %for.cond31.preheader.preheader ]
  %16 = phi i32 [ %30, %for.inc122 ], [ %.pre258, %for.cond31.preheader.preheader ]
  %currentnode.2230 = phi i32 [ %currentnode.3.lcssa, %for.inc122 ], [ %currentnode.1235, %for.cond31.preheader.preheader ]
  %y.0228 = phi i32 [ %inc123, %for.inc122 ], [ 0, %for.cond31.preheader.preheader ]
  %cmp32222 = icmp sgt i32 %16, 0
  br i1 %cmp32222, label %for.body33, label %for.inc122

for.body33:                                       ; preds = %for.cond31.preheader, %for.inc119
  %currentnode.3226 = phi i32 [ %currentnode.4, %for.inc119 ], [ %currentnode.2230, %for.cond31.preheader ]
  %x.0223 = phi i32 [ %inc120, %for.inc119 ], [ 0, %for.cond31.preheader ]
  %call34 = call i32 @node_number(i32 %x.0223, i32 %y.0228, i32 %z.0233, i32 %t.0238) #32
  %cmp35.not = icmp eq i32 %call34, %currentnode.3226
  br i1 %cmp35.not, label %if.end48thread-pre-split, label %if.then36

if.then36:                                        ; preds = %for.body33
  %17 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp37 = icmp eq i32 %17, 0
  %cmp38 = icmp ne i32 %call34, 0
  %or.cond = select i1 %cmp37, i1 %cmp38, i1 false
  br i1 %or.cond, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.then36
  call void @send_field(i8* nonnull %0, i32 4, i32 %call34) #32
  %.pre259 = load i32, i32* @this_node, align 4, !tbaa !13
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.then36
  %18 = phi i32 [ %.pre259, %if.then39 ], [ %17, %if.then36 ]
  %cmp42 = icmp eq i32 %18, %call34
  %or.cond142 = and i1 %cmp38, %cmp42
  br i1 %or.cond142, label %if.then45, label %if.end48

if.then45:                                        ; preds = %if.end41
  call void @get_field(i8* nonnull %0, i32 4) #32
  br label %if.end48thread-pre-split

if.end48thread-pre-split:                         ; preds = %for.body33, %if.then45
  %currentnode.4.ph = phi i32 [ %call34, %if.then45 ], [ %currentnode.3226, %for.body33 ]
  %.pr = load i32, i32* @this_node, align 4, !tbaa !13
  br label %if.end48

if.end48:                                         ; preds = %if.end48thread-pre-split, %if.end41
  %19 = phi i32 [ %.pr, %if.end48thread-pre-split ], [ %18, %if.end41 ]
  %currentnode.4 = phi i32 [ %currentnode.4.ph, %if.end48thread-pre-split ], [ %call34, %if.end41 ]
  %cmp49 = icmp eq i32 %19, 0
  br i1 %cmp49, label %if.then50, label %if.else99

if.then50:                                        ; preds = %if.end48
  %cmp51 = icmp eq i32 %currentnode.4, 0
  br i1 %cmp51, label %if.then52, label %if.else

if.then52:                                        ; preds = %if.then50
  %call53 = call i32 @node_index(i32 %x.0223, i32 %y.0228, i32 %z.0233, i32 %t.0238) #32
  %20 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom57 = sext i32 %call53 to i64
  br label %for.body56

for.body56:                                       ; preds = %if.then52, %for.body56
  %indvars.iv245 = phi i64 [ 0, %if.then52 ], [ %indvars.iv.next246, %for.body56 ]
  %arrayidx = getelementptr inbounds [4 x %struct.su3_matrix], [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv245
  %arrayidx60 = getelementptr inbounds %struct.site, %struct.site* %20, i64 %idxprom57, i32 8, i64 %indvars.iv245
  %21 = bitcast %struct.su3_matrix* %arrayidx to i8*
  %22 = bitcast %struct.su3_matrix* %arrayidx60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(144) %21, i8* noundef nonnull align 8 dereferenceable(144) %22, i64 144, i1 false), !tbaa.struct !25
  %indvars.iv.next246 = add nuw nsw i64 %indvars.iv245, 1
  %exitcond247.not = icmp eq i64 %indvars.iv.next246, 4
  br i1 %exitcond247.not, label %for.cond66.preheader.preheader, label %for.body56, !llvm.loop !461

if.else:                                          ; preds = %if.then50
  call void @get_field(i8* nonnull %0, i32 576) #32
  br label %for.cond66.preheader.preheader

for.cond66.preheader.preheader:                   ; preds = %for.body56, %if.else
  br label %for.cond66.preheader

for.cond66.preheader:                             ; preds = %for.cond66.preheader.preheader, %for.inc96
  %indvars.iv254 = phi i64 [ %indvars.iv.next255, %for.inc96 ], [ 0, %for.cond66.preheader.preheader ]
  br label %for.cond69.preheader

for.cond69.preheader:                             ; preds = %for.cond66.preheader, %for.inc93
  %indvars.iv251 = phi i64 [ 0, %for.cond66.preheader ], [ %indvars.iv.next252, %for.inc93 ]
  br label %for.body71

for.body71:                                       ; preds = %for.cond69.preheader, %for.inc90
  %indvars.iv248 = phi i64 [ 0, %for.cond69.preheader ], [ %indvars.iv.next249, %for.inc90 ]
  %real = getelementptr inbounds [4 x %struct.su3_matrix], [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv254, i32 0, i64 %indvars.iv251, i64 %indvars.iv248, i32 0
  %23 = load double, double* %real, align 16, !tbaa !4
  %imag = getelementptr inbounds [4 x %struct.su3_matrix], [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv254, i32 0, i64 %indvars.iv251, i64 %indvars.iv248, i32 1
  %24 = load double, double* %imag, align 8, !tbaa !9
  %call85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp.0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i64 0, i64 0), double %23, double %24) #34
  %cmp86 = icmp eq i32 %call85, -1
  br i1 %cmp86, label %if.then87, label %for.inc90

if.then87:                                        ; preds = %for.body71
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @str.199, i64 0, i64 0))
  call void @terminate(i32 1) #32
  br label %for.inc90

for.inc90:                                        ; preds = %for.body71, %if.then87
  %indvars.iv.next249 = add nuw nsw i64 %indvars.iv248, 1
  %exitcond250.not = icmp eq i64 %indvars.iv.next249, 3
  br i1 %exitcond250.not, label %for.inc93, label %for.body71, !llvm.loop !462

for.inc93:                                        ; preds = %for.inc90
  %indvars.iv.next252 = add nuw nsw i64 %indvars.iv251, 1
  %exitcond253.not = icmp eq i64 %indvars.iv.next252, 3
  br i1 %exitcond253.not, label %for.inc96, label %for.cond69.preheader, !llvm.loop !463

for.inc96:                                        ; preds = %for.inc93
  %indvars.iv.next255 = add nuw nsw i64 %indvars.iv254, 1
  %exitcond256.not = icmp eq i64 %indvars.iv.next255, 4
  br i1 %exitcond256.not, label %for.inc119, label %for.cond66.preheader, !llvm.loop !464

if.else99:                                        ; preds = %if.end48
  %cmp100 = icmp eq i32 %19, %currentnode.4
  br i1 %cmp100, label %if.then101, label %for.inc119

if.then101:                                       ; preds = %if.else99
  %call102 = call i32 @node_index(i32 %x.0223, i32 %y.0228, i32 %z.0233, i32 %t.0238) #32
  %25 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom108 = sext i32 %call102 to i64
  br label %for.body105

for.body105:                                      ; preds = %if.then101, %for.body105
  %indvars.iv = phi i64 [ 0, %if.then101 ], [ %indvars.iv.next, %for.body105 ]
  %arrayidx107 = getelementptr inbounds [4 x %struct.su3_matrix], [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv
  %arrayidx112 = getelementptr inbounds %struct.site, %struct.site* %25, i64 %idxprom108, i32 8, i64 %indvars.iv
  %26 = bitcast %struct.su3_matrix* %arrayidx107 to i8*
  %27 = bitcast %struct.su3_matrix* %arrayidx112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(144) %26, i8* noundef nonnull align 8 dereferenceable(144) %27, i64 144, i1 false), !tbaa.struct !25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.end115, label %for.body105, !llvm.loop !465

for.end115:                                       ; preds = %for.body105
  call void @send_field(i8* nonnull %0, i32 576, i32 0) #32
  br label %for.inc119

for.inc119:                                       ; preds = %for.inc96, %for.end115, %if.else99
  %inc120 = add nuw nsw i32 %x.0223, 1
  %28 = load i32, i32* @nx, align 4, !tbaa !13
  %cmp32 = icmp slt i32 %inc120, %28
  br i1 %cmp32, label %for.body33, label %for.inc122.loopexit, !llvm.loop !466

for.inc122.loopexit:                              ; preds = %for.inc119
  %.pre260 = load i32, i32* @ny, align 4, !tbaa !13
  br label %for.inc122

for.inc122:                                       ; preds = %for.inc122.loopexit, %for.cond31.preheader
  %29 = phi i32 [ %15, %for.cond31.preheader ], [ %.pre260, %for.inc122.loopexit ]
  %30 = phi i32 [ %16, %for.cond31.preheader ], [ %28, %for.inc122.loopexit ]
  %currentnode.3.lcssa = phi i32 [ %currentnode.2230, %for.cond31.preheader ], [ %currentnode.4, %for.inc122.loopexit ]
  %inc123 = add nuw nsw i32 %y.0228, 1
  %cmp29 = icmp slt i32 %inc123, %29
  br i1 %cmp29, label %for.cond31.preheader, label %for.inc125.loopexit, !llvm.loop !467

for.inc125.loopexit:                              ; preds = %for.inc122
  %.pre261 = load i32, i32* @nz, align 4, !tbaa !13
  br label %for.inc125

for.inc125:                                       ; preds = %for.inc125.loopexit, %for.cond28.preheader
  %31 = phi i32 [ %12, %for.cond28.preheader ], [ %.pre261, %for.inc125.loopexit ]
  %32 = phi i32 [ %13, %for.cond28.preheader ], [ %29, %for.inc125.loopexit ]
  %33 = phi i32 [ %14, %for.cond28.preheader ], [ %29, %for.inc125.loopexit ]
  %currentnode.2.lcssa = phi i32 [ %currentnode.1235, %for.cond28.preheader ], [ %currentnode.3.lcssa, %for.inc125.loopexit ]
  %inc126 = add nuw nsw i32 %z.0233, 1
  %cmp26 = icmp slt i32 %inc126, %31
  br i1 %cmp26, label %for.cond28.preheader, label %for.inc128.loopexit, !llvm.loop !468

for.inc128.loopexit:                              ; preds = %for.inc125
  %.pre262 = load i32, i32* @nt, align 4, !tbaa !13
  br label %for.inc128

for.inc128:                                       ; preds = %for.inc128.loopexit, %for.cond25.preheader
  %34 = phi i32 [ %9, %for.cond25.preheader ], [ %.pre262, %for.inc128.loopexit ]
  %35 = phi i32 [ %10, %for.cond25.preheader ], [ %31, %for.inc128.loopexit ]
  %36 = phi i32 [ %11, %for.cond25.preheader ], [ %31, %for.inc128.loopexit ]
  %currentnode.1.lcssa = phi i32 [ %currentnode.0240, %for.cond25.preheader ], [ %currentnode.2.lcssa, %for.inc128.loopexit ]
  %inc129 = add nuw nsw i32 %t.0238, 1
  %cmp24 = icmp slt i32 %inc129, %34
  br i1 %cmp24, label %for.cond25.preheader, label %for.end130, !llvm.loop !469

for.end130:                                       ; preds = %for.inc128, %if.end23
  call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %37 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp131 = icmp eq i32 %37, 0
  br i1 %cmp131, label %if.then132, label %if.end141

if.then132:                                       ; preds = %for.end130
  %call133 = call i32 @fflush(%struct._IO_FILE* %fp.0) #34
  %filename134 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 2
  %38 = load i8*, i8** %filename134, align 8, !tbaa !401
  %call135 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([44 x i8], [44 x i8]* @.str.152, i64 0, i64 0), i8* %38) #34
  %arraydecay137 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %1, i64 0, i32 1, i64 0
  %call138 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49.268, i64 0, i64 0), i8* nonnull %arraydecay137) #34
  %call139 = call i32 @fclose(%struct._IO_FILE* %fp.0) #34
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call140 = call i32 @fflush(%struct._IO_FILE* %39) #34
  br label %if.end141

if.end141:                                        ; preds = %if.then132, %for.end130
  call void @llvm.lifetime.end.p0i8(i64 576, i8* nonnull %0) #31
  ret %struct.gauge_file* %call
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.gauge_file* @restore_serial(i8* %filename) local_unnamed_addr #1 {
entry:
  %call = tail call %struct.gauge_file* @r_serial_i(i8* %filename) #34
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call, i64 0, i32 1
  %0 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  %magic_number = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %0, i64 0, i32 0
  %1 = load i32, i32* %magic_number, align 4, !tbaa !404
  %cmp = icmp eq i32 %1, 1111836489
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  tail call void @r_serial_arch(%struct.gauge_file* nonnull %call) #34
  br label %if.end

if.else:                                          ; preds = %entry
  tail call void @r_serial(%struct.gauge_file* nonnull %call) #34
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  tail call void @r_serial_f(%struct.gauge_file* nonnull %call) #34
  ret %struct.gauge_file* %call
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.gauge_file* @restore_parallel(i8* %filename) local_unnamed_addr #1 {
entry:
  %call = tail call %struct.gauge_file* @r_parallel_i(i8* %filename) #34
  tail call void @r_parallel(%struct.gauge_file* %call) #34
  tail call void @r_parallel_f(%struct.gauge_file* %call) #34
  ret %struct.gauge_file* %call
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.gauge_file* @save_serial(i8* %filename) local_unnamed_addr #1 {
entry:
  %call = tail call %struct.gauge_file* @w_serial_i(i8* %filename) #34
  tail call void @w_serial(%struct.gauge_file* %call) #34
  tail call void @w_serial_f(%struct.gauge_file* %call) #34
  ret %struct.gauge_file* %call
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.gauge_file* @save_parallel(i8* %filename) local_unnamed_addr #1 {
entry:
  %call = tail call %struct.gauge_file* @w_parallel_i(i8* %filename) #34
  tail call void @w_parallel(%struct.gauge_file* %call) #34
  tail call void @w_parallel_f(%struct.gauge_file* %call) #34
  ret %struct.gauge_file* %call
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.gauge_file* @save_checkpoint(i8* %filename) local_unnamed_addr #1 {
entry:
  %call = tail call %struct.gauge_file* @w_checkpoint_i(i8* %filename) #34
  tail call void @w_checkpoint(%struct.gauge_file* %call) #34
  tail call void @w_parallel_f(%struct.gauge_file* %call) #34
  ret %struct.gauge_file* %call
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct.gauge_file* @save_serial_archive(i8* %filename) local_unnamed_addr #1 {
entry:
  %lbuf = alloca [4 x %struct.su3_matrix], align 16
  %chksum = alloca i32, align 4
  %utmp = alloca i32, align 4
  %sums = alloca [30 x i8], align 16
  %ssplaq = alloca double, align 8
  %stplaq = alloca double, align 8
  %trace = alloca double, align 8
  %0 = bitcast [4 x %struct.su3_matrix]* %lbuf to i8*
  call void @llvm.lifetime.start.p0i8(i64 576, i8* nonnull %0) #31
  %1 = bitcast i32* %chksum to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #31
  %2 = bitcast i32* %utmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #31
  %3 = getelementptr inbounds [30 x i8], [30 x i8]* %sums, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 30, i8* nonnull %3) #31
  %4 = bitcast double* %ssplaq to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #31
  %5 = bitcast double* %stplaq to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #31
  %6 = bitcast double* %trace to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #31
  %call1 = tail call %struct.gauge_file* @setup_output_gauge_file() #34
  %header = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call1, i64 0, i32 1
  %7 = load %struct.gauge_header*, %struct.gauge_header** %header, align 8, !tbaa !398
  call void @d_plaquette(double* nonnull %ssplaq, double* nonnull %stplaq) #32
  %8 = load double, double* %ssplaq, align 8, !tbaa !11
  %9 = load double, double* %stplaq, align 8, !tbaa !11
  %add = fadd double %8, %9
  %div = fdiv double %add, 6.000000e+00
  store double 0.000000e+00, double* %trace, align 8, !tbaa !11
  store i32 0, i32* %chksum, align 4, !tbaa !13
  %10 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp533 = icmp sgt i32 %10, 0
  br i1 %cmp533, label %for.cond2.preheader.preheader, label %for.end39

for.cond2.preheader.preheader:                    ; preds = %entry
  %11 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  br label %for.cond2.preheader

for.cond2.preheader:                              ; preds = %for.cond2.preheader.preheader, %for.inc37
  %i.0535 = phi i32 [ %inc38, %for.inc37 ], [ 0, %for.cond2.preheader.preheader ]
  %s.0534 = phi %struct.site* [ %incdec.ptr, %for.inc37 ], [ %11, %for.cond2.preheader.preheader ]
  br label %for.body4

for.body4:                                        ; preds = %for.cond2.preheader, %for.inc34
  %indvars.iv569 = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next570, %for.inc34 ]
  %arrayidx = getelementptr inbounds %struct.site, %struct.site* %s.0534, i64 0, i32 8, i64 %indvars.iv569
  %call5 = call { double, double } @trace_su3(%struct.su3_matrix* nonnull %arrayidx) #32
  %12 = extractvalue { double, double } %call5, 0
  %13 = load double, double* %trace, align 8, !tbaa !11
  %add6 = fadd double %13, %12
  store double %add6, double* %trace, align 8, !tbaa !11
  %chksum.promoted528 = load i32, i32* %chksum, align 4, !tbaa !13
  br label %for.cond10.preheader

for.cond10.preheader:                             ; preds = %for.body4, %for.inc31
  %cmp8 = phi i1 [ true, %for.body4 ], [ false, %for.inc31 ]
  %indvars.iv567 = phi i64 [ 0, %for.body4 ], [ 1, %for.inc31 ]
  %add30525.lcssa529530 = phi i32 [ %chksum.promoted528, %for.body4 ], [ %add30, %for.inc31 ]
  br label %for.body12

for.body12:                                       ; preds = %for.cond10.preheader, %for.body12
  %indvars.iv564 = phi i64 [ 0, %for.cond10.preheader ], [ %indvars.iv.next565, %for.body12 ]
  %add30525526 = phi i32 [ %add30525.lcssa529530, %for.cond10.preheader ], [ %add30, %for.body12 ]
  %arrayidx19 = getelementptr inbounds %struct.site, %struct.site* %s.0534, i64 0, i32 8, i64 %indvars.iv569, i32 0, i64 %indvars.iv567, i64 %indvars.iv564
  %14 = bitcast %struct.complex* %arrayidx19 to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !4
  %tmpflt.0.extract.trunc = trunc i64 %15 to i32
  %add21 = add i32 %add30525526, %tmpflt.0.extract.trunc
  %imag = getelementptr inbounds %struct.site, %struct.site* %s.0534, i64 0, i32 8, i64 %indvars.iv569, i32 0, i64 %indvars.iv567, i64 %indvars.iv564, i32 1
  %16 = bitcast double* %imag to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !9
  %tmpflt.0.extract.trunc483 = trunc i64 %17 to i32
  %add30 = add i32 %add21, %tmpflt.0.extract.trunc483
  %indvars.iv.next565 = add nuw nsw i64 %indvars.iv564, 1
  %exitcond566.not = icmp eq i64 %indvars.iv.next565, 3
  br i1 %exitcond566.not, label %for.inc31, label %for.body12, !llvm.loop !470

for.inc31:                                        ; preds = %for.body12
  br i1 %cmp8, label %for.cond10.preheader, label %for.inc34, !llvm.loop !471

for.inc34:                                        ; preds = %for.inc31
  store i32 %add30, i32* %chksum, align 4, !tbaa !13
  %indvars.iv.next570 = add nuw nsw i64 %indvars.iv569, 1
  %exitcond571.not = icmp eq i64 %indvars.iv.next570, 4
  br i1 %exitcond571.not, label %for.inc37, label %for.body4, !llvm.loop !472

for.inc37:                                        ; preds = %for.inc34
  %inc38 = add nuw nsw i32 %i.0535, 1
  %incdec.ptr = getelementptr inbounds %struct.site, %struct.site* %s.0534, i64 1
  %18 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %cmp = icmp slt i32 %inc38, %18
  br i1 %cmp, label %for.cond2.preheader, label %for.end39, !llvm.loop !473

for.end39:                                        ; preds = %for.inc37, %entry
  call void @g_doublesum(double* nonnull %trace) #32
  %19 = load double, double* %trace, align 8, !tbaa !11
  %20 = load i32, i32* @volume, align 4, !tbaa !13
  %mul = mul nsw i32 %20, 12
  %conv = sitofp i32 %mul to double
  %div40 = fdiv double %19, %conv
  %call42521 = call i32 (...) bitcast (i32 ()* @numnodes to i32 (...)*)() #32
  %cmp43522 = icmp sgt i32 %call42521, 1
  br i1 %cmp43522, label %for.body45, label %for.end60

for.body45:                                       ; preds = %for.end39, %for.inc58
  %j.0523 = phi i32 [ %inc59, %for.inc58 ], [ 1, %for.end39 ]
  %21 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp46 = icmp eq i32 %21, 0
  br i1 %cmp46, label %if.then, label %if.end

if.then:                                          ; preds = %for.body45
  call void @send_field(i8* nonnull %0, i32 4, i32 %j.0523) #32
  %.pre = load i32, i32* @this_node, align 4, !tbaa !13
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body45
  %22 = phi i32 [ %.pre, %if.then ], [ %21, %for.body45 ]
  %cmp48 = icmp eq i32 %22, %j.0523
  br i1 %cmp48, label %if.then50, label %if.end52

if.then50:                                        ; preds = %if.end
  call void @get_field(i8* nonnull %0, i32 4) #32
  call void @send_integer(i32 0, i32* nonnull %chksum) #32
  %.pr = load i32, i32* @this_node, align 4, !tbaa !13
  br label %if.end52

if.end52:                                         ; preds = %if.then50, %if.end
  %23 = phi i32 [ %.pr, %if.then50 ], [ %22, %if.end ]
  %cmp53 = icmp eq i32 %23, 0
  br i1 %cmp53, label %if.then55, label %for.inc58

if.then55:                                        ; preds = %if.end52
  call void @receive_integer(i32* nonnull %utmp) #32
  %24 = load i32, i32* %utmp, align 4, !tbaa !13
  %25 = load i32, i32* %chksum, align 4, !tbaa !13
  %add56 = add i32 %25, %24
  store i32 %add56, i32* %chksum, align 4, !tbaa !13
  br label %for.inc58

for.inc58:                                        ; preds = %if.end52, %if.then55
  %inc59 = add nuw nsw i32 %j.0523, 1
  %call42 = call i32 (...) bitcast (i32 ()* @numnodes to i32 (...)*)() #32
  %cmp43 = icmp slt i32 %inc59, %call42
  br i1 %cmp43, label %for.body45, label %for.end60, !llvm.loop !474

for.end60:                                        ; preds = %for.inc58, %for.end39
  %26 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp61 = icmp eq i32 %26, 0
  br i1 %cmp61, label %if.then63, label %if.end110

if.then63:                                        ; preds = %for.end60
  %call64 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.153, i64 0, i64 0), double %div40) #34
  %27 = load i32, i32* %chksum, align 4, !tbaa !13
  %call65 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.154, i64 0, i64 0), i32 %27) #34
  %28 = load i32, i32* %chksum, align 4, !tbaa !13
  %call66 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @.str.155, i64 0, i64 0), i32 %28) #34
  %call67 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.156, i64 0, i64 0), double %div) #34
  %call68 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([38 x i8], [38 x i8]* @.str.157, i64 0, i64 0), i8* %filename) #34
  %call69 = call %struct._IO_FILE* @fopen(i8* %filename, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26.251, i64 0, i64 0)) #34
  %cmp70 = icmp eq %struct._IO_FILE* %call69, null
  br i1 %cmp70, label %if.then72, label %if.end74

if.then72:                                        ; preds = %if.then63
  %call73 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([31 x i8], [31 x i8]* @.str.158, i64 0, i64 0), i8* %filename) #34
  call void @terminate(i32 1) #32
  br label %if.end74

if.end74:                                         ; preds = %if.then72, %if.then63
  %29 = call i64 @fwrite(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.159.292, i64 0, i64 0), i64 13, i64 1, %struct._IO_FILE* %call69)
  %30 = call i64 @fwrite(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.160, i64 0, i64 0), i64 24, i64 1, %struct._IO_FILE* %call69)
  %31 = load i32, i32* @nx, align 4, !tbaa !13
  %call77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.161, i64 0, i64 0), i32 %31) #34
  %32 = load i32, i32* @ny, align 4, !tbaa !13
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.162, i64 0, i64 0), i32 %32) #34
  %33 = load i32, i32* @nz, align 4, !tbaa !13
  %call79 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.163, i64 0, i64 0), i32 %33) #34
  %34 = load i32, i32* @nt, align 4, !tbaa !13
  %call80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.164, i64 0, i64 0), i32 %34) #34
  %35 = load i32, i32* %chksum, align 4, !tbaa !13
  %call81 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.165.293, i64 0, i64 0), i32 %35) #34
  %call82 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.166, i64 0, i64 0), double %div40) #34
  %call83 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.167, i64 0, i64 0), double %div) #34
  %call84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.168, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @ensemble_id, i64 0, i64 0)) #34
  %36 = load i32, i32* @sequence_number, align 4, !tbaa !13
  %call85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.169, i64 0, i64 0), i32 %36) #34
  %37 = call i64 @fwrite(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.170, i64 0, i64 0), i64 32, i64 1, %struct._IO_FILE* %call69)
  %arraydecay87 = getelementptr inbounds %struct.gauge_header, %struct.gauge_header* %7, i64 0, i32 1, i64 0
  %call88 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12.242, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.252, i64 0, i64 0), i8* nonnull %arraydecay87, i32 0, i32 0) #34
  %sum29 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call1, i64 0, i32 6, i32 1
  %38 = load i32, i32* %sum29, align 4, !tbaa !402
  %sum31 = getelementptr inbounds %struct.gauge_file, %struct.gauge_file* %call1, i64 0, i32 6, i32 0
  %39 = load i32, i32* %sum31, align 4, !tbaa !403
  %call91 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %3, i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29.253, i64 0, i64 0), i32 %38, i32 %39) #32
  %call93 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28.252, i64 0, i64 0), i8* nonnull %3, i32 0, i32 0) #34
  %call94 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i64 0, i64 0), i8* bitcast (i32* @nx to i8*), i32 0, i32 0) #34
  %call95 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i64 0, i64 0), i8* bitcast (i32* @ny to i8*), i32 0, i32 0) #34
  %call96 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33.254, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i64 0, i64 0), i8* bitcast (i32* @nz to i8*), i32 0, i32 0) #34
  %call97 = call i32 @write_gauge_info_item(%struct._IO_FILE* %call69, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34.255, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i64 0, i64 0), i8* bitcast (i32* @nt to i8*), i32 0, i32 0) #34
  call void @write_appl_gauge_info(%struct._IO_FILE* %call69) #32
  %40 = call i64 @fwrite(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.171, i64 0, i64 0), i64 32, i64 1, %struct._IO_FILE* %call69)
  %41 = call i64 @fwrite(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.236, i64 0, i64 0), i64 11, i64 1, %struct._IO_FILE* %call69)
  %42 = load i32, i32* @nx, align 4, !tbaa !13
  %43 = load i32, i32* @ny, align 4, !tbaa !13
  %mul100 = mul nsw i32 %43, %42
  %44 = load i32, i32* @nz, align 4, !tbaa !13
  %mul101 = mul nsw i32 %mul100, %44
  %mul102 = mul nsw i32 %mul101, 48
  %conv103 = sext i32 %mul102 to i64
  %call104 = call noalias align 16 i8* @calloc(i64 %conv103, i64 8) #32
  %45 = bitcast i8* %call104 to double*
  %cmp105 = icmp eq i8* %call104, null
  br i1 %cmp105, label %if.then107, label %if.end110

if.then107:                                       ; preds = %if.end74
  %puts486 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([28 x i8], [28 x i8]* @str.204, i64 0, i64 0))
  call void @terminate(i32 1) #32
  br label %if.end110

if.end110:                                        ; preds = %for.end60, %if.end74, %if.then107
  %outfile.0 = phi %struct._IO_FILE* [ %call69, %if.then107 ], [ %call69, %if.end74 ], [ undef, %for.end60 ]
  %uout.0 = phi double* [ null, %if.then107 ], [ %45, %if.end74 ], [ undef, %for.end60 ]
  %vol3.0 = phi i32 [ %mul101, %if.then107 ], [ %mul101, %if.end74 ], [ undef, %for.end60 ]
  call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %46 = bitcast double* %uout.0 to i32*
  %mul308 = mul nsw i32 %vol3.0, 48
  %47 = bitcast double* %uout.0 to i8*
  %conv311 = sext i32 %mul308 to i64
  %mul312 = shl nsw i64 %conv311, 3
  %48 = load i32, i32* @nt, align 4, !tbaa !13
  %cmp112517 = icmp sgt i32 %48, 0
  br i1 %cmp112517, label %for.cond115.preheader.preheader, label %for.end323

for.cond115.preheader.preheader:                  ; preds = %if.end110
  %.pre573 = load i32, i32* @nz, align 4, !tbaa !13
  br label %for.cond115.preheader

for.cond115.preheader:                            ; preds = %for.cond115.preheader.preheader, %for.inc321
  %49 = phi i32 [ %86, %for.inc321 ], [ %.pre573, %for.cond115.preheader.preheader ]
  %50 = phi i32 [ %87, %for.inc321 ], [ %.pre573, %for.cond115.preheader.preheader ]
  %currentnode.0520 = phi i32 [ %currentnode.1.lcssa, %for.inc321 ], [ 0, %for.cond115.preheader.preheader ]
  %tslice.0518 = phi i32 [ %inc322, %for.inc321 ], [ 0, %for.cond115.preheader.preheader ]
  %cmp116511 = icmp sgt i32 %50, 0
  br i1 %cmp116511, label %for.cond119.preheader.preheader, label %for.end303

for.cond119.preheader.preheader:                  ; preds = %for.cond115.preheader
  %.pre574 = load i32, i32* @ny, align 4, !tbaa !13
  br label %for.cond119.preheader

for.cond119.preheader:                            ; preds = %for.cond119.preheader.preheader, %for.inc301
  %51 = phi i32 [ %80, %for.inc301 ], [ %49, %for.cond119.preheader.preheader ]
  %52 = phi i32 [ %81, %for.inc301 ], [ %.pre574, %for.cond119.preheader.preheader ]
  %53 = phi i32 [ %82, %for.inc301 ], [ %.pre574, %for.cond119.preheader.preheader ]
  %currentnode.1515 = phi i32 [ %currentnode.2.lcssa, %for.inc301 ], [ %currentnode.0520, %for.cond119.preheader.preheader ]
  %j.1514 = phi i32 [ %j.2.lcssa, %for.inc301 ], [ 0, %for.cond119.preheader.preheader ]
  %z.0512 = phi i32 [ %inc302, %for.inc301 ], [ 0, %for.cond119.preheader.preheader ]
  %cmp120504 = icmp sgt i32 %53, 0
  br i1 %cmp120504, label %for.cond123.preheader.preheader, label %for.inc301

for.cond123.preheader.preheader:                  ; preds = %for.cond119.preheader
  %.pre575 = load i32, i32* @nx, align 4, !tbaa !13
  br label %for.cond123.preheader

for.cond123.preheader:                            ; preds = %for.cond123.preheader.preheader, %for.inc298
  %54 = phi i32 [ %78, %for.inc298 ], [ %52, %for.cond123.preheader.preheader ]
  %55 = phi i32 [ %79, %for.inc298 ], [ %.pre575, %for.cond123.preheader.preheader ]
  %currentnode.2508 = phi i32 [ %currentnode.3.lcssa, %for.inc298 ], [ %currentnode.1515, %for.cond123.preheader.preheader ]
  %j.2507 = phi i32 [ %j.3.lcssa, %for.inc298 ], [ %j.1514, %for.cond123.preheader.preheader ]
  %y.0505 = phi i32 [ %inc299, %for.inc298 ], [ 0, %for.cond123.preheader.preheader ]
  %cmp124496 = icmp sgt i32 %55, 0
  br i1 %cmp124496, label %for.body126, label %for.inc298

for.body126:                                      ; preds = %for.cond123.preheader, %for.inc295
  %currentnode.3502 = phi i32 [ %currentnode.4, %for.inc295 ], [ %currentnode.2508, %for.cond123.preheader ]
  %j.3500 = phi i32 [ %j.4, %for.inc295 ], [ %j.2507, %for.cond123.preheader ]
  %x.0497 = phi i32 [ %inc296, %for.inc295 ], [ 0, %for.cond123.preheader ]
  %call127 = call i32 @node_number(i32 %x.0497, i32 %y.0505, i32 %z.0512, i32 %tslice.0518) #32
  %cmp128.not = icmp eq i32 %call127, %currentnode.3502
  br i1 %cmp128.not, label %if.end146thread-pre-split, label %if.then130

if.then130:                                       ; preds = %for.body126
  %56 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp131 = icmp eq i32 %56, 0
  %cmp133 = icmp ne i32 %call127, 0
  %or.cond = select i1 %cmp131, i1 %cmp133, i1 false
  br i1 %or.cond, label %if.then135, label %if.end137

if.then135:                                       ; preds = %if.then130
  call void @send_field(i8* nonnull %0, i32 4, i32 %call127) #32
  %.pre576 = load i32, i32* @this_node, align 4, !tbaa !13
  br label %if.end137

if.end137:                                        ; preds = %if.then135, %if.then130
  %57 = phi i32 [ %.pre576, %if.then135 ], [ %56, %if.then130 ]
  %cmp138 = icmp eq i32 %57, %call127
  %or.cond330 = and i1 %cmp133, %cmp138
  br i1 %or.cond330, label %if.then143, label %if.end146

if.then143:                                       ; preds = %if.end137
  call void @get_field(i8* nonnull %0, i32 4) #32
  br label %if.end146thread-pre-split

if.end146thread-pre-split:                        ; preds = %for.body126, %if.then143
  %currentnode.4.ph = phi i32 [ %call127, %if.then143 ], [ %currentnode.3502, %for.body126 ]
  %.pr487 = load i32, i32* @this_node, align 4, !tbaa !13
  br label %if.end146

if.end146:                                        ; preds = %if.end146thread-pre-split, %if.end137
  %58 = phi i32 [ %.pr487, %if.end146thread-pre-split ], [ %57, %if.end137 ]
  %currentnode.4 = phi i32 [ %currentnode.4.ph, %if.end146thread-pre-split ], [ %call127, %if.end137 ]
  %cmp147 = icmp eq i32 %58, 0
  br i1 %cmp147, label %if.then149, label %if.else273

if.then149:                                       ; preds = %if.end146
  %cmp150 = icmp eq i32 %currentnode.4, 0
  br i1 %cmp150, label %if.then152, label %if.else

if.then152:                                       ; preds = %if.then149
  %59 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %call153 = call i32 @node_index(i32 %x.0497, i32 %y.0505, i32 %z.0512, i32 %tslice.0518) #32
  %idxprom154 = sext i32 %call153 to i64
  %mul182 = mul nsw i32 %j.3500, 48
  br label %for.cond160.preheader

for.cond160.preheader:                            ; preds = %if.then152, %for.inc211
  %indvars.iv560 = phi i64 [ 0, %if.then152 ], [ %indvars.iv.next561, %for.inc211 ]
  %60 = trunc i64 %indvars.iv560 to i32
  %61 = mul i32 %60, 12
  %add181 = add i32 %61, %mul182
  %add200 = or i32 %add181, 1
  br label %for.cond164.preheader

for.cond164.preheader:                            ; preds = %for.cond160.preheader, %for.inc208
  %cmp161 = phi i1 [ true, %for.cond160.preheader ], [ false, %for.inc208 ]
  %indvars.iv557 = phi i64 [ 0, %for.cond160.preheader ], [ 1, %for.inc208 ]
  %62 = mul nuw nsw i64 %indvars.iv557, 3
  br label %for.body167

for.body167:                                      ; preds = %for.cond164.preheader, %for.body167
  %indvars.iv552 = phi i64 [ 0, %for.cond164.preheader ], [ %indvars.iv.next553, %for.body167 ]
  %real176 = getelementptr inbounds %struct.site, %struct.site* %59, i64 %idxprom154, i32 8, i64 %indvars.iv560, i32 0, i64 %indvars.iv557, i64 %indvars.iv552, i32 0
  %63 = load double, double* %real176, align 8, !tbaa !4
  %64 = add nuw nsw i64 %indvars.iv552, %62
  %.tr579 = trunc i64 %64 to i32
  %65 = shl i32 %.tr579, 1
  %add183 = add i32 %add181, %65
  %idxprom184 = sext i32 %add183 to i64
  %arrayidx185 = getelementptr inbounds double, double* %uout.0, i64 %idxprom184
  store double %63, double* %arrayidx185, align 8, !tbaa !11
  %imag194 = getelementptr inbounds %struct.site, %struct.site* %59, i64 %idxprom154, i32 8, i64 %indvars.iv560, i32 0, i64 %indvars.iv557, i64 %indvars.iv552, i32 1
  %66 = load double, double* %imag194, align 8, !tbaa !9
  %add202 = add i32 %add200, %65
  %idxprom203 = sext i32 %add202 to i64
  %arrayidx204 = getelementptr inbounds double, double* %uout.0, i64 %idxprom203
  store double %66, double* %arrayidx204, align 8, !tbaa !11
  %indvars.iv.next553 = add nuw nsw i64 %indvars.iv552, 1
  %exitcond556.not = icmp eq i64 %indvars.iv.next553, 3
  br i1 %exitcond556.not, label %for.inc208, label %for.body167, !llvm.loop !475

for.inc208:                                       ; preds = %for.body167
  br i1 %cmp161, label %for.cond164.preheader, label %for.inc211, !llvm.loop !476

for.inc211:                                       ; preds = %for.inc208
  %indvars.iv.next561 = add nuw nsw i64 %indvars.iv560, 1
  %exitcond563.not = icmp eq i64 %indvars.iv.next561, 4
  br i1 %exitcond563.not, label %if.end271, label %for.cond160.preheader, !llvm.loop !477

if.else:                                          ; preds = %if.then149
  call void @get_field(i8* nonnull %0, i32 576) #32
  %mul240 = mul nsw i32 %j.3500, 48
  br label %for.cond219.preheader

for.cond219.preheader:                            ; preds = %if.else, %for.inc268
  %indvars.iv548 = phi i64 [ 0, %if.else ], [ %indvars.iv.next549, %for.inc268 ]
  %67 = trunc i64 %indvars.iv548 to i32
  %68 = mul i32 %67, 12
  %add239 = add i32 %68, %mul240
  %add257 = or i32 %add239, 1
  br label %for.cond223.preheader

for.cond223.preheader:                            ; preds = %for.cond219.preheader, %for.inc265
  %cmp220 = phi i1 [ true, %for.cond219.preheader ], [ false, %for.inc265 ]
  %indvars.iv545 = phi i64 [ 0, %for.cond219.preheader ], [ 1, %for.inc265 ]
  %69 = mul nuw nsw i64 %indvars.iv545, 3
  br label %for.body226

for.body226:                                      ; preds = %for.cond223.preheader, %for.body226
  %indvars.iv540 = phi i64 [ 0, %for.cond223.preheader ], [ %indvars.iv.next541, %for.body226 ]
  %real234 = getelementptr inbounds [4 x %struct.su3_matrix], [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv548, i32 0, i64 %indvars.iv545, i64 %indvars.iv540, i32 0
  %70 = load double, double* %real234, align 16, !tbaa !4
  %71 = add nuw nsw i64 %indvars.iv540, %69
  %.tr = trunc i64 %71 to i32
  %72 = shl i32 %.tr, 1
  %add241 = add i32 %add239, %72
  %idxprom242 = sext i32 %add241 to i64
  %arrayidx243 = getelementptr inbounds double, double* %uout.0, i64 %idxprom242
  store double %70, double* %arrayidx243, align 8, !tbaa !11
  %imag251 = getelementptr inbounds [4 x %struct.su3_matrix], [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv548, i32 0, i64 %indvars.iv545, i64 %indvars.iv540, i32 1
  %73 = load double, double* %imag251, align 8, !tbaa !9
  %add259 = add i32 %add257, %72
  %idxprom260 = sext i32 %add259 to i64
  %arrayidx261 = getelementptr inbounds double, double* %uout.0, i64 %idxprom260
  store double %73, double* %arrayidx261, align 8, !tbaa !11
  %indvars.iv.next541 = add nuw nsw i64 %indvars.iv540, 1
  %exitcond544.not = icmp eq i64 %indvars.iv.next541, 3
  br i1 %exitcond544.not, label %for.inc265, label %for.body226, !llvm.loop !478

for.inc265:                                       ; preds = %for.body226
  br i1 %cmp220, label %for.cond223.preheader, label %for.inc268, !llvm.loop !479

for.inc268:                                       ; preds = %for.inc265
  %indvars.iv.next549 = add nuw nsw i64 %indvars.iv548, 1
  %exitcond551.not = icmp eq i64 %indvars.iv.next549, 4
  br i1 %exitcond551.not, label %if.end271, label %for.cond219.preheader, !llvm.loop !480

if.end271:                                        ; preds = %for.inc268, %for.inc211
  %inc272 = add nsw i32 %j.3500, 1
  br label %for.inc295

if.else273:                                       ; preds = %if.end146
  %cmp274 = icmp eq i32 %58, %currentnode.4
  br i1 %cmp274, label %if.then276, label %for.inc295

if.then276:                                       ; preds = %if.else273
  %call277 = call i32 @node_index(i32 %x.0497, i32 %y.0505, i32 %z.0512, i32 %tslice.0518) #32
  %74 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom284 = sext i32 %call277 to i64
  br label %for.body281

for.body281:                                      ; preds = %if.then276, %for.body281
  %indvars.iv = phi i64 [ 0, %if.then276 ], [ %indvars.iv.next, %for.body281 ]
  %arrayidx283 = getelementptr inbounds [4 x %struct.su3_matrix], [4 x %struct.su3_matrix]* %lbuf, i64 0, i64 %indvars.iv
  %arrayidx288 = getelementptr inbounds %struct.site, %struct.site* %74, i64 %idxprom284, i32 8, i64 %indvars.iv
  %75 = bitcast %struct.su3_matrix* %arrayidx283 to i8*
  %76 = bitcast %struct.su3_matrix* %arrayidx288 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(144) %75, i8* noundef nonnull align 8 dereferenceable(144) %76, i64 144, i1 false), !tbaa.struct !25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.end291, label %for.body281, !llvm.loop !481

for.end291:                                       ; preds = %for.body281
  call void @send_field(i8* nonnull %0, i32 576, i32 0) #32
  br label %for.inc295

for.inc295:                                       ; preds = %if.end271, %for.end291, %if.else273
  %j.4 = phi i32 [ %inc272, %if.end271 ], [ %j.3500, %for.end291 ], [ %j.3500, %if.else273 ]
  %inc296 = add nuw nsw i32 %x.0497, 1
  %77 = load i32, i32* @nx, align 4, !tbaa !13
  %cmp124 = icmp slt i32 %inc296, %77
  br i1 %cmp124, label %for.body126, label %for.inc298.loopexit, !llvm.loop !482

for.inc298.loopexit:                              ; preds = %for.inc295
  %.pre577 = load i32, i32* @ny, align 4, !tbaa !13
  br label %for.inc298

for.inc298:                                       ; preds = %for.inc298.loopexit, %for.cond123.preheader
  %78 = phi i32 [ %54, %for.cond123.preheader ], [ %.pre577, %for.inc298.loopexit ]
  %79 = phi i32 [ %55, %for.cond123.preheader ], [ %77, %for.inc298.loopexit ]
  %j.3.lcssa = phi i32 [ %j.2507, %for.cond123.preheader ], [ %j.4, %for.inc298.loopexit ]
  %currentnode.3.lcssa = phi i32 [ %currentnode.2508, %for.cond123.preheader ], [ %currentnode.4, %for.inc298.loopexit ]
  %inc299 = add nuw nsw i32 %y.0505, 1
  %cmp120 = icmp slt i32 %inc299, %78
  br i1 %cmp120, label %for.cond123.preheader, label %for.inc301.loopexit, !llvm.loop !483

for.inc301.loopexit:                              ; preds = %for.inc298
  %.pre578 = load i32, i32* @nz, align 4, !tbaa !13
  br label %for.inc301

for.inc301:                                       ; preds = %for.inc301.loopexit, %for.cond119.preheader
  %80 = phi i32 [ %51, %for.cond119.preheader ], [ %.pre578, %for.inc301.loopexit ]
  %81 = phi i32 [ %52, %for.cond119.preheader ], [ %78, %for.inc301.loopexit ]
  %82 = phi i32 [ %53, %for.cond119.preheader ], [ %78, %for.inc301.loopexit ]
  %j.2.lcssa = phi i32 [ %j.1514, %for.cond119.preheader ], [ %j.3.lcssa, %for.inc301.loopexit ]
  %currentnode.2.lcssa = phi i32 [ %currentnode.1515, %for.cond119.preheader ], [ %currentnode.3.lcssa, %for.inc301.loopexit ]
  %inc302 = add nuw nsw i32 %z.0512, 1
  %cmp116 = icmp slt i32 %inc302, %80
  br i1 %cmp116, label %for.cond119.preheader, label %for.end303, !llvm.loop !484

for.end303:                                       ; preds = %for.inc301, %for.cond115.preheader
  %83 = phi i32 [ %49, %for.cond115.preheader ], [ %80, %for.inc301 ]
  %84 = phi i32 [ %50, %for.cond115.preheader ], [ %80, %for.inc301 ]
  %currentnode.1.lcssa = phi i32 [ %currentnode.0520, %for.cond115.preheader ], [ %currentnode.2.lcssa, %for.inc301 ]
  %85 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp304 = icmp eq i32 %85, 0
  br i1 %cmp304, label %if.then307, label %for.inc321

if.then307:                                       ; preds = %for.end303
  call void @byterevn(i32* %46, i32 %mul308) #32
  %call313 = call i64 @fwrite(i8* %47, i64 %mul312, i64 1, %struct._IO_FILE* %outfile.0) #34
  %cmp314.not = icmp eq i64 %call313, 1
  br i1 %cmp314.not, label %if.end318, label %if.then316

if.then316:                                       ; preds = %if.then307
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([17 x i8], [17 x i8]* @str.203.294, i64 0, i64 0))
  br label %if.end318

if.end318:                                        ; preds = %if.then316, %if.then307
  %call319 = call i32 @fflush(%struct._IO_FILE* %outfile.0) #34
  %.pre572 = load i32, i32* @nz, align 4, !tbaa !13
  br label %for.inc321

for.inc321:                                       ; preds = %for.end303, %if.end318
  %86 = phi i32 [ %83, %for.end303 ], [ %.pre572, %if.end318 ]
  %87 = phi i32 [ %84, %for.end303 ], [ %.pre572, %if.end318 ]
  %inc322 = add nuw nsw i32 %tslice.0518, 1
  %88 = load i32, i32* @nt, align 4, !tbaa !13
  %cmp112 = icmp slt i32 %inc322, %88
  br i1 %cmp112, label %for.cond115.preheader, label %for.end323, !llvm.loop !485

for.end323:                                       ; preds = %for.inc321, %if.end110
  %89 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp324 = icmp eq i32 %89, 0
  br i1 %cmp324, label %if.then326, label %if.end329

if.then326:                                       ; preds = %for.end323
  %call327 = call i32 @fclose(%struct._IO_FILE* %outfile.0) #34
  %call328 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @.str.174, i64 0, i64 0), i8* %filename) #34
  call void @free(i8* %47) #32
  br label %if.end329

if.end329:                                        ; preds = %if.then326, %for.end323
  call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #31
  call void @llvm.lifetime.end.p0i8(i64 30, i8* nonnull %3) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #31
  call void @llvm.lifetime.end.p0i8(i64 576, i8* nonnull %0) #31
  ret %struct.gauge_file* %call1
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define noalias %struct.gauge_file* @save_parallel_archive(i8* nocapture readnone %filename) local_unnamed_addr #13 {
entry:
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([48 x i8], [48 x i8]* @str.205, i64 0, i64 0))
  ret %struct.gauge_file* null
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @su3_projector(%struct.su3_vector* nocapture readonly %a, %struct.su3_vector* nocapture readonly %b, %struct.su3_matrix* nocapture %c) local_unnamed_addr #10 {
entry:
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %entry, %for.inc46
  %indvars.iv78 = phi i64 [ 0, %entry ], [ %indvars.iv.next79, %for.inc46 ]
  %real = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv78, i32 0
  %imag = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %a, i64 0, i32 0, i64 %indvars.iv78, i32 1
  %.pre = load double, double* %real, align 8, !tbaa !4
  br label %for.body3

for.body3:                                        ; preds = %for.cond1.preheader, %for.body3
  %0 = phi double [ %.pre, %for.cond1.preheader ], [ %4, %for.body3 ]
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.body3 ]
  %real8 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 %indvars.iv, i32 0
  %1 = load double, double* %real8, align 8, !tbaa !4
  %mul = fmul double %0, %1
  %2 = load double, double* %imag, align 8, !tbaa !9
  %imag15 = getelementptr inbounds %struct.su3_vector, %struct.su3_vector* %b, i64 0, i32 0, i64 %indvars.iv, i32 1
  %3 = load double, double* %imag15, align 8, !tbaa !9
  %mul16 = fmul double %2, %3
  %add = fadd double %mul, %mul16
  %real21 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv78, i64 %indvars.iv, i32 0
  store double %add, double* %real21, align 8, !tbaa !4
  %4 = load double, double* %real, align 8, !tbaa !4
  %mul30 = fmul double %3, %4
  %5 = load double, double* %real8, align 8, !tbaa !4
  %mul39 = fmul double %2, %5
  %sub = fsub double %mul39, %mul30
  %imag45 = getelementptr inbounds %struct.su3_matrix, %struct.su3_matrix* %c, i64 0, i32 0, i64 %indvars.iv78, i64 %indvars.iv, i32 1
  store double %sub, double* %imag45, align 8, !tbaa !9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.inc46, label %for.body3, !llvm.loop !486

for.inc46:                                        ; preds = %for.body3
  %indvars.iv.next79 = add nuw nsw i64 %indvars.iv78, 1
  %exitcond80.not = icmp eq i64 %indvars.iv.next79, 3
  br i1 %exitcond80.not, label %for.end48, label %for.cond1.preheader, !llvm.loop !487

for.end48:                                        ; preds = %for.inc46
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr #1 {
entry:
  tail call void @initialize_machine(i32 %argc, i8** %argv) #32
  tail call void (...) bitcast (void ()* @g_sync to void (...)*)() #32
  %call = tail call i32 (...) bitcast (i32 ()* @setup to i32 (...)*)() #32
  %call180 = tail call i32 @readin(i32 %call) #32
  %cmp81 = icmp eq i32 %call180, 0
  br i1 %cmp81, label %while.body, label %while.end

while.body:                                       ; preds = %entry, %if.end56
  %call2 = tail call double (...) bitcast (double ()* @dclock to double (...)*)() #32
  %0 = load i32, i32* @warms, align 4, !tbaa !13
  %cmp373 = icmp sgt i32 %0, 0
  br i1 %cmp373, label %for.body, label %for.end

for.body:                                         ; preds = %while.body, %for.body
  %traj_done.074 = phi i32 [ %inc, %for.body ], [ 0, %while.body ]
  %call4 = tail call i32 (...) bitcast (i32 ()* @update to i32 (...)*)() #32
  %inc = add nuw nsw i32 %traj_done.074, 1
  %1 = load i32, i32* @warms, align 4, !tbaa !13
  %cmp3 = icmp slt i32 %inc, %1
  br i1 %cmp3, label %for.body, label %for.end, !llvm.loop !488

for.end:                                          ; preds = %for.body, %while.body
  %2 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp5 = icmp eq i32 %2, 0
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  %puts72 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([18 x i8], [18 x i8]* @str.40, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call7 = tail call i32 @fflush(%struct._IO_FILE* %3) #34
  %4 = load i32, i32* @trajecs, align 4, !tbaa !13
  %cmp975 = icmp sgt i32 %4, 0
  br i1 %cmp975, label %for.body10, label %for.end26

for.body10:                                       ; preds = %if.end, %for.inc24
  %meascount.078 = phi i32 [ %meascount.1, %for.inc24 ], [ 0, %if.end ]
  %traj_done.177 = phi i32 [ %inc25, %for.inc24 ], [ 0, %if.end ]
  %avs_iters.076 = phi i32 [ %avs_iters.1, %for.inc24 ], [ 0, %if.end ]
  %call11 = tail call i32 (...) bitcast (i32 ()* @update to i32 (...)*)() #32
  %5 = load i32, i32* @propinterval, align 4, !tbaa !13
  %rem = srem i32 %traj_done.177, %5
  %sub = add nsw i32 %5, -1
  %cmp12 = icmp eq i32 %rem, %sub
  br i1 %cmp12, label %if.then13, label %for.inc24

if.then13:                                        ; preds = %for.body10
  tail call void @rephase(i32 0) #32
  tail call void @g_measure() #32
  tail call void @rephase(i32 1) #32
  %6 = load double, double* @mass, align 8, !tbaa !11
  tail call void @f_meas_imp(i32 2192, i32 2336, double %6) #32
  %add = add nsw i32 %call11, %avs_iters.076
  %inc21 = add nsw i32 %meascount.078, 1
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call22 = tail call i32 @fflush(%struct._IO_FILE* %7) #34
  br label %for.inc24

for.inc24:                                        ; preds = %for.body10, %if.then13
  %avs_iters.1 = phi i32 [ %add, %if.then13 ], [ %avs_iters.076, %for.body10 ]
  %meascount.1 = phi i32 [ %inc21, %if.then13 ], [ %meascount.078, %for.body10 ]
  %inc25 = add nuw nsw i32 %traj_done.177, 1
  %8 = load i32, i32* @trajecs, align 4, !tbaa !13
  %cmp9 = icmp slt i32 %inc25, %8
  br i1 %cmp9, label %for.body10, label %for.end26, !llvm.loop !489

for.end26:                                        ; preds = %for.inc24, %if.end
  %avs_iters.0.lcssa = phi i32 [ 0, %if.end ], [ %avs_iters.1, %for.inc24 ]
  %meascount.0.lcssa = phi i32 [ 0, %if.end ], [ %meascount.1, %for.inc24 ]
  %9 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp27 = icmp eq i32 %9, 0
  br i1 %cmp27, label %if.then29, label %if.end31

if.then29:                                        ; preds = %for.end26
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([18 x i8], [18 x i8]* @str.411, i64 0, i64 0))
  br label %if.end31

if.end31:                                         ; preds = %if.then29, %for.end26
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call32 = tail call i32 @fflush(%struct._IO_FILE* %10) #34
  %cmp33 = icmp sgt i32 %meascount.0.lcssa, 0
  %11 = load i32, i32* @this_node, align 4
  %cmp36 = icmp eq i32 %11, 0
  %or.cond = select i1 %cmp33, i1 %cmp36, i1 false
  br i1 %or.cond, label %if.then38, label %if.end43

if.then38:                                        ; preds = %if.end31
  %conv39 = sitofp i32 %avs_iters.0.lcssa to double
  %conv40 = sitofp i32 %meascount.0.lcssa to double
  %div = fdiv double %conv39, %conv40
  %call41 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([31 x i8], [31 x i8]* @.str.38.412, i64 0, i64 0), double %div) #34
  br label %if.end43

if.end43:                                         ; preds = %if.then38, %if.end31
  %call44 = tail call double (...) bitcast (double ()* @dclock to double (...)*)() #32
  %12 = load i32, i32* @this_node, align 4, !tbaa !13
  %cmp46 = icmp eq i32 %12, 0
  br i1 %cmp46, label %if.then48, label %if.end50

if.then48:                                        ; preds = %if.end43
  %13 = load i32, i32* @total_iters, align 4, !tbaa !13
  %call49 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39.413, i64 0, i64 0), i32 %13) #34
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %if.end43
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !15
  %call51 = tail call i32 @fflush(%struct._IO_FILE* %14) #34
  %15 = load i32, i32* @saveflag, align 4, !tbaa !13
  %cmp52.not = icmp eq i32 %15, 20
  br i1 %cmp52.not, label %if.end56, label %if.then54

if.then54:                                        ; preds = %if.end50
  tail call void @rephase(i32 0) #32
  %16 = load i32, i32* @saveflag, align 4, !tbaa !13
  %call55 = tail call %struct.gauge_file* @save_lattice(i32 %16, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @savefile, i64 0, i64 0)) #32
  tail call void @rephase(i32 1) #32
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %if.end50
  %call1 = tail call i32 @readin(i32 %call) #32
  %cmp = icmp eq i32 %call1, 0
  br i1 %cmp, label %while.body, label %while.end, !llvm.loop !490

while.end:                                        ; preds = %if.end56, %entry
  ret i32 0
}

; Function Attrs: noinline nounwind optsize uwtable
define void @make_lattice() local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @sites_on_node, align 4, !tbaa !13
  %conv = sext i32 %0 to i64
  %call = tail call noalias align 16 i8* @calloc(i64 %conv, i64 3200) #32
  store i8* %call, i8** bitcast (%struct.site** @lattice to i8**), align 8, !tbaa !15
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %for.body.preheader

for.body.preheader:                               ; preds = %if.then, %entry
  %.ph = phi i32 [ %0, %entry ], [ %.pre142.pre, %if.then ]
  br label %for.body

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @this_node, align 4, !tbaa !13
  %call2 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([30 x i8], [30 x i8]* @.str.416, i64 0, i64 0), i32 %1) #34
  tail call void @terminate(i32 1) #32
  %.pre142.pre = load i32, i32* @sites_on_node, align 4, !tbaa !13
  br label %for.body.preheader

for.cond14.preheader:                             ; preds = %for.inc
  %2 = load i32, i32* @nt, align 4, !tbaa !13
  %cmp15138 = icmp sgt i32 %2, 0
  br i1 %cmp15138, label %for.cond18.preheader.preheader, label %for.end87

for.cond18.preheader.preheader:                   ; preds = %for.cond14.preheader
  %.pre143 = load i32, i32* @nz, align 4, !tbaa !13
  br label %for.cond18.preheader

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %3 = phi i32 [ %6, %for.inc ], [ %.ph, %for.body.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body.preheader ]
  %conv5 = sext i32 %3 to i64
  %call6 = tail call noalias align 16 i8* @calloc(i64 %conv5, i64 8) #32
  %arrayidx = getelementptr inbounds [16 x i8**], [16 x i8**]* @gen_pt, i64 0, i64 %indvars.iv
  %4 = bitcast i8*** %arrayidx to i8**
  store i8* %call6, i8** %4, align 8, !tbaa !15
  %cmp9 = icmp eq i8* %call6, null
  br i1 %cmp9, label %if.then11, label %for.inc

if.then11:                                        ; preds = %for.body
  %5 = load i32, i32* @this_node, align 4, !tbaa !13
  %call12 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1.417, i64 0, i64 0), i32 %5) #34
  tail call void @terminate(i32 1) #32
  %.pre = load i32, i32* @sites_on_node, align 4, !tbaa !13
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then11
  %6 = phi i32 [ %3, %for.body ], [ %.pre, %if.then11 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 16
  br i1 %exitcond.not, label %for.cond14.preheader, label %for.body, !llvm.loop !491

for.cond18.preheader:                             ; preds = %for.cond18.preheader.preheader, %for.inc85
  %7 = phi i32 [ %27, %for.inc85 ], [ %2, %for.cond18.preheader.preheader ]
  %8 = phi i32 [ %28, %for.inc85 ], [ %.pre143, %for.cond18.preheader.preheader ]
  %9 = phi i32 [ %29, %for.inc85 ], [ %.pre143, %for.cond18.preheader.preheader ]
  %t.0139 = phi i32 [ %inc86, %for.inc85 ], [ 0, %for.cond18.preheader.preheader ]
  %conv48 = trunc i32 %t.0139 to i16
  %cmp19135 = icmp sgt i32 %9, 0
  br i1 %cmp19135, label %for.cond22.preheader.preheader, label %for.inc85

for.cond22.preheader.preheader:                   ; preds = %for.cond18.preheader
  %.pre144 = load i32, i32* @ny, align 4, !tbaa !13
  br label %for.cond22.preheader

for.cond22.preheader:                             ; preds = %for.cond22.preheader.preheader, %for.inc82
  %10 = phi i32 [ %24, %for.inc82 ], [ %8, %for.cond22.preheader.preheader ]
  %11 = phi i32 [ %25, %for.inc82 ], [ %.pre144, %for.cond22.preheader.preheader ]
  %12 = phi i32 [ %26, %for.inc82 ], [ %.pre144, %for.cond22.preheader.preheader ]
  %z.0136 = phi i32 [ %inc83, %for.inc82 ], [ 0, %for.cond22.preheader.preheader ]
  %conv44 = trunc i32 %z.0136 to i16
  %add58 = add nuw i32 %z.0136, %t.0139
  %cmp23132 = icmp sgt i32 %12, 0
  br i1 %cmp23132, label %for.cond26.preheader.preheader, label %for.inc82

for.cond26.preheader.preheader:                   ; preds = %for.cond22.preheader
  %.pre145 = load i32, i32* @nx, align 4, !tbaa !13
  br label %for.cond26.preheader

for.cond26.preheader:                             ; preds = %for.cond26.preheader.preheader, %for.inc79
  %13 = phi i32 [ %22, %for.inc79 ], [ %11, %for.cond26.preheader.preheader ]
  %14 = phi i32 [ %23, %for.inc79 ], [ %.pre145, %for.cond26.preheader.preheader ]
  %y.0133 = phi i32 [ %inc80, %for.inc79 ], [ 0, %for.cond26.preheader.preheader ]
  %conv40 = trunc i32 %y.0133 to i16
  %add59 = add i32 %add58, %y.0133
  %cmp27129 = icmp sgt i32 %14, 0
  br i1 %cmp27129, label %for.body29, label %for.inc79

for.body29:                                       ; preds = %for.cond26.preheader, %for.inc76
  %x.0130 = phi i32 [ %inc77, %for.inc76 ], [ 0, %for.cond26.preheader ]
  %call30 = tail call i32 @node_number(i32 %x.0130, i32 %y.0133, i32 %z.0136, i32 %t.0139) #32
  %call31 = tail call i32 (...) bitcast (i32 ()* @mynode to i32 (...)*)() #32
  %cmp32 = icmp eq i32 %call30, %call31
  br i1 %cmp32, label %if.then34, label %for.inc76

if.then34:                                        ; preds = %for.body29
  %call35 = tail call i32 @node_index(i32 %x.0130, i32 %y.0133, i32 %z.0136, i32 %t.0139) #32
  %conv36 = trunc i32 %x.0130 to i16
  %15 = load %struct.site*, %struct.site** @lattice, align 8, !tbaa !15
  %idxprom37 = sext i32 %call35 to i64
  %x39 = getelementptr inbounds %struct.site, %struct.site* %15, i64 %idxprom37, i32 0
  store i16 %conv36, i16* %x39, align 8, !tbaa !122
  %y43 = getelementptr inbounds %struct.site, %struct.site* %15, i64 %idxprom37, i32 1
  store i16 %conv40, i16* %y43, align 2, !tbaa !123
  %z47 = getelementptr inbounds %struct.site, %struct.site* %15, i64 %idxprom37, i32 2
  store i16 %conv44, i16* %z47, align 4, !tbaa !124
  %t51 = getelementptr inbounds %struct.site, %struct.site* %15, i64 %idxprom37, i32 3
  store i16 %conv48, i16* %t51, align 2, !tbaa !19
  %16 = load i32, i32* @nx, align 4, !tbaa !13
  %17 = load i32, i32* @ny, align 4, !tbaa !13
  %18 = load i32, i32* @nz, align 4, !tbaa !13
  %mul = mul nsw i32 %18, %t.0139
  %add = add nsw i32 %mul, %z.0136
  %mul52 = mul nsw i32 %add, %17
  %add53 = add nsw i32 %mul52, %y.0133
  %mul54 = mul nsw i32 %add53, %16
  %add55 = add nsw i32 %mul54, %x.0130
  %index = getelementptr inbounds %struct.site, %struct.site* %15, i64 %idxprom37, i32 5
  store i32 %add55, i32* %index, align 4, !tbaa !492
  %add60 = add i32 %add59, %x.0130
  %rem = and i32 %add60, 1
  %cmp61 = icmp eq i32 %rem, 0
  %spec.select = select i1 %cmp61, i8 2, i8 1
  %19 = getelementptr inbounds %struct.site, %struct.site* %15, i64 %idxprom37, i32 4
  store i8 %spec.select, i8* %19, align 8
  %site_prn = getelementptr inbounds %struct.site, %struct.site* %15, i64 %idxprom37, i32 6
  %20 = load i32, i32* @iseed, align 4, !tbaa !13
  tail call void @initialize_prn(%struct.double_prn* nonnull %site_prn, i32 %20, i32 %add55) #32
  br label %for.inc76

for.inc76:                                        ; preds = %for.body29, %if.then34
  %inc77 = add nuw nsw i32 %x.0130, 1
  %21 = load i32, i32* @nx, align 4, !tbaa !13
  %cmp27 = icmp slt i32 %inc77, %21
  br i1 %cmp27, label %for.body29, label %for.inc79.loopexit, !llvm.loop !493

for.inc79.loopexit:                               ; preds = %for.inc76
  %.pre146 = load i32, i32* @ny, align 4, !tbaa !13
  br label %for.inc79

for.inc79:                                        ; preds = %for.inc79.loopexit, %for.cond26.preheader
  %22 = phi i32 [ %.pre146, %for.inc79.loopexit ], [ %13, %for.cond26.preheader ]
  %23 = phi i32 [ %21, %for.inc79.loopexit ], [ %14, %for.cond26.preheader ]
  %inc80 = add nuw nsw i32 %y.0133, 1
  %cmp23 = icmp slt i32 %inc80, %22
  br i1 %cmp23, label %for.cond26.preheader, label %for.inc82.loopexit, !llvm.loop !494

for.inc82.loopexit:                               ; preds = %for.inc79
  %.pre147 = load i32, i32* @nz, align 4, !tbaa !13
  br label %for.inc82

for.inc82:                                        ; preds = %for.inc82.loopexit, %for.cond22.preheader
  %24 = phi i32 [ %.pre147, %for.inc82.loopexit ], [ %10, %for.cond22.preheader ]
  %25 = phi i32 [ %22, %for.inc82.loopexit ], [ %11, %for.cond22.preheader ]
  %26 = phi i32 [ %22, %for.inc82.loopexit ], [ %12, %for.cond22.preheader ]
  %inc83 = add nuw nsw i32 %z.0136, 1
  %cmp19 = icmp slt i32 %inc83, %24
  br i1 %cmp19, label %for.cond22.preheader, label %for.inc85.loopexit, !llvm.loop !495

for.inc85.loopexit:                               ; preds = %for.inc82
  %.pre148 = load i32, i32* @nt, align 4, !tbaa !13
  br label %for.inc85

for.inc85:                                        ; preds = %for.inc85.loopexit, %for.cond18.preheader
  %27 = phi i32 [ %.pre148, %for.inc85.loopexit ], [ %7, %for.cond18.preheader ]
  %28 = phi i32 [ %24, %for.inc85.loopexit ], [ %8, %for.cond18.preheader ]
  %29 = phi i32 [ %24, %for.inc85.loopexit ], [ %9, %for.cond18.preheader ]
  %inc86 = add nuw nsw i32 %t.0139, 1
  %cmp15 = icmp slt i32 %inc86, %27
  br i1 %cmp15, label %for.cond18.preheader, label %for.end87, !llvm.loop !496

for.end87:                                        ; preds = %for.inc85, %for.cond14.preheader
  ret void
}

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { noinline nounwind optsize uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { argmemonly nofree nounwind willreturn }
attributes #4 = { nofree noinline nosync nounwind optsize uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { nofree nounwind }
attributes #7 = { noreturn nounwind optsize "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nofree nounwind optsize "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nofree nounwind optsize willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nofree noinline norecurse nosync nounwind optsize uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline nounwind optsize uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { argmemonly mustprogress nofree nounwind optsize willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { inaccessiblemem_or_argmemonly mustprogress nounwind optsize willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { nofree noinline nosync nounwind optsize readonly uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { noinline noreturn nounwind optsize uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { nounwind optsize "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn writeonly "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { argmemonly mustprogress nofree nounwind readonly willreturn }
attributes #22 = { argmemonly mustprogress nofree nounwind optsize readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { nofree noinline norecurse nosync nounwind optsize uwtable writeonly "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { mustprogress nofree noinline nounwind optsize uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { nofree noinline norecurse nosync nounwind optsize readonly uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { nofree optsize "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #29 = { mustprogress nofree nosync nounwind optsize readnone willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #30 = { optsize "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #31 = { nounwind }
attributes #32 = { nounwind optsize }
attributes #33 = { noreturn nounwind optsize }
attributes #34 = { optsize }
attributes #35 = { cold optsize }
attributes #36 = { nounwind optsize readonly willreturn }
attributes #37 = { nounwind optsize readnone willreturn }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 14.0.0 (git@github.com:ppetoumenos/llvm-project.git 43ffe3222a75cd50a33f8da93c3356b91752b555)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!5, !6, i64 0}
!5 = !{!"", !6, i64 0, !6, i64 8}
!6 = !{!"double", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!5, !6, i64 8}
!10 = !{i64 0, i64 8, !11, i64 8, i64 8, !11}
!11 = !{!6, !6, i64 0}
!12 = !{i64 0, i64 8, !11}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !7, i64 0}
!15 = !{!16, !16, i64 0}
!16 = !{!"any pointer", !7, i64 0}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = !{!20, !21, i64 6}
!20 = !{!"", !21, i64 0, !21, i64 2, !21, i64 4, !21, i64 6, !7, i64 8, !14, i64 12, !22, i64 16, !14, i64 104, !7, i64 112, !7, i64 688, !7, i64 1264, !7, i64 1840, !7, i64 2160, !24, i64 2192, !24, i64 2240, !24, i64 2288, !24, i64 2336, !24, i64 2384, !24, i64 2432, !7, i64 2480, !7, i64 2672, !24, i64 2864, !24, i64 2912, !24, i64 3056}
!21 = !{!"short", !7, i64 0}
!22 = !{!"", !23, i64 0, !23, i64 8, !23, i64 16, !23, i64 24, !23, i64 32, !23, i64 40, !23, i64 48, !23, i64 56, !23, i64 64, !23, i64 72, !6, i64 80}
!23 = !{!"long", !7, i64 0}
!24 = !{!"", !7, i64 0}
!25 = !{i64 0, i64 144, !26}
!26 = !{!7, !7, i64 0}
!27 = distinct !{!27, !18}
!28 = distinct !{!28, !18}
!29 = distinct !{!29, !18}
!30 = distinct !{!30, !18}
!31 = distinct !{!31, !18}
!32 = distinct !{!32, !18}
!33 = distinct !{!33, !18}
!34 = distinct !{!34, !18}
!35 = distinct !{!35, !18}
!36 = distinct !{!36, !18}
!37 = distinct !{!37, !18}
!38 = distinct !{!38, !18}
!39 = distinct !{!39, !18}
!40 = distinct !{!40, !18}
!41 = distinct !{!41, !18}
!42 = distinct !{!42, !18}
!43 = distinct !{!43, !18}
!44 = distinct !{!44, !18}
!45 = distinct !{!45, !18}
!46 = distinct !{!46, !18}
!47 = distinct !{!47, !18}
!48 = distinct !{!48, !18}
!49 = distinct !{!49, !18}
!50 = distinct !{!50, !18}
!51 = distinct !{!51, !18}
!52 = distinct !{!52, !18}
!53 = distinct !{!53, !18}
!54 = distinct !{!54, !18}
!55 = distinct !{!55, !18}
!56 = distinct !{!56, !18}
!57 = distinct !{!57, !18}
!58 = distinct !{!58, !18}
!59 = distinct !{!59, !18}
!60 = distinct !{!60, !18}
!61 = distinct !{!61, !18}
!62 = distinct !{!62, !18}
!63 = distinct !{!63, !18}
!64 = distinct !{!64, !18}
!65 = distinct !{!65, !18}
!66 = distinct !{!66, !18}
!67 = distinct !{!67, !18}
!68 = distinct !{!68, !18}
!69 = distinct !{!69, !18}
!70 = distinct !{!70, !18}
!71 = distinct !{!71, !18}
!72 = distinct !{!72, !18}
!73 = distinct !{!73, !18}
!74 = distinct !{!74, !18}
!75 = distinct !{!75, !18}
!76 = distinct !{!76, !18}
!77 = distinct !{!77, !18}
!78 = distinct !{!78, !18}
!79 = distinct !{!79, !18}
!80 = distinct !{!80, !18}
!81 = !{!82, !14, i64 0}
!82 = !{!"", !14, i64 0, !14, i64 4, !14, i64 8, !14, i64 12, !14, i64 16, !14, i64 20, !14, i64 24, !14, i64 28, !14, i64 32, !14, i64 36, !14, i64 40, !6, i64 48, !6, i64 56, !6, i64 64, !14, i64 72, !6, i64 80, !6, i64 88, !6, i64 96, !14, i64 104, !14, i64 108, !14, i64 112, !14, i64 116, !14, i64 120, !7, i64 124, !7, i64 380}
!83 = !{!82, !14, i64 4}
!84 = !{!82, !14, i64 8}
!85 = !{!82, !14, i64 12}
!86 = !{!82, !14, i64 16}
!87 = !{!82, !14, i64 20}
!88 = !{!82, !14, i64 24}
!89 = distinct !{!89, !18}
!90 = !{!82, !6, i64 80}
!91 = !{!82, !6, i64 88}
!92 = !{!82, !14, i64 28}
!93 = !{!82, !14, i64 32}
!94 = !{!82, !14, i64 36}
!95 = !{!82, !14, i64 40}
!96 = !{!82, !14, i64 72}
!97 = !{!82, !6, i64 96}
!98 = !{!82, !6, i64 48}
!99 = !{!82, !6, i64 56}
!100 = !{!82, !6, i64 64}
!101 = !{!82, !14, i64 116}
!102 = !{!82, !14, i64 120}
!103 = distinct !{!103, !18}
!104 = distinct !{!104, !18}
!105 = distinct !{!105, !18}
!106 = distinct !{!106, !18}
!107 = distinct !{!107, !18}
!108 = distinct !{!108, !18}
!109 = distinct !{!109, !18}
!110 = distinct !{!110, !18}
!111 = distinct !{!111, !18}
!112 = distinct !{!112, !18}
!113 = distinct !{!113, !18}
!114 = distinct !{!114, !18}
!115 = distinct !{!115, !18}
!116 = distinct !{!116, !18}
!117 = distinct !{!117, !18}
!118 = distinct !{!118, !18}
!119 = distinct !{!119, !18}
!120 = distinct !{!120, !18}
!121 = distinct !{!121, !18}
!122 = !{!20, !21, i64 0}
!123 = !{!20, !21, i64 2}
!124 = !{!20, !21, i64 4}
!125 = !{!20, !7, i64 8}
!126 = distinct !{!126, !18}
!127 = distinct !{!127, !18}
!128 = distinct !{!128, !18}
!129 = distinct !{!129, !18}
!130 = distinct !{!130, !18}
!131 = distinct !{!131, !18}
!132 = distinct !{!132, !18}
!133 = distinct !{!133, !18}
!134 = distinct !{!134, !18}
!135 = distinct !{!135, !18}
!136 = distinct !{!136, !18}
!137 = distinct !{!137, !18}
!138 = distinct !{!138, !18}
!139 = distinct !{!139, !18}
!140 = distinct !{!140, !18}
!141 = distinct !{!141, !18}
!142 = distinct !{!142, !18}
!143 = distinct !{!143, !18}
!144 = distinct !{!144, !18}
!145 = distinct !{!145, !18}
!146 = distinct !{!146, !18}
!147 = distinct !{!147, !18}
!148 = distinct !{!148, !18}
!149 = distinct !{!149, !18}
!150 = distinct !{!150, !18}
!151 = distinct !{!151, !18}
!152 = distinct !{!152, !18}
!153 = distinct !{!153, !18}
!154 = distinct !{!154, !18}
!155 = distinct !{!155, !18}
!156 = distinct !{!156, !18}
!157 = distinct !{!157, !18}
!158 = distinct !{!158, !18}
!159 = distinct !{!159, !18}
!160 = distinct !{!160, !18}
!161 = distinct !{!161, !18}
!162 = distinct !{!162, !18}
!163 = distinct !{!163, !18}
!164 = distinct !{!164, !18}
!165 = distinct !{!165, !18}
!166 = distinct !{!166, !18}
!167 = distinct !{!167, !18}
!168 = distinct !{!168, !18}
!169 = distinct !{!169, !18}
!170 = distinct !{!170, !18}
!171 = distinct !{!171, !18}
!172 = distinct !{!172, !18}
!173 = distinct !{!173, !18}
!174 = distinct !{!174, !18}
!175 = distinct !{!175, !18}
!176 = distinct !{!176, !18}
!177 = distinct !{!177, !18}
!178 = distinct !{!178, !18}
!179 = distinct !{!179, !18}
!180 = distinct !{!180, !18}
!181 = distinct !{!181, !18}
!182 = distinct !{!182, !18}
!183 = distinct !{!183, !18}
!184 = distinct !{!184, !18}
!185 = distinct !{!185, !18}
!186 = distinct !{!186, !18}
!187 = distinct !{!187, !18}
!188 = distinct !{!188, !18}
!189 = distinct !{!189, !18}
!190 = distinct !{!190, !18}
!191 = distinct !{!191, !18}
!192 = distinct !{!192, !18}
!193 = distinct !{!193, !18}
!194 = distinct !{!194, !18}
!195 = distinct !{!195, !18}
!196 = distinct !{!196, !18}
!197 = distinct !{!197, !18}
!198 = distinct !{!198, !18}
!199 = distinct !{!199, !18}
!200 = distinct !{!200, !18}
!201 = distinct !{!201, !18}
!202 = distinct !{!202, !18}
!203 = distinct !{!203, !18}
!204 = distinct !{!204, !18}
!205 = distinct !{!205, !18}
!206 = distinct !{!206, !18}
!207 = distinct !{!207, !18}
!208 = distinct !{!208, !18}
!209 = distinct !{!209, !18}
!210 = distinct !{!210, !18}
!211 = distinct !{!211, !18}
!212 = distinct !{!212, !18}
!213 = distinct !{!213, !18}
!214 = distinct !{!214, !18}
!215 = distinct !{!215, !18}
!216 = distinct !{!216, !18}
!217 = distinct !{!217, !18}
!218 = distinct !{!218, !18}
!219 = distinct !{!219, !18}
!220 = distinct !{!220, !18}
!221 = distinct !{!221, !18}
!222 = distinct !{!222, !18}
!223 = distinct !{!223, !18}
!224 = distinct !{!224, !18}
!225 = distinct !{!225, !18}
!226 = distinct !{!226, !18}
!227 = distinct !{!227, !18}
!228 = distinct !{!228, !18}
!229 = distinct !{!229, !18}
!230 = distinct !{!230, !18}
!231 = distinct !{!231, !18}
!232 = distinct !{!232, !18}
!233 = distinct !{!233, !18}
!234 = distinct !{!234, !18}
!235 = distinct !{!235, !18}
!236 = distinct !{!236, !18}
!237 = distinct !{!237, !18}
!238 = distinct !{!238, !18}
!239 = distinct !{!239, !18}
!240 = distinct !{!240, !18}
!241 = distinct !{!241, !18}
!242 = distinct !{!242, !18}
!243 = !{!244, !6, i64 48}
!244 = !{!"", !5, i64 0, !5, i64 16, !5, i64 32, !6, i64 48, !6, i64 56, !6, i64 64, !6, i64 72}
!245 = !{!244, !6, i64 56}
!246 = !{!244, !6, i64 64}
!247 = !{!244, !6, i64 0}
!248 = !{!244, !6, i64 16}
!249 = !{!244, !6, i64 32}
!250 = !{!244, !6, i64 8}
!251 = !{!244, !6, i64 24}
!252 = !{!244, !6, i64 40}
!253 = distinct !{!253, !18}
!254 = distinct !{!254, !18}
!255 = distinct !{!255, !18}
!256 = distinct !{!256, !18}
!257 = distinct !{!257, !18}
!258 = distinct !{!258, !18}
!259 = distinct !{!259, !18}
!260 = distinct !{!260, !18}
!261 = distinct !{!261, !18}
!262 = !{i64 0, i64 48, !26}
!263 = distinct !{!263, !18}
!264 = distinct !{!264, !18}
!265 = distinct !{!265, !18}
!266 = distinct !{!266, !18}
!267 = distinct !{!267, !18}
!268 = distinct !{!268, !18}
!269 = distinct !{!269, !18}
!270 = distinct !{!270, !18}
!271 = distinct !{!271, !18}
!272 = distinct !{!272, !18}
!273 = distinct !{!273, !18}
!274 = distinct !{!274, !18}
!275 = distinct !{!275, !18}
!276 = distinct !{!276, !18}
!277 = distinct !{!277, !18}
!278 = distinct !{!278, !18}
!279 = distinct !{!279, !18}
!280 = distinct !{!280, !18}
!281 = !{!22, !23, i64 0}
!282 = !{!22, !23, i64 8}
!283 = !{!22, !23, i64 16}
!284 = !{!22, !23, i64 24}
!285 = !{!22, !23, i64 32}
!286 = !{!22, !23, i64 40}
!287 = !{!22, !23, i64 48}
!288 = !{!22, !23, i64 72}
!289 = !{!22, !23, i64 56}
!290 = !{!22, !23, i64 64}
!291 = !{!22, !6, i64 80}
!292 = distinct !{!292, !18}
!293 = distinct !{!293, !18}
!294 = distinct !{!294, !18}
!295 = distinct !{!295, !18}
!296 = distinct !{!296, !18}
!297 = distinct !{!297, !18}
!298 = distinct !{!298, !18}
!299 = distinct !{!299, !18}
!300 = distinct !{!300, !18}
!301 = distinct !{!301, !18}
!302 = distinct !{!302, !18}
!303 = distinct !{!303, !18}
!304 = distinct !{!304, !18}
!305 = distinct !{!305, !18}
!306 = !{!307, !14, i64 28}
!307 = !{!"", !7, i64 0, !14, i64 28, !6, i64 32, !6, i64 40}
!308 = distinct !{!308, !18}
!309 = distinct !{!309, !18}
!310 = distinct !{!310, !18}
!311 = distinct !{!311, !18}
!312 = distinct !{!312, !18}
!313 = distinct !{!313, !18}
!314 = distinct !{!314, !18}
!315 = distinct !{!315, !18}
!316 = distinct !{!316, !18}
!317 = distinct !{!317, !18}
!318 = distinct !{!318, !18}
!319 = distinct !{!319, !18}
!320 = distinct !{!320, !18}
!321 = distinct !{!321, !18}
!322 = distinct !{!322, !18}
!323 = distinct !{!323, !18}
!324 = !{i64 0, i64 96, !26}
!325 = distinct !{!325, !18}
!326 = distinct !{!326, !18}
!327 = distinct !{!327, !18}
!328 = distinct !{!328, !18}
!329 = distinct !{!329, !18}
!330 = distinct !{!330, !18}
!331 = distinct !{!331, !18}
!332 = distinct !{!332, !18}
!333 = distinct !{!333, !18}
!334 = distinct !{!334, !18}
!335 = !{!307, !6, i64 32}
!336 = distinct !{!336, !18}
!337 = distinct !{!337, !18}
!338 = distinct !{!338, !18}
!339 = distinct !{!339, !18}
!340 = distinct !{!340, !18}
!341 = distinct !{!341, !18}
!342 = distinct !{!342, !18}
!343 = distinct !{!343, !18}
!344 = distinct !{!344, !18}
!345 = distinct !{!345, !18}
!346 = distinct !{!346, !18}
!347 = distinct !{!347, !18}
!348 = distinct !{!348, !18}
!349 = distinct !{!349, !18}
!350 = distinct !{!350, !18}
!351 = distinct !{!351, !18}
!352 = distinct !{!352, !18}
!353 = distinct !{!353, !18}
!354 = distinct !{!354, !18}
!355 = distinct !{!355, !18}
!356 = distinct !{!356, !18}
!357 = distinct !{!357, !18}
!358 = distinct !{!358, !18}
!359 = distinct !{!359, !18}
!360 = distinct !{!360, !18}
!361 = distinct !{!361, !18}
!362 = distinct !{!362, !18}
!363 = distinct !{!363, !18}
!364 = distinct !{!364, !18}
!365 = distinct !{!365, !18}
!366 = distinct !{!366, !18}
!367 = distinct !{!367, !18}
!368 = distinct !{!368, !18}
!369 = distinct !{!369, !18}
!370 = distinct !{!370, !18}
!371 = distinct !{!371, !18}
!372 = distinct !{!372, !18}
!373 = distinct !{!373, !18}
!374 = distinct !{!374, !18}
!375 = distinct !{!375, !18}
!376 = distinct !{!376, !18}
!377 = distinct !{!377, !18}
!378 = distinct !{!378, !18}
!379 = distinct !{!379, !18}
!380 = distinct !{!380, !18}
!381 = distinct !{!381, !18}
!382 = distinct !{!382, !18}
!383 = distinct !{!383, !18}
!384 = distinct !{!384, !18}
!385 = distinct !{!385, !18}
!386 = distinct !{!386, !18}
!387 = !{!388, !14, i64 0}
!388 = !{!"", !14, i64 0, !16, i64 8, !16, i64 16}
!389 = !{!388, !16, i64 8}
!390 = !{!388, !16, i64 16}
!391 = distinct !{!391, !18}
!392 = distinct !{!392, !18}
!393 = distinct !{!393, !18}
!394 = !{!395, !14, i64 84}
!395 = !{!"", !14, i64 0, !7, i64 4, !7, i64 68, !14, i64 84, !14, i64 88}
!396 = distinct !{!396, !18}
!397 = distinct !{!397, !18}
!398 = !{!399, !16, i64 8}
!399 = !{!"", !16, i64 0, !16, i64 8, !16, i64 16, !14, i64 24, !16, i64 32, !14, i64 40, !400, i64 44}
!400 = !{!"", !14, i64 0, !14, i64 4}
!401 = !{!399, !16, i64 16}
!402 = !{!399, !14, i64 48}
!403 = !{!399, !14, i64 44}
!404 = !{!395, !14, i64 0}
!405 = !{!395, !14, i64 88}
!406 = !{!399, !16, i64 0}
!407 = !{!399, !14, i64 24}
!408 = !{!399, !16, i64 32}
!409 = !{!399, !14, i64 40}
!410 = !{!400, !14, i64 4}
!411 = !{!400, !14, i64 0}
!412 = distinct !{!412, !18}
!413 = distinct !{!413, !18}
!414 = distinct !{!414, !18}
!415 = distinct !{!415, !18}
!416 = distinct !{!416, !18}
!417 = distinct !{!417, !18}
!418 = distinct !{!418, !18}
!419 = distinct !{!419, !18}
!420 = distinct !{!420, !18}
!421 = !{!422, !14, i64 0}
!422 = !{!"", !14, i64 0, !7, i64 4, !14, i64 204, !7, i64 208}
!423 = !{!422, !14, i64 204}
!424 = distinct !{!424, !18}
!425 = distinct !{!425, !18}
!426 = distinct !{!426, !18}
!427 = distinct !{!427, !18}
!428 = distinct !{!428, !18}
!429 = distinct !{!429, !18}
!430 = distinct !{!430, !18}
!431 = distinct !{!431, !18}
!432 = distinct !{!432, !18}
!433 = distinct !{!433, !18}
!434 = distinct !{!434, !18}
!435 = distinct !{!435, !18}
!436 = !{!23, !23, i64 0}
!437 = !{!438, !21, i64 0}
!438 = !{!"", !21, i64 0, !21, i64 2, !21, i64 4, !21, i64 6, !7, i64 8}
!439 = !{!438, !21, i64 2}
!440 = !{!438, !21, i64 4}
!441 = !{!438, !21, i64 6}
!442 = distinct !{!442, !18}
!443 = distinct !{!443, !18}
!444 = distinct !{!444, !18}
!445 = distinct !{!445, !18}
!446 = distinct !{!446, !18}
!447 = distinct !{!447, !18}
!448 = distinct !{!448, !18}
!449 = distinct !{!449, !18}
!450 = distinct !{!450, !18}
!451 = distinct !{!451, !18}
!452 = distinct !{!452, !18}
!453 = distinct !{!453, !18}
!454 = distinct !{!454, !18}
!455 = distinct !{!455, !18}
!456 = distinct !{!456, !18}
!457 = distinct !{!457, !18}
!458 = distinct !{!458, !18}
!459 = distinct !{!459, !18}
!460 = distinct !{!460, !18}
!461 = distinct !{!461, !18}
!462 = distinct !{!462, !18}
!463 = distinct !{!463, !18}
!464 = distinct !{!464, !18}
!465 = distinct !{!465, !18}
!466 = distinct !{!466, !18}
!467 = distinct !{!467, !18}
!468 = distinct !{!468, !18}
!469 = distinct !{!469, !18}
!470 = distinct !{!470, !18}
!471 = distinct !{!471, !18}
!472 = distinct !{!472, !18}
!473 = distinct !{!473, !18}
!474 = distinct !{!474, !18}
!475 = distinct !{!475, !18}
!476 = distinct !{!476, !18}
!477 = distinct !{!477, !18}
!478 = distinct !{!478, !18}
!479 = distinct !{!479, !18}
!480 = distinct !{!480, !18}
!481 = distinct !{!481, !18}
!482 = distinct !{!482, !18}
!483 = distinct !{!483, !18}
!484 = distinct !{!484, !18}
!485 = distinct !{!485, !18}
!486 = distinct !{!486, !18}
!487 = distinct !{!487, !18}
!488 = distinct !{!488, !18}
!489 = distinct !{!489, !18}
!490 = distinct !{!490, !18}
!491 = distinct !{!491, !18}
!492 = !{!20, !14, i64 12}
!493 = distinct !{!493, !18}
!494 = distinct !{!494, !18}
!495 = distinct !{!495, !18}
!496 = distinct !{!496, !18}
