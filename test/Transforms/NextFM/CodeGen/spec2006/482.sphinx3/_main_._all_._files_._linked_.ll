; RUN: %opt -multiple-func-merging-whole-program=true -func-merging-whole-program=true --passes="mergefunc,multiple-func-merging" -multiple-func-merging-identical-type=true -multiple-func-merging-coalescing=false -pass-remarks-filter=multiple-func-merging -func-merging-explore=1 -pass-remarks-output=- %s -o /dev/null | FileCheck %s --check-prefix=CHECK-MFM
; RUN: %opt -mergefunc -func-merging -func-merging-operand-reorder=false -func-merging-coalescing=false -func-merging-whole-program=true -func-merging-matcher-report=false -func-merging-debug=false -func-merging-verbose=false  -pass-remarks-filter=func-merging -hyfm-profitability=true -func-merging-f3m=true -adaptive-threshold=false -adaptive-bands=false -hyfm-f3m-rows=2 -hyfm-f3m-bands=100 -shingling-cross-basic-blocks=true -ranking-distance=1.0 -bucket-size-cap=100 -func-merging-report=false -func-merging-hyfm-nw=true -pass-remarks-output=- %s -o /dev/null | FileCheck %s --check-prefix=CHECK-F3M

; CHECK-MFM:      Function:        __msa_merge___ckd_realloc_____ckd_malloc__
; CHECK-MFM-NEXT: Args:
; CHECK-MFM-NEXT:   - Function:        __ckd_realloc__
; CHECK-MFM-NEXT:   - Function:        __ckd_malloc__
; CHECK-MFM-NEXT:   - MergedSize:      '28'
; CHECK-MFM-NEXT:   - ThunkOverhead:   '0'
; CHECK-MFM-NEXT:   - OriginalTotalSize: '35'

; CHECK-F3M:      Function:        __fm_merge___ckd_realloc_____ckd_malloc__
; CHECK-F3M-NEXT: Args:
; CHECK-F3M-NEXT:   - Function:        __ckd_realloc__
; CHECK-F3M-NEXT:   - Function:        __ckd_malloc__
; CHECK-F3M-NEXT:   - MergedSize:      '23'
; CHECK-F3M-NEXT:   - ThunkOverhead:   '0'
; CHECK-F3M-NEXT:   - OriginalTotalSize: '25'


; ModuleID = '.x/bench-suite/f3m/f3m-cgo22-artifact.v4/benchmarks/spec2006/482.sphinx3/_main_._all_._files_._linked_.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.complex = type { double, double }
%struct.mylist_s = type { i8**, %struct.mylist_s*, i32, i32, i32 }
%struct.arg_t = type { i8*, i32, i8*, i8* }
%struct.kb_t = type { %struct.kbcore_t*, i32, %struct.lextree_t**, %struct.lextree_t**, %struct.lextree_t**, i32, %struct.vithist_t*, float***, i32, i32*, i32*, i32*, i32*, i32, i32, i32**, i32*, i32*, i32, i32, i32, %struct.ascr_t*, %struct.beam_t*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32*, i32, i32, %struct.ptmr_t, %struct.ptmr_t, %struct.ptmr_t, i32, double, double, double, double, %struct._IO_FILE*, %struct._IO_FILE*, %struct.hyp_t**, i32, i8*, i32 }
%struct.kbcore_t = type { %struct.feat_s*, %struct.mdef_t*, %struct.dict_t*, %struct.dict2pid_t*, %struct.lm_s*, %struct.lmset_s*, %struct.fillpen_t*, i16*, %struct.mgau_model_t*, %struct.subvq_t*, %struct.gs_s*, %struct.tmat_t*, i32, i32 }
%struct.feat_s = type { i8*, i32, i32, i32, i32*, i32, i32, i32, i32, void (%struct.feat_s*, float**, float**)* }
%struct.mdef_t = type { i32, i32, i32, i32, i32, i32, %struct.hash_table_t*, %struct.ciphone_t*, %struct.phone_t*, i16**, i32, i16*, i8*, i32*, i8, %struct.ph_lc_s*** }
%struct.hash_table_t = type { %struct.hash_entry_s*, i32, i8 }
%struct.hash_entry_s = type { i8*, i32, i32, %struct.hash_entry_s* }
%struct.ciphone_t = type { i8*, i32 }
%struct.phone_t = type { i32, i32, i8, i8, i8, i32 }
%struct.ph_lc_s = type { i8, %struct.ph_rc_s*, %struct.ph_lc_s* }
%struct.ph_rc_s = type { i8, i32, %struct.ph_rc_s* }
%struct.dict_t = type { %struct.mdef_t*, %struct.hash_table_t*, i8**, i32, %struct.dictword_t*, %struct.hash_table_t*, i32, i32, i32, i32, i32*, i32, i32, i32 }
%struct.dictword_t = type { i8*, i8*, i32, i32, i32, i32, i32* }
%struct.dict2pid_t = type { i32**, i32***, i32**, i16**, i16**, i32*, i32, i32 }
%struct.lm_s = type { i32, i32, i32, i32, i8**, i16, i16, i32, i32, %struct.ug_t*, %struct.bg_t*, %struct.tg_t*, %struct.membg_t*, %struct.tginfo_s**, %union.lmlog_t*, %union.lmlog_t*, %union.lmlog_t*, i32*, i32, i32, i32, %struct._IO_FILE*, i32, i32, i32, float, i32, %struct.lm_tgcache_entry_t*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i32, %struct.lmclass_s**, i32, i32* }
%struct.ug_t = type { i32, %union.lmlog_t, %union.lmlog_t, i32 }
%union.lmlog_t = type { float }
%struct.bg_t = type { i16, i16, i16, i16 }
%struct.tg_t = type { i16, i16 }
%struct.membg_t = type { %struct.bg_t*, i32 }
%struct.tginfo_s = type { i16, i32, %struct.tg_t*, i32, i32, %struct.tginfo_s* }
%struct.lm_tgcache_entry_t = type { [3 x i16], i32 }
%struct.lmclass_s = type { i8*, %struct.lmclass_word_s*, %struct.lmclass_s* }
%struct.lmclass_word_s = type { i8*, i32, i32, %struct.lmclass_word_s* }
%struct.lmset_s = type { i8*, %struct.lm_s* }
%struct.fillpen_t = type { %struct.dict_t*, i32*, double, double }
%struct.mgau_model_t = type { i32, i32, i32, %struct.mgau_t*, double, i32, i32, i32 }
%struct.mgau_t = type { i32, float**, float**, float*, i32* }
%struct.subvq_t = type { %struct.arraysize_t, i32, i32, i32**, %struct.vector_gautbl_t*, i32***, float*, i32**, i32*, i32* }
%struct.arraysize_t = type { i32, i32 }
%struct.vector_gautbl_t = type { i32, i32, float**, float**, float*, double }
%struct.gs_s = type { i32, i32, i32, i32, i32, i32, float**, i32***, %struct._IO_FILE*, i32* }
%struct.tmat_t = type { i32***, i32, i32 }
%struct.lextree_t = type { i32, %struct.gnode_s*, %struct.lextree_lcroot_t*, i32, i32, %struct.lextree_node_t**, %struct.lextree_node_t**, i32, i32, i32, i32 }
%struct.gnode_s = type { %union.anytype_s, %struct.gnode_s* }
%union.anytype_s = type { i8* }
%struct.lextree_lcroot_t = type { i8, %struct.gnode_s* }
%struct.lextree_node_t = type { %struct.hmm_t, %struct.gnode_s*, i32, i32, i32, i32*, i8, i8, i16 }
%struct.hmm_t = type { %struct.arraysize_t*, %struct.arraysize_t, %struct.arraysize_t, i32**, i32 }
%struct.vithist_t = type { %struct.vithist_entry_t**, i32*, i32, i32, i32, i32, i32*, i32*, %struct.vh_lms2vh_t**, %struct.gnode_s* }
%struct.vithist_entry_t = type { i32, i16, i16, i32, i32, i32, i32, i32, i32, %union.vh_lmstate_t }
%union.vh_lmstate_t = type { %struct.anon }
%struct.anon = type { [2 x i16] }
%struct.vh_lms2vh_t = type { i32, i32, %struct.vithist_entry_t*, %struct.gnode_s* }
%struct.ascr_t = type { i32*, i32* }
%struct.beam_t = type { i32, i32, i32, i32 }
%struct.ptmr_t = type { i8*, double, double, double, double, double, double }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.hyp_t = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.partialhyp_t = type { i32, i32, i8*, i32, i32 }
%struct.fe_t = type { float, i32, i32, float, i32, i32, i32, i32, float, i16*, i32, %struct.melfb_t*, i32, i16, double* }
%struct.melfb_t = type { float, i32, i32, i32, float, float, float**, float**, float*, i32*, i32 }
%struct.argval_s = type { %union.anytype_s, i8* }
%struct.heap_s = type { i8*, i32, i32, i32, %struct.heap_s*, %struct.heap_s* }
%struct.param_t = type { float, i32, float, i32, i32, i32, i32, float, float, float, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i32, i32, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.lmclass_set_s = type { %struct.lmclass_s* }
%struct.dagnode_t = type { i32, i32, i32, i32, %struct.gnode_s* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [9 x i8] c"-logbase\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"-feat\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"-cmn\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"-varnorm\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"-agc\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"-mdef\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"-dict\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"-fdict\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"-lm\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"-lmctlfn\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"-lmdumpdir\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"-fillpen\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"-senmgau\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"-silprob\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"-fillprob\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"-lw\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"-wip\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"-uw\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"-mean\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"-var\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"-varfloor\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"-mixw\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"-mixwfloor\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"-subvq\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"-gs\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"-tmat\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"-tmatfloor\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"src/kb.c\00", align 1
@.str.29 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.30 = private unnamed_addr constant [29 x i8] c"Initialization of kb failed\0A\00", align 1
@.str.31 = private unnamed_addr constant [28 x i8] c"%s or %s not in dictionary\0A\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"<s>\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"</s>\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"%s or %s not in LM %s\0A\00", align 1
@.str.35 = private unnamed_addr constant [20 x i8] c"%s or %s not in LM\0A\00", align 1
@.str.36 = private unnamed_addr constant [47 x i8] c"Tmat contains arcs skipping more than 1 state\0A\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"Silence phone '%s' not in mdef\0A\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"SIL\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.40 = private unnamed_addr constant [19 x i8] c"Building lextrees\0A\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"-Nlextree\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.43 = private unnamed_addr constant [57 x i8] c"No. of ugtrees specified: %d; will instantiate 1 ugtree\0A\00", align 1
@.str.44 = private unnamed_addr constant [42 x i8] c"Creating Unigram Table for lm %d name %s\0A\00", align 1
@.str.45 = private unnamed_addr constant [56 x i8] c"Size of word table after unigram + words in class: %d.\0A\00", align 1
@.str.46 = private unnamed_addr constant [23 x i8] c"%d active words in %s\0A\00", align 1
@.str.47 = private unnamed_addr constant [56 x i8] c"Size of word table after adding alternative prons: %d.\0A\00", align 1
@.str.48 = private unnamed_addr constant [12 x i8] c"-treeugprob\00", align 1
@.str.49 = private unnamed_addr constant [47 x i8] c"Lextrees (%d) for lm %d name %s, %d nodes(ug)\0A\00", align 1
@.str.50 = private unnamed_addr constant [24 x i8] c"Creating Unigram Table\0A\00", align 1
@.str.51 = private unnamed_addr constant [55 x i8] c"Size of word table after unigram + words in class: %d\0A\00", align 1
@.str.52 = private unnamed_addr constant [17 x i8] c"%d active words\0A\00", align 1
@.str.53 = private unnamed_addr constant [28 x i8] c"Lextrees(%d), %d nodes(ug)\0A\00", align 1
@.str.54 = private unnamed_addr constant [32 x i8] c"Lextrees(%d), %d nodes(filler)\0A\00", align 1
@.str.55 = private unnamed_addr constant [13 x i8] c"-lextreedump\00", align 1
@.str.56 = private unnamed_addr constant [58 x i8] c"Currently, doesn't support -lextreedump for multiple-LMs\0A\00", align 1
@.str.57 = private unnamed_addr constant [11 x i8] c"UGTREE %d\0A\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"FILLERTREE %d\0A\00", align 1
@.str.59 = private unnamed_addr constant [11 x i8] c"-subvqbeam\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"-beam\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"-pbeam\00", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"-wbeam\00", align 1
@.str.63 = private unnamed_addr constant [45 x i8] c"Beam= %d, PBeam= %d, WBeam= %d, SVQBeam= %d\0A\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"-ds\00", align 1
@.str.65 = private unnamed_addr constant [26 x i8] c"Down Sampling Ratio = %d\0A\00", align 1
@.str.66 = private unnamed_addr constant [9 x i8] c"-cond_ds\00", align 1
@.str.67 = private unnamed_addr constant [42 x i8] c"Conditional Down Sampling Parameter = %d\0A\00", align 1
@.str.68 = private unnamed_addr constant [69 x i8] c"Conditional Down Sampling require the use of Gaussian Selection map\0A\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"-gs4gs\00", align 1
@.str.70 = private unnamed_addr constant [51 x i8] c"GS map would be used for Gaussian Selection? = %d\0A\00", align 1
@.str.71 = private unnamed_addr constant [9 x i8] c"-svq4svq\00", align 1
@.str.72 = private unnamed_addr constant [43 x i8] c"SVQ would be used as Gaussian Score ?= %d\0A\00", align 1
@.str.73 = private unnamed_addr constant [10 x i8] c"-ci_pbeam\00", align 1
@.str.74 = private unnamed_addr constant [85 x i8] c"CI phone beam to prune the number of parent CI phones in CI-base GMM Selection = %d\0A\00", align 1
@.str.75 = private unnamed_addr constant [63 x i8] c"Virtually no CI phone beam is applied now. (ci_pbeam>1000000)\0A\00", align 1
@.str.76 = private unnamed_addr constant [11 x i8] c"-wend_beam\00", align 1
@.str.77 = private unnamed_addr constant [27 x i8] c"Word-end pruning beam: %d\0A\00", align 1
@.str.78 = private unnamed_addr constant [11 x i8] c"-pl_window\00", align 1
@.str.79 = private unnamed_addr constant [37 x i8] c"Phoneme look-ahead window size = %d\0A\00", align 1
@.str.80 = private unnamed_addr constant [9 x i8] c"-pl_beam\00", align 1
@.str.81 = private unnamed_addr constant [30 x i8] c"Phoneme look-ahead beam = %d\0A\00", align 1
@.str.82 = private unnamed_addr constant [27 x i8] c"feat_array_alloc() failed\0A\00", align 1
@.str.83 = private unnamed_addr constant [8 x i8] c"-bghist\00", align 1
@.str.84 = private unnamed_addr constant [16 x i8] c"-hmmhistbinsize\00", align 1
@.str.85 = private unnamed_addr constant [8 x i8] c"-hypseg\00", align 1
@.str.86 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.87 = private unnamed_addr constant [50 x i8] c"fopen(%s,w) failed; use FWDXCT: from std logfile\0A\00", align 1
@.str.88 = private unnamed_addr constant [5 x i8] c"-hyp\00", align 1
@.str.89 = private unnamed_addr constant [17 x i8] c"Inside kb_setlm\0A\00", align 1
@.str.90 = private unnamed_addr constant [60 x i8] c"LM name %s cannot be found! Fall back to use base LM model\0A\00", align 1
@.str.91 = private unnamed_addr constant [21 x i8] c"Current LM name %s.\0A\00", align 1
@.str.92 = private unnamed_addr constant [20 x i8] c"Current LM name %s\0A\00", align 1
@.str.93 = private unnamed_addr constant [15 x i8] c"LM ug size %d\0A\00", align 1
@.str.94 = private unnamed_addr constant [15 x i8] c"LM bg size %d\0A\00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"LM tg size %d\0A\00", align 1
@.str.96 = private unnamed_addr constant [25 x i8] c"HMM history bin size %d\0A\00", align 1
@.str.97 = private unnamed_addr constant [11 x i8] c"src/ascr.c\00", align 1
@.str.98 = private unnamed_addr constant [11 x i8] c"src/heap.c\00", align 1
@.str.99 = private unnamed_addr constant [58 x i8] c"memory alloc failed in fe_build_mel_filters()\0A...exiting\0A\00", align 1
@.str.1.101 = private unnamed_addr constant [58 x i8] c"memory alloc failed in fe_compute_melcosine()\0A...exiting\0A\00", align 1
@.str.2.102 = private unnamed_addr constant [53 x i8] c"memory alloc failed in fe_frame_to_fea()\0A...exiting\0A\00", align 1
@.str.3.103 = private unnamed_addr constant [49 x i8] c"MEL SCALE IS CURRENTLY THE ONLY IMPLEMENTATION!\0A\00", align 1
@.str.4.104 = private unnamed_addr constant [55 x i8] c"memory alloc failed in fe_spec_magnitude()\0A...exiting\0A\00", align 1
@fe_fft.k = internal unnamed_addr global i32 0, align 4
@fe_fft.w = internal unnamed_addr global %struct.complex* null, align 8
@fe_fft.from = internal unnamed_addr global %struct.complex* null, align 8
@fe_fft.to = internal unnamed_addr global %struct.complex* null, align 8
@fe_fft.buffer = internal unnamed_addr global %struct.complex* null, align 8
@fe_fft.exch = internal unnamed_addr global %struct.complex* null, align 8
@fe_fft.wEnd = internal unnamed_addr global %struct.complex* null, align 8
@fe_fft.x = internal unnamed_addr global double 0.000000e+00, align 8
@.str.5.105 = private unnamed_addr constant [37 x i8] c"fft: N must be a power of 2 (is %d)\0A\00", align 1
@.str.6.106 = private unnamed_addr constant [45 x i8] c"fft: invert must be either +1 or -1 (is %d)\0A\00", align 1
@.str.7.100 = private unnamed_addr constant [21 x i8] c"fe_create_2d failed\0A\00", align 1
@.str.8.107 = private unnamed_addr constant [48 x i8] c"Please define the number of MEL filters needed\0A\00", align 1
@.str.9.108 = private unnamed_addr constant [41 x i8] c"Modify include/new_fe.h and new_fe_sp.c\0A\00", align 1
@.str.10.109 = private unnamed_addr constant [47 x i8] c"Please define the upper filt frequency needed\0A\00", align 1
@.str.11.110 = private unnamed_addr constant [47 x i8] c"Please define the lower filt frequency needed\0A\00", align 1
@.str.12.111 = private unnamed_addr constant [24 x i8] c"Current FE Parameters:\0A\00", align 1
@.str.13.112 = private unnamed_addr constant [32 x i8] c"\09Sampling Rate:             %f\0A\00", align 1
@.str.14.113 = private unnamed_addr constant [32 x i8] c"\09Frame Size:                %d\0A\00", align 1
@.str.15.114 = private unnamed_addr constant [32 x i8] c"\09Frame Shift:               %d\0A\00", align 1
@.str.16.115 = private unnamed_addr constant [32 x i8] c"\09FFT Size:                  %d\0A\00", align 1
@.str.17.116 = private unnamed_addr constant [32 x i8] c"\09Number of Overflow Samps:  %d\0A\00", align 1
@.str.18.117 = private unnamed_addr constant [32 x i8] c"\09Start Utt Status:          %d\0A\00", align 1
@.str.118 = private unnamed_addr constant [19 x i8] c"TMAT %d = %d x %d\0A\00", align 1
@.str.1.119 = private unnamed_addr constant [6 x i8] c" %12d\00", align 1
@.str.3.122 = private unnamed_addr constant [11 x i8] c"src/tmat.c\00", align 1
@.str.4.123 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.5.124 = private unnamed_addr constant [49 x i8] c"Reading HMM transition probability matrices: %s\0A\00", align 1
@.str.6.125 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.7.126 = private unnamed_addr constant [13 x i8] c"SYSTEM_ERROR\00", align 1
@.str.8.127 = private unnamed_addr constant [21 x i8] c"fopen(%s,rb) failed\0A\00", align 1
@.str.9.128 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.10.129 = private unnamed_addr constant [24 x i8] c"bio_readhdr(%s) failed\0A\00", align 1
@.str.11.130 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.12.131 = private unnamed_addr constant [4 x i8] c"1.0\00", align 1
@.str.13.132 = private unnamed_addr constant [8 x i8] c"WARNING\00", align 1
@.str.14.133 = private unnamed_addr constant [40 x i8] c"Version mismatch(%s): %s, expecting %s\0A\00", align 1
@.str.15.134 = private unnamed_addr constant [8 x i8] c"chksum0\00", align 1
@.str.16.135 = private unnamed_addr constant [34 x i8] c"bio_fread(%s) (arraysize) failed\0A\00", align 1
@.str.17.136 = private unnamed_addr constant [35 x i8] c"%s: #tmat (%d) exceeds limit (%d)\0A\00", align 1
@.str.18.137 = private unnamed_addr constant [42 x i8] c"%s: #from-states(%d) != #to-states(%d)-1\0A\00", align 1
@.str.19.138 = private unnamed_addr constant [58 x i8] c"%s: #float32s(%d) doesn't match dimensions: %d x %d x %d\0A\00", align 1
@.str.20.139 = private unnamed_addr constant [30 x i8] c"fread(%s) (arraydata) failed\0A\00", align 1
@.str.21.140 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.22.141 = private unnamed_addr constant [35 x i8] c"Non-empty file beyond end of data\0A\00", align 1
@.str.23.142 = private unnamed_addr constant [43 x i8] c"Read %d transition matrices of size %dx%d\0A\00", align 1
@.str.24.143 = private unnamed_addr constant [27 x i8] c"Tmat not upper triangular\0A\00", align 1
@.str.144 = private unnamed_addr constant [3 x i8] c".Z\00", align 1
@.str.1.145 = private unnamed_addr constant [3 x i8] c".z\00", align 1
@.str.2.146 = private unnamed_addr constant [4 x i8] c".gz\00", align 1
@.str.3.147 = private unnamed_addr constant [4 x i8] c".GZ\00", align 1
@.str.4.148 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.5.150 = private unnamed_addr constant [13 x i8] c"gunzip -c %s\00", align 1
@.str.6.149 = private unnamed_addr constant [8 x i8] c"zcat %s\00", align 1
@.str.7.151 = private unnamed_addr constant [9 x i8] c"src/io.c\00", align 1
@.str.8.152 = private unnamed_addr constant [13 x i8] c"SYSTEM_ERROR\00", align 1
@.str.9.153 = private unnamed_addr constant [22 x i8] c"popen (%s,%s) failed\0A\00", align 1
@.str.10.154 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.11.156 = private unnamed_addr constant [10 x i8] c"gzip > %s\00", align 1
@.str.12.155 = private unnamed_addr constant [17 x i8] c"compress -c > %s\00", align 1
@.str.13.157 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.14.158 = private unnamed_addr constant [42 x i8] c"fopen_comp not implemented for mode = %s\0A\00", align 1
@.str.15.159 = private unnamed_addr constant [17 x i8] c"stat(%s) failed\0A\00", align 1
@.str.16.160 = private unnamed_addr constant [8 x i8] c"WARNING\00", align 1
@.str.17.161 = private unnamed_addr constant [24 x i8] c"Using %s instead of %s\0A\00", align 1
@.str.18.162 = private unnamed_addr constant [29 x i8] c"fread() failed; retrying...\0A\00", align 1
@.str.19.163 = private unnamed_addr constant [30 x i8] c"stat(%s) failed; retrying...\0A\00", align 1
@.str.20.164 = private unnamed_addr constant [50 x i8] c"FATAL_ERROR: \22%s\22, line %d: fopen(%s,%s) failed; \00", align 1
@.str.21.165 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.166 = private unnamed_addr constant [14 x i8] c"src/fillpen.c\00", align 1
@.str.1.167 = private unnamed_addr constant [6 x i8] c"<sil>\00", align 1
@.str.2.168 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.3.169 = private unnamed_addr constant [46 x i8] c"%s not a filler word in the given dictionary\0A\00", align 1
@.str.4.170 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.5.171 = private unnamed_addr constant [33 x i8] c"Reading filler penalty file: %s\0A\00", align 1
@.str.6.172 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.7.173 = private unnamed_addr constant [20 x i8] c"fopen(%s,r) failed\0A\00", align 1
@.str.8.174 = private unnamed_addr constant [7 x i8] c"%s %lf\00", align 1
@.str.9.175 = private unnamed_addr constant [20 x i8] c"Bad input line: %s\0A\00", align 1
@.str.178 = private unnamed_addr constant [8 x i8] c"-vqeval\00", align 1
@VQ_EVAL = internal unnamed_addr global i32 3, align 4
@.str.1.179 = private unnamed_addr constant [12 x i8] c"src/subvq.c\00", align 1
@.str.2.180 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.3.181 = private unnamed_addr constant [57 x i8] c"Loading Mixture Gaussian sub-VQ file '%s' (vq_eval: %d)\0A\00", align 1
@.str.4.182 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.5.183 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.6.184 = private unnamed_addr constant [31 x i8] c"Failed to read VQParam header\0A\00", align 1
@.str.7.185 = private unnamed_addr constant [23 x i8] c"VQParam %d %d -> %d %d\00", align 1
@.str.8.186 = private unnamed_addr constant [60 x i8] c"Model size conflict: %d x %d (SubVQ) vs %d x %d (Original)\0A\00", align 1
@.str.9.187 = private unnamed_addr constant [31 x i8] c"Using %d subvectors out of %d\0A\00", align 1
@.str.10.188 = private unnamed_addr constant [8 x i8] c"WARNING\00", align 1
@.str.11.189 = private unnamed_addr constant [57 x i8] c"#Subvectors specified(%d) > available(%d); using latter\0A\00", align 1
@.str.12.190 = private unnamed_addr constant [25 x i8] c"Subvector %d length %d%n\00", align 1
@.str.13.191 = private unnamed_addr constant [36 x i8] c"Error reading length(subvector %d)\0A\00", align 1
@.str.14.192 = private unnamed_addr constant [5 x i8] c"%d%n\00", align 1
@.str.15.193 = private unnamed_addr constant [41 x i8] c"Error reading subvector(%d).featdim(%d)\0A\00", align 1
@.str.16.194 = private unnamed_addr constant [48 x i8] c"Original #codebooks(states)/codewords: %d x %d\0A\00", align 1
@.str.17.195 = private unnamed_addr constant [28 x i8] c"Subvectors: %d, VQsize: %d\0A\00", align 1
@.str.18.196 = private unnamed_addr constant [25 x i8] c"SV %d feature dims(%d): \00", align 1
@.str.19.197 = private unnamed_addr constant [5 x i8] c" %2d\00", align 1
@.str.21.200 = private unnamed_addr constant [20 x i8] c"Reading subvq %d%s\0A\00", align 1
@.str.22.198 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.23.199 = private unnamed_addr constant [12 x i8] c" (not used)\00", align 1
@.str.24.201 = private unnamed_addr constant [18 x i8] c"Reading codebook\0A\00", align 1
@.str.25.202 = private unnamed_addr constant [12 x i8] c"Codebook %d\00", align 1
@.str.26.203 = private unnamed_addr constant [31 x i8] c"Error reading codebook header\0A\00", align 1
@.str.27.204 = private unnamed_addr constant [23 x i8] c"Error reading row(%d)\0A\00", align 1
@.str.28.205 = private unnamed_addr constant [8 x i8] c"%f %f%n\00", align 1
@.str.29.206 = private unnamed_addr constant [31 x i8] c"Error reading row(%d) col(%d)\0A\00", align 1
@.str.30.207 = private unnamed_addr constant [13 x i8] c"Reading map\0A\00", align 1
@.str.31.208 = private unnamed_addr constant [7 x i8] c"Map %d\00", align 1
@.str.32.209 = private unnamed_addr constant [26 x i8] c"Error reading map header\0A\00", align 1
@.str.33.210 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.35.211 = private unnamed_addr constant [27 x i8] c"Error reading 'End' token\0A\00", align 1
@.str.36.215 = private unnamed_addr constant [36 x i8] c"Warning!! Score is S3_LOGPROB_ZERO\0A\00", align 1
@.str.37.214 = private unnamed_addr constant [46 x i8] c"Precomputing Mahalanobis distance invariants\0A\00", align 1
@.str.38.212 = private unnamed_addr constant [33 x i8] c"Partially undefined map[%d][%d]\0A\00", align 1
@.str.39.213 = private unnamed_addr constant [69 x i8] c"Mixture %d: #Valid components conflict: %d (SubVQ) vs %d (Original)\0A\00", align 1
@.str.216 = private unnamed_addr constant [12 x i8] c"%d ciphone\0A\00", align 1
@.str.1.217 = private unnamed_addr constant [10 x i8] c"%d phone\0A\00", align 1
@.str.2.218 = private unnamed_addr constant [14 x i8] c"%d emitstate\0A\00", align 1
@.str.3.219 = private unnamed_addr constant [10 x i8] c"%d cisen\0A\00", align 1
@.str.4.220 = private unnamed_addr constant [8 x i8] c"%d sen\0A\00", align 1
@.str.5.221 = private unnamed_addr constant [9 x i8] c"%d tmat\0A\00", align 1
@.str.6.222 = private unnamed_addr constant [8 x i8] c"%3d %5d\00", align 1
@.str.7.223 = private unnamed_addr constant [5 x i8] c" %5d\00", align 1
@.str.9.224 = private unnamed_addr constant [5 x i8] c" %3d\00", align 1
@.str.10.225 = private unnamed_addr constant [5 x i8] c"\09%s\0A\00", align 1
@.str.11.226 = private unnamed_addr constant [6 x i8] c"besiu\00", align 1
@.str.13.227 = private unnamed_addr constant [14 x i8] c"(%s,%s,%s,%c)\00", align 1
@.str.14.228 = private unnamed_addr constant [11 x i8] c"src/mdef.c\00", align 1
@.str.15.229 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.16.230 = private unnamed_addr constant [14 x i8] c"No mdef-file\0A\00", align 1
@.str.17.231 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.18.232 = private unnamed_addr constant [30 x i8] c"Reading model definition: %s\0A\00", align 1
@.str.19.233 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.20.234 = private unnamed_addr constant [13 x i8] c"SYSTEM_ERROR\00", align 1
@.str.21.235 = private unnamed_addr constant [20 x i8] c"fopen(%s,r) failed\0A\00", align 1
@.str.22.236 = private unnamed_addr constant [16 x i8] c"Empty file: %s\0A\00", align 1
@.str.23.237 = private unnamed_addr constant [4 x i8] c"0.3\00", align 1
@.str.24.238 = private unnamed_addr constant [41 x i8] c"Version error: Expecing %s, but read %s\0A\00", align 1
@.str.25.239 = private unnamed_addr constant [19 x i8] c"Incomplete header\0A\00", align 1
@.str.26.240 = private unnamed_addr constant [6 x i8] c"%d %s\00", align 1
@.str.27.241 = private unnamed_addr constant [21 x i8] c"Error in header: %s\0A\00", align 1
@.str.28.242 = private unnamed_addr constant [7 x i8] c"n_base\00", align 1
@.str.29.243 = private unnamed_addr constant [6 x i8] c"n_tri\00", align 1
@.str.30.244 = private unnamed_addr constant [12 x i8] c"n_state_map\00", align 1
@.str.31.245 = private unnamed_addr constant [16 x i8] c"n_tied_ci_state\00", align 1
@.str.32.246 = private unnamed_addr constant [13 x i8] c"n_tied_state\00", align 1
@.str.33.247 = private unnamed_addr constant [12 x i8] c"n_tied_tmat\00", align 1
@.str.34.248 = private unnamed_addr constant [25 x i8] c"Unknown header line: %s\0A\00", align 1
@.str.35.249 = private unnamed_addr constant [21 x i8] c"%s: Error in header\0A\00", align 1
@.str.36.250 = private unnamed_addr constant [40 x i8] c"%s: #CI phones (%d) exceeds limit (%d)\0A\00", align 1
@.str.37.251 = private unnamed_addr constant [37 x i8] c"%s: #Phones (%d) exceeds limit (%d)\0A\00", align 1
@.str.38.252 = private unnamed_addr constant [38 x i8] c"%s: #senones (%d) exceeds limit (%d)\0A\00", align 1
@.str.39.253 = private unnamed_addr constant [36 x i8] c"%s: #tmats (%d) exceeds limit (%d)\0A\00", align 1
@.str.40.254 = private unnamed_addr constant [56 x i8] c"Header error: n_state_map not a multiple of n_ci*n_tri\0A\00", align 1
@.str.41.255 = private unnamed_addr constant [34 x i8] c"Premature EOF reading CIphone %d\0A\00", align 1
@.str.42.256 = private unnamed_addr constant [4 x i8] c"SIL\00", align 1
@.str.43.257 = private unnamed_addr constant [32 x i8] c"Premature EOF reading phone %d\0A\00", align 1
@.str.44.258 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.45.259 = private unnamed_addr constant [45 x i8] c"Non-empty file beyond expected #phones (%d)\0A\00", align 1
@.str.46.260 = private unnamed_addr constant [57 x i8] c"#CI-senones(%d) != #CI-phone(%d) x #emitting-states(%d)\0A\00", align 1
@.str.47.261 = private unnamed_addr constant [57 x i8] c"Unreferenced senone %d; cannot determine parent CIphone\0A\00", align 1
@.str.48.262 = private unnamed_addr constant [77 x i8] c"%d CI-phone, %d CD-phone, %d emitstate/phone, %d CI-sen, %d Sen, %d Sen-Seq\0A\00", align 1
@.str.49.263 = private unnamed_addr constant [5 x i8] c"%s%n\00", align 1
@.str.50.264 = private unnamed_addr constant [29 x i8] c"Missing base phone name: %s\0A\00", align 1
@.str.51.284 = private unnamed_addr constant [26 x i8] c"Duplicate base phone: %s\0A\00", align 1
@.str.53.285 = private unnamed_addr constant [37 x i8] c"Bad context info for base phone: %s\0A\00", align 1
@.str.54.286 = private unnamed_addr constant [35 x i8] c"Missing filler atribute field: %s\0A\00", align 1
@.str.55.273 = private unnamed_addr constant [7 x i8] c"filler\00", align 1
@.str.57.274 = private unnamed_addr constant [32 x i8] c"Bad filler attribute field: %s\0A\00", align 1
@.str.58.287 = private unnamed_addr constant [43 x i8] c"hash_enter(%s) failed; duplicate CIphone?\0A\00", align 1
@.str.59.283 = private unnamed_addr constant [24 x i8] c"Duplicate triphone: %s\0A\00", align 1
@.str.60.275 = private unnamed_addr constant [5 x i8] c"%d%n\00", align 1
@.str.61.276 = private unnamed_addr constant [41 x i8] c"Missing or bad transition matrix id: %s\0A\00", align 1
@.str.62.277 = private unnamed_addr constant [39 x i8] c"tmat-id(%d) > #tmat in header(%d): %s\0A\00", align 1
@.str.63.278 = private unnamed_addr constant [46 x i8] c"Missing or bad state[%d]->senone mapping: %s\0A\00", align 1
@.str.64.279 = private unnamed_addr constant [40 x i8] c"CI-senone-id(%d) > #CI-senones(%d): %s\0A\00", align 1
@.str.65.280 = private unnamed_addr constant [34 x i8] c"Senone-id(%d) > #senones(%d): %s\0A\00", align 1
@.str.67.281 = private unnamed_addr constant [37 x i8] c"Missing non-emitting state spec: %s\0A\00", align 1
@.str.68.282 = private unnamed_addr constant [47 x i8] c"Non-empty beyond non-emitting final state: %s\0A\00", align 1
@.str.69.265 = private unnamed_addr constant [24 x i8] c"Unknown base phone: %s\0A\00", align 1
@.str.70.266 = private unnamed_addr constant [26 x i8] c"Missing left context: %s\0A\00", align 1
@.str.71.267 = private unnamed_addr constant [26 x i8] c"Unknown left context: %s\0A\00", align 1
@.str.72.268 = private unnamed_addr constant [27 x i8] c"Missing right context: %s\0A\00", align 1
@.str.73.269 = private unnamed_addr constant [28 x i8] c"Unknown right  context: %s\0A\00", align 1
@.str.74.270 = private unnamed_addr constant [39 x i8] c"Missing or bad word-position spec: %s\0A\00", align 1
@.str.75.271 = private unnamed_addr constant [28 x i8] c"Bad word-position spec: %s\0A\00", align 1
@.str.76.272 = private unnamed_addr constant [36 x i8] c"Missing filler attribute field: %s\0A\00", align 1
@.str.290 = private unnamed_addr constant [13 x i8] c"src/kbcore.c\00", align 1
@.str.1.291 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.2.292 = private unnamed_addr constant [27 x i8] c"Initializing core models:\0A\00", align 1
@.str.3.293 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.4.294 = private unnamed_addr constant [35 x i8] c"Please specified the feature type\0A\00", align 1
@.str.5.295 = private unnamed_addr constant [22 x i8] c"feat_init(%s) failed\0A\00", align 1
@.str.6.296 = private unnamed_addr constant [7 x i8] c".cont.\00", align 1
@.str.7.297 = private unnamed_addr constant [60 x i8] c"#Feature streams(%d) in the feature for continuous HMM!= 1\0A\00", align 1
@.str.8.298 = private unnamed_addr constant [7 x i8] c".semi.\00", align 1
@.str.9.299 = private unnamed_addr constant [65 x i8] c"#Feature streams(%d) in the feature for semi-continuous HMM!= 4\0A\00", align 1
@.str.10.300 = private unnamed_addr constant [42 x i8] c"Feature should be either .semi. or .cont.\00", align 1
@.str.11.301 = private unnamed_addr constant [22 x i8] c"mdef_init(%s) failed\0A\00", align 1
@.str.12.303 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.13.302 = private unnamed_addr constant [70 x i8] c"Compound word separator(%s) must be empty or single character string\0A\00", align 1
@.str.14.304 = private unnamed_addr constant [28 x i8] c"dict_init(%s,%s,%s) failed\0A\00", align 1
@.str.15.305 = private unnamed_addr constant [50 x i8] c"Please only specify either -lmfile or -lmctlfile\0A\00", align 1
@.str.16.306 = private unnamed_addr constant [52 x i8] c"Please specify either one of -lmfile or -lmctlfile\0A\00", align 1
@.str.17.307 = private unnamed_addr constant [32 x i8] c"lm_read(%s, %e, %e, %e) failed\0A\00", align 1
@.str.18.308 = private unnamed_addr constant [21 x i8] c"Reading LM ctl file\0A\00", align 1
@.str.19.309 = private unnamed_addr constant [22 x i8] c"kb->lmset[0].name %s\0A\00", align 1
@.str.20.310 = private unnamed_addr constant [34 x i8] c"lm_read_ctl(%s,%e,%e,%e) failed\0A:\00", align 1
@.str.21.311 = private unnamed_addr constant [55 x i8] c"No dictionary for associating filler penalty file(%s)\0A\00", align 1
@.str.22.312 = private unnamed_addr constant [25 x i8] c"fillpen_init(%s) failed\0A\00", align 1
@.str.23.313 = private unnamed_addr constant [32 x i8] c"Dict/LM word-id mapping failed\0A\00", align 1
@.str.24.314 = private unnamed_addr constant [58 x i8] c"Dict/LM word-id mapping failed for LM index %d, named %s\0A\00", align 1
@.str.25.315 = private unnamed_addr constant [59 x i8] c"Varfile or mixwfile not specified along with meanfile(%s)\0A\00", align 1
@.str.26.316 = private unnamed_addr constant [32 x i8] c"gauden_init(%s, %s, %e) failed\0A\00", align 1
@.str.27.317 = private unnamed_addr constant [32 x i8] c"subvq_init (%s, %e, -1) failed\0A\00", align 1
@.str.28.318 = private unnamed_addr constant [20 x i8] c"gs_read(%s) failed\0A\00", align 1
@.str.29.319 = private unnamed_addr constant [41 x i8] c"After reading the number of senones: %d\0A\00", align 1
@.str.30.320 = private unnamed_addr constant [27 x i8] c"tmat_init (%s, %e) failed\0A\00", align 1
@.str.31.321 = private unnamed_addr constant [31 x i8] c"Verifying models consistency:\0A\00", align 1
@.str.32.322 = private unnamed_addr constant [45 x i8] c"Feature streamlen(%d) != mgau streamlen(%d)\0A\00", align 1
@.str.33.323 = private unnamed_addr constant [40 x i8] c"Mdef #senones(%d) != mgau #senones(%d)\0A\00", align 1
@.str.34.324 = private unnamed_addr constant [32 x i8] c"Mdef #tmat(%d) != tmatfile(%d)\0A\00", align 1
@.str.35.325 = private unnamed_addr constant [38 x i8] c"Mdef #states(%d) != tmat #states(%d)\0A\00", align 1
@.str.328 = private unnamed_addr constant [9 x i8] c"src/lm.c\00", align 1
@.str.1.329 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.2.330 = private unnamed_addr constant [61 x i8] c"Warning, lm_delete is currently empty, no memory is deleted\0A\00", align 1
@.str.3.331 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.4.332 = private unnamed_addr constant [9 x i8] c"lw = %e\0A\00", align 1
@.str.5.333 = private unnamed_addr constant [10 x i8] c"wip = %e\0A\00", align 1
@.str.6.336 = private unnamed_addr constant [30 x i8] c"Reading LM control file '%s'\0A\00", align 1
@.str.7.337 = private unnamed_addr constant [12 x i8] c"-lminmemory\00", align 1
@LM_IN_MEMORY = internal unnamed_addr global i1 false, align 4
@.str.8.338 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.9.339 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.12.340 = private unnamed_addr constant [20 x i8] c"Unexpected EOF(%s)\0A\00", align 1
@.str.13.341 = private unnamed_addr constant [44 x i8] c"Number of LM class specified %d in file %s\0A\00", align 1
@.str.14.342 = private unnamed_addr constant [38 x i8] c"LMname missing after LMFileName '%s'\0A\00", align 1
@.str.15.343 = private unnamed_addr constant [40 x i8] c"Too many LM classes specified for '%s'\0A\00", align 1
@.str.16.344 = private unnamed_addr constant [25 x i8] c"LM class '%s' not found\0A\00", align 1
@.str.17.345 = private unnamed_addr constant [43 x i8] c"No. of LM set allocated %d, no. of LM %d \0A\00", align 1
@.str.18.380 = private unnamed_addr constant [12 x i8] c"No LM file\0A\00", align 1
@.str.19.381 = private unnamed_addr constant [9 x i8] c"uw = %e\0A\00", align 1
@.str.20.382 = private unnamed_addr constant [44 x i8] c"LM read('%s', lw= %.2f, wip= %d, uw= %.2f)\0A\00", align 1
@.str.21.383 = private unnamed_addr constant [48 x i8] c"%d tg frees, %d in mem; %d bg frees, %d in mem\0A\00", align 1
@.str.22.384 = private unnamed_addr constant [63 x i8] c"%9d tg(), %9d tgcache, %8d bo; %5d fills, %8d in mem (%.1f%%)\0A\00", align 1
@.str.23.385 = private unnamed_addr constant [50 x i8] c"%8d bg(), %8d bo; %5d fills, %8d in mem (%.1f%%)\0A\00", align 1
@.str.24.386 = private unnamed_addr constant [34 x i8] c"Bad argument (%d) to lm_ug_score\0A\00", align 1
@.str.25.389 = private unnamed_addr constant [35 x i8] c"Bad w1 argument (%d) to lm_bglist\0A\00", align 1
@.str.26.391 = private unnamed_addr constant [38 x i8] c"Bad lw2 argument (%d) to lm_bg_score\0A\00", align 1
@.str.27.392 = private unnamed_addr constant [36 x i8] c"Bad lw1 argument (%d) to lm_tglist\0A\00", align 1
@.str.28.393 = private unnamed_addr constant [36 x i8] c"Bad lw2 argument (%d) to lm_tglist\0A\00", align 1
@.str.29.395 = private unnamed_addr constant [38 x i8] c"Bad lw1 argument (%d) to lm_tg_score\0A\00", align 1
@.str.30.396 = private unnamed_addr constant [38 x i8] c"Bad lw2 argument (%d) to lm_tg_score\0A\00", align 1
@.str.31.397 = private unnamed_addr constant [38 x i8] c"Bad lw3 argument (%d) to lm_tg_score\0A\00", align 1
@.str.32.346 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.33.347 = private unnamed_addr constant [13 x i8] c"SYSTEM_ERROR\00", align 1
@.str.34.348 = private unnamed_addr constant [21 x i8] c"fopen(%s,rb) failed\0A\00", align 1
@.str.35.349 = private unnamed_addr constant [18 x i8] c"fread(%s) failed\0A\00", align 1
@.str.36.350 = private unnamed_addr constant [50 x i8] c"Bad magic number: %d(%08x), not an LM dumpfile??\0A\00", align 1
@.str.37.352 = private unnamed_addr constant [12 x i8] c"Bad header\0A\00", align 1
@.str.38.353 = private unnamed_addr constant [32 x i8] c"Bad original filename size: %d\0A\00", align 1
@.str.39.354 = private unnamed_addr constant [37 x i8] c"log2(bg_seg_sz) outside range 1..15\0A\00", align 1
@.str.40.355 = private unnamed_addr constant [30 x i8] c"Bad #ug: %d (must be >0, <%d\0A\00", align 1
@.str.41.356 = private unnamed_addr constant [18 x i8] c"Bad #bigrams: %d\0A\00", align 1
@.str.42.357 = private unnamed_addr constant [19 x i8] c"Bad #trigrams: %d\0A\00", align 1
@.str.43.358 = private unnamed_addr constant [8 x i8] c"%8d ug\0A\00", align 1
@.str.44.359 = private unnamed_addr constant [30 x i8] c"Read %8d bigrams [in memory]\0A\00", align 1
@.str.45.362 = private unnamed_addr constant [31 x i8] c"Read %8d trigrams [in memory]\0A\00", align 1
@.str.46.360 = private unnamed_addr constant [23 x i8] c"%8d bigrams [on disk]\0A\00", align 1
@.str.47.361 = private unnamed_addr constant [24 x i8] c"%8d trigrams [on disk]\0A\00", align 1
@.str.48.363 = private unnamed_addr constant [32 x i8] c"Bad bigram prob table size: %d\0A\00", align 1
@.str.49.364 = private unnamed_addr constant [25 x i8] c"%8d bigram prob entries\0A\00", align 1
@.str.50.365 = private unnamed_addr constant [33 x i8] c"Bad trigram bowt table size: %d\0A\00", align 1
@.str.51.366 = private unnamed_addr constant [26 x i8] c"%8d trigram bowt entries\0A\00", align 1
@.str.52.367 = private unnamed_addr constant [26 x i8] c"%8d trigram prob entries\0A\00", align 1
@.str.53.368 = private unnamed_addr constant [32 x i8] c"Bad trigram seg table size: %d\0A\00", align 1
@.str.54.369 = private unnamed_addr constant [43 x i8] c"%8d trigram segtable entries (%d segsize)\0A\00", align 1
@.str.55.370 = private unnamed_addr constant [26 x i8] c"Bad wordstrings size: %d\0A\00", align 1
@.str.56.371 = private unnamed_addr constant [16 x i8] c"Bad #words: %d\0A\00", align 1
@.str.57.372 = private unnamed_addr constant [4 x i8] c"<s>\00", align 1
@.str.58.373 = private unnamed_addr constant [5 x i8] c"</s>\00", align 1
@.str.59.374 = private unnamed_addr constant [18 x i8] c"%8d word strings\0A\00", align 1
@.str.60.351 = private unnamed_addr constant [17 x i8] c"Darpa Trigram LM\00", align 1
@.str.61.377 = private unnamed_addr constant [14 x i8] c"fread failed\0A\00", align 1
@.str.62.375 = private unnamed_addr constant [29 x i8] c"LM->inclass_ugscore size %d\0A\00", align 1
@.str.63.376 = private unnamed_addr constant [25 x i8] c"Number of class used %d\0A\00", align 1
@.str.64.390 = private unnamed_addr constant [14 x i8] c"fseek failed\0A\00", align 1
@.str.65.394 = private unnamed_addr constant [28 x i8] c"fread(tg, %d at %d) failed\0A\00", align 1
@.str.400 = private unnamed_addr constant [12 x i8] c"src/glist.c\00", align 1
@.str.405 = private unnamed_addr constant [15 x i8] c"src/dict2pid.c\00", align 1
@.str.1.406 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.2.407 = private unnamed_addr constant [36 x i8] c"Building PID tables for dictionary\0A\00", align 1
@.str.3.408 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.4.409 = private unnamed_addr constant [30 x i8] c"Pronunciation-length(%s)= %d\0A\00", align 1
@.str.5.410 = private unnamed_addr constant [40 x i8] c"%d composite states; %d composite sseq\0A\00", align 1
@.str.6.413 = private unnamed_addr constant [52 x i8] c"# INTERNAL (wd comssid ssid ssid ... ssid comssid)\0A\00", align 1
@.str.7.414 = private unnamed_addr constant [6 x i8] c"%30s \00", align 1
@.str.8.415 = private unnamed_addr constant [5 x i8] c" %5d\00", align 1
@.str.10.416 = private unnamed_addr constant [3 x i8] c"#\0A\00", align 1
@.str.11.417 = private unnamed_addr constant [25 x i8] c"# LDIPH_LC (b r l ssid)\0A\00", align 1
@.str.12.418 = private unnamed_addr constant [17 x i8] c"%6s %6s %6s %5d\0A\00", align 1
@.str.13.419 = private unnamed_addr constant [27 x i8] c"# SINGLE_LC (b l comssid)\0A\00", align 1
@.str.14.420 = private unnamed_addr constant [13 x i8] c"%6s %6s %5d\0A\00", align 1
@.str.15.421 = private unnamed_addr constant [29 x i8] c"# SSEQ %d (senid senid ...)\0A\00", align 1
@.str.16.422 = private unnamed_addr constant [5 x i8] c"%5d \00", align 1
@.str.17.423 = private unnamed_addr constant [38 x i8] c"# COMSSEQ %d (comstate comstate ...)\0A\00", align 1
@.str.18.424 = private unnamed_addr constant [33 x i8] c"# COMSTATE %d (senid senid ...)\0A\00", align 1
@.str.19.425 = private unnamed_addr constant [7 x i8] c"# END\0A\00", align 1
@.str.20.411 = private unnamed_addr constant [29 x i8] c"Panic: length(ssidlist)= %d\0A\00", align 1
@.str.21.412 = private unnamed_addr constant [57 x i8] c"#Composite sseq limit(%d) reached; increase MAX_S3SENID\0A\00", align 1
@.str.428 = private unnamed_addr constant [16 x i8] c"src/ckd_alloc.c\00", align 1
@.str.1.429 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.2.430 = private unnamed_addr constant [34 x i8] c"calloc(%d,%d) failed from %s(%d)\0A\00", align 1
@.str.3.433 = private unnamed_addr constant [31 x i8] c"malloc(%d) failed from %s(%d)\0A\00", align 1
@.str.4.436 = private unnamed_addr constant [32 x i8] c"realloc(%d) failed from %s(%d)\0A\00", align 1
@head = internal unnamed_addr global %struct.mylist_s* null, align 8
@.str.5.451 = private unnamed_addr constant [52 x i8] c"List item size (%d) not multiple of sizeof(void *)\0A\00", align 1
@.str.6.454 = private unnamed_addr constant [48 x i8] c"Unknown list item size: %d; called from %s(%d)\0A\00", align 1
@.str.457 = private unnamed_addr constant [14 x i8] c"src/vithist.c\00", align 1
@.str.1.458 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.2.459 = private unnamed_addr constant [37 x i8] c"Initializing Viterbi-history module\0A\00", align 1
@.str.3.460 = private unnamed_addr constant [48 x i8] c"Allocation for viterbi history, finall size %d\0A\00", align 1
@.str.4.461 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.5.463 = private unnamed_addr constant [82 x i8] c"Hmm->out.history equals to -1 with score %d, some active phone was not computed?\0A\00", align 1
@.str.6.464 = private unnamed_addr constant [32 x i8] c"VITHIST  frame %d  #entries %d\0A\00", align 1
@.str.7.465 = private unnamed_addr constant [34 x i8] c"VITHIST  #frames %d  #entries %d\0A\00", align 1
@.str.8.466 = private unnamed_addr constant [51 x i8] c"\09%7s %5s %5s %11s %9s %8s %7s %4s Word (LM-state)\0A\00", align 1
@.str.9.467 = private unnamed_addr constant [8 x i8] c"Seq/Val\00", align 1
@.str.10.468 = private unnamed_addr constant [5 x i8] c"SFrm\00", align 1
@.str.11.469 = private unnamed_addr constant [5 x i8] c"EFrm\00", align 1
@.str.12.470 = private unnamed_addr constant [8 x i8] c"PathScr\00", align 1
@.str.13.471 = private unnamed_addr constant [8 x i8] c"SegAScr\00", align 1
@.str.14.472 = private unnamed_addr constant [8 x i8] c"SegLScr\00", align 1
@.str.15.473 = private unnamed_addr constant [5 x i8] c"Pred\00", align 1
@.str.16.474 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.17.475 = private unnamed_addr constant [22 x i8] c"%5d BS: %11d BV: %8d\0A\00", align 1
@.str.18.476 = private unnamed_addr constant [39 x i8] c"\09%c%6d %5d %5d %11d %9d %8d %7d %4d %s\00", align 1
@.str.19.477 = private unnamed_addr constant [5 x i8] c" (%s\00", align 1
@.str.20.478 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.21.479 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.23.480 = private unnamed_addr constant [13 x i8] c"END_VITHIST\0A\00", align 1
@.str.24.481 = private unnamed_addr constant [64 x i8] c"Nodes %d (NODEID WORD STARTFRAME FIRST-ENDFRAME LAST-ENDFRAME)\0A\00", align 1
@.str.25.482 = private unnamed_addr constant [16 x i8] c"%d %s %d %d %d\0A\00", align 1
@.str.26.483 = private unnamed_addr constant [3 x i8] c"#\0A\00", align 1
@.str.27.484 = private unnamed_addr constant [21 x i8] c"Initial %d\0AFinal %d\0A\00", align 1
@.str.28.485 = private unnamed_addr constant [40 x i8] c"BestSegAscr 0 (NODEID ENDFRAME ASCORE)\0A\00", align 1
@.str.29.486 = private unnamed_addr constant [38 x i8] c"Edges (FROM-NODEID TO-NODEID ASCORE)\0A\00", align 1
@.str.30.487 = private unnamed_addr constant [37 x i8] c"Edges (FROM-NODEID ENDFRAME ASCORE)\0A\00", align 1
@.str.31.488 = private unnamed_addr constant [10 x i8] c"%d %d %d\0A\00", align 1
@.str.32.489 = private unnamed_addr constant [5 x i8] c"End\0A\00", align 1
@.str.33.462 = private unnamed_addr constant [59 x i8] c"Viterbi history array exhausted; increase VITHIST_MAXBLKS\0A\00", align 1
@.str.490 = private unnamed_addr constant [11 x i8] c"src/feat.c\00", align 1
@.str.1.491 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.2.492 = private unnamed_addr constant [36 x i8] c"Reading feature file: '%s'[%d..%d]\0A\00", align 1
@.str.3.493 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.4.494 = private unnamed_addr constant [40 x i8] c"%s: End frame (%d) <= Start frame (%d)\0A\00", align 1
@.str.5.495 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.6.496 = private unnamed_addr constant [21 x i8] c"fopen(%s,rb) failed\0A\00", align 1
@.str.7.497 = private unnamed_addr constant [24 x i8] c"bio_readhdr(%s) failed\0A\00", align 1
@.str.8.498 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.9.499 = private unnamed_addr constant [4 x i8] c"1.0\00", align 1
@.str.10.500 = private unnamed_addr constant [8 x i8] c"WARNING\00", align 1
@.str.11.501 = private unnamed_addr constant [40 x i8] c"%s: Version mismatch: %s, expecting %s\0A\00", align 1
@.str.13.502 = private unnamed_addr constant [27 x i8] c"%s: fread(#frames) failed\0A\00", align 1
@.str.14.503 = private unnamed_addr constant [37 x i8] c"%s: Missing or bad #feature streams\0A\00", align 1
@.str.15.504 = private unnamed_addr constant [40 x i8] c"%s: Missing or bad feature stream size\0A\00", align 1
@.str.16.505 = private unnamed_addr constant [44 x i8] c"%s: Start frame (%d) beyond file size (%d)\0A\00", align 1
@.str.17.506 = private unnamed_addr constant [57 x i8] c"%s: Feature buffer size(%d frames) < actual #frames(%d)\0A\00", align 1
@.str.18.507 = private unnamed_addr constant [40 x i8] c"%s: fread(%dx%d) (feature data) failed\0A\00", align 1
@.str.19.508 = private unnamed_addr constant [28 x i8] c"Writing feature file: '%s'\0A\00", align 1
@.str.20.509 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.21.510 = private unnamed_addr constant [21 x i8] c"fopen(%s,wb) failed\0A\00", align 1
@.str.22.511 = private unnamed_addr constant [39 x i8] c"%s: fwrite(%dx%d feature data) failed\0A\00", align 1
@.str.23.512 = private unnamed_addr constant [32 x i8] c"Reading mfc file: '%s'[%d..%d]\0A\00", align 1
@.str.24.513 = private unnamed_addr constant [29 x i8] c"stat_retry/fopen(%s) failed\0A\00", align 1
@.str.25.514 = private unnamed_addr constant [27 x i8] c"%s: fread(#floats) failed\0A\00", align 1
@.str.26.515 = private unnamed_addr constant [53 x i8] c"%s: Header size field: %d(%08x); filesize: %d(%08x)\0A\00", align 1
@.str.27.516 = private unnamed_addr constant [38 x i8] c"%s: Header size field (#floats) = %d\0A\00", align 1
@.str.28.517 = private unnamed_addr constant [43 x i8] c"Header size field: %d; not multiple of %d\0A\00", align 1
@.str.29.518 = private unnamed_addr constant [53 x i8] c"%s: MFC buffer size(%d frames) < actual #frames(%d)\0A\00", align 1
@.str.30.519 = private unnamed_addr constant [36 x i8] c"%s: fread(%dx%d) (MFC data) failed\0A\00", align 1
@.str.31.520 = private unnamed_addr constant [34 x i8] c"Sum(feature stream lengths) = %d\0A\00", align 1
@.str.32.525 = private unnamed_addr constant [77 x i8] c"Initializing feature stream to type: '%s', CMN='%s', VARNORM='%s', AGC='%s'\0A\00", align 1
@.str.33.526 = private unnamed_addr constant [6 x i8] c"s2_4x\00", align 1
@.str.34.527 = private unnamed_addr constant [8 x i8] c"s3_1x39\00", align 1
@.str.35.528 = private unnamed_addr constant [10 x i8] c"1s_c_d_dd\00", align 1
@.str.36.529 = private unnamed_addr constant [9 x i8] c"cep_dcep\00", align 1
@.str.37.530 = private unnamed_addr constant [5 x i8] c"%d%n\00", align 1
@.str.38.531 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.39.532 = private unnamed_addr constant [33 x i8] c"Bad feature type argument: '%s'\0A\00", align 1
@.str.40.533 = private unnamed_addr constant [4 x i8] c"cep\00", align 1
@.str.41.534 = private unnamed_addr constant [5 x i8] c"%s%n\00", align 1
@.str.42.535 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.43.536 = private unnamed_addr constant [27 x i8] c"Bad feature type argument\0A\00", align 1
@.str.44.537 = private unnamed_addr constant [8 x i8] c"current\00", align 1
@.str.45.538 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.46.539 = private unnamed_addr constant [27 x i8] c"Unsupported CMN type '%s'\0A\00", align 1
@.str.47.540 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.48.541 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.49.542 = private unnamed_addr constant [31 x i8] c"Unsupported VARNORM type '%s'\0A\00", align 1
@.str.50.543 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.51.544 = private unnamed_addr constant [27 x i8] c"Unsupported AGC type '%s'\0A\00", align 1
@.str.52.545 = private unnamed_addr constant [5 x i8] c"%8d:\00", align 1
@.str.53.546 = private unnamed_addr constant [6 x i8] c"\09%2d:\00", align 1
@.str.54.547 = private unnamed_addr constant [7 x i8] c" %8.4f\00", align 1
@.str.56.548 = private unnamed_addr constant [17 x i8] c"Bad cepsize: %d\0A\00", align 1
@.str.57.549 = private unnamed_addr constant [5 x i8] c".mfc\00", align 1
@.str.58.550 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.59.551 = private unnamed_addr constant [10 x i8] c"%s/%s.mfc\00", align 1
@.str.60.552 = private unnamed_addr constant [7 x i8] c"%s.mfc\00", align 1
@.str.61.553 = private unnamed_addr constant [63 x i8] c"%s: MFC file/segment too short to compute features: %d frames\0A\00", align 1
@.str.62.554 = private unnamed_addr constant [51 x i8] c"%s: Feature buffer size(%d frames) < required(%d)\0A\00", align 1
@.str.63.555 = private unnamed_addr constant [5 x i8] c"CMN\0A\00", align 1
@.str.64.556 = private unnamed_addr constant [5 x i8] c"AGC\0A\00", align 1
@feat_s2mfc2feat_block.cepbuf = internal unnamed_addr global float** null, align 8
@feat_s2mfc2feat_block.tmpcepbuf = internal unnamed_addr global float** null, align 8
@feat_s2mfc2feat_block.bufpos = internal unnamed_addr global i32 0, align 4
@feat_s2mfc2feat_block.curpos = internal unnamed_addr global i32 0, align 4
@.str.65.557 = private unnamed_addr constant [52 x i8] c"Unable to allocate cepbuf ckd_calloc_2d(%ld,%d,%d)\0A\00", align 1
@.str.66.558 = private unnamed_addr constant [43 x i8] c"Feature buffers initialized to %d vectors\0A\00", align 1
@.str.67.559 = private unnamed_addr constant [55 x i8] c"Unable to allocate tmpcepbuf ckd_calloc_2d(%ld,%d,%d)\0A\00", align 1
@.str.566 = private unnamed_addr constant [4 x i8] c"s3\0A\00", align 1
@.str.1.567 = private unnamed_addr constant [12 x i8] c"version %s\0A\00", align 1
@.str.2.568 = private unnamed_addr constant [8 x i8] c"endhdr\0A\00", align 1
@.str.3.571 = private unnamed_addr constant [10 x i8] c"src/bio.c\00", align 1
@.str.4.572 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.5.573 = private unnamed_addr constant [24 x i8] c"Premature EOF, line %d\0A\00", align 1
@.str.6.574 = private unnamed_addr constant [5 x i8] c"%s%n\00", align 1
@.str.7.575 = private unnamed_addr constant [30 x i8] c"Header format error, line %d\0A\00", align 1
@.str.8.576 = private unnamed_addr constant [7 x i8] c"endhdr\00", align 1
@.str.9.577 = private unnamed_addr constant [59 x i8] c"Max arg-value limit(%d) exceeded; increase BIO_HDRARG_MAX\0A\00", align 1
@.str.10.578 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.11.579 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.12.580 = private unnamed_addr constant [19 x i8] c"swap_check failed\0A\00", align 1
@.str.13.590 = private unnamed_addr constant [26 x i8] c"Unsupported elemsize: %d\0A\00", align 1
@.str.14.591 = private unnamed_addr constant [25 x i8] c"fread(arraysize) failed\0A\00", align 1
@.str.15.592 = private unnamed_addr constant [19 x i8] c"Bad arraysize: %d\0A\00", align 1
@.str.16.593 = private unnamed_addr constant [25 x i8] c"fread(arraydata) failed\0A\00", align 1
@.str.17.596 = private unnamed_addr constant [22 x i8] c"fread(chksum) failed\0A\00", align 1
@.str.18.597 = private unnamed_addr constant [51 x i8] c"Checksum error; file-checksum %08x, computed %08x\0A\00", align 1
@.str.19.584 = private unnamed_addr constant [15 x i8] c"*end_comment*\0A\00", align 1
@.str.20.585 = private unnamed_addr constant [19 x i8] c"Missing %s marker\0A\00", align 1
@.str.21.581 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.22.582 = private unnamed_addr constant [33 x i8] c"Cannot read BYTEORDER MAGIC NO.\0A\00", align 1
@.str.23.583 = private unnamed_addr constant [46 x i8] c"Bad BYTEORDER MAGIC NO: %08x, expecting %08x\0A\00", align 1
@.str.24.589 = private unnamed_addr constant [43 x i8] c"Unsupported elemsize for byteswapping: %d\0A\00", align 1
@.str.25.588 = private unnamed_addr constant [39 x i8] c"Unsupported elemsize for checksum: %d\0A\00", align 1
@.str.598 = private unnamed_addr constant [10 x i8] c"beams.dat\00", align 1
@.str.1.599 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.2.600 = private unnamed_addr constant [29 x i8] c"src/spec_main_live_pretend.c\00", align 1
@.str.3.601 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.4.602 = private unnamed_addr constant [22 x i8] c"Can't find beams.dat\0A\00", align 1
@.str.5.603 = private unnamed_addr constant [13 x i8] c"%lg%lg%lg%lg\00", align 1
@beams = global [1000 x [4 x double]] zeroinitializer, align 16
@.str.6.604 = private unnamed_addr constant [21 x i8] c"Not enough beams %d\0A\00", align 1
@.str.7.605 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.8.606 = private unnamed_addr constant [24 x i8] c"Processing %d beamsets\0A\00", align 1
@.str.9.607 = private unnamed_addr constant [44 x i8] c"\0AUSAGE: %s <ctlfile> <inrawdir> <argsfile>\0A\00", align 1
@.str.10.608 = private unnamed_addr constant [19 x i8] c"Unable to read %s\0A\00", align 1
@.str.11.609 = private unnamed_addr constant [5 x i8] c"%s%d\00", align 1
@.str.12.610 = private unnamed_addr constant [34 x i8] c"Filesize claimed to be %d for %s\0A\00", align 1
@.str.13.611 = private unnamed_addr constant [37 x i8] c"Can't allocate %d bytes for file %s\0A\00", align 1
@.str.14.612 = private unnamed_addr constant [37 x i8] c"Can't allocate %d bytes for uttid %s\00", align 1
@.str.15.613 = private unnamed_addr constant [10 x i8] c"%s/%s.raw\00", align 1
@.str.16.614 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.17.615 = private unnamed_addr constant [33 x i8] c"Only read %d, expected %d in %s\0A\00", align 1
@.str.18.616 = private unnamed_addr constant [50 x i8] c"%d samples in %s will be decoded in blocks of %d\0A\00", align 1
@.str.19.617 = private unnamed_addr constant [45 x i8] c"Beam= %d, PBeam= %d, WBeam= %d, SVQBeam= %d\0A\00", align 1
@.str.618 = private unnamed_addr constant [9 x i8] c"src/gs.c\00", align 1
@.str.1.619 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.2.620 = private unnamed_addr constant [14 x i8] c"fread failed\0A\00", align 1
@.str.3.621 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.4.622 = private unnamed_addr constant [35 x i8] c"Reading gaussian selector map: %s\0A\00", align 1
@.str.5.623 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.6.624 = private unnamed_addr constant [21 x i8] c"fopen(%s,rb) failed\0A\00", align 1
@.str.7.625 = private unnamed_addr constant [40 x i8] c"The number of mixtures of gaussian: %d\0A\00", align 1
@.str.8.626 = private unnamed_addr constant [35 x i8] c"The number of features stream: %d\0A\00", align 1
@.str.9.627 = private unnamed_addr constant [27 x i8] c"The number of density: %d\0A\00", align 1
@.str.10.628 = private unnamed_addr constant [29 x i8] c"The number of code word: %d\0A\00", align 1
@.str.11.629 = private unnamed_addr constant [24 x i8] c"The feature length: %d\0A\00", align 1
@.str.12.630 = private unnamed_addr constant [32 x i8] c"The number of byte to read: %d\0A\00", align 1
@.str.13.631 = private unnamed_addr constant [14 x i8] c"Code idx: %d\0A\00", align 1
@.str.14.632 = private unnamed_addr constant [4 x i8] c"%f \00", align 1
@.str.16.633 = private unnamed_addr constant [7 x i8] c"%d %d \00", align 1
@.str.17.634 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.18.637 = private unnamed_addr constant [20 x i8] c"Cannot allocate gs\0A\00", align 1
@.str.19.638 = private unnamed_addr constant [23 x i8] c"gs_read(%s,rb) failed\0A\00", align 1
@.str.20.639 = private unnamed_addr constant [65 x i8] c"No active gaussian found in senone %d, with num. component = %d\0A\00", align 1
@.str.640 = private unnamed_addr constant [5 x i8] c"CTR:\00", align 1
@.str.1.641 = private unnamed_addr constant [8 x i8] c"  %d %s\00", align 1
@.str.3.644 = private unnamed_addr constant [12 x i8] c"  %6.2fx %s\00", align 1
@.str.4.645 = private unnamed_addr constant [21 x i8] c"/tmp/__EnDiAn_TeSt__\00", align 1
@.str.5.646 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.6.647 = private unnamed_addr constant [14 x i8] c"src/profile.c\00", align 1
@.str.7.648 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.8.649 = private unnamed_addr constant [21 x i8] c"fopen(%s,wb) failed\0A\00", align 1
@.str.9.650 = private unnamed_addr constant [19 x i8] c"fwrite(%s) failed\0A\00", align 1
@.str.10.651 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.11.652 = private unnamed_addr constant [21 x i8] c"fopen(%s,rb) failed\0A\00", align 1
@.str.12.653 = private unnamed_addr constant [18 x i8] c"fread(%s) failed\0A\00", align 1
@parse_args_file.nliveargs = internal unnamed_addr global i32 0, align 4
@arg = internal global [77 x %struct.arg_t] [%struct.arg_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.661, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.662, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7.663, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8.664, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.665, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.10.666, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11.667, i32 0, i32 0), i32 8, i8* null, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12.668, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.669, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14.670, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.15.671, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16.672, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.673, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.18.674, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19.675, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14.670, i32 0, i32 0), i8* getelementptr inbounds ([159 x i8], [159 x i8]* @.str.20.676, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21.677, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.673, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.22.678, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23.679, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24.680, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.25.681, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26.682, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27.683, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.28.684, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29.685, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14.670, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.30.686, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31.687, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.673, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.32.688, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33.689, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27.683, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.34.690, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35.691, i32 0, i32 0), i32 8, i8* null, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.36.692, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37.693, i32 0, i32 0), i32 8, i8* null, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.38.694, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39.695, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40.696, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.41.697, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42.698, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43.699, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.44.700, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45.701, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.46.702, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.47.703, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.48.704, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.673, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.49.705, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50.706, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14.670, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.51.707, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52.708, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53.709, i32 0, i32 0), i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str.54.710, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55.711, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56.712, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.57.713, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58.714, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59.715, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.60.716, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61.717, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62.718, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.63.719, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64.720, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65.721, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.66.722, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67.723, i32 0, i32 0), i32 9, i8* null, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.68.724, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69.725, i32 0, i32 0), i32 9, i8* null, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.70.726, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71.727, i32 0, i32 0), i32 9, i8* null, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.72.728, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73.729, i32 0, i32 0), i32 9, i8* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.74.730, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75.731, i32 0, i32 0), i32 8, i8* null, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.76.732, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77.733, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.78.734, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.79.735, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80.736, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.78.734, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.81.737, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.82.738, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.83.739, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84.740, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85.741, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.86.742, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.87.743, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88.744, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.86.742, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.89.745, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90.746, i32 0, i32 0), i32 9, i8* null, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.91.747, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92.748, i32 0, i32 0), i32 9, i8* null, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.93.749, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94.750, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.95.751, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.96.752, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97.753, i32 0, i32 0), i32 9, i8* null, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.98.754, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.99.755, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.101, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.102, i32 0, i32 0), i32 8, i8* null, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.103, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i32 0, i32 0), i32 9, i8* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.105, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.106, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.95.751, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.107, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.108, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53.709, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.109, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53.709, i32 0, i32 0), i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.111, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.112, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.114, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.115, i32 0, i32 0), i32 8, i8* null, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.116, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.117, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.673, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.118.756, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.119, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.121, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.122, i32 0, i32 0), i32 8, i8* null, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.123, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.124, i32 0, i32 0), i32 8, i8* null, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.125, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.126, i32 0, i32 0), i32 8, i8* null, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.127, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.128, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14.670, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.129, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.130, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.132, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.133, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.673, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.134, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.135, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.673, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.136, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.139, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.140, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.142, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.673, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.144.757, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.147, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.148, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.150, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.151, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17.673, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.152, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i32 8, i8* null, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.154, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.155, i32 0, i32 0), i32 8, i8* null, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.156, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.157, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14.670, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.158, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.159, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.161, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.162, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.164, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.165, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.166.758, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.167, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.168, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.170, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.171, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.173, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.174, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.176, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.177, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178.759, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.179, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.180, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.181, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.182, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.183, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.184, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.186, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.187, i32 0, i32 0), i32 8, i8* null, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.188, i32 0, i32 0) }, %struct.arg_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.189, i32 0, i32 0), i32 8, i8* null, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.190, i32 0, i32 0) }, %struct.arg_t { i8* null, i32 2, i8* null, i8* null }], align 16
@.str.656 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.1.657 = private unnamed_addr constant [22 x i8] c"src/parse_args_file.c\00", align 1
@.str.2.658 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.3.659 = private unnamed_addr constant [46 x i8] c"Unable to open arguments file %s for reading\0A\00", align 1
@.str.4.660 = private unnamed_addr constant [4 x i8] c" \09\0A\00", align 1
@liveargs = internal unnamed_addr global i8** null, align 8
@.str.5.661 = private unnamed_addr constant [9 x i8] c"-logbase\00", align 1
@.str.6.662 = private unnamed_addr constant [7 x i8] c"1.0003\00", align 1
@.str.7.663 = private unnamed_addr constant [45 x i8] c"Base in which all log-likelihoods calculated\00", align 1
@.str.8.664 = private unnamed_addr constant [6 x i8] c"-feat\00", align 1
@.str.9.665 = private unnamed_addr constant [10 x i8] c"1s_c_d_dd\00", align 1
@.str.10.666 = private unnamed_addr constant [80 x i8] c"Feature type: Must be s3_1x39 / s2_4x / cep_dcep[,%d] / cep[,%d] / %d,%d,...,%d\00", align 1
@.str.11.667 = private unnamed_addr constant [4 x i8] c"-gs\00", align 1
@.str.12.668 = private unnamed_addr constant [28 x i8] c"Gaussian Selection Mapping.\00", align 1
@.str.13.669 = private unnamed_addr constant [4 x i8] c"-ds\00", align 1
@.str.14.670 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.15.671 = private unnamed_addr constant [46 x i8] c"Ratio of Down-sampling the frame computation.\00", align 1
@.str.16.672 = private unnamed_addr constant [9 x i8] c"-cond_ds\00", align 1
@.str.17.673 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.18.674 = private unnamed_addr constant [58 x i8] c"Conditional Down-sampling, override normal down sampling.\00", align 1
@.str.19.675 = private unnamed_addr constant [7 x i8] c"-gs4gs\00", align 1
@.str.20.676 = private unnamed_addr constant [159 x i8] c"A flag that specified whether the input GS map will be used for Gaussian Selection. If it is disabled, the map will only provide information to other modules.\00", align 1
@.str.21.677 = private unnamed_addr constant [9 x i8] c"-svq4svq\00", align 1
@.str.22.678 = private unnamed_addr constant [96 x i8] c"A flag that specified whether the input SVQ will be used as approximate scores of the Gaussians\00", align 1
@.str.23.679 = private unnamed_addr constant [10 x i8] c"-ci_pbeam\00", align 1
@.str.24.680 = private unnamed_addr constant [6 x i8] c"1e-80\00", align 1
@.str.25.681 = private unnamed_addr constant [92 x i8] c"CI phone beam for CI-based GMM Selection. Good number should be [0(widest) .. 1(narrowest)]\00", align 1
@.str.26.682 = private unnamed_addr constant [11 x i8] c"-wend_beam\00", align 1
@.str.27.683 = private unnamed_addr constant [8 x i8] c"1.0e-80\00", align 1
@.str.28.684 = private unnamed_addr constant [81 x i8] c"Beam selecting word-final HMMs exiting in each frame [0(widest) .. 1(narrowest)]\00", align 1
@.str.29.685 = private unnamed_addr constant [11 x i8] c"-pl_window\00", align 1
@.str.30.686 = private unnamed_addr constant [60 x i8] c"Window size (actually window size-1) of phoneme look-ahead.\00", align 1
@.str.31.687 = private unnamed_addr constant [11 x i8] c"-pheurtype\00", align 1
@.str.32.688 = private unnamed_addr constant [71 x i8] c"0 = bypass, 1= sum of max, 2 = sum of avg, 3 = sum of 1st senones only\00", align 1
@.str.33.689 = private unnamed_addr constant [9 x i8] c"-pl_beam\00", align 1
@.str.34.690 = private unnamed_addr constant [57 x i8] c"Beam for phoneme look-ahead. [0(widest) .. 1(narrowest)]\00", align 1
@.str.35.691 = private unnamed_addr constant [5 x i8] c"-ctl\00", align 1
@.str.36.692 = private unnamed_addr constant [48 x i8] c"Control file listing utterances to be processed\00", align 1
@.str.37.693 = private unnamed_addr constant [8 x i8] c"-ctl_lm\00", align 1
@.str.38.694 = private unnamed_addr constant [45 x i8] c"Control file that list the corresponding LMs\00", align 1
@.str.39.695 = private unnamed_addr constant [6 x i8] c"-beam\00", align 1
@.str.40.696 = private unnamed_addr constant [8 x i8] c"1.0e-55\00", align 1
@.str.41.697 = private unnamed_addr constant [86 x i8] c"Beam selecting active HMMs (relative to best) in each frame [0(widest)..1(narrowest)]\00", align 1
@.str.42.698 = private unnamed_addr constant [7 x i8] c"-pbeam\00", align 1
@.str.43.699 = private unnamed_addr constant [8 x i8] c"1.0e-50\00", align 1
@.str.44.700 = private unnamed_addr constant [88 x i8] c"Beam selecting HMMs transitioning to successors in each frame [0(widest)..1(narrowest)]\00", align 1
@.str.45.701 = private unnamed_addr constant [7 x i8] c"-wbeam\00", align 1
@.str.46.702 = private unnamed_addr constant [8 x i8] c"1.0e-35\00", align 1
@.str.47.703 = private unnamed_addr constant [79 x i8] c"Beam selecting word-final HMMs exiting in each frame [0(widest)..1(narrowest)]\00", align 1
@.str.48.704 = private unnamed_addr constant [12 x i8] c"-lminmemory\00", align 1
@.str.49.705 = private unnamed_addr constant [64 x i8] c"Load language model into memory (default: use disk cache for lm\00", align 1
@.str.50.706 = private unnamed_addr constant [11 x i8] c"-log3table\00", align 1
@.str.51.707 = private unnamed_addr constant [79 x i8] c"Determines whether to use the log3 table or to compute the values at run time.\00", align 1
@.str.52.708 = private unnamed_addr constant [8 x i8] c"-vqeval\00", align 1
@.str.53.709 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@.str.54.710 = private unnamed_addr constant [112 x i8] c"How many vectors should be analyzed by VQ when building the shortlist. It speeds up the decoder, but at a cost.\00", align 1
@.str.55.711 = private unnamed_addr constant [9 x i8] c"-senmgau\00", align 1
@.str.56.712 = private unnamed_addr constant [7 x i8] c".cont.\00", align 1
@.str.57.713 = private unnamed_addr constant [62 x i8] c"Senone to mixture-gaussian mapping file (or .semi. or .cont.)\00", align 1
@.str.58.714 = private unnamed_addr constant [5 x i8] c"-cmn\00", align 1
@.str.59.715 = private unnamed_addr constant [8 x i8] c"current\00", align 1
@.str.60.716 = private unnamed_addr constant [85 x i8] c"Cepstral mean normalization scheme (default: Cep -= mean-over-current-sentence(Cep))\00", align 1
@.str.61.717 = private unnamed_addr constant [9 x i8] c"-varnorm\00", align 1
@.str.62.718 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.63.719 = private unnamed_addr constant [85 x i8] c"Variance normalize each utterance (yes/no; only applicable if CMN is also performed)\00", align 1
@.str.64.720 = private unnamed_addr constant [5 x i8] c"-agc\00", align 1
@.str.65.721 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.66.722 = private unnamed_addr constant [92 x i8] c"Automatic gain control for c0 ('max' or 'none'); (max: c0 -= max-over-current-sentence(c0))\00", align 1
@.str.67.723 = private unnamed_addr constant [6 x i8] c"-mdef\00", align 1
@.str.68.724 = private unnamed_addr constant [28 x i8] c"Model definition input file\00", align 1
@.str.69.725 = private unnamed_addr constant [6 x i8] c"-dict\00", align 1
@.str.70.726 = private unnamed_addr constant [36 x i8] c"Pronunciation dictionary input file\00", align 1
@.str.71.727 = private unnamed_addr constant [7 x i8] c"-fdict\00", align 1
@.str.72.728 = private unnamed_addr constant [48 x i8] c"Filler word pronunciation dictionary input file\00", align 1
@.str.73.729 = private unnamed_addr constant [4 x i8] c"-lm\00", align 1
@.str.74.730 = private unnamed_addr constant [39 x i8] c"Word trigram language model input file\00", align 1
@.str.75.731 = private unnamed_addr constant [9 x i8] c"-fillpen\00", align 1
@.str.76.732 = private unnamed_addr constant [37 x i8] c"Filler word probabilities input file\00", align 1
@.str.77.733 = private unnamed_addr constant [9 x i8] c"-silprob\00", align 1
@.str.78.734 = private unnamed_addr constant [4 x i8] c"0.1\00", align 1
@.str.79.735 = private unnamed_addr constant [33 x i8] c"Default silence word probability\00", align 1
@.str.80.736 = private unnamed_addr constant [10 x i8] c"-fillprob\00", align 1
@.str.81.737 = private unnamed_addr constant [44 x i8] c"Default non-silence filler word probability\00", align 1
@.str.82.738 = private unnamed_addr constant [4 x i8] c"-lw\00", align 1
@.str.83.739 = private unnamed_addr constant [4 x i8] c"8.5\00", align 1
@.str.84.740 = private unnamed_addr constant [16 x i8] c"Language weight\00", align 1
@.str.85.741 = private unnamed_addr constant [5 x i8] c"-wip\00", align 1
@.str.86.742 = private unnamed_addr constant [4 x i8] c"0.7\00", align 1
@.str.87.743 = private unnamed_addr constant [23 x i8] c"Word insertion penalty\00", align 1
@.str.88.744 = private unnamed_addr constant [4 x i8] c"-uw\00", align 1
@.str.89.745 = private unnamed_addr constant [15 x i8] c"Unigram weight\00", align 1
@.str.90.746 = private unnamed_addr constant [6 x i8] c"-mean\00", align 1
@.str.91.747 = private unnamed_addr constant [34 x i8] c"Mixture gaussian means input file\00", align 1
@.str.92.748 = private unnamed_addr constant [5 x i8] c"-var\00", align 1
@.str.93.749 = private unnamed_addr constant [38 x i8] c"Mixture gaussian variances input file\00", align 1
@.str.94.750 = private unnamed_addr constant [10 x i8] c"-varfloor\00", align 1
@.str.95.751 = private unnamed_addr constant [7 x i8] c"0.0001\00", align 1
@.str.96.752 = private unnamed_addr constant [65 x i8] c"Mixture gaussian variance floor (applied to data from -var file)\00", align 1
@.str.97.753 = private unnamed_addr constant [6 x i8] c"-mixw\00", align 1
@.str.98.754 = private unnamed_addr constant [34 x i8] c"Senone mixture weights input file\00", align 1
@.str.99.755 = private unnamed_addr constant [11 x i8] c"-mixwfloor\00", align 1
@.str.100 = private unnamed_addr constant [10 x i8] c"0.0000001\00", align 1
@.str.101 = private unnamed_addr constant [63 x i8] c"Senone mixture weights floor (applied to data from -mixw file)\00", align 1
@.str.102 = private unnamed_addr constant [7 x i8] c"-subvq\00", align 1
@.str.103 = private unnamed_addr constant [44 x i8] c"Sub-vector quantized form of acoustic model\00", align 1
@.str.104 = private unnamed_addr constant [6 x i8] c"-tmat\00", align 1
@.str.105 = private unnamed_addr constant [39 x i8] c"HMM state transition matrix input file\00", align 1
@.str.106 = private unnamed_addr constant [11 x i8] c"-tmatfloor\00", align 1
@.str.107 = private unnamed_addr constant [63 x i8] c"HMM state transition probability floor (applied to -tmat file)\00", align 1
@.str.108 = private unnamed_addr constant [10 x i8] c"-Nlextree\00", align 1
@.str.109 = private unnamed_addr constant [72 x i8] c"No. of lextrees to be instantiated; entries into them staggered in time\00", align 1
@.str.110 = private unnamed_addr constant [5 x i8] c"-epl\00", align 1
@.str.111 = private unnamed_addr constant [101 x i8] c"Entries Per Lextree; #successive entries into one lextree before lextree-entries shifted to the next\00", align 1
@.str.112 = private unnamed_addr constant [11 x i8] c"-subvqbeam\00", align 1
@.str.113 = private unnamed_addr constant [7 x i8] c"3.0e-3\00", align 1
@.str.114 = private unnamed_addr constant [86 x i8] c"Beam selecting best components within each mixture Gaussian [0(widest)..1(narrowest)]\00", align 1
@.str.115 = private unnamed_addr constant [5 x i8] c"-utt\00", align 1
@.str.116 = private unnamed_addr constant [58 x i8] c"Utterance file to be processed (-ctlcount argument times)\00", align 1
@.str.117 = private unnamed_addr constant [11 x i8] c"-ctloffset\00", align 1
@.str.118.756 = private unnamed_addr constant [62 x i8] c"No. of utterances at the beginning of -ctl file to be skipped\00", align 1
@.str.119 = private unnamed_addr constant [10 x i8] c"-ctlcount\00", align 1
@.str.120 = private unnamed_addr constant [11 x i8] c"1000000000\00", align 1
@.str.121 = private unnamed_addr constant [70 x i8] c"No. of utterances to be processed (after skipping -ctloffset entries)\00", align 1
@.str.122 = private unnamed_addr constant [8 x i8] c"-cepdir\00", align 1
@.str.123 = private unnamed_addr constant [71 x i8] c"Input cepstrum files directory (prefixed to filespecs in control file)\00", align 1
@.str.124 = private unnamed_addr constant [10 x i8] c"-bptbldir\00", align 1
@.str.125 = private unnamed_addr constant [75 x i8] c"Directory in which to dump word Viterbi back pointer table (for debugging)\00", align 1
@.str.126 = private unnamed_addr constant [11 x i8] c"-outlatdir\00", align 1
@.str.127 = private unnamed_addr constant [41 x i8] c"Directory in which to dump word lattices\00", align 1
@.str.128 = private unnamed_addr constant [14 x i8] c"-outlatoldfmt\00", align 1
@.str.129 = private unnamed_addr constant [39 x i8] c"Whether to dump lattices in old format\00", align 1
@.str.130 = private unnamed_addr constant [8 x i8] c"-latext\00", align 1
@.str.131 = private unnamed_addr constant [7 x i8] c"lat.gz\00", align 1
@.str.132 = private unnamed_addr constant [67 x i8] c"Filename extension for lattice files (gzip compressed, by default)\00", align 1
@.str.133 = private unnamed_addr constant [9 x i8] c"-hmmdump\00", align 1
@.str.134 = private unnamed_addr constant [61 x i8] c"Whether to dump active HMM details to stderr (for debugging)\00", align 1
@.str.135 = private unnamed_addr constant [13 x i8] c"-lextreedump\00", align 1
@.str.136 = private unnamed_addr constant [64 x i8] c"Whether to dump the lextree structure to stderr (for debugging)\00", align 1
@.str.137 = private unnamed_addr constant [8 x i8] c"-maxwpf\00", align 1
@.str.138 = private unnamed_addr constant [3 x i8] c"20\00", align 1
@.str.139 = private unnamed_addr constant [57 x i8] c"Max no. of distinct word exits to maintain at each frame\00", align 1
@.str.140 = private unnamed_addr constant [11 x i8] c"-maxhistpf\00", align 1
@.str.141 = private unnamed_addr constant [4 x i8] c"100\00", align 1
@.str.142 = private unnamed_addr constant [47 x i8] c"Max no. of histories to maintain at each frame\00", align 1
@.str.143 = private unnamed_addr constant [8 x i8] c"-bghist\00", align 1
@.str.144.757 = private unnamed_addr constant [68 x i8] c"Bigram-mode: If TRUE only one BP entry/frame; else one per LM state\00", align 1
@.str.145 = private unnamed_addr constant [10 x i8] c"-maxhmmpf\00", align 1
@.str.146 = private unnamed_addr constant [6 x i8] c"20000\00", align 1
@.str.147 = private unnamed_addr constant [58 x i8] c"Max no. of active HMMs to maintain at each frame; approx.\00", align 1
@.str.148 = private unnamed_addr constant [16 x i8] c"-hmmhistbinsize\00", align 1
@.str.149 = private unnamed_addr constant [5 x i8] c"5000\00", align 1
@.str.150 = private unnamed_addr constant [76 x i8] c"Performance histogram: #frames vs #HMMs active; #HMMs/bin in this histogram\00", align 1
@.str.151 = private unnamed_addr constant [11 x i8] c"-ptranskip\00", align 1
@.str.152 = private unnamed_addr constant [63 x i8] c"Use wbeam for phone transitions every so many frames (if >= 1)\00", align 1
@.str.153 = private unnamed_addr constant [5 x i8] c"-hyp\00", align 1
@.str.154 = private unnamed_addr constant [41 x i8] c"Recognition result file, with only words\00", align 1
@.str.155 = private unnamed_addr constant [8 x i8] c"-hypseg\00", align 1
@.str.156 = private unnamed_addr constant [60 x i8] c"Recognition result file, with word segmentations and scores\00", align 1
@.str.157 = private unnamed_addr constant [12 x i8] c"-treeugprob\00", align 1
@.str.158 = private unnamed_addr constant [46 x i8] c"If TRUE (non-0), Use unigram probs in lextree\00", align 1
@.str.159 = private unnamed_addr constant [11 x i8] c"-maxhyplen\00", align 1
@.str.160 = private unnamed_addr constant [5 x i8] c"1000\00", align 1
@.str.161 = private unnamed_addr constant [69 x i8] c"Maximum number of words in a partial hypothesis (for block decoding)\00", align 1
@.str.162 = private unnamed_addr constant [12 x i8] c"-maxcepvecs\00", align 1
@.str.163 = private unnamed_addr constant [4 x i8] c"256\00", align 1
@.str.164 = private unnamed_addr constant [84 x i8] c"Maximum number of cepstral vectors that can be obtained from a single sample buffer\00", align 1
@.str.165 = private unnamed_addr constant [10 x i8] c"-samprate\00", align 1
@.str.166.758 = private unnamed_addr constant [5 x i8] c"8000\00", align 1
@.str.167 = private unnamed_addr constant [52 x i8] c"Sampling rate (only 8K and 16K currently supported)\00", align 1
@.str.168 = private unnamed_addr constant [7 x i8] c"-nfilt\00", align 1
@.str.169 = private unnamed_addr constant [3 x i8] c"31\00", align 1
@.str.170 = private unnamed_addr constant [22 x i8] c"Number of mel filters\00", align 1
@.str.171 = private unnamed_addr constant [8 x i8] c"-lowerf\00", align 1
@.str.172 = private unnamed_addr constant [4 x i8] c"200\00", align 1
@.str.173 = private unnamed_addr constant [22 x i8] c"Lower edge of filters\00", align 1
@.str.174 = private unnamed_addr constant [8 x i8] c"-upperf\00", align 1
@.str.175 = private unnamed_addr constant [5 x i8] c"3500\00", align 1
@.str.176 = private unnamed_addr constant [22 x i8] c"Upper edge of filters\00", align 1
@.str.177 = private unnamed_addr constant [7 x i8] c"-alpha\00", align 1
@.str.178.759 = private unnamed_addr constant [5 x i8] c"0.97\00", align 1
@.str.179 = private unnamed_addr constant [30 x i8] c"alpha for pre-emphasis window\00", align 1
@.str.180 = private unnamed_addr constant [7 x i8] c"-frate\00", align 1
@.str.181 = private unnamed_addr constant [11 x i8] c"frame rate\00", align 1
@.str.182 = private unnamed_addr constant [6 x i8] c"-nfft\00", align 1
@.str.183 = private unnamed_addr constant [16 x i8] c"no. pts for FFT\00", align 1
@.str.184 = private unnamed_addr constant [6 x i8] c"-wlen\00", align 1
@.str.185 = private unnamed_addr constant [7 x i8] c"0.0256\00", align 1
@.str.186 = private unnamed_addr constant [14 x i8] c"window length\00", align 1
@.str.187 = private unnamed_addr constant [11 x i8] c"-lmdumpdir\00", align 1
@.str.188 = private unnamed_addr constant [41 x i8] c"The directory for dumping the DMP file. \00", align 1
@.str.189 = private unnamed_addr constant [9 x i8] c"-lmctlfn\00", align 1
@.str.190 = private unnamed_addr constant [33 x i8] c"Control file for language model\0A\00", align 1
@.str.760 = private unnamed_addr constant [11 x i8] c"src/dict.c\00", align 1
@.str.1.761 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.2.762 = private unnamed_addr constant [33 x i8] c"Dictionary full; add(%s) failed\0A\00", align 1
@.str.3.763 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.4.764 = private unnamed_addr constant [27 x i8] c"Missing base word for: %s\0A\00", align 1
@.str.5.767 = private unnamed_addr constant [20 x i8] c"No dictionary file\0A\00", align 1
@.str.6.768 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.7.769 = private unnamed_addr constant [13 x i8] c"SYSTEM_ERROR\00", align 1
@.str.8.770 = private unnamed_addr constant [20 x i8] c"fopen(%s,r) failed\0A\00", align 1
@.str.9.771 = private unnamed_addr constant [48 x i8] c"#Words in dictionaries (%d) exceeds limit (%d)\0A\00", align 1
@.str.10.772 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.11.773 = private unnamed_addr constant [29 x i8] c"Reading main dictionary: %s\0A\00", align 1
@.str.12.774 = private unnamed_addr constant [15 x i8] c"%d words read\0A\00", align 1
@.str.13.775 = private unnamed_addr constant [31 x i8] c"Reading filler dictionary: %s\0A\00", align 1
@.str.14.776 = private unnamed_addr constant [4 x i8] c"<s>\00", align 1
@.str.15.779 = private unnamed_addr constant [5 x i8] c"</s>\00", align 1
@.str.16.780 = private unnamed_addr constant [6 x i8] c"<sil>\00", align 1
@.str.17.781 = private unnamed_addr constant [44 x i8] c"Building compound words (separator = '%c')\0A\00", align 1
@.str.18.782 = private unnamed_addr constant [19 x i8] c"%d compound words\0A\00", align 1
@.str.19.789 = private unnamed_addr constant [46 x i8] c"str2words(%s) failed; Increase maxwd from %d\0A\00", align 1
@.str.20.791 = private unnamed_addr constant [48 x i8] c"Line %d: No pronunciation for word %s; ignored\0A\00", align 1
@.str.21.792 = private unnamed_addr constant [43 x i8] c"Line %d: Bad ciphone: %s; word %s ignored\0A\00", align 1
@.str.22.790 = private unnamed_addr constant [58 x i8] c"Line %d: dict_add_word (%s) failed (duplicate?); ignored\0A\00", align 1
@.str.23.793 = private unnamed_addr constant [55 x i8] c"Too many CIphones in dictionary; increase MAX_S3CIPID\0A\00", align 1
@.str.24.794 = private unnamed_addr constant [41 x i8] c"hash_enter(local-phonetable, %s) failed\0A\00", align 1
@.str.25.783 = private unnamed_addr constant [53 x i8] c"Bad compound word %s: leading or trailing separator\0A\00", align 1
@.str.26.786 = private unnamed_addr constant [47 x i8] c"Compound special/filler word (%s) not allowed\0A\00", align 1
@.str.27.787 = private unnamed_addr constant [45 x i8] c"Bad compound word %s: successive separators\0A\00", align 1
@.str.28.788 = private unnamed_addr constant [43 x i8] c"Component word %s of %s not in dictionary\0A\00", align 1
@seedi = internal unnamed_addr global i32 0, align 4
@.str.797 = private unnamed_addr constant [10 x i8] c" %11d    \00", align 1
@.str.1.798 = private unnamed_addr constant [6 x i8] c" %11d\00", align 1
@.str.2.799 = private unnamed_addr constant [11 x i8] c"     %11d\0A\00", align 1
@.str.3.800 = private unnamed_addr constant [11 x i8] c" %-11s    \00", align 1
@.str.4.801 = private unnamed_addr constant [6 x i8] c"senid\00", align 1
@.str.6.802 = private unnamed_addr constant [7 x i8] c"senscr\00", align 1
@.str.7.803 = private unnamed_addr constant [10 x i8] c"src/hmm.c\00", align 1
@.str.8.804 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.9.805 = private unnamed_addr constant [25 x i8] c"#States= %d unsupported\0A\00", align 1
@.str.807 = private unnamed_addr constant [24 x i8] c"%s%s S 0 T %d A %d L %d\00", align 1
@.str.1.806 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.808 = private unnamed_addr constant [13 x i8] c" %d %d %d %s\00", align 1
@.str.3.809 = private unnamed_addr constant [5 x i8] c" %d\0A\00", align 1
@.str.4.810 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.6.811 = private unnamed_addr constant [6 x i8] c"(%s)\0A\00", align 1
@.str.7.812 = private unnamed_addr constant [10 x i8] c"-bptbldir\00", align 1
@.str.8.813 = private unnamed_addr constant [10 x i8] c"%s/%s.bpt\00", align 1
@.str.9.814 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.10.815 = private unnamed_addr constant [10 x i8] c"src/utt.c\00", align 1
@.str.11.816 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.12.817 = private unnamed_addr constant [34 x i8] c"fopen(%s,w) failed; using stdout\0A\00", align 1
@.str.13.818 = private unnamed_addr constant [16 x i8] c"\0ABacktrace(%s)\0A\00", align 1
@.str.14.819 = private unnamed_addr constant [26 x i8] c"%6s %5s %5s %11s %8s %4s\0A\00", align 1
@.str.15.820 = private unnamed_addr constant [6 x i8] c"LatID\00", align 1
@.str.16.821 = private unnamed_addr constant [5 x i8] c"SFrm\00", align 1
@.str.17.822 = private unnamed_addr constant [5 x i8] c"EFrm\00", align 1
@.str.18.823 = private unnamed_addr constant [5 x i8] c"AScr\00", align 1
@.str.19.824 = private unnamed_addr constant [5 x i8] c"LScr\00", align 1
@.str.20.825 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.21.826 = private unnamed_addr constant [29 x i8] c"%6d %5d %5d %11d %8d %4d %s\0A\00", align 1
@.str.22.827 = private unnamed_addr constant [33 x i8] c"       %5d %5d %11d %8d (Total)\0A\00", align 1
@.str.23.828 = private unnamed_addr constant [10 x i8] c"\0AFWDVIT: \00", align 1
@.str.24.829 = private unnamed_addr constant [12 x i8] c"'%s' (%s)\0A\0A\00", align 1
@.str.25.830 = private unnamed_addr constant [9 x i8] c"FWDXCT: \00", align 1
@.str.27.831 = private unnamed_addr constant [15 x i8] c"considered.out\00", align 1
@.str.28.832 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.29.833 = private unnamed_addr constant [29 x i8] c"fopen considered.out failed\0A\00", align 1
@.str.30.834 = private unnamed_addr constant [34 x i8] c"%22d considered for utterance %s\0A\00", align 1
@.str.31.835 = private unnamed_addr constant [11 x i8] c"-outlatdir\00", align 1
@.str.32.837 = private unnamed_addr constant [9 x i8] c"%s/%s.%s\00", align 1
@.str.33.836 = private unnamed_addr constant [8 x i8] c"-latext\00", align 1
@.str.34.838 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.35.839 = private unnamed_addr constant [26 x i8] c"Writing lattice file: %s\0A\00", align 1
@.str.36.840 = private unnamed_addr constant [26 x i8] c"fopen_comp (%s,w) failed\0A\00", align 1
@.str.37.841 = private unnamed_addr constant [14 x i8] c"# getcwd: %s\0A\00", align 1
@.str.38.842 = private unnamed_addr constant [9 x i8] c"-logbase\00", align 1
@.str.39.843 = private unnamed_addr constant [15 x i8] c"# -logbase %e\0A\00", align 1
@.str.40.845 = private unnamed_addr constant [12 x i8] c"# -dict %s\0A\00", align 1
@.str.41.844 = private unnamed_addr constant [6 x i8] c"-dict\00", align 1
@.str.42.846 = private unnamed_addr constant [7 x i8] c"-fdict\00", align 1
@.str.43.847 = private unnamed_addr constant [13 x i8] c"# -fdict %s\0A\00", align 1
@.str.44.849 = private unnamed_addr constant [10 x i8] c"# -lm %s\0A\00", align 1
@.str.45.848 = private unnamed_addr constant [4 x i8] c"-lm\00", align 1
@.str.46.851 = private unnamed_addr constant [12 x i8] c"# -mdef %s\0A\00", align 1
@.str.47.850 = private unnamed_addr constant [6 x i8] c"-mdef\00", align 1
@.str.48.853 = private unnamed_addr constant [12 x i8] c"# -mean %s\0A\00", align 1
@.str.49.852 = private unnamed_addr constant [6 x i8] c"-mean\00", align 1
@.str.50.855 = private unnamed_addr constant [11 x i8] c"# -var %s\0A\00", align 1
@.str.51.854 = private unnamed_addr constant [5 x i8] c"-var\00", align 1
@.str.52.857 = private unnamed_addr constant [12 x i8] c"# -mixw %s\0A\00", align 1
@.str.53.856 = private unnamed_addr constant [6 x i8] c"-mixw\00", align 1
@.str.54.859 = private unnamed_addr constant [12 x i8] c"# -tmat %s\0A\00", align 1
@.str.55.858 = private unnamed_addr constant [6 x i8] c"-tmat\00", align 1
@.str.56.860 = private unnamed_addr constant [3 x i8] c"#\0A\00", align 1
@.str.57.861 = private unnamed_addr constant [11 x i8] c"Frames %d\0A\00", align 1
@.str.58.862 = private unnamed_addr constant [14 x i8] c"-outlatoldfmt\00", align 1
@.str.59.863 = private unnamed_addr constant [21 x i8] c"%s: No recognition\0A\0A\00", align 1
@.str.60.864 = private unnamed_addr constant [131 x i8] c"%4d frm;  %4d sen, %5d gau/fr, Sen %4.2f CPU %4.2f Clk [Ovrhd %4.2f CPU %4.2f Clk];  %5d hmm, %3d wd/fr, %4.2f CPU %4.2f Clk (%s)\0A\00", align 1
@.str.61.865 = private unnamed_addr constant [20 x i8] c"HMMHist[0..%d](%s):\00", align 1
@.str.62.866 = private unnamed_addr constant [8 x i8] c" %d(%d)\00", align 1
@utt_word_trans.bs = internal unnamed_addr global i32* null, align 8
@utt_word_trans.bv = internal unnamed_addr global i32* null, align 8
@utt_word_trans.epl = internal unnamed_addr global i32 0, align 4
@.str.63.867 = private unnamed_addr constant [5 x i8] c"-epl\00", align 1
@.str.64.869 = private unnamed_addr constant [11 x i8] c"-pheurtype\00", align 1
@.str.65.870 = private unnamed_addr constant [26 x i8] c"Fr %d Lextree %d #HMM %d\0A\00", align 1
@.str.66.871 = private unnamed_addr constant [63 x i8] c"***ERROR*** Fr %d, best HMM score > 0 (%d); int32 wraparound?\0A\00", align 1
@.str.874 = private unnamed_addr constant [10 x i8] c"src/wid.c\00", align 1
@.str.1.875 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.2.876 = private unnamed_addr constant [40 x i8] c"%s is both a word and an LM class name\0A\00", align 1
@.str.3.877 = private unnamed_addr constant [41 x i8] c"Filler dictionary word '%s' found in LM\0A\00", align 1
@.str.4.878 = private unnamed_addr constant [60 x i8] c"LM word '%s' is an alternative pronunciation in dictionary\0A\00", align 1
@.str.5.879 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.6.880 = private unnamed_addr constant [18 x i8] c"map[dictid] = %d\0A\00", align 1
@.str.7.881 = private unnamed_addr constant [33 x i8] c"Multiple mappings of '%s' in LM\0A\00", align 1
@.str.8.882 = private unnamed_addr constant [40 x i8] c"%d LM words not in dictionary; ignored\0A\00", align 1
@.str.9.883 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.10.884 = private unnamed_addr constant [50 x i8] c"Error in mapping, please read the log to see why\0A\00", align 1
@.str.887 = private unnamed_addr constant [12 x i8] c"LMCLASS %s\0A\00", align 1
@.str.1.888 = private unnamed_addr constant [11 x i8] c"    %s\09%d\0A\00", align 1
@.str.2.889 = private unnamed_addr constant [8 x i8] c"END %s\0A\00", align 1
@.str.3.892 = private unnamed_addr constant [14 x i8] c"src/lmclass.c\00", align 1
@.str.4.895 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.5.896 = private unnamed_addr constant [28 x i8] c"Reading LM Class file '%s'\0A\00", align 1
@.str.6.897 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.7.898 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.8.899 = private unnamed_addr constant [29 x i8] c"Line %d: Line too long:\0A\09%s\0A\00", align 1
@.str.9.900 = private unnamed_addr constant [8 x i8] c"LMCLASS\00", align 1
@.str.10.901 = private unnamed_addr constant [40 x i8] c"Line %d: Expecting LMCLASS <classname>\0A\00", align 1
@.str.11.902 = private unnamed_addr constant [8 x i8] c"WARNING\00", align 1
@.str.12.903 = private unnamed_addr constant [47 x i8] c"Line %d: LM class name(%s) not enclosed in []\0A\00", align 1
@.str.13.904 = private unnamed_addr constant [46 x i8] c"Line %d: lmclass_add(%s) failed (duplicate?)\0A\00", align 1
@.str.14.905 = private unnamed_addr constant [19 x i8] c"Premature EOF(%s)\0A\00", align 1
@.str.15.906 = private unnamed_addr constant [23 x i8] c"Line %d: Syntax error\0A\00", align 1
@.str.16.907 = private unnamed_addr constant [4 x i8] c"END\00", align 1
@.str.17.908 = private unnamed_addr constant [3 x i8] c"%e\00", align 1
@.str.18.909 = private unnamed_addr constant [38 x i8] c"Line %d: Prob(%s) out of range (0,1)\0A\00", align 1
@.str.19.910 = private unnamed_addr constant [50 x i8] c"Line %d: lmclass_addword(%s) failed (duplicate?)\0A\00", align 1
@.str.20.911 = private unnamed_addr constant [28 x i8] c"Sum(prob)(LMClass %s) = %e\0A\00", align 1
@.str.21.912 = private unnamed_addr constant [32 x i8] c"Loaded LM Class '%s'; %d words\0A\00", align 1
@cmn_prior.cur_mean = internal unnamed_addr global float* null, align 8
@cmn_prior.sum = internal unnamed_addr global float* null, align 8
@cmn_prior.nframe = internal unnamed_addr global i32 0, align 4
@cmn_prior.initialize = internal unnamed_addr global i1 false, align 4
@.str.921 = private unnamed_addr constant [16 x i8] c"src/cmn_prior.c\00", align 1
@.str.1.922 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.2.923 = private unnamed_addr constant [60 x i8] c"Variance normalization not implemented in live mode decode\0A\00", align 1
@.str.3.924 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.4.925 = private unnamed_addr constant [33 x i8] c"mean[0]= %.2f, mean[1..%d]= 0.0\0A\00", align 1
@cmn_mean = internal unnamed_addr global float* null, align 8
@.str.928 = private unnamed_addr constant [10 x i8] c"src/cmn.c\00", align 1
@cmn_var = internal unnamed_addr global float* null, align 8
@.str.931 = private unnamed_addr constant [11 x i8] c"src/hash.c\00", align 1
@prime = internal unnamed_addr constant [46 x i32] [i32 101, i32 211, i32 307, i32 401, i32 503, i32 601, i32 701, i32 809, i32 907, i32 1009, i32 1201, i32 1601, i32 2003, i32 2411, i32 3001, i32 4001, i32 5003, i32 6007, i32 7001, i32 8009, i32 9001, i32 10007, i32 12007, i32 16001, i32 20011, i32 24001, i32 30011, i32 40009, i32 50021, i32 60013, i32 70001, i32 80021, i32 90001, i32 100003, i32 120011, i32 160001, i32 200003, i32 240007, i32 300007, i32 400009, i32 500009, i32 600011, i32 700001, i32 800011, i32 900001, i32 -1], align 16
@.str.1.932 = private unnamed_addr constant [8 x i8] c"WARNING\00", align 1
@.str.2.933 = private unnamed_addr constant [46 x i8] c"Very large hash table requested (%d entries)\0A\00", align 1
@most_recent_best_cid = local_unnamed_addr global i32 -1, align 4
@.str.948 = private unnamed_addr constant [23 x i8] c"src/approx_cont_mgau.c\00", align 1
@.str.1.949 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.2.950 = private unnamed_addr constant [35 x i8] c"Re-normalizing the previous score\0A\00", align 1
@live_initialize_decoder.live_kb = internal global %struct.kb_t zeroinitializer, align 8
@kb = local_unnamed_addr global %struct.kb_t* null, align 8
@kbcore = internal unnamed_addr global %struct.kbcore_t* null, align 8
@.str.955 = private unnamed_addr constant [11 x i8] c"src/live.c\00", align 1
@.str.1.956 = private unnamed_addr constant [9 x i8] c"-hmmdump\00", align 1
@hmmdumpfp = internal unnamed_addr global %struct._IO_FILE* null, align 8
@.str.2.957 = private unnamed_addr constant [8 x i8] c"-maxwpf\00", align 1
@maxwpf = internal unnamed_addr global i32 0, align 4
@.str.3.958 = private unnamed_addr constant [11 x i8] c"-maxhistpf\00", align 1
@maxhistpf = internal unnamed_addr global i32 0, align 4
@.str.4.959 = private unnamed_addr constant [10 x i8] c"-maxhmmpf\00", align 1
@maxhmmpf = internal unnamed_addr global i32 0, align 4
@.str.5.960 = private unnamed_addr constant [11 x i8] c"-ptranskip\00", align 1
@ptranskip = internal unnamed_addr global i32 0, align 4
@.str.6.961 = private unnamed_addr constant [11 x i8] c"-maxhyplen\00", align 1
@parthyp = internal unnamed_addr global %struct.partialhyp_t* null, align 8
@.str.7.962 = private unnamed_addr constant [10 x i8] c"-samprate\00", align 1
@.str.8.963 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.9.964 = private unnamed_addr constant [55 x i8] c"Sampling rate %s not supported. Must be 8000 or 16000\0A\00", align 1
@.str.10.965 = private unnamed_addr constant [8 x i8] c"-lowerf\00", align 1
@.str.11.966 = private unnamed_addr constant [8 x i8] c"-upperf\00", align 1
@.str.12.967 = private unnamed_addr constant [7 x i8] c"-nfilt\00", align 1
@.str.13.968 = private unnamed_addr constant [7 x i8] c"-frate\00", align 1
@.str.14.969 = private unnamed_addr constant [7 x i8] c"-alpha\00", align 1
@.str.15.970 = private unnamed_addr constant [6 x i8] c"-nfft\00", align 1
@.str.16.971 = private unnamed_addr constant [6 x i8] c"-wlen\00", align 1
@fe = internal unnamed_addr global %struct.fe_t* null, align 8
@.str.17.972 = private unnamed_addr constant [43 x i8] c"Front end initialization fe_init() failed\0A\00", align 1
@.str.18.973 = private unnamed_addr constant [12 x i8] c"-maxcepvecs\00", align 1
@dummyframe = internal unnamed_addr global float* null, align 8
@live_utt_decode_block.live_begin_new_utt = internal unnamed_addr global i1 false, align 4
@live_utt_decode_block.frmno = internal global i32 0, align 4
@live_utt_decode_block.live_feat = internal unnamed_addr global float*** null, align 8
@.str.19.980 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.20.981 = private unnamed_addr constant [98 x i8] c"SUMMARY:  %d fr;  %d sen, %d gau/fr, %.2f xCPU [%.2f xOvrhd];  %d hmm/fr, %d wd/fr, %.2f xCPU;  \0A\00", align 1
@confp_open = local_unnamed_addr global i32 0, align 4
@confp = local_unnamed_addr global %struct._IO_FILE* null, align 8
@.str.21.982 = private unnamed_addr constant [21 x i8] c"total_considered.out\00", align 1
@.str.22.983 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.23.984 = private unnamed_addr constant [35 x i8] c"fopen considered_total.out failed\0A\00", align 1
@.str.24.985 = private unnamed_addr constant [29 x i8] c"%22d grand total considered\0A\00", align 1
@tot_considered = local_unnamed_addr global i64 0, align 8
@.str.990 = private unnamed_addr constant [8 x i8] c" %11.4e\00", align 1
@.str.2.991 = private unnamed_addr constant [13 x i8] c"src/vector.c\00", align 1
@.str.3.992 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.4.993 = private unnamed_addr constant [32 x i8] c"Iter %4d: %.1fs CPU; sqerr= %e\0A\00", align 1
@.str.5.994 = private unnamed_addr constant [43 x i8] c"Iter %4d: %.1fs CPU; sqerr= %e; delta= %e\0A\00", align 1
@.str.6.995 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.7.996 = private unnamed_addr constant [28 x i8] c"Iter %d: mean[%d] unmapped\0A\00", align 1
@argval = internal unnamed_addr global %struct.argval_s* null, align 8
@.str.1007 = private unnamed_addr constant [13 x i8] c"src/cmd_ln.c\00", align 1
@.str.1.1008 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.2.1009 = private unnamed_addr constant [53 x i8] c"Multiple sets of argument definitions not supported\0A\00", align 1
@.str.3.1010 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.4.1011 = private unnamed_addr constant [23 x i8] c"Parsing command line:\0A\00", align 1
@ht = internal unnamed_addr global %struct.hash_table_t* null, align 8
@.str.5.1012 = private unnamed_addr constant [29 x i8] c"Duplicate argument name: %s\0A\00", align 1
@.str.6.1013 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.7.1014 = private unnamed_addr constant [22 x i8] c"Unknown argument: %s\0A\00", align 1
@.str.8.1017 = private unnamed_addr constant [37 x i8] c"Multiple occurrences of argument %s\0A\00", align 1
@.str.9.1018 = private unnamed_addr constant [33 x i8] c"Argument value for '%s' missing\0A\00", align 1
@.str.10.1019 = private unnamed_addr constant [31 x i8] c"Bad argument value for %s: %s\0A\00", align 1
@.str.11.1020 = private unnamed_addr constant [39 x i8] c"Bad default argument value for %s: %s\0A\00", align 1
@.str.12.1021 = private unnamed_addr constant [30 x i8] c"Missing required argument %s\0A\00", align 1
@.str.13.1026 = private unnamed_addr constant [28 x i8] c"Arguments list definition:\0A\00", align 1
@.str.14.1032 = private unnamed_addr constant [43 x i8] c"cmd_ln_access invoked before cmd_ln_parse\0A\00", align 1
@.str.15.1022 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.16.1023 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.17.1024 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str.18.1025 = private unnamed_addr constant [27 x i8] c"Unknown argument type: %d\0A\00", align 1
@.str.19.1027 = private unnamed_addr constant [7 x i8] c"[NAME]\00", align 1
@.str.21.1028 = private unnamed_addr constant [9 x i8] c"\09[DEFLT]\00", align 1
@.str.22.1029 = private unnamed_addr constant [10 x i8] c"\09[VALUE]\0A\00", align 1
@tmp_defn = internal unnamed_addr global %struct.arg_t* null, align 8
@considered = local_unnamed_addr global i64 0, align 8
@.str.1037 = private unnamed_addr constant [16 x i8] c"src/cont_mgau.c\00", align 1
@.str.1.1038 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.2.1039 = private unnamed_addr constant [54 x i8] c"Applying variance floor to non-zero variance vectors\0A\00", align 1
@.str.3.1040 = private unnamed_addr constant [28 x i8] c"%d variance values floored\0A\00", align 1
@.str.4.1043 = private unnamed_addr constant [7 x i8] c".cont.\00", align 1
@.str.5.1044 = private unnamed_addr constant [7 x i8] c".semi.\00", align 1
@.str.6.1045 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.7.1046 = private unnamed_addr constant [42 x i8] c"Feature should be either .semi. or .cont.\00", align 1
@.str.8.1070 = private unnamed_addr constant [36 x i8] c"Reading mixture gaussian file '%s'\0A\00", align 1
@.str.9.1053 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.10.1054 = private unnamed_addr constant [24 x i8] c"bio_readhdr(%s) failed\0A\00", align 1
@.str.11.1055 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.12.1056 = private unnamed_addr constant [4 x i8] c"1.0\00", align 1
@.str.13.1057 = private unnamed_addr constant [8 x i8] c"WARNING\00", align 1
@.str.14.1058 = private unnamed_addr constant [40 x i8] c"Version mismatch(%s): %s, expecting %s\0A\00", align 1
@.str.15.1059 = private unnamed_addr constant [8 x i8] c"chksum0\00", align 1
@.str.16.1071 = private unnamed_addr constant [31 x i8] c"fread(%s) (#codebooks) failed\0A\00", align 1
@.str.17.1072 = private unnamed_addr constant [71 x i8] c"%s: #Mixture Gaussians (%d) exceeds limit(%d) enforced by MGAUID type\0A\00", align 1
@.str.18.1073 = private unnamed_addr constant [30 x i8] c"fread(%s) (#features) failed\0A\00", align 1
@.str.19.1061 = private unnamed_addr constant [46 x i8] c"#Features streams(%d) != 1 in continuous HMM\0A\00", align 1
@.str.20.1074 = private unnamed_addr constant [51 x i8] c"#Features streams(%d) != 1 in semi-continuous HMM\0A\00", align 1
@.str.21.1075 = private unnamed_addr constant [38 x i8] c"fread(%s) (#density/codebook) failed\0A\00", align 1
@.str.22.1076 = private unnamed_addr constant [36 x i8] c"fread(%s) (feature-lengths) failed\0A\00", align 1
@.str.23.1077 = private unnamed_addr constant [34 x i8] c"fread(%s) (total #floats) failed\0A\00", align 1
@.str.24.1078 = private unnamed_addr constant [58 x i8] c"%s: #float32s(%d) doesn't match dimensions: %d x %d x %d\0A\00", align 1
@.str.25.1079 = private unnamed_addr constant [50 x i8] c"Currently S2 semi-continous HMM is not supported\0A\00", align 1
@.str.26.1080 = private unnamed_addr constant [47 x i8] c"#Mixtures(%d) doesn't match that of means(%d)\0A\00", align 1
@.str.27.1081 = private unnamed_addr constant [49 x i8] c"#Components(%d) doesn't match that of means(%d)\0A\00", align 1
@.str.28.1082 = private unnamed_addr constant [52 x i8] c"#Vector length(%d) doesn't match that of means(%d)\0A\00", align 1
@.str.29.1083 = private unnamed_addr constant [61 x i8] c"Mixture %d: #Components(%d) doesn't match that of means(%d)\0A\00", align 1
@.str.30.1084 = private unnamed_addr constant [32 x i8] c"fread(%s) (densitydata) failed\0A\00", align 1
@.str.31.1085 = private unnamed_addr constant [29 x i8] c"%s: More data than expected\0A\00", align 1
@.str.32.1086 = private unnamed_addr constant [60 x i8] c"%d mixture Gaussians, %d components, %d streams, veclen %d\0A\00", align 1
@.str.33.1052 = private unnamed_addr constant [35 x i8] c"Reading mixture weights file '%s'\0A\00", align 1
@.str.34.1060 = private unnamed_addr constant [34 x i8] c"bio_fread(%s) (arraysize) failed\0A\00", align 1
@.str.35.1062 = private unnamed_addr constant [51 x i8] c"#Features streams(%d) != 4 in semi-continuous HMM\0A\00", align 1
@.str.36.1063 = private unnamed_addr constant [116 x i8] c"How can this happen? Someone must have moved this part of the code somewhere! Not my fault! ARCHAN at 20040504 :-)\0A\00", align 1
@.str.37.1064 = private unnamed_addr constant [60 x i8] c"%s: #float32s(%d) doesn't match header dimensions: %d x %d\0A\00", align 1
@.str.38.1065 = private unnamed_addr constant [66 x i8] c"%s: #Mixture Gaussians(%d) doesn't match mean/var parameters(%d)\0A\00", align 1
@.str.39.1066 = private unnamed_addr constant [65 x i8] c"Mixture %d: #Weights(%d) doesn't match #Gaussian components(%d)\0A\00", align 1
@.str.40.1067 = private unnamed_addr constant [34 x i8] c"bio_fread(%s) (arraydata) failed\0A\00", align 1
@.str.41.1068 = private unnamed_addr constant [31 x i8] c"More data than expected in %s\0A\00", align 1
@.str.42.1069 = private unnamed_addr constant [30 x i8] c"Read %d x %d mixture weights\0A\00", align 1
@.str.43.1049 = private unnamed_addr constant [43 x i8] c"Removing uninitialized Gaussian densities\0A\00", align 1
@.str.44.1050 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.46.1051 = private unnamed_addr constant [53 x i8] c"%d densities removed (%d mixtures removed entirely)\0A\00", align 1
@.str.47.1048 = private unnamed_addr constant [25 x i8] c"Applying variance floor\0A\00", align 1
@.str.48.1047 = private unnamed_addr constant [46 x i8] c"Precomputing Mahalanobis distance invariants\0A\00", align 1
@.str.1093 = private unnamed_addr constant [11 x i8] c"src/beam.c\00", align 1
@.str.1098 = private unnamed_addr constant [45 x i8] c"memory alloc failed in fe_init()\0A...exiting\0A\00", align 1
@.str.1.1099 = private unnamed_addr constant [49 x i8] c"MEL SCALE IS CURRENTLY THE ONLY IMPLEMENTATION!\0A\00", align 1
@.str.2.1104 = private unnamed_addr constant [52 x i8] c"memory alloc failed in fe_process_utt()\0A...exiting\0A\00", align 1
@.str.3.1105 = private unnamed_addr constant [85 x i8] c"memory alloc for cep failed in fe_process_utt()\0A\09fe_create_2d(%ld,%d,%d)\0A...exiting\0A\00", align 1
@.str.4.1108 = private unnamed_addr constant [48 x i8] c"memory alloc failed in fe_end_utt()\0A...exiting\0A\00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.1113 = private unnamed_addr constant [21 x i8] c"%s: \22%s\22, line %ld: \00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.1.1116 = private unnamed_addr constant [14 x i8] c"%s: %s(%ld): \00", align 1
@.str.2.1125 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1132 = private unnamed_addr constant [11 x i8] c"-log3table\00", align 1
@USE_LOG3_ADD_TABLE = internal unnamed_addr global i32 1, align 4
@.str.1.1133 = private unnamed_addr constant [12 x i8] c"src/logs3.c\00", align 1
@.str.2.1134 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.3.1135 = private unnamed_addr constant [42 x i8] c"Initializing logbase: %e (add table: %d)\0A\00", align 1
@.str.4.1136 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.5.1137 = private unnamed_addr constant [36 x i8] c"Illegal logbase: %e; must be > 1.0\0A\00", align 1
@add_tbl = internal unnamed_addr global i16* null, align 8
@B = internal unnamed_addr global double 0.000000e+00, align 8
@.str.6.1138 = private unnamed_addr constant [8 x i8] c"WARNING\00", align 1
@.str.7.1139 = private unnamed_addr constant [27 x i8] c"logs3_init() already done\0A\00", align 1
@.str.8.1140 = private unnamed_addr constant [40 x i8] c"logs3_init() already done with base %e\0A\00", align 1
@logB = internal unnamed_addr global double 0.000000e+00, align 8
@invlogB = internal unnamed_addr global double 0.000000e+00, align 8
@invlog10B = internal unnamed_addr global double 0.000000e+00, align 8
@.str.9.1141 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.10.1142 = private unnamed_addr constant [47 x i8] c"Logbase too small: %e; needs int32 addtable[]\0A\00", align 1
@F = internal unnamed_addr global double 0.000000e+00, align 8
@add_tbl_size = internal unnamed_addr global i32 0, align 4
@.str.11.1143 = private unnamed_addr constant [25 x i8] c"Log-Add table size = %d\0A\00", align 1
@.str.12.1148 = private unnamed_addr constant [30 x i8] c"logs3 module not initialized\0A\00", align 1
@.str.1159 = private unnamed_addr constant [14 x i8] c"src/lextree.c\00", align 1
@.str.1.1160 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.2.1161 = private unnamed_addr constant [42 x i8] c"#Nodes allocated(%d) != #nodes freed(%d)\0A\00", align 1
@.str.3.1168 = private unnamed_addr constant [11 x i8] c"lcroot %d\0A\00", align 1
@.str.4.1177 = private unnamed_addr constant [12 x i8] c"FATAL_ERROR\00", align 1
@.str.5.1178 = private unnamed_addr constant [24 x i8] c"#State= %d unsupported\0A\00", align 1
@.str.6.1179 = private unnamed_addr constant [38 x i8] c"Fr %d  #active %d  best %d  wbest %d\0A\00", align 1
@lextree_hmm_propagate.maxNewHeurScore = internal unnamed_addr global i32 -2147483648, align 4
@lextree_hmm_propagate.lastfrm = internal unnamed_addr global i32 -1, align 4
@.str.7.1184 = private unnamed_addr constant [78 x i8] c"Hmm->out.history equals to -1 with score %d and active idx %d, lextree->type\0A\00", align 1
@.str.8.1170 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.9.1169 = private unnamed_addr constant [27 x i8] c"wid(%d)pr(%d)com(%d)ss(%d)\00", align 1

; Function Attrs: noinline nounwind optsize uwtable
define void @kb_init(%struct.kb_t* %kb) local_unnamed_addr #0 {
entry:
  %kbcore1 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 0
  %0 = bitcast %struct.kb_t* %kb to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(504) %0, i8 0, i64 504, i1 false)
  %call = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #34
  %1 = bitcast i8* %call to float*
  %2 = load float, float* %1, align 4, !tbaa !4
  %conv = fpext float %2 to double
  %call2 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #34
  %call3 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #34
  %call4 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)) #34
  %call5 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)) #34
  %call6 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)) #34
  %call7 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)) #34
  %call8 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0)) #34
  %call9 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)) #34
  %call10 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #34
  %call11 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)) #34
  %call12 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)) #34
  %call13 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0)) #34
  %call14 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0)) #34
  %3 = bitcast i8* %call14 to float*
  %4 = load float, float* %3, align 4, !tbaa !4
  %conv15 = fpext float %4 to double
  %call16 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)) #34
  %5 = bitcast i8* %call16 to float*
  %6 = load float, float* %5, align 4, !tbaa !4
  %conv17 = fpext float %6 to double
  %call18 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0)) #34
  %7 = bitcast i8* %call18 to float*
  %8 = load float, float* %7, align 4, !tbaa !4
  %conv19 = fpext float %8 to double
  %call20 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0)) #34
  %9 = bitcast i8* %call20 to float*
  %10 = load float, float* %9, align 4, !tbaa !4
  %conv21 = fpext float %10 to double
  %call22 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0)) #34
  %11 = bitcast i8* %call22 to float*
  %12 = load float, float* %11, align 4, !tbaa !4
  %conv23 = fpext float %12 to double
  %call24 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0)) #34
  %call25 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0)) #34
  %call26 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0)) #34
  %13 = bitcast i8* %call26 to float*
  %14 = load float, float* %13, align 4, !tbaa !4
  %conv27 = fpext float %14 to double
  %call28 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0)) #34
  %call29 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0)) #34
  %15 = bitcast i8* %call29 to float*
  %16 = load float, float* %15, align 4, !tbaa !4
  %conv30 = fpext float %16 to double
  %call31 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0)) #34
  %call32 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i64 0, i64 0)) #34
  %call33 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0)) #34
  %call34 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0)) #34
  %17 = bitcast i8* %call34 to float*
  %18 = load float, float* %17, align 4, !tbaa !4
  %conv35 = fpext float %18 to double
  %call36 = tail call %struct.kbcore_t* @kbcore_init(double %conv, i8* %call2, i8* %call3, i8* %call4, i8* %call5, i8* %call6, i8* %call7, i8* %call8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* %call9, i8* %call10, i8* %call11, i8* %call12, i8* %call13, double %conv15, double %conv17, double %conv19, double %conv21, double %conv23, i8* %call24, i8* %call25, double %conv27, i8* %call28, double %conv30, i8* %call31, i8* %call32, i8* %call33, double %conv35) #34
  store %struct.kbcore_t* %call36, %struct.kbcore_t** %kbcore1, align 8, !tbaa !8
  %cmp = icmp eq %struct.kbcore_t* %call36, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 117, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i64 0, i64 0)) #34
  %.pre = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore1, align 8, !tbaa !8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %19 = phi %struct.kbcore_t* [ %.pre, %if.then ], [ %call36, %entry ]
  %mdef41 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %19, i64 0, i32 1
  %20 = load %struct.mdef_t*, %struct.mdef_t** %mdef41, align 8, !tbaa !14
  %dict42 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %19, i64 0, i32 2
  %21 = load %struct.dict_t*, %struct.dict_t** %dict42, align 8, !tbaa !16
  %lm43 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %19, i64 0, i32 4
  %22 = load %struct.lm_s*, %struct.lm_s** %lm43, align 8, !tbaa !17
  %lmset44 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %19, i64 0, i32 5
  %23 = load %struct.lmset_s*, %struct.lmset_s** %lmset44, align 8, !tbaa !18
  %dict2pid = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %19, i64 0, i32 3
  %24 = load %struct.dict2pid_t*, %struct.dict2pid_t** %dict2pid, align 8, !tbaa !19
  %startwid = getelementptr inbounds %struct.dict_t, %struct.dict_t* %21, i64 0, i32 11
  %25 = load i32, i32* %startwid, align 8, !tbaa !20
  %cmp45 = icmp slt i32 %25, 0
  br i1 %cmp45, label %if.then49, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %finishwid = getelementptr inbounds %struct.dict_t, %struct.dict_t* %21, i64 0, i32 12
  %26 = load i32, i32* %finishwid, align 4, !tbaa !22
  %cmp47 = icmp slt i32 %26, 0
  br i1 %cmp47, label %if.then49, label %if.end50

if.then49:                                        ; preds = %lor.lhs.false, %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 129, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0)) #34
  br label %if.end50

if.end50:                                         ; preds = %if.then49, %lor.lhs.false
  %tobool.not = icmp eq %struct.lmset_s* %23, null
  br i1 %tobool.not, label %if.else, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end50
  %n_lm = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %19, i64 0, i32 12
  %27 = load i32, i32* %n_lm, align 8, !tbaa !23
  %cmp521001 = icmp sgt i32 %27, 0
  br i1 %cmp521001, label %for.body, label %if.end83

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %28 = phi i32 [ %33, %for.inc ], [ %27, %for.cond.preheader ]
  %indvars.iv1025 = phi i64 [ %indvars.iv.next1026, %for.inc ], [ 0, %for.cond.preheader ]
  %lm54 = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %23, i64 %indvars.iv1025, i32 1
  %29 = load %struct.lm_s*, %struct.lm_s** %lm54, align 8, !tbaa !24
  %startlwid = getelementptr inbounds %struct.lm_s, %struct.lm_s* %29, i64 0, i32 5
  %30 = load i16, i16* %startlwid, align 8, !tbaa !26
  %cmp56 = icmp eq i16 %30, -1
  br i1 %cmp56, label %if.then65, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %for.body
  %finishlwid = getelementptr inbounds %struct.lm_s, %struct.lm_s* %29, i64 0, i32 6
  %31 = load i16, i16* %finishlwid, align 2, !tbaa !29
  %cmp63 = icmp eq i16 %31, -1
  br i1 %cmp63, label %if.then65, label %for.inc

if.then65:                                        ; preds = %lor.lhs.false58, %for.body
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 134, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0)) #34
  %name = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %23, i64 %indvars.iv1025, i32 0
  %32 = load i8*, i8** %name, align 8, !tbaa !30
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* %32) #34
  %.pre1027 = load i32, i32* %n_lm, align 8, !tbaa !23
  br label %for.inc

for.inc:                                          ; preds = %lor.lhs.false58, %if.then65
  %33 = phi i32 [ %28, %lor.lhs.false58 ], [ %.pre1027, %if.then65 ]
  %indvars.iv.next1026 = add nuw nsw i64 %indvars.iv1025, 1
  %34 = sext i32 %33 to i64
  %cmp52 = icmp slt i64 %indvars.iv.next1026, %34
  br i1 %cmp52, label %for.body, label %if.end83, !llvm.loop !31

if.else:                                          ; preds = %if.end50
  %tobool69.not = icmp eq %struct.lm_s* %22, null
  br i1 %tobool69.not, label %if.end83, label %if.then70

if.then70:                                        ; preds = %if.else
  %startlwid71 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %22, i64 0, i32 5
  %35 = load i16, i16* %startlwid71, align 8, !tbaa !26
  %cmp73 = icmp eq i16 %35, -1
  br i1 %cmp73, label %if.then80, label %lor.lhs.false75

lor.lhs.false75:                                  ; preds = %if.then70
  %finishlwid76 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %22, i64 0, i32 6
  %36 = load i16, i16* %finishlwid76, align 2, !tbaa !29
  %cmp78 = icmp eq i16 %36, -1
  br i1 %cmp78, label %if.then80, label %if.end83

if.then80:                                        ; preds = %lor.lhs.false75, %if.then70
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 138, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0)) #34
  br label %if.end83

if.end83:                                         ; preds = %for.inc, %for.cond.preheader, %if.else, %if.then80, %lor.lhs.false75
  %tmat = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %19, i64 0, i32 11
  %37 = load %struct.tmat_t*, %struct.tmat_t** %tmat, align 8, !tbaa !33
  %call84 = tail call i32 @tmat_chk_1skip(%struct.tmat_t* %37) #34
  %cmp85 = icmp slt i32 %call84, 0
  br i1 %cmp85, label %if.then87, label %if.end88

if.then87:                                        ; preds = %if.end83
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 144, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0)) #34
  br label %if.end88

if.end88:                                         ; preds = %if.then87, %if.end83
  br i1 %tobool.not, label %if.else150, label %for.cond91.preheader

for.cond91.preheader:                             ; preds = %if.end88
  %n_lm92 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %19, i64 0, i32 12
  %38 = load i32, i32* %n_lm92, align 8, !tbaa !23
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %21, i64 0, i32 4
  %finishwid130 = getelementptr inbounds %struct.dict_t, %struct.dict_t* %21, i64 0, i32 12
  %cmp93999 = icmp sgt i32 %38, 0
  br i1 %cmp93999, label %for.body95.preheader, label %if.end192

for.body95.preheader:                             ; preds = %for.cond91.preheader
  %wide.trip.count1023 = zext i32 %38 to i64
  br label %for.body95

for.body95:                                       ; preds = %for.body95.preheader, %for.inc147
  %indvars.iv1021 = phi i64 [ 0, %for.body95.preheader ], [ %indvars.iv.next1022, %for.inc147 ]
  %lm98 = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %23, i64 %indvars.iv1021, i32 1
  %39 = load %struct.lm_s*, %struct.lm_s** %lm98, align 8, !tbaa !24
  %ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %39, i64 0, i32 9
  %40 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %startlwid102 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %39, i64 0, i32 5
  %41 = load i16, i16* %startlwid102, align 8, !tbaa !26
  %idxprom103 = zext i16 %41 to i64
  %dictwid = getelementptr inbounds %struct.ug_t, %struct.ug_t* %40, i64 %idxprom103, i32 0
  store i32 -1, i32* %dictwid, align 4, !tbaa !35
  %finishlwid112 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %39, i64 0, i32 6
  %42 = load i16, i16* %finishlwid112, align 2, !tbaa !29
  %idxprom113 = zext i16 %42 to i64
  %dictwid115 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %40, i64 %idxprom113, i32 0
  store i32 -1, i32* %dictwid115, align 4, !tbaa !35
  %w.0993 = load i32, i32* %startwid, align 4, !tbaa !37
  %cmp118994 = icmp sgt i32 %w.0993, -1
  br i1 %cmp118994, label %for.body120.lr.ph, label %for.end129

for.body120.lr.ph:                                ; preds = %for.body95
  %dict2lmwid = getelementptr inbounds %struct.lm_s, %struct.lm_s* %39, i64 0, i32 38
  %43 = load i16*, i16** %dict2lmwid, align 8, !tbaa !38
  %44 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  br label %for.body120

for.body120:                                      ; preds = %for.body120.lr.ph, %for.body120
  %w.0995 = phi i32 [ %w.0993, %for.body120.lr.ph ], [ %w.0, %for.body120 ]
  %idxprom124954 = zext i32 %w.0995 to i64
  %arrayidx125 = getelementptr inbounds i16, i16* %43, i64 %idxprom124954
  store i16 -1, i16* %arrayidx125, align 2, !tbaa !40
  %alt = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %44, i64 %idxprom124954, i32 3
  %w.0 = load i32, i32* %alt, align 4, !tbaa !37
  %cmp118 = icmp sgt i32 %w.0, -1
  br i1 %cmp118, label %for.body120, label %for.end129, !llvm.loop !41

for.end129:                                       ; preds = %for.body120, %for.body95
  %w.1996 = load i32, i32* %finishwid130, align 4, !tbaa !37
  %cmp132997 = icmp sgt i32 %w.1996, -1
  br i1 %cmp132997, label %for.body134.lr.ph, label %for.inc147

for.body134.lr.ph:                                ; preds = %for.end129
  %dict2lmwid138 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %39, i64 0, i32 38
  %45 = load i16*, i16** %dict2lmwid138, align 8, !tbaa !38
  %46 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  br label %for.body134

for.body134:                                      ; preds = %for.body134.lr.ph, %for.body134
  %w.1998 = phi i32 [ %w.1996, %for.body134.lr.ph ], [ %w.1, %for.body134 ]
  %idxprom139955 = zext i32 %w.1998 to i64
  %arrayidx140 = getelementptr inbounds i16, i16* %45, i64 %idxprom139955
  store i16 -1, i16* %arrayidx140, align 2, !tbaa !40
  %alt145 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %46, i64 %idxprom139955, i32 3
  %w.1 = load i32, i32* %alt145, align 4, !tbaa !37
  %cmp132 = icmp sgt i32 %w.1, -1
  br i1 %cmp132, label %for.body134, label %for.inc147, !llvm.loop !42

for.inc147:                                       ; preds = %for.body134, %for.end129
  %indvars.iv.next1022 = add nuw nsw i64 %indvars.iv1021, 1
  %exitcond1024.not = icmp eq i64 %indvars.iv.next1022, %wide.trip.count1023
  br i1 %exitcond1024.not, label %if.end192, label %for.body95, !llvm.loop !43

if.else150:                                       ; preds = %if.end88
  %tobool151.not = icmp eq %struct.lm_s* %22, null
  br i1 %tobool151.not, label %if.end192, label %if.then152

if.then152:                                       ; preds = %if.else150
  %ug153 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %22, i64 0, i32 9
  %47 = load %struct.ug_t*, %struct.ug_t** %ug153, align 8, !tbaa !34
  %startlwid154 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %22, i64 0, i32 5
  %48 = load i16, i16* %startlwid154, align 8, !tbaa !26
  %idxprom155 = zext i16 %48 to i64
  %dictwid157 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %47, i64 %idxprom155, i32 0
  store i32 -1, i32* %dictwid157, align 4, !tbaa !35
  %finishlwid159 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %22, i64 0, i32 6
  %49 = load i16, i16* %finishlwid159, align 2, !tbaa !29
  %idxprom160 = zext i16 %49 to i64
  %dictwid162 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %47, i64 %idxprom160, i32 0
  store i32 -1, i32* %dictwid162, align 4, !tbaa !35
  %w.2990 = load i32, i32* %startwid, align 4, !tbaa !37
  %cmp165991 = icmp sgt i32 %w.2990, -1
  br i1 %cmp165991, label %for.body167.lr.ph, label %for.end176

for.body167.lr.ph:                                ; preds = %if.then152
  %word172 = getelementptr inbounds %struct.dict_t, %struct.dict_t* %21, i64 0, i32 4
  %dict2lmwid168 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %19, i64 0, i32 7
  %50 = load i16*, i16** %dict2lmwid168, align 8, !tbaa !44
  %51 = load %struct.dictword_t*, %struct.dictword_t** %word172, align 8, !tbaa !39
  br label %for.body167

for.body167:                                      ; preds = %for.body167.lr.ph, %for.body167
  %w.2992 = phi i32 [ %w.2990, %for.body167.lr.ph ], [ %w.2, %for.body167 ]
  %idxprom169952 = zext i32 %w.2992 to i64
  %arrayidx170 = getelementptr inbounds i16, i16* %50, i64 %idxprom169952
  store i16 -1, i16* %arrayidx170, align 2, !tbaa !40
  %alt175 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %51, i64 %idxprom169952, i32 3
  %w.2 = load i32, i32* %alt175, align 4, !tbaa !37
  %cmp165 = icmp sgt i32 %w.2, -1
  br i1 %cmp165, label %for.body167, label %for.end176, !llvm.loop !45

for.end176:                                       ; preds = %for.body167, %if.then152
  %finishwid177 = getelementptr inbounds %struct.dict_t, %struct.dict_t* %21, i64 0, i32 12
  %w.3987 = load i32, i32* %finishwid177, align 4, !tbaa !37
  %cmp179988 = icmp sgt i32 %w.3987, -1
  br i1 %cmp179988, label %for.body181.lr.ph, label %if.end192

for.body181.lr.ph:                                ; preds = %for.end176
  %word186 = getelementptr inbounds %struct.dict_t, %struct.dict_t* %21, i64 0, i32 4
  %dict2lmwid182 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %19, i64 0, i32 7
  %52 = load i16*, i16** %dict2lmwid182, align 8, !tbaa !44
  %53 = load %struct.dictword_t*, %struct.dictword_t** %word186, align 8, !tbaa !39
  br label %for.body181

for.body181:                                      ; preds = %for.body181.lr.ph, %for.body181
  %w.3989 = phi i32 [ %w.3987, %for.body181.lr.ph ], [ %w.3, %for.body181 ]
  %idxprom183953 = zext i32 %w.3989 to i64
  %arrayidx184 = getelementptr inbounds i16, i16* %52, i64 %idxprom183953
  store i16 -1, i16* %arrayidx184, align 2, !tbaa !40
  %alt189 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %53, i64 %idxprom183953, i32 3
  %w.3 = load i32, i32* %alt189, align 4, !tbaa !37
  %cmp179 = icmp sgt i32 %w.3, -1
  br i1 %cmp179, label %for.body181, label %if.end192, !llvm.loop !46

if.end192:                                        ; preds = %for.inc147, %for.body181, %for.cond91.preheader, %for.end176, %if.else150
  %54 = load %struct.mdef_t*, %struct.mdef_t** %mdef41, align 8, !tbaa !14
  %sil194 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %54, i64 0, i32 14
  %55 = load i8, i8* %sil194, align 8, !tbaa !47
  %cmp196 = icmp slt i8 %55, 0
  br i1 %cmp196, label %if.then198, label %if.end199

if.then198:                                       ; preds = %if.end192
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 173, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0)) #34
  br label %if.end199

if.end199:                                        ; preds = %if.then198, %if.end192
  %n_sen = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %20, i64 0, i32 4
  %56 = load i32, i32* %n_sen, align 8, !tbaa !49
  %conv200 = sext i32 %56 to i64
  %call201 = tail call i8* @__ckd_calloc__(i64 %conv200, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 176) #34
  %sen_active = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 11
  %57 = bitcast i32** %sen_active to i8**
  store i8* %call201, i8** %57, align 8, !tbaa !50
  %58 = load i32, i32* %n_sen, align 8, !tbaa !49
  %conv203 = sext i32 %58 to i64
  %call204 = tail call i8* @__ckd_calloc__(i64 %conv203, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 177) #34
  %rec_sen_active = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 12
  %59 = bitcast i32** %rec_sen_active to i8**
  store i8* %call204, i8** %59, align 8, !tbaa !51
  %n_sseq = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %20, i64 0, i32 10
  %60 = load i32, i32* %n_sseq, align 8, !tbaa !52
  %conv205 = sext i32 %60 to i64
  %call206 = tail call i8* @__ckd_calloc__(i64 %conv205, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 178) #34
  %ssid_active = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 9
  %61 = bitcast i32** %ssid_active to i8**
  store i8* %call206, i8** %61, align 8, !tbaa !53
  %n_comsseq = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %24, i64 0, i32 7
  %62 = load i32, i32* %n_comsseq, align 4, !tbaa !54
  %conv207 = sext i32 %62 to i64
  %call208 = tail call i8* @__ckd_calloc__(i64 %conv207, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 179) #34
  %comssid_active = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 10
  %63 = bitcast i32** %comssid_active to i8**
  store i8* %call208, i8** %63, align 8, !tbaa !56
  %n_ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %20, i64 0, i32 0
  %64 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %add = add nsw i32 %64, 1
  %conv209 = sext i32 %add to i64
  %call210 = tail call i8* @__ckd_calloc__(i64 %conv209, i64 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 182) #34
  %65 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %add212 = add nsw i32 %65, 31
  %shr = ashr i32 %add212, 5
  %conv213 = sext i32 %shr to i64
  %call214 = tail call i8* @__ckd_calloc__(i64 %conv213, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 183) #34
  %66 = bitcast i8* %call214 to i32*
  %n_word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %21, i64 0, i32 7
  %67 = load i32, i32* %n_word, align 4, !tbaa !58
  %cmp216985 = icmp sgt i32 %67, 0
  br i1 %cmp216985, label %for.body218.lr.ph, label %for.end241

for.body218.lr.ph:                                ; preds = %if.end199
  %ciphone227 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %20, i64 0, i32 7
  %word219 = getelementptr inbounds %struct.dict_t, %struct.dict_t* %21, i64 0, i32 4
  %68 = load %struct.dictword_t*, %struct.dictword_t** %word219, align 8, !tbaa !39
  %69 = load %struct.ciphone_t*, %struct.ciphone_t** %ciphone227, align 8, !tbaa !59
  br label %for.body218

for.body218:                                      ; preds = %for.body218.lr.ph, %for.inc239
  %70 = phi i32 [ %67, %for.body218.lr.ph ], [ %76, %for.inc239 ]
  %indvars.iv1019 = phi i64 [ 0, %for.body218.lr.ph ], [ %indvars.iv.next1020, %for.inc239 ]
  %ciphone = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %68, i64 %indvars.iv1019, i32 1
  %71 = load i8*, i8** %ciphone, align 8, !tbaa !60
  %pronlen = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %68, i64 %indvars.iv1019, i32 2
  %72 = load i32, i32* %pronlen, align 8, !tbaa !62
  %sub = add nsw i32 %72, -1
  %idxprom225 = sext i32 %sub to i64
  %arrayidx226 = getelementptr inbounds i8, i8* %71, i64 %idxprom225
  %73 = load i8, i8* %arrayidx226, align 1, !tbaa !63
  %conv228 = sext i8 %73 to i32
  %idxprom229 = sext i8 %73 to i64
  %filler = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %69, i64 %idxprom229, i32 1
  %74 = load i32, i32* %filler, align 8, !tbaa !64
  %tobool231.not = icmp eq i32 %74, 0
  br i1 %tobool231.not, label %if.then232, label %for.inc239

if.then232:                                       ; preds = %for.body218
  %and = and i32 %conv228, 31
  %shl = shl nuw i32 1, %and
  %shr235 = ashr i32 %conv228, 5
  %idxprom236 = sext i32 %shr235 to i64
  %arrayidx237 = getelementptr inbounds i32, i32* %66, i64 %idxprom236
  %75 = load i32, i32* %arrayidx237, align 4, !tbaa !37
  %or = or i32 %75, %shl
  store i32 %or, i32* %arrayidx237, align 4, !tbaa !37
  %.pre1028 = load i32, i32* %n_word, align 4, !tbaa !58
  br label %for.inc239

for.inc239:                                       ; preds = %for.body218, %if.then232
  %76 = phi i32 [ %70, %for.body218 ], [ %.pre1028, %if.then232 ]
  %indvars.iv.next1020 = add nuw nsw i64 %indvars.iv1019, 1
  %77 = sext i32 %76 to i64
  %cmp216 = icmp slt i64 %indvars.iv.next1020, %77
  br i1 %cmp216, label %for.body218, label %for.end241, !llvm.loop !66

for.end241:                                       ; preds = %for.inc239, %if.end199
  %sil242 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %20, i64 0, i32 14
  %78 = load i8, i8* %sil242, align 8, !tbaa !47
  %conv243 = sext i8 %78 to i32
  %and244 = and i32 %conv243, 31
  %shl245 = shl nuw i32 1, %and244
  %shr247 = ashr i32 %conv243, 5
  %idxprom248 = sext i32 %shr247 to i64
  %arrayidx249 = getelementptr inbounds i32, i32* %66, i64 %idxprom248
  %79 = load i32, i32* %arrayidx249, align 4, !tbaa !37
  %or250 = or i32 %shl245, %79
  store i32 %or250, i32* %arrayidx249, align 4, !tbaa !37
  %80 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp254980 = icmp sgt i32 %80, 0
  br i1 %cmp254980, label %for.body256, label %for.end273

for.body256:                                      ; preds = %for.end241, %for.inc271
  %81 = phi i32 [ %83, %for.inc271 ], [ %80, %for.end241 ]
  %conv252983 = phi i32 [ %conv252, %for.inc271 ], [ 0, %for.end241 ]
  %ci.0982 = phi i8 [ %inc272, %for.inc271 ], [ 0, %for.end241 ]
  %n_lc.0981 = phi i32 [ %n_lc.1, %for.inc271 ], [ 0, %for.end241 ]
  %shr258 = ashr i32 %conv252983, 5
  %idxprom259 = sext i32 %shr258 to i64
  %arrayidx260 = getelementptr inbounds i32, i32* %66, i64 %idxprom259
  %82 = load i32, i32* %arrayidx260, align 4, !tbaa !37
  %and262 = and i32 %conv252983, 31
  %shl263 = shl nuw i32 1, %and262
  %and264 = and i32 %82, %shl263
  %tobool265.not = icmp eq i32 %and264, 0
  br i1 %tobool265.not, label %for.inc271, label %if.then266

if.then266:                                       ; preds = %for.body256
  %inc267 = add nsw i32 %n_lc.0981, 1
  %idxprom268 = sext i32 %n_lc.0981 to i64
  %arrayidx269 = getelementptr inbounds i8, i8* %call210, i64 %idxprom268
  store i8 %ci.0982, i8* %arrayidx269, align 1, !tbaa !63
  %.pre1029 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  br label %for.inc271

for.inc271:                                       ; preds = %for.body256, %if.then266
  %83 = phi i32 [ %.pre1029, %if.then266 ], [ %81, %for.body256 ]
  %n_lc.1 = phi i32 [ %inc267, %if.then266 ], [ %n_lc.0981, %for.body256 ]
  %inc272 = add i8 %ci.0982, 1
  %conv252 = sext i8 %inc272 to i32
  %cmp254 = icmp sgt i32 %83, %conv252
  br i1 %cmp254, label %for.body256, label %for.end273, !llvm.loop !67

for.end273:                                       ; preds = %for.inc271, %for.end241
  %n_lc.0.lcssa = phi i32 [ 0, %for.end241 ], [ %n_lc.1, %for.inc271 ]
  %idxprom274 = sext i32 %n_lc.0.lcssa to i64
  %arrayidx275 = getelementptr inbounds i8, i8* %call210, i64 %idxprom274
  store i8 -1, i8* %arrayidx275, align 1, !tbaa !63
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 197, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40, i64 0, i64 0)) #34
  %call276 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0)) #34
  %84 = bitcast i8* %call276 to i32*
  %85 = load i32, i32* %84, align 4, !tbaa !37
  %n_lextree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 1
  store i32 %85, i32* %n_lextree, align 8, !tbaa !68
  %cmp278 = icmp slt i32 %85, 1
  br i1 %cmp278, label %if.then280, label %if.end283

if.then280:                                       ; preds = %for.end273
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 201, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0)) #34
  %86 = load i32, i32* %n_lextree, align 8, !tbaa !68
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.43, i64 0, i64 0), i32 %86) #34
  store i32 1, i32* %n_lextree, align 8, !tbaa !68
  br label %if.end283

if.end283:                                        ; preds = %if.then280, %for.end273
  %87 = load i32, i32* %n_word, align 4, !tbaa !58
  %conv285 = sext i32 %87 to i64
  %call286 = tail call i8* @__ckd_calloc__(i64 %conv285, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 208) #34
  %88 = bitcast i8* %call286 to %struct.arraysize_t*
  br i1 %tobool.not, label %if.else377, label %if.then288

if.then288:                                       ; preds = %if.end283
  %n_lm289 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %19, i64 0, i32 12
  %89 = load i32, i32* %n_lm289, align 8, !tbaa !23
  %90 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %mul = mul nsw i32 %90, %89
  %conv291 = sext i32 %mul to i64
  %call292 = tail call i8* @__ckd_calloc__(i64 %conv291, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 212) #34
  %ugtreeMulti = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 3
  %91 = bitcast %struct.lextree_t*** %ugtreeMulti to i8**
  store i8* %call292, i8** %91, align 8, !tbaa !69
  %92 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %conv294 = sext i32 %92 to i64
  %call295 = tail call i8* @__ckd_calloc__(i64 %conv294, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 214) #34
  %ugtree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 2
  %93 = bitcast %struct.lextree_t*** %ugtree to i8**
  store i8* %call295, i8** %93, align 8, !tbaa !70
  %94 = load i32, i32* %n_lm289, align 8, !tbaa !23
  %cmp298978 = icmp sgt i32 %94, 0
  br i1 %cmp298978, label %for.body300, label %if.end426

for.body300:                                      ; preds = %if.then288, %for.inc374
  %i.2979 = phi i32 [ %inc375, %for.inc374 ], [ 0, %if.then288 ]
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 217, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %idxprom301 = sext i32 %i.2979 to i64
  %name303 = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %23, i64 %idxprom301, i32 0
  %95 = load i8*, i8** %name303, align 8, !tbaa !30
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.44, i64 0, i64 0), i32 %i.2979, i8* %95) #34
  %96 = load i32, i32* %n_word, align 4, !tbaa !58
  %cmp306971 = icmp sgt i32 %96, 0
  br i1 %cmp306971, label %for.body308.preheader, label %for.end315

for.body308.preheader:                            ; preds = %for.body300
  %97 = zext i32 %96 to i64
  %98 = shl nuw nsw i64 %97, 3
  call void @llvm.memset.p0i8.i64(i8* align 4 %call286, i8 -1, i64 %98, i1 false)
  br label %for.end315

for.end315:                                       ; preds = %for.body308.preheader, %for.body300
  %lm318 = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %23, i64 %idxprom301, i32 1
  %99 = load %struct.lm_s*, %struct.lm_s** %lm318, align 8, !tbaa !24
  %call319 = tail call i32 @lm_ug_wordprob(%struct.lm_s* %99, %struct.dict_t* nonnull %21, i32 -2147483648, %struct.arraysize_t* %88) #34
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 224, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.45, i64 0, i64 0), i32 %call319) #34
  %cmp320 = icmp slt i32 %call319, 1
  br i1 %cmp320, label %if.then322, label %if.end326

if.then322:                                       ; preds = %for.end315
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 226, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0)) #34
  %100 = load i8*, i8** %name303, align 8, !tbaa !30
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i64 0, i64 0), i32 %call319, i8* %100) #34
  br label %if.end326

if.end326:                                        ; preds = %if.then322, %for.end315
  %call327 = tail call i32 @wid_wordprob2alt(%struct.dict_t* nonnull %21, %struct.arraysize_t* %88, i32 %call319) #34
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 228, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.47, i64 0, i64 0), i32 %call327) #34
  %call328 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.48, i64 0, i64 0)) #34
  %101 = bitcast i8* %call328 to i32*
  %102 = load i32, i32* %101, align 4, !tbaa !37
  %cmp329 = icmp eq i32 %102, 0
  br i1 %cmp329, label %for.cond332.preheader, label %if.end342

for.cond332.preheader:                            ; preds = %if.end326
  %cmp333973 = icmp sgt i32 %call327, 0
  br i1 %cmp333973, label %for.body335.preheader, label %if.end342

for.body335.preheader:                            ; preds = %for.cond332.preheader
  %103 = zext i32 %call327 to i64
  br label %for.body335

for.body335:                                      ; preds = %for.body335.preheader, %for.body335
  %indvars.iv1016 = phi i64 [ 0, %for.body335.preheader ], [ %indvars.iv.next1017, %for.body335 ]
  %prob338 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %88, i64 %indvars.iv1016, i32 1
  store i32 -1, i32* %prob338, align 4, !tbaa !71
  %indvars.iv.next1017 = add nuw nsw i64 %indvars.iv1016, 1
  %exitcond1018.not = icmp eq i64 %indvars.iv.next1017, %103
  br i1 %exitcond1018.not, label %if.end342, label %for.body335, !llvm.loop !73

if.end342:                                        ; preds = %for.body335, %for.cond332.preheader, %if.end326
  %i.4 = phi i32 [ %i.2979, %if.end326 ], [ 0, %for.cond332.preheader ], [ %call327, %for.body335 ]
  %idxprom362 = sext i32 %i.4 to i64
  %name364 = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %23, i64 %idxprom362, i32 0
  %104 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %cmp345976 = icmp sgt i32 %104, 0
  br i1 %cmp345976, label %for.body347, label %for.inc374

for.body347:                                      ; preds = %if.end342, %for.body347
  %j.1977 = phi i32 [ %inc372, %for.body347 ], [ 0, %if.end342 ]
  %call348 = tail call %struct.lextree_t* @lextree_build(%struct.kbcore_t* %19, %struct.arraysize_t* %88, i32 %call327, i8* %call210) #34
  %105 = load %struct.lextree_t**, %struct.lextree_t*** %ugtreeMulti, align 8, !tbaa !69
  %106 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %mul351 = mul nsw i32 %106, %i.4
  %add352 = add nsw i32 %mul351, %j.1977
  %idxprom353 = sext i32 %add352 to i64
  %arrayidx354 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %105, i64 %idxprom353
  store %struct.lextree_t* %call348, %struct.lextree_t** %arrayidx354, align 8, !tbaa !74
  %107 = load %struct.lextree_t**, %struct.lextree_t*** %ugtreeMulti, align 8, !tbaa !69
  %arrayidx360 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %107, i64 %idxprom353
  %108 = load %struct.lextree_t*, %struct.lextree_t** %arrayidx360, align 8, !tbaa !74
  %type = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %108, i64 0, i32 0
  store i32 0, i32* %type, align 8, !tbaa !75
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 237, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %109 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %110 = load i8*, i8** %name364, align 8, !tbaa !30
  %111 = load %struct.lextree_t**, %struct.lextree_t*** %ugtreeMulti, align 8, !tbaa !69
  %mul367 = mul nsw i32 %109, %i.4
  %add368 = add nsw i32 %mul367, %j.1977
  %idxprom369 = sext i32 %add368 to i64
  %arrayidx370 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %111, i64 %idxprom369
  %112 = load %struct.lextree_t*, %struct.lextree_t** %arrayidx370, align 8, !tbaa !74
  %n_node = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %112, i64 0, i32 4
  %113 = load i32, i32* %n_node, align 4, !tbaa !77
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.49, i64 0, i64 0), i32 %109, i32 %i.4, i8* %110, i32 %113) #34
  %inc372 = add nuw nsw i32 %j.1977, 1
  %114 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %cmp345 = icmp slt i32 %inc372, %114
  br i1 %cmp345, label %for.body347, label %for.inc374, !llvm.loop !78

for.inc374:                                       ; preds = %for.body347, %if.end342
  %inc375 = add nsw i32 %i.4, 1
  %115 = load i32, i32* %n_lm289, align 8, !tbaa !23
  %cmp298 = icmp slt i32 %inc375, %115
  br i1 %cmp298, label %for.body300, label %if.end426, !llvm.loop !79

if.else377:                                       ; preds = %if.end283
  %tobool378.not = icmp eq %struct.lm_s* %22, null
  br i1 %tobool378.not, label %if.end426, label %if.then379

if.then379:                                       ; preds = %if.else377
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 243, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i64 0, i64 0)) #34
  %call380 = tail call i32 @lm_ug_wordprob(%struct.lm_s* nonnull %22, %struct.dict_t* nonnull %21, i32 -2147483648, %struct.arraysize_t* %88) #34
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 246, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.51, i64 0, i64 0), i32 %call380) #34
  %cmp381 = icmp slt i32 %call380, 1
  br i1 %cmp381, label %if.then383, label %if.end384

if.then383:                                       ; preds = %if.then379
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 248, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.52, i64 0, i64 0), i32 %call380) #34
  br label %if.end384

if.end384:                                        ; preds = %if.then383, %if.then379
  %call385 = tail call i32 @wid_wordprob2alt(%struct.dict_t* nonnull %21, %struct.arraysize_t* %88, i32 %call380) #34
  %call386 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.48, i64 0, i64 0)) #34
  %116 = bitcast i8* %call386 to i32*
  %117 = load i32, i32* %116, align 4, !tbaa !37
  %cmp387 = icmp eq i32 %117, 0
  %cmp391969 = icmp sgt i32 %call385, 0
  %or.cond = select i1 %cmp387, i1 %cmp391969, i1 false
  br i1 %or.cond, label %for.body393.preheader, label %if.end400

for.body393.preheader:                            ; preds = %if.end384
  %wide.trip.count = zext i32 %call385 to i64
  br label %for.body393

for.body393:                                      ; preds = %for.body393.preheader, %for.body393
  %indvars.iv1012 = phi i64 [ 0, %for.body393.preheader ], [ %indvars.iv.next1013, %for.body393 ]
  %prob396 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %88, i64 %indvars.iv1012, i32 1
  store i32 -1, i32* %prob396, align 4, !tbaa !71
  %indvars.iv.next1013 = add nuw nsw i64 %indvars.iv1012, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next1013, %wide.trip.count
  br i1 %exitcond.not, label %if.end400, label %for.body393, !llvm.loop !80

if.end400:                                        ; preds = %for.body393, %if.end384
  %118 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %conv402 = sext i32 %118 to i64
  %call403 = tail call i8* @__ckd_calloc__(i64 %conv402, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 258) #34
  %ugtree404 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 2
  %119 = bitcast %struct.lextree_t*** %ugtree404 to i8**
  store i8* %call403, i8** %119, align 8, !tbaa !70
  %120 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %cmp407967 = icmp sgt i32 %120, 0
  br i1 %cmp407967, label %for.body409, label %for.end420

for.body409:                                      ; preds = %if.end400, %for.body409
  %indvars.iv1010 = phi i64 [ %indvars.iv.next1011, %for.body409 ], [ 0, %if.end400 ]
  %call410 = tail call %struct.lextree_t* @lextree_build(%struct.kbcore_t* %19, %struct.arraysize_t* %88, i32 %call385, i8* %call210) #34
  %121 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree404, align 8, !tbaa !70
  %arrayidx413 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %121, i64 %indvars.iv1010
  store %struct.lextree_t* %call410, %struct.lextree_t** %arrayidx413, align 8, !tbaa !74
  %122 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree404, align 8, !tbaa !70
  %arrayidx416 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %122, i64 %indvars.iv1010
  %123 = load %struct.lextree_t*, %struct.lextree_t** %arrayidx416, align 8, !tbaa !74
  %type417 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %123, i64 0, i32 0
  store i32 0, i32* %type417, align 8, !tbaa !75
  %indvars.iv.next1011 = add nuw nsw i64 %indvars.iv1010, 1
  %124 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %125 = sext i32 %124 to i64
  %cmp407 = icmp slt i64 %indvars.iv.next1011, %125
  br i1 %cmp407, label %for.body409, label %for.end420, !llvm.loop !81

for.end420:                                       ; preds = %for.body409, %if.end400
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 263, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %126 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %127 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree404, align 8, !tbaa !70
  %128 = load %struct.lextree_t*, %struct.lextree_t** %127, align 8, !tbaa !74
  %n_node424 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %128, i64 0, i32 4
  %129 = load i32, i32* %n_node424, align 4, !tbaa !77
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.53, i64 0, i64 0), i32 %126, i32 %129) #34
  br label %if.end426

if.end426:                                        ; preds = %for.inc374, %if.then288, %if.else377, %for.end420
  %filler_start = getelementptr inbounds %struct.dict_t, %struct.dict_t* %21, i64 0, i32 8
  %130 = load i32, i32* %filler_start, align 8, !tbaa !82
  %filler_end = getelementptr inbounds %struct.dict_t, %struct.dict_t* %21, i64 0, i32 9
  %fillpen = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %19, i64 0, i32 6
  %131 = load i32, i32* %filler_end, align 4, !tbaa !83
  %cmp428.not963 = icmp sgt i32 %130, %131
  br i1 %cmp428.not963, label %for.end445, label %for.body430

for.body430:                                      ; preds = %if.end426, %for.inc443
  %i.7965 = phi i32 [ %inc444, %for.inc443 ], [ %130, %if.end426 ]
  %n.0964 = phi i32 [ %n.1, %for.inc443 ], [ 0, %if.end426 ]
  %call431 = tail call i32 @dict_filler_word(%struct.dict_t* nonnull %21, i32 %i.7965) #34
  %tobool432.not = icmp eq i32 %call431, 0
  br i1 %tobool432.not, label %for.inc443, label %if.then433

if.then433:                                       ; preds = %for.body430
  %idxprom434 = sext i32 %n.0964 to i64
  %wid436 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %88, i64 %idxprom434, i32 0
  store i32 %i.7965, i32* %wid436, align 4, !tbaa !84
  %132 = load %struct.fillpen_t*, %struct.fillpen_t** %fillpen, align 8, !tbaa !85
  %call437 = tail call i32 @fillpen(%struct.fillpen_t* %132, i32 %i.7965) #34
  %prob440 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %88, i64 %idxprom434, i32 1
  store i32 %call437, i32* %prob440, align 4, !tbaa !71
  %inc441 = add nsw i32 %n.0964, 1
  br label %for.inc443

for.inc443:                                       ; preds = %for.body430, %if.then433
  %n.1 = phi i32 [ %inc441, %if.then433 ], [ %n.0964, %for.body430 ]
  %inc444 = add nsw i32 %i.7965, 1
  %133 = load i32, i32* %filler_end, align 4, !tbaa !83
  %cmp428.not.not = icmp slt i32 %i.7965, %133
  br i1 %cmp428.not.not, label %for.body430, label %for.end445, !llvm.loop !86

for.end445:                                       ; preds = %for.inc443, %if.end426
  %n.0.lcssa = phi i32 [ 0, %if.end426 ], [ %n.1, %for.inc443 ]
  %134 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %conv447 = sext i32 %134 to i64
  %call448 = tail call i8* @__ckd_calloc__(i64 %conv447, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 281) #34
  %fillertree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 4
  %135 = bitcast %struct.lextree_t*** %fillertree to i8**
  store i8* %call448, i8** %135, align 8, !tbaa !87
  %136 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %cmp451961 = icmp sgt i32 %136, 0
  br i1 %cmp451961, label %for.body453, label %for.end464

for.body453:                                      ; preds = %for.end445, %for.body453
  %indvars.iv1008 = phi i64 [ %indvars.iv.next1009, %for.body453 ], [ 0, %for.end445 ]
  %call454 = tail call %struct.lextree_t* @lextree_build(%struct.kbcore_t* %19, %struct.arraysize_t* %88, i32 %n.0.lcssa, i8* null) #34
  %137 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %arrayidx457 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %137, i64 %indvars.iv1008
  store %struct.lextree_t* %call454, %struct.lextree_t** %arrayidx457, align 8, !tbaa !74
  %138 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %arrayidx460 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %138, i64 %indvars.iv1008
  %139 = load %struct.lextree_t*, %struct.lextree_t** %arrayidx460, align 8, !tbaa !74
  %type461 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %139, i64 0, i32 0
  store i32 -1, i32* %type461, align 8, !tbaa !75
  %indvars.iv.next1009 = add nuw nsw i64 %indvars.iv1008, 1
  %140 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %141 = sext i32 %140 to i64
  %cmp451 = icmp slt i64 %indvars.iv.next1009, %141
  br i1 %cmp451, label %for.body453, label %for.end464, !llvm.loop !88

for.end464:                                       ; preds = %for.body453, %for.end445
  tail call void @ckd_free(i8* %call286) #34
  tail call void @ckd_free(i8* %call210) #34
  tail call void @ckd_free(i8* %call214) #34
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 291, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %142 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %143 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %144 = load %struct.lextree_t*, %struct.lextree_t** %143, align 8, !tbaa !74
  %n_node468 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %144, i64 0, i32 4
  %145 = load i32, i32* %n_node468, align 4, !tbaa !77
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.54, i64 0, i64 0), i32 %142, i32 %145) #34
  %call469 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i64 0, i64 0)) #34
  %146 = bitcast i8* %call469 to i32*
  %147 = load i32, i32* %146, align 4, !tbaa !37
  %tobool470.not = icmp eq i32 %147, 0
  br i1 %tobool470.not, label %if.end500, label %if.then471

if.then471:                                       ; preds = %for.end464
  br i1 %tobool.not, label %if.end474, label %if.then473

if.then473:                                       ; preds = %if.then471
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 298, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.56, i64 0, i64 0)) #34
  br label %if.end474

if.end474:                                        ; preds = %if.then473, %if.then471
  %ugtree481 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 2
  %148 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %cmp477959 = icmp sgt i32 %148, 0
  br i1 %cmp477959, label %for.body479, label %for.end498

for.cond487.preheader:                            ; preds = %for.body479
  %cmp489957 = icmp sgt i32 %154, 0
  br i1 %cmp489957, label %for.body491, label %for.end498

for.body479:                                      ; preds = %if.end474, %for.body479
  %indvars.iv1006 = phi i64 [ %indvars.iv.next1007, %for.body479 ], [ 0, %if.end474 ]
  %149 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %150 = trunc i64 %indvars.iv1006 to i32
  %call480 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %149, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.57, i64 0, i64 0), i32 %150) #35
  %151 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree481, align 8, !tbaa !70
  %arrayidx483 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %151, i64 %indvars.iv1006
  %152 = load %struct.lextree_t*, %struct.lextree_t** %arrayidx483, align 8, !tbaa !74
  %153 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  tail call void @lextree_dump(%struct.lextree_t* %152, %struct.dict_t* %21, %struct._IO_FILE* %153) #34
  %indvars.iv.next1007 = add nuw nsw i64 %indvars.iv1006, 1
  %154 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %155 = sext i32 %154 to i64
  %cmp477 = icmp slt i64 %indvars.iv.next1007, %155
  br i1 %cmp477, label %for.body479, label %for.cond487.preheader, !llvm.loop !89

for.body491:                                      ; preds = %for.cond487.preheader, %for.body491
  %indvars.iv1004 = phi i64 [ %indvars.iv.next1005, %for.body491 ], [ 0, %for.cond487.preheader ]
  %156 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %157 = trunc i64 %indvars.iv1004 to i32
  %call492 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %156, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i64 0, i64 0), i32 %157) #35
  %158 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %arrayidx495 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %158, i64 %indvars.iv1004
  %159 = load %struct.lextree_t*, %struct.lextree_t** %arrayidx495, align 8, !tbaa !74
  %160 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  tail call void @lextree_dump(%struct.lextree_t* %159, %struct.dict_t* %21, %struct._IO_FILE* %160) #34
  %indvars.iv.next1005 = add nuw nsw i64 %indvars.iv1004, 1
  %161 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %162 = sext i32 %161 to i64
  %cmp489 = icmp slt i64 %indvars.iv.next1005, %162
  br i1 %cmp489, label %for.body491, label %for.end498, !llvm.loop !90

for.end498:                                       ; preds = %for.body491, %if.end474, %for.cond487.preheader
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call499 = tail call i32 @fflush(%struct._IO_FILE* %163) #36
  br label %if.end500

if.end500:                                        ; preds = %for.end498, %for.end464
  %mgau = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %19, i64 0, i32 8
  %164 = load %struct.mgau_model_t*, %struct.mgau_model_t** %mgau, align 8, !tbaa !91
  %n_mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %164, i64 0, i32 0
  %165 = load i32, i32* %n_mgau, align 8, !tbaa !92
  %166 = load %struct.dict2pid_t*, %struct.dict2pid_t** %dict2pid, align 8, !tbaa !19
  %n_comstate = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %166, i64 0, i32 6
  %167 = load i32, i32* %n_comstate, align 8, !tbaa !94
  %call502 = tail call %struct.ascr_t* @ascr_init(i32 %165, i32 %167) #34
  %ascr = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 21
  store %struct.ascr_t* %call502, %struct.ascr_t** %ascr, align 8, !tbaa !95
  %call503 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i64 0, i64 0)) #34
  %168 = bitcast i8* %call503 to double*
  %169 = load double, double* %168, align 8, !tbaa !96
  %call504 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0)) #34
  %170 = bitcast i8* %call504 to double*
  %171 = load double, double* %170, align 8, !tbaa !96
  %call505 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i64 0, i64 0)) #34
  %172 = bitcast i8* %call505 to double*
  %173 = load double, double* %172, align 8, !tbaa !96
  %call506 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i64 0, i64 0)) #34
  %174 = bitcast i8* %call506 to double*
  %175 = load double, double* %174, align 8, !tbaa !96
  %call507 = tail call %struct.beam_t* @beam_init(double %169, double %171, double %173, double %175) #34
  %beam = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 22
  store %struct.beam_t* %call507, %struct.beam_t** %beam, align 8, !tbaa !97
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 317, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %176 = load %struct.beam_t*, %struct.beam_t** %beam, align 8, !tbaa !97
  %hmm = getelementptr inbounds %struct.beam_t, %struct.beam_t* %176, i64 0, i32 1
  %177 = load i32, i32* %hmm, align 4, !tbaa !98
  %ptrans = getelementptr inbounds %struct.beam_t, %struct.beam_t* %176, i64 0, i32 2
  %178 = load i32, i32* %ptrans, align 4, !tbaa !100
  %word511 = getelementptr inbounds %struct.beam_t, %struct.beam_t* %176, i64 0, i32 3
  %179 = load i32, i32* %word511, align 4, !tbaa !101
  %subvq = getelementptr inbounds %struct.beam_t, %struct.beam_t* %176, i64 0, i32 0
  %180 = load i32, i32* %subvq, align 4, !tbaa !102
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.63, i64 0, i64 0), i32 %177, i32 %178, i32 %179, i32 %180) #34
  %call513 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i64 0, i64 0)) #34
  %181 = bitcast i8* %call513 to i32*
  %182 = load i32, i32* %181, align 4, !tbaa !37
  %ds_ratio = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 23
  store i32 %182, i32* %ds_ratio, align 8, !tbaa !103
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 322, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %183 = load i32, i32* %ds_ratio, align 8, !tbaa !103
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.65, i64 0, i64 0), i32 %183) #34
  %rec_bstcid = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 13
  store i32 -1, i32* %rec_bstcid, align 8, !tbaa !104
  %skip_count = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 18
  store i32 0, i32* %skip_count, align 8, !tbaa !105
  %call515 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i64 0, i64 0)) #34
  %184 = bitcast i8* %call515 to i32*
  %185 = load i32, i32* %184, align 4, !tbaa !37
  %cond_ds = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 24
  store i32 %185, i32* %cond_ds, align 4, !tbaa !106
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 328, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %186 = load i32, i32* %cond_ds, align 4, !tbaa !106
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.67, i64 0, i64 0), i32 %186) #34
  %187 = load i32, i32* %cond_ds, align 4, !tbaa !106
  %cmp518 = icmp sgt i32 %187, 0
  br i1 %cmp518, label %land.lhs.true, label %if.end524

land.lhs.true:                                    ; preds = %if.end500
  %188 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore1, align 8, !tbaa !8
  %gs = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %188, i64 0, i32 10
  %189 = load %struct.gs_s*, %struct.gs_s** %gs, align 8, !tbaa !107
  %cmp521 = icmp eq %struct.gs_s* %189, null
  br i1 %cmp521, label %if.then523, label %if.end524

if.then523:                                       ; preds = %land.lhs.true
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 330, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.68, i64 0, i64 0)) #34
  br label %if.end524

if.end524:                                        ; preds = %if.then523, %land.lhs.true, %if.end500
  %call525 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0)) #34
  %190 = bitcast i8* %call525 to i32*
  %191 = load i32, i32* %190, align 4, !tbaa !37
  %gs4gs = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 25
  store i32 %191, i32* %gs4gs, align 8, !tbaa !108
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 333, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %192 = load i32, i32* %gs4gs, align 8, !tbaa !108
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.70, i64 0, i64 0), i32 %192) #34
  %call527 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i64 0, i64 0)) #34
  %193 = bitcast i8* %call527 to i32*
  %194 = load i32, i32* %193, align 4, !tbaa !37
  %svq4svq = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 26
  store i32 %194, i32* %svq4svq, align 4, !tbaa !109
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 336, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %195 = load i32, i32* %svq4svq, align 4, !tbaa !109
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.72, i64 0, i64 0), i32 %195) #34
  %call529 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i64 0, i64 0)) #34
  %196 = bitcast i8* %call529 to float*
  %197 = load float, float* %196, align 4, !tbaa !4
  %conv530 = fpext float %197 to double
  %call531 = tail call i32 @logs3(double %conv530) #34
  %mul532 = sub nsw i32 0, %call531
  %ci_pbeam = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 27
  store i32 %mul532, i32* %ci_pbeam, align 8, !tbaa !110
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 339, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %198 = load i32, i32* %ci_pbeam, align 8, !tbaa !110
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.74, i64 0, i64 0), i32 %198) #34
  %199 = load i32, i32* %ci_pbeam, align 8, !tbaa !110
  %cmp535 = icmp sgt i32 %199, 10000000
  br i1 %cmp535, label %if.then537, label %if.end538

if.then537:                                       ; preds = %if.end524
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 341, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.75, i64 0, i64 0)) #34
  br label %if.end538

if.end538:                                        ; preds = %if.then537, %if.end524
  %call539 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.76, i64 0, i64 0)) #34
  %200 = bitcast i8* %call539 to float*
  %201 = load float, float* %200, align 4, !tbaa !4
  %conv540 = fpext float %201 to double
  %call541 = tail call i32 @logs3(double %conv540) #34
  %mul542 = sub nsw i32 0, %call541
  %wend_beam = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 32
  store i32 %mul542, i32* %wend_beam, align 4, !tbaa !111
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 345, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %202 = load i32, i32* %wend_beam, align 4, !tbaa !111
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.77, i64 0, i64 0), i32 %202) #34
  %call544 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.78, i64 0, i64 0)) #34
  %203 = bitcast i8* %call544 to i32*
  %204 = load i32, i32* %203, align 4, !tbaa !37
  %pl_window = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 28
  store i32 %204, i32* %pl_window, align 4, !tbaa !112
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 348, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %205 = load i32, i32* %pl_window, align 4, !tbaa !112
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.79, i64 0, i64 0), i32 %205) #34
  %pl_window_start = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 29
  store i32 0, i32* %pl_window_start, align 8, !tbaa !113
  %call546 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.80, i64 0, i64 0)) #34
  %206 = bitcast i8* %call546 to float*
  %207 = load float, float* %206, align 4, !tbaa !4
  %conv547 = fpext float %207 to double
  %call548 = tail call i32 @logs3(double %conv547) #34
  %pl_beam = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 31
  store i32 %call548, i32* %pl_beam, align 8, !tbaa !114
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 353, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %208 = load i32, i32* %pl_beam, align 8, !tbaa !114
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.81, i64 0, i64 0), i32 %208) #34
  %cd2cisen = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %20, i64 0, i32 11
  %209 = load i16*, i16** %cd2cisen, align 8, !tbaa !115
  br label %for.cond550

for.cond550:                                      ; preds = %for.cond550, %if.end538
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond550 ], [ 0, %if.end538 ]
  %arrayidx552 = getelementptr inbounds i16, i16* %209, i64 %indvars.iv
  %210 = load i16, i16* %arrayidx552, align 2, !tbaa !40
  %conv553 = sext i16 %210 to i64
  %211 = and i64 %conv553, 4294967295
  %cmp554 = icmp eq i64 %indvars.iv, %211
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  br i1 %cmp554, label %for.cond550, label %for.end559, !llvm.loop !116

for.end559:                                       ; preds = %for.cond550
  %212 = trunc i64 %indvars.iv to i32
  %213 = load i32, i32* %pl_window, align 4, !tbaa !112
  %call561 = tail call i8** @__ckd_calloc_2d__(i32 %213, i32 %212, i32 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 358) #34
  %cache_ci_senscr = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 15
  %214 = bitcast i32*** %cache_ci_senscr to i8***
  store i8** %call561, i8*** %214, align 8, !tbaa !117
  %215 = load i32, i32* %pl_window, align 4, !tbaa !112
  %conv563 = sext i32 %215 to i64
  %call564 = tail call i8* @__ckd_calloc__(i64 %conv563, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 359) #34
  %cache_best_list = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 16
  %216 = bitcast i32** %cache_best_list to i8**
  store i8* %call564, i8** %216, align 8, !tbaa !118
  %217 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %conv566 = sext i32 %217 to i64
  %call567 = tail call i8* @__ckd_calloc__(i64 %conv566, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 360) #34
  %phn_heur_list = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 17
  %218 = bitcast i32** %phn_heur_list to i8**
  store i8* %call567, i8** %218, align 8, !tbaa !119
  %fcb = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %19, i64 0, i32 0
  %219 = load %struct.feat_s*, %struct.feat_s** %fcb, align 8, !tbaa !120
  %call568 = tail call float*** @feat_array_alloc(%struct.feat_s* %219, i32 15000) #34
  %feat = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 7
  store float*** %call568, float**** %feat, align 8, !tbaa !121
  %cmp569 = icmp eq float*** %call568, null
  br i1 %cmp569, label %if.then571, label %if.end572

if.then571:                                       ; preds = %for.end559
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 364, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.82, i64 0, i64 0)) #34
  br label %if.end572

if.end572:                                        ; preds = %if.then571, %for.end559
  %220 = load %struct.beam_t*, %struct.beam_t** %beam, align 8, !tbaa !97
  %word574 = getelementptr inbounds %struct.beam_t, %struct.beam_t* %220, i64 0, i32 3
  %221 = load i32, i32* %word574, align 4, !tbaa !101
  %call575 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.83, i64 0, i64 0)) #34
  %222 = bitcast i8* %call575 to i32*
  %223 = load i32, i32* %222, align 4, !tbaa !37
  %call576 = tail call %struct.vithist_t* @vithist_init(%struct.kbcore_t* nonnull %19, i32 %221, i32 %223) #34
  %vithist = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 6
  store %struct.vithist_t* %call576, %struct.vithist_t** %vithist, align 8, !tbaa !122
  %tm_sen = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 40
  tail call void @ptmr_init(%struct.ptmr_t* nonnull %tm_sen) #34
  %tm_srch = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 41
  tail call void @ptmr_init(%struct.ptmr_t* nonnull %tm_srch) #34
  %tm_ovrhd = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 42
  tail call void @ptmr_init(%struct.ptmr_t* nonnull %tm_ovrhd) #34
  %tot_fr = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 43
  store i32 0, i32* %tot_fr, align 8, !tbaa !123
  %tot_sen_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 44
  %224 = bitcast double* %tot_sen_eval to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %224, i8 0, i64 32, i1 false)
  %call577 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i64 0, i64 0)) #34
  %225 = bitcast i8* %call577 to i32*
  %226 = load i32, i32* %225, align 4, !tbaa !37
  %hmm_hist_binsize = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 39
  store i32 %226, i32* %hmm_hist_binsize, align 4, !tbaa !124
  %ugtree590 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 2
  %ugtreeMulti580 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 3
  %ugtree590.sink = select i1 %tobool.not, %struct.lextree_t*** %ugtree590, %struct.lextree_t*** %ugtreeMulti580
  %227 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree590.sink, align 8, !tbaa !74
  %228 = load %struct.lextree_t*, %struct.lextree_t** %227, align 8, !tbaa !74
  %n_node592 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %228, i64 0, i32 4
  %229 = load i32, i32* %n_node592, align 4, !tbaa !77
  %230 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %231 = load %struct.lextree_t*, %struct.lextree_t** %230, align 8, !tbaa !74
  %n_node595 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %231, i64 0, i32 4
  %232 = load i32, i32* %n_node595, align 4, !tbaa !77
  %add596 = add nsw i32 %232, %229
  %233 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %mul598 = mul nsw i32 %add596, %233
  %div = sdiv i32 %mul598, %226
  %add601 = add nsw i32 %div, 1
  %hmm_hist_bins = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 38
  store i32 %add601, i32* %hmm_hist_bins, align 8, !tbaa !125
  %conv603 = sext i32 %add601 to i64
  %call604 = tail call i8* @__ckd_calloc__(i64 %conv603, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 386) #34
  %hmm_hist = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 37
  %234 = bitcast i32** %hmm_hist to i8**
  store i8* %call604, i8** %234, align 8, !tbaa !126
  %call605 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i64 0, i64 0)) #34
  %matchsegfp = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 49
  store %struct._IO_FILE* null, %struct._IO_FILE** %matchsegfp, align 8, !tbaa !127
  %tobool606.not = icmp eq i8* %call605, null
  br i1 %tobool606.not, label %if.end614, label %if.then607

if.then607:                                       ; preds = %if.end572
  %call608 = tail call %struct._IO_FILE* @fopen(i8* nonnull %call605, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86, i64 0, i64 0)) #36
  store %struct._IO_FILE* %call608, %struct._IO_FILE** %matchsegfp, align 8, !tbaa !127
  %cmp610 = icmp eq %struct._IO_FILE* %call608, null
  br i1 %cmp610, label %if.then612, label %if.end614

if.then612:                                       ; preds = %if.then607
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 397, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.87, i64 0, i64 0), i8* nonnull %call605) #34
  br label %if.end614

if.end614:                                        ; preds = %if.then607, %if.then612, %if.end572
  %call615 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.88, i64 0, i64 0)) #34
  %matchfp = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 48
  store %struct._IO_FILE* null, %struct._IO_FILE** %matchfp, align 8, !tbaa !128
  %tobool616.not = icmp eq i8* %call615, null
  br i1 %tobool616.not, label %if.end624, label %if.then617

if.then617:                                       ; preds = %if.end614
  %call618 = tail call %struct._IO_FILE* @fopen(i8* nonnull %call615, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86, i64 0, i64 0)) #36
  store %struct._IO_FILE* %call618, %struct._IO_FILE** %matchfp, align 8, !tbaa !128
  %cmp620 = icmp eq %struct._IO_FILE* %call618, null
  br i1 %cmp620, label %if.then622, label %if.end624

if.then622:                                       ; preds = %if.then617
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 408, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.87, i64 0, i64 0), i8* nonnull %call615) #34
  br label %if.end624

if.end624:                                        ; preds = %if.then617, %if.then622, %if.end614
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fprintf(%struct._IO_FILE* nocapture noundef, i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fflush(%struct._IO_FILE* nocapture noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind optsize
declare noalias noundef %struct._IO_FILE* @fopen(i8* nocapture noundef readonly, i8* nocapture noundef readonly) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize uwtable
define void @kb_setlm(i8* %lmname, %struct.kb_t* nocapture %kb) local_unnamed_addr #0 {
entry:
  %kbcore = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 0
  %0 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  %lmset = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %0, i64 0, i32 5
  %1 = load %struct.lmset_s*, %struct.lmset_s** %lmset, align 8, !tbaa !18
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 424, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.89, i64 0, i64 0)) #34
  %lm = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %0, i64 0, i32 4
  store %struct.lm_s* null, %struct.lm_s** %lm, align 8, !tbaa !17
  %n_lextree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 1
  %2 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %ugtree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 2
  %cmp158 = icmp sgt i32 %2, 0
  br i1 %cmp158, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count175 = zext i32 %2 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv173 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next174, %for.body ]
  %3 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree, align 8, !tbaa !70
  %arrayidx = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %3, i64 %indvars.iv173
  store %struct.lextree_t* null, %struct.lextree_t** %arrayidx, align 8, !tbaa !74
  %indvars.iv.next174 = add nuw nsw i64 %indvars.iv173, 1
  %exitcond176.not = icmp eq i64 %indvars.iv.next174, %wide.trip.count175
  br i1 %exitcond176.not, label %for.end, label %for.body, !llvm.loop !129

for.end:                                          ; preds = %for.body, %entry
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 430, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.89, i64 0, i64 0)) #34
  %cmp1.not = icmp eq %struct.lmset_s* %1, null
  br i1 %cmp1.not, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %for.end
  %call = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #34
  %tobool.not = icmp eq i8* %call, null
  br i1 %tobool.not, label %if.end50, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %for.end
  %n_lm = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %0, i64 0, i32 12
  %4 = load i32, i32* %n_lm, align 8, !tbaa !23
  %cmp3156 = icmp sgt i32 %4, 0
  br i1 %cmp3156, label %for.body4.preheader, label %for.end29thread-pre-split

for.body4.preheader:                              ; preds = %if.then
  %wide.trip.count171 = zext i32 %4 to i64
  br label %for.body4

for.body4:                                        ; preds = %for.body4.preheader, %for.inc27
  %indvars.iv169 = phi i64 [ 0, %for.body4.preheader ], [ %indvars.iv.next170, %for.inc27 ]
  %name = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %1, i64 %indvars.iv169, i32 0
  %5 = load i8*, i8** %name, align 8, !tbaa !30
  %call7 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %lmname, i8* noundef nonnull dereferenceable(1) %5) #37
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.then9, label %for.inc27

if.then9:                                         ; preds = %for.body4
  %6 = trunc i64 %indvars.iv169 to i32
  %idxprom5.le = and i64 %indvars.iv169, 4294967295
  %lm12 = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %1, i64 %idxprom5.le, i32 1
  %7 = load %struct.lm_s*, %struct.lm_s** %lm12, align 8, !tbaa !24
  store %struct.lm_s* %7, %struct.lm_s** %lm, align 8, !tbaa !17
  %8 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %ugtreeMulti = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 3
  %cmp16153 = icmp sgt i32 %8, 0
  br i1 %cmp16153, label %for.body17.preheader, label %for.end29

for.body17.preheader:                             ; preds = %if.then9
  %mul = mul nsw i32 %8, %6
  %9 = sext i32 %mul to i64
  %wide.trip.count167 = zext i32 %8 to i64
  br label %for.body17

for.body17:                                       ; preds = %for.body17.preheader, %for.body17
  %indvars.iv164 = phi i64 [ 0, %for.body17.preheader ], [ %indvars.iv.next165, %for.body17 ]
  %10 = load %struct.lextree_t**, %struct.lextree_t*** %ugtreeMulti, align 8, !tbaa !69
  %11 = add nsw i64 %indvars.iv164, %9
  %arrayidx20 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %10, i64 %11
  %12 = load %struct.lextree_t*, %struct.lextree_t** %arrayidx20, align 8, !tbaa !74
  %13 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree, align 8, !tbaa !70
  %arrayidx23 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %13, i64 %indvars.iv164
  store %struct.lextree_t* %12, %struct.lextree_t** %arrayidx23, align 8, !tbaa !74
  %indvars.iv.next165 = add nuw nsw i64 %indvars.iv164, 1
  %exitcond168.not = icmp eq i64 %indvars.iv.next165, %wide.trip.count167
  br i1 %exitcond168.not, label %for.end29thread-pre-split, label %for.body17, !llvm.loop !130

for.inc27:                                        ; preds = %for.body4
  %indvars.iv.next170 = add nuw nsw i64 %indvars.iv169, 1
  %exitcond172.not = icmp eq i64 %indvars.iv.next170, %wide.trip.count171
  br i1 %exitcond172.not, label %for.end29thread-pre-split, label %for.body4, !llvm.loop !131

for.end29thread-pre-split:                        ; preds = %for.inc27, %for.body17, %if.then
  %i.0148.ph = phi i32 [ 0, %if.then ], [ %6, %for.body17 ], [ %4, %for.inc27 ]
  %.pr = load %struct.lm_s*, %struct.lm_s** %lm, align 8, !tbaa !17
  br label %for.end29

for.end29:                                        ; preds = %for.end29thread-pre-split, %if.then9
  %14 = phi %struct.lm_s* [ %.pr, %for.end29thread-pre-split ], [ %7, %if.then9 ]
  %i.0148 = phi i32 [ %i.0148.ph, %for.end29thread-pre-split ], [ %6, %if.then9 ]
  %cmp31 = icmp eq %struct.lm_s* %14, null
  br i1 %cmp31, label %if.then32, label %if.end50

if.then32:                                        ; preds = %for.end29
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 445, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.90, i64 0, i64 0), i8* %lmname) #34
  %lm34 = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %1, i64 0, i32 1
  %15 = load %struct.lm_s*, %struct.lm_s** %lm34, align 8, !tbaa !24
  store %struct.lm_s* %15, %struct.lm_s** %lm, align 8, !tbaa !17
  %16 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %ugtreeMulti40 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 3
  %cmp38151 = icmp sgt i32 %16, 0
  br i1 %cmp38151, label %for.body39.preheader, label %if.end50

for.body39.preheader:                             ; preds = %if.then32
  %wide.trip.count = zext i32 %16 to i64
  br label %for.body39

for.body39:                                       ; preds = %for.body39.preheader, %for.body39
  %indvars.iv162 = phi i64 [ 0, %for.body39.preheader ], [ %indvars.iv.next163, %for.body39 ]
  %17 = load %struct.lextree_t**, %struct.lextree_t*** %ugtreeMulti40, align 8, !tbaa !69
  %arrayidx42 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %17, i64 %indvars.iv162
  %18 = load %struct.lextree_t*, %struct.lextree_t** %arrayidx42, align 8, !tbaa !74
  %19 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree, align 8, !tbaa !70
  %arrayidx45 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %19, i64 %indvars.iv162
  store %struct.lextree_t* %18, %struct.lextree_t** %arrayidx45, align 8, !tbaa !74
  %indvars.iv.next163 = add nuw nsw i64 %indvars.iv162, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next163, %wide.trip.count
  br i1 %exitcond.not, label %if.end50, label %for.body39, !llvm.loop !132

if.end50:                                         ; preds = %for.body39, %if.then32, %for.end29, %lor.lhs.false
  %i.1 = phi i32 [ %i.0148, %for.end29 ], [ undef, %lor.lhs.false ], [ %i.0148, %if.then32 ], [ %i.0148, %for.body39 ]
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 453, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %idxprom51 = sext i32 %i.1 to i64
  %name53 = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %1, i64 %idxprom51, i32 0
  %20 = load i8*, i8** %name53, align 8, !tbaa !30
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.91, i64 0, i64 0), i8* %20) #34
  %21 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree, align 8, !tbaa !70
  %22 = load %struct.lextree_t*, %struct.lextree_t** %21, align 8, !tbaa !74
  %n_node = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %22, i64 0, i32 4
  %23 = load i32, i32* %n_node, align 4, !tbaa !77
  %fillertree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 4
  %24 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %25 = load %struct.lextree_t*, %struct.lextree_t** %24, align 8, !tbaa !74
  %n_node57 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %25, i64 0, i32 4
  %26 = load i32, i32* %n_node57, align 4, !tbaa !77
  %add58 = add nsw i32 %26, %23
  %27 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %mul60 = mul nsw i32 %add58, %27
  %hmm_hist_binsize = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 39
  %28 = load i32, i32* %hmm_hist_binsize, align 4, !tbaa !124
  %div = sdiv i32 %mul60, %28
  %add61 = add nsw i32 %div, 1
  %hmm_hist_bins = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 38
  store i32 %add61, i32* %hmm_hist_bins, align 8, !tbaa !125
  %hmm_hist = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 37
  %29 = bitcast i32** %hmm_hist to i8**
  %30 = load i8*, i8** %29, align 8, !tbaa !126
  %conv = sext i32 %add61 to i64
  %mul63 = shl nsw i64 %conv, 2
  %call64 = tail call i8* @__ckd_realloc__(i8* %30, i64 %mul63, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 466) #34
  store i8* %call64, i8** %29, align 8, !tbaa !126
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 468, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %31 = load i8*, i8** %name53, align 8, !tbaa !30
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92, i64 0, i64 0), i8* %31) #34
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 469, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %32 = load %struct.lm_s*, %struct.lm_s** %lm, align 8, !tbaa !17
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %32, i64 0, i32 0
  %33 = load i32, i32* %n_ug, align 8, !tbaa !133
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.93, i64 0, i64 0), i32 %33) #34
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 470, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %34 = load %struct.lm_s*, %struct.lm_s** %lm, align 8, !tbaa !17
  %n_bg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %34, i64 0, i32 1
  %35 = load i32, i32* %n_bg, align 4, !tbaa !134
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.94, i64 0, i64 0), i32 %35) #34
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 471, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %36 = load %struct.lm_s*, %struct.lm_s** %lm, align 8, !tbaa !17
  %n_tg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %36, i64 0, i32 2
  %37 = load i32, i32* %n_tg, align 8, !tbaa !135
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i64 0, i64 0), i32 %37) #34
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 472, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i64 0, i64 0), i32 %add61) #34
  %38 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %cmp75149 = icmp sgt i32 %38, 0
  br i1 %cmp75149, label %for.body77, label %for.end85

for.body77:                                       ; preds = %if.end50, %for.body77
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body77 ], [ 0, %if.end50 ]
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 475, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #34
  %39 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %40 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree, align 8, !tbaa !70
  %arrayidx81 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %40, i64 %indvars.iv
  %41 = load %struct.lextree_t*, %struct.lextree_t** %arrayidx81, align 8, !tbaa !74
  %n_node82 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %41, i64 0, i32 4
  %42 = load i32, i32* %n_node82, align 4, !tbaa !77
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.53, i64 0, i64 0), i32 %39, i32 %42) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %43 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %44 = sext i32 %43 to i64
  %cmp75 = icmp slt i64 %indvars.iv.next, %44
  br i1 %cmp75, label %for.body77, label %for.end85, !llvm.loop !136

for.end85:                                        ; preds = %for.body77, %if.end50
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind optsize readonly willreturn
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize uwtable
define void @kb_lextree_active_swap(%struct.kb_t* nocapture readonly %kb) local_unnamed_addr #0 {
entry:
  %n_lextree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 1
  %ugtree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 2
  %fillertree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 4
  %0 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %cmp9 = icmp sgt i32 %0, 0
  br i1 %cmp9, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %1 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree, align 8, !tbaa !70
  %arrayidx = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %1, i64 %indvars.iv
  %2 = load %struct.lextree_t*, %struct.lextree_t** %arrayidx, align 8, !tbaa !74
  tail call void @lextree_active_swap(%struct.lextree_t* %2) #34
  %3 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %arrayidx2 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %3, i64 %indvars.iv
  %4 = load %struct.lextree_t*, %struct.lextree_t** %arrayidx2, align 8, !tbaa !74
  tail call void @lextree_active_swap(%struct.lextree_t* %4) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %6 = sext i32 %5 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !137

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @kb_freehyps(%struct.kb_t* nocapture %kb) local_unnamed_addr #0 {
entry:
  %hyp_segs = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 50
  %0 = load %struct.hyp_t**, %struct.hyp_t*** %hyp_segs, align 8, !tbaa !138
  %tobool.not = icmp eq %struct.hyp_t** %0, null
  br i1 %tobool.not, label %if.end9, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %1 = bitcast %struct.hyp_t** %0 to i8*
  %hyp_seglen = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 51
  %2 = load i32, i32* %hyp_seglen, align 8, !tbaa !139
  %cmp27 = icmp sgt i32 %2, 0
  br i1 %cmp27, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond.preheader, %for.inc.for.body_crit_edge
  %3 = phi i32 [ %7, %for.inc.for.body_crit_edge ], [ %2, %for.cond.preheader ]
  %4 = phi %struct.hyp_t** [ %.pre, %for.inc.for.body_crit_edge ], [ %0, %for.cond.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.for.body_crit_edge ], [ 0, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds %struct.hyp_t*, %struct.hyp_t** %4, i64 %indvars.iv
  %5 = load %struct.hyp_t*, %struct.hyp_t** %arrayidx, align 8, !tbaa !74
  %tobool2.not = icmp eq %struct.hyp_t* %5, null
  br i1 %tobool2.not, label %for.inc, label %if.then3

if.then3:                                         ; preds = %for.body
  %6 = bitcast %struct.hyp_t* %5 to i8*
  tail call void @ckd_free(i8* nonnull %6) #34
  %.pre29 = load i32, i32* %hyp_seglen, align 8, !tbaa !139
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then3
  %7 = phi i32 [ %3, %for.body ], [ %.pre29, %if.then3 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %8 = sext i32 %7 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %8
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.end.loopexit, !llvm.loop !140

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  %.pre = load %struct.hyp_t**, %struct.hyp_t*** %hyp_segs, align 8, !tbaa !138
  br label %for.body

for.end.loopexit:                                 ; preds = %for.inc
  %.phi.trans.insert = bitcast %struct.hyp_t*** %hyp_segs to i8**
  %.pre30 = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !138
  br label %for.end

for.end:                                          ; preds = %for.cond.preheader, %for.end.loopexit
  %9 = phi i8* [ %.pre30, %for.end.loopexit ], [ %1, %for.cond.preheader ]
  tail call void @ckd_free(i8* %9) #34
  store i32 0, i32* %hyp_seglen, align 8, !tbaa !139
  br label %if.end9

if.end9:                                          ; preds = %for.end, %entry
  %hyp_str = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 52
  %10 = load i8*, i8** %hyp_str, align 8, !tbaa !141
  %tobool10.not = icmp eq i8* %10, null
  br i1 %tobool10.not, label %if.end13, label %if.then11

if.then11:                                        ; preds = %if.end9
  tail call void @ckd_free(i8* nonnull %10) #34
  %hyp_strlen = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 53
  store i32 0, i32* %hyp_strlen, align 8, !tbaa !142
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.end9
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @kb_free(%struct.kb_t* nocapture %kb) local_unnamed_addr #0 {
entry:
  %vithist1 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 6
  %0 = load %struct.vithist_t*, %struct.vithist_t** %vithist1, align 8, !tbaa !122
  %sen_active = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 11
  %1 = load i32*, i32** %sen_active, align 8, !tbaa !50
  %tobool.not = icmp eq i32* %1, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %2 = bitcast i32* %1 to i8*
  tail call void @ckd_free(i8* nonnull %2) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %ssid_active = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 9
  %3 = load i32*, i32** %ssid_active, align 8, !tbaa !53
  %tobool3.not = icmp eq i32* %3, null
  br i1 %tobool3.not, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %4 = bitcast i32* %3 to i8*
  tail call void @ckd_free(i8* nonnull %4) #34
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  %comssid_active = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 10
  %5 = load i32*, i32** %comssid_active, align 8, !tbaa !56
  %tobool7.not = icmp eq i32* %5, null
  br i1 %tobool7.not, label %if.end10, label %if.then8

if.then8:                                         ; preds = %if.end6
  %6 = bitcast i32* %5 to i8*
  tail call void @ckd_free(i8* nonnull %6) #34
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.end6
  %fillertree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 4
  %7 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %tobool11.not = icmp eq %struct.lextree_t** %7, null
  br i1 %tobool11.not, label %if.end14, label %if.then12

if.then12:                                        ; preds = %if.end10
  %8 = bitcast %struct.lextree_t** %7 to i8*
  tail call void @ckd_free(i8* nonnull %8) #34
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end10
  %hmm_hist = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 37
  %9 = load i32*, i32** %hmm_hist, align 8, !tbaa !126
  %tobool15.not = icmp eq i32* %9, null
  br i1 %tobool15.not, label %if.end18, label %if.then16

if.then16:                                        ; preds = %if.end14
  %10 = bitcast i32* %9 to i8*
  tail call void @ckd_free(i8* nonnull %10) #34
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end14
  %tobool19.not = icmp eq %struct.vithist_t* %0, null
  br i1 %tobool19.not, label %if.end23, label %if.then20

if.then20:                                        ; preds = %if.end18
  %11 = bitcast %struct.vithist_t* %0 to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !143
  tail call void @ckd_free(i8* %12) #34
  %frame_start = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %0, i64 0, i32 1
  %13 = bitcast i32** %frame_start to i8**
  %14 = load i8*, i8** %13, align 8, !tbaa !145
  tail call void @ckd_free(i8* %14) #34
  %bestscore = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %0, i64 0, i32 6
  %15 = bitcast i32** %bestscore to i8**
  %16 = load i8*, i8** %15, align 8, !tbaa !146
  tail call void @ckd_free(i8* %16) #34
  %bestvh = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %0, i64 0, i32 7
  %17 = bitcast i32** %bestvh to i8**
  %18 = load i8*, i8** %17, align 8, !tbaa !147
  tail call void @ckd_free(i8* %18) #34
  %lms2vh_root = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %0, i64 0, i32 8
  %19 = bitcast %struct.vh_lms2vh_t*** %lms2vh_root to i8**
  %20 = load i8*, i8** %19, align 8, !tbaa !148
  tail call void @ckd_free(i8* %20) #34
  %21 = bitcast %struct.vithist_t** %vithist1 to i8**
  %22 = load i8*, i8** %21, align 8, !tbaa !122
  tail call void @ckd_free(i8* %22) #34
  br label %if.end23

if.end23:                                         ; preds = %if.then20, %if.end18
  %kbcore = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 0
  %23 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  tail call void @kbcore_free(%struct.kbcore_t* %23) #34
  %feat = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 7
  %24 = load float***, float**** %feat, align 8, !tbaa !121
  %tobool24.not = icmp eq float*** %24, null
  br i1 %tobool24.not, label %if.end29, label %if.then25

if.then25:                                        ; preds = %if.end23
  %25 = bitcast float*** %24 to i8***
  %26 = load i8**, i8*** %25, align 8, !tbaa !74
  %27 = load i8*, i8** %26, align 8, !tbaa !74
  tail call void @ckd_free(i8* %27) #34
  %28 = bitcast float**** %feat to i8***
  %29 = load i8**, i8*** %28, align 8, !tbaa !121
  tail call void @ckd_free_2d(i8** %29) #34
  br label %if.end29

if.end29:                                         ; preds = %if.then25, %if.end23
  %cache_ci_senscr = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 15
  %30 = load i32**, i32*** %cache_ci_senscr, align 8, !tbaa !117
  %tobool30.not = icmp eq i32** %30, null
  br i1 %tobool30.not, label %if.end33, label %if.then31

if.then31:                                        ; preds = %if.end29
  %31 = bitcast i32** %30 to i8**
  tail call void @ckd_free_2d(i8** nonnull %31) #34
  br label %if.end33

if.end33:                                         ; preds = %if.then31, %if.end29
  %cache_best_list = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 16
  %32 = load i32*, i32** %cache_best_list, align 8, !tbaa !118
  %tobool34.not = icmp eq i32* %32, null
  br i1 %tobool34.not, label %if.end37, label %if.then35

if.then35:                                        ; preds = %if.end33
  %33 = bitcast i32* %32 to i8*
  tail call void @ckd_free(i8* nonnull %33) #34
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.end33
  %phn_heur_list = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 17
  %34 = load i32*, i32** %phn_heur_list, align 8, !tbaa !119
  %tobool38.not = icmp eq i32* %34, null
  br i1 %tobool38.not, label %if.end41, label %if.then39

if.then39:                                        ; preds = %if.end37
  %35 = bitcast i32* %34 to i8*
  tail call void @ckd_free(i8* nonnull %35) #34
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.end37
  %matchsegfp = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 49
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %matchsegfp, align 8, !tbaa !127
  %tobool42.not = icmp eq %struct._IO_FILE* %36, null
  br i1 %tobool42.not, label %if.end45, label %if.then43

if.then43:                                        ; preds = %if.end41
  %call = tail call i32 @fclose(%struct._IO_FILE* nonnull %36) #36
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %if.end41
  %matchfp = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 48
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %matchfp, align 8, !tbaa !128
  %tobool46.not = icmp eq %struct._IO_FILE* %37, null
  br i1 %tobool46.not, label %if.end50, label %if.then47

if.then47:                                        ; preds = %if.end45
  %call49 = tail call i32 @fclose(%struct._IO_FILE* nonnull %37) #36
  br label %if.end50

if.end50:                                         ; preds = %if.then47, %if.end45
  tail call void @kb_freehyps(%struct.kb_t* nonnull %kb) #36
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fclose(%struct._IO_FILE* nocapture noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize uwtable
define %struct.ascr_t* @ascr_init(i32 %n_sen, i32 %n_comsen) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.97, i64 0, i64 0), i32 60) #34
  %0 = bitcast i8* %call to %struct.ascr_t*
  %add = add nsw i32 %n_comsen, %n_sen
  %conv = sext i32 %add to i64
  %call1 = tail call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.97, i64 0, i64 0), i32 61) #34
  %1 = bitcast i8* %call1 to i32*
  %2 = bitcast i8* %call to i8**
  store i8* %call1, i8** %2, align 8, !tbaa !149
  %idx.ext = sext i32 %n_sen to i64
  %add.ptr = getelementptr inbounds i32, i32* %1, i64 %idx.ext
  %comsen = getelementptr inbounds i8, i8* %call, i64 8
  %3 = bitcast i8* %comsen to i32**
  store i32* %add.ptr, i32** %3, align 8, !tbaa !151
  ret %struct.ascr_t* %0
}

; Function Attrs: noinline nounwind optsize uwtable
define i8* @heap_new() local_unnamed_addr #0 {
entry:
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.98, i64 0, i64 0), i32 97) #34
  %0 = bitcast i8* %call to %struct.heap_s**
  store %struct.heap_s* null, %struct.heap_s** %0, align 8, !tbaa !74
  ret i8* %call
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @heap_insert(i8* nocapture %heap, i8* %data, i32 %val) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %heap to %struct.heap_s**
  %1 = load %struct.heap_s*, %struct.heap_s** %0, align 8, !tbaa !74
  %call = tail call fastcc %struct.heap_s* @subheap_insert(%struct.heap_s* %1, i8* %data, i32 %val) #36
  store %struct.heap_s* %call, %struct.heap_s** %0, align 8, !tbaa !74
  ret i32 0
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc %struct.heap_s* @subheap_insert(%struct.heap_s* %root, i8* %data, i32 %val) unnamed_addr #0 {
entry:
  %tobool.not = icmp eq %struct.heap_s* %root, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i8* @__mymalloc__(i32 40, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.98, i64 0, i64 0), i32 111) #34
  %0 = bitcast i8* %call to %struct.heap_s*
  %data1 = bitcast i8* %call to i8**
  store i8* %data, i8** %data1, align 8, !tbaa !152
  %val2 = getelementptr inbounds i8, i8* %call, i64 8
  %1 = bitcast i8* %val2 to i32*
  store i32 %val, i32* %1, align 8, !tbaa !154
  %l = getelementptr inbounds i8, i8* %call, i64 24
  %nr = getelementptr inbounds i8, i8* %call, i64 16
  %2 = bitcast i8* %nr to i32*
  store i32 0, i32* %2, align 8, !tbaa !155
  %nl = getelementptr inbounds i8, i8* %call, i64 12
  %3 = bitcast i8* %nl to i32*
  store i32 0, i32* %3, align 4, !tbaa !156
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %l, i8 0, i64 16, i1 false)
  br label %common.ret

if.end:                                           ; preds = %entry
  %val3 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 1
  %4 = load i32, i32* %val3, align 8, !tbaa !154
  %cmp = icmp sgt i32 %4, %val
  br i1 %cmp, label %if.then4, label %if.end9

if.then4:                                         ; preds = %if.end
  %data5 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 0
  %5 = load i8*, i8** %data5, align 8, !tbaa !152
  store i8* %data, i8** %data5, align 8, !tbaa !152
  store i32 %val, i32* %val3, align 8, !tbaa !154
  br label %if.end9

if.end9:                                          ; preds = %if.then4, %if.end
  %val.addr.0 = phi i32 [ %4, %if.then4 ], [ %val, %if.end ]
  %data.addr.0 = phi i8* [ %5, %if.then4 ], [ %data, %if.end ]
  %nl10 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 2
  %6 = load i32, i32* %nl10, align 4, !tbaa !156
  %nr11 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 3
  %7 = load i32, i32* %nr11, align 8, !tbaa !155
  %cmp12 = icmp sgt i32 %6, %7
  br i1 %cmp12, label %if.then13, label %if.else

common.ret:                                       ; preds = %if.then, %if.else, %if.then13
  %common.ret.op = phi %struct.heap_s* [ %root, %if.then13 ], [ %root, %if.else ], [ %0, %if.then ]
  ret %struct.heap_s* %common.ret.op

if.then13:                                        ; preds = %if.end9
  %r14 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 5
  %8 = load %struct.heap_s*, %struct.heap_s** %r14, align 8, !tbaa !157
  %call15 = tail call fastcc %struct.heap_s* @subheap_insert(%struct.heap_s* %8, i8* %data.addr.0, i32 %val.addr.0) #36
  store %struct.heap_s* %call15, %struct.heap_s** %r14, align 8, !tbaa !157
  %9 = load i32, i32* %nr11, align 8, !tbaa !155
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %nr11, align 8, !tbaa !155
  br label %common.ret

if.else:                                          ; preds = %if.end9
  %l18 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 4
  %10 = load %struct.heap_s*, %struct.heap_s** %l18, align 8, !tbaa !158
  %call19 = tail call fastcc %struct.heap_s* @subheap_insert(%struct.heap_s* %10, i8* %data.addr.0, i32 %val.addr.0) #36
  store %struct.heap_s* %call19, %struct.heap_s** %l18, align 8, !tbaa !158
  %11 = load i32, i32* %nl10, align 4, !tbaa !156
  %inc22 = add nsw i32 %11, 1
  store i32 %inc22, i32* %nl10, align 4, !tbaa !156
  br label %common.ret
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @heap_pop(i8* nocapture %heap, i8** nocapture %data, i32* nocapture %val) local_unnamed_addr #0 {
entry:
  %0 = bitcast i8* %heap to %struct.heap_s**
  %1 = load %struct.heap_s*, %struct.heap_s** %0, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.heap_s* %1, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %data1 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %1, i64 0, i32 0
  %2 = load i8*, i8** %data1, align 8, !tbaa !152
  store i8* %2, i8** %data, align 8, !tbaa !74
  %val2 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %1, i64 0, i32 1
  %3 = load i32, i32* %val2, align 8, !tbaa !154
  store i32 %3, i32* %val, align 4, !tbaa !37
  %call = tail call fastcc %struct.heap_s* @subheap_pop(%struct.heap_s* nonnull %1) #36
  store %struct.heap_s* %call, %struct.heap_s** %0, align 8, !tbaa !74
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc %struct.heap_s* @subheap_pop(%struct.heap_s* %root) unnamed_addr #0 {
entry:
  %l1 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 4
  %0 = load %struct.heap_s*, %struct.heap_s** %l1, align 8, !tbaa !158
  %r2 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 5
  %1 = load %struct.heap_s*, %struct.heap_s** %r2, align 8, !tbaa !157
  %tobool.not = icmp eq %struct.heap_s* %0, null
  %tobool3.not = icmp eq %struct.heap_s* %1, null
  br i1 %tobool.not, label %if.then, label %if.else8

if.then:                                          ; preds = %entry
  br i1 %tobool3.not, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  %2 = bitcast %struct.heap_s* %root to i8*
  tail call void @__myfree__(i8* %2, i32 40, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.98, i64 0, i64 0), i32 164) #34
  br label %common.ret

common.ret:                                       ; preds = %if.then4, %if.else20, %if.then12, %if.else
  %common.ret.op = phi %struct.heap_s* [ %root, %if.else ], [ %root, %if.then12 ], [ %root, %if.else20 ], [ null, %if.then4 ]
  ret %struct.heap_s* %common.ret.op

if.else:                                          ; preds = %if.then
  %data = getelementptr inbounds %struct.heap_s, %struct.heap_s* %1, i64 0, i32 0
  %3 = load i8*, i8** %data, align 8, !tbaa !152
  %data5 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 0
  store i8* %3, i8** %data5, align 8, !tbaa !152
  %val = getelementptr inbounds %struct.heap_s, %struct.heap_s* %1, i64 0, i32 1
  %4 = load i32, i32* %val, align 8, !tbaa !154
  %val6 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 1
  store i32 %4, i32* %val6, align 8, !tbaa !154
  %call = tail call fastcc %struct.heap_s* @subheap_pop(%struct.heap_s* nonnull %1) #36
  store %struct.heap_s* %call, %struct.heap_s** %r2, align 8, !tbaa !157
  %nr = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 3
  %5 = load i32, i32* %nr, align 8, !tbaa !155
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %nr, align 8, !tbaa !155
  br label %common.ret

if.else8:                                         ; preds = %entry
  %val15.phi.trans.insert = getelementptr inbounds %struct.heap_s, %struct.heap_s* %0, i64 0, i32 1
  %.pre = load i32, i32* %val15.phi.trans.insert, align 8, !tbaa !154
  br i1 %tobool3.not, label %if.then12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else8
  %val11 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %1, i64 0, i32 1
  %6 = load i32, i32* %val11, align 8, !tbaa !154
  %cmp = icmp slt i32 %.pre, %6
  br i1 %cmp, label %if.then12, label %if.else20

if.then12:                                        ; preds = %if.else8, %lor.lhs.false
  %data13 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %0, i64 0, i32 0
  %7 = load i8*, i8** %data13, align 8, !tbaa !152
  %data14 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 0
  store i8* %7, i8** %data14, align 8, !tbaa !152
  %val16 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 1
  store i32 %.pre, i32* %val16, align 8, !tbaa !154
  %call17 = tail call fastcc %struct.heap_s* @subheap_pop(%struct.heap_s* nonnull %0) #36
  store %struct.heap_s* %call17, %struct.heap_s** %l1, align 8, !tbaa !158
  %nl = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 2
  %8 = load i32, i32* %nl, align 4, !tbaa !156
  %dec19 = add nsw i32 %8, -1
  store i32 %dec19, i32* %nl, align 4, !tbaa !156
  br label %common.ret

if.else20:                                        ; preds = %lor.lhs.false
  %data21 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %1, i64 0, i32 0
  %9 = load i8*, i8** %data21, align 8, !tbaa !152
  %data22 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 0
  store i8* %9, i8** %data22, align 8, !tbaa !152
  %val24 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 1
  store i32 %6, i32* %val24, align 8, !tbaa !154
  %call25 = tail call fastcc %struct.heap_s* @subheap_pop(%struct.heap_s* nonnull %1) #36
  store %struct.heap_s* %call25, %struct.heap_s** %r2, align 8, !tbaa !157
  %nr27 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %root, i64 0, i32 3
  %10 = load i32, i32* %nr27, align 8, !tbaa !155
  %dec28 = add nsw i32 %10, -1
  store i32 %dec28, i32* %nr27, align 8, !tbaa !155
  br label %common.ret
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn
define i32 @heap_top(i8* nocapture readonly %heap, i8** nocapture %data, i32* nocapture %val) local_unnamed_addr #4 {
entry:
  %0 = bitcast i8* %heap to %struct.heap_s**
  %1 = load %struct.heap_s*, %struct.heap_s** %0, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.heap_s* %1, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %data1 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %1, i64 0, i32 0
  %2 = load i8*, i8** %data1, align 8, !tbaa !152
  store i8* %2, i8** %data, align 8, !tbaa !74
  %val2 = getelementptr inbounds %struct.heap_s, %struct.heap_s* %1, i64 0, i32 1
  %3 = load i32, i32* %val2, align 8, !tbaa !154
  store i32 %3, i32* %val, align 4, !tbaa !37
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 1, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @heap_destroy(i8* %heap) local_unnamed_addr #0 {
entry:
  %data = alloca i8*, align 8
  %val = alloca i32, align 4
  %0 = bitcast i8** %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #38
  %1 = bitcast i32* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #38
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %entry
  %call = call i32 @heap_pop(i8* %heap, i8** nonnull %data, i32* nonnull %val) #36
  %cmp = icmp sgt i32 %call, 0
  br i1 %cmp, label %while.cond, label %while.end, !llvm.loop !159

while.end:                                        ; preds = %while.cond
  tail call void @ckd_free(i8* %heap) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #38
  ret i32 0
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: noinline nounwind optsize uwtable
define i32 @fe_build_melfilters(%struct.melfb_t* nocapture %MEL_FB) local_unnamed_addr #0 {
entry:
  %num_filters = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL_FB, i64 0, i32 2
  %0 = load i32, i32* %num_filters, align 8, !tbaa !160
  %fft_size = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL_FB, i64 0, i32 3
  %1 = load i32, i32* %fft_size, align 4, !tbaa !162
  %call = tail call i8** @fe_create_2d(i32 %0, i32 %1, i32 4) #36
  %filter_coeffs = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL_FB, i64 0, i32 6
  %2 = bitcast float*** %filter_coeffs to i8***
  store i8** %call, i8*** %2, align 8, !tbaa !163
  %3 = load i32, i32* %num_filters, align 8, !tbaa !160
  %conv = sext i32 %3 to i64
  %call2 = tail call noalias align 16 i8* @calloc(i64 %conv, i64 4) #34
  %left_apex = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL_FB, i64 0, i32 8
  %4 = bitcast float** %left_apex to i8**
  store i8* %call2, i8** %4, align 8, !tbaa !164
  %call5 = tail call noalias align 16 i8* @calloc(i64 %conv, i64 4) #34
  %width = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL_FB, i64 0, i32 9
  %5 = bitcast i32** %width to i8**
  store i8* %call5, i8** %5, align 8, !tbaa !165
  %doublewide = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL_FB, i64 0, i32 10
  %6 = load i32, i32* %doublewide, align 8, !tbaa !166
  %cmp = icmp eq i32 %6, 1
  %. = select i1 %cmp, i32 4, i32 2
  %add11 = add nsw i32 %3, %.
  %conv12 = sext i32 %add11 to i64
  %call13 = tail call noalias align 16 i8* @calloc(i64 %conv12, i64 4) #34
  %filt_edge.0 = bitcast i8* %call13 to float*
  %cmp15 = icmp eq i8** %call, null
  %cmp18 = icmp eq i8* %call2, null
  %or.cond345 = or i1 %cmp15, %cmp18
  br i1 %or.cond345, label %if.then27, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %entry
  %cmp22 = icmp eq i8* %call5, null
  %cmp25 = icmp eq i8* %call13, null
  %or.cond = or i1 %cmp25, %cmp22
  br i1 %or.cond, label %if.then27, label %if.end29

if.then27:                                        ; preds = %lor.lhs.false20, %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %8 = tail call i64 @fwrite(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.99, i64 0, i64 0), i64 57, i64 1, %struct._IO_FILE* %7) #39
  tail call void @exit(i32 0) #40
  unreachable

if.end29:                                         ; preds = %lor.lhs.false20
  %sampling_rate = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL_FB, i64 0, i32 0
  %9 = load float, float* %sampling_rate, align 8, !tbaa !167
  %10 = load i32, i32* %fft_size, align 4, !tbaa !162
  %conv31 = sitofp i32 %10 to float
  %div = fdiv float %9, %conv31
  %upper_filt_freq = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL_FB, i64 0, i32 5
  %11 = load float, float* %upper_filt_freq, align 4, !tbaa !168
  %call32 = tail call float @fe_mel(float %11) #36
  %lower_filt_freq = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL_FB, i64 0, i32 4
  %12 = load float, float* %lower_filt_freq, align 8, !tbaa !169
  %call33 = tail call float @fe_mel(float %12) #36
  %sub = fsub float %call32, %call33
  %13 = load i32, i32* %num_filters, align 8, !tbaa !160
  %add35 = add nsw i32 %13, 1
  %conv36 = sitofp i32 %add35 to float
  %div37 = fdiv float %sub, %conv36
  %14 = load i32, i32* %doublewide, align 8, !tbaa !166
  %cmp39 = icmp eq i32 %14, 1
  br i1 %cmp39, label %for.cond.preheader, label %for.cond49.preheader

for.cond49.preheader:                             ; preds = %if.end29
  %cmp52.not329 = icmp slt i32 %13, -1
  br i1 %cmp52.not329, label %for.end189, label %for.body54

for.cond.preheader:                               ; preds = %if.end29
  %cmp44.not326 = icmp slt i32 %13, -3
  br i1 %cmp44.not326, label %for.end189, label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv338 = phi i64 [ %indvars.iv.next339, %for.body ], [ 0, %for.cond.preheader ]
  %15 = trunc i64 %indvars.iv338 to i32
  %conv46 = sitofp i32 %15 to float
  %16 = tail call float @llvm.fmuladd.f32(float %conv46, float %div37, float %call33)
  %call47 = tail call float @fe_melinv(float %16) #36
  %arrayidx = getelementptr inbounds float, float* %filt_edge.0, i64 %indvars.iv338
  store float %call47, float* %arrayidx, align 4, !tbaa !4
  %indvars.iv.next339 = add nuw nsw i64 %indvars.iv338, 1
  %17 = load i32, i32* %num_filters, align 8, !tbaa !160
  %add43 = add nsw i32 %17, 3
  %18 = sext i32 %add43 to i64
  %cmp44.not.not = icmp slt i64 %indvars.iv338, %18
  br i1 %cmp44.not.not, label %for.body, label %if.end62, !llvm.loop !170

for.body54:                                       ; preds = %for.cond49.preheader, %for.body54
  %indvars.iv340 = phi i64 [ %indvars.iv.next341, %for.body54 ], [ 0, %for.cond49.preheader ]
  %19 = trunc i64 %indvars.iv340 to i32
  %conv55 = sitofp i32 %19 to float
  %20 = tail call float @llvm.fmuladd.f32(float %conv55, float %div37, float %call33)
  %call56 = tail call float @fe_melinv(float %20) #36
  %arrayidx58 = getelementptr inbounds float, float* %filt_edge.0, i64 %indvars.iv340
  store float %call56, float* %arrayidx58, align 4, !tbaa !4
  %indvars.iv.next341 = add nuw nsw i64 %indvars.iv340, 1
  %21 = load i32, i32* %num_filters, align 8, !tbaa !160
  %22 = sext i32 %21 to i64
  %cmp52.not = icmp sgt i64 %indvars.iv340, %22
  br i1 %cmp52.not, label %if.end62, label %for.body54, !llvm.loop !171

if.end62:                                         ; preds = %for.body54, %for.body
  %23 = phi i32 [ %17, %for.body ], [ %21, %for.body54 ]
  %cmp65321 = icmp sgt i32 %23, 0
  br i1 %cmp65321, label %for.body67.lr.ph, label %for.end189

for.body67.lr.ph:                                 ; preds = %if.end62
  %24 = load float*, float** %left_apex, align 8, !tbaa !164
  %25 = load i32*, i32** %width, align 8, !tbaa !165
  br label %for.body67

for.body67:                                       ; preds = %for.body67.lr.ph, %while.end183
  %indvars.iv334 = phi i64 [ 0, %for.body67.lr.ph ], [ %indvars.iv.next335, %while.end183 ]
  %rightslope.0324 = phi float [ undef, %for.body67.lr.ph ], [ %rightslope.1, %while.end183 ]
  %leftslope.0323 = phi float [ undef, %for.body67.lr.ph ], [ %leftslope.1, %while.end183 ]
  %whichfilt.0322 = phi i32 [ 0, %for.body67.lr.ph ], [ %add106, %while.end183 ]
  %26 = load i32, i32* %doublewide, align 8, !tbaa !166
  %cmp69 = icmp eq i32 %26, 1
  %add88 = add nuw nsw i32 %whichfilt.0322, 4
  %indvars.iv.next335 = add nuw nsw i64 %indvars.iv334, 1
  %add106 = add nuw nsw i32 %whichfilt.0322, 1
  %27 = trunc i64 %indvars.iv334 to i32
  %28 = add i32 %27, 2
  %idxprom89.pn.in = select i1 %cmp69, i32 %add88, i32 %28
  %idxprom80.pn.in = select i1 %cmp69, i32 %28, i32 %add106
  %idxprom89.pn = zext i32 %idxprom89.pn.in to i64
  %.pn311.in = getelementptr inbounds float, float* %filt_edge.0, i64 %idxprom89.pn
  %.pn311 = load float, float* %.pn311.in, align 4, !tbaa !4
  %conv95.pn.in.in.in.in = fdiv float %.pn311, %div
  %conv95.pn.in.in.in = fpext float %conv95.pn.in.in.in.in to double
  %conv95.pn.in.in = fadd double %conv95.pn.in.in.in, 5.000000e-01
  %conv95.pn.in = fptosi double %conv95.pn.in.in to i32
  %conv95.pn = sitofp i32 %conv95.pn.in to float
  %rightfr.0 = fmul float %div, %conv95.pn
  %idxprom80.pn = zext i32 %idxprom80.pn.in to i64
  %.pn310.in = getelementptr inbounds float, float* %filt_edge.0, i64 %idxprom80.pn
  %.pn310 = load float, float* %.pn310.in, align 4, !tbaa !4
  %conv86.pn.in.in.in.in = fdiv float %.pn310, %div
  %conv86.pn.in.in.in = fpext float %conv86.pn.in.in.in.in to double
  %conv86.pn.in.in = fadd double %conv86.pn.in.in.in, 5.000000e-01
  %conv86.pn.in = fptosi double %conv86.pn.in.in to i32
  %conv86.pn = sitofp i32 %conv86.pn.in to float
  %centerfr.0 = fmul float %div, %conv86.pn
  %.pn.in = getelementptr inbounds float, float* %filt_edge.0, i64 %indvars.iv334
  %.pn = load float, float* %.pn.in, align 4, !tbaa !4
  %conv78.pn.in.in.in.in = fdiv float %.pn, %div
  %conv78.pn.in.in.in = fpext float %conv78.pn.in.in.in.in to double
  %conv78.pn.in.in = fadd double %conv78.pn.in.in.in, 5.000000e-01
  %conv78.pn.in = fptosi double %conv78.pn.in.in to i32
  %conv78.pn = sitofp i32 %conv78.pn.in to float
  %leftfr.0 = fmul float %div, %conv78.pn
  %arrayidx127 = getelementptr inbounds float, float* %24, i64 %indvars.iv334
  store float %leftfr.0, float* %arrayidx127, align 4, !tbaa !4
  %sub128 = fsub float %rightfr.0, %leftfr.0
  %div129 = fdiv float 2.000000e+00, %sub128
  %cmp130 = fcmp une float %centerfr.0, %leftfr.0
  br i1 %cmp130, label %if.then132, label %if.end135

if.then132:                                       ; preds = %for.body67
  %sub133 = fsub float %centerfr.0, %leftfr.0
  %div134 = fdiv float %div129, %sub133
  br label %if.end135

if.end135:                                        ; preds = %if.then132, %for.body67
  %leftslope.1 = phi float [ %div134, %if.then132 ], [ %leftslope.0323, %for.body67 ]
  %cmp136 = fcmp une float %centerfr.0, %rightfr.0
  br i1 %cmp136, label %if.then138, label %if.end141

if.then138:                                       ; preds = %if.end135
  %sub139 = fsub float %centerfr.0, %rightfr.0
  %div140 = fdiv float %div129, %sub139
  br label %if.end141

if.end141:                                        ; preds = %if.then138, %if.end135
  %rightslope.1 = phi float [ %div140, %if.then138 ], [ %rightslope.0324, %if.end135 ]
  %div142 = fdiv float %leftfr.0, %div
  %conv143 = fpext float %div142 to double
  %add144 = fadd double %conv143, 5.000000e-01
  %conv145 = fptosi double %add144 to i32
  %conv146 = sitofp i32 %conv145 to float
  %mul147 = fmul float %div, %conv146
  %cmp148313 = fcmp olt float %mul147, %centerfr.0
  br i1 %cmp148313, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %if.end141
  %29 = load float**, float*** %filter_coeffs, align 8, !tbaa !163
  %arrayidx154 = getelementptr inbounds float*, float** %29, i64 %indvars.iv334
  %30 = load float*, float** %arrayidx154, align 8, !tbaa !74
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %indvars.iv = phi i64 [ 0, %while.body.lr.ph ], [ %indvars.iv.next, %while.body ]
  %freq.0314 = phi float [ %mul147, %while.body.lr.ph ], [ %add157, %while.body ]
  %sub150 = fsub float %freq.0314, %leftfr.0
  %mul151 = fmul float %leftslope.1, %sub150
  %arrayidx156 = getelementptr inbounds float, float* %30, i64 %indvars.iv
  store float %mul151, float* %arrayidx156, align 4, !tbaa !4
  %add157 = fadd float %div, %freq.0314
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %cmp148 = fcmp olt float %add157, %centerfr.0
  br i1 %cmp148, label %while.body, label %while.end.loopexit, !llvm.loop !172

while.end.loopexit:                               ; preds = %while.body
  %31 = trunc i64 %indvars.iv.next to i32
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %if.end141
  %freq.0.lcssa = phi float [ %mul147, %if.end141 ], [ %add157, %while.end.loopexit ]
  %i.2.lcssa = phi i32 [ 0, %if.end141 ], [ %31, %while.end.loopexit ]
  %cmp159 = fcmp oeq float %freq.0.lcssa, %centerfr.0
  br i1 %cmp159, label %if.then161, label %if.end169

if.then161:                                       ; preds = %while.end
  %32 = load float**, float*** %filter_coeffs, align 8, !tbaa !163
  %arrayidx164 = getelementptr inbounds float*, float** %32, i64 %indvars.iv334
  %33 = load float*, float** %arrayidx164, align 8, !tbaa !74
  %idxprom165 = zext i32 %i.2.lcssa to i64
  %arrayidx166 = getelementptr inbounds float, float* %33, i64 %idxprom165
  store float %div129, float* %arrayidx166, align 4, !tbaa !4
  %add167 = fadd float %div, %freq.0.lcssa
  %inc168 = add nuw nsw i32 %i.2.lcssa, 1
  br label %if.end169

if.end169:                                        ; preds = %if.then161, %while.end
  %freq.1 = phi float [ %add167, %if.then161 ], [ %freq.0.lcssa, %while.end ]
  %i.3 = phi i32 [ %inc168, %if.then161 ], [ %i.2.lcssa, %while.end ]
  %cmp171317 = fcmp olt float %freq.1, %rightfr.0
  br i1 %cmp171317, label %while.body173.lr.ph, label %while.end183

while.body173.lr.ph:                              ; preds = %if.end169
  %34 = load float**, float*** %filter_coeffs, align 8, !tbaa !163
  %arrayidx178 = getelementptr inbounds float*, float** %34, i64 %indvars.iv334
  %35 = load float*, float** %arrayidx178, align 8, !tbaa !74
  %36 = sext i32 %i.3 to i64
  br label %while.body173

while.body173:                                    ; preds = %while.body173.lr.ph, %while.body173
  %indvars.iv332 = phi i64 [ %36, %while.body173.lr.ph ], [ %indvars.iv.next333, %while.body173 ]
  %freq.2318 = phi float [ %freq.1, %while.body173.lr.ph ], [ %add181, %while.body173 ]
  %sub174 = fsub float %freq.2318, %rightfr.0
  %mul175 = fmul float %rightslope.1, %sub174
  %arrayidx180 = getelementptr inbounds float, float* %35, i64 %indvars.iv332
  store float %mul175, float* %arrayidx180, align 4, !tbaa !4
  %add181 = fadd float %div, %freq.2318
  %indvars.iv.next333 = add i64 %indvars.iv332, 1
  %cmp171 = fcmp olt float %add181, %rightfr.0
  br i1 %cmp171, label %while.body173, label %while.end183.loopexit, !llvm.loop !173

while.end183.loopexit:                            ; preds = %while.body173
  %37 = trunc i64 %indvars.iv.next333 to i32
  br label %while.end183

while.end183:                                     ; preds = %while.end183.loopexit, %if.end169
  %i.4.lcssa = phi i32 [ %i.3, %if.end169 ], [ %37, %while.end183.loopexit ]
  %arrayidx186 = getelementptr inbounds i32, i32* %25, i64 %indvars.iv334
  store i32 %i.4.lcssa, i32* %arrayidx186, align 4, !tbaa !37
  %38 = load i32, i32* %num_filters, align 8, !tbaa !160
  %39 = sext i32 %38 to i64
  %cmp65 = icmp slt i64 %indvars.iv.next335, %39
  br i1 %cmp65, label %for.body67, label %for.end189, !llvm.loop !174

for.end189:                                       ; preds = %while.end183, %for.cond.preheader, %for.cond49.preheader, %if.end62
  tail call void @free(i8* %call13) #34
  ret i32 0
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias i8** @fe_create_2d(i32 %d1, i32 %d2, i32 %elem_size) local_unnamed_addr #0 {
entry:
  %mul = mul nsw i32 %d2, %d1
  %conv = sext i32 %mul to i64
  %conv1 = sext i32 %elem_size to i64
  %call = tail call noalias align 16 i8* @calloc(i64 %conv, i64 %conv1) #34
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %1 = tail call i64 @fwrite(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7.100, i64 0, i64 0), i64 20, i64 1, %struct._IO_FILE* %0) #39
  br label %cleanup

if.end:                                           ; preds = %entry
  %conv4 = sext i32 %d1 to i64
  %call5 = tail call noalias align 16 i8* @calloc(i64 %conv4, i64 8) #34
  %2 = bitcast i8* %call5 to i8**
  %cmp6 = icmp eq i8* %call5, null
  br i1 %cmp6, label %if.then8, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end
  %cmp1134 = icmp sgt i32 %d1, 0
  br i1 %cmp1134, label %for.body.preheader, label %cleanup

for.body.preheader:                               ; preds = %for.cond.preheader
  %3 = sext i32 %d2 to i64
  %wide.trip.count = zext i32 %d1 to i64
  br label %for.body

if.then8:                                         ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %5 = tail call i64 @fwrite(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7.100, i64 0, i64 0), i64 20, i64 1, %struct._IO_FILE* %4) #39
  tail call void @free(i8* nonnull %call) #34
  br label %cleanup

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv38 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next39, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %6 = mul nsw i64 %indvars.iv, %conv1
  %arrayidx = getelementptr inbounds i8, i8* %call, i64 %6
  %arrayidx15 = getelementptr inbounds i8*, i8** %2, i64 %indvars.iv38
  store i8* %arrayidx, i8** %arrayidx15, align 8, !tbaa !74
  %indvars.iv.next39 = add nuw nsw i64 %indvars.iv38, 1
  %indvars.iv.next = add nsw i64 %indvars.iv, %3
  %exitcond.not = icmp eq i64 %indvars.iv.next39, %wide.trip.count
  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !175

cleanup:                                          ; preds = %for.body, %for.cond.preheader, %if.then8, %if.then
  %retval.0 = phi i8** [ null, %if.then ], [ null, %if.then8 ], [ %2, %for.cond.preheader ], [ %2, %for.body ]
  ret i8** %retval.0
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn
declare noalias noundef align 16 i8* @calloc(i64 noundef, i64 noundef) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(i8* nocapture noundef, i64 noundef, i64 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #7

; Function Attrs: noreturn nounwind optsize
declare void @exit(i32) local_unnamed_addr #8

; Function Attrs: mustprogress nofree noinline nounwind optsize uwtable willreturn
define float @fe_mel(float %x) local_unnamed_addr #9 {
entry:
  %conv = fpext float %x to double
  %div = fdiv double %conv, 7.000000e+02
  %add = fadd double %div, 1.000000e+00
  %call = tail call double @log10(double %add) #34
  %conv1 = fptrunc double %call to float
  %conv3 = fmul float %conv1, 2.595000e+03
  ret float %conv3
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fmuladd.f32(float, float, float) #10

; Function Attrs: mustprogress nofree noinline nounwind optsize uwtable willreturn
define float @fe_melinv(float %x) local_unnamed_addr #9 {
entry:
  %conv = fpext float %x to double
  %div = fdiv double %conv, 2.595000e+03
  %call = tail call double @pow(double 1.000000e+01, double %div) #34
  %conv1 = fptrunc double %call to float
  %conv2 = fpext float %conv1 to double
  %sub = fadd double %conv2, -1.000000e+00
  %mul = fmul double %sub, 7.000000e+02
  %conv3 = fptrunc double %mul to float
  ret float %conv3
}

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind optsize willreturn
declare void @free(i8* nocapture noundef) local_unnamed_addr #11

; Function Attrs: mustprogress nofree nounwind optsize willreturn
declare double @pow(double, double) local_unnamed_addr #6

; Function Attrs: mustprogress nofree nounwind optsize willreturn
declare double @log10(double) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize uwtable
define i32 @fe_compute_melcosine(%struct.melfb_t* nocapture %MEL_FB) local_unnamed_addr #0 {
entry:
  %num_filters = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL_FB, i64 0, i32 2
  %0 = load i32, i32* %num_filters, align 8, !tbaa !160
  %conv = sitofp i32 %0 to double
  %mul = fmul double %conv, 2.000000e+00
  %num_cepstra = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL_FB, i64 0, i32 1
  %1 = load i32, i32* %num_cepstra, align 4, !tbaa !176
  %call = tail call i8** @fe_create_2d(i32 %1, i32 %0, i32 4) #36
  %mel_cosine = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL_FB, i64 0, i32 7
  %2 = bitcast float*** %mel_cosine to i8***
  store i8** %call, i8*** %2, align 8, !tbaa !177
  %cmp = icmp eq i8** %call, null
  br i1 %cmp, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %3 = load i32, i32* %num_cepstra, align 4, !tbaa !176
  %cmp542 = icmp sgt i32 %3, 0
  br i1 %cmp542, label %for.body.preheader, label %for.end23

for.body.preheader:                               ; preds = %for.cond.preheader
  %.pre = load i32, i32* %num_filters, align 8, !tbaa !160
  br label %for.body

if.then:                                          ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %5 = tail call i64 @fwrite(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.101, i64 0, i64 0), i64 57, i64 1, %struct._IO_FILE* %4) #39
  tail call void @exit(i32 0) #40
  unreachable

for.body:                                         ; preds = %for.body.preheader, %for.inc21
  %6 = phi i32 [ %3, %for.body.preheader ], [ %14, %for.inc21 ]
  %7 = phi i32 [ %.pre, %for.body.preheader ], [ %15, %for.inc21 ]
  %indvars.iv44 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next45, %for.inc21 ]
  %8 = trunc i64 %indvars.iv44 to i32
  %conv7 = sitofp i32 %8 to double
  %mul8 = fmul double %conv7, 0x401921FB54442D18
  %div = fdiv double %mul8, %mul
  %cmp1140 = icmp sgt i32 %7, 0
  br i1 %cmp1140, label %for.body13, label %for.inc21

for.body13:                                       ; preds = %for.body, %for.body13
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body13 ], [ 0, %for.body ]
  %9 = trunc i64 %indvars.iv to i32
  %conv14 = sitofp i32 %9 to double
  %add = fadd double %conv14, 5.000000e-01
  %mul15 = fmul double %div, %add
  %call16 = tail call double @cos(double %mul15) #34
  %conv17 = fptrunc double %call16 to float
  %10 = load float**, float*** %mel_cosine, align 8, !tbaa !177
  %arrayidx = getelementptr inbounds float*, float** %10, i64 %indvars.iv44
  %11 = load float*, float** %arrayidx, align 8, !tbaa !74
  %arrayidx20 = getelementptr inbounds float, float* %11, i64 %indvars.iv
  store float %conv17, float* %arrayidx20, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %12 = load i32, i32* %num_filters, align 8, !tbaa !160
  %13 = sext i32 %12 to i64
  %cmp11 = icmp slt i64 %indvars.iv.next, %13
  br i1 %cmp11, label %for.body13, label %for.inc21.loopexit, !llvm.loop !178

for.inc21.loopexit:                               ; preds = %for.body13
  %.pre46 = load i32, i32* %num_cepstra, align 4, !tbaa !176
  br label %for.inc21

for.inc21:                                        ; preds = %for.inc21.loopexit, %for.body
  %14 = phi i32 [ %.pre46, %for.inc21.loopexit ], [ %6, %for.body ]
  %15 = phi i32 [ %12, %for.inc21.loopexit ], [ %7, %for.body ]
  %indvars.iv.next45 = add nuw nsw i64 %indvars.iv44, 1
  %16 = sext i32 %14 to i64
  %cmp5 = icmp slt i64 %indvars.iv.next45, %16
  br i1 %cmp5, label %for.body, label %for.end23, !llvm.loop !179

for.end23:                                        ; preds = %for.inc21, %for.cond.preheader
  ret i32 0
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn
declare double @cos(double) local_unnamed_addr #6

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @fe_pre_emphasis(i16* nocapture readonly %in, double* nocapture %out, i32 %len, float %factor, i16 signext %prior) local_unnamed_addr #12 {
entry:
  %0 = load i16, i16* %in, align 2, !tbaa !40
  %conv = sitofp i16 %0 to double
  %conv1 = fpext float %factor to double
  %conv2 = sitofp i16 %prior to double
  %neg = fneg double %conv1
  %1 = tail call double @llvm.fmuladd.f64(double %neg, double %conv2, double %conv)
  store double %1, double* %out, align 8, !tbaa !96
  %cmp23 = icmp sgt i32 %len, 1
  br i1 %cmp23, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %2 = phi i16 [ %0, %for.body.preheader ], [ %3, %for.body ]
  %indvars.iv = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %arrayidx5 = getelementptr inbounds i16, i16* %in, i64 %indvars.iv
  %3 = load i16, i16* %arrayidx5, align 2, !tbaa !40
  %conv6 = sitofp i16 %3 to double
  %conv10 = sitofp i16 %2 to double
  %4 = tail call double @llvm.fmuladd.f64(double %neg, double %conv10, double %conv6)
  %arrayidx13 = getelementptr inbounds double, double* %out, i64 %indvars.iv
  store double %4, double* %arrayidx13, align 8, !tbaa !96
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !180

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fmuladd.f64(double, double, double) #10

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @fe_short_to_double(i16* nocapture readonly %in, double* nocapture %out, i32 %len) local_unnamed_addr #13 {
entry:
  %cmp7 = icmp sgt i32 %len, 0
  br i1 %cmp7, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds i16, i16* %in, i64 %indvars.iv
  %0 = load i16, i16* %arrayidx, align 2, !tbaa !40
  %conv = sitofp i16 %0 to double
  %arrayidx2 = getelementptr inbounds double, double* %out, i64 %indvars.iv
  store double %conv, double* %arrayidx2, align 8, !tbaa !96
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !181

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @fe_create_hamming(double* nocapture %in, i32 %in_len) local_unnamed_addr #14 {
entry:
  %cmp = icmp sgt i32 %in_len, 1
  br i1 %cmp, label %for.body.preheader, label %if.end

for.body.preheader:                               ; preds = %entry
  %conv2 = sitofp i32 %in_len to double
  %sub = fadd double %conv2, -1.000000e+00
  %wide.trip.count = zext i32 %in_len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %0 = trunc i64 %indvars.iv to i32
  %conv = sitofp i32 %0 to double
  %mul = fmul double %conv, 0x401921FB54442D18
  %div = fdiv double %mul, %sub
  %call = tail call double @cos(double %div) #34
  %1 = tail call double @llvm.fmuladd.f64(double %call, double -4.600000e-01, double 5.400000e-01)
  %arrayidx = getelementptr inbounds double, double* %in, i64 %indvars.iv
  store double %1, double* %arrayidx, align 8, !tbaa !96
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end, label %for.body, !llvm.loop !182

if.end:                                           ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @fe_hamming_window(double* nocapture %in, double* nocapture readonly %window, i32 %in_len) local_unnamed_addr #13 {
entry:
  %cmp = icmp sgt i32 %in_len, 1
  br i1 %cmp, label %for.body.preheader, label %if.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %in_len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds double, double* %window, i64 %indvars.iv
  %0 = load double, double* %arrayidx, align 8, !tbaa !96
  %arrayidx3 = getelementptr inbounds double, double* %in, i64 %indvars.iv
  %1 = load double, double* %arrayidx3, align 8, !tbaa !96
  %mul = fmul double %0, %1
  store double %mul, double* %arrayidx3, align 8, !tbaa !96
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end, label %for.body, !llvm.loop !183

if.end:                                           ; preds = %for.body, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @fe_frame_to_fea(%struct.fe_t* nocapture readonly %FE, double* nocapture readonly %in, double* nocapture %fea) local_unnamed_addr #0 {
entry:
  %FB_TYPE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 6
  %0 = load i32, i32* %FB_TYPE, align 8, !tbaa !184
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %FFT_SIZE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 5
  %1 = load i32, i32* %FFT_SIZE, align 4, !tbaa !186
  %conv = sext i32 %1 to i64
  %call = tail call noalias align 16 i8* @calloc(i64 %conv, i64 8) #34
  %2 = bitcast i8* %call to double*
  %MEL_FB = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 11
  %3 = load %struct.melfb_t*, %struct.melfb_t** %MEL_FB, align 8, !tbaa !187
  %num_filters = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %3, i64 0, i32 2
  %4 = load i32, i32* %num_filters, align 8, !tbaa !160
  %conv1 = sext i32 %4 to i64
  %call2 = tail call noalias align 16 i8* @calloc(i64 %conv1, i64 8) #34
  %5 = bitcast i8* %call2 to double*
  %cmp3 = icmp eq i8* %call, null
  %cmp5 = icmp eq i8* %call2, null
  %or.cond = or i1 %cmp3, %cmp5
  br i1 %or.cond, label %if.then7, label %if.end

if.then7:                                         ; preds = %if.then
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %7 = tail call i64 @fwrite(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.102, i64 0, i64 0), i64 52, i64 1, %struct._IO_FILE* %6) #39
  tail call void @exit(i32 0) #40
  br label %UnifiedUnreachableBlock

if.end:                                           ; preds = %if.then
  %FRAME_SIZE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 4
  %8 = load i32, i32* %FRAME_SIZE, align 8, !tbaa !188
  tail call void @fe_spec_magnitude(double* %in, i32 %8, double* %2, i32 %1) #36
  tail call void @fe_mel_spec(%struct.fe_t* nonnull %FE, double* %2, double* %5) #36
  tail call void @fe_mel_cep(%struct.fe_t* nonnull %FE, double* %5, double* %fea) #36
  tail call void @free(i8* nonnull %call) #34
  tail call void @free(i8* nonnull %call2) #34
  ret void

if.else:                                          ; preds = %entry
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %10 = tail call i64 @fwrite(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3.103, i64 0, i64 0), i64 48, i64 1, %struct._IO_FILE* %9) #39
  tail call void @exit(i32 0) #40
  br label %UnifiedUnreachableBlock

UnifiedUnreachableBlock:                          ; preds = %if.else, %if.then7
  unreachable
}

; Function Attrs: noinline nounwind optsize uwtable
define void @fe_spec_magnitude(double* nocapture readonly %data, i32 %data_len, double* nocapture %spec, i32 %fftsize) local_unnamed_addr #0 {
entry:
  %conv = sext i32 %fftsize to i64
  %call = tail call noalias align 16 i8* @calloc(i64 %conv, i64 16) #34
  %0 = bitcast i8* %call to %struct.complex*
  %call2 = tail call noalias align 16 i8* @calloc(i64 %conv, i64 16) #34
  %1 = bitcast i8* %call2 to %struct.complex*
  %cmp = icmp eq i8* %call, null
  %cmp4 = icmp eq i8* %call2, null
  %or.cond = or i1 %cmp, %cmp4
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %3 = tail call i64 @fwrite(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4.104, i64 0, i64 0), i64 54, i64 1, %struct._IO_FILE* %2) #39
  tail call void @exit(i32 0) #40
  unreachable

if.end:                                           ; preds = %entry
  %cmp7 = icmp sgt i32 %data_len, %fftsize
  br i1 %cmp7, label %for.cond.preheader, label %for.cond33.preheader

for.cond33.preheader:                             ; preds = %if.end
  %cmp34151 = icmp sgt i32 %data_len, 0
  br i1 %cmp34151, label %for.body36.preheader, label %for.cond48.preheader

for.body36.preheader:                             ; preds = %for.cond33.preheader
  %wide.trip.count169 = zext i32 %data_len to i64
  br label %for.body36

for.cond.preheader:                               ; preds = %if.end
  %cmp10147 = icmp sgt i32 %fftsize, 0
  br i1 %cmp10147, label %for.body.preheader, label %for.cond16.preheader

for.body.preheader:                               ; preds = %for.cond.preheader
  %wide.trip.count163 = zext i32 %fftsize to i64
  br label %for.body

for.cond16.preheader:                             ; preds = %for.body, %for.cond.preheader
  %j.0.lcssa = phi i32 [ 0, %for.cond.preheader ], [ %fftsize, %for.body ]
  %cmp17144 = icmp slt i32 %j.0.lcssa, %data_len
  br i1 %cmp17144, label %for.body19.preheader, label %if.end61

for.body19.preheader:                             ; preds = %for.cond16.preheader
  %4 = zext i32 %j.0.lcssa to i64
  %5 = sub i32 %data_len, %j.0.lcssa
  %wide.trip.count159 = zext i32 %5 to i64
  br label %for.body19

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv161 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next162, %for.body ]
  %arrayidx = getelementptr inbounds double, double* %data, i64 %indvars.iv161
  %6 = load double, double* %arrayidx, align 8, !tbaa !96
  %r = getelementptr inbounds %struct.complex, %struct.complex* %1, i64 %indvars.iv161, i32 0
  store double %6, double* %r, align 16, !tbaa !189
  %i = getelementptr inbounds %struct.complex, %struct.complex* %1, i64 %indvars.iv161, i32 1
  store double 0.000000e+00, double* %i, align 8, !tbaa !191
  %indvars.iv.next162 = add nuw nsw i64 %indvars.iv161, 1
  %exitcond164.not = icmp eq i64 %indvars.iv.next162, %wide.trip.count163
  br i1 %exitcond164.not, label %for.cond16.preheader, label %for.body, !llvm.loop !192

for.body19:                                       ; preds = %for.body19.preheader, %for.body19
  %indvars.iv157 = phi i64 [ 0, %for.body19.preheader ], [ %indvars.iv.next158, %for.body19 ]
  %indvars.iv155 = phi i64 [ %4, %for.body19.preheader ], [ %indvars.iv.next156, %for.body19 ]
  %arrayidx21 = getelementptr inbounds double, double* %data, i64 %indvars.iv155
  %7 = load double, double* %arrayidx21, align 8, !tbaa !96
  %r24 = getelementptr inbounds %struct.complex, %struct.complex* %1, i64 %indvars.iv157, i32 0
  %8 = load double, double* %r24, align 16, !tbaa !189
  %add = fadd double %7, %8
  store double %add, double* %r24, align 16, !tbaa !189
  %i27 = getelementptr inbounds %struct.complex, %struct.complex* %1, i64 %indvars.iv157, i32 1
  %9 = load double, double* %i27, align 8, !tbaa !191
  %add28 = fadd double %9, 0.000000e+00
  store double %add28, double* %i27, align 8, !tbaa !191
  %indvars.iv.next158 = add nuw nsw i64 %indvars.iv157, 1
  %indvars.iv.next156 = add nuw nsw i64 %indvars.iv155, 1
  %exitcond160.not = icmp eq i64 %indvars.iv.next158, %wide.trip.count159
  br i1 %exitcond160.not, label %if.end61, label %for.body19, !llvm.loop !193

for.cond48.preheader:                             ; preds = %for.body36, %for.cond33.preheader
  %j.2.lcssa = phi i32 [ 0, %for.cond33.preheader ], [ %data_len, %for.body36 ]
  %cmp49149 = icmp slt i32 %j.2.lcssa, %fftsize
  br i1 %cmp49149, label %for.body51.preheader, label %if.end61

for.body51.preheader:                             ; preds = %for.cond48.preheader
  %10 = zext i32 %j.2.lcssa to i64
  %11 = shl nuw nsw i64 %10, 4
  %scevgep = getelementptr i8, i8* %call2, i64 %11
  %12 = xor i32 %j.2.lcssa, -1
  %13 = add i32 %12, %fftsize
  %14 = zext i32 %13 to i64
  %15 = shl nuw nsw i64 %14, 4
  %16 = add nuw nsw i64 %15, 16
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 16 dereferenceable(1) %scevgep, i8 0, i64 %16, i1 false)
  br label %if.end61

for.body36:                                       ; preds = %for.body36.preheader, %for.body36
  %indvars.iv167 = phi i64 [ 0, %for.body36.preheader ], [ %indvars.iv.next168, %for.body36 ]
  %arrayidx38 = getelementptr inbounds double, double* %data, i64 %indvars.iv167
  %17 = load double, double* %arrayidx38, align 8, !tbaa !96
  %r41 = getelementptr inbounds %struct.complex, %struct.complex* %1, i64 %indvars.iv167, i32 0
  store double %17, double* %r41, align 16, !tbaa !189
  %i44 = getelementptr inbounds %struct.complex, %struct.complex* %1, i64 %indvars.iv167, i32 1
  store double 0.000000e+00, double* %i44, align 8, !tbaa !191
  %indvars.iv.next168 = add nuw nsw i64 %indvars.iv167, 1
  %exitcond170.not = icmp eq i64 %indvars.iv.next168, %wide.trip.count169
  br i1 %exitcond170.not, label %for.cond48.preheader, label %for.body36, !llvm.loop !194

if.end61:                                         ; preds = %for.body19, %for.body51.preheader, %for.cond48.preheader, %for.cond16.preheader
  %call62 = tail call i32 @fe_fft(%struct.complex* %1, %struct.complex* %0, i32 %fftsize, i32 1) #36
  %cmp64.not142 = icmp slt i32 %fftsize, -1
  br i1 %cmp64.not142, label %for.end84, label %for.body66.preheader

for.body66.preheader:                             ; preds = %if.end61
  %div = sdiv i32 %fftsize, 2
  %18 = add nuw nsw i32 %div, 1
  %wide.trip.count = zext i32 %18 to i64
  br label %for.body66

for.body66:                                       ; preds = %for.body66.preheader, %for.body66
  %indvars.iv = phi i64 [ 0, %for.body66.preheader ], [ %indvars.iv.next, %for.body66 ]
  %r69 = getelementptr inbounds %struct.complex, %struct.complex* %0, i64 %indvars.iv, i32 0
  %19 = load double, double* %r69, align 16, !tbaa !189
  %i75 = getelementptr inbounds %struct.complex, %struct.complex* %0, i64 %indvars.iv, i32 1
  %20 = load double, double* %i75, align 8, !tbaa !191
  %mul79 = fmul double %20, %20
  %21 = tail call double @llvm.fmuladd.f64(double %19, double %19, double %mul79)
  %arrayidx81 = getelementptr inbounds double, double* %spec, i64 %indvars.iv
  store double %21, double* %arrayidx81, align 8, !tbaa !96
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end84, label %for.body66, !llvm.loop !195

for.end84:                                        ; preds = %for.body66, %if.end61
  tail call void @free(i8* %call) #34
  tail call void @free(i8* %call2) #34
  ret void
}

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @fe_mel_spec(%struct.fe_t* nocapture readonly %FE, double* nocapture readonly %spec, double* nocapture %mfspec) local_unnamed_addr #12 {
entry:
  %SAMPLING_RATE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 0
  %0 = load float, float* %SAMPLING_RATE, align 8, !tbaa !196
  %FFT_SIZE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 5
  %1 = load i32, i32* %FFT_SIZE, align 4, !tbaa !186
  %conv = sitofp i32 %1 to float
  %div = fdiv float %0, %conv
  %MEL_FB = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 11
  %2 = load %struct.melfb_t*, %struct.melfb_t** %MEL_FB, align 8, !tbaa !187
  %num_filters = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %2, i64 0, i32 2
  %3 = load i32, i32* %num_filters, align 8, !tbaa !160
  %filter_coeffs = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %2, i64 0, i32 6
  %cmp50 = icmp sgt i32 %3, 0
  br i1 %cmp50, label %for.body.lr.ph, label %for.end28

for.body.lr.ph:                                   ; preds = %entry
  %width = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %2, i64 0, i32 9
  %left_apex = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %2, i64 0, i32 8
  %4 = load float*, float** %left_apex, align 8, !tbaa !164
  %5 = load i32*, i32** %width, align 8, !tbaa !165
  %wide.trip.count56 = zext i32 %3 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc26
  %indvars.iv54 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next55, %for.inc26 ]
  %arrayidx = getelementptr inbounds float, float* %4, i64 %indvars.iv54
  %6 = load float, float* %arrayidx, align 4, !tbaa !4
  %arrayidx7 = getelementptr inbounds double, double* %mfspec, i64 %indvars.iv54
  store double 0.000000e+00, double* %arrayidx7, align 8, !tbaa !96
  %arrayidx11 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv54
  %7 = load i32, i32* %arrayidx11, align 4, !tbaa !37
  %cmp1248 = icmp sgt i32 %7, 0
  br i1 %cmp1248, label %for.body14.lr.ph, label %for.inc26

for.body14.lr.ph:                                 ; preds = %for.body
  %div3 = fdiv float %6, %div
  %conv4 = fpext float %div3 to double
  %add = fadd double %conv4, 5.000000e-01
  %conv5 = fptosi double %add to i32
  %8 = load float**, float*** %filter_coeffs, align 8, !tbaa !163
  %arrayidx17 = getelementptr inbounds float*, float** %8, i64 %indvars.iv54
  %9 = load float*, float** %arrayidx17, align 8, !tbaa !74
  %10 = sext i32 %conv5 to i64
  %wide.trip.count = zext i32 %7 to i64
  br label %for.body14

for.body14:                                       ; preds = %for.body14.lr.ph, %for.body14
  %11 = phi double [ 0.000000e+00, %for.body14.lr.ph ], [ %15, %for.body14 ]
  %indvars.iv = phi i64 [ 0, %for.body14.lr.ph ], [ %indvars.iv.next, %for.body14 ]
  %arrayidx19 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %12 = load float, float* %arrayidx19, align 4, !tbaa !4
  %conv20 = fpext float %12 to double
  %13 = add nsw i64 %indvars.iv, %10
  %arrayidx23 = getelementptr inbounds double, double* %spec, i64 %13
  %14 = load double, double* %arrayidx23, align 8, !tbaa !96
  %15 = tail call double @llvm.fmuladd.f64(double %conv20, double %14, double %11)
  store double %15, double* %arrayidx7, align 8, !tbaa !96
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.inc26, label %for.body14, !llvm.loop !197

for.inc26:                                        ; preds = %for.body14, %for.body
  %indvars.iv.next55 = add nuw nsw i64 %indvars.iv54, 1
  %exitcond57.not = icmp eq i64 %indvars.iv.next55, %wide.trip.count56
  br i1 %exitcond57.not, label %for.end28, label %for.body, !llvm.loop !198

for.end28:                                        ; preds = %for.inc26, %entry
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @fe_mel_cep(%struct.fe_t* nocapture readonly %FE, double* nocapture %mfspec, double* nocapture %mfcep) local_unnamed_addr #14 {
entry:
  %MEL_FB = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 11
  %0 = load %struct.melfb_t*, %struct.melfb_t** %MEL_FB, align 8, !tbaa !187
  %num_filters = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %0, i64 0, i32 2
  %1 = load i32, i32* %num_filters, align 8, !tbaa !160
  %cmp80 = icmp sgt i32 %1, 0
  br i1 %cmp80, label %for.body, label %for.cond10.preheader

for.cond10.preheader:                             ; preds = %for.inc, %entry
  %.lcssa74 = phi %struct.melfb_t* [ %0, %entry ], [ %5, %for.inc ]
  %.lcssa = phi i32 [ %1, %entry ], [ %6, %for.inc ]
  %NUM_CEPSTRA = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 7
  %2 = load i32, i32* %NUM_CEPSTRA, align 4, !tbaa !199
  %mel_cosine = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %.lcssa74, i64 0, i32 7
  %cmp1875 = icmp sgt i32 %.lcssa, 0
  %conv38 = sitofp i32 %1 to float
  %conv39 = fpext float %conv38 to double
  %cmp1177 = icmp sgt i32 %2, 0
  br i1 %cmp1177, label %for.body12.preheader, label %for.end44

for.body12.preheader:                             ; preds = %for.cond10.preheader
  %wide.trip.count88 = zext i32 %2 to i64
  %wide.trip.count = zext i32 %.lcssa to i64
  br label %for.body12

for.body:                                         ; preds = %entry, %for.inc
  %3 = phi %struct.melfb_t* [ %5, %for.inc ], [ %0, %entry ]
  %indvars.iv90 = phi i64 [ %indvars.iv.next91, %for.inc ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds double, double* %mfspec, i64 %indvars.iv90
  %4 = load double, double* %arrayidx, align 8, !tbaa !96
  %cmp3 = fcmp ogt double %4, 0.000000e+00
  br i1 %cmp3, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %call = tail call double @log(double %4) #34
  %.pre = load %struct.melfb_t*, %struct.melfb_t** %MEL_FB, align 8, !tbaa !187
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %5 = phi %struct.melfb_t* [ %.pre, %if.then ], [ %3, %for.body ]
  %storemerge = phi double [ %call, %if.then ], [ -1.000000e+05, %for.body ]
  store double %storemerge, double* %arrayidx, align 8, !tbaa !96
  %indvars.iv.next91 = add nuw nsw i64 %indvars.iv90, 1
  %num_filters2 = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %5, i64 0, i32 2
  %6 = load i32, i32* %num_filters2, align 8, !tbaa !160
  %7 = sext i32 %6 to i64
  %cmp = icmp slt i64 %indvars.iv.next91, %7
  br i1 %cmp, label %for.body, label %for.cond10.preheader, !llvm.loop !200

for.body12:                                       ; preds = %for.body12.preheader, %for.end37
  %indvars.iv86 = phi i64 [ 0, %for.body12.preheader ], [ %indvars.iv.next87, %for.end37 ]
  %arrayidx14 = getelementptr inbounds double, double* %mfcep, i64 %indvars.iv86
  store double 0.000000e+00, double* %arrayidx14, align 8, !tbaa !96
  br i1 %cmp1875, label %for.body19.lr.ph, label %for.end37

for.body19.lr.ph:                                 ; preds = %for.body12
  %8 = load float**, float*** %mel_cosine, align 8, !tbaa !177
  %arrayidx28 = getelementptr inbounds float*, float** %8, i64 %indvars.iv86
  %9 = load float*, float** %arrayidx28, align 8, !tbaa !74
  br label %for.body19

for.body19:                                       ; preds = %for.body19.lr.ph, %for.body19
  %10 = phi double [ 0.000000e+00, %for.body19.lr.ph ], [ %13, %for.body19 ]
  %indvars.iv = phi i64 [ 0, %for.body19.lr.ph ], [ %indvars.iv.next, %for.body19 ]
  %cmp20 = icmp eq i64 %indvars.iv, 0
  %. = select i1 %cmp20, double 5.000000e-01, double 1.000000e+00
  %arrayidx25 = getelementptr inbounds double, double* %mfspec, i64 %indvars.iv
  %11 = load double, double* %arrayidx25, align 8, !tbaa !96
  %mul = fmul double %., %11
  %arrayidx30 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %12 = load float, float* %arrayidx30, align 4, !tbaa !4
  %conv31 = fpext float %12 to double
  %13 = tail call double @llvm.fmuladd.f64(double %mul, double %conv31, double %10)
  store double %13, double* %arrayidx14, align 8, !tbaa !96
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end37, label %for.body19, !llvm.loop !201

for.end37:                                        ; preds = %for.body19, %for.body12
  %14 = phi double [ 0.000000e+00, %for.body12 ], [ %13, %for.body19 ]
  %div = fdiv double %14, %conv39
  store double %div, double* %arrayidx14, align 8, !tbaa !96
  %indvars.iv.next87 = add nuw nsw i64 %indvars.iv86, 1
  %exitcond89.not = icmp eq i64 %indvars.iv.next87, %wide.trip.count88
  br i1 %exitcond89.not, label %for.end44, label %for.body12, !llvm.loop !202

for.end44:                                        ; preds = %for.end37, %for.cond10.preheader
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn
declare double @log(double) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize uwtable
define i32 @fe_fft(%struct.complex* nocapture readonly %in, %struct.complex* %out, i32 %N, i32 %invert) local_unnamed_addr #0 {
entry:
  store i32 %N, i32* @fe_fft.k, align 4, !tbaa !37
  %cmp2 = icmp slt i32 %N, 0
  %cmp199 = icmp sgt i32 %N, 1
  br i1 %cmp199, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.inc
  %storemerge200 = phi i32 [ %inc, %for.inc ], [ 0, %entry ]
  %0 = phi i32 [ %div175, %for.inc ], [ %N, %entry ]
  %1 = and i32 %0, 1
  %cmp1 = icmp ne i32 %1, 0
  %or.cond = select i1 %cmp1, i1 true, i1 %cmp2
  br i1 %or.cond, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5.105, i64 0, i64 0), i32 %N) #35
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %div175 = lshr i32 %0, 1
  store i32 %div175, i32* @fe_fft.k, align 4, !tbaa !37
  %inc = add nuw nsw i32 %storemerge200, 1
  %cmp = icmp ugt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end.loopexit, !llvm.loop !203

for.end.loopexit:                                 ; preds = %for.inc
  %phi.bo = and i32 %inc, 1
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %entry
  %storemerge.lcssa197 = phi i32 [ 0, %entry ], [ %phi.bo, %for.end.loopexit ]
  switch i32 %invert, label %if.else7 [
    i32 1, label %if.end10
    i32 -1, label %if.then6
  ]

if.then6:                                         ; preds = %for.end
  %conv = sitofp i32 %N to double
  br label %if.end10

if.else7:                                         ; preds = %for.end
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6.106, i64 0, i64 0), i32 %invert) #35
  br label %cleanup

if.end10:                                         ; preds = %for.end, %if.then6
  %storemerge170 = phi double [ %conv, %if.then6 ], [ 1.000000e+00, %for.end ]
  %conv11 = sext i32 %N to i64
  %call12 = tail call noalias align 16 i8* @calloc(i64 %conv11, i64 16) #34
  store i8* %call12, i8** bitcast (%struct.complex** @fe_fft.buffer to i8**), align 8, !tbaa !74
  %cmp14 = icmp eq i32 %storemerge.lcssa197, 0
  %4 = bitcast i8* %call12 to %struct.complex*
  %fe_fft.to.sink = select i1 %cmp14, %struct.complex** @fe_fft.from, %struct.complex** @fe_fft.to
  %.sink = select i1 %cmp14, i8** bitcast (%struct.complex** @fe_fft.to to i8**), i8** bitcast (%struct.complex** @fe_fft.from to i8**)
  %5 = select i1 %cmp14, %struct.complex* %out, %struct.complex* %4
  store %struct.complex* %out, %struct.complex** %fe_fft.to.sink, align 8, !tbaa !74
  store i8* %call12, i8** %.sink, align 8, !tbaa !74
  %cmp20194 = icmp sgt i32 %N, 0
  br i1 %cmp20194, label %for.body22.preheader, label %for.end35

for.body22.preheader:                             ; preds = %if.end10
  %wide.trip.count211 = zext i32 %N to i64
  br label %for.body22

for.body22:                                       ; preds = %for.body22.preheader, %for.body22
  %indvars.iv209 = phi i64 [ 0, %for.body22.preheader ], [ %indvars.iv.next210, %for.body22 ]
  %r = getelementptr inbounds %struct.complex, %struct.complex* %in, i64 %indvars.iv209, i32 0
  %6 = load double, double* %r, align 8, !tbaa !189
  %div23 = fdiv double %6, %storemerge170
  %r26 = getelementptr inbounds %struct.complex, %struct.complex* %5, i64 %indvars.iv209, i32 0
  store double %div23, double* %r26, align 8, !tbaa !189
  %i = getelementptr inbounds %struct.complex, %struct.complex* %in, i64 %indvars.iv209, i32 1
  %7 = load double, double* %i, align 8, !tbaa !191
  %div29 = fdiv double %7, %storemerge170
  %i32 = getelementptr inbounds %struct.complex, %struct.complex* %5, i64 %indvars.iv209, i32 1
  store double %div29, double* %i32, align 8, !tbaa !191
  %indvars.iv.next210 = add nuw nsw i64 %indvars.iv209, 1
  %exitcond212.not = icmp eq i64 %indvars.iv.next210, %wide.trip.count211
  br i1 %exitcond212.not, label %for.end35, label %for.body22, !llvm.loop !204

for.end35:                                        ; preds = %for.body22, %if.end10
  %div36 = sdiv i32 %N, 2
  %conv37 = sext i32 %div36 to i64
  %call38 = tail call noalias align 16 i8* @calloc(i64 %conv37, i64 16) #34
  store i8* %call38, i8** bitcast (%struct.complex** @fe_fft.w to i8**), align 8, !tbaa !74
  %conv44 = sitofp i32 %invert to double
  %mul = fmul double %conv44, 0xC01921FB54442D18
  %conv47 = sitofp i32 %N to double
  store i32 0, i32* @fe_fft.k, align 4, !tbaa !37
  br i1 %cmp199, label %for.body43, label %for.end59.thread

for.end59.thread:                                 ; preds = %for.end35
  %8 = bitcast i8* %call38 to %struct.complex*
  %arrayidx62213 = getelementptr inbounds %struct.complex, %struct.complex* %8, i64 %conv37
  store %struct.complex* %arrayidx62213, %struct.complex** @fe_fft.wEnd, align 8, !tbaa !74
  br label %for.end123

for.body43:                                       ; preds = %for.end35, %for.body43
  %storemerge172193 = phi i32 [ %inc58, %for.body43 ], [ 0, %for.end35 ]
  %conv45 = sitofp i32 %storemerge172193 to double
  %mul46 = fmul double %mul, %conv45
  %div48 = fdiv double %mul46, %conv47
  store double %div48, double* @fe_fft.x, align 8, !tbaa !96
  %call49 = tail call double @cos(double %div48) #34
  %9 = load %struct.complex*, %struct.complex** @fe_fft.w, align 8, !tbaa !74
  %10 = load i32, i32* @fe_fft.k, align 4, !tbaa !37
  %idxprom50 = sext i32 %10 to i64
  %r52 = getelementptr inbounds %struct.complex, %struct.complex* %9, i64 %idxprom50, i32 0
  store double %call49, double* %r52, align 8, !tbaa !189
  %11 = load double, double* @fe_fft.x, align 8, !tbaa !96
  %call53 = tail call double @sin(double %11) #34
  %12 = load %struct.complex*, %struct.complex** @fe_fft.w, align 8, !tbaa !74
  %13 = load i32, i32* @fe_fft.k, align 4, !tbaa !37
  %idxprom54 = sext i32 %13 to i64
  %i56 = getelementptr inbounds %struct.complex, %struct.complex* %12, i64 %idxprom54, i32 1
  store double %call53, double* %i56, align 8, !tbaa !191
  %inc58 = add nsw i32 %13, 1
  store i32 %inc58, i32* @fe_fft.k, align 4, !tbaa !37
  %cmp41 = icmp slt i32 %inc58, %div36
  br i1 %cmp41, label %for.body43, label %for.end59, !llvm.loop !205

for.end59:                                        ; preds = %for.body43
  %14 = bitcast %struct.complex* %12 to i8*
  %arrayidx62 = getelementptr inbounds %struct.complex, %struct.complex* %12, i64 %conv37
  store %struct.complex* %arrayidx62, %struct.complex** @fe_fft.wEnd, align 8, !tbaa !74
  br i1 %cmp199, label %for.cond68.preheader.lr.ph, label %for.end123

for.cond68.preheader.lr.ph:                       ; preds = %for.end59
  %fe_fft.from.promoted = load %struct.complex*, %struct.complex** @fe_fft.from, align 8
  %fe_fft.to.promoted = load %struct.complex*, %struct.complex** @fe_fft.to, align 8
  br label %for.cond68.preheader

for.cond68.preheader:                             ; preds = %for.cond68.preheader.lr.ph, %for.end120
  %15 = phi %struct.complex* [ %fe_fft.to.promoted, %for.cond68.preheader.lr.ph ], [ %16, %for.end120 ]
  %16 = phi %struct.complex* [ %fe_fft.from.promoted, %for.cond68.preheader.lr.ph ], [ %15, %for.end120 ]
  %storemerge173187 = phi i32 [ %div36, %for.cond68.preheader.lr.ph ], [ %div122, %for.end120 ]
  %mul108 = shl nsw i32 %storemerge173187, 1
  %idx.ext = sext i32 %mul108 to i64
  %idx.ext112 = sext i32 %storemerge173187 to i64
  %cmp69184 = icmp sgt i32 %storemerge173187, 0
  br i1 %cmp69184, label %for.body71.preheader, label %for.end120.thread

for.end120.thread:                                ; preds = %for.cond68.preheader
  %storemerge173187.nonneg = sub nsw i32 0, %storemerge173187
  %div122215219 = lshr i32 %storemerge173187.nonneg, 1
  %div122215219.neg = sub nsw i32 0, %div122215219
  br label %for.cond64.for.end123_crit_edge

for.body71.preheader:                             ; preds = %for.cond68.preheader
  %wide.trip.count = zext i32 %storemerge173187 to i64
  br label %while.body.preheader

while.body.preheader:                             ; preds = %for.inc118, %for.body71.preheader
  %indvars.iv = phi i64 [ 0, %for.body71.preheader ], [ %indvars.iv.next, %for.inc118 ]
  %17 = add nsw i64 %indvars.iv, %conv37
  %arrayidx81 = getelementptr inbounds %struct.complex, %struct.complex* %15, i64 %17
  %arrayidx77 = getelementptr inbounds %struct.complex, %struct.complex* %15, i64 %indvars.iv
  %18 = add nsw i64 %indvars.iv, %idx.ext112
  %arrayidx75 = getelementptr inbounds %struct.complex, %struct.complex* %16, i64 %18
  %arrayidx73 = getelementptr inbounds %struct.complex, %struct.complex* %16, i64 %indvars.iv
  br label %while.body

while.body:                                       ; preds = %while.body.preheader, %while.body
  %ww.0182 = phi %struct.complex* [ %add.ptr117, %while.body ], [ %12, %while.body.preheader ]
  %t2.0181 = phi %struct.complex* [ %add.ptr115, %while.body ], [ %arrayidx81, %while.body.preheader ]
  %t1.0180 = phi %struct.complex* [ %add.ptr113, %while.body ], [ %arrayidx77, %while.body.preheader ]
  %f2.0179 = phi %struct.complex* [ %add.ptr111, %while.body ], [ %arrayidx75, %while.body.preheader ]
  %f1.0178 = phi %struct.complex* [ %add.ptr, %while.body ], [ %arrayidx73, %while.body.preheader ]
  %r85 = getelementptr inbounds %struct.complex, %struct.complex* %f2.0179, i64 0, i32 0
  %19 = load double, double* %r85, align 8, !tbaa !189
  %r86 = getelementptr inbounds %struct.complex, %struct.complex* %ww.0182, i64 0, i32 0
  %20 = load double, double* %r86, align 8, !tbaa !189
  %i88 = getelementptr inbounds %struct.complex, %struct.complex* %f2.0179, i64 0, i32 1
  %21 = load double, double* %i88, align 8, !tbaa !191
  %i89 = getelementptr inbounds %struct.complex, %struct.complex* %ww.0182, i64 0, i32 1
  %22 = load double, double* %i89, align 8, !tbaa !191
  %23 = fneg double %21
  %neg = fmul double %22, %23
  %24 = tail call double @llvm.fmuladd.f64(double %19, double %20, double %neg)
  %mul96 = fmul double %20, %21
  %25 = tail call double @llvm.fmuladd.f64(double %19, double %22, double %mul96)
  %r97 = getelementptr inbounds %struct.complex, %struct.complex* %f1.0178, i64 0, i32 0
  %26 = load double, double* %r97, align 8, !tbaa !189
  %add98 = fadd double %24, %26
  %r99 = getelementptr inbounds %struct.complex, %struct.complex* %t1.0180, i64 0, i32 0
  store double %add98, double* %r99, align 8, !tbaa !189
  %i100 = getelementptr inbounds %struct.complex, %struct.complex* %f1.0178, i64 0, i32 1
  %27 = load double, double* %i100, align 8, !tbaa !191
  %add101 = fadd double %25, %27
  %i102 = getelementptr inbounds %struct.complex, %struct.complex* %t1.0180, i64 0, i32 1
  store double %add101, double* %i102, align 8, !tbaa !191
  %28 = load double, double* %r97, align 8, !tbaa !189
  %sub = fsub double %28, %24
  %r104 = getelementptr inbounds %struct.complex, %struct.complex* %t2.0181, i64 0, i32 0
  store double %sub, double* %r104, align 8, !tbaa !189
  %29 = load double, double* %i100, align 8, !tbaa !191
  %sub106 = fsub double %29, %25
  %i107 = getelementptr inbounds %struct.complex, %struct.complex* %t2.0181, i64 0, i32 1
  store double %sub106, double* %i107, align 8, !tbaa !191
  %add.ptr = getelementptr inbounds %struct.complex, %struct.complex* %f1.0178, i64 %idx.ext
  %add.ptr111 = getelementptr inbounds %struct.complex, %struct.complex* %f2.0179, i64 %idx.ext
  %add.ptr113 = getelementptr inbounds %struct.complex, %struct.complex* %t1.0180, i64 %idx.ext112
  %add.ptr115 = getelementptr inbounds %struct.complex, %struct.complex* %t2.0181, i64 %idx.ext112
  %add.ptr117 = getelementptr inbounds %struct.complex, %struct.complex* %ww.0182, i64 %idx.ext112
  %cmp83 = icmp ult %struct.complex* %add.ptr117, %arrayidx62
  br i1 %cmp83, label %while.body, label %for.inc118, !llvm.loop !206

for.inc118:                                       ; preds = %while.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end120, label %while.body.preheader, !llvm.loop !207

for.end120:                                       ; preds = %for.inc118
  %div122 = sdiv i32 %storemerge173187, 2
  %cmp65 = icmp sgt i32 %storemerge173187, 1
  br i1 %cmp65, label %for.cond68.preheader, label %for.cond64.for.end123_crit_edge, !llvm.loop !208

for.cond64.for.end123_crit_edge:                  ; preds = %for.end120, %for.end120.thread
  %div122218 = phi i32 [ %div122215219.neg, %for.end120.thread ], [ %div122, %for.end120 ]
  store %struct.complex* %15, %struct.complex** @fe_fft.from, align 8
  store %struct.complex* %16, %struct.complex** @fe_fft.to, align 8
  store %struct.complex* %16, %struct.complex** @fe_fft.exch, align 8, !tbaa !74
  br label %for.end123

for.end123:                                       ; preds = %for.end59.thread, %for.cond64.for.end123_crit_edge, %for.end59
  %30 = phi i8* [ %14, %for.cond64.for.end123_crit_edge ], [ %14, %for.end59 ], [ %call38, %for.end59.thread ]
  %storemerge173.lcssa = phi i32 [ %div122218, %for.cond64.for.end123_crit_edge ], [ %div36, %for.end59 ], [ %div36, %for.end59.thread ]
  store i32 %storemerge173.lcssa, i32* @fe_fft.k, align 4, !tbaa !37
  %31 = load i8*, i8** bitcast (%struct.complex** @fe_fft.buffer to i8**), align 8, !tbaa !74
  tail call void @free(i8* %31) #34
  tail call void @free(i8* %30) #34
  br label %cleanup

cleanup:                                          ; preds = %for.end123, %if.else7, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ 0, %for.end123 ], [ -1, %if.else7 ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn
declare double @sin(double) local_unnamed_addr #6

; Function Attrs: mustprogress noinline nounwind optsize uwtable willreturn
define void @fe_free_2d(i8** %arr) local_unnamed_addr #15 {
entry:
  %cmp.not = icmp eq i8** %arr, null
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = load i8*, i8** %arr, align 8, !tbaa !74
  tail call void @free(i8* %0) #34
  %1 = bitcast i8** %arr to i8*
  tail call void @free(i8* %1) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn
define void @fe_parse_general_params(%struct.param_t* nocapture readonly %P, %struct.fe_t* nocapture %FE) local_unnamed_addr #4 {
entry:
  %SAMPLING_RATE = getelementptr inbounds %struct.param_t, %struct.param_t* %P, i64 0, i32 0
  %0 = load float, float* %SAMPLING_RATE, align 8, !tbaa !209
  %cmp = fcmp une float %0, 0.000000e+00
  %.sink = select i1 %cmp, float %0, float 1.600000e+04
  %1 = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 0
  store float %.sink, float* %1, align 8
  %FRAME_RATE = getelementptr inbounds %struct.param_t, %struct.param_t* %P, i64 0, i32 1
  %2 = load i32, i32* %FRAME_RATE, align 4, !tbaa !211
  %cmp4.not = icmp eq i32 %2, 0
  %spec.select = select i1 %cmp4.not, i32 100, i32 %2
  %3 = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 1
  store i32 %spec.select, i32* %3, align 4
  %WINDOW_LENGTH = getelementptr inbounds %struct.param_t, %struct.param_t* %P, i64 0, i32 2
  %4 = load float, float* %WINDOW_LENGTH, align 8, !tbaa !212
  %cmp11 = fcmp une float %4, 0.000000e+00
  %.sink79 = select i1 %cmp11, float %4, float 0x3F9A36E2E0000000
  %5 = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 3
  store float %.sink79, float* %5, align 4
  %FB_TYPE = getelementptr inbounds %struct.param_t, %struct.param_t* %P, i64 0, i32 3
  %6 = load i32, i32* %FB_TYPE, align 4, !tbaa !213
  %cmp18.not = icmp eq i32 %6, 0
  %spec.select84 = select i1 %cmp18.not, i32 1, i32 %6
  %7 = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 6
  store i32 %spec.select84, i32* %7, align 8
  %PRE_EMPHASIS_ALPHA = getelementptr inbounds %struct.param_t, %struct.param_t* %P, i64 0, i32 9
  %8 = load float, float* %PRE_EMPHASIS_ALPHA, align 4, !tbaa !214
  %cmp25 = fcmp une float %8, 0.000000e+00
  %.sink81 = select i1 %cmp25, float %8, float 0x3FEF0A3D80000000
  %9 = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 8
  store float %.sink81, float* %9, align 8
  %NUM_CEPSTRA = getelementptr inbounds %struct.param_t, %struct.param_t* %P, i64 0, i32 4
  %10 = load i32, i32* %NUM_CEPSTRA, align 8, !tbaa !215
  %cmp32.not = icmp eq i32 %10, 0
  %spec.select85 = select i1 %cmp32.not, i32 13, i32 %10
  %11 = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 7
  store i32 %spec.select85, i32* %11, align 4
  %FFT_SIZE = getelementptr inbounds %struct.param_t, %struct.param_t* %P, i64 0, i32 6
  %12 = load i32, i32* %FFT_SIZE, align 8, !tbaa !216
  %cmp39.not = icmp eq i32 %12, 0
  %.sink83 = select i1 %cmp39.not, i32 256, i32 %12
  %13 = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 5
  store i32 %.sink83, i32* %13, align 4
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @fe_parse_melfb_params(%struct.param_t* nocapture readonly %P, %struct.melfb_t* %MEL) local_unnamed_addr #0 {
entry:
  %SAMPLING_RATE = getelementptr inbounds %struct.param_t, %struct.param_t* %P, i64 0, i32 0
  %0 = load float, float* %SAMPLING_RATE, align 8, !tbaa !209
  %cmp = fcmp une float %0, 0.000000e+00
  %1 = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL, i64 0, i32 0
  br i1 %cmp, label %if.end, label %if.end.thread

if.end:                                           ; preds = %entry
  store float %0, float* %1, align 8
  %FFT_SIZE = getelementptr inbounds %struct.param_t, %struct.param_t* %P, i64 0, i32 6
  %2 = load i32, i32* %FFT_SIZE, align 8, !tbaa !216
  %cmp3.not = icmp eq i32 %2, 0
  br i1 %cmp3.not, label %if.end11, label %if.end19

if.end.thread:                                    ; preds = %entry
  store float 1.600000e+04, float* %1, align 8
  %FFT_SIZE138 = getelementptr inbounds %struct.param_t, %struct.param_t* %P, i64 0, i32 6
  %3 = load i32, i32* %FFT_SIZE138, align 8, !tbaa !216
  %cmp3.not139 = icmp eq i32 %3, 0
  br i1 %cmp3.not139, label %if.end11, label %if.end19

if.end11:                                         ; preds = %if.end, %if.end.thread
  %4 = phi float [ 1.600000e+04, %if.end.thread ], [ %0, %if.end ]
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.end.thread, %if.end11
  %.sink = phi i32 [ 256, %if.end11 ], [ %3, %if.end.thread ], [ %2, %if.end ]
  %5 = phi float [ %4, %if.end11 ], [ 1.600000e+04, %if.end.thread ], [ %0, %if.end ]
  %fft_size15 = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL, i64 0, i32 3
  store i32 %.sink, i32* %fft_size15, align 4, !tbaa !162
  %NUM_CEPSTRA = getelementptr inbounds %struct.param_t, %struct.param_t* %P, i64 0, i32 4
  %6 = load i32, i32* %NUM_CEPSTRA, align 8, !tbaa !215
  %cmp20.not = icmp eq i32 %6, 0
  %.sink136 = select i1 %cmp20.not, i32 13, i32 %6
  %7 = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL, i64 0, i32 1
  store i32 %.sink136, i32* %7, align 4
  %NUM_FILTERS = getelementptr inbounds %struct.param_t, %struct.param_t* %P, i64 0, i32 5
  %8 = load i32, i32* %NUM_FILTERS, align 4, !tbaa !217
  %cmp26.not = icmp eq i32 %8, 0
  br i1 %cmp26.not, label %if.else29, label %if.end44

if.else29:                                        ; preds = %if.end19
  %cmp31 = fcmp oeq float %5, 1.600000e+04
  br i1 %cmp31, label %if.end44, label %if.else34

if.else34:                                        ; preds = %if.else29
  %cmp36 = fcmp oeq float %5, 8.000000e+03
  br i1 %cmp36, label %if.end44, label %if.else39

if.else39:                                        ; preds = %if.else34
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %10 = tail call i64 @fwrite(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.8.107, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %9) #39
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %12 = tail call i64 @fwrite(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9.108, i64 0, i64 0), i64 40, i64 1, %struct._IO_FILE* %11) #39
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call41 = tail call i32 @fflush(%struct._IO_FILE* %13) #36
  tail call void @exit(i32 0) #40
  br label %UnifiedUnreachableBlock

if.end44:                                         ; preds = %if.else34, %if.else29, %if.end19
  %.sink141 = phi i32 [ %8, %if.end19 ], [ 40, %if.else29 ], [ 31, %if.else34 ]
  %num_filters33 = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL, i64 0, i32 2
  store i32 %.sink141, i32* %num_filters33, align 8, !tbaa !160
  %UPPER_FILT_FREQ = getelementptr inbounds %struct.param_t, %struct.param_t* %P, i64 0, i32 8
  %14 = load float, float* %UPPER_FILT_FREQ, align 8, !tbaa !218
  %cmp45 = fcmp une float %14, 0.000000e+00
  br i1 %cmp45, label %if.end64, label %if.else48

if.else48:                                        ; preds = %if.end44
  %cmp50 = fcmp oeq float %5, 1.600000e+04
  br i1 %cmp50, label %if.end64, label %if.else53

if.else53:                                        ; preds = %if.else48
  %cmp55 = fcmp oeq float %5, 8.000000e+03
  br i1 %cmp55, label %if.end64, label %if.else58

if.else58:                                        ; preds = %if.else53
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %16 = tail call i64 @fwrite(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10.109, i64 0, i64 0), i64 46, i64 1, %struct._IO_FILE* %15) #39
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %18 = tail call i64 @fwrite(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9.108, i64 0, i64 0), i64 40, i64 1, %struct._IO_FILE* %17) #39
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call61 = tail call i32 @fflush(%struct._IO_FILE* %19) #36
  tail call void @exit(i32 0) #40
  br label %UnifiedUnreachableBlock

if.end64:                                         ; preds = %if.else53, %if.else48, %if.end44
  %.sink142 = phi float [ %14, %if.end44 ], [ 0x40BAC77F60000000, %if.else48 ], [ 3.500000e+03, %if.else53 ]
  %upper_filt_freq52 = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL, i64 0, i32 5
  store float %.sink142, float* %upper_filt_freq52, align 4, !tbaa !168
  %LOWER_FILT_FREQ = getelementptr inbounds %struct.param_t, %struct.param_t* %P, i64 0, i32 7
  %20 = load float, float* %LOWER_FILT_FREQ, align 4, !tbaa !219
  %cmp65 = fcmp une float %20, 0.000000e+00
  br i1 %cmp65, label %if.end84, label %if.else68

if.else68:                                        ; preds = %if.end64
  %cmp70 = fcmp oeq float %5, 1.600000e+04
  br i1 %cmp70, label %if.end84, label %if.else73

if.else73:                                        ; preds = %if.else68
  %cmp75 = fcmp oeq float %5, 8.000000e+03
  br i1 %cmp75, label %if.end84, label %if.else78

if.else78:                                        ; preds = %if.else73
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %22 = tail call i64 @fwrite(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11.110, i64 0, i64 0), i64 46, i64 1, %struct._IO_FILE* %21) #39
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %24 = tail call i64 @fwrite(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9.108, i64 0, i64 0), i64 40, i64 1, %struct._IO_FILE* %23) #39
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call81 = tail call i32 @fflush(%struct._IO_FILE* %25) #36
  tail call void @exit(i32 0) #40
  br label %UnifiedUnreachableBlock

if.end84:                                         ; preds = %if.else73, %if.else68, %if.end64
  %.sink143 = phi float [ %20, %if.end64 ], [ 0x4060AAAAC0000000, %if.else68 ], [ 2.000000e+02, %if.else73 ]
  %lower_filt_freq72 = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL, i64 0, i32 4
  store float %.sink143, float* %lower_filt_freq72, align 8, !tbaa !169
  %doublebw = getelementptr inbounds %struct.param_t, %struct.param_t* %P, i64 0, i32 22
  %26 = load i32, i32* %doublebw, align 4, !tbaa !220
  %cmp85 = icmp eq i32 %26, 1
  %.sink137 = zext i1 %cmp85 to i32
  %27 = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %MEL, i64 0, i32 10
  store i32 %.sink137, i32* %27, align 8
  ret void

UnifiedUnreachableBlock:                          ; preds = %if.else78, %if.else58, %if.else39
  unreachable
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @fe_print_current(%struct.fe_t* nocapture readonly %FE) local_unnamed_addr #14 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %1 = tail call i64 @fwrite(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12.111, i64 0, i64 0), i64 23, i64 1, %struct._IO_FILE* %0) #39
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %SAMPLING_RATE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 0
  %3 = load float, float* %SAMPLING_RATE, align 8, !tbaa !196
  %conv = fpext float %3 to double
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13.112, i64 0, i64 0), double %conv) #35
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %FRAME_SIZE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 4
  %5 = load i32, i32* %FRAME_SIZE, align 8, !tbaa !188
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14.113, i64 0, i64 0), i32 %5) #35
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %FRAME_SHIFT = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 2
  %7 = load i32, i32* %FRAME_SHIFT, align 8, !tbaa !221
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15.114, i64 0, i64 0), i32 %7) #35
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %FFT_SIZE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 5
  %9 = load i32, i32* %FFT_SIZE, align 4, !tbaa !186
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16.115, i64 0, i64 0), i32 %9) #35
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %NUM_OVERFLOW_SAMPS = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 10
  %11 = load i32, i32* %NUM_OVERFLOW_SAMPS, align 8, !tbaa !222
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.116, i64 0, i64 0), i32 %11) #35
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %START_FLAG = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 12
  %13 = load i32, i32* %START_FLAG, align 8, !tbaa !223
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18.117, i64 0, i64 0), i32 %13) #35
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @tmat_dump(%struct.tmat_t* nocapture readonly %tmat, %struct._IO_FILE* nocapture %fp) local_unnamed_addr #14 {
entry:
  %n_tmat = getelementptr inbounds %struct.tmat_t, %struct.tmat_t* %tmat, i64 0, i32 1
  %n_state = getelementptr inbounds %struct.tmat_t, %struct.tmat_t* %tmat, i64 0, i32 2
  %tp = getelementptr inbounds %struct.tmat_t, %struct.tmat_t* %tmat, i64 0, i32 0
  %0 = load i32, i32* %n_tmat, align 8, !tbaa !224
  %cmp48 = icmp sgt i32 %0, 0
  br i1 %cmp48, label %for.body, label %for.end22

for.body:                                         ; preds = %entry, %for.end18
  %indvars.iv52 = phi i64 [ %indvars.iv.next53, %for.end18 ], [ 0, %entry ]
  %1 = load i32, i32* %n_state, align 4, !tbaa !226
  %add = add nsw i32 %1, 1
  %2 = trunc i64 %indvars.iv52 to i32
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.118, i64 0, i64 0), i32 %2, i32 %1, i32 %add) #36
  %3 = load i32, i32* %n_state, align 4, !tbaa !226
  %cmp446 = icmp sgt i32 %3, 0
  br i1 %cmp446, label %for.cond6.preheader, label %for.end18

for.cond6.preheader:                              ; preds = %for.body, %for.end
  %4 = phi i32 [ %11, %for.end ], [ %3, %for.body ]
  %indvars.iv50 = phi i64 [ %indvars.iv.next51, %for.end ], [ 0, %for.body ]
  %cmp8.not44 = icmp slt i32 %4, 0
  br i1 %cmp8.not44, label %for.end, label %for.body9

for.body9:                                        ; preds = %for.cond6.preheader, %for.body9
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body9 ], [ 0, %for.cond6.preheader ]
  %5 = load i32***, i32**** %tp, align 8, !tbaa !227
  %arrayidx = getelementptr inbounds i32**, i32*** %5, i64 %indvars.iv52
  %6 = load i32**, i32*** %arrayidx, align 8, !tbaa !74
  %arrayidx11 = getelementptr inbounds i32*, i32** %6, i64 %indvars.iv50
  %7 = load i32*, i32** %arrayidx11, align 8, !tbaa !74
  %arrayidx13 = getelementptr inbounds i32, i32* %7, i64 %indvars.iv
  %8 = load i32, i32* %arrayidx13, align 4, !tbaa !37
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.119, i64 0, i64 0), i32 %8) #36
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %9 = load i32, i32* %n_state, align 4, !tbaa !226
  %10 = sext i32 %9 to i64
  %cmp8.not.not = icmp slt i64 %indvars.iv, %10
  br i1 %cmp8.not.not, label %for.body9, label %for.end, !llvm.loop !228

for.end:                                          ; preds = %for.body9, %for.cond6.preheader
  %fputc43 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  %indvars.iv.next51 = add nuw nsw i64 %indvars.iv50, 1
  %11 = load i32, i32* %n_state, align 4, !tbaa !226
  %12 = sext i32 %11 to i64
  %cmp4 = icmp slt i64 %indvars.iv.next51, %12
  br i1 %cmp4, label %for.cond6.preheader, label %for.end18, !llvm.loop !229

for.end18:                                        ; preds = %for.end, %for.body
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  %indvars.iv.next53 = add nuw nsw i64 %indvars.iv52, 1
  %13 = load i32, i32* %n_tmat, align 8, !tbaa !224
  %14 = sext i32 %13 to i64
  %cmp = icmp slt i64 %indvars.iv.next53, %14
  br i1 %cmp, label %for.body, label %for.end22, !llvm.loop !230

for.end22:                                        ; preds = %for.end18, %entry
  %call23 = tail call i32 @fflush(%struct._IO_FILE* %fp) #36
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @fputc(i32 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #7

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @tmat_chk_uppertri(%struct.tmat_t* nocapture readonly %tmat) local_unnamed_addr #16 {
entry:
  %n_tmat = getelementptr inbounds %struct.tmat_t, %struct.tmat_t* %tmat, i64 0, i32 1
  %0 = load i32, i32* %n_tmat, align 8, !tbaa !224
  %tp = getelementptr inbounds %struct.tmat_t, %struct.tmat_t* %tmat, i64 0, i32 0
  %cmp39 = icmp sgt i32 %0, 0
  br i1 %cmp39, label %for.cond1.preheader.lr.ph, label %cleanup

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %n_state = getelementptr inbounds %struct.tmat_t, %struct.tmat_t* %tmat, i64 0, i32 2
  %1 = load i32, i32* %n_state, align 4, !tbaa !226
  %cmp237 = icmp sgt i32 %1, 0
  %2 = sext i32 %1 to i64
  %wide.trip.count50 = zext i32 %0 to i64
  %wide.trip.count46 = zext i32 %1 to i64
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.lr.ph, %for.inc16
  %indvars.iv48 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next49, %for.inc16 ]
  br i1 %cmp237, label %for.body3, label %for.inc16

for.cond1.loopexit:                               ; preds = %for.cond4, %for.body3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond47.not = icmp eq i64 %indvars.iv.next45, %wide.trip.count46
  br i1 %exitcond47.not, label %for.inc16, label %for.body3, !llvm.loop !231

for.body3:                                        ; preds = %for.cond1.preheader, %for.cond1.loopexit
  %indvars.iv44 = phi i64 [ %indvars.iv.next45, %for.cond1.loopexit ], [ 0, %for.cond1.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond1.loopexit ], [ 1, %for.cond1.preheader ]
  %indvars.iv.next45 = add nuw nsw i64 %indvars.iv44, 1
  %cmp635 = icmp slt i64 %indvars.iv.next45, %2
  br i1 %cmp635, label %for.body7.lr.ph, label %for.cond1.loopexit

for.body7.lr.ph:                                  ; preds = %for.body3
  %3 = load i32***, i32**** %tp, align 8, !tbaa !227
  %arrayidx = getelementptr inbounds i32**, i32*** %3, i64 %indvars.iv48
  %4 = load i32**, i32*** %arrayidx, align 8, !tbaa !74
  br label %for.body7

for.cond4:                                        ; preds = %for.body7
  %exitcond.not = icmp eq i64 %indvars.iv.next43, %wide.trip.count46
  br i1 %exitcond.not, label %for.cond1.loopexit, label %for.body7, !llvm.loop !232

for.body7:                                        ; preds = %for.body7.lr.ph, %for.cond4
  %indvars.iv42 = phi i64 [ %indvars.iv, %for.body7.lr.ph ], [ %indvars.iv.next43, %for.cond4 ]
  %arrayidx9 = getelementptr inbounds i32*, i32** %4, i64 %indvars.iv42
  %5 = load i32*, i32** %arrayidx9, align 8, !tbaa !74
  %arrayidx11 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv44
  %6 = load i32, i32* %arrayidx11, align 4, !tbaa !37
  %cmp12 = icmp sgt i32 %6, -939524096
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1
  br i1 %cmp12, label %cleanup, label %for.cond4

for.inc16:                                        ; preds = %for.cond1.loopexit, %for.cond1.preheader
  %indvars.iv.next49 = add nuw nsw i64 %indvars.iv48, 1
  %exitcond51.not = icmp eq i64 %indvars.iv.next49, %wide.trip.count50
  br i1 %exitcond51.not, label %cleanup, label %for.cond1.preheader, !llvm.loop !233

cleanup:                                          ; preds = %for.inc16, %for.body7, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ -1, %for.body7 ], [ 0, %for.inc16 ]
  ret i32 %retval.0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @tmat_chk_1skip(%struct.tmat_t* nocapture readonly %tmat) local_unnamed_addr #16 {
entry:
  %n_tmat = getelementptr inbounds %struct.tmat_t, %struct.tmat_t* %tmat, i64 0, i32 1
  %0 = load i32, i32* %n_tmat, align 8, !tbaa !224
  %tp = getelementptr inbounds %struct.tmat_t, %struct.tmat_t* %tmat, i64 0, i32 0
  %cmp39 = icmp sgt i32 %0, 0
  br i1 %cmp39, label %for.cond1.preheader.lr.ph, label %cleanup

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %n_state = getelementptr inbounds %struct.tmat_t, %struct.tmat_t* %tmat, i64 0, i32 2
  %1 = load i32, i32* %n_state, align 4, !tbaa !226
  %cmp237 = icmp sgt i32 %1, 0
  %2 = add i32 %1, 1
  %wide.trip.count50 = zext i32 %0 to i64
  %wide.trip.count = zext i32 %1 to i64
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.lr.ph, %for.inc16
  %indvars.iv48 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next49, %for.inc16 ]
  br i1 %cmp237, label %for.body3, label %for.inc16

for.body3:                                        ; preds = %for.cond1.preheader, %for.inc13
  %indvars.iv44 = phi i64 [ %indvars.iv.next45, %for.inc13 ], [ 0, %for.cond1.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc13 ], [ 3, %for.cond1.preheader ]
  %3 = trunc i64 %indvars.iv44 to i32
  %4 = add i32 %3, 3
  %cmp6.not35 = icmp sgt i32 %4, %1
  br i1 %cmp6.not35, label %for.inc13, label %for.body7.lr.ph

for.body7.lr.ph:                                  ; preds = %for.body3
  %5 = load i32***, i32**** %tp, align 8, !tbaa !227
  %arrayidx = getelementptr inbounds i32**, i32*** %5, i64 %indvars.iv48
  %6 = load i32**, i32*** %arrayidx, align 8, !tbaa !74
  %arrayidx9 = getelementptr inbounds i32*, i32** %6, i64 %indvars.iv44
  %7 = load i32*, i32** %arrayidx9, align 8, !tbaa !74
  br label %for.body7

for.cond4:                                        ; preds = %for.body7
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next43 to i32
  %exitcond.not = icmp eq i32 %2, %lftr.wideiv
  br i1 %exitcond.not, label %for.inc13, label %for.body7, !llvm.loop !234

for.body7:                                        ; preds = %for.body7.lr.ph, %for.cond4
  %indvars.iv42 = phi i64 [ %indvars.iv, %for.body7.lr.ph ], [ %indvars.iv.next43, %for.cond4 ]
  %arrayidx11 = getelementptr inbounds i32, i32* %7, i64 %indvars.iv42
  %8 = load i32, i32* %arrayidx11, align 4, !tbaa !37
  %cmp12 = icmp sgt i32 %8, -939524096
  br i1 %cmp12, label %cleanup, label %for.cond4

for.inc13:                                        ; preds = %for.cond4, %for.body3
  %indvars.iv.next45 = add nuw nsw i64 %indvars.iv44, 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond47.not = icmp eq i64 %indvars.iv.next45, %wide.trip.count
  br i1 %exitcond47.not, label %for.inc16, label %for.body3, !llvm.loop !235

for.inc16:                                        ; preds = %for.inc13, %for.cond1.preheader
  %indvars.iv.next49 = add nuw nsw i64 %indvars.iv48, 1
  %exitcond51.not = icmp eq i64 %indvars.iv.next49, %wide.trip.count50
  br i1 %exitcond51.not, label %cleanup, label %for.cond1.preheader, !llvm.loop !236

cleanup:                                          ; preds = %for.inc16, %for.body7, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ -1, %for.body7 ], [ 0, %for.inc16 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.tmat_t* @tmat_init(i8* %file_name, double %tpfloor) local_unnamed_addr #0 {
entry:
  %tmp = alloca i8, align 1
  %n_src = alloca i32, align 4
  %n_dst = alloca i32, align 4
  %byteswap = alloca i32, align 4
  %chksum = alloca i32, align 4
  %i = alloca i32, align 4
  %argname = alloca i8**, align 8
  %argval = alloca i8**, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %tmp) #38
  %0 = bitcast i32* %n_src to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %1 = bitcast i32* %n_dst to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #38
  %2 = bitcast i32* %byteswap to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #38
  %3 = bitcast i32* %chksum to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #38
  %4 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #38
  %5 = bitcast i8*** %argname to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #38
  %6 = bitcast i8*** %argval to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #38
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.122, i64 0, i64 0), i64 135, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.123, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5.124, i64 0, i64 0), i8* %file_name) #34
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.122, i64 0, i64 0), i32 137) #34
  %7 = bitcast i8* %call to %struct.tmat_t*
  %call1 = tail call %struct._IO_FILE* @fopen(i8* %file_name, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.125, i64 0, i64 0)) #36
  %cmp = icmp eq %struct._IO_FILE* %call1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.122, i64 0, i64 0), i64 140, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.126, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__fatal_sys_error(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.127, i64 0, i64 0), i8* %file_name) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call2 = call i32 @bio_readhdr(%struct._IO_FILE* %call1, i8*** nonnull %argname, i8*** nonnull %argval, i32* nonnull %byteswap) #34
  %cmp3 = icmp slt i32 %call2, 0
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.122, i64 0, i64 0), i64 144, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.128, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10.129, i64 0, i64 0), i8* %file_name) #34
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  store i32 0, i32* %i, align 4, !tbaa !37
  %8 = load i8**, i8*** %argname, align 8, !tbaa !74
  %9 = load i8*, i8** %8, align 8, !tbaa !74
  %tobool.not184 = icmp eq i8* %9, null
  br i1 %tobool.not184, label %for.end, label %for.body

for.body:                                         ; preds = %if.end5, %for.inc
  %10 = phi i8** [ %17, %for.inc ], [ %8, %if.end5 ]
  %11 = phi i32 [ %inc, %for.inc ], [ 0, %if.end5 ]
  %12 = phi i8* [ %18, %for.inc ], [ %9, %if.end5 ]
  %idxprom186 = phi i64 [ %idxprom, %for.inc ], [ 0, %if.end5 ]
  %chksum_present.0185 = phi i32 [ %chksum_present.1, %for.inc ], [ 0, %if.end5 ]
  %call8 = call i32 @strcmp(i8* noundef nonnull %12, i8* noundef nonnull dereferenceable(8) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.130, i64 0, i64 0)) #37
  %cmp9 = icmp eq i32 %call8, 0
  br i1 %cmp9, label %if.then10, label %if.else

if.then10:                                        ; preds = %for.body
  %13 = load i8**, i8*** %argval, align 8, !tbaa !74
  %arrayidx12 = getelementptr inbounds i8*, i8** %13, i64 %idxprom186
  %14 = load i8*, i8** %arrayidx12, align 8, !tbaa !74
  %call13 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %14, i8* noundef nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.131, i64 0, i64 0)) #37
  %cmp14.not = icmp eq i32 %call13, 0
  br i1 %cmp14.not, label %for.inc, label %if.then15

if.then15:                                        ; preds = %if.then10
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.122, i64 0, i64 0), i64 151, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13.132, i64 0, i64 0)) #34
  %15 = load i8**, i8*** %argval, align 8, !tbaa !74
  %idxprom16 = zext i32 %11 to i64
  %arrayidx17 = getelementptr inbounds i8*, i8** %15, i64 %idxprom16
  %16 = load i8*, i8** %arrayidx17, align 8, !tbaa !74
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14.133, i64 0, i64 0), i8* %file_name, i8* %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.131, i64 0, i64 0)) #34
  %.pre = load i8**, i8*** %argname, align 8, !tbaa !74
  br label %for.inc

if.else:                                          ; preds = %for.body
  %call21 = call i32 @strcmp(i8* noundef nonnull %12, i8* noundef nonnull dereferenceable(8) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15.134, i64 0, i64 0)) #37
  %cmp22 = icmp eq i32 %call21, 0
  %spec.select = select i1 %cmp22, i32 1, i32 %chksum_present.0185
  br label %for.inc

for.inc:                                          ; preds = %if.else, %if.then15, %if.then10
  %17 = phi i8** [ %.pre, %if.then15 ], [ %10, %if.then10 ], [ %10, %if.else ]
  %chksum_present.1 = phi i32 [ %chksum_present.0185, %if.then15 ], [ %chksum_present.0185, %if.then10 ], [ %spec.select, %if.else ]
  %inc = add nuw nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4, !tbaa !37
  %idxprom = zext i32 %inc to i64
  %arrayidx = getelementptr inbounds i8*, i8** %17, i64 %idxprom
  %18 = load i8*, i8** %arrayidx, align 8, !tbaa !74
  %tobool.not = icmp eq i8* %18, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !237

for.end:                                          ; preds = %for.inc, %if.end5
  %chksum_present.0.lcssa = phi i32 [ 0, %if.end5 ], [ %chksum_present.1, %for.inc ]
  %.lcssa = phi i8** [ %8, %if.end5 ], [ %17, %for.inc ]
  %19 = load i8**, i8*** %argval, align 8, !tbaa !74
  call void @bio_hdrarg_free(i8** nonnull %.lcssa, i8** %19) #34
  store i8** null, i8*** %argval, align 8, !tbaa !74
  store i8** null, i8*** %argname, align 8, !tbaa !74
  store i32 0, i32* %chksum, align 4, !tbaa !37
  %n_tmat = getelementptr inbounds i8, i8* %call, i64 8
  %20 = bitcast i8* %n_tmat to i32*
  %21 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call26 = call i32 @bio_fread(i8* nonnull %n_tmat, i32 4, i32 1, %struct._IO_FILE* %call1, i32 %21, i32* nonnull %chksum) #34
  %cmp27.not = icmp eq i32 %call26, 1
  br i1 %cmp27.not, label %lor.lhs.false, label %if.then36

lor.lhs.false:                                    ; preds = %for.end
  %22 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call28 = call i32 @bio_fread(i8* nonnull %0, i32 4, i32 1, %struct._IO_FILE* %call1, i32 %22, i32* nonnull %chksum) #34
  %cmp29.not = icmp eq i32 %call28, 1
  br i1 %cmp29.not, label %lor.lhs.false30, label %if.then36

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %23 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call31 = call i32 @bio_fread(i8* nonnull %1, i32 4, i32 1, %struct._IO_FILE* %call1, i32 %23, i32* nonnull %chksum) #34
  %cmp32.not = icmp eq i32 %call31, 1
  br i1 %cmp32.not, label %lor.lhs.false33, label %if.then36

lor.lhs.false33:                                  ; preds = %lor.lhs.false30
  %24 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call34 = call i32 @bio_fread(i8* nonnull %4, i32 4, i32 1, %struct._IO_FILE* %call1, i32 %24, i32* nonnull %chksum) #34
  %cmp35.not = icmp eq i32 %call34, 1
  br i1 %cmp35.not, label %if.end37, label %if.then36

if.then36:                                        ; preds = %lor.lhs.false33, %lor.lhs.false30, %lor.lhs.false, %for.end
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.122, i64 0, i64 0), i64 167, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.128, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16.135, i64 0, i64 0), i8* %file_name) #34
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %lor.lhs.false33
  %25 = load i32, i32* %20, align 8, !tbaa !224
  %cmp39 = icmp sgt i32 %25, 2147483645
  br i1 %cmp39, label %if.then40, label %if.end42

if.then40:                                        ; preds = %if.end37
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.122, i64 0, i64 0), i64 170, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.128, i64 0, i64 0)) #34
  %26 = load i32, i32* %20, align 8, !tbaa !224
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.17.136, i64 0, i64 0), i8* %file_name, i32 %26, i32 2147483646) #34
  br label %if.end42

if.end42:                                         ; preds = %if.then40, %if.end37
  %27 = load i32, i32* %n_dst, align 4, !tbaa !37
  %28 = load i32, i32* %n_src, align 4, !tbaa !37
  %add = add nsw i32 %28, 1
  %cmp43.not = icmp eq i32 %27, %add
  br i1 %cmp43.not, label %if.end45, label %if.then44

if.then44:                                        ; preds = %if.end42
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.122, i64 0, i64 0), i64 172, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.128, i64 0, i64 0)) #34
  %29 = load i32, i32* %n_src, align 4, !tbaa !37
  %30 = load i32, i32* %n_dst, align 4, !tbaa !37
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18.137, i64 0, i64 0), i8* %file_name, i32 %29, i32 %30) #34
  %.pre191 = load i32, i32* %n_src, align 4, !tbaa !37
  %.pre192 = load i32, i32* %n_dst, align 4, !tbaa !37
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %if.end42
  %31 = phi i32 [ %.pre192, %if.then44 ], [ %27, %if.end42 ]
  %32 = phi i32 [ %.pre191, %if.then44 ], [ %28, %if.end42 ]
  %n_state = getelementptr inbounds i8, i8* %call, i64 12
  %33 = bitcast i8* %n_state to i32*
  store i32 %32, i32* %33, align 4, !tbaa !226
  %34 = load i32, i32* %i, align 4, !tbaa !37
  %35 = load i32, i32* %20, align 8, !tbaa !224
  %mul = mul nsw i32 %35, %32
  %mul47 = mul nsw i32 %mul, %31
  %cmp48.not = icmp eq i32 %34, %mul47
  br i1 %cmp48.not, label %if.end51, label %if.then49

if.then49:                                        ; preds = %if.end45
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.122, i64 0, i64 0), i64 176, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.128, i64 0, i64 0)) #34
  %36 = load i32, i32* %i, align 4, !tbaa !37
  %37 = load i32, i32* %20, align 8, !tbaa !224
  %38 = load i32, i32* %n_src, align 4, !tbaa !37
  %39 = load i32, i32* %n_dst, align 4, !tbaa !37
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19.138, i64 0, i64 0), i8* %file_name, i32 %36, i32 %37, i32 %38, i32 %39) #34
  %.pre193 = load i32, i32* %20, align 8, !tbaa !224
  %.pre194 = load i32, i32* %n_src, align 4, !tbaa !37
  %.pre195 = load i32, i32* %n_dst, align 4, !tbaa !37
  br label %if.end51

if.end51:                                         ; preds = %if.then49, %if.end45
  %40 = phi i32 [ %.pre195, %if.then49 ], [ %31, %if.end45 ]
  %41 = phi i32 [ %.pre194, %if.then49 ], [ %32, %if.end45 ]
  %42 = phi i32 [ %.pre193, %if.then49 ], [ %35, %if.end45 ]
  %call53 = call i8*** @__ckd_calloc_3d__(i32 %42, i32 %41, i32 %40, i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.122, i64 0, i64 0), i32 181) #34
  %tp54 = bitcast i8* %call to i32****
  %43 = bitcast i8* %call to i8****
  store i8*** %call53, i8**** %43, align 8, !tbaa !227
  %44 = load i32, i32* %n_src, align 4, !tbaa !37
  %45 = load i32, i32* %n_dst, align 4, !tbaa !37
  %call55 = call i8** @__ckd_calloc_2d__(i32 %44, i32 %45, i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.122, i64 0, i64 0), i32 184) #34
  %46 = load i32, i32* %n_src, align 4, !tbaa !37
  %47 = load i32, i32* %n_dst, align 4, !tbaa !37
  %mul56 = mul nsw i32 %47, %46
  store i32 0, i32* %i, align 4, !tbaa !37
  %48 = load i32, i32* %20, align 8, !tbaa !224
  %cmp59183 = icmp sgt i32 %48, 0
  br i1 %cmp59183, label %for.body60, label %for.end104

for.body60:                                       ; preds = %if.end51, %for.inc102
  %49 = load i8*, i8** %call55, align 8, !tbaa !74
  %50 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call62 = call i32 @bio_fread(i8* %49, i32 4, i32 %mul56, %struct._IO_FILE* %call1, i32 %50, i32* nonnull %chksum) #34
  %cmp63.not = icmp eq i32 %call62, %mul56
  br i1 %cmp63.not, label %if.end65, label %if.then64

if.then64:                                        ; preds = %for.body60
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.122, i64 0, i64 0), i64 191, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.128, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.20.139, i64 0, i64 0), i8* %file_name) #34
  br label %if.end65

if.end65:                                         ; preds = %if.then64, %for.body60
  %51 = load i32, i32* %n_src, align 4, !tbaa !37
  %cmp67181 = icmp sgt i32 %51, 0
  br i1 %cmp67181, label %for.body68.preheader, label %for.inc102

for.body68.preheader:                             ; preds = %if.end65
  %.pre196 = load i32, i32* %n_dst, align 4, !tbaa !37
  br label %for.body68

for.body68:                                       ; preds = %for.body68.preheader, %for.inc99
  %52 = phi i32 [ %.pre196, %for.body68.preheader ], [ %65, %for.inc99 ]
  %indvars.iv189 = phi i64 [ 0, %for.body68.preheader ], [ %indvars.iv.next190, %for.inc99 ]
  %arrayidx70178 = getelementptr inbounds i8*, i8** %call55, i64 %indvars.iv189
  %arrayidx70 = bitcast i8** %arrayidx70178 to float**
  %53 = load float*, float** %arrayidx70, align 8, !tbaa !74
  call void @vector_nz_floor(float* %53, i32 %52, double %tpfloor) #34
  %54 = load float*, float** %arrayidx70, align 8, !tbaa !74
  %55 = load i32, i32* %n_dst, align 4, !tbaa !37
  %call73 = call double @vector_sum_norm(float* %54, i32 %55) #34
  %56 = load i32, i32* %n_dst, align 4, !tbaa !37
  %cmp75179 = icmp sgt i32 %56, 0
  br i1 %cmp75179, label %for.body76, label %for.inc99

for.body76:                                       ; preds = %for.body68, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end ], [ 0, %for.body68 ]
  %57 = load float*, float** %arrayidx70, align 8, !tbaa !74
  %arrayidx80 = getelementptr inbounds float, float* %57, i64 %indvars.iv
  %58 = load float, float* %arrayidx80, align 4, !tbaa !4
  %cmp81 = fcmp oeq float %58, 0.000000e+00
  br i1 %cmp81, label %cond.end, label %cond.false

cond.false:                                       ; preds = %for.body76
  %conv = fpext float %58 to double
  %call88 = call i32 @logs3(double %conv) #34
  br label %cond.end

cond.end:                                         ; preds = %for.body76, %cond.false
  %cond = phi i32 [ %call88, %cond.false ], [ -939524096, %for.body76 ]
  %59 = load i32***, i32**** %tp54, align 8, !tbaa !227
  %60 = load i32, i32* %i, align 4, !tbaa !37
  %idxprom90 = sext i32 %60 to i64
  %arrayidx91 = getelementptr inbounds i32**, i32*** %59, i64 %idxprom90
  %61 = load i32**, i32*** %arrayidx91, align 8, !tbaa !74
  %arrayidx93 = getelementptr inbounds i32*, i32** %61, i64 %indvars.iv189
  %62 = load i32*, i32** %arrayidx93, align 8, !tbaa !74
  %arrayidx95 = getelementptr inbounds i32, i32* %62, i64 %indvars.iv
  store i32 %cond, i32* %arrayidx95, align 4, !tbaa !37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %63 = load i32, i32* %n_dst, align 4, !tbaa !37
  %64 = sext i32 %63 to i64
  %cmp75 = icmp slt i64 %indvars.iv.next, %64
  br i1 %cmp75, label %for.body76, label %for.inc99, !llvm.loop !238

for.inc99:                                        ; preds = %cond.end, %for.body68
  %65 = phi i32 [ %56, %for.body68 ], [ %63, %cond.end ]
  %indvars.iv.next190 = add nuw nsw i64 %indvars.iv189, 1
  %66 = load i32, i32* %n_src, align 4, !tbaa !37
  %67 = sext i32 %66 to i64
  %cmp67 = icmp slt i64 %indvars.iv.next190, %67
  br i1 %cmp67, label %for.body68, label %for.inc102, !llvm.loop !239

for.inc102:                                       ; preds = %for.inc99, %if.end65
  %68 = load i32, i32* %i, align 4, !tbaa !37
  %inc103 = add nsw i32 %68, 1
  store i32 %inc103, i32* %i, align 4, !tbaa !37
  %69 = load i32, i32* %20, align 8, !tbaa !224
  %cmp59 = icmp slt i32 %inc103, %69
  br i1 %cmp59, label %for.body60, label %for.end104, !llvm.loop !240

for.end104:                                       ; preds = %for.inc102, %if.end51
  call void @ckd_free_2d(i8** %call55) #34
  %tobool105.not = icmp eq i32 %chksum_present.0.lcssa, 0
  br i1 %tobool105.not, label %if.end107, label %if.then106

if.then106:                                       ; preds = %for.end104
  %70 = load i32, i32* %byteswap, align 4, !tbaa !37
  %71 = load i32, i32* %chksum, align 4, !tbaa !37
  call void @bio_verify_chksum(%struct._IO_FILE* %call1, i32 %70, i32 %71) #34
  br label %if.end107

if.end107:                                        ; preds = %if.then106, %for.end104
  %call108 = call i64 @fread(i8* nonnull %tmp, i64 1, i64 1, %struct._IO_FILE* %call1) #36
  %cmp109 = icmp eq i64 %call108, 1
  br i1 %cmp109, label %if.then111, label %if.end112

if.then111:                                       ; preds = %if.end107
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.122, i64 0, i64 0), i64 213, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.140, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22.141, i64 0, i64 0)) #34
  br label %if.end112

if.end112:                                        ; preds = %if.then111, %if.end107
  %call113 = call i32 @fclose(%struct._IO_FILE* %call1) #36
  call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.122, i64 0, i64 0), i64 217, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.123, i64 0, i64 0)) #34
  %72 = load i32, i32* %20, align 8, !tbaa !224
  %73 = load i32, i32* %33, align 4, !tbaa !226
  %add117 = add nsw i32 %73, 1
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.23.142, i64 0, i64 0), i32 %72, i32 %73, i32 %add117) #34
  %call118 = call i32 @tmat_chk_uppertri(%struct.tmat_t* nonnull %7) #36
  %cmp119 = icmp slt i32 %call118, 0
  br i1 %cmp119, label %if.then121, label %if.end122

if.then121:                                       ; preds = %if.end112
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.122, i64 0, i64 0), i64 221, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.128, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24.143, i64 0, i64 0)) #34
  br label %if.end122

if.end122:                                        ; preds = %if.then121, %if.end112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %tmp) #38
  ret %struct.tmat_t* %7
}

; Function Attrs: nofree nounwind optsize
declare noundef i64 @fread(i8* nocapture noundef, i64 noundef, i64 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize uwtable
define void @tmat_free(%struct.tmat_t* %t) local_unnamed_addr #0 {
entry:
  %tobool.not = icmp eq %struct.tmat_t* %t, null
  br i1 %tobool.not, label %if.end4, label %if.then

if.then:                                          ; preds = %entry
  %tp = getelementptr inbounds %struct.tmat_t, %struct.tmat_t* %t, i64 0, i32 0
  %0 = load i32***, i32**** %tp, align 8, !tbaa !227
  %tobool1.not = icmp eq i32*** %0, null
  br i1 %tobool1.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %1 = bitcast i32*** %0 to i8***
  tail call void @ckd_free_3d(i8*** nonnull %1) #34
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %2 = bitcast %struct.tmat_t* %t to i8*
  tail call void @ckd_free(i8* nonnull %2) #34
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct._IO_FILE* @fopen_comp(i8* %file, i8* %mode, i32* nocapture %ispipe) local_unnamed_addr #0 {
entry:
  %command = alloca [16384 x i8], align 16
  %0 = getelementptr inbounds [16384 x i8], [16384 x i8]* %command, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %0) #38
  %call = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %file) #37
  %conv = trunc i64 %call to i32
  store i32 0, i32* %ispipe, align 4, !tbaa !37
  %cmp = icmp sgt i32 %conv, 2
  br i1 %cmp, label %land.lhs.true, label %if.else72

land.lhs.true:                                    ; preds = %entry
  %sext106 = shl i64 %call, 32
  %idx.ext = ashr exact i64 %sext106, 32
  %add.ptr2.idx = add nsw i64 %idx.ext, -2
  %add.ptr2 = getelementptr inbounds i8, i8* %file, i64 %add.ptr2.idx
  %call3 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %add.ptr2, i8* noundef nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.144, i64 0, i64 0)) #37
  %cmp4 = icmp eq i32 %call3, 0
  br i1 %cmp4, label %if.then30, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call9 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %add.ptr2, i8* noundef nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.145, i64 0, i64 0)) #37
  %cmp10 = icmp eq i32 %call9, 0
  br i1 %cmp10, label %if.then30, label %if.else

if.else:                                          ; preds = %lor.lhs.false
  %cmp12 = icmp sgt i32 %conv, 3
  br i1 %cmp12, label %land.lhs.true14, label %if.else72

land.lhs.true14:                                  ; preds = %if.else
  %add.ptr17.idx = add nsw i64 %idx.ext, -3
  %add.ptr17 = getelementptr inbounds i8, i8* %file, i64 %add.ptr17.idx
  %call18 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %add.ptr17, i8* noundef nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.146, i64 0, i64 0)) #37
  %cmp19 = icmp eq i32 %call18, 0
  br i1 %cmp19, label %if.then30, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %land.lhs.true14
  %call25 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %add.ptr17, i8* noundef nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.147, i64 0, i64 0)) #37
  %cmp26 = icmp eq i32 %call25, 0
  br i1 %cmp26, label %if.then30, label %if.else72

if.then30:                                        ; preds = %land.lhs.true14, %lor.lhs.false21, %land.lhs.true, %lor.lhs.false
  %tobool54.not.ph = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true ], [ false, %lor.lhs.false21 ], [ false, %land.lhs.true14 ]
  store i32 1, i32* %ispipe, align 4, !tbaa !37
  %call31 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %mode, i8* noundef nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.148, i64 0, i64 0)) #37
  %cmp32 = icmp eq i32 %call31, 0
  br i1 %cmp32, label %if.then34, label %if.else49

if.then34:                                        ; preds = %if.then30
  %. = select i1 %tobool54.not.ph, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.149, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.150, i64 0, i64 0)
  %call40 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* nonnull dereferenceable(1) %., i8* %file) #34
  %call43 = call %struct._IO_FILE* @popen(i8* nonnull %0, i8* %mode) #36
  %cmp44 = icmp eq %struct._IO_FILE* %call43, null
  br i1 %cmp44, label %if.then46, label %cleanup

if.then46:                                        ; preds = %if.then34
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.151, i64 0, i64 0), i64 117, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.152, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__sys_error(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9.153, i64 0, i64 0), i8* nonnull %0, i8* %mode) #34
  br label %cleanup

if.else49:                                        ; preds = %if.then30
  %call50 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %mode, i8* noundef nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.154, i64 0, i64 0)) #37
  %cmp51 = icmp eq i32 %call50, 0
  br i1 %cmp51, label %if.then53, label %if.else69

if.then53:                                        ; preds = %if.else49
  %.126 = select i1 %tobool54.not.ph, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.155, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11.156, i64 0, i64 0)
  %call60 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* nonnull dereferenceable(1) %.126, i8* %file) #34
  %call63 = call %struct._IO_FILE* @popen(i8* nonnull %0, i8* %mode) #36
  %cmp64 = icmp eq %struct._IO_FILE* %call63, null
  br i1 %cmp64, label %if.then66, label %cleanup

if.then66:                                        ; preds = %if.then53
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.151, i64 0, i64 0), i64 127, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.152, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__sys_error(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9.153, i64 0, i64 0), i8* nonnull %0, i8* %mode) #34
  br label %cleanup

if.else69:                                        ; preds = %if.else49
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.151, i64 0, i64 0), i64 131, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.157, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14.158, i64 0, i64 0), i8* %mode) #34
  br label %cleanup

if.else72:                                        ; preds = %lor.lhs.false21, %if.else, %entry
  %call73 = tail call %struct._IO_FILE* @fopen(i8* %file, i8* %mode) #36
  br label %cleanup

cleanup:                                          ; preds = %if.else72, %if.then53, %if.then34, %if.else69, %if.then66, %if.then46
  %retval.0 = phi %struct._IO_FILE* [ null, %if.then46 ], [ null, %if.then66 ], [ null, %if.else69 ], [ %call43, %if.then34 ], [ %call63, %if.then53 ], [ %call73, %if.else72 ]
  call void @llvm.lifetime.end.p0i8(i64 16384, i8* nonnull %0) #38
  ret %struct._IO_FILE* %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind optsize readonly willreturn
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind optsize
declare noundef i32 @sprintf(i8* noalias nocapture noundef writeonly, i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind optsize
declare noalias noundef %struct._IO_FILE* @popen(i8* nocapture noundef readonly, i8* nocapture noundef readonly) local_unnamed_addr #2

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @fclose_comp(%struct._IO_FILE* nocapture %fp, i32 %ispipe) local_unnamed_addr #14 {
entry:
  %tobool.not = icmp eq i32 %ispipe, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 @pclose(%struct._IO_FILE* %fp) #36
  br label %if.end

if.else:                                          ; preds = %entry
  %call1 = tail call i32 @fclose(%struct._IO_FILE* %fp) #36
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @pclose(%struct._IO_FILE* nocapture noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct._IO_FILE* @fopen_compchk(i8* %file, i32* nocapture %ispipe) local_unnamed_addr #0 {
entry:
  %tmpfile = alloca [16384 x i8], align 16
  %statbuf = alloca %struct.stat, align 8
  %0 = getelementptr inbounds [16384 x i8], [16384 x i8]* %tmpfile, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %0) #38
  %1 = bitcast %struct.stat* %statbuf to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %1) #38
  %call = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %file) #37
  %conv = trunc i64 %call to i32
  store i32 0, i32* %ispipe, align 4, !tbaa !37
  %cmp = icmp sgt i32 %conv, 2
  br i1 %cmp, label %land.lhs.true, label %if.end29

land.lhs.true:                                    ; preds = %entry
  %sext104 = shl i64 %call, 32
  %idx.ext = ashr exact i64 %sext104, 32
  %add.ptr2.idx = add nsw i64 %idx.ext, -2
  %add.ptr2 = getelementptr inbounds i8, i8* %file, i64 %add.ptr2.idx
  %call3 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %add.ptr2, i8* noundef nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.144, i64 0, i64 0)) #37
  %cmp4 = icmp eq i32 %call3, 0
  br i1 %cmp4, label %if.end29.sink.split, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call9 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %add.ptr2, i8* noundef nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1.145, i64 0, i64 0)) #37
  %cmp10 = icmp eq i32 %call9, 0
  br i1 %cmp10, label %if.end29.sink.split, label %if.else

if.else:                                          ; preds = %lor.lhs.false
  %cmp12 = icmp sgt i32 %conv, 3
  br i1 %cmp12, label %land.lhs.true14, label %if.end29

land.lhs.true14:                                  ; preds = %if.else
  %add.ptr17.idx = add nsw i64 %idx.ext, -3
  %add.ptr17 = getelementptr inbounds i8, i8* %file, i64 %add.ptr17.idx
  %call18 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %add.ptr17, i8* noundef nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.146, i64 0, i64 0)) #37
  %cmp19 = icmp eq i32 %call18, 0
  br i1 %cmp19, label %if.end29.sink.split, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %land.lhs.true14
  %call25 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %add.ptr17, i8* noundef nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.147, i64 0, i64 0)) #37
  %cmp26 = icmp eq i32 %call25, 0
  br i1 %cmp26, label %if.end29.sink.split, label %if.end29

if.end29.sink.split:                              ; preds = %land.lhs.true14, %lor.lhs.false21, %land.lhs.true, %lor.lhs.false
  %tobool38.not.ph = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true ], [ false, %lor.lhs.false21 ], [ false, %land.lhs.true14 ]
  store i32 1, i32* %ispipe, align 4, !tbaa !37
  br label %if.end29

if.end29:                                         ; preds = %if.end29.sink.split, %entry, %if.else, %lor.lhs.false21
  %tobool38.not = phi i1 [ true, %if.else ], [ true, %lor.lhs.false21 ], [ true, %entry ], [ %tobool38.not.ph, %if.end29.sink.split ]
  %call30 = call i8* @strcpy(i8* noundef nonnull %0, i8* noundef nonnull dereferenceable(1) %file) #34
  %call32 = call i32 @stat(i8* nonnull %0, %struct.stat* nonnull %statbuf) #34
  %cmp33.not = icmp eq i32 %call32, 0
  br i1 %cmp33.not, label %if.end74, label %if.then35

if.then35:                                        ; preds = %if.end29
  call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.151, i64 0, i64 0), i64 185, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.152, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__sys_error(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15.159, i64 0, i64 0), i8* nonnull %0) #34
  %2 = load i32, i32* %ispipe, align 4, !tbaa !37
  %tobool.not = icmp eq i32 %2, 0
  %sext = shl i64 %call, 32
  br i1 %tobool.not, label %if.else51, label %if.then37

if.then37:                                        ; preds = %if.then35
  %. = select i1 %tobool38.not, i64 -8589934592, i64 -12884901888
  %sext101 = add i64 %sext, %.
  %idxprom42 = ashr exact i64 %sext101, 32
  %arrayidx43 = getelementptr inbounds [16384 x i8], [16384 x i8]* %tmpfile, i64 0, i64 %idxprom42
  store i8 0, i8* %arrayidx43, align 1, !tbaa !63
  %call46 = call i32 @stat(i8* nonnull %0, %struct.stat* nonnull %statbuf) #34
  %cmp47.not = icmp eq i32 %call46, 0
  br i1 %cmp47.not, label %if.end72, label %cleanup

if.else51:                                        ; preds = %if.then35
  %idx.ext53 = ashr exact i64 %sext, 32
  %add.ptr54 = getelementptr inbounds [16384 x i8], [16384 x i8]* %tmpfile, i64 0, i64 %idx.ext53
  %3 = bitcast i8* %add.ptr54 to i32*
  store i32 8021806, i32* %3, align 1
  %call57 = call i32 @stat(i8* nonnull %0, %struct.stat* nonnull %statbuf) #34
  %cmp58.not = icmp eq i32 %call57, 0
  br i1 %cmp58.not, label %if.end72, label %if.then60

if.then60:                                        ; preds = %if.else51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 1 dereferenceable(3) %add.ptr54, i8* noundef nonnull align 1 dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.144, i64 0, i64 0), i64 3, i1 false) #34
  %call66 = call i32 @stat(i8* nonnull %0, %struct.stat* nonnull %statbuf) #34
  %cmp67.not = icmp eq i32 %call66, 0
  br i1 %cmp67.not, label %if.end72, label %cleanup

if.end72:                                         ; preds = %if.else51, %if.then60, %if.then37
  call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.151, i64 0, i64 0), i64 208, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.160, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17.161, i64 0, i64 0), i8* nonnull %0, i8* %file) #34
  br label %if.end74

if.end74:                                         ; preds = %if.end72, %if.end29
  %call76 = call %struct._IO_FILE* @fopen_comp(i8* nonnull %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.148, i64 0, i64 0), i32* nonnull %ispipe) #36
  br label %cleanup

cleanup:                                          ; preds = %if.then60, %if.then37, %if.end74
  %retval.0 = phi %struct._IO_FILE* [ %call76, %if.end74 ], [ null, %if.then37 ], [ null, %if.then60 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 16384, i8* nonnull %0) #38
  ret %struct._IO_FILE* %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind optsize willreturn
declare i8* @strcpy(i8* noalias returned writeonly, i8* noalias nocapture readonly) local_unnamed_addr #17

; Function Attrs: nofree nounwind optsize
declare noundef i32 @stat(i8* nocapture noundef readonly, %struct.stat* nocapture noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #18

; Function Attrs: noinline nounwind optsize uwtable
define i32 @fread_retry(i8* nocapture %pointer, i32 %size, i32 %num_items, %struct._IO_FILE* nocapture %stream) local_unnamed_addr #0 {
entry:
  %conv = sext i32 %size to i64
  %conv135 = zext i32 %num_items to i64
  %call36 = tail call i64 @fread(i8* %pointer, i64 %conv, i64 %conv135, %struct._IO_FILE* %stream) #36
  %conv237 = trunc i64 %call36 to i32
  %sub38 = sub i32 %num_items, %conv237
  %cmp.not39 = icmp eq i32 %sub38, 0
  br i1 %cmp.not39, label %cleanup, label %if.then

if.then:                                          ; preds = %entry, %do.cond
  %sub43 = phi i32 [ %sub, %do.cond ], [ %sub38, %entry ]
  %conv242 = phi i32 [ %conv2, %do.cond ], [ %conv237, %entry ]
  %loc.041 = phi i32 [ %add, %do.cond ], [ 0, %entry ]
  %n_retry_rem.040 = phi i32 [ %dec, %do.cond ], [ 60, %entry ]
  switch i32 %n_retry_rem.040, label %do.cond [
    i32 0, label %cleanup
    i32 60, label %if.then9
  ]

if.then9:                                         ; preds = %if.then
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.151, i64 0, i64 0), i64 243, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.152, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__sys_error(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.162, i64 0, i64 0)) #34
  br label %do.cond

do.cond:                                          ; preds = %if.then9, %if.then
  %dec = add nsw i32 %n_retry_rem.040, -1
  %mul = mul i32 %conv242, %size
  %add = add i32 %mul, %loc.041
  %call11 = tail call i32 @sleep(i32 1) #34
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i8, i8* %pointer, i64 %idxprom
  %conv1 = zext i32 %sub43 to i64
  %call = tail call i64 @fread(i8* %arrayidx, i64 %conv, i64 %conv1, %struct._IO_FILE* %stream) #36
  %conv2 = trunc i64 %call to i32
  %sub = sub i32 %sub43, %conv2
  %cmp.not = icmp eq i32 %sub, 0
  br i1 %cmp.not, label %cleanup, label %if.then

cleanup:                                          ; preds = %if.then, %do.cond, %entry
  %retval.0 = phi i32 [ %num_items, %entry ], [ %num_items, %do.cond ], [ -1, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: optsize
declare i32 @sleep(i32) local_unnamed_addr #19

; Function Attrs: noinline nounwind optsize uwtable
define i32 @stat_retry(i8* %file, %struct.stat* nocapture %statbuf) local_unnamed_addr #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %if.end4
  %i.010 = phi i32 [ 0, %entry ], [ %inc, %if.end4 ]
  %call = tail call i32 @stat(i8* %file, %struct.stat* %statbuf) #34
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %cleanup, label %if.end

if.end:                                           ; preds = %for.body
  %cmp2 = icmp eq i32 %i.010, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7.151, i64 0, i64 0), i64 270, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.152, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__sys_error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19.163, i64 0, i64 0), i8* %file) #34
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end
  %call5 = tail call i32 @sleep(i32 10) #34
  %inc = add nuw nsw i32 %i.010, 1
  %exitcond.not = icmp eq i32 %inc, 10
  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !241

cleanup:                                          ; preds = %if.end4, %for.body
  %retval.0 = phi i32 [ 0, %for.body ], [ -1, %if.end4 ]
  ret i32 %retval.0
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @stat_mtime(i8* nocapture readonly %file) local_unnamed_addr #14 {
entry:
  %statbuf = alloca %struct.stat, align 8
  %0 = bitcast %struct.stat* %statbuf to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %0) #38
  %call = call i32 @stat(i8* %file, %struct.stat* nonnull %statbuf) #34
  %cmp.not = icmp eq i32 %call, 0
  %tv_sec = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i64 0, i32 12, i32 0
  %1 = load i64, i64* %tv_sec, align 8
  %conv = trunc i64 %1 to i32
  %retval.0 = select i1 %cmp.not, i32 %conv, i32 -1
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %0) #38
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias %struct._IO_FILE* @_myfopen(i8* %file, i8* %mode, i8* %pgm, i32 %line) local_unnamed_addr #0 {
entry:
  %call = tail call %struct._IO_FILE* @fopen(i8* %file, i8* %mode) #36
  %cmp = icmp eq %struct._IO_FILE* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !74
  %call1 = tail call i32 @fflush(%struct._IO_FILE* %0) #36
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.20.164, i64 0, i64 0), i8* %pgm, i32 %line, i8* %file, i8* %mode) #35
  tail call void @perror(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.21.165, i64 0, i64 0)) #35
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call3 = tail call i32 @fflush(%struct._IO_FILE* %2) #36
  %call4 = tail call i32* @__errno_location() #41
  %3 = load i32, i32* %call4, align 4, !tbaa !37
  tail call void @exit(i32 %3) #40
  unreachable

if.end:                                           ; preds = %entry
  ret %struct._IO_FILE* %call
}

; Function Attrs: nofree nounwind optsize
declare void @perror(i8* nocapture noundef readonly) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nosync nounwind optsize readnone willreturn
declare i32* @__errno_location() local_unnamed_addr #20

; Function Attrs: noinline nounwind optsize uwtable
define %struct.fillpen_t* @fillpen_init(%struct.dict_t* %dict, i8* %file, double %silprob, double %fillprob, double %lw, double %wip) local_unnamed_addr #0 {
entry:
  %prob = alloca double, align 8
  %line = alloca [1024 x i8], align 16
  %wd = alloca [1024 x i8], align 16
  %0 = bitcast double* %prob to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #38
  %1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %1) #38
  %2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %wd, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %2) #38
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.166, i64 0, i64 0), i32 78) #34
  %dict1 = bitcast i8* %call to %struct.dict_t**
  store %struct.dict_t* %dict, %struct.dict_t** %dict1, align 8, !tbaa !242
  %lw2 = getelementptr inbounds i8, i8* %call, i64 16
  %3 = bitcast i8* %lw2 to double*
  store double %lw, double* %3, align 8, !tbaa !244
  %wip3 = getelementptr inbounds i8, i8* %call, i64 24
  %4 = bitcast i8* %wip3 to double*
  store double %wip, double* %4, align 8, !tbaa !245
  %filler_end = getelementptr inbounds %struct.dict_t, %struct.dict_t* %dict, i64 0, i32 9
  %5 = load i32, i32* %filler_end, align 4, !tbaa !83
  %filler_start = getelementptr inbounds %struct.dict_t, %struct.dict_t* %dict, i64 0, i32 8
  %6 = load i32, i32* %filler_start, align 8, !tbaa !82
  %cmp.not = icmp slt i32 %5, %6
  br i1 %cmp.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %sub = add i32 %5, 1
  %add = sub i32 %sub, %6
  %conv = sext i32 %add to i64
  %call6 = tail call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.166, i64 0, i64 0), i32 85) #34
  %prob7 = getelementptr inbounds i8, i8* %call, i64 8
  %7 = bitcast i8* %prob7 to i8**
  store i8* %call6, i8** %7, align 8, !tbaa !246
  %.pre = load i32, i32* %filler_start, align 8, !tbaa !82
  %.pre199 = load i32, i32* %filler_end, align 4, !tbaa !83
  %.pre201 = bitcast i8* %prob7 to i32**
  br label %if.end

if.else:                                          ; preds = %entry
  %prob8 = getelementptr inbounds i8, i8* %call, i64 8
  %8 = bitcast i8* %prob8 to i32**
  store i32* null, i32** %8, align 8, !tbaa !246
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %.pre-phi = phi i32** [ %8, %if.else ], [ %.pre201, %if.then ]
  %9 = phi i32 [ %5, %if.else ], [ %.pre199, %if.then ]
  %10 = phi i32 [ %6, %if.else ], [ %.pre, %if.then ]
  %cmp11.not196 = icmp sgt i32 %10, %9
  br i1 %cmp11.not196, label %for.end, label %for.body

for.body:                                         ; preds = %if.end, %for.body
  %w.0197 = phi i32 [ %inc, %for.body ], [ %10, %if.end ]
  %call13 = tail call i32 @logs3(double %fillprob) #34
  %conv14 = sitofp i32 %call13 to double
  %call15 = tail call i32 @logs3(double %wip) #34
  %conv16 = sitofp i32 %call15 to double
  %11 = tail call double @llvm.fmuladd.f64(double %conv14, double %lw, double %conv16)
  %conv17 = fptosi double %11 to i32
  %12 = load i32*, i32** %.pre-phi, align 8, !tbaa !246
  %13 = load i32, i32* %filler_start, align 8, !tbaa !82
  %sub20 = sub nsw i32 %w.0197, %13
  %idxprom = sext i32 %sub20 to i64
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %idxprom
  store i32 %conv17, i32* %arrayidx, align 4, !tbaa !37
  %inc = add nsw i32 %w.0197, 1
  %14 = load i32, i32* %filler_end, align 4, !tbaa !83
  %cmp11.not.not = icmp slt i32 %w.0197, %14
  br i1 %cmp11.not.not, label %for.body, label %for.end, !llvm.loop !247

for.end:                                          ; preds = %for.body, %if.end
  %call21 = tail call i32 @dict_wordid(%struct.dict_t* nonnull %dict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.167, i64 0, i64 0)) #34
  %cmp22 = icmp slt i32 %call21, 0
  br i1 %cmp22, label %if.then31, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %15 = load i32, i32* %filler_start, align 8, !tbaa !82
  %cmp25 = icmp slt i32 %call21, %15
  br i1 %cmp25, label %if.then31, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %lor.lhs.false
  %16 = load i32, i32* %filler_end, align 4, !tbaa !83
  %cmp29 = icmp sgt i32 %call21, %16
  br i1 %cmp29, label %if.then31, label %if.end32

if.then31:                                        ; preds = %lor.lhs.false27, %lor.lhs.false, %for.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.166, i64 0, i64 0), i64 100, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.168, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3.169, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.167, i64 0, i64 0)) #34
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %lor.lhs.false27
  store double %silprob, double* %prob, align 8, !tbaa !96
  %call33 = tail call i32 @logs3(double %silprob) #34
  %conv34 = sitofp i32 %call33 to double
  %call35 = tail call i32 @logs3(double %wip) #34
  %conv36 = sitofp i32 %call35 to double
  %17 = tail call double @llvm.fmuladd.f64(double %conv34, double %lw, double %conv36)
  %conv37 = fptosi double %17 to i32
  %18 = load i32*, i32** %.pre-phi, align 8, !tbaa !246
  %19 = load i32, i32* %filler_start, align 8, !tbaa !82
  %sub40 = sub nsw i32 %call21, %19
  %idxprom41 = sext i32 %sub40 to i64
  %arrayidx42 = getelementptr inbounds i32, i32* %18, i64 %idxprom41
  store i32 %conv37, i32* %arrayidx42, align 4, !tbaa !37
  %tobool.not = icmp eq i8* %file, null
  br i1 %tobool.not, label %cleanup, label %if.end44

if.end44:                                         ; preds = %if.end32
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.166, i64 0, i64 0), i64 111, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.170, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.171, i64 0, i64 0), i8* nonnull %file) #34
  %call45 = tail call %struct._IO_FILE* @fopen(i8* nonnull %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.172, i64 0, i64 0)) #36
  %cmp46 = icmp eq %struct._IO_FILE* %call45, null
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.end44
  tail call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.166, i64 0, i64 0), i64 113, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.168, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.173, i64 0, i64 0), i8* nonnull %file) #34
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %if.end44
  %call50194 = call i8* @fgets(i8* nonnull %1, i32 1024, %struct._IO_FILE* %call45) #36
  %cmp51.not195 = icmp eq i8* %call50194, null
  br i1 %cmp51.not195, label %while.end, label %while.body

while.body:                                       ; preds = %if.end49, %while.cond.backedge
  %20 = load i8, i8* %1, align 16, !tbaa !63
  %cmp55 = icmp eq i8 %20, 35
  br i1 %cmp55, label %while.cond.backedge, label %if.end58

if.end58:                                         ; preds = %while.body
  %call61 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.174, i64 0, i64 0), i8* nonnull %2, double* nonnull %prob) #34
  %21 = and i32 %call61, -3
  %.not = icmp eq i32 %21, 0
  br i1 %.not, label %if.end68, label %if.then66

if.then66:                                        ; preds = %if.end58
  call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.166, i64 0, i64 0), i64 120, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.168, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.175, i64 0, i64 0), i8* nonnull %1) #34
  br label %if.end68

if.end68:                                         ; preds = %if.then66, %if.end58
  %call70 = call i32 @dict_wordid(%struct.dict_t* %dict, i8* nonnull %2) #34
  %cmp71 = icmp slt i32 %call70, 0
  br i1 %cmp71, label %if.then81, label %lor.lhs.false73

lor.lhs.false73:                                  ; preds = %if.end68
  %22 = load i32, i32* %filler_start, align 8, !tbaa !82
  %cmp75 = icmp slt i32 %call70, %22
  br i1 %cmp75, label %if.then81, label %lor.lhs.false77

lor.lhs.false77:                                  ; preds = %lor.lhs.false73
  %23 = load i32, i32* %filler_end, align 4, !tbaa !83
  %cmp79 = icmp sgt i32 %call70, %23
  br i1 %cmp79, label %if.then81, label %if.end82

if.then81:                                        ; preds = %lor.lhs.false77, %lor.lhs.false73, %if.end68
  call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.166, i64 0, i64 0), i64 123, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.168, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3.169, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.167, i64 0, i64 0)) #34
  br label %if.end82

if.end82:                                         ; preds = %if.then81, %lor.lhs.false77
  %24 = load double, double* %prob, align 8, !tbaa !96
  %call83 = call i32 @logs3(double %24) #34
  %conv84 = sitofp i32 %call83 to double
  %call85 = call i32 @logs3(double %wip) #34
  %conv86 = sitofp i32 %call85 to double
  %25 = call double @llvm.fmuladd.f64(double %conv84, double %lw, double %conv86)
  %conv87 = fptosi double %25 to i32
  %26 = load i32*, i32** %.pre-phi, align 8, !tbaa !246
  %27 = load i32, i32* %filler_start, align 8, !tbaa !82
  %sub90 = sub nsw i32 %call70, %27
  %idxprom91 = sext i32 %sub90 to i64
  %arrayidx92 = getelementptr inbounds i32, i32* %26, i64 %idxprom91
  store i32 %conv87, i32* %arrayidx92, align 4, !tbaa !37
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end82, %while.body
  %call50 = call i8* @fgets(i8* nonnull %1, i32 1024, %struct._IO_FILE* %call45) #36
  %cmp51.not = icmp eq i8* %call50, null
  br i1 %cmp51.not, label %while.end, label %while.body, !llvm.loop !248

while.end:                                        ; preds = %while.cond.backedge, %if.end49
  %call93 = call i32 @fclose(%struct._IO_FILE* %call45) #36
  %28 = load i32, i32* %filler_start, align 8, !tbaa !82
  %29 = load i32, i32* %filler_end, align 4, !tbaa !83
  %cmp97.not191 = icmp sgt i32 %28, %29
  br i1 %cmp97.not191, label %cleanup, label %for.body99.lr.ph

for.body99.lr.ph:                                 ; preds = %while.end
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %dict, i64 0, i32 4
  %30 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %31 = sext i32 %28 to i64
  br label %for.body99

for.body99:                                       ; preds = %for.body99.lr.ph, %for.inc116
  %32 = phi i32 [ %29, %for.body99.lr.ph ], [ %40, %for.inc116 ]
  %indvars.iv = phi i64 [ %31, %for.body99.lr.ph ], [ %indvars.iv.next, %for.inc116 ]
  %basewid = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %30, i64 %indvars.iv, i32 4
  %33 = load i32, i32* %basewid, align 8, !tbaa !249
  %34 = trunc i64 %indvars.iv to i32
  %cmp102.not = icmp eq i32 %33, %34
  br i1 %cmp102.not, label %for.inc116, label %if.then104

if.then104:                                       ; preds = %for.body99
  %35 = load i32*, i32** %.pre-phi, align 8, !tbaa !246
  %36 = load i32, i32* %filler_start, align 8, !tbaa !82
  %sub107 = sub nsw i32 %33, %36
  %idxprom108 = sext i32 %sub107 to i64
  %arrayidx109 = getelementptr inbounds i32, i32* %35, i64 %idxprom108
  %37 = load i32, i32* %arrayidx109, align 4, !tbaa !37
  %38 = sext i32 %36 to i64
  %39 = sub nsw i64 %indvars.iv, %38
  %arrayidx114 = getelementptr inbounds i32, i32* %35, i64 %39
  store i32 %37, i32* %arrayidx114, align 4, !tbaa !37
  %.pre200 = load i32, i32* %filler_end, align 4, !tbaa !83
  br label %for.inc116

for.inc116:                                       ; preds = %for.body99, %if.then104
  %40 = phi i32 [ %32, %for.body99 ], [ %.pre200, %if.then104 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %41 = sext i32 %40 to i64
  %cmp97.not.not = icmp slt i64 %indvars.iv, %41
  br i1 %cmp97.not.not, label %for.body99, label %cleanup, !llvm.loop !250

cleanup:                                          ; preds = %for.inc116, %while.end, %if.end32
  %42 = bitcast i8* %call to %struct.fillpen_t*
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %2) #38
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #38
  ret %struct.fillpen_t* %42
}

; Function Attrs: nofree nounwind optsize
declare noundef i8* @fgets(i8* noundef, i32 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind optsize
declare noundef i32 @__isoc99_sscanf(i8* nocapture noundef readonly, i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define i32 @fillpen(%struct.fillpen_t* nocapture readonly %f, i32 %w) local_unnamed_addr #21 {
entry:
  %prob = getelementptr inbounds %struct.fillpen_t, %struct.fillpen_t* %f, i64 0, i32 1
  %0 = load i32*, i32** %prob, align 8, !tbaa !246
  %dict = getelementptr inbounds %struct.fillpen_t, %struct.fillpen_t* %f, i64 0, i32 0
  %1 = load %struct.dict_t*, %struct.dict_t** %dict, align 8, !tbaa !242
  %filler_start = getelementptr inbounds %struct.dict_t, %struct.dict_t* %1, i64 0, i32 8
  %2 = load i32, i32* %filler_start, align 8, !tbaa !82
  %sub = sub nsw i32 %w, %2
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4, !tbaa !37
  ret i32 %3
}

; Function Attrs: noinline nounwind optsize uwtable
define void @fillpen_free(%struct.fillpen_t* %f) local_unnamed_addr #0 {
entry:
  %tobool.not = icmp eq %struct.fillpen_t* %f, null
  br i1 %tobool.not, label %if.end4, label %if.then

if.then:                                          ; preds = %entry
  %prob = getelementptr inbounds %struct.fillpen_t, %struct.fillpen_t* %f, i64 0, i32 1
  %0 = load i32*, i32** %prob, align 8, !tbaa !246
  %tobool1.not = icmp eq i32* %0, null
  br i1 %tobool1.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %1 = bitcast i32* %0 to i8*
  tail call void @ckd_free(i8* nonnull %1) #34
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %2 = bitcast %struct.fillpen_t* %f to i8*
  tail call void @ckd_free(i8* nonnull %2) #34
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.subvq_t* @subvq_init(i8* %file, double %varfloor, i32 %max_sv, %struct.mgau_model_t* readonly %g) local_unnamed_addr #0 {
entry:
  %line = alloca [16384 x i8], align 16
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %n = alloca i32, align 4
  %0 = getelementptr inbounds [16384 x i8], [16384 x i8]* %line, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %0) #38
  %1 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #38
  %2 = bitcast i32* %l to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #38
  %3 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #38
  %call = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.178, i64 0, i64 0)) #34
  %4 = bitcast i8* %call to i32*
  %5 = load i32, i32* %4, align 4, !tbaa !37
  store i32 %5, i32* @VQ_EVAL, align 4, !tbaa !37
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 199, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.180, i64 0, i64 0)) #34
  %6 = load i32, i32* @VQ_EVAL, align 4, !tbaa !37
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.181, i64 0, i64 0), i8* %file, i32 %6) #34
  %call1 = tail call i8* @__ckd_calloc__(i64 1, i64 72, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i32 201) #34
  %call2 = tail call %struct._IO_FILE* @_myfopen(i8* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.182, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i32 203) #34
  %c7 = getelementptr inbounds i8, i8* %call1, i64 4
  %n_sv8 = getelementptr inbounds i8, i8* %call1, i64 8
  %vqsize = getelementptr inbounds i8, i8* %call1, i64 12
  br label %for.cond

for.cond:                                         ; preds = %if.end, %entry
  %call3 = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %call2) #36
  %cmp = icmp eq i8* %call3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.cond
  call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 208, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.183, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6.184, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %for.cond
  %call9 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.185, i64 0, i64 0), i8* %call1, i8* nonnull %c7, i8* nonnull %n_sv8, i8* nonnull %vqsize) #34
  %cmp10 = icmp eq i32 %call9, 4
  br i1 %cmp10, label %for.end, label %for.cond, !llvm.loop !251

for.end:                                          ; preds = %if.end
  %7 = bitcast i8* %call1 to %struct.subvq_t*
  %r5.le = bitcast i8* %call1 to i32*
  %8 = bitcast i8* %c7 to i32*
  %9 = bitcast i8* %n_sv8 to i32*
  %10 = bitcast i8* %vqsize to i32*
  %tobool.not = icmp eq %struct.mgau_model_t* %g, null
  br i1 %tobool.not, label %if.end28, label %if.then13

if.then13:                                        ; preds = %for.end
  %n_mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 0
  %11 = load i32, i32* %n_mgau, align 8, !tbaa !92
  %12 = load i32, i32* %r5.le, align 8, !tbaa !252
  %cmp16.not = icmp eq i32 %11, %12
  br i1 %cmp16.not, label %lor.lhs.false, label %if.then20

lor.lhs.false:                                    ; preds = %if.then13
  %max_comp = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 1
  %13 = load i32, i32* %max_comp, align 4, !tbaa !254
  %14 = load i32, i32* %8, align 4, !tbaa !255
  %cmp19.not = icmp eq i32 %13, %14
  br i1 %cmp19.not, label %if.end28, label %if.then20

if.then20:                                        ; preds = %lor.lhs.false, %if.then13
  call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 216, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.183, i64 0, i64 0)) #34
  %15 = load i32, i32* %r5.le, align 8, !tbaa !252
  %16 = load i32, i32* %8, align 4, !tbaa !255
  %17 = load i32, i32* %n_mgau, align 8, !tbaa !92
  %max_comp26 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 1
  %18 = load i32, i32* %max_comp26, align 4, !tbaa !254
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.186, i64 0, i64 0), i32 %15, i32 %16, i32 %17, i32 %18) #34
  br label %if.end28

if.end28:                                         ; preds = %lor.lhs.false, %if.then20, %for.end
  %cmp29 = icmp slt i32 %max_sv, 0
  %19 = load i32, i32* %9, align 8, !tbaa !256
  br i1 %cmp29, label %if.end43, label %if.end32

if.end32:                                         ; preds = %if.end28
  %cmp34 = icmp sgt i32 %19, %max_sv
  br i1 %cmp34, label %if.then35, label %if.else

if.then35:                                        ; preds = %if.end32
  call void @_E__pr_info_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 223, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.180, i64 0, i64 0)) #34
  %20 = load i32, i32* %9, align 8, !tbaa !256
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9.187, i64 0, i64 0), i32 %max_sv, i32 %20) #34
  %.pre574 = load i32, i32* %9, align 8, !tbaa !256
  br label %if.end43

if.else:                                          ; preds = %if.end32
  %cmp38 = icmp slt i32 %19, %max_sv
  br i1 %cmp38, label %if.then39, label %if.end43

if.then39:                                        ; preds = %if.else
  call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 225, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.188, i64 0, i64 0)) #34
  %21 = load i32, i32* %9, align 8, !tbaa !256
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.11.189, i64 0, i64 0), i32 %max_sv, i32 %21) #34
  %22 = load i32, i32* %9, align 8, !tbaa !256
  br label %if.end43

if.end43:                                         ; preds = %if.end28, %if.else, %if.then39, %if.then35
  %23 = phi i32 [ %.pre574, %if.then35 ], [ %22, %if.then39 ], [ %19, %if.else ], [ %19, %if.end28 ]
  %max_sv.addr.1 = phi i32 [ %max_sv, %if.then35 ], [ %22, %if.then39 ], [ %max_sv, %if.else ], [ %19, %if.end28 ]
  store i32 %max_sv.addr.1, i32* %9, align 8, !tbaa !256
  %24 = load i32, i32* @VQ_EVAL, align 4, !tbaa !37
  %cmp47 = icmp slt i32 %max_sv.addr.1, %24
  br i1 %cmp47, label %if.then48, label %if.end50

if.then48:                                        ; preds = %if.end43
  store i32 %max_sv.addr.1, i32* @VQ_EVAL, align 4, !tbaa !37
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %if.end43
  %conv = sext i32 %max_sv.addr.1 to i64
  %call52 = call i8* @__ckd_calloc__(i64 %conv, i64 8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i32 233) #34
  %featdim = getelementptr inbounds i8, i8* %call1, i64 16
  %25 = bitcast i8* %featdim to i32***
  %26 = bitcast i8* %featdim to i8**
  store i8* %call52, i8** %26, align 8, !tbaa !257
  %27 = load i32, i32* %9, align 8, !tbaa !256
  %conv54 = sext i32 %27 to i64
  %call55 = call i8* @__ckd_calloc__(i64 %conv54, i64 40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i32 234) #34
  %gautbl = getelementptr inbounds i8, i8* %call1, i64 24
  %28 = bitcast i8* %gautbl to %struct.vector_gautbl_t**
  %29 = bitcast i8* %gautbl to i8**
  store i8* %call55, i8** %29, align 8, !tbaa !258
  %30 = load i32, i32* %r5.le, align 8, !tbaa !252
  %31 = load i32, i32* %8, align 4, !tbaa !255
  %32 = load i32, i32* %9, align 8, !tbaa !256
  %call61 = call i8*** @__ckd_calloc_3d__(i32 %30, i32 %31, i32 %32, i32 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i32 236) #34
  %map = getelementptr inbounds i8, i8* %call1, i64 32
  %33 = bitcast i8* %map to i32****
  %34 = bitcast i8* %map to i8****
  store i8*** %call61, i8**** %34, align 8, !tbaa !259
  %cmp63544 = icmp sgt i32 %23, 0
  br i1 %cmp63544, label %for.body.preheader, label %for.end126

for.body.preheader:                               ; preds = %if.end50
  %wide.trip.count572 = zext i32 %23 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc124
  %indvars.iv570 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next571, %for.inc124 ]
  %call66 = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %call2) #36
  %cmp67 = icmp eq i8* %call66, null
  br i1 %cmp67, label %if.then77, label %lor.lhs.false69

lor.lhs.false69:                                  ; preds = %for.body
  %call71 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12.190, i64 0, i64 0), i32* nonnull %k, i32* nonnull %l, i32* nonnull %n) #34
  %cmp72.not = icmp eq i32 %call71, 2
  %35 = load i32, i32* %k, align 4
  %36 = zext i32 %35 to i64
  %cmp75.not = icmp eq i64 %indvars.iv570, %36
  %or.cond = select i1 %cmp72.not, i1 %cmp75.not, i1 false
  br i1 %or.cond, label %if.end78, label %if.then77

if.then77:                                        ; preds = %lor.lhs.false69, %for.body
  call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 242, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.183, i64 0, i64 0)) #34
  %37 = trunc i64 %indvars.iv570 to i32
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13.191, i64 0, i64 0), i32 %37) #34
  br label %if.end78

if.end78:                                         ; preds = %lor.lhs.false69, %if.then77
  %38 = load i32, i32* %9, align 8, !tbaa !256
  %39 = sext i32 %38 to i64
  %cmp80 = icmp slt i64 %indvars.iv570, %39
  br i1 %cmp80, label %if.then82, label %for.inc124

if.then82:                                        ; preds = %if.end78
  %40 = load i32, i32* %l, align 4, !tbaa !37
  %41 = load %struct.vector_gautbl_t*, %struct.vector_gautbl_t** %28, align 8, !tbaa !258
  %veclen = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %41, i64 %indvars.iv570, i32 1
  store i32 %40, i32* %veclen, align 4, !tbaa !260
  %conv88 = sext i32 %40 to i64
  %call89 = call i8* @__ckd_calloc__(i64 %conv88, i64 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i32 246) #34
  %42 = load i32**, i32*** %25, align 8, !tbaa !257
  %arrayidx92 = getelementptr inbounds i32*, i32** %42, i64 %indvars.iv570
  %43 = bitcast i32** %arrayidx92 to i8**
  store i8* %call89, i8** %43, align 8, !tbaa !74
  %44 = load %struct.vector_gautbl_t*, %struct.vector_gautbl_t** %28, align 8, !tbaa !258
  %veclen98538 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %44, i64 %indvars.iv570, i32 1
  %45 = load i32, i32* %veclen98538, align 4, !tbaa !260
  %cmp99539 = icmp sgt i32 %45, 0
  br i1 %cmp99539, label %for.body101.preheader, label %for.end114

for.body101.preheader:                            ; preds = %if.then82
  %46 = load i32, i32* %n, align 4, !tbaa !37
  %idx.ext = sext i32 %46 to i64
  %add.ptr = getelementptr inbounds [16384 x i8], [16384 x i8]* %line, i64 0, i64 %idx.ext
  %47 = trunc i64 %indvars.iv570 to i32
  br label %for.body101

for.body101:                                      ; preds = %for.body101.preheader, %if.end111
  %indvars.iv568 = phi i64 [ 0, %for.body101.preheader ], [ %indvars.iv.next569, %if.end111 ]
  %strp.0542 = phi i8* [ %add.ptr, %for.body101.preheader ], [ %add.ptr113, %if.end111 ]
  %48 = load i32**, i32*** %25, align 8, !tbaa !257
  %arrayidx104 = getelementptr inbounds i32*, i32** %48, i64 %indvars.iv570
  %49 = load i32*, i32** %arrayidx104, align 8, !tbaa !74
  %arrayidx106 = getelementptr inbounds i32, i32* %49, i64 %indvars.iv568
  %call107 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %strp.0542, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14.192, i64 0, i64 0), i32* %arrayidx106, i32* nonnull %n) #34
  %cmp108.not = icmp eq i32 %call107, 1
  br i1 %cmp108.not, label %if.end111, label %if.then110

if.then110:                                       ; preds = %for.body101
  call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 250, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.183, i64 0, i64 0)) #34
  %50 = trunc i64 %indvars.iv568 to i32
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15.193, i64 0, i64 0), i32 %47, i32 %50) #34
  br label %if.end111

if.end111:                                        ; preds = %if.then110, %for.body101
  %51 = load i32, i32* %n, align 4, !tbaa !37
  %idx.ext112 = sext i32 %51 to i64
  %add.ptr113 = getelementptr inbounds i8, i8* %strp.0542, i64 %idx.ext112
  %indvars.iv.next569 = add nuw nsw i64 %indvars.iv568, 1
  %52 = load %struct.vector_gautbl_t*, %struct.vector_gautbl_t** %28, align 8, !tbaa !258
  %veclen98 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %52, i64 %indvars.iv570, i32 1
  %53 = load i32, i32* %veclen98, align 4, !tbaa !260
  %54 = sext i32 %53 to i64
  %cmp99 = icmp slt i64 %indvars.iv.next569, %54
  br i1 %cmp99, label %for.body101, label %for.end114, !llvm.loop !262

for.end114:                                       ; preds = %if.end111, %if.then82
  %.lcssa507 = phi %struct.vector_gautbl_t* [ %44, %if.then82 ], [ %52, %if.end111 ]
  %.lcssa = phi i32 [ %45, %if.then82 ], [ %53, %if.end111 ]
  %arrayidx97 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %.lcssa507, i64 %indvars.iv570
  %55 = load i32, i32* %10, align 4, !tbaa !263
  call void @vector_gautbl_alloc(%struct.vector_gautbl_t* %arrayidx97, i32 %55, i32 %.lcssa) #34
  br label %for.inc124

for.inc124:                                       ; preds = %if.end78, %for.end114
  %indvars.iv.next571 = add nuw nsw i64 %indvars.iv570, 1
  %exitcond573.not = icmp eq i64 %indvars.iv.next571, %wide.trip.count572
  br i1 %exitcond573.not, label %for.end126, label %for.body, !llvm.loop !264

for.end126:                                       ; preds = %for.inc124, %if.end50
  call void @_E__pr_info_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 259, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.180, i64 0, i64 0)) #34
  %56 = load i32, i32* %r5.le, align 8, !tbaa !252
  %57 = load i32, i32* %8, align 4, !tbaa !255
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.16.194, i64 0, i64 0), i32 %56, i32 %57) #34
  call void @_E__pr_info_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 260, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.180, i64 0, i64 0)) #34
  %58 = load i32, i32* %9, align 8, !tbaa !256
  %59 = load i32, i32* %10, align 4, !tbaa !263
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17.195, i64 0, i64 0), i32 %58, i32 %59) #34
  %60 = load i32, i32* %9, align 8, !tbaa !256
  %cmp135536 = icmp sgt i32 %60, 0
  br i1 %cmp135536, label %for.body137, label %for.cond163.preheader

for.cond163.preheader:                            ; preds = %for.end158, %for.end126
  br i1 %cmp63544, label %for.body166.preheader, label %for.end297

for.body166.preheader:                            ; preds = %for.cond163.preheader
  %wide.trip.count562 = zext i32 %23 to i64
  br label %for.body166

for.body137:                                      ; preds = %for.end126, %for.end158
  %indvars.iv566 = phi i64 [ %indvars.iv.next567, %for.end158 ], [ 0, %for.end126 ]
  call void @_E__pr_info_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 262, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.180, i64 0, i64 0)) #34
  %61 = load %struct.vector_gautbl_t*, %struct.vector_gautbl_t** %28, align 8, !tbaa !258
  %veclen141 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %61, i64 %indvars.iv566, i32 1
  %62 = load i32, i32* %veclen141, align 4, !tbaa !260
  %63 = trunc i64 %indvars.iv566 to i32
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18.196, i64 0, i64 0), i32 %63, i32 %62) #34
  %64 = load %struct.vector_gautbl_t*, %struct.vector_gautbl_t** %28, align 8, !tbaa !258
  %veclen146533 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %64, i64 %indvars.iv566, i32 1
  %65 = load i32, i32* %veclen146533, align 4, !tbaa !260
  %cmp147534 = icmp sgt i32 %65, 0
  br i1 %cmp147534, label %for.body149, label %for.end158

for.body149:                                      ; preds = %for.body137, %for.body149
  %indvars.iv564 = phi i64 [ %indvars.iv.next565, %for.body149 ], [ 0, %for.body137 ]
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !74
  %67 = load i32**, i32*** %25, align 8, !tbaa !257
  %arrayidx152 = getelementptr inbounds i32*, i32** %67, i64 %indvars.iv566
  %68 = load i32*, i32** %arrayidx152, align 8, !tbaa !74
  %arrayidx154 = getelementptr inbounds i32, i32* %68, i64 %indvars.iv564
  %69 = load i32, i32* %arrayidx154, align 4, !tbaa !37
  %call155 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.197, i64 0, i64 0), i32 %69) #36
  %indvars.iv.next565 = add nuw nsw i64 %indvars.iv564, 1
  %70 = load %struct.vector_gautbl_t*, %struct.vector_gautbl_t** %28, align 8, !tbaa !258
  %veclen146 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %70, i64 %indvars.iv566, i32 1
  %71 = load i32, i32* %veclen146, align 4, !tbaa !260
  %72 = sext i32 %71 to i64
  %cmp147 = icmp slt i64 %indvars.iv.next565, %72
  br i1 %cmp147, label %for.body149, label %for.end158, !llvm.loop !265

for.end158:                                       ; preds = %for.body149, %for.body137
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !74
  %fputc = call i32 @fputc(i32 10, %struct._IO_FILE* %73)
  %indvars.iv.next567 = add nuw nsw i64 %indvars.iv566, 1
  %74 = load i32, i32* %9, align 8, !tbaa !256
  %75 = sext i32 %74 to i64
  %cmp135 = icmp slt i64 %indvars.iv.next567, %75
  br i1 %cmp135, label %for.body137, label %for.cond163.preheader, !llvm.loop !266

for.body166:                                      ; preds = %for.body166.preheader, %for.end293
  %indvars.iv560 = phi i64 [ 0, %for.body166.preheader ], [ %indvars.iv.next561, %for.end293 ]
  call void @_E__pr_info_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 271, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.180, i64 0, i64 0)) #34
  %76 = load i32, i32* %9, align 8, !tbaa !256
  %77 = sext i32 %76 to i64
  %cmp168 = icmp slt i64 %indvars.iv560, %77
  %cond = select i1 %cmp168, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.22.198, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23.199, i64 0, i64 0)
  %78 = trunc i64 %indvars.iv560 to i32
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21.200, i64 0, i64 0), i32 %78, i8* %cond) #34
  call void @_E__pr_info_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 273, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.180, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24.201, i64 0, i64 0)) #34
  %call171 = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %call2) #36
  %cmp172 = icmp eq i8* %call171, null
  br i1 %cmp172, label %if.then182, label %lor.lhs.false174

lor.lhs.false174:                                 ; preds = %for.body166
  %call176 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.202, i64 0, i64 0), i32* nonnull %k) #34
  %cmp177.not = icmp eq i32 %call176, 1
  %79 = load i32, i32* %k, align 4
  %80 = zext i32 %79 to i64
  %cmp180.not = icmp eq i64 %indvars.iv560, %80
  %or.cond505 = select i1 %cmp177.not, i1 %cmp180.not, i1 false
  br i1 %or.cond505, label %if.end183, label %if.then182

if.then182:                                       ; preds = %lor.lhs.false174, %for.body166
  call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 276, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.183, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26.203, i64 0, i64 0), i32 %78) #34
  br label %if.end183

if.end183:                                        ; preds = %lor.lhs.false174, %if.then182
  %81 = load i32, i32* %10, align 4, !tbaa !263
  %cmp186518 = icmp sgt i32 %81, 0
  br i1 %cmp186518, label %for.body188, label %for.end235

for.body188:                                      ; preds = %if.end183, %for.inc233
  %indvars.iv554 = phi i64 [ %indvars.iv.next555, %for.inc233 ], [ 0, %if.end183 ]
  %call190 = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %call2) #36
  %cmp191 = icmp eq i8* %call190, null
  br i1 %cmp191, label %if.then193, label %if.end194

if.then193:                                       ; preds = %for.body188
  call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 280, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.183, i64 0, i64 0)) #34
  %82 = trunc i64 %indvars.iv554 to i32
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27.204, i64 0, i64 0), i32 %82) #34
  br label %if.end194

if.end194:                                        ; preds = %if.then193, %for.body188
  %83 = load i32, i32* %9, align 8, !tbaa !256
  %84 = sext i32 %83 to i64
  %cmp196.not = icmp slt i64 %indvars.iv560, %84
  br i1 %cmp196.not, label %for.cond201.preheader, label %for.inc233

for.cond201.preheader:                            ; preds = %if.end194
  %85 = load %struct.vector_gautbl_t*, %struct.vector_gautbl_t** %28, align 8, !tbaa !258
  %veclen205513 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %85, i64 %indvars.iv560, i32 1
  %86 = load i32, i32* %veclen205513, align 4, !tbaa !260
  %cmp206514 = icmp sgt i32 %86, 0
  br i1 %cmp206514, label %for.body208.preheader, label %for.inc233

for.body208.preheader:                            ; preds = %for.cond201.preheader
  %87 = trunc i64 %indvars.iv554 to i32
  br label %for.body208

for.body208:                                      ; preds = %for.body208.preheader, %if.end227
  %indvars.iv552 = phi i64 [ 0, %for.body208.preheader ], [ %indvars.iv.next553, %if.end227 ]
  %88 = phi %struct.vector_gautbl_t* [ %85, %for.body208.preheader ], [ %95, %if.end227 ]
  %strp.1517 = phi i8* [ %0, %for.body208.preheader ], [ %add.ptr229, %if.end227 ]
  %mean = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %88, i64 %indvars.iv560, i32 2
  %89 = load float**, float*** %mean, align 8, !tbaa !267
  %arrayidx213 = getelementptr inbounds float*, float** %89, i64 %indvars.iv554
  %90 = load float*, float** %arrayidx213, align 8, !tbaa !74
  %arrayidx215 = getelementptr inbounds float, float* %90, i64 %indvars.iv552
  %var = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %88, i64 %indvars.iv560, i32 3
  %91 = load float**, float*** %var, align 8, !tbaa !268
  %arrayidx220 = getelementptr inbounds float*, float** %91, i64 %indvars.iv554
  %92 = load float*, float** %arrayidx220, align 8, !tbaa !74
  %arrayidx222 = getelementptr inbounds float, float* %92, i64 %indvars.iv552
  %call223 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %strp.1517, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28.205, i64 0, i64 0), float* %arrayidx215, float* %arrayidx222, i32* nonnull %k) #34
  %cmp224.not = icmp eq i32 %call223, 2
  br i1 %cmp224.not, label %if.end227, label %if.then226

if.then226:                                       ; preds = %for.body208
  call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 288, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.183, i64 0, i64 0)) #34
  %93 = trunc i64 %indvars.iv552 to i32
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29.206, i64 0, i64 0), i32 %87, i32 %93) #34
  br label %if.end227

if.end227:                                        ; preds = %if.then226, %for.body208
  %94 = load i32, i32* %k, align 4, !tbaa !37
  %idx.ext228 = sext i32 %94 to i64
  %add.ptr229 = getelementptr inbounds i8, i8* %strp.1517, i64 %idx.ext228
  %indvars.iv.next553 = add nuw nsw i64 %indvars.iv552, 1
  %95 = load %struct.vector_gautbl_t*, %struct.vector_gautbl_t** %28, align 8, !tbaa !258
  %veclen205 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %95, i64 %indvars.iv560, i32 1
  %96 = load i32, i32* %veclen205, align 4, !tbaa !260
  %97 = sext i32 %96 to i64
  %cmp206 = icmp slt i64 %indvars.iv.next553, %97
  br i1 %cmp206, label %for.body208, label %for.inc233, !llvm.loop !269

for.inc233:                                       ; preds = %if.end227, %for.cond201.preheader, %if.end194
  %indvars.iv.next555 = add nuw nsw i64 %indvars.iv554, 1
  %98 = load i32, i32* %10, align 4, !tbaa !263
  %99 = sext i32 %98 to i64
  %cmp186 = icmp slt i64 %indvars.iv.next555, %99
  br i1 %cmp186, label %for.body188, label %for.end235, !llvm.loop !270

for.end235:                                       ; preds = %for.inc233, %if.end183
  call void @_E__pr_info_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 293, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.180, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30.207, i64 0, i64 0)) #34
  %call237 = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %call2) #36
  %cmp238 = icmp eq i8* %call237, null
  br i1 %cmp238, label %if.then248, label %lor.lhs.false240

lor.lhs.false240:                                 ; preds = %for.end235
  %call242 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31.208, i64 0, i64 0), i32* nonnull %k) #34
  %cmp243.not = icmp eq i32 %call242, 1
  %100 = load i32, i32* %k, align 4
  %101 = zext i32 %100 to i64
  %cmp246.not = icmp eq i64 %indvars.iv560, %101
  %or.cond506 = select i1 %cmp243.not, i1 %cmp246.not, i1 false
  br i1 %or.cond506, label %if.end249, label %if.then248

if.then248:                                       ; preds = %lor.lhs.false240, %for.end235
  call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 296, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.183, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.32.209, i64 0, i64 0), i32 %78) #34
  br label %if.end249

if.end249:                                        ; preds = %lor.lhs.false240, %if.then248
  %102 = load i32, i32* %r5.le, align 8, !tbaa !252
  %cmp253525 = icmp sgt i32 %102, 0
  br i1 %cmp253525, label %for.body255, label %for.end293

for.body255:                                      ; preds = %if.end249, %for.inc291
  %indvars.iv558 = phi i64 [ %indvars.iv.next559, %for.inc291 ], [ 0, %if.end249 ]
  %call257 = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %call2) #36
  %cmp258 = icmp eq i8* %call257, null
  br i1 %cmp258, label %if.then260, label %if.end261

if.then260:                                       ; preds = %for.body255
  call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.183, i64 0, i64 0)) #34
  %103 = trunc i64 %indvars.iv558 to i32
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27.204, i64 0, i64 0), i32 %103) #34
  br label %if.end261

if.end261:                                        ; preds = %if.then260, %for.body255
  %104 = load i32, i32* %9, align 8, !tbaa !256
  %105 = sext i32 %104 to i64
  %cmp263.not = icmp slt i64 %indvars.iv560, %105
  br i1 %cmp263.not, label %for.cond268.preheader, label %for.inc291

for.cond268.preheader:                            ; preds = %if.end261
  %106 = load i32, i32* %8, align 4, !tbaa !255
  %cmp271521 = icmp sgt i32 %106, 0
  br i1 %cmp271521, label %for.body273.preheader, label %for.inc291

for.body273.preheader:                            ; preds = %for.cond268.preheader
  %107 = trunc i64 %indvars.iv558 to i32
  br label %for.body273

for.body273:                                      ; preds = %for.body273.preheader, %if.end285
  %indvars.iv556 = phi i64 [ 0, %for.body273.preheader ], [ %indvars.iv.next557, %if.end285 ]
  %strp.2524 = phi i8* [ %0, %for.body273.preheader ], [ %add.ptr287, %if.end285 ]
  %108 = load i32***, i32**** %33, align 8, !tbaa !259
  %arrayidx276 = getelementptr inbounds i32**, i32*** %108, i64 %indvars.iv558
  %109 = load i32**, i32*** %arrayidx276, align 8, !tbaa !74
  %arrayidx278 = getelementptr inbounds i32*, i32** %109, i64 %indvars.iv556
  %110 = load i32*, i32** %arrayidx278, align 8, !tbaa !74
  %arrayidx280 = getelementptr inbounds i32, i32* %110, i64 %indvars.iv560
  %call281 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %strp.2524, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14.192, i64 0, i64 0), i32* %arrayidx280, i32* nonnull %k) #34
  %cmp282.not = icmp eq i32 %call281, 1
  br i1 %cmp282.not, label %if.end285, label %if.then284

if.then284:                                       ; preds = %for.body273
  call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 307, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.183, i64 0, i64 0)) #34
  %111 = trunc i64 %indvars.iv556 to i32
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29.206, i64 0, i64 0), i32 %107, i32 %111) #34
  br label %if.end285

if.end285:                                        ; preds = %if.then284, %for.body273
  %112 = load i32, i32* %k, align 4, !tbaa !37
  %idx.ext286 = sext i32 %112 to i64
  %add.ptr287 = getelementptr inbounds i8, i8* %strp.2524, i64 %idx.ext286
  %indvars.iv.next557 = add nuw nsw i64 %indvars.iv556, 1
  %113 = load i32, i32* %8, align 4, !tbaa !255
  %114 = sext i32 %113 to i64
  %cmp271 = icmp slt i64 %indvars.iv.next557, %114
  br i1 %cmp271, label %for.body273, label %for.inc291, !llvm.loop !271

for.inc291:                                       ; preds = %if.end285, %for.cond268.preheader, %if.end261
  %indvars.iv.next559 = add nuw nsw i64 %indvars.iv558, 1
  %115 = load i32, i32* %r5.le, align 8, !tbaa !252
  %116 = sext i32 %115 to i64
  %cmp253 = icmp slt i64 %indvars.iv.next559, %116
  br i1 %cmp253, label %for.body255, label %for.end293, !llvm.loop !272

for.end293:                                       ; preds = %for.inc291, %if.end249
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !74
  %call294 = call i32 @fflush(%struct._IO_FILE* %117) #36
  %indvars.iv.next561 = add nuw nsw i64 %indvars.iv560, 1
  %exitcond563.not = icmp eq i64 %indvars.iv.next561, %wide.trip.count562
  br i1 %exitcond563.not, label %for.end297, label %for.body166, !llvm.loop !273

for.end297:                                       ; preds = %for.end293, %for.cond163.preheader
  %call299 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33.210, i64 0, i64 0), i8* nonnull %0) #34
  %cmp300.not = icmp eq i32 %call299, 1
  br i1 %cmp300.not, label %lor.lhs.false302, label %if.then307

lor.lhs.false302:                                 ; preds = %for.end297
  %118 = bitcast [16384 x i8]* %line to i32*
  %lhsv = load i32, i32* %118, align 16
  %.not = icmp eq i32 %lhsv, 6581829
  br i1 %.not, label %if.end308, label %if.then307

if.then307:                                       ; preds = %lor.lhs.false302, %for.end297
  call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 316, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.183, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35.211, i64 0, i64 0)) #34
  br label %if.end308

if.end308:                                        ; preds = %if.then307, %lor.lhs.false302
  %call309 = call i32 @fclose(%struct._IO_FILE* %call2) #36
  call fastcc void @subvq_maha_precomp(%struct.subvq_t* nonnull %7, double %varfloor) #36
  call fastcc void @subvq_map_compact(%struct.subvq_t* nonnull %7, %struct.mgau_model_t* %g) #36
  call fastcc void @subvq_map_linearize(%struct.subvq_t* nonnull %7) #36
  store i32 0, i32* %n, align 4, !tbaa !37
  br i1 %cmp63544, label %for.body313.lr.ph, label %for.end328

for.body313.lr.ph:                                ; preds = %if.end308
  %119 = load %struct.vector_gautbl_t*, %struct.vector_gautbl_t** %28, align 8, !tbaa !258
  %wide.trip.count = zext i32 %23 to i64
  br label %for.body313

for.body313:                                      ; preds = %for.body313.lr.ph, %for.inc326
  %120 = phi i32 [ 0, %for.body313.lr.ph ], [ %122, %for.inc326 ]
  %indvars.iv = phi i64 [ 0, %for.body313.lr.ph ], [ %indvars.iv.next, %for.inc326 ]
  %veclen317 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %119, i64 %indvars.iv, i32 1
  %121 = load i32, i32* %veclen317, align 4, !tbaa !260
  %cmp318 = icmp sgt i32 %121, %120
  br i1 %cmp318, label %if.then320, label %for.inc326

if.then320:                                       ; preds = %for.body313
  store i32 %121, i32* %n, align 4, !tbaa !37
  br label %for.inc326

for.inc326:                                       ; preds = %for.body313, %if.then320
  %122 = phi i32 [ %120, %for.body313 ], [ %121, %if.then320 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end328, label %for.body313, !llvm.loop !274

for.end328:                                       ; preds = %for.inc326, %if.end308
  %123 = phi i32 [ 0, %if.end308 ], [ %122, %for.inc326 ]
  %conv329 = sext i32 %123 to i64
  %call330 = call i8* @__ckd_calloc__(i64 %conv329, i64 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i32 330) #34
  %subvec = getelementptr inbounds i8, i8* %call1, i64 40
  %124 = bitcast i8* %subvec to i8**
  store i8* %call330, i8** %124, align 8, !tbaa !275
  %125 = load i32, i32* %9, align 8, !tbaa !256
  %126 = load i32, i32* %10, align 4, !tbaa !263
  %call333 = call i8** @__ckd_calloc_2d__(i32 %125, i32 %126, i32 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i32 331) #34
  %vqdist = getelementptr inbounds i8, i8* %call1, i64 48
  %127 = bitcast i8* %vqdist to i8***
  store i8** %call333, i8*** %127, align 8, !tbaa !276
  %128 = load i32, i32* %8, align 4, !tbaa !255
  %conv336 = sext i32 %128 to i64
  %call337 = call i8* @__ckd_calloc__(i64 %conv336, i64 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i32 332) #34
  %gauscore = getelementptr inbounds i8, i8* %call1, i64 56
  %129 = bitcast i8* %gauscore to i8**
  store i8* %call337, i8** %129, align 8, !tbaa !277
  %130 = load i32, i32* %8, align 4, !tbaa !255
  %add = add nsw i32 %130, 1
  %conv340 = sext i32 %add to i64
  %call341 = call i8* @__ckd_calloc__(i64 %conv340, i64 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i32 333) #34
  %mgau_sl = getelementptr inbounds i8, i8* %call1, i64 64
  %131 = bitcast i8* %mgau_sl to i8**
  store i8* %call341, i8** %131, align 8, !tbaa !278
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 16384, i8* nonnull %0) #38
  ret %struct.subvq_t* %7
}

; Function Attrs: optsize
declare i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #19

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @subvq_maha_precomp(%struct.subvq_t* nocapture readonly %svq, double %floor) unnamed_addr #0 {
entry:
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 103, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.180, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.37.214, i64 0, i64 0)) #34
  %n_sv = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %svq, i64 0, i32 1
  %0 = load i32, i32* %n_sv, align 8, !tbaa !256
  %vqsize = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %svq, i64 0, i32 2
  %1 = load i32, i32* %vqsize, align 4, !tbaa !263
  %mul = mul nsw i32 %1, %0
  %conv = sext i32 %mul to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i32 105) #34
  %gautbl3 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %svq, i64 0, i32 4
  %2 = load i32, i32* %n_sv, align 8, !tbaa !256
  %cmp18 = icmp sgt i32 %2, 0
  br i1 %cmp18, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %3 = bitcast i8* %call to float*
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %lrd.019 = phi float* [ %3, %for.body.preheader ], [ %add.ptr, %for.body ]
  %4 = load %struct.vector_gautbl_t*, %struct.vector_gautbl_t** %gautbl3, align 8, !tbaa !258
  %arrayidx = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %4, i64 %indvars.iv
  tail call void @vector_gautbl_var_floor(%struct.vector_gautbl_t* %arrayidx, double %floor) #34
  %lrd4 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %4, i64 %indvars.iv, i32 4
  store float* %lrd.019, float** %lrd4, align 8, !tbaa !279
  %5 = load i32, i32* %vqsize, align 4, !tbaa !263
  %idx.ext = sext i32 %5 to i64
  %add.ptr = getelementptr inbounds float, float* %lrd.019, i64 %idx.ext
  tail call void @vector_gautbl_maha_precomp(%struct.vector_gautbl_t* %arrayidx) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %6 = load i32, i32* %n_sv, align 8, !tbaa !256
  %7 = sext i32 %6 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %7
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !280

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @subvq_map_compact(%struct.subvq_t* nocapture readonly %vq, %struct.mgau_model_t* readonly %g) unnamed_addr #0 {
entry:
  %tobool.not = icmp eq %struct.mgau_model_t* %g, null
  br i1 %tobool.not, label %if.end12, label %if.then

if.then:                                          ; preds = %entry
  %n_mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 0
  %0 = load i32, i32* %n_mgau, align 8, !tbaa !92
  %r1 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 0, i32 0
  %1 = load i32, i32* %r1, align 8, !tbaa !252
  %cmp.not = icmp eq i32 %0, %1
  br i1 %cmp.not, label %lor.lhs.false, label %if.then5

lor.lhs.false:                                    ; preds = %if.then
  %max_comp = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 1
  %2 = load i32, i32* %max_comp, align 4, !tbaa !254
  %c3 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 0, i32 1
  %3 = load i32, i32* %c3, align 4, !tbaa !255
  %cmp4.not = icmp eq i32 %2, %3
  br i1 %cmp4.not, label %if.end12, label %if.then5

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  tail call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 125, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.183, i64 0, i64 0)) #34
  %4 = load i32, i32* %r1, align 8, !tbaa !252
  %c9 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 0, i32 1
  %5 = load i32, i32* %c9, align 4, !tbaa !255
  %6 = load i32, i32* %n_mgau, align 8, !tbaa !92
  %max_comp11 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 1
  %7 = load i32, i32* %max_comp11, align 4, !tbaa !254
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.186, i64 0, i64 0), i32 %4, i32 %5, i32 %6, i32 %7) #34
  br label %if.end12

if.end12:                                         ; preds = %lor.lhs.false, %if.then5, %entry
  %r14 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 0, i32 0
  %c18 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 0, i32 1
  %map = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 5
  %n_sv42 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 1
  %mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %8 = load i32, i32* %r14, align 8, !tbaa !252
  %cmp15192 = icmp sgt i32 %8, 0
  br i1 %cmp15192, label %for.cond16.preheader.preheader, label %for.end112

for.cond16.preheader.preheader:                   ; preds = %if.end12
  %.pre = load i32, i32* %c18, align 4, !tbaa !255
  br label %for.cond16.preheader

for.cond16.preheader:                             ; preds = %for.cond16.preheader.preheader, %for.inc110
  %9 = phi i32 [ %.pre, %for.cond16.preheader.preheader ], [ %58, %for.inc110 ]
  %10 = phi i32 [ %.pre, %for.cond16.preheader.preheader ], [ %59, %for.inc110 ]
  %indvars.iv203 = phi i64 [ 0, %for.cond16.preheader.preheader ], [ %indvars.iv.next204, %for.inc110 ]
  %cmp19180 = icmp sgt i32 %10, 0
  br i1 %cmp19180, label %for.body20.preheader, label %for.end77

for.body20.preheader:                             ; preds = %for.cond16.preheader
  %11 = trunc i64 %indvars.iv203 to i32
  %12 = trunc i64 %indvars.iv203 to i32
  br label %for.body20

for.body20:                                       ; preds = %for.body20.preheader, %for.inc75
  %indvars.iv197 = phi i64 [ 0, %for.body20.preheader ], [ %indvars.iv.next198, %for.inc75 ]
  %c2.0186 = phi i32 [ 0, %for.body20.preheader ], [ %c2.1, %for.inc75 ]
  %13 = load i32***, i32**** %map, align 8, !tbaa !259
  %arrayidx = getelementptr inbounds i32**, i32*** %13, i64 %indvars.iv203
  %14 = load i32**, i32*** %arrayidx, align 8, !tbaa !74
  %arrayidx22 = getelementptr inbounds i32*, i32** %14, i64 %indvars.iv197
  %15 = load i32*, i32** %arrayidx22, align 8, !tbaa !74
  %16 = load i32, i32* %15, align 4, !tbaa !37
  %cmp24 = icmp slt i32 %16, 0
  br i1 %cmp24, label %for.cond26.preheader, label %if.else

for.cond26.preheader:                             ; preds = %for.body20
  %17 = load i32, i32* %n_sv42, align 8, !tbaa !256
  %cmp27178 = icmp sgt i32 %17, 1
  br i1 %cmp27178, label %for.body28.preheader, label %for.inc75

for.body28.preheader:                             ; preds = %for.cond26.preheader
  %18 = trunc i64 %indvars.iv197 to i32
  br label %for.body28

for.body28:                                       ; preds = %for.inc.for.body28_crit_edge, %for.body28.preheader
  %19 = phi i32 [ %17, %for.body28.preheader ], [ %22, %for.inc.for.body28_crit_edge ]
  %20 = phi i32* [ %15, %for.body28.preheader ], [ %.pre209, %for.inc.for.body28_crit_edge ]
  %indvars.iv195 = phi i64 [ 1, %for.body28.preheader ], [ %indvars.iv.next196, %for.inc.for.body28_crit_edge ]
  %arrayidx35 = getelementptr inbounds i32, i32* %20, i64 %indvars.iv195
  %21 = load i32, i32* %arrayidx35, align 4, !tbaa !37
  %cmp36 = icmp sgt i32 %21, -1
  br i1 %cmp36, label %if.then37, label %for.inc

if.then37:                                        ; preds = %for.body28
  tail call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 141, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.183, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.38.212, i64 0, i64 0), i32 %12, i32 %18) #34
  %.pre210 = load i32, i32* %n_sv42, align 8, !tbaa !256
  br label %for.inc

for.inc:                                          ; preds = %for.body28, %if.then37
  %22 = phi i32 [ %19, %for.body28 ], [ %.pre210, %if.then37 ]
  %indvars.iv.next196 = add nuw nsw i64 %indvars.iv195, 1
  %23 = sext i32 %22 to i64
  %cmp27 = icmp slt i64 %indvars.iv.next196, %23
  br i1 %cmp27, label %for.inc.for.body28_crit_edge, label %for.inc75, !llvm.loop !281

for.inc.for.body28_crit_edge:                     ; preds = %for.inc
  %.pre207 = load i32***, i32**** %map, align 8, !tbaa !259
  %arrayidx31.phi.trans.insert = getelementptr inbounds i32**, i32*** %.pre207, i64 %indvars.iv203
  %.pre208 = load i32**, i32*** %arrayidx31.phi.trans.insert, align 8, !tbaa !74
  %arrayidx33.phi.trans.insert = getelementptr inbounds i32*, i32** %.pre208, i64 %indvars.iv197
  %.pre209 = load i32*, i32** %arrayidx33.phi.trans.insert, align 8, !tbaa !74
  br label %for.body28

if.else:                                          ; preds = %for.body20
  %24 = zext i32 %c2.0186 to i64
  %cmp39.not = icmp eq i64 %indvars.iv197, %24
  br i1 %cmp39.not, label %if.end72, label %for.cond41.preheader

for.cond41.preheader:                             ; preds = %if.else
  %idxprom65 = sext i32 %c2.0186 to i64
  %25 = load i32, i32* %n_sv42, align 8, !tbaa !256
  %cmp43176 = icmp sgt i32 %25, 0
  br i1 %cmp43176, label %for.body44.preheader, label %if.end72

for.body44.preheader:                             ; preds = %for.cond41.preheader
  %26 = trunc i64 %indvars.iv197 to i32
  br label %for.body44

for.body44:                                       ; preds = %if.end54.for.body44_crit_edge, %for.body44.preheader
  %27 = phi i32* [ %15, %for.body44.preheader ], [ %31, %if.end54.for.body44_crit_edge ]
  %28 = phi i32** [ %14, %for.body44.preheader ], [ %32, %if.end54.for.body44_crit_edge ]
  %29 = phi i32 [ %16, %for.body44.preheader ], [ %.pre205, %if.end54.for.body44_crit_edge ]
  %indvars.iv = phi i64 [ 0, %for.body44.preheader ], [ %indvars.iv.next, %if.end54.for.body44_crit_edge ]
  %cmp52 = icmp slt i32 %29, 0
  br i1 %cmp52, label %if.then53, label %if.end54

if.then53:                                        ; preds = %for.body44
  tail call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 147, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.183, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.38.212, i64 0, i64 0), i32 %11, i32 %26) #34
  %.pre206 = load i32***, i32**** %map, align 8, !tbaa !259
  %arrayidx57.phi.trans.insert = getelementptr inbounds i32**, i32*** %.pre206, i64 %indvars.iv203
  %.pre214 = load i32**, i32*** %arrayidx57.phi.trans.insert, align 8, !tbaa !74
  %arrayidx59.phi.trans.insert = getelementptr inbounds i32*, i32** %.pre214, i64 %indvars.iv197
  %.pre215 = load i32*, i32** %arrayidx59.phi.trans.insert, align 8, !tbaa !74
  %arrayidx61.phi.trans.insert = getelementptr inbounds i32, i32* %.pre215, i64 %indvars.iv
  %.pre216 = load i32, i32* %arrayidx61.phi.trans.insert, align 4, !tbaa !37
  br label %if.end54

if.end54:                                         ; preds = %if.then53, %for.body44
  %30 = phi i32 [ %.pre216, %if.then53 ], [ %29, %for.body44 ]
  %31 = phi i32* [ %.pre215, %if.then53 ], [ %27, %for.body44 ]
  %32 = phi i32** [ %.pre214, %if.then53 ], [ %28, %for.body44 ]
  %arrayidx66 = getelementptr inbounds i32*, i32** %32, i64 %idxprom65
  %33 = load i32*, i32** %arrayidx66, align 8, !tbaa !74
  %arrayidx68 = getelementptr inbounds i32, i32* %33, i64 %indvars.iv
  store i32 %30, i32* %arrayidx68, align 4, !tbaa !37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %34 = load i32, i32* %n_sv42, align 8, !tbaa !256
  %35 = sext i32 %34 to i64
  %cmp43 = icmp slt i64 %indvars.iv.next, %35
  br i1 %cmp43, label %if.end54.for.body44_crit_edge, label %if.end72, !llvm.loop !282

if.end54.for.body44_crit_edge:                    ; preds = %if.end54
  %arrayidx51.phi.trans.insert = getelementptr inbounds i32, i32* %31, i64 %indvars.iv.next
  %.pre205 = load i32, i32* %arrayidx51.phi.trans.insert, align 4, !tbaa !37
  br label %for.body44

if.end72:                                         ; preds = %if.end54, %for.cond41.preheader, %if.else
  %inc73 = add nsw i32 %c2.0186, 1
  br label %for.inc75

for.inc75:                                        ; preds = %for.inc, %for.cond26.preheader, %if.end72
  %c2.1 = phi i32 [ %inc73, %if.end72 ], [ %c2.0186, %for.cond26.preheader ], [ %c2.0186, %for.inc ]
  %indvars.iv.next198 = add nuw nsw i64 %indvars.iv197, 1
  %36 = load i32, i32* %c18, align 4, !tbaa !255
  %37 = sext i32 %36 to i64
  %cmp19 = icmp slt i64 %indvars.iv.next198, %37
  br i1 %cmp19, label %for.body20, label %for.end77, !llvm.loop !283

for.end77:                                        ; preds = %for.inc75, %for.cond16.preheader
  %38 = phi i32 [ %9, %for.cond16.preheader ], [ %36, %for.inc75 ]
  %39 = phi i32 [ %10, %for.cond16.preheader ], [ %36, %for.inc75 ]
  %c2.0.lcssa = phi i32 [ 0, %for.cond16.preheader ], [ %c2.1, %for.inc75 ]
  br i1 %tobool.not, label %if.end87, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.end77
  %40 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %n_comp = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %40, i64 %indvars.iv203, i32 0
  %41 = load i32, i32* %n_comp, align 8, !tbaa !285
  %cmp81.not = icmp eq i32 %c2.0.lcssa, %41
  br i1 %cmp81.not, label %if.end87, label %if.then82

if.then82:                                        ; preds = %land.lhs.true
  tail call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 156, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.183, i64 0, i64 0)) #34
  %42 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %n_comp86 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %42, i64 %indvars.iv203, i32 0
  %43 = load i32, i32* %n_comp86, align 8, !tbaa !285
  %44 = trunc i64 %indvars.iv203 to i32
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.39.213, i64 0, i64 0), i32 %44, i32 %c2.0.lcssa, i32 %43) #34
  %.pre211 = load i32, i32* %c18, align 4, !tbaa !255
  br label %if.end87

if.end87:                                         ; preds = %if.then82, %land.lhs.true, %for.end77
  %45 = phi i32 [ %.pre211, %if.then82 ], [ %38, %land.lhs.true ], [ %38, %for.end77 ]
  %46 = phi i32 [ %.pre211, %if.then82 ], [ %39, %land.lhs.true ], [ %39, %for.end77 ]
  %cmp91190 = icmp slt i32 %c2.0.lcssa, %46
  br i1 %cmp91190, label %for.cond93.preheader.preheader, label %for.inc110

for.cond93.preheader.preheader:                   ; preds = %if.end87
  %47 = sext i32 %c2.0.lcssa to i64
  %.pre212 = load i32, i32* %n_sv42, align 8, !tbaa !256
  br label %for.cond93.preheader

for.cond93.preheader:                             ; preds = %for.cond93.preheader.preheader, %for.inc107
  %48 = phi i32 [ %45, %for.cond93.preheader.preheader ], [ %55, %for.inc107 ]
  %49 = phi i32 [ %.pre212, %for.cond93.preheader.preheader ], [ %56, %for.inc107 ]
  %indvars.iv201 = phi i64 [ %47, %for.cond93.preheader.preheader ], [ %indvars.iv.next202, %for.inc107 ]
  %cmp95188 = icmp sgt i32 %49, 0
  br i1 %cmp95188, label %for.body96.lr.ph, label %for.inc107

for.body96.lr.ph:                                 ; preds = %for.cond93.preheader
  %50 = load i32***, i32**** %map, align 8, !tbaa !259
  %arrayidx99 = getelementptr inbounds i32**, i32*** %50, i64 %indvars.iv203
  %51 = load i32**, i32*** %arrayidx99, align 8, !tbaa !74
  %arrayidx101 = getelementptr inbounds i32*, i32** %51, i64 %indvars.iv201
  %52 = load i32*, i32** %arrayidx101, align 8, !tbaa !74
  br label %for.body96

for.body96:                                       ; preds = %for.body96.lr.ph, %for.body96
  %indvars.iv199 = phi i64 [ 0, %for.body96.lr.ph ], [ %indvars.iv.next200, %for.body96 ]
  %arrayidx103 = getelementptr inbounds i32, i32* %52, i64 %indvars.iv199
  store i32 -1, i32* %arrayidx103, align 4, !tbaa !37
  %indvars.iv.next200 = add nuw nsw i64 %indvars.iv199, 1
  %53 = load i32, i32* %n_sv42, align 8, !tbaa !256
  %54 = sext i32 %53 to i64
  %cmp95 = icmp slt i64 %indvars.iv.next200, %54
  br i1 %cmp95, label %for.body96, label %for.inc107.loopexit, !llvm.loop !287

for.inc107.loopexit:                              ; preds = %for.body96
  %.pre213 = load i32, i32* %c18, align 4, !tbaa !255
  br label %for.inc107

for.inc107:                                       ; preds = %for.inc107.loopexit, %for.cond93.preheader
  %55 = phi i32 [ %.pre213, %for.inc107.loopexit ], [ %48, %for.cond93.preheader ]
  %56 = phi i32 [ %53, %for.inc107.loopexit ], [ %49, %for.cond93.preheader ]
  %indvars.iv.next202 = add nsw i64 %indvars.iv201, 1
  %57 = sext i32 %55 to i64
  %cmp91 = icmp slt i64 %indvars.iv.next202, %57
  br i1 %cmp91, label %for.cond93.preheader, label %for.inc110, !llvm.loop !288

for.inc110:                                       ; preds = %for.inc107, %if.end87
  %58 = phi i32 [ %45, %if.end87 ], [ %55, %for.inc107 ]
  %59 = phi i32 [ %46, %if.end87 ], [ %55, %for.inc107 ]
  %indvars.iv.next204 = add nuw nsw i64 %indvars.iv203, 1
  %60 = load i32, i32* %r14, align 8, !tbaa !252
  %61 = sext i32 %60 to i64
  %cmp15 = icmp slt i64 %indvars.iv.next204, %61
  br i1 %cmp15, label %for.cond16.preheader, label %for.end112, !llvm.loop !289

for.end112:                                       ; preds = %for.inc110, %if.end12
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define internal fastcc void @subvq_map_linearize(%struct.subvq_t* nocapture readonly %vq) unnamed_addr #13 {
entry:
  %r1 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 0, i32 0
  %map = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 5
  %c4 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 0, i32 1
  %n_sv = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 1
  %vqsize = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 2
  %0 = load i32, i32* %r1, align 8, !tbaa !252
  %cmp59 = icmp sgt i32 %0, 0
  br i1 %cmp59, label %for.cond2.preheader.preheader, label %for.end33

for.cond2.preheader.preheader:                    ; preds = %entry
  %.pre = load i32, i32* %c4, align 4, !tbaa !255
  br label %for.cond2.preheader

for.cond2.preheader:                              ; preds = %for.cond2.preheader.preheader, %for.inc31
  %1 = phi i32 [ %0, %for.cond2.preheader.preheader ], [ %23, %for.inc31 ]
  %2 = phi i32 [ %.pre, %for.cond2.preheader.preheader ], [ %24, %for.inc31 ]
  %3 = phi i32 [ %.pre, %for.cond2.preheader.preheader ], [ %25, %for.inc31 ]
  %indvars.iv63 = phi i64 [ 0, %for.cond2.preheader.preheader ], [ %indvars.iv.next64, %for.inc31 ]
  %cmp557 = icmp sgt i32 %3, 0
  br i1 %cmp557, label %land.rhs.lr.ph, label %for.inc31

land.rhs.lr.ph:                                   ; preds = %for.cond2.preheader
  %4 = load i32***, i32**** %map, align 8, !tbaa !259
  %arrayidx = getelementptr inbounds i32**, i32*** %4, i64 %indvars.iv63
  %5 = load i32**, i32*** %arrayidx, align 8, !tbaa !74
  %6 = load i32*, i32** %5, align 8, !tbaa !74
  %7 = load i32, i32* %6, align 4, !tbaa !37
  %cmp973 = icmp sgt i32 %7, -1
  br i1 %cmp973, label %for.cond11.preheader, label %for.inc31.loopexit

land.rhs:                                         ; preds = %for.inc28
  %arrayidx7 = getelementptr inbounds i32*, i32** %5, i64 %indvars.iv.next62
  %8 = load i32*, i32** %arrayidx7, align 8, !tbaa !74
  %9 = load i32, i32* %8, align 4, !tbaa !37
  %cmp9 = icmp sgt i32 %9, -1
  br i1 %cmp9, label %for.cond11.preheader, label %for.inc31.loopexit, !llvm.loop !290

for.cond11.preheader:                             ; preds = %land.rhs.lr.ph, %land.rhs
  %10 = phi i32 [ %9, %land.rhs ], [ %7, %land.rhs.lr.ph ]
  %11 = phi i32* [ %8, %land.rhs ], [ %6, %land.rhs.lr.ph ]
  %indvars.iv6174 = phi i64 [ %indvars.iv.next62, %land.rhs ], [ 0, %land.rhs.lr.ph ]
  %12 = phi i32 [ %19, %land.rhs ], [ %2, %land.rhs.lr.ph ]
  %13 = load i32, i32* %n_sv, align 8, !tbaa !256
  %cmp1255 = icmp sgt i32 %13, 0
  br i1 %cmp1255, label %for.body13.preheader, label %for.inc28

for.body13.preheader:                             ; preds = %for.cond11.preheader
  store i32 %10, i32* %11, align 4, !tbaa !37
  %14 = load i32, i32* %n_sv, align 8, !tbaa !256
  %cmp1270 = icmp sgt i32 %14, 1
  br i1 %cmp1270, label %for.body13.for.body13_crit_edge, label %for.inc28.loopexit, !llvm.loop !291

for.body13.for.body13_crit_edge:                  ; preds = %for.body13.preheader, %for.body13.for.body13_crit_edge
  %indvars.iv.next71 = phi i64 [ %indvars.iv.next, %for.body13.for.body13_crit_edge ], [ 1, %for.body13.preheader ]
  %arrayidx20.phi.trans.insert = getelementptr inbounds i32, i32* %11, i64 %indvars.iv.next71
  %.pre65 = load i32, i32* %arrayidx20.phi.trans.insert, align 4, !tbaa !37
  %15 = load i32, i32* %vqsize, align 4, !tbaa !263
  %16 = trunc i64 %indvars.iv.next71 to i32
  %mul = mul nsw i32 %15, %16
  %arrayidx20 = getelementptr inbounds i32, i32* %11, i64 %indvars.iv.next71
  %add = add nsw i32 %mul, %.pre65
  store i32 %add, i32* %arrayidx20, align 4, !tbaa !37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next71, 1
  %17 = load i32, i32* %n_sv, align 8, !tbaa !256
  %18 = sext i32 %17 to i64
  %cmp12 = icmp slt i64 %indvars.iv.next, %18
  br i1 %cmp12, label %for.body13.for.body13_crit_edge, label %for.inc28.loopexit, !llvm.loop !291

for.inc28.loopexit:                               ; preds = %for.body13.for.body13_crit_edge, %for.body13.preheader
  %.pre66 = load i32, i32* %c4, align 4, !tbaa !255
  br label %for.inc28

for.inc28:                                        ; preds = %for.inc28.loopexit, %for.cond11.preheader
  %19 = phi i32 [ %.pre66, %for.inc28.loopexit ], [ %12, %for.cond11.preheader ]
  %indvars.iv.next62 = add nuw nsw i64 %indvars.iv6174, 1
  %20 = sext i32 %19 to i64
  %cmp5 = icmp slt i64 %indvars.iv.next62, %20
  br i1 %cmp5, label %land.rhs, label %for.inc31.loopexit, !llvm.loop !290

for.inc31.loopexit:                               ; preds = %for.inc28, %land.rhs, %land.rhs.lr.ph
  %21 = phi i32 [ %2, %land.rhs.lr.ph ], [ %19, %land.rhs ], [ %19, %for.inc28 ]
  %22 = phi i32 [ %3, %land.rhs.lr.ph ], [ %19, %land.rhs ], [ %19, %for.inc28 ]
  %.pre67 = load i32, i32* %r1, align 8, !tbaa !252
  br label %for.inc31

for.inc31:                                        ; preds = %for.inc31.loopexit, %for.cond2.preheader
  %23 = phi i32 [ %.pre67, %for.inc31.loopexit ], [ %1, %for.cond2.preheader ]
  %24 = phi i32 [ %21, %for.inc31.loopexit ], [ %2, %for.cond2.preheader ]
  %25 = phi i32 [ %22, %for.inc31.loopexit ], [ %3, %for.cond2.preheader ]
  %indvars.iv.next64 = add nuw nsw i64 %indvars.iv63, 1
  %26 = sext i32 %23 to i64
  %cmp = icmp slt i64 %indvars.iv.next64, %26
  br i1 %cmp, label %for.cond2.preheader, label %for.end33, !llvm.loop !292

for.end33:                                        ; preds = %for.inc31, %entry
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define i32 @subvq_mgau_shortlist(%struct.subvq_t* nocapture readonly %vq, i32 %m, i32 %n, i32 %beam) local_unnamed_addr #13 {
entry:
  %vqdist1 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 7
  %0 = load i32**, i32*** %vqdist1, align 8, !tbaa !276
  %1 = load i32*, i32** %0, align 8, !tbaa !74
  %gauscore2 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 8
  %2 = load i32*, i32** %gauscore2, align 8, !tbaa !277
  %mgau_sl = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 9
  %3 = load i32*, i32** %mgau_sl, align 8, !tbaa !278
  %map3 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 5
  %4 = load i32***, i32**** %map3, align 8, !tbaa !259
  %idxprom = sext i32 %m to i64
  %arrayidx4 = getelementptr inbounds i32**, i32*** %4, i64 %idxprom
  %5 = load i32**, i32*** %arrayidx4, align 8, !tbaa !74
  %6 = load i32*, i32** %5, align 8, !tbaa !74
  %n_sv = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 1
  %7 = load i32, i32* %n_sv, align 8, !tbaa !256
  switch i32 %7, label %for.cond68.preheader [
    i32 3, label %for.cond.preheader
    i32 2, label %for.cond35.preheader
    i32 1, label %for.cond54.preheader
  ]

for.cond54.preheader:                             ; preds = %entry
  %cmp55221 = icmp sgt i32 %n, 0
  br i1 %cmp55221, label %for.body56.preheader, label %for.end104

for.body56.preheader:                             ; preds = %for.cond54.preheader
  %wide.trip.count245 = zext i32 %n to i64
  br label %for.body56

for.cond35.preheader:                             ; preds = %entry
  %cmp36216 = icmp sgt i32 %n, 0
  br i1 %cmp36216, label %for.body37.preheader, label %for.end104

for.body37.preheader:                             ; preds = %for.cond35.preheader
  %wide.trip.count241 = zext i32 %n to i64
  br label %for.body37

for.cond.preheader:                               ; preds = %entry
  %8 = load i32, i32* @VQ_EVAL, align 4
  %cmp211 = icmp sgt i32 %n, 0
  br i1 %cmp211, label %for.body.preheader, label %for.end104

for.body.preheader:                               ; preds = %for.cond.preheader
  %wide.trip.count237 = zext i32 %n to i64
  br label %for.body

for.cond68.preheader:                             ; preds = %entry
  %cmp69206 = icmp sgt i32 %n, 0
  br i1 %cmp69206, label %for.cond71.preheader.preheader, label %for.end104

for.cond71.preheader.preheader:                   ; preds = %for.cond68.preheader
  %wide.trip.count233 = zext i32 %n to i64
  br label %for.cond71.preheader

for.body:                                         ; preds = %for.body.preheader, %if.end28
  %indvars.iv235 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next236, %if.end28 ]
  %map.0214 = phi i32* [ %6, %for.body.preheader ], [ %map.1, %if.end28 ]
  %bv.0212 = phi i32 [ -2147483648, %for.body.preheader ], [ %spec.select, %if.end28 ]
  switch i32 %8, label %if.else16 [
    i32 1, label %if.then
    i32 2, label %if.then10
  ]

if.then:                                          ; preds = %for.body
  %9 = load i32, i32* %map.0214, align 4, !tbaa !37
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds i32, i32* %1, i64 %idxprom7
  %10 = load i32, i32* %arrayidx8, align 4, !tbaa !37
  br label %if.end28

if.then10:                                        ; preds = %for.body
  %incdec.ptr = getelementptr inbounds i32, i32* %map.0214, i64 1
  %11 = load i32, i32* %map.0214, align 4, !tbaa !37
  %idxprom11 = sext i32 %11 to i64
  %arrayidx12 = getelementptr inbounds i32, i32* %1, i64 %idxprom11
  %12 = load i32, i32* %arrayidx12, align 4, !tbaa !37
  %13 = load i32, i32* %incdec.ptr, align 4, !tbaa !37
  %idxprom13 = sext i32 %13 to i64
  %arrayidx14 = getelementptr inbounds i32, i32* %1, i64 %idxprom13
  %14 = load i32, i32* %arrayidx14, align 4, !tbaa !37
  %mul = shl nsw i32 %14, 1
  %add = add nsw i32 %mul, %12
  br label %if.end28

if.else16:                                        ; preds = %for.body
  %incdec.ptr17 = getelementptr inbounds i32, i32* %map.0214, i64 1
  %15 = load i32, i32* %map.0214, align 4, !tbaa !37
  %idxprom18 = sext i32 %15 to i64
  %arrayidx19 = getelementptr inbounds i32, i32* %1, i64 %idxprom18
  %16 = load i32, i32* %arrayidx19, align 4, !tbaa !37
  %incdec.ptr20 = getelementptr inbounds i32, i32* %map.0214, i64 2
  %17 = load i32, i32* %incdec.ptr17, align 4, !tbaa !37
  %idxprom21 = sext i32 %17 to i64
  %arrayidx22 = getelementptr inbounds i32, i32* %1, i64 %idxprom21
  %18 = load i32, i32* %arrayidx22, align 4, !tbaa !37
  %add23 = add nsw i32 %18, %16
  %19 = load i32, i32* %incdec.ptr20, align 4, !tbaa !37
  %idxprom25 = sext i32 %19 to i64
  %arrayidx26 = getelementptr inbounds i32, i32* %1, i64 %idxprom25
  %20 = load i32, i32* %arrayidx26, align 4, !tbaa !37
  %add27 = add nsw i32 %add23, %20
  br label %if.end28

if.end28:                                         ; preds = %if.then10, %if.else16, %if.then
  %v.0 = phi i32 [ %10, %if.then ], [ %add, %if.then10 ], [ %add27, %if.else16 ]
  %map.1 = getelementptr inbounds i32, i32* %map.0214, i64 3
  %arrayidx30 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv235
  store i32 %v.0, i32* %arrayidx30, align 4, !tbaa !37
  %cmp31 = icmp slt i32 %bv.0212, %v.0
  %spec.select = select i1 %cmp31, i32 %v.0, i32 %bv.0212
  %indvars.iv.next236 = add nuw nsw i64 %indvars.iv235, 1
  %exitcond238.not = icmp eq i64 %indvars.iv.next236, %wide.trip.count237
  br i1 %exitcond238.not, label %sw.epilog, label %for.body, !llvm.loop !293

for.body37:                                       ; preds = %for.body37.preheader, %for.body37
  %indvars.iv239 = phi i64 [ 0, %for.body37.preheader ], [ %indvars.iv.next240, %for.body37 ]
  %map.2219 = phi i32* [ %6, %for.body37.preheader ], [ %incdec.ptr41, %for.body37 ]
  %bv.2217 = phi i32 [ -2147483648, %for.body37.preheader ], [ %spec.select190, %for.body37 ]
  %incdec.ptr38 = getelementptr inbounds i32, i32* %map.2219, i64 1
  %21 = load i32, i32* %map.2219, align 4, !tbaa !37
  %idxprom39 = sext i32 %21 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %1, i64 %idxprom39
  %22 = load i32, i32* %arrayidx40, align 4, !tbaa !37
  %incdec.ptr41 = getelementptr inbounds i32, i32* %map.2219, i64 2
  %23 = load i32, i32* %incdec.ptr38, align 4, !tbaa !37
  %idxprom42 = sext i32 %23 to i64
  %arrayidx43 = getelementptr inbounds i32, i32* %1, i64 %idxprom42
  %24 = load i32, i32* %arrayidx43, align 4, !tbaa !37
  %add44 = add nsw i32 %24, %22
  %arrayidx46 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv239
  store i32 %add44, i32* %arrayidx46, align 4, !tbaa !37
  %cmp47 = icmp slt i32 %bv.2217, %add44
  %spec.select190 = select i1 %cmp47, i32 %add44, i32 %bv.2217
  %indvars.iv.next240 = add nuw nsw i64 %indvars.iv239, 1
  %exitcond242.not = icmp eq i64 %indvars.iv.next240, %wide.trip.count241
  br i1 %exitcond242.not, label %sw.epilog, label %for.body37, !llvm.loop !294

for.body56:                                       ; preds = %for.body56.preheader, %for.body56
  %indvars.iv243 = phi i64 [ 0, %for.body56.preheader ], [ %indvars.iv.next244, %for.body56 ]
  %map.3224 = phi i32* [ %6, %for.body56.preheader ], [ %incdec.ptr57, %for.body56 ]
  %bv.4222 = phi i32 [ -2147483648, %for.body56.preheader ], [ %spec.select191, %for.body56 ]
  %incdec.ptr57 = getelementptr inbounds i32, i32* %map.3224, i64 1
  %25 = load i32, i32* %map.3224, align 4, !tbaa !37
  %idxprom58 = sext i32 %25 to i64
  %arrayidx59 = getelementptr inbounds i32, i32* %1, i64 %idxprom58
  %26 = load i32, i32* %arrayidx59, align 4, !tbaa !37
  %arrayidx61 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv243
  store i32 %26, i32* %arrayidx61, align 4, !tbaa !37
  %cmp62 = icmp slt i32 %bv.4222, %26
  %spec.select191 = select i1 %cmp62, i32 %26, i32 %bv.4222
  %indvars.iv.next244 = add nuw nsw i64 %indvars.iv243, 1
  %exitcond246.not = icmp eq i64 %indvars.iv.next244, %wide.trip.count245
  br i1 %exitcond246.not, label %sw.epilog, label %for.body56, !llvm.loop !295

for.cond71.preheader:                             ; preds = %for.end81.for.cond71.preheader_crit_edge, %for.cond71.preheader.preheader
  %27 = phi i32 [ %7, %for.cond71.preheader.preheader ], [ %.pre, %for.end81.for.cond71.preheader_crit_edge ]
  %indvars.iv231 = phi i64 [ 0, %for.cond71.preheader.preheader ], [ %indvars.iv.next232, %for.end81.for.cond71.preheader_crit_edge ]
  %map.4209 = phi i32* [ %6, %for.cond71.preheader.preheader ], [ %map.5.lcssa, %for.end81.for.cond71.preheader_crit_edge ]
  %bv.6207 = phi i32 [ -2147483648, %for.cond71.preheader.preheader ], [ %spec.select192, %for.end81.for.cond71.preheader_crit_edge ]
  %cmp73200 = icmp sgt i32 %27, 0
  br i1 %cmp73200, label %for.body74.preheader, label %for.end81

for.body74.preheader:                             ; preds = %for.cond71.preheader
  %28 = add nsw i32 %27, -1
  %29 = zext i32 %28 to i64
  br label %for.body74

for.body74:                                       ; preds = %for.body74.preheader, %for.body74
  %sv_id.0203 = phi i32 [ %inc80, %for.body74 ], [ 0, %for.body74.preheader ]
  %map.5202 = phi i32* [ %incdec.ptr75, %for.body74 ], [ %map.4209, %for.body74.preheader ]
  %v.1201 = phi i32 [ %add78, %for.body74 ], [ 0, %for.body74.preheader ]
  %incdec.ptr75 = getelementptr inbounds i32, i32* %map.5202, i64 1
  %30 = load i32, i32* %map.5202, align 4, !tbaa !37
  %idxprom76 = sext i32 %30 to i64
  %arrayidx77 = getelementptr inbounds i32, i32* %1, i64 %idxprom76
  %31 = load i32, i32* %arrayidx77, align 4, !tbaa !37
  %add78 = add nsw i32 %31, %v.1201
  %inc80 = add nuw nsw i32 %sv_id.0203, 1
  %exitcond230.not = icmp eq i32 %inc80, %27
  br i1 %exitcond230.not, label %for.end81.loopexit, label %for.body74, !llvm.loop !296

for.end81.loopexit:                               ; preds = %for.body74
  %scevgep229.idx = add nuw nsw i64 %29, 1
  %scevgep229 = getelementptr i32, i32* %map.4209, i64 %scevgep229.idx
  br label %for.end81

for.end81:                                        ; preds = %for.end81.loopexit, %for.cond71.preheader
  %v.1.lcssa = phi i32 [ 0, %for.cond71.preheader ], [ %add78, %for.end81.loopexit ]
  %map.5.lcssa = phi i32* [ %map.4209, %for.cond71.preheader ], [ %scevgep229, %for.end81.loopexit ]
  %arrayidx83 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv231
  store i32 %v.1.lcssa, i32* %arrayidx83, align 4, !tbaa !37
  %cmp84 = icmp slt i32 %bv.6207, %v.1.lcssa
  %spec.select192 = select i1 %cmp84, i32 %v.1.lcssa, i32 %bv.6207
  %indvars.iv.next232 = add nuw nsw i64 %indvars.iv231, 1
  %exitcond234.not = icmp eq i64 %indvars.iv.next232, %wide.trip.count233
  br i1 %exitcond234.not, label %sw.epilog, label %for.end81.for.cond71.preheader_crit_edge, !llvm.loop !297

for.end81.for.cond71.preheader_crit_edge:         ; preds = %for.end81
  %.pre = load i32, i32* %n_sv, align 8, !tbaa !256
  br label %for.cond71.preheader

sw.epilog:                                        ; preds = %for.body56, %for.body37, %if.end28, %for.end81
  %bv.8 = phi i32 [ %spec.select192, %for.end81 ], [ %spec.select, %if.end28 ], [ %spec.select190, %for.body37 ], [ %spec.select191, %for.body56 ]
  %add90 = add nsw i32 %bv.8, %beam
  %cmp92196 = icmp sgt i32 %n, 0
  br i1 %cmp92196, label %for.body93.preheader, label %for.end104

for.body93.preheader:                             ; preds = %sw.epilog
  %wide.trip.count = zext i32 %n to i64
  br label %for.body93

for.body93:                                       ; preds = %for.body93.preheader, %for.inc102
  %indvars.iv = phi i64 [ 0, %for.body93.preheader ], [ %indvars.iv.next, %for.inc102 ]
  %nc.0197 = phi i32 [ 0, %for.body93.preheader ], [ %nc.1, %for.inc102 ]
  %arrayidx95 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv
  %32 = load i32, i32* %arrayidx95, align 4, !tbaa !37
  %cmp96.not = icmp slt i32 %32, %add90
  br i1 %cmp96.not, label %for.inc102, label %if.then97

if.then97:                                        ; preds = %for.body93
  %inc98 = add nsw i32 %nc.0197, 1
  %idxprom99 = sext i32 %nc.0197 to i64
  %arrayidx100 = getelementptr inbounds i32, i32* %3, i64 %idxprom99
  %33 = trunc i64 %indvars.iv to i32
  store i32 %33, i32* %arrayidx100, align 4, !tbaa !37
  br label %for.inc102

for.inc102:                                       ; preds = %for.body93, %if.then97
  %nc.1 = phi i32 [ %inc98, %if.then97 ], [ %nc.0197, %for.body93 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end104, label %for.body93, !llvm.loop !298

for.end104:                                       ; preds = %for.inc102, %for.cond68.preheader, %for.cond.preheader, %for.cond35.preheader, %for.cond54.preheader, %sw.epilog
  %nc.0.lcssa = phi i32 [ 0, %sw.epilog ], [ 0, %for.cond54.preheader ], [ 0, %for.cond35.preheader ], [ 0, %for.cond.preheader ], [ 0, %for.cond68.preheader ], [ %nc.1, %for.inc102 ]
  %idxprom105 = sext i32 %nc.0.lcssa to i64
  %arrayidx106 = getelementptr inbounds i32, i32* %3, i64 %idxprom105
  store i32 -1, i32* %arrayidx106, align 4, !tbaa !37
  ret i32 %nc.0.lcssa
}

; Function Attrs: noinline nounwind optsize uwtable
define void @subvq_subvec_eval_logs3(%struct.subvq_t* nocapture readonly %vq, float* nocapture readonly %feat, i32 %s) local_unnamed_addr #0 {
entry:
  %featdim1 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 3
  %0 = load i32**, i32*** %featdim1, align 8, !tbaa !257
  %idxprom = sext i32 %s to i64
  %arrayidx = getelementptr inbounds i32*, i32** %0, i64 %idxprom
  %1 = load i32*, i32** %arrayidx, align 8, !tbaa !74
  %gautbl = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 4
  %2 = load %struct.vector_gautbl_t*, %struct.vector_gautbl_t** %gautbl, align 8, !tbaa !258
  %veclen = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %2, i64 %idxprom, i32 1
  %3 = load i32, i32* %veclen, align 4, !tbaa !260
  %cmp30 = icmp sgt i32 %3, 0
  %subvec = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 6
  %4 = load float*, float** %subvec, align 8, !tbaa !275
  br i1 %cmp30, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %wide.trip.count = zext i32 %3 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx5 = getelementptr inbounds i32, i32* %1, i64 %indvars.iv
  %5 = load i32, i32* %arrayidx5, align 4, !tbaa !37
  %idxprom6 = sext i32 %5 to i64
  %arrayidx7 = getelementptr inbounds float, float* %feat, i64 %idxprom6
  %6 = load float, float* %arrayidx7, align 4, !tbaa !4
  %arrayidx9 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  store float %6, float* %arrayidx9, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !299

for.end:                                          ; preds = %for.body, %entry
  %arrayidx3 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %2, i64 %idxprom
  %vqsize = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 2
  %7 = load i32, i32* %vqsize, align 4, !tbaa !263
  %vqdist = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 7
  %8 = load i32**, i32*** %vqdist, align 8, !tbaa !276
  %arrayidx15 = getelementptr inbounds i32*, i32** %8, i64 %idxprom
  %9 = load i32*, i32** %arrayidx15, align 8, !tbaa !74
  tail call void @vector_gautbl_eval_logs3(%struct.vector_gautbl_t* %arrayidx3, i32 0, i32 %7, float* %4, i32* %9) #34
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @subvq_gautbl_eval_logs3(%struct.subvq_t* nocapture readonly %vq, float* nocapture readonly %feat) local_unnamed_addr #0 {
entry:
  %n_sv = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 1
  %featdim1 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 3
  %gautbl = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 4
  %subvec = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 6
  %vqsize = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 2
  %vqdist = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 7
  %0 = load i32, i32* %n_sv, align 8, !tbaa !256
  %cmp44 = icmp sgt i32 %0, 0
  br i1 %cmp44, label %for.body, label %for.end22

for.body:                                         ; preds = %entry, %for.inc20
  %1 = phi i32 [ %15, %for.inc20 ], [ %0, %entry ]
  %indvars.iv46 = phi i64 [ %indvars.iv.next47, %for.inc20 ], [ 0, %entry ]
  %2 = load i32**, i32*** %featdim1, align 8, !tbaa !257
  %arrayidx = getelementptr inbounds i32*, i32** %2, i64 %indvars.iv46
  %3 = load i32*, i32** %arrayidx, align 8, !tbaa !74
  %4 = load %struct.vector_gautbl_t*, %struct.vector_gautbl_t** %gautbl, align 8, !tbaa !258
  %veclen = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %4, i64 %indvars.iv46, i32 1
  %5 = load i32, i32* %veclen, align 4, !tbaa !260
  %cmp542 = icmp sgt i32 %5, 0
  br i1 %cmp542, label %for.body6.lr.ph, label %for.end

for.body6.lr.ph:                                  ; preds = %for.body
  %6 = load float*, float** %subvec, align 8, !tbaa !275
  %wide.trip.count = zext i32 %5 to i64
  br label %for.body6

for.body6:                                        ; preds = %for.body6.lr.ph, %for.body6
  %indvars.iv = phi i64 [ 0, %for.body6.lr.ph ], [ %indvars.iv.next, %for.body6 ]
  %arrayidx8 = getelementptr inbounds i32, i32* %3, i64 %indvars.iv
  %7 = load i32, i32* %arrayidx8, align 4, !tbaa !37
  %idxprom9 = sext i32 %7 to i64
  %arrayidx10 = getelementptr inbounds float, float* %feat, i64 %idxprom9
  %8 = load float, float* %arrayidx10, align 4, !tbaa !4
  %arrayidx12 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  store float %8, float* %arrayidx12, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body6, !llvm.loop !300

for.end:                                          ; preds = %for.body6, %for.body
  %9 = load i32, i32* @VQ_EVAL, align 4, !tbaa !37
  %10 = sext i32 %9 to i64
  %cmp13 = icmp slt i64 %indvars.iv46, %10
  br i1 %cmp13, label %if.then, label %for.inc20

if.then:                                          ; preds = %for.end
  %arrayidx4.le = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %4, i64 %indvars.iv46
  %11 = load i32, i32* %vqsize, align 4, !tbaa !263
  %12 = load float*, float** %subvec, align 8, !tbaa !275
  %13 = load i32**, i32*** %vqdist, align 8, !tbaa !276
  %arrayidx19 = getelementptr inbounds i32*, i32** %13, i64 %indvars.iv46
  %14 = load i32*, i32** %arrayidx19, align 8, !tbaa !74
  tail call void @vector_gautbl_eval_logs3(%struct.vector_gautbl_t* nonnull %arrayidx4.le, i32 0, i32 %11, float* %12, i32* %14) #34
  %.pre = load i32, i32* %n_sv, align 8, !tbaa !256
  br label %for.inc20

for.inc20:                                        ; preds = %for.end, %if.then
  %15 = phi i32 [ %1, %for.end ], [ %.pre, %if.then ]
  %indvars.iv.next47 = add nuw nsw i64 %indvars.iv46, 1
  %16 = sext i32 %15 to i64
  %cmp = icmp slt i64 %indvars.iv.next47, %16
  br i1 %cmp, label %for.body, label %for.end22, !llvm.loop !301

for.end22:                                        ; preds = %for.inc20, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @subvq_frame_eval(%struct.subvq_t* readonly %vq, %struct.mgau_model_t* %g, i32 %beam, float* %feat, i32* readonly %sen_active, i32* nocapture %senscr) local_unnamed_addr #0 {
entry:
  %tobool.not = icmp eq %struct.subvq_t* %vq, null
  br i1 %tobool.not, label %for.cond.preheader, label %if.else18

for.cond.preheader:                               ; preds = %entry
  %n_mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 0
  %tobool1.not = icmp eq i32* %sen_active, null
  %mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %0 = load i32, i32* %n_mgau, align 8, !tbaa !92
  %cmp123 = icmp sgt i32 %0, 0
  br i1 %cmp123, label %for.body, label %for.end62

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv147 = phi i64 [ %indvars.iv.next148, %for.inc ], [ 0, %for.cond.preheader ]
  %ng.0130 = phi i32 [ %ng.1, %for.inc ], [ 0, %for.cond.preheader ]
  %ns.0128 = phi i32 [ %ns.1, %for.inc ], [ 0, %for.cond.preheader ]
  %best.0127 = phi i32 [ %best.2, %for.inc ], [ -2147483648, %for.cond.preheader ]
  br i1 %tobool1.not, label %if.then3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %arrayidx = getelementptr inbounds i32, i32* %sen_active, i64 %indvars.iv147
  %1 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %tobool2.not = icmp eq i32 %1, 0
  br i1 %tobool2.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %lor.lhs.false, %for.body
  %2 = trunc i64 %indvars.iv147 to i32
  %call = tail call i32 @mgau_eval(%struct.mgau_model_t* nonnull %g, i32 %2, i32* null, float* %feat) #34
  %arrayidx5 = getelementptr inbounds i32, i32* %senscr, i64 %indvars.iv147
  store i32 %call, i32* %arrayidx5, align 4, !tbaa !37
  %cmp8 = icmp slt i32 %best.0127, %call
  %spec.select = select i1 %cmp8, i32 %call, i32 %best.0127
  %inc = add nsw i32 %ns.0128, 1
  %3 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %n_comp = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %3, i64 %indvars.iv147, i32 0
  %4 = load i32, i32* %n_comp, align 8, !tbaa !285
  %add = add nsw i32 %4, %ng.0130
  br label %for.inc

if.else:                                          ; preds = %lor.lhs.false
  %arrayidx15 = getelementptr inbounds i32, i32* %senscr, i64 %indvars.iv147
  store i32 -939524096, i32* %arrayidx15, align 4, !tbaa !37
  br label %for.inc

for.inc:                                          ; preds = %if.then3, %if.else
  %best.2 = phi i32 [ %spec.select, %if.then3 ], [ %best.0127, %if.else ]
  %ns.1 = phi i32 [ %inc, %if.then3 ], [ %ns.0128, %if.else ]
  %ng.1 = phi i32 [ %add, %if.then3 ], [ %ng.0130, %if.else ]
  %indvars.iv.next148 = add nuw nsw i64 %indvars.iv147, 1
  %5 = load i32, i32* %n_mgau, align 8, !tbaa !92
  %6 = sext i32 %5 to i64
  %cmp = icmp slt i64 %indvars.iv.next148, %6
  br i1 %cmp, label %for.body, label %if.end53, !llvm.loop !302

if.else18:                                        ; preds = %entry
  tail call void @subvq_gautbl_eval_logs3(%struct.subvq_t* nonnull %vq, float* %feat) #36
  %n_mgau20 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 0
  %tobool23.not = icmp eq i32* %sen_active, null
  %mgau29 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %mgau_sl = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 9
  %7 = load i32, i32* %n_mgau20, align 8, !tbaa !92
  %cmp21134 = icmp sgt i32 %7, 0
  br i1 %cmp21134, label %for.body22, label %for.end62

for.body22:                                       ; preds = %if.else18, %for.inc50
  %indvars.iv149 = phi i64 [ %indvars.iv.next150, %for.inc50 ], [ 0, %if.else18 ]
  %ng.2141 = phi i32 [ %ng.3, %for.inc50 ], [ 0, %if.else18 ]
  %ns.2139 = phi i32 [ %ns.3, %for.inc50 ], [ 0, %if.else18 ]
  %best.3138 = phi i32 [ %best.5, %for.inc50 ], [ -2147483648, %if.else18 ]
  br i1 %tobool23.not, label %if.then28, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %for.body22
  %arrayidx26 = getelementptr inbounds i32, i32* %sen_active, i64 %indvars.iv149
  %8 = load i32, i32* %arrayidx26, align 4, !tbaa !37
  %tobool27.not = icmp eq i32 %8, 0
  br i1 %tobool27.not, label %if.else46, label %if.then28

if.then28:                                        ; preds = %lor.lhs.false24, %for.body22
  %9 = load %struct.mgau_t*, %struct.mgau_t** %mgau29, align 8, !tbaa !284
  %n_comp32 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %9, i64 %indvars.iv149, i32 0
  %10 = load i32, i32* %n_comp32, align 8, !tbaa !285
  %11 = trunc i64 %indvars.iv149 to i32
  %call33 = tail call i32 @subvq_mgau_shortlist(%struct.subvq_t* nonnull %vq, i32 %11, i32 %10, i32 %beam) #36
  %add34 = add nsw i32 %call33, %ng.2141
  %12 = load i32*, i32** %mgau_sl, align 8, !tbaa !278
  %call35 = tail call i32 @mgau_eval(%struct.mgau_model_t* nonnull %g, i32 %11, i32* %12, float* %feat) #34
  %arrayidx37 = getelementptr inbounds i32, i32* %senscr, i64 %indvars.iv149
  store i32 %call35, i32* %arrayidx37, align 4, !tbaa !37
  %cmp40 = icmp slt i32 %best.3138, %call35
  %spec.select119 = select i1 %cmp40, i32 %call35, i32 %best.3138
  %inc45 = add nsw i32 %ns.2139, 1
  br label %for.inc50

if.else46:                                        ; preds = %lor.lhs.false24
  %arrayidx48 = getelementptr inbounds i32, i32* %senscr, i64 %indvars.iv149
  store i32 -939524096, i32* %arrayidx48, align 4, !tbaa !37
  br label %for.inc50

for.inc50:                                        ; preds = %if.then28, %if.else46
  %best.5 = phi i32 [ %spec.select119, %if.then28 ], [ %best.3138, %if.else46 ]
  %ns.3 = phi i32 [ %inc45, %if.then28 ], [ %ns.2139, %if.else46 ]
  %ng.3 = phi i32 [ %add34, %if.then28 ], [ %ng.2141, %if.else46 ]
  %indvars.iv.next150 = add nuw nsw i64 %indvars.iv149, 1
  %13 = load i32, i32* %n_mgau20, align 8, !tbaa !92
  %14 = sext i32 %13 to i64
  %cmp21 = icmp slt i64 %indvars.iv.next150, %14
  br i1 %cmp21, label %for.body22, label %if.end53, !llvm.loop !303

if.end53:                                         ; preds = %for.inc50, %for.inc
  %15 = phi i32 [ %5, %for.inc ], [ %13, %for.inc50 ]
  %best.6 = phi i32 [ %best.2, %for.inc ], [ %best.5, %for.inc50 ]
  %ns.4 = phi i32 [ %ns.1, %for.inc ], [ %ns.3, %for.inc50 ]
  %ng.4 = phi i32 [ %ng.1, %for.inc ], [ %ng.3, %for.inc50 ]
  %n_mgau55 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 0
  %cmp56121 = icmp sgt i32 %15, 0
  br i1 %cmp56121, label %for.body57, label %for.end62

for.body57:                                       ; preds = %if.end53, %for.body57
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body57 ], [ 0, %if.end53 ]
  %arrayidx59 = getelementptr inbounds i32, i32* %senscr, i64 %indvars.iv
  %16 = load i32, i32* %arrayidx59, align 4, !tbaa !37
  %sub = sub nsw i32 %16, %best.6
  store i32 %sub, i32* %arrayidx59, align 4, !tbaa !37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %17 = load i32, i32* %n_mgau55, align 8, !tbaa !92
  %18 = sext i32 %17 to i64
  %cmp56 = icmp slt i64 %indvars.iv.next, %18
  br i1 %cmp56, label %for.body57, label %for.end62, !llvm.loop !304

for.end62:                                        ; preds = %for.body57, %if.else18, %for.cond.preheader, %if.end53
  %ng.4158 = phi i32 [ %ng.4, %if.end53 ], [ 0, %for.cond.preheader ], [ 0, %if.else18 ], [ %ng.4, %for.body57 ]
  %ns.4157 = phi i32 [ %ns.4, %if.end53 ], [ 0, %for.cond.preheader ], [ 0, %if.else18 ], [ %ns.4, %for.body57 ]
  %best.6156 = phi i32 [ %best.6, %if.end53 ], [ -2147483648, %for.cond.preheader ], [ -2147483648, %if.else18 ], [ %best.6, %for.body57 ]
  %frm_sen_eval = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 5
  store i32 %ns.4157, i32* %frm_sen_eval, align 8, !tbaa !305
  %frm_gau_eval = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 6
  store i32 %ng.4158, i32* %frm_gau_eval, align 4, !tbaa !306
  ret i32 %best.6156
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @subvq_mgau_eval(%struct.mgau_model_t* nocapture readonly %g, %struct.subvq_t* nocapture readonly %vq, i32 %m, i32 %n, i32* readonly %active) local_unnamed_addr #0 {
entry:
  %call = tail call double @log_to_logs3_factor() #34
  %vqdist1 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 7
  %0 = load i32**, i32*** %vqdist1, align 8, !tbaa !276
  %1 = load i32*, i32** %0, align 8, !tbaa !74
  %mgau2 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %2 = load %struct.mgau_t*, %struct.mgau_t** %mgau2, align 8, !tbaa !284
  %idxprom = sext i32 %m to i64
  %map4 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 5
  %3 = load i32***, i32**** %map4, align 8, !tbaa !259
  %arrayidx6 = getelementptr inbounds i32**, i32*** %3, i64 %idxprom
  %4 = load i32**, i32*** %arrayidx6, align 8, !tbaa !74
  %5 = load i32*, i32** %4, align 8, !tbaa !74
  %tobool.not = icmp eq i32* %active, null
  br i1 %tobool.not, label %for.cond.preheader, label %for.cond20

for.cond.preheader:                               ; preds = %entry
  %n_sv = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 1
  %mixw = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %2, i64 %idxprom, i32 4
  %cmp110 = icmp sgt i32 %n, 0
  br i1 %cmp110, label %for.cond8.preheader.preheader, label %if.then59

for.cond8.preheader.preheader:                    ; preds = %for.cond.preheader
  %wide.trip.count = zext i32 %n to i64
  br label %for.cond8.preheader

for.cond8.preheader:                              ; preds = %for.cond8.preheader.preheader, %for.end
  %indvars.iv = phi i64 [ 0, %for.cond8.preheader.preheader ], [ %indvars.iv.next, %for.end ]
  %map.0113 = phi i32* [ %5, %for.cond8.preheader.preheader ], [ %map.1.lcssa, %for.end ]
  %score.0112 = phi i32 [ -939524096, %for.cond8.preheader.preheader ], [ %call16, %for.end ]
  %6 = load i32, i32* %n_sv, align 8, !tbaa !256
  %cmp9105 = icmp sgt i32 %6, 0
  br i1 %cmp9105, label %for.body10.preheader, label %for.end

for.body10.preheader:                             ; preds = %for.cond8.preheader
  %7 = add nsw i32 %6, -1
  %8 = zext i32 %7 to i64
  br label %for.body10

for.body10:                                       ; preds = %for.body10.preheader, %for.body10
  %map.1108 = phi i32* [ %incdec.ptr, %for.body10 ], [ %map.0113, %for.body10.preheader ]
  %sv_id.0107 = phi i32 [ %inc, %for.body10 ], [ 0, %for.body10.preheader ]
  %v.0106 = phi i32 [ %add, %for.body10 ], [ 0, %for.body10.preheader ]
  %incdec.ptr = getelementptr inbounds i32, i32* %map.1108, i64 1
  %9 = load i32, i32* %map.1108, align 4, !tbaa !37
  %idxprom11 = sext i32 %9 to i64
  %arrayidx12 = getelementptr inbounds i32, i32* %1, i64 %idxprom11
  %10 = load i32, i32* %arrayidx12, align 4, !tbaa !37
  %add = add nsw i32 %10, %v.0106
  %inc = add nuw nsw i32 %sv_id.0107, 1
  %exitcond.not = icmp eq i32 %inc, %6
  br i1 %exitcond.not, label %for.end.loopexit, label %for.body10, !llvm.loop !307

for.end.loopexit:                                 ; preds = %for.body10
  %scevgep129.idx = add nuw nsw i64 %8, 1
  %scevgep129 = getelementptr i32, i32* %map.0113, i64 %scevgep129.idx
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.cond8.preheader
  %v.0.lcssa = phi i32 [ 0, %for.cond8.preheader ], [ %add, %for.end.loopexit ]
  %map.1.lcssa = phi i32* [ %map.0113, %for.cond8.preheader ], [ %scevgep129, %for.end.loopexit ]
  %11 = load i32*, i32** %mixw, align 8, !tbaa !308
  %arrayidx14 = getelementptr inbounds i32, i32* %11, i64 %indvars.iv
  %12 = load i32, i32* %arrayidx14, align 4, !tbaa !37
  %add15 = add nsw i32 %12, %v.0.lcssa
  %call16 = tail call i32 @logs3_add(i32 %score.0112, i32 %add15) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond130.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond130.not, label %if.end, label %for.cond8.preheader, !llvm.loop !309

for.cond20:                                       ; preds = %entry, %for.cond20
  %indvars.iv136 = phi i64 [ %indvars.iv.next137, %for.cond20 ], [ 0, %entry ]
  %arrayidx22 = getelementptr inbounds i32, i32* %active, i64 %indvars.iv136
  %13 = load i32, i32* %arrayidx22, align 4, !tbaa !37
  %cmp23 = icmp sgt i32 %13, -1
  %indvars.iv.next137 = add nuw i64 %indvars.iv136, 1
  br i1 %cmp23, label %for.cond20, label %for.cond30.preheader, !llvm.loop !310

for.cond30.preheader:                             ; preds = %for.cond20
  %n_sv37 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %vq, i64 0, i32 1
  %mixw50 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %2, i64 %idxprom, i32 4
  %14 = load i32, i32* %active, align 4, !tbaa !37
  %cmp33121 = icmp sgt i32 %14, -1
  br i1 %cmp33121, label %for.body34, label %if.then59

for.body34:                                       ; preds = %for.cond30.preheader, %for.end48
  %indvars.iv134 = phi i64 [ %indvars.iv.next135, %for.end48 ], [ 0, %for.cond30.preheader ]
  %15 = phi i32 [ %21, %for.end48 ], [ %14, %for.cond30.preheader ]
  %map.2125 = phi i32* [ %map.3.lcssa, %for.end48 ], [ %5, %for.cond30.preheader ]
  %last_active.0.neg124 = phi i32 [ %add49.neg, %for.end48 ], [ 0, %for.cond30.preheader ]
  %score.1123 = phi i32 [ %call54, %for.end48 ], [ -939524096, %for.cond30.preheader ]
  %sub = add i32 %15, %last_active.0.neg124
  %16 = load i32, i32* %n_sv37, align 8, !tbaa !256
  %mul = mul nsw i32 %16, %sub
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i32, i32* %map.2125, i64 %idx.ext
  %cmp40115 = icmp sgt i32 %16, 0
  br i1 %cmp40115, label %for.body41, label %for.end48

for.body41:                                       ; preds = %for.body34, %for.body41
  %map.3118 = phi i32* [ %incdec.ptr42, %for.body41 ], [ %add.ptr, %for.body34 ]
  %sv_id.1117 = phi i32 [ %inc47, %for.body41 ], [ 0, %for.body34 ]
  %v.1116 = phi i32 [ %add45, %for.body41 ], [ 0, %for.body34 ]
  %incdec.ptr42 = getelementptr inbounds i32, i32* %map.3118, i64 1
  %17 = load i32, i32* %map.3118, align 4, !tbaa !37
  %idxprom43 = sext i32 %17 to i64
  %arrayidx44 = getelementptr inbounds i32, i32* %1, i64 %idxprom43
  %18 = load i32, i32* %arrayidx44, align 4, !tbaa !37
  %add45 = add nsw i32 %18, %v.1116
  %inc47 = add nuw nsw i32 %sv_id.1117, 1
  %exitcond133.not = icmp eq i32 %inc47, %16
  br i1 %exitcond133.not, label %for.end48, label %for.body41, !llvm.loop !311

for.end48:                                        ; preds = %for.body41, %for.body34
  %v.1.lcssa = phi i32 [ 0, %for.body34 ], [ %add45, %for.body41 ]
  %map.3.lcssa = phi i32* [ %add.ptr, %for.body34 ], [ %incdec.ptr42, %for.body41 ]
  %add49.neg = xor i32 %15, -1
  %19 = load i32*, i32** %mixw50, align 8, !tbaa !308
  %arrayidx52 = getelementptr inbounds i32, i32* %19, i64 %indvars.iv134
  %20 = load i32, i32* %arrayidx52, align 4, !tbaa !37
  %add53 = add nsw i32 %20, %v.1.lcssa
  %call54 = tail call i32 @logs3_add(i32 %score.1123, i32 %add53) #34
  %indvars.iv.next135 = add nuw i64 %indvars.iv134, 1
  %arrayidx32 = getelementptr inbounds i32, i32* %active, i64 %indvars.iv.next135
  %21 = load i32, i32* %arrayidx32, align 4, !tbaa !37
  %cmp33 = icmp sgt i32 %21, -1
  br i1 %cmp33, label %for.body34, label %if.end, !llvm.loop !312

if.end:                                           ; preds = %for.end48, %for.end
  %score.2 = phi i32 [ %call16, %for.end ], [ %call54, %for.end48 ]
  %cmp58 = icmp eq i32 %score.2, -939524096
  br i1 %cmp58, label %if.then59, label %if.end60

if.then59:                                        ; preds = %for.cond30.preheader, %for.cond.preheader, %if.end
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.179, i64 0, i64 0), i64 576, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.180, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.36.215, i64 0, i64 0)) #34
  br label %if.end60

if.end60:                                         ; preds = %if.then59, %if.end
  %score.2140 = phi i32 [ -939524096, %if.then59 ], [ %score.2, %if.end ]
  ret i32 %score.2140
}

; Function Attrs: noinline nounwind optsize uwtable
define void @subvq_free(%struct.subvq_t* %s) local_unnamed_addr #0 {
entry:
  %tobool.not = icmp eq %struct.subvq_t* %s, null
  br i1 %tobool.not, label %if.end35, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %n_sv = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %s, i64 0, i32 1
  %featdim = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %s, i64 0, i32 3
  %0 = load i32, i32* %n_sv, align 8, !tbaa !256
  %cmp65 = icmp sgt i32 %0, 0
  br i1 %cmp65, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %1 = phi i32 [ %5, %for.inc ], [ %0, %for.cond.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.cond.preheader ]
  %2 = load i32**, i32*** %featdim, align 8, !tbaa !257
  %arrayidx = getelementptr inbounds i32*, i32** %2, i64 %indvars.iv
  %3 = load i32*, i32** %arrayidx, align 8, !tbaa !74
  %tobool1.not = icmp eq i32* %3, null
  br i1 %tobool1.not, label %for.inc, label %if.then2

if.then2:                                         ; preds = %for.body
  %4 = bitcast i32* %3 to i8*
  tail call void @ckd_free(i8* nonnull %4) #34
  %.pre = load i32, i32* %n_sv, align 8, !tbaa !256
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then2
  %5 = phi i32 [ %1, %for.body ], [ %.pre, %if.then2 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %6 = sext i32 %5 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !313

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  %7 = load i32**, i32*** %featdim, align 8, !tbaa !257
  %tobool7.not = icmp eq i32** %7, null
  br i1 %tobool7.not, label %if.end10, label %if.then8

if.then8:                                         ; preds = %for.end
  %8 = bitcast i32** %7 to i8*
  tail call void @ckd_free(i8* nonnull %8) #34
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %for.end
  %gautbl = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %s, i64 0, i32 4
  %9 = load %struct.vector_gautbl_t*, %struct.vector_gautbl_t** %gautbl, align 8, !tbaa !258
  %tobool11.not = icmp eq %struct.vector_gautbl_t* %9, null
  br i1 %tobool11.not, label %if.end14, label %if.then12

if.then12:                                        ; preds = %if.end10
  %10 = bitcast %struct.vector_gautbl_t* %9 to i8*
  tail call void @ckd_free(i8* nonnull %10) #34
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end10
  %map = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %s, i64 0, i32 5
  %11 = load i32***, i32**** %map, align 8, !tbaa !259
  %tobool15.not = icmp eq i32*** %11, null
  br i1 %tobool15.not, label %if.end18, label %if.then16

if.then16:                                        ; preds = %if.end14
  %12 = bitcast i32*** %11 to i8***
  tail call void @ckd_free_3d(i8*** nonnull %12) #34
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end14
  %subvec = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %s, i64 0, i32 6
  %13 = load float*, float** %subvec, align 8, !tbaa !275
  %tobool19.not = icmp eq float* %13, null
  br i1 %tobool19.not, label %if.end22, label %if.then20

if.then20:                                        ; preds = %if.end18
  %14 = bitcast float* %13 to i8*
  tail call void @ckd_free(i8* nonnull %14) #34
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end18
  %vqdist = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %s, i64 0, i32 7
  %15 = load i32**, i32*** %vqdist, align 8, !tbaa !276
  %tobool23.not = icmp eq i32** %15, null
  br i1 %tobool23.not, label %if.end26, label %if.then24

if.then24:                                        ; preds = %if.end22
  %16 = bitcast i32** %15 to i8**
  tail call void @ckd_free_2d(i8** nonnull %16) #34
  br label %if.end26

if.end26:                                         ; preds = %if.then24, %if.end22
  %gauscore = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %s, i64 0, i32 8
  %17 = load i32*, i32** %gauscore, align 8, !tbaa !277
  %tobool27.not = icmp eq i32* %17, null
  br i1 %tobool27.not, label %if.end30, label %if.then28

if.then28:                                        ; preds = %if.end26
  %18 = bitcast i32* %17 to i8*
  tail call void @ckd_free(i8* nonnull %18) #34
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %if.end26
  %mgau_sl = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %s, i64 0, i32 9
  %19 = load i32*, i32** %mgau_sl, align 8, !tbaa !278
  %tobool31.not = icmp eq i32* %19, null
  br i1 %tobool31.not, label %if.end34, label %if.then32

if.then32:                                        ; preds = %if.end30
  %20 = bitcast i32* %19 to i8*
  tail call void @ckd_free(i8* nonnull %20) #34
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.end30
  %21 = bitcast %struct.subvq_t* %s to i8*
  tail call void @ckd_free(i8* nonnull %21) #34
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %entry
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @mdef_dump(%struct._IO_FILE* nocapture %fp, %struct.mdef_t* nocapture readonly %m) local_unnamed_addr #14 {
entry:
  %buf = alloca [1024 x i8], align 16
  %0 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %0) #38
  %n_ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 0
  %1 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.216, i64 0, i64 0), i32 %1) #36
  %n_phone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 1
  %2 = load i32, i32* %n_phone, align 4, !tbaa !314
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.217, i64 0, i64 0), i32 %2) #36
  %n_emit_state = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 2
  %3 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.218, i64 0, i64 0), i32 %3) #36
  %n_ci_sen = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 3
  %4 = load i32, i32* %n_ci_sen, align 4, !tbaa !316
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.219, i64 0, i64 0), i32 %4) #36
  %n_sen = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 4
  %5 = load i32, i32* %n_sen, align 8, !tbaa !49
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.220, i64 0, i64 0), i32 %5) #36
  %n_tmat = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 5
  %6 = load i32, i32* %n_tmat, align 4, !tbaa !317
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.221, i64 0, i64 0), i32 %6) #36
  %phone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 8
  %sseq = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 9
  %cd2cisen = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 11
  %7 = load i32, i32* %n_phone, align 4, !tbaa !314
  %cmp89 = icmp sgt i32 %7, 0
  br i1 %cmp89, label %for.body, label %for.end44

for.body:                                         ; preds = %entry, %for.end39
  %indvars.iv93 = phi i64 [ %indvars.iv.next94, %for.end39 ], [ 0, %entry ]
  %8 = trunc i64 %indvars.iv93 to i32
  %call7 = call i32 @mdef_phone_str(%struct.mdef_t* nonnull %m, i32 %8, i8* nonnull %0) #36
  %9 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %ssid8 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %9, i64 %indvars.iv93, i32 0
  %10 = load i32, i32* %ssid8, align 4, !tbaa !319
  %tmat = getelementptr inbounds %struct.phone_t, %struct.phone_t* %9, i64 %indvars.iv93, i32 1
  %11 = load i32, i32* %tmat, align 4, !tbaa !321
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.222, i64 0, i64 0), i32 %11, i32 %10) #36
  %idxprom17 = sext i32 %10 to i64
  %12 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %cmp1585 = icmp sgt i32 %12, 0
  br i1 %cmp1585, label %for.body16, label %for.end

for.body16:                                       ; preds = %for.body, %for.body16
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body16 ], [ 0, %for.body ]
  %13 = load i16**, i16*** %sseq, align 8, !tbaa !322
  %arrayidx18 = getelementptr inbounds i16*, i16** %13, i64 %idxprom17
  %14 = load i16*, i16** %arrayidx18, align 8, !tbaa !74
  %arrayidx20 = getelementptr inbounds i16, i16* %14, i64 %indvars.iv
  %15 = load i16, i16* %arrayidx20, align 2, !tbaa !40
  %conv = sext i16 %15 to i32
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.223, i64 0, i64 0), i32 %conv) #36
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %16 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %17 = sext i32 %16 to i64
  %cmp15 = icmp slt i64 %indvars.iv.next, %17
  br i1 %cmp15, label %for.body16, label %for.end, !llvm.loop !323

for.end:                                          ; preds = %for.body16, %for.body
  %fputc = call i32 @fputc(i32 9, %struct._IO_FILE* %fp)
  %18 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %cmp2587 = icmp sgt i32 %18, 0
  br i1 %cmp2587, label %for.body27, label %for.end39

for.body27:                                       ; preds = %for.end, %for.body27
  %indvars.iv91 = phi i64 [ %indvars.iv.next92, %for.body27 ], [ 0, %for.end ]
  %19 = load i16*, i16** %cd2cisen, align 8, !tbaa !115
  %20 = load i16**, i16*** %sseq, align 8, !tbaa !322
  %arrayidx30 = getelementptr inbounds i16*, i16** %20, i64 %idxprom17
  %21 = load i16*, i16** %arrayidx30, align 8, !tbaa !74
  %arrayidx32 = getelementptr inbounds i16, i16* %21, i64 %indvars.iv91
  %22 = load i16, i16* %arrayidx32, align 2, !tbaa !40
  %idxprom33 = sext i16 %22 to i64
  %arrayidx34 = getelementptr inbounds i16, i16* %19, i64 %idxprom33
  %23 = load i16, i16* %arrayidx34, align 2, !tbaa !40
  %conv35 = sext i16 %23 to i32
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.224, i64 0, i64 0), i32 %conv35) #36
  %indvars.iv.next92 = add nuw nsw i64 %indvars.iv91, 1
  %24 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %25 = sext i32 %24 to i64
  %cmp25 = icmp slt i64 %indvars.iv.next92, %25
  br i1 %cmp25, label %for.body27, label %for.end39, !llvm.loop !324

for.end39:                                        ; preds = %for.body27, %for.end
  %call41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.225, i64 0, i64 0), i8* nonnull %0) #36
  %indvars.iv.next94 = add nuw nsw i64 %indvars.iv93, 1
  %26 = load i32, i32* %n_phone, align 4, !tbaa !314
  %27 = sext i32 %26 to i64
  %cmp = icmp slt i64 %indvars.iv.next94, %27
  br i1 %cmp, label %for.body, label %for.end44, !llvm.loop !325

for.end44:                                        ; preds = %for.end39, %entry
  %call45 = call i32 @fflush(%struct._IO_FILE* %fp) #36
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %0) #38
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @mdef_phone_str(%struct.mdef_t* nocapture readonly %m, i32 %pid, i8* %buf) local_unnamed_addr #14 {
entry:
  store i8 0, i8* %buf, align 1, !tbaa !63
  %n_ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 0
  %0 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp = icmp sgt i32 %0, %pid
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %conv = trunc i32 %pid to i8
  %call = tail call i8* @mdef_ciphone_str(%struct.mdef_t* nonnull %m, i8 signext %conv) #36
  %strcpy = tail call i8* @strcpy(i8* noundef nonnull %buf, i8* noundef nonnull dereferenceable(1) %call)
  br label %if.end

if.else:                                          ; preds = %entry
  %phone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 8
  %1 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %idxprom = sext i32 %pid to i64
  %ci = getelementptr inbounds %struct.phone_t, %struct.phone_t* %1, i64 %idxprom, i32 2
  %2 = load i8, i8* %ci, align 4, !tbaa !326
  %call3 = tail call i8* @mdef_ciphone_str(%struct.mdef_t* nonnull %m, i8 signext %2) #36
  %lc = getelementptr inbounds %struct.phone_t, %struct.phone_t* %1, i64 %idxprom, i32 3
  %3 = load i8, i8* %lc, align 1, !tbaa !327
  %call7 = tail call i8* @mdef_ciphone_str(%struct.mdef_t* nonnull %m, i8 signext %3) #36
  %rc = getelementptr inbounds %struct.phone_t, %struct.phone_t* %1, i64 %idxprom, i32 4
  %4 = load i8, i8* %rc, align 2, !tbaa !328
  %call11 = tail call i8* @mdef_ciphone_str(%struct.mdef_t* nonnull %m, i8 signext %4) #36
  %wpos = getelementptr inbounds %struct.phone_t, %struct.phone_t* %1, i64 %idxprom, i32 5
  %5 = load i32, i32* %wpos, align 4, !tbaa !329
  %idxprom15 = zext i32 %5 to i64
  %arrayidx16 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.11.226, i64 0, i64 %idxprom15
  %6 = load i8, i8* %arrayidx16, align 1, !tbaa !63
  %conv17 = sext i8 %6 to i32
  %call18 = tail call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %buf, i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.227, i64 0, i64 0), i8* %call3, i8* %call7, i8* %call11, i32 %conv17) #34
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define i8* @mdef_ciphone_str(%struct.mdef_t* nocapture readonly %m, i8 signext %id) local_unnamed_addr #21 {
entry:
  %ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 7
  %0 = load %struct.ciphone_t*, %struct.ciphone_t** %ciphone, align 8, !tbaa !59
  %idxprom = sext i8 %id to i64
  %name = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %0, i64 %idxprom, i32 0
  %1 = load i8*, i8** %name, align 8, !tbaa !330
  ret i8* %1
}

; Function Attrs: noinline nounwind optsize uwtable
define signext i8 @mdef_ciphone_id(%struct.mdef_t* nocapture readonly %m, i8* %ci) local_unnamed_addr #0 {
entry:
  %id = alloca i32, align 4
  %0 = bitcast i32* %id to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %ciphone_ht = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 6
  %1 = load %struct.hash_table_t*, %struct.hash_table_t** %ciphone_ht, align 8, !tbaa !331
  %call = call i32 @hash_lookup(%struct.hash_table_t* %1, i8* %ci, i32* nonnull %id) #34
  %cmp = icmp slt i32 %call, 0
  %2 = load i32, i32* %id, align 4
  %conv = trunc i32 %2 to i8
  %retval.0 = select i1 %cmp, i8 -1, i8 %conv
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret i8 %retval.0
}

; Function Attrs: nofree noinline nosync nounwind optsize readonly uwtable
define i32 @mdef_phone_id(%struct.mdef_t* nocapture readonly %m, i8 signext %ci, i8 signext %lc, i8 signext %rc, i32 %wpos) local_unnamed_addr #22 {
entry:
  %wpos_ci_lclist = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 15
  %0 = load %struct.ph_lc_s***, %struct.ph_lc_s**** %wpos_ci_lclist, align 8, !tbaa !332
  %idxprom = zext i32 %wpos to i64
  %arrayidx = getelementptr inbounds %struct.ph_lc_s**, %struct.ph_lc_s*** %0, i64 %idxprom
  %1 = load %struct.ph_lc_s**, %struct.ph_lc_s*** %arrayidx, align 8, !tbaa !74
  %idxprom1 = sext i8 %ci to i64
  %arrayidx2 = getelementptr inbounds %struct.ph_lc_s*, %struct.ph_lc_s** %1, i64 %idxprom1
  %2 = load %struct.ph_lc_s*, %struct.ph_lc_s** %arrayidx2, align 8, !tbaa !74
  %sil = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 14
  %ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 7
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.end, %entry
  %lc.tr = phi i8 [ %lc, %entry ], [ %lc., %if.end ]
  %rc.tr = phi i8 [ %rc, %entry ], [ %spec.select, %if.end ]
  %call = tail call fastcc %struct.ph_lc_s* @find_ph_lc(%struct.ph_lc_s* %2, i8 signext %lc.tr) #36
  %cmp = icmp eq %struct.ph_lc_s* %call, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %tailrecurse
  %rclist = getelementptr inbounds %struct.ph_lc_s, %struct.ph_lc_s* %call, i64 0, i32 1
  %3 = load %struct.ph_rc_s*, %struct.ph_rc_s** %rclist, align 8, !tbaa !333
  %call4 = tail call fastcc %struct.ph_rc_s* @find_ph_rc(%struct.ph_rc_s* %3, i8 signext %rc.tr) #36
  %cmp5 = icmp eq %struct.ph_rc_s* %call4, null
  br i1 %cmp5, label %if.then, label %if.end43

if.then:                                          ; preds = %lor.lhs.false, %tailrecurse
  %4 = load i8, i8* %sil, align 8, !tbaa !47
  %cmp8 = icmp slt i8 %4, 0
  br i1 %cmp8, label %cleanup, label %if.end

if.end:                                           ; preds = %if.then
  %5 = load %struct.ciphone_t*, %struct.ciphone_t** %ciphone, align 8, !tbaa !59
  %idxprom12 = sext i8 %lc.tr to i64
  %filler = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %5, i64 %idxprom12, i32 1
  %6 = load i32, i32* %filler, align 8, !tbaa !64
  %tobool.not = icmp eq i32 %6, 0
  %lc. = select i1 %tobool.not, i8 %lc.tr, i8 %4
  %idxprom20 = sext i8 %rc.tr to i64
  %filler22 = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %5, i64 %idxprom20, i32 1
  %7 = load i32, i32* %filler22, align 8, !tbaa !64
  %tobool23.not = icmp eq i32 %7, 0
  %spec.select = select i1 %tobool23.not, i8 %rc.tr, i8 %4
  %cmp34 = icmp eq i8 %lc., %lc.tr
  %cmp38 = icmp eq i8 %spec.select, %rc.tr
  %or.cond = select i1 %cmp34, i1 %cmp38, i1 false
  br i1 %or.cond, label %cleanup, label %tailrecurse

if.end43:                                         ; preds = %lor.lhs.false
  %pid = getelementptr inbounds %struct.ph_rc_s, %struct.ph_rc_s* %call4, i64 0, i32 1
  %8 = load i32, i32* %pid, align 4, !tbaa !335
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then, %if.end43
  %retval.0 = phi i32 [ %8, %if.end43 ], [ -1, %if.then ], [ -1, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define internal fastcc %struct.ph_lc_s* @find_ph_lc(%struct.ph_lc_s* readonly %lclist, i8 signext %lc) unnamed_addr #16 {
entry:
  %tobool.not8 = icmp eq %struct.ph_lc_s* %lclist, null
  br i1 %tobool.not8, label %for.end, label %land.rhs

land.rhs:                                         ; preds = %entry, %for.inc
  %lcptr.09 = phi %struct.ph_lc_s* [ %1, %for.inc ], [ %lclist, %entry ]
  %lc1 = getelementptr inbounds %struct.ph_lc_s, %struct.ph_lc_s* %lcptr.09, i64 0, i32 0
  %0 = load i8, i8* %lc1, align 8, !tbaa !337
  %cmp.not = icmp eq i8 %0, %lc
  br i1 %cmp.not, label %for.end, label %for.inc

for.inc:                                          ; preds = %land.rhs
  %next = getelementptr inbounds %struct.ph_lc_s, %struct.ph_lc_s* %lcptr.09, i64 0, i32 2
  %1 = load %struct.ph_lc_s*, %struct.ph_lc_s** %next, align 8, !tbaa !338
  %tobool.not = icmp eq %struct.ph_lc_s* %1, null
  br i1 %tobool.not, label %for.end, label %land.rhs, !llvm.loop !339

for.end:                                          ; preds = %land.rhs, %for.inc, %entry
  %lcptr.0.lcssa = phi %struct.ph_lc_s* [ null, %entry ], [ null, %for.inc ], [ %lcptr.09, %land.rhs ]
  ret %struct.ph_lc_s* %lcptr.0.lcssa
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define internal fastcc %struct.ph_rc_s* @find_ph_rc(%struct.ph_rc_s* readonly %rclist, i8 signext %rc) unnamed_addr #16 {
entry:
  %tobool.not8 = icmp eq %struct.ph_rc_s* %rclist, null
  br i1 %tobool.not8, label %for.end, label %land.rhs

land.rhs:                                         ; preds = %entry, %for.inc
  %rcptr.09 = phi %struct.ph_rc_s* [ %1, %for.inc ], [ %rclist, %entry ]
  %rc1 = getelementptr inbounds %struct.ph_rc_s, %struct.ph_rc_s* %rcptr.09, i64 0, i32 0
  %0 = load i8, i8* %rc1, align 8, !tbaa !340
  %cmp.not = icmp eq i8 %0, %rc
  br i1 %cmp.not, label %for.end, label %for.inc

for.inc:                                          ; preds = %land.rhs
  %next = getelementptr inbounds %struct.ph_rc_s, %struct.ph_rc_s* %rcptr.09, i64 0, i32 2
  %1 = load %struct.ph_rc_s*, %struct.ph_rc_s** %next, align 8, !tbaa !341
  %tobool.not = icmp eq %struct.ph_rc_s* %1, null
  br i1 %tobool.not, label %for.end, label %land.rhs, !llvm.loop !342

for.end:                                          ; preds = %land.rhs, %for.inc, %entry
  %rcptr.0.lcssa = phi %struct.ph_rc_s* [ null, %entry ], [ null, %for.inc ], [ %rcptr.09, %land.rhs ]
  ret %struct.ph_rc_s* %rcptr.0.lcssa
}

; Function Attrs: nofree noinline nosync nounwind optsize readonly uwtable
define i32 @mdef_phone_id_nearest(%struct.mdef_t* nocapture readonly %m, i8 signext %b, i8 signext %l, i8 signext %r, i32 %pos) local_unnamed_addr #22 {
entry:
  %cmp = icmp slt i8 %l, 0
  %cmp3 = icmp slt i8 %r, 0
  %or.cond = select i1 %cmp, i1 true, i1 %cmp3
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %conv5 = sext i8 %b to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call i32 @mdef_phone_id(%struct.mdef_t* %m, i8 signext %b, i8 signext %l, i8 signext %r, i32 %pos) #36
  %cmp6 = icmp sgt i32 %call, -1
  br i1 %cmp6, label %cleanup, label %for.body

for.body:                                         ; preds = %if.end, %for.inc
  %tmppos.0147 = phi i32 [ %inc, %for.inc ], [ 0, %if.end ]
  %cmp12.not = icmp eq i32 %tmppos.0147, %pos
  br i1 %cmp12.not, label %for.inc, label %if.then14

if.then14:                                        ; preds = %for.body
  %call15 = tail call i32 @mdef_phone_id(%struct.mdef_t* %m, i8 signext %b, i8 signext %l, i8 signext %r, i32 %tmppos.0147) #36
  %cmp16 = icmp sgt i32 %call15, -1
  br i1 %cmp16, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body, %if.then14
  %inc = add nuw nsw i32 %tmppos.0147, 1
  %exitcond150.not = icmp eq i32 %inc, 4
  br i1 %exitcond150.not, label %for.end, label %for.body, !llvm.loop !343

for.end:                                          ; preds = %for.inc
  %sil = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 14
  %0 = load i8, i8* %sil, align 8, !tbaa !47
  %cmp22 = icmp sgt i8 %0, -1
  br i1 %cmp22, label %if.then24, label %if.end76

if.then24:                                        ; preds = %for.end
  %ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 7
  %1 = load %struct.ciphone_t*, %struct.ciphone_t** %ciphone, align 8, !tbaa !59
  %idxprom = sext i8 %l to i64
  %filler = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %1, i64 %idxprom, i32 1
  %2 = load i32, i32* %filler, align 8, !tbaa !64
  %tobool.not = icmp eq i32 %2, 0
  %l. = select i1 %tobool.not, i8 %l, i8 %0
  %idxprom32 = sext i8 %r to i64
  %filler34 = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %1, i64 %idxprom32, i32 1
  %3 = load i32, i32* %filler34, align 8, !tbaa !64
  %tobool35.not = icmp eq i32 %3, 0
  %spec.select = select i1 %tobool35.not, i8 %r, i8 %0
  %cmp46.not = icmp eq i8 %l., %l
  %cmp51.not = icmp eq i8 %spec.select, %r
  %or.cond143 = select i1 %cmp46.not, i1 %cmp51.not, i1 false
  br i1 %or.cond143, label %if.end76, label %if.then53

if.then53:                                        ; preds = %if.then24
  %call54 = tail call i32 @mdef_phone_id(%struct.mdef_t* nonnull %m, i8 signext %b, i8 signext %l., i8 signext %spec.select, i32 %pos) #36
  %cmp55 = icmp sgt i32 %call54, -1
  br i1 %cmp55, label %cleanup, label %for.body62

for.body62:                                       ; preds = %if.then53, %for.inc72
  %tmppos.1145 = phi i32 [ %inc73, %for.inc72 ], [ 0, %if.then53 ]
  %cmp63.not = icmp eq i32 %tmppos.1145, %pos
  br i1 %cmp63.not, label %for.inc72, label %if.then65

if.then65:                                        ; preds = %for.body62
  %call66 = tail call i32 @mdef_phone_id(%struct.mdef_t* %m, i8 signext %b, i8 signext %l., i8 signext %spec.select, i32 %tmppos.1145) #36
  %cmp67 = icmp sgt i32 %call66, -1
  br i1 %cmp67, label %cleanup, label %for.inc72

for.inc72:                                        ; preds = %for.body62, %if.then65
  %inc73 = add nuw nsw i32 %tmppos.1145, 1
  %exitcond.not = icmp eq i32 %inc73, 4
  br i1 %exitcond.not, label %if.end76, label %for.body62, !llvm.loop !344

if.end76:                                         ; preds = %for.inc72, %if.then24, %for.end
  %conv87 = sext i8 %b to i32
  br label %cleanup

cleanup:                                          ; preds = %if.then14, %if.then65, %if.then53, %if.end, %if.end76, %if.then
  %retval.0 = phi i32 [ %conv5, %if.then ], [ %conv87, %if.end76 ], [ %call, %if.end ], [ %call54, %if.then53 ], [ %call66, %if.then65 ], [ %call15, %if.then14 ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn
define i32 @mdef_phone_components(%struct.mdef_t* nocapture readonly %m, i32 %p, i8* nocapture %b, i8* nocapture %l, i8* nocapture %r, i32* nocapture %pos) local_unnamed_addr #4 {
entry:
  %phone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 8
  %0 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %idxprom = sext i32 %p to i64
  %ci = getelementptr inbounds %struct.phone_t, %struct.phone_t* %0, i64 %idxprom, i32 2
  %1 = load i8, i8* %ci, align 4, !tbaa !326
  store i8 %1, i8* %b, align 1, !tbaa !63
  %2 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %lc = getelementptr inbounds %struct.phone_t, %struct.phone_t* %2, i64 %idxprom, i32 3
  %3 = load i8, i8* %lc, align 1, !tbaa !327
  store i8 %3, i8* %l, align 1, !tbaa !63
  %4 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %rc = getelementptr inbounds %struct.phone_t, %struct.phone_t* %4, i64 %idxprom, i32 4
  %5 = load i8, i8* %rc, align 2, !tbaa !328
  store i8 %5, i8* %r, align 1, !tbaa !63
  %6 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %wpos = getelementptr inbounds %struct.phone_t, %struct.phone_t* %6, i64 %idxprom, i32 5
  %7 = load i32, i32* %wpos, align 4, !tbaa !329
  store i32 %7, i32* %pos, align 4, !tbaa !63
  ret i32 0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define i32 @mdef_is_ciphone(%struct.mdef_t* nocapture readonly %m, i32 %p) local_unnamed_addr #21 {
entry:
  %n_ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 0
  %0 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp = icmp sgt i32 %0, %p
  %cond = zext i1 %cmp to i32
  ret i32 %cond
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.mdef_t* @mdef_init(i8* %mdeffile) local_unnamed_addr #0 {
entry:
  %n = alloca i32, align 4
  %tag = alloca [1024 x i8], align 16
  %buf = alloca [1024 x i8], align 16
  %0 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %tag, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %1) #38
  %2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %2) #38
  %tobool.not = icmp eq i8* %mdeffile, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 592, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16.230, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 594, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17.231, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18.232, i64 0, i64 0), i8* %mdeffile) #34
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 104, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i32 596) #34
  %3 = bitcast i8* %call to %struct.mdef_t*
  %call1 = tail call %struct._IO_FILE* @fopen(i8* %mdeffile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19.233, i64 0, i64 0)) #36
  %cmp = icmp eq %struct._IO_FILE* %call1, null
  br i1 %cmp, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 599, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20.234, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__fatal_sys_error(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21.235, i64 0, i64 0), i8* %mdeffile) #34
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %call4 = call fastcc i32 @noncomment_line(i8* nonnull %2, %struct._IO_FILE* %call1) #36
  %cmp5 = icmp slt i32 %call4, 0
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end3
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 602, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22.236, i64 0, i64 0), i8* %mdeffile) #34
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end3
  %bcmp = call i32 @bcmp(i8* noundef nonnull dereferenceable(3) %2, i8* noundef nonnull dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23.237, i64 0, i64 0), i64 3)
  %cmp10.not = icmp eq i32 %bcmp, 0
  br i1 %cmp10.not, label %if.end13, label %if.then11

if.then11:                                        ; preds = %if.end7
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 605, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.24.238, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23.237, i64 0, i64 0), i8* nonnull %2) #34
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.end7
  %n_ci_sen = getelementptr inbounds i8, i8* %call, i64 12
  %4 = bitcast i8* %n_ci_sen to i32*
  store i32 -1, i32* %4, align 4, !tbaa !316
  %n_sen = getelementptr inbounds i8, i8* %call, i64 16
  %5 = bitcast i8* %n_sen to i32*
  store i32 -1, i32* %5, align 8, !tbaa !49
  %n_tmat = getelementptr inbounds i8, i8* %call, i64 20
  %6 = bitcast i8* %n_tmat to i32*
  store i32 -1, i32* %6, align 4, !tbaa !317
  br label %do.body

do.body:                                          ; preds = %do.body.backedge, %if.end13
  %n_map.0 = phi i32 [ -1, %if.end13 ], [ %n_map.1, %do.body.backedge ]
  %n_tri.0 = phi i32 [ -1, %if.end13 ], [ %n_tri.1, %do.body.backedge ]
  %n_ci.0 = phi i32 [ -1, %if.end13 ], [ %n_ci.1, %do.body.backedge ]
  %call15 = call fastcc i32 @noncomment_line(i8* nonnull %2, %struct._IO_FILE* %call1) #36
  %cmp16 = icmp slt i32 %call15, 0
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %do.body
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 616, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25.239, i64 0, i64 0)) #34
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %do.body
  %call21 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26.240, i64 0, i64 0), i32* nonnull %n, i8* nonnull %1) #34
  %cmp22 = icmp ne i32 %call21, 2
  %7 = load i32, i32* %n, align 4
  %cmp23 = icmp slt i32 %7, 0
  %or.cond = select i1 %cmp22, i1 true, i1 %cmp23
  br i1 %or.cond, label %if.then24, label %if.end26

if.then24:                                        ; preds = %if.end18
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 619, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27.241, i64 0, i64 0), i8* nonnull %2) #34
  br label %if.end26

if.end26:                                         ; preds = %if.end18, %if.then24
  %bcmp577 = call i32 @bcmp(i8* noundef nonnull dereferenceable(7) %1, i8* noundef nonnull dereferenceable(7) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28.242, i64 0, i64 0), i64 7)
  %cmp29 = icmp eq i32 %bcmp577, 0
  br i1 %cmp29, label %if.then30, label %if.else

if.then30:                                        ; preds = %if.end26
  %8 = load i32, i32* %n, align 4, !tbaa !37
  br label %do.cond

if.else:                                          ; preds = %if.end26
  %bcmp578 = call i32 @bcmp(i8* noundef nonnull dereferenceable(6) %1, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29.243, i64 0, i64 0), i64 6)
  %cmp33 = icmp eq i32 %bcmp578, 0
  br i1 %cmp33, label %if.then34, label %if.else35

if.then34:                                        ; preds = %if.else
  %9 = load i32, i32* %n, align 4, !tbaa !37
  br label %do.cond

if.else35:                                        ; preds = %if.else
  %bcmp579 = call i32 @bcmp(i8* noundef nonnull dereferenceable(12) %1, i8* noundef nonnull dereferenceable(12) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30.244, i64 0, i64 0), i64 12)
  %cmp38 = icmp eq i32 %bcmp579, 0
  br i1 %cmp38, label %if.then39, label %if.else40

if.then39:                                        ; preds = %if.else35
  %10 = load i32, i32* %n, align 4, !tbaa !37
  br label %do.cond

if.else40:                                        ; preds = %if.else35
  %bcmp580 = call i32 @bcmp(i8* noundef nonnull dereferenceable(16) %1, i8* noundef nonnull dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31.245, i64 0, i64 0), i64 16)
  %cmp43 = icmp eq i32 %bcmp580, 0
  br i1 %cmp43, label %if.then44, label %if.else46

if.then44:                                        ; preds = %if.else40
  %11 = load i32, i32* %n, align 4, !tbaa !37
  store i32 %11, i32* %4, align 4, !tbaa !316
  br label %do.cond

if.else46:                                        ; preds = %if.else40
  %bcmp581 = call i32 @bcmp(i8* noundef nonnull dereferenceable(13) %1, i8* noundef nonnull dereferenceable(13) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32.246, i64 0, i64 0), i64 13)
  %cmp49 = icmp eq i32 %bcmp581, 0
  br i1 %cmp49, label %if.then50, label %if.else52

if.then50:                                        ; preds = %if.else46
  %12 = load i32, i32* %n, align 4, !tbaa !37
  store i32 %12, i32* %5, align 8, !tbaa !49
  br label %do.cond

if.else52:                                        ; preds = %if.else46
  %bcmp582 = call i32 @bcmp(i8* noundef nonnull dereferenceable(12) %1, i8* noundef nonnull dereferenceable(12) getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33.247, i64 0, i64 0), i64 12)
  %cmp55 = icmp eq i32 %bcmp582, 0
  br i1 %cmp55, label %if.then56, label %if.else58

if.then56:                                        ; preds = %if.else52
  %13 = load i32, i32* %n, align 4, !tbaa !37
  store i32 %13, i32* %6, align 4, !tbaa !317
  br label %do.cond

if.else58:                                        ; preds = %if.else52
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 634, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.34.248, i64 0, i64 0), i8* nonnull %2) #34
  br label %do.cond

do.cond:                                          ; preds = %if.then30, %if.then39, %if.then50, %if.else58, %if.then56, %if.then44, %if.then34
  %n_map.1 = phi i32 [ %n_map.0, %if.then30 ], [ %n_map.0, %if.then34 ], [ %10, %if.then39 ], [ %n_map.0, %if.then44 ], [ %n_map.0, %if.then50 ], [ %n_map.0, %if.then56 ], [ %n_map.0, %if.else58 ]
  %n_tri.1 = phi i32 [ %n_tri.0, %if.then30 ], [ %9, %if.then34 ], [ %n_tri.0, %if.then39 ], [ %n_tri.0, %if.then44 ], [ %n_tri.0, %if.then50 ], [ %n_tri.0, %if.then56 ], [ %n_tri.0, %if.else58 ]
  %n_ci.1 = phi i32 [ %8, %if.then30 ], [ %n_ci.0, %if.then34 ], [ %n_ci.0, %if.then39 ], [ %n_ci.0, %if.then44 ], [ %n_ci.0, %if.then50 ], [ %n_ci.0, %if.then56 ], [ %n_ci.0, %if.else58 ]
  %cmp66 = icmp slt i32 %n_ci.1, 0
  %cmp68 = icmp slt i32 %n_tri.1, 0
  %or.cond375 = select i1 %cmp66, i1 true, i1 %cmp68
  %cmp70 = icmp slt i32 %n_map.1, 0
  %or.cond376 = select i1 %or.cond375, i1 true, i1 %cmp70
  br i1 %or.cond376, label %do.body.backedge, label %lor.lhs.false71

lor.lhs.false71:                                  ; preds = %do.cond
  %14 = load i32, i32* %4, align 4, !tbaa !316
  %cmp73 = icmp slt i32 %14, 0
  br i1 %cmp73, label %do.body.backedge, label %lor.lhs.false74

lor.lhs.false74:                                  ; preds = %lor.lhs.false71
  %15 = load i32, i32* %5, align 8, !tbaa !49
  %cmp76 = icmp slt i32 %15, 0
  br i1 %cmp76, label %do.body.backedge, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false74
  %16 = load i32, i32* %6, align 4, !tbaa !317
  %cmp78 = icmp slt i32 %16, 0
  br i1 %cmp78, label %do.body.backedge, label %do.end

do.body.backedge:                                 ; preds = %lor.rhs, %lor.lhs.false74, %lor.lhs.false71, %do.cond
  br label %do.body, !llvm.loop !345

do.end:                                           ; preds = %lor.rhs
  %cmp79 = icmp eq i32 %n_ci.1, 0
  %cmp82 = icmp eq i32 %14, 0
  %or.cond583 = select i1 %cmp79, i1 true, i1 %cmp82
  %cmp85 = icmp eq i32 %16, 0
  %or.cond584 = select i1 %or.cond583, i1 true, i1 %cmp85
  %cmp89 = icmp sgt i32 %14, %15
  %or.cond585 = select i1 %or.cond584, i1 true, i1 %cmp89
  br i1 %or.cond585, label %if.then90, label %if.end91

if.then90:                                        ; preds = %do.end
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 639, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35.249, i64 0, i64 0), i8* %mdeffile) #34
  br label %if.end91

if.end91:                                         ; preds = %do.end, %if.then90
  %cmp92 = icmp sgt i32 %n_ci.1, 126
  br i1 %cmp92, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.end91
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 643, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36.250, i64 0, i64 0), i8* %mdeffile, i32 %n_ci.1, i32 127) #34
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %if.end91
  %add = add nuw nsw i32 %n_ci.1, %n_tri.1
  %cmp95 = icmp sgt i32 %add, 2147483645
  br i1 %cmp95, label %if.then96, label %if.end98

if.then96:                                        ; preds = %if.end94
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 645, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.37.251, i64 0, i64 0), i8* %mdeffile, i32 %add, i32 2147483646) #34
  br label %if.end98

if.end98:                                         ; preds = %if.then96, %if.end94
  %17 = load i32, i32* %5, align 8, !tbaa !49
  %cmp100 = icmp sgt i32 %17, 32765
  br i1 %cmp100, label %if.then101, label %if.end103

if.then101:                                       ; preds = %if.end98
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 647, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  %18 = load i32, i32* %5, align 8, !tbaa !49
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.38.252, i64 0, i64 0), i8* %mdeffile, i32 %18, i32 32766) #34
  br label %if.end103

if.end103:                                        ; preds = %if.then101, %if.end98
  %19 = load i32, i32* %6, align 4, !tbaa !317
  %cmp105 = icmp sgt i32 %19, 2147483645
  br i1 %cmp105, label %if.then106, label %if.end108

if.then106:                                       ; preds = %if.end103
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 649, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  %20 = load i32, i32* %6, align 4, !tbaa !317
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.39.253, i64 0, i64 0), i8* %mdeffile, i32 %20, i32 2147483646) #34
  br label %if.end108

if.end108:                                        ; preds = %if.then106, %if.end103
  %div586 = udiv i32 %n_map.1, %add
  %sub = add nsw i32 %div586, -1
  %n_emit_state = getelementptr inbounds i8, i8* %call, i64 8
  %21 = bitcast i8* %n_emit_state to i32*
  store i32 %sub, i32* %21, align 8, !tbaa !315
  %mul = mul nsw i32 %div586, %add
  %cmp113.not = icmp eq i32 %mul, %n_map.1
  br i1 %cmp113.not, label %if.end115, label %if.then114

if.then114:                                       ; preds = %if.end108
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 653, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.40.254, i64 0, i64 0)) #34
  br label %if.end115

if.end115:                                        ; preds = %if.then114, %if.end108
  %n_ciphone = bitcast i8* %call to i32*
  store i32 %n_ci.1, i32* %n_ciphone, align 8, !tbaa !57
  %call116 = call %struct.hash_table_t* @hash_new(i32 %n_ci.1, i32 1) #34
  %ciphone_ht = getelementptr inbounds i8, i8* %call, i64 24
  %22 = bitcast i8* %ciphone_ht to %struct.hash_table_t**
  store %struct.hash_table_t* %call116, %struct.hash_table_t** %22, align 8, !tbaa !331
  %conv587 = zext i32 %n_ci.1 to i64
  %call117 = call i8* @__ckd_calloc__(i64 %conv587, i64 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i32 658) #34
  %ciphone = getelementptr inbounds i8, i8* %call, i64 32
  %23 = bitcast i8* %ciphone to i8**
  store i8* %call117, i8** %23, align 8, !tbaa !59
  %n_phone = getelementptr inbounds i8, i8* %call, i64 4
  %24 = bitcast i8* %n_phone to i32*
  store i32 %add, i32* %24, align 4, !tbaa !314
  %conv120588 = zext i32 %add to i64
  %call121 = call i8* @__ckd_calloc__(i64 %conv120588, i64 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i32 666) #34
  %phone = getelementptr inbounds i8, i8* %call, i64 40
  %25 = bitcast i8* %phone to %struct.phone_t**
  %26 = bitcast i8* %phone to i8**
  store i8* %call121, i8** %26, align 8, !tbaa !318
  %27 = load i32, i32* %24, align 4, !tbaa !314
  %28 = load i32, i32* %21, align 8, !tbaa !315
  %call124 = call i8** @__ckd_calloc_2d__(i32 %27, i32 %28, i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i32 669) #34
  %sseq = getelementptr inbounds i8, i8* %call, i64 48
  %29 = bitcast i8* %sseq to i16***
  %30 = bitcast i8* %sseq to i8***
  store i8** %call124, i8*** %30, align 8, !tbaa !322
  %31 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %call126 = call i8** @__ckd_calloc_2d__(i32 4, i32 %31, i32 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i32 673) #34
  %wpos_ci_lclist = getelementptr inbounds i8, i8* %call, i64 96
  %32 = bitcast i8* %wpos_ci_lclist to i8***
  store i8** %call126, i8*** %32, align 8, !tbaa !332
  %cmp127617 = icmp sgt i32 %n_ci.1, 0
  br i1 %cmp127617, label %for.body, label %for.end

for.body:                                         ; preds = %if.end115, %if.end134
  %p.0618 = phi i32 [ %inc, %if.end134 ], [ 0, %if.end115 ]
  %call130 = call fastcc i32 @noncomment_line(i8* nonnull %2, %struct._IO_FILE* %call1) #36
  %cmp131 = icmp slt i32 %call130, 0
  br i1 %cmp131, label %if.then133, label %if.end134

if.then133:                                       ; preds = %for.body
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 683, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41.255, i64 0, i64 0), i32 %p.0618) #34
  br label %if.end134

if.end134:                                        ; preds = %if.then133, %for.body
  call fastcc void @parse_base_line(%struct.mdef_t* %3, i8* nonnull %2, i32 %p.0618) #36
  %inc = add nuw nsw i32 %p.0618, 1
  %exitcond638.not = icmp eq i32 %inc, %n_ci.1
  br i1 %exitcond638.not, label %for.end, label %for.body, !llvm.loop !346

for.end:                                          ; preds = %if.end134, %if.end115
  %call136 = call signext i8 @mdef_ciphone_id(%struct.mdef_t* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42.256, i64 0, i64 0)) #36
  %33 = getelementptr inbounds i8, i8* %call, i64 88
  store i8 %call136, i8* %33, align 8, !tbaa !47
  %34 = load i32, i32* %24, align 4, !tbaa !314
  %cmp139614 = icmp slt i32 %n_ci.1, %34
  br i1 %cmp139614, label %for.body141, label %for.end151

for.body141:                                      ; preds = %for.end, %if.end147
  %p.1615 = phi i32 [ %inc150, %if.end147 ], [ %n_ci.1, %for.end ]
  %call143 = call fastcc i32 @noncomment_line(i8* nonnull %2, %struct._IO_FILE* %call1) #36
  %cmp144 = icmp slt i32 %call143, 0
  br i1 %cmp144, label %if.then146, label %if.end147

if.then146:                                       ; preds = %for.body141
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 691, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.43.257, i64 0, i64 0), i32 %p.1615) #34
  br label %if.end147

if.end147:                                        ; preds = %if.then146, %for.body141
  call fastcc void @parse_tri_line(%struct.mdef_t* nonnull %3, i8* nonnull %2, i32 %p.1615) #36
  %inc150 = add nuw nsw i32 %p.1615, 1
  %35 = load i32, i32* %24, align 4, !tbaa !314
  %cmp139 = icmp slt i32 %inc150, %35
  br i1 %cmp139, label %for.body141, label %for.end151, !llvm.loop !347

for.end151:                                       ; preds = %if.end147, %for.end
  %call153 = call fastcc i32 @noncomment_line(i8* nonnull %2, %struct._IO_FILE* %call1) #36
  %cmp154 = icmp sgt i32 %call153, -1
  br i1 %cmp154, label %if.then156, label %if.end158

if.then156:                                       ; preds = %for.end151
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 696, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44.258, i64 0, i64 0)) #34
  %36 = load i32, i32* %24, align 4, !tbaa !314
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.45.259, i64 0, i64 0), i32 %36) #34
  br label %if.end158

if.end158:                                        ; preds = %if.then156, %for.end151
  %37 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %38 = load i32, i32* %21, align 8, !tbaa !315
  %mul161 = mul nsw i32 %38, %37
  %39 = load i32, i32* %4, align 4, !tbaa !316
  %cmp163.not = icmp eq i32 %mul161, %39
  br i1 %cmp163.not, label %if.end169, label %if.then165

if.then165:                                       ; preds = %if.end158
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 700, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  %40 = load i32, i32* %4, align 4, !tbaa !316
  %41 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %42 = load i32, i32* %21, align 8, !tbaa !315
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.46.260, i64 0, i64 0), i32 %40, i32 %41, i32 %42) #34
  br label %if.end169

if.end169:                                        ; preds = %if.then165, %if.end158
  %43 = load i32, i32* %5, align 8, !tbaa !49
  %conv171 = sext i32 %43 to i64
  %call172 = call i8* @__ckd_calloc__(i64 %conv171, i64 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i32 702) #34
  %cd2cisen = getelementptr inbounds i8, i8* %call, i64 64
  %44 = bitcast i8* %cd2cisen to i16**
  %45 = bitcast i8* %cd2cisen to i8**
  store i8* %call172, i8** %45, align 8, !tbaa !115
  %46 = load i32, i32* %5, align 8, !tbaa !49
  %conv174 = sext i32 %46 to i64
  %call175 = call i8* @__ckd_calloc__(i64 %conv174, i64 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i32 704) #34
  %sen2cimap = getelementptr inbounds i8, i8* %call, i64 72
  %47 = bitcast i8* %sen2cimap to i8**
  store i8* %call175, i8** %47, align 8, !tbaa !348
  %48 = load i32, i32* %5, align 8, !tbaa !49
  %cmp178612 = icmp sgt i32 %48, 0
  br i1 %cmp178612, label %for.body180.preheader, label %for.cond185.preheader

for.body180.preheader:                            ; preds = %if.end169
  store i8 -1, i8* %call175, align 1, !tbaa !63
  %49 = load i32, i32* %5, align 8, !tbaa !49
  %cmp178660 = icmp sgt i32 %49, 1
  br i1 %cmp178660, label %for.body180.for.body180_crit_edge, label %for.cond185.preheader, !llvm.loop !349

for.cond185.preheader:                            ; preds = %for.body180.for.body180_crit_edge, %for.body180.preheader, %if.end169
  %50 = load i32, i32* %4, align 4, !tbaa !316
  %cmp187610 = icmp sgt i32 %50, 0
  br i1 %cmp187610, label %for.body189, label %for.cond203.preheader

for.body180.for.body180_crit_edge:                ; preds = %for.body180.preheader, %for.body180.for.body180_crit_edge
  %indvars.iv.next637661 = phi i64 [ %indvars.iv.next637, %for.body180.for.body180_crit_edge ], [ 1, %for.body180.preheader ]
  %.pre = load i8*, i8** %47, align 8, !tbaa !348
  %arrayidx = getelementptr inbounds i8, i8* %.pre, i64 %indvars.iv.next637661
  store i8 -1, i8* %arrayidx, align 1, !tbaa !63
  %indvars.iv.next637 = add nuw nsw i64 %indvars.iv.next637661, 1
  %51 = load i32, i32* %5, align 8, !tbaa !49
  %52 = sext i32 %51 to i64
  %cmp178 = icmp slt i64 %indvars.iv.next637, %52
  br i1 %cmp178, label %for.body180.for.body180_crit_edge, label %for.cond185.preheader, !llvm.loop !349

for.cond203.preheader:                            ; preds = %for.body189, %for.cond185.preheader
  %53 = load i32, i32* %24, align 4, !tbaa !314
  %cmp205608 = icmp slt i32 %n_ci.1, %53
  br i1 %cmp205608, label %for.cond208.preheader.preheader, label %for.end246

for.cond208.preheader.preheader:                  ; preds = %for.cond203.preheader
  %54 = sext i32 %n_ci.1 to i64
  %.pre639 = load i32, i32* %21, align 8, !tbaa !315
  br label %for.cond208.preheader

for.body189:                                      ; preds = %for.cond185.preheader, %for.body189
  %indvars.iv634 = phi i64 [ %indvars.iv.next635, %for.body189 ], [ 0, %for.cond185.preheader ]
  %55 = trunc i64 %indvars.iv634 to i32
  %conv190 = trunc i64 %indvars.iv634 to i16
  %56 = load i16*, i16** %44, align 8, !tbaa !115
  %arrayidx193 = getelementptr inbounds i16, i16* %56, i64 %indvars.iv634
  store i16 %conv190, i16* %arrayidx193, align 2, !tbaa !40
  %57 = load i32, i32* %21, align 8, !tbaa !315
  %div195 = sdiv i32 %55, %57
  %conv196 = trunc i32 %div195 to i8
  %58 = load i8*, i8** %47, align 8, !tbaa !348
  %arrayidx199 = getelementptr inbounds i8, i8* %58, i64 %indvars.iv634
  store i8 %conv196, i8* %arrayidx199, align 1, !tbaa !63
  %indvars.iv.next635 = add nuw nsw i64 %indvars.iv634, 1
  %59 = load i32, i32* %4, align 4, !tbaa !316
  %60 = sext i32 %59 to i64
  %cmp187 = icmp slt i64 %indvars.iv.next635, %60
  br i1 %cmp187, label %for.body189, label %for.cond203.preheader, !llvm.loop !350

for.cond208.preheader:                            ; preds = %for.cond208.preheader.preheader, %for.inc244
  %61 = phi i32 [ %53, %for.cond208.preheader.preheader ], [ %74, %for.inc244 ]
  %62 = phi i32 [ %.pre639, %for.cond208.preheader.preheader ], [ %75, %for.inc244 ]
  %indvars.iv632 = phi i64 [ %54, %for.cond208.preheader.preheader ], [ %indvars.iv.next633, %for.inc244 ]
  %cmp210606 = icmp sgt i32 %62, 0
  br i1 %cmp210606, label %for.body212, label %for.inc244

for.body212:                                      ; preds = %for.cond208.preheader, %for.body212
  %indvars.iv630 = phi i64 [ %indvars.iv.next631, %for.body212 ], [ 0, %for.cond208.preheader ]
  %63 = load i16**, i16*** %29, align 8, !tbaa !322
  %arrayidx215 = getelementptr inbounds i16*, i16** %63, i64 %indvars.iv632
  %64 = load i16*, i16** %arrayidx215, align 8, !tbaa !74
  %arrayidx217 = getelementptr inbounds i16, i16* %64, i64 %indvars.iv630
  %65 = load i16, i16* %arrayidx217, align 2, !tbaa !40
  %66 = load %struct.phone_t*, %struct.phone_t** %25, align 8, !tbaa !318
  %ci223 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %66, i64 %indvars.iv632, i32 2
  %67 = load i8, i8* %ci223, align 4, !tbaa !326
  %idxprom225 = sext i8 %67 to i64
  %arrayidx226 = getelementptr inbounds i16*, i16** %63, i64 %idxprom225
  %68 = load i16*, i16** %arrayidx226, align 8, !tbaa !74
  %arrayidx228 = getelementptr inbounds i16, i16* %68, i64 %indvars.iv630
  %69 = load i16, i16* %arrayidx228, align 2, !tbaa !40
  %70 = load i16*, i16** %44, align 8, !tbaa !115
  %idxprom232 = sext i16 %65 to i64
  %arrayidx233 = getelementptr inbounds i16, i16* %70, i64 %idxprom232
  store i16 %69, i16* %arrayidx233, align 2, !tbaa !40
  %71 = load i8*, i8** %47, align 8, !tbaa !348
  %arrayidx240 = getelementptr inbounds i8, i8* %71, i64 %idxprom232
  store i8 %67, i8* %arrayidx240, align 1, !tbaa !63
  %indvars.iv.next631 = add nuw nsw i64 %indvars.iv630, 1
  %72 = load i32, i32* %21, align 8, !tbaa !315
  %73 = sext i32 %72 to i64
  %cmp210 = icmp slt i64 %indvars.iv.next631, %73
  br i1 %cmp210, label %for.body212, label %for.inc244.loopexit, !llvm.loop !351

for.inc244.loopexit:                              ; preds = %for.body212
  %.pre640 = load i32, i32* %24, align 4, !tbaa !314
  br label %for.inc244

for.inc244:                                       ; preds = %for.inc244.loopexit, %for.cond208.preheader
  %74 = phi i32 [ %.pre640, %for.inc244.loopexit ], [ %61, %for.cond208.preheader ]
  %75 = phi i32 [ %72, %for.inc244.loopexit ], [ %62, %for.cond208.preheader ]
  %indvars.iv.next633 = add nsw i64 %indvars.iv632, 1
  %76 = sext i32 %74 to i64
  %cmp205 = icmp slt i64 %indvars.iv.next633, %76
  br i1 %cmp205, label %for.cond208.preheader, label %for.end246, !llvm.loop !352

for.end246:                                       ; preds = %for.inc244, %for.cond203.preheader
  %77 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %conv248 = sext i32 %77 to i64
  %call249 = call i8* @__ckd_calloc__(i64 %conv248, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i32 726) #34
  %78 = bitcast i8* %call249 to i32*
  %79 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %conv251 = sext i32 %79 to i64
  %call252 = call i8* @__ckd_calloc__(i64 %conv251, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i32 728) #34
  %80 = bitcast i8* %call252 to i32*
  %81 = load i32, i32* %4, align 4, !tbaa !316
  %82 = load i32, i32* %5, align 8, !tbaa !49
  %cmp256604 = icmp slt i32 %81, %82
  br i1 %cmp256604, label %for.body258.lr.ph, label %for.end290

for.body258.lr.ph:                                ; preds = %for.end246
  %83 = load i8*, i8** %47, align 8, !tbaa !348
  %84 = sext i32 %81 to i64
  br label %for.body258

for.body258:                                      ; preds = %for.body258.lr.ph, %for.inc288
  %85 = phi i32 [ %82, %for.body258.lr.ph ], [ %90, %for.inc288 ]
  %indvars.iv628 = phi i64 [ %84, %for.body258.lr.ph ], [ %indvars.iv.next629, %for.inc288 ]
  %arrayidx261 = getelementptr inbounds i8, i8* %83, i64 %indvars.iv628
  %86 = load i8, i8* %arrayidx261, align 1, !tbaa !63
  %cmp263 = icmp slt i8 %86, 0
  br i1 %cmp263, label %for.inc288, label %if.end266

if.end266:                                        ; preds = %for.body258
  %idxprom271589 = zext i8 %86 to i64
  %arrayidx272 = getelementptr inbounds i32, i32* %78, i64 %idxprom271589
  %87 = load i32, i32* %arrayidx272, align 4, !tbaa !37
  %tobool273.not = icmp eq i32 %87, 0
  %88 = trunc i64 %indvars.iv628 to i32
  br i1 %tobool273.not, label %if.then274, label %if.end281

if.then274:                                       ; preds = %if.end266
  store i32 %88, i32* %arrayidx272, align 4, !tbaa !37
  %.pre641 = load i8, i8* %arrayidx261, align 1, !tbaa !63
  br label %if.end281

if.end281:                                        ; preds = %if.end266, %if.then274
  %89 = phi i8 [ %.pre641, %if.then274 ], [ %86, %if.end266 ]
  %idxprom286 = sext i8 %89 to i64
  %arrayidx287 = getelementptr inbounds i32, i32* %80, i64 %idxprom286
  store i32 %88, i32* %arrayidx287, align 4, !tbaa !37
  %.pre642 = load i32, i32* %5, align 8, !tbaa !49
  br label %for.inc288

for.inc288:                                       ; preds = %for.body258, %if.end281
  %90 = phi i32 [ %85, %for.body258 ], [ %.pre642, %if.end281 ]
  %indvars.iv.next629 = add nsw i64 %indvars.iv628, 1
  %91 = sext i32 %90 to i64
  %cmp256 = icmp slt i64 %indvars.iv.next629, %91
  br i1 %cmp256, label %for.body258, label %for.end290.loopexit, !llvm.loop !353

for.end290.loopexit:                              ; preds = %for.inc288
  %.pre643 = load i32, i32* %4, align 4, !tbaa !316
  br label %for.end290

for.end290:                                       ; preds = %for.end290.loopexit, %for.end246
  %92 = phi i32 [ %90, %for.end290.loopexit ], [ %82, %for.end246 ]
  %93 = phi i32 [ %.pre643, %for.end290.loopexit ], [ %81, %for.end246 ]
  %cmp294599 = icmp slt i32 %93, %92
  br i1 %cmp294599, label %for.body296.preheader, label %for.end334

for.body296.preheader:                            ; preds = %for.end290
  %94 = sext i32 %93 to i64
  br label %for.body296

for.body296:                                      ; preds = %for.body296.preheader, %for.inc332
  %95 = phi i32 [ %92, %for.body296.preheader ], [ %107, %for.inc332 ]
  %indvars.iv626 = phi i64 [ %94, %for.body296.preheader ], [ %indvars.iv.next627, %for.inc332 ]
  %96 = load i8*, i8** %47, align 8, !tbaa !348
  %arrayidx299 = getelementptr inbounds i8, i8* %96, i64 %indvars.iv626
  %97 = load i8, i8* %arrayidx299, align 1, !tbaa !63
  %cmp301 = icmp sgt i8 %97, -1
  br i1 %cmp301, label %for.inc332, label %for.cond305.preheader

for.cond305.preheader:                            ; preds = %for.body296
  %98 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp307596 = icmp sgt i32 %98, 0
  br i1 %cmp307596, label %for.body309.preheader, label %if.then326

for.body309.preheader:                            ; preds = %for.cond305.preheader
  %99 = trunc i32 %98 to i8
  %wide.trip.count = zext i32 %98 to i64
  br label %for.body309

for.body309:                                      ; preds = %for.body309.preheader, %for.inc320
  %indvars.iv624 = phi i64 [ 0, %for.body309.preheader ], [ %indvars.iv.next625, %for.inc320 ]
  %arrayidx311 = getelementptr inbounds i32, i32* %78, i64 %indvars.iv624
  %100 = load i32, i32* %arrayidx311, align 4, !tbaa !37
  %101 = sext i32 %100 to i64
  %cmp312 = icmp sgt i64 %indvars.iv626, %101
  br i1 %cmp312, label %land.lhs.true, label %for.inc320

land.lhs.true:                                    ; preds = %for.body309
  %arrayidx315 = getelementptr inbounds i32, i32* %80, i64 %indvars.iv624
  %102 = load i32, i32* %arrayidx315, align 4, !tbaa !37
  %103 = sext i32 %102 to i64
  %cmp316 = icmp slt i64 %indvars.iv626, %103
  br i1 %cmp316, label %if.end327.loopexit, label %for.inc320

for.inc320:                                       ; preds = %for.body309, %land.lhs.true
  %indvars.iv.next625 = add nuw nsw i64 %indvars.iv624, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next625, %wide.trip.count
  br i1 %exitcond.not, label %if.then326, label %for.body309, !llvm.loop !354

if.then326:                                       ; preds = %for.inc320, %for.cond305.preheader
  %p.3.lcssa = phi i8 [ 0, %for.cond305.preheader ], [ %99, %for.inc320 ]
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 750, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  %104 = trunc i64 %indvars.iv626 to i32
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.47.261, i64 0, i64 0), i32 %104) #34
  %.pre644 = load i8*, i8** %47, align 8, !tbaa !348
  br label %if.end327

if.end327.loopexit:                               ; preds = %land.lhs.true
  %105 = trunc i64 %indvars.iv624 to i8
  br label %if.end327

if.end327:                                        ; preds = %if.end327.loopexit, %if.then326
  %106 = phi i8* [ %.pre644, %if.then326 ], [ %96, %if.end327.loopexit ]
  %p.3591 = phi i8 [ %p.3.lcssa, %if.then326 ], [ %105, %if.end327.loopexit ]
  %arrayidx331 = getelementptr inbounds i8, i8* %106, i64 %indvars.iv626
  store i8 %p.3591, i8* %arrayidx331, align 1, !tbaa !63
  %.pre645 = load i32, i32* %5, align 8, !tbaa !49
  br label %for.inc332

for.inc332:                                       ; preds = %for.body296, %if.end327
  %107 = phi i32 [ %95, %for.body296 ], [ %.pre645, %if.end327 ]
  %indvars.iv.next627 = add nsw i64 %indvars.iv626, 1
  %108 = sext i32 %107 to i64
  %cmp294 = icmp slt i64 %indvars.iv.next627, %108
  br i1 %cmp294, label %for.body296, label %for.end334, !llvm.loop !355

for.end334:                                       ; preds = %for.inc332, %for.end290
  %109 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %conv336 = sext i32 %109 to i64
  %call337 = call i8* @__ckd_calloc__(i64 %conv336, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i32 755) #34
  %ciphone2n_cd_sen = getelementptr inbounds i8, i8* %call, i64 80
  %110 = bitcast i8* %ciphone2n_cd_sen to i8**
  store i8* %call337, i8** %110, align 8, !tbaa !356
  store i32 0, i32* %n, align 4, !tbaa !37
  %111 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp340594 = icmp sgt i32 %111, 0
  %112 = bitcast i8* %call337 to i32*
  br i1 %cmp340594, label %for.body342, label %for.end364

for.body342:                                      ; preds = %for.end334, %for.inc362
  %113 = phi i32 [ %118, %for.inc362 ], [ 0, %for.end334 ]
  %114 = phi i32 [ %119, %for.inc362 ], [ %111, %for.end334 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc362 ], [ 0, %for.end334 ]
  %arrayidx344 = getelementptr inbounds i32, i32* %78, i64 %indvars.iv
  %115 = load i32, i32* %arrayidx344, align 4, !tbaa !37
  %cmp345 = icmp sgt i32 %115, 0
  br i1 %cmp345, label %if.then347, label %for.inc362

if.then347:                                       ; preds = %for.body342
  %arrayidx349 = getelementptr inbounds i32, i32* %80, i64 %indvars.iv
  %116 = load i32, i32* %arrayidx349, align 4, !tbaa !37
  %sub352 = sub nsw i32 %116, %115
  %add353 = add nsw i32 %sub352, 1
  %arrayidx356 = getelementptr inbounds i32, i32* %112, i64 %indvars.iv
  store i32 %add353, i32* %arrayidx356, align 4, !tbaa !37
  %117 = load i32, i32* %n, align 4, !tbaa !37
  %add360 = add nsw i32 %117, %add353
  store i32 %add360, i32* %n, align 4, !tbaa !37
  %.pre646 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  br label %for.inc362

for.inc362:                                       ; preds = %for.body342, %if.then347
  %118 = phi i32 [ %113, %for.body342 ], [ %add360, %if.then347 ]
  %119 = phi i32 [ %114, %for.body342 ], [ %.pre646, %if.then347 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %120 = sext i32 %119 to i64
  %cmp340 = icmp slt i64 %indvars.iv.next, %120
  br i1 %cmp340, label %for.body342, label %for.end364, !llvm.loop !357

for.end364:                                       ; preds = %for.inc362, %for.end334
  %121 = phi i32 [ 0, %for.end334 ], [ %118, %for.inc362 ]
  %122 = load i32, i32* %4, align 4, !tbaa !316
  %add366 = add nsw i32 %121, %122
  store i32 %add366, i32* %n, align 4, !tbaa !37
  call void @ckd_free(i8* %call249) #34
  call void @ckd_free(i8* %call252) #34
  call fastcc void @sseq_compress(%struct.mdef_t* nonnull %3) #36
  call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 771, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17.231, i64 0, i64 0)) #34
  %123 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %124 = load i32, i32* %24, align 4, !tbaa !314
  %sub370 = sub nsw i32 %124, %123
  %125 = load i32, i32* %21, align 8, !tbaa !315
  %126 = load i32, i32* %4, align 4, !tbaa !316
  %127 = load i32, i32* %5, align 8, !tbaa !49
  %n_sseq = getelementptr inbounds i8, i8* %call, i64 56
  %128 = bitcast i8* %n_sseq to i32*
  %129 = load i32, i32* %128, align 8, !tbaa !52
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.48.262, i64 0, i64 0), i32 %123, i32 %sub370, i32 %125, i32 %126, i32 %127, i32 %129) #34
  %call374 = call i32 @fclose(%struct._IO_FILE* %call1) #36
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %2) #38
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret %struct.mdef_t* %3
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define internal fastcc i32 @noncomment_line(i8* %line, %struct._IO_FILE* nocapture %fp) unnamed_addr #14 {
entry:
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %call = tail call i8* @fgets(i8* %line, i32 1024, %struct._IO_FILE* %fp) #36
  %cmp.not = icmp eq i8* %call, null
  br i1 %cmp.not, label %return, label %while.body

while.body:                                       ; preds = %while.cond
  %0 = load i8, i8* %line, align 1, !tbaa !63
  %cmp1.not = icmp eq i8 %0, 35
  br i1 %cmp1.not, label %while.cond, label %return, !llvm.loop !358

return:                                           ; preds = %while.cond, %while.body
  %retval.0 = phi i32 [ 0, %while.body ], [ -1, %while.cond ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #23

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @parse_base_line(%struct.mdef_t* nocapture readonly %m, i8* %line, i32 %p) unnamed_addr #0 {
entry:
  %wlen = alloca i32, align 4
  %word = alloca [1024 x i8], align 16
  %0 = bitcast i32* %wlen to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %word, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %1) #38
  %call = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %line, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49.263, i64 0, i64 0), i8* nonnull %1, i32* nonnull %wlen) #34
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 421, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50.264, i64 0, i64 0), i8* %line) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %wlen, align 4, !tbaa !37
  %idx.ext = sext i32 %2 to i64
  %add.ptr = getelementptr inbounds i8, i8* %line, i64 %idx.ext
  %call2 = call signext i8 @mdef_ciphone_id(%struct.mdef_t* %m, i8* nonnull %1) #36
  %cmp3 = icmp sgt i8 %call2, -1
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 427, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.51.284, i64 0, i64 0), i8* %line) #34
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end
  call fastcc void @ciphone_add(%struct.mdef_t* %m, i8* nonnull %1, i32 %p) #36
  %3 = bitcast [1024 x i8]* %word to i16*
  br label %for.body

for.body:                                         ; preds = %if.end6, %if.end20
  %lp.084 = phi i8* [ %add.ptr, %if.end6 ], [ %add.ptr22, %if.end20 ]
  %n.083 = phi i32 [ 0, %if.end6 ], [ %inc, %if.end20 ]
  %call12 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %lp.084, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49.263, i64 0, i64 0), i8* nonnull %1, i32* nonnull %wlen) #34
  %cmp13.not = icmp eq i32 %call12, 1
  %lhsv80 = load i16, i16* %3, align 16
  %.not82 = icmp eq i16 %lhsv80, 45
  %or.cond = select i1 %cmp13.not, i1 %.not82, i1 false
  br i1 %or.cond, label %if.end20, label %if.then19

if.then19:                                        ; preds = %for.body
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 436, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.53.285, i64 0, i64 0), i8* %line) #34
  br label %if.end20

if.end20:                                         ; preds = %for.body, %if.then19
  %4 = load i32, i32* %wlen, align 4, !tbaa !37
  %idx.ext21 = sext i32 %4 to i64
  %add.ptr22 = getelementptr inbounds i8, i8* %lp.084, i64 %idx.ext21
  %inc = add nuw nsw i32 %n.083, 1
  %exitcond.not = icmp eq i32 %inc, 3
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !359

for.end:                                          ; preds = %if.end20
  %call24 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %add.ptr22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49.263, i64 0, i64 0), i8* nonnull %1, i32* nonnull %wlen) #34
  %cmp25.not = icmp eq i32 %call24, 1
  br i1 %cmp25.not, label %if.end28, label %if.then27

if.then27:                                        ; preds = %for.end
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 442, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.54.286, i64 0, i64 0), i8* %line) #34
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %for.end
  %5 = load i32, i32* %wlen, align 4, !tbaa !37
  %bcmp = call i32 @bcmp(i8* noundef nonnull dereferenceable(7) %1, i8* noundef nonnull dereferenceable(7) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55.273, i64 0, i64 0), i64 7)
  %cmp33 = icmp eq i32 %bcmp, 0
  br i1 %cmp33, label %if.then35, label %if.else

if.then35:                                        ; preds = %if.end28
  %ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 7
  %6 = load %struct.ciphone_t*, %struct.ciphone_t** %ciphone, align 8, !tbaa !59
  %sext79 = shl i32 %p, 24
  %conv36 = ashr exact i32 %sext79, 24
  %idxprom = sext i32 %conv36 to i64
  %filler = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %6, i64 %idxprom, i32 1
  store i32 1, i32* %filler, align 8, !tbaa !64
  br label %if.end49

if.else:                                          ; preds = %if.end28
  %7 = bitcast [1024 x i8]* %word to i32*
  %lhsv = load i32, i32* %7, align 16
  %.not = icmp eq i32 %lhsv, 6369134
  br i1 %.not, label %if.then41, label %if.else47

if.then41:                                        ; preds = %if.else
  %ciphone42 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 7
  %8 = load %struct.ciphone_t*, %struct.ciphone_t** %ciphone42, align 8, !tbaa !59
  %sext = shl i32 %p, 24
  %conv43 = ashr exact i32 %sext, 24
  %idxprom44 = sext i32 %conv43 to i64
  %filler46 = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %8, i64 %idxprom44, i32 1
  store i32 0, i32* %filler46, align 8, !tbaa !64
  br label %if.end49

if.else47:                                        ; preds = %if.else
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 449, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.57.274, i64 0, i64 0), i8* %line) #34
  br label %if.end49

if.end49:                                         ; preds = %if.then41, %if.else47, %if.then35
  %conv8 = trunc i32 %p to i8
  %idx.ext29 = sext i32 %5 to i64
  %add.ptr30 = getelementptr inbounds i8, i8* %add.ptr22, i64 %idx.ext29
  call fastcc void @triphone_add(%struct.mdef_t* %m, i8 signext %conv8, i8 signext -1, i8 signext -1, i32 4, i32 %p) #36
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr30 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %line to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv50 = trunc i64 %sub.ptr.sub to i32
  call fastcc void @parse_tmat_senmap(%struct.mdef_t* %m, i8* %line, i32 %conv50, i32 %p) #36
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @parse_tri_line(%struct.mdef_t* nocapture readonly %m, i8* %line, i32 %p) unnamed_addr #0 {
entry:
  %wlen = alloca i32, align 4
  %word = alloca [1024 x i8], align 16
  %0 = bitcast i32* %wlen to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %word, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %1) #38
  %call = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %line, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49.263, i64 0, i64 0), i8* nonnull %1, i32* nonnull %wlen) #34
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 469, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50.264, i64 0, i64 0), i8* %line) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %wlen, align 4, !tbaa !37
  %idx.ext = sext i32 %2 to i64
  %add.ptr = getelementptr inbounds i8, i8* %line, i64 %idx.ext
  %call2 = call signext i8 @mdef_ciphone_id(%struct.mdef_t* %m, i8* nonnull %1) #36
  %cmp3 = icmp slt i8 %call2, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 474, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.69.265, i64 0, i64 0), i8* %line) #34
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end
  %call8 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49.263, i64 0, i64 0), i8* nonnull %1, i32* nonnull %wlen) #34
  %cmp9.not = icmp eq i32 %call8, 1
  br i1 %cmp9.not, label %if.end12, label %if.then11

if.then11:                                        ; preds = %if.end6
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 478, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.70.266, i64 0, i64 0), i8* %line) #34
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.end6
  %3 = load i32, i32* %wlen, align 4, !tbaa !37
  %idx.ext13 = sext i32 %3 to i64
  %add.ptr14 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext13
  %call16 = call signext i8 @mdef_ciphone_id(%struct.mdef_t* %m, i8* nonnull %1) #36
  %cmp18 = icmp slt i8 %call16, 0
  br i1 %cmp18, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end12
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 482, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71.267, i64 0, i64 0), i8* %line) #34
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %if.end12
  %call23 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %add.ptr14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49.263, i64 0, i64 0), i8* nonnull %1, i32* nonnull %wlen) #34
  %cmp24.not = icmp eq i32 %call23, 1
  br i1 %cmp24.not, label %if.end27, label %if.then26

if.then26:                                        ; preds = %if.end21
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 486, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.72.268, i64 0, i64 0), i8* %line) #34
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %if.end21
  %4 = load i32, i32* %wlen, align 4, !tbaa !37
  %idx.ext28 = sext i32 %4 to i64
  %add.ptr29 = getelementptr inbounds i8, i8* %add.ptr14, i64 %idx.ext28
  %call31 = call signext i8 @mdef_ciphone_id(%struct.mdef_t* %m, i8* nonnull %1) #36
  %cmp33 = icmp slt i8 %call31, 0
  br i1 %cmp33, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end27
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 490, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73.269, i64 0, i64 0), i8* %line) #34
  br label %if.end36

if.end36:                                         ; preds = %if.then35, %if.end27
  %call38 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %add.ptr29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49.263, i64 0, i64 0), i8* nonnull %1, i32* nonnull %wlen) #34
  %cmp39.not = icmp eq i32 %call38, 1
  br i1 %cmp39.not, label %lor.lhs.false, label %if.then44

lor.lhs.false:                                    ; preds = %if.end36
  %arrayidx = getelementptr inbounds [1024 x i8], [1024 x i8]* %word, i64 0, i64 1
  %5 = load i8, i8* %arrayidx, align 1, !tbaa !63
  %cmp42.not = icmp eq i8 %5, 0
  br i1 %cmp42.not, label %if.end45, label %if.then44

if.then44:                                        ; preds = %lor.lhs.false, %if.end36
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 494, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.74.270, i64 0, i64 0), i8* %line) #34
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %lor.lhs.false
  %6 = load i32, i32* %wlen, align 4, !tbaa !37
  %idx.ext46 = sext i32 %6 to i64
  %add.ptr47 = getelementptr inbounds i8, i8* %add.ptr29, i64 %idx.ext46
  %7 = load i8, i8* %1, align 16, !tbaa !63
  %conv49 = sext i8 %7 to i32
  switch i32 %conv49, label %sw.default [
    i32 98, label %sw.epilog
    i32 101, label %sw.bb50
    i32 115, label %sw.bb51
    i32 105, label %sw.bb52
  ]

sw.bb50:                                          ; preds = %if.end45
  br label %sw.epilog

sw.bb51:                                          ; preds = %if.end45
  br label %sw.epilog

sw.bb52:                                          ; preds = %if.end45
  br label %sw.epilog

sw.default:                                       ; preds = %if.end45
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 501, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.75.271, i64 0, i64 0), i8* %line) #34
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end45, %sw.default, %sw.bb52, %sw.bb51, %sw.bb50
  %wpos.0 = phi i32 [ 0, %sw.default ], [ 3, %sw.bb52 ], [ 2, %sw.bb51 ], [ 1, %sw.bb50 ], [ 0, %if.end45 ]
  %call54 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %add.ptr47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49.263, i64 0, i64 0), i8* nonnull %1, i32* nonnull %wlen) #34
  %cmp55.not = icmp eq i32 %call54, 1
  br i1 %cmp55.not, label %if.end58, label %if.then57

if.then57:                                        ; preds = %sw.epilog
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 506, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.76.272, i64 0, i64 0), i8* %line) #34
  br label %if.end58

if.end58:                                         ; preds = %if.then57, %sw.epilog
  %8 = load i32, i32* %wlen, align 4, !tbaa !37
  %bcmp = call i32 @bcmp(i8* noundef nonnull dereferenceable(7) %1, i8* noundef nonnull dereferenceable(7) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55.273, i64 0, i64 0), i64 7)
  %cmp63 = icmp eq i32 %bcmp, 0
  br i1 %cmp63, label %land.lhs.true, label %lor.lhs.false67

land.lhs.true:                                    ; preds = %if.end58
  %ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 7
  %9 = load %struct.ciphone_t*, %struct.ciphone_t** %ciphone, align 8, !tbaa !59
  %idxprom = sext i8 %call2 to i64
  %filler = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %9, i64 %idxprom, i32 1
  %10 = load i32, i32* %filler, align 8, !tbaa !64
  %tobool.not = icmp eq i32 %10, 0
  br i1 %tobool.not, label %lor.lhs.false67, label %if.end80

lor.lhs.false67:                                  ; preds = %land.lhs.true, %if.end58
  %11 = bitcast [1024 x i8]* %word to i32*
  %lhsv = load i32, i32* %11, align 16
  %.not = icmp eq i32 %lhsv, 6369134
  br i1 %.not, label %land.lhs.true72, label %if.else

land.lhs.true72:                                  ; preds = %lor.lhs.false67
  %ciphone73 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 7
  %12 = load %struct.ciphone_t*, %struct.ciphone_t** %ciphone73, align 8, !tbaa !59
  %idxprom75 = sext i8 %call2 to i64
  %filler77 = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %12, i64 %idxprom75, i32 1
  %13 = load i32, i32* %filler77, align 8, !tbaa !64
  %tobool78.not = icmp eq i32 %13, 0
  br i1 %tobool78.not, label %if.end80, label %if.else

if.else:                                          ; preds = %land.lhs.true72, %lor.lhs.false67
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 512, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.57.274, i64 0, i64 0), i8* %line) #34
  br label %if.end80

if.end80:                                         ; preds = %land.lhs.true, %land.lhs.true72, %if.else
  %idx.ext59 = sext i32 %8 to i64
  %add.ptr60 = getelementptr inbounds i8, i8* %add.ptr47, i64 %idx.ext59
  call fastcc void @triphone_add(%struct.mdef_t* %m, i8 signext %call2, i8 signext %call16, i8 signext %call31, i32 %wpos.0, i32 %p) #36
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr60 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %line to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv81 = trunc i64 %sub.ptr.sub to i32
  call fastcc void @parse_tmat_senmap(%struct.mdef_t* %m, i8* %line, i32 %conv81, i32 %p) #36
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @sseq_compress(%struct.mdef_t* nocapture %m) unnamed_addr #0 {
entry:
  %j = alloca i32, align 4
  %0 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %n_emit_state = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 2
  %1 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %mul = shl i32 %1, 1
  %n_phone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 1
  %2 = load i32, i32* %n_phone, align 4, !tbaa !314
  %call = tail call %struct.hash_table_t* @hash_new(i32 %2, i32 0) #34
  %sseq4 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 9
  %phone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 8
  %3 = load i32, i32* %n_phone, align 4, !tbaa !314
  %cmp58 = icmp sgt i32 %3, 0
  br i1 %cmp58, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %n_sseq.060 = phi i32 [ %spec.select, %for.body ], [ 0, %entry ]
  %4 = load i16**, i16*** %sseq4, align 8, !tbaa !322
  %arrayidx = getelementptr inbounds i16*, i16** %4, i64 %indvars.iv
  %5 = bitcast i16** %arrayidx to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !74
  %call5 = tail call i32 @hash_enter_bkey(%struct.hash_table_t* %call, i8* %6, i32 %mul, i32 %n_sseq.060) #34
  store i32 %call5, i32* %j, align 4, !tbaa !37
  %cmp6 = icmp eq i32 %call5, %n_sseq.060
  %inc = zext i1 %cmp6 to i32
  %spec.select = add nuw nsw i32 %n_sseq.060, %inc
  %7 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %ssid = getelementptr inbounds %struct.phone_t, %struct.phone_t* %7, i64 %indvars.iv, i32 0
  store i32 %call5, i32* %ssid, align 4, !tbaa !319
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %8 = load i32, i32* %n_phone, align 4, !tbaa !314
  %9 = sext i32 %8 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %9
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !360

for.end:                                          ; preds = %for.body, %entry
  %n_sseq.0.lcssa = phi i32 [ 0, %entry ], [ %spec.select, %for.body ]
  %10 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %call12 = tail call i8** @__ckd_calloc_2d__(i32 %n_sseq.0.lcssa, i32 %10, i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i32 546) #34
  %call13 = call %struct.gnode_s* @hash_tolist(%struct.hash_table_t* %call, i32* nonnull %j) #34
  %conv18 = sext i32 %mul to i64
  %tobool.not56 = icmp eq %struct.gnode_s* %call13, null
  br i1 %tobool.not56, label %for.end20, label %for.body15

for.body15:                                       ; preds = %for.end, %for.body15
  %gn.057 = phi %struct.gnode_s* [ %16, %for.body15 ], [ %call13, %for.end ]
  %11 = bitcast %struct.gnode_s* %gn.057 to %struct.hash_entry_s**
  %12 = load %struct.hash_entry_s*, %struct.hash_entry_s** %11, align 8, !tbaa !63
  %val = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %12, i64 0, i32 2
  %13 = load i32, i32* %val, align 4, !tbaa !361
  store i32 %13, i32* %j, align 4, !tbaa !37
  %idxprom16 = sext i32 %13 to i64
  %arrayidx1755 = getelementptr inbounds i8*, i8** %call12, i64 %idxprom16
  %14 = load i8*, i8** %arrayidx1755, align 8, !tbaa !74
  %key = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %12, i64 0, i32 0
  %15 = load i8*, i8** %key, align 8, !tbaa !363
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %14, i8* align 1 %15, i64 %conv18, i1 false)
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.057, i64 0, i32 1
  %16 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %16, null
  br i1 %tobool.not, label %for.end20, label %for.body15, !llvm.loop !366

for.end20:                                        ; preds = %for.body15, %for.end
  call void @glist_free(%struct.gnode_s* %call13) #34
  %17 = bitcast i16*** %sseq4 to i8***
  %18 = load i8**, i8*** %17, align 8, !tbaa !322
  call void @ckd_free_2d(i8** %18) #34
  store i8** %call12, i8*** %17, align 8, !tbaa !322
  %n_sseq23 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 10
  store i32 %n_sseq.0.lcssa, i32* %n_sseq23, align 8, !tbaa !52
  call void @hash_free(%struct.hash_table_t* %call) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @triphone_add(%struct.mdef_t* nocapture readonly %m, i8 signext %ci, i8 signext %lc, i8 signext %rc, i32 %wpos, i32 %p) unnamed_addr #0 {
entry:
  %buf = alloca [4096 x i8], align 16
  %phone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 8
  %0 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %idxprom = sext i32 %p to i64
  %ci1 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %0, i64 %idxprom, i32 2
  store i8 %ci, i8* %ci1, align 4, !tbaa !326
  %lc5 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %0, i64 %idxprom, i32 3
  store i8 %lc, i8* %lc5, align 1, !tbaa !327
  %rc9 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %0, i64 %idxprom, i32 4
  store i8 %rc, i8* %rc9, align 2, !tbaa !328
  %wpos13 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %0, i64 %idxprom, i32 5
  store i32 %wpos, i32* %wpos13, align 4, !tbaa !329
  %n_ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 0
  %1 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp.not = icmp sgt i32 %1, %p
  br i1 %cmp.not, label %if.end48, label %if.then

if.then:                                          ; preds = %entry
  %wpos_ci_lclist = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 15
  %2 = load %struct.ph_lc_s***, %struct.ph_lc_s**** %wpos_ci_lclist, align 8, !tbaa !332
  %idxprom14 = zext i32 %wpos to i64
  %arrayidx15 = getelementptr inbounds %struct.ph_lc_s**, %struct.ph_lc_s*** %2, i64 %idxprom14
  %3 = load %struct.ph_lc_s**, %struct.ph_lc_s*** %arrayidx15, align 8, !tbaa !74
  %idxprom16 = sext i8 %ci to i64
  %arrayidx17 = getelementptr inbounds %struct.ph_lc_s*, %struct.ph_lc_s** %3, i64 %idxprom16
  %4 = load %struct.ph_lc_s*, %struct.ph_lc_s** %arrayidx17, align 8, !tbaa !74
  %call = tail call fastcc %struct.ph_lc_s* @find_ph_lc(%struct.ph_lc_s* %4, i8 signext %lc) #36
  %cmp18 = icmp eq %struct.ph_lc_s* %call, null
  br i1 %cmp18, label %if.then20, label %if.end

if.then20:                                        ; preds = %if.then
  %call21 = tail call i8* @__ckd_calloc__(i64 1, i64 24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i32 182) #34
  %5 = bitcast i8* %call21 to %struct.ph_lc_s*
  store i8 %lc, i8* %call21, align 8, !tbaa !337
  %6 = load %struct.ph_lc_s***, %struct.ph_lc_s**** %wpos_ci_lclist, align 8, !tbaa !332
  %arrayidx25 = getelementptr inbounds %struct.ph_lc_s**, %struct.ph_lc_s*** %6, i64 %idxprom14
  %7 = load %struct.ph_lc_s**, %struct.ph_lc_s*** %arrayidx25, align 8, !tbaa !74
  %arrayidx28 = getelementptr inbounds %struct.ph_lc_s*, %struct.ph_lc_s** %7, i64 %idxprom16
  %8 = load %struct.ph_lc_s*, %struct.ph_lc_s** %arrayidx28, align 8, !tbaa !74
  %next = getelementptr inbounds i8, i8* %call21, i64 16
  %9 = bitcast i8* %next to %struct.ph_lc_s**
  store %struct.ph_lc_s* %8, %struct.ph_lc_s** %9, align 8, !tbaa !338
  %10 = load %struct.ph_lc_s**, %struct.ph_lc_s*** %arrayidx25, align 8, !tbaa !74
  %arrayidx34 = getelementptr inbounds %struct.ph_lc_s*, %struct.ph_lc_s** %10, i64 %idxprom16
  %11 = bitcast %struct.ph_lc_s** %arrayidx34 to i8**
  store i8* %call21, i8** %11, align 8, !tbaa !74
  br label %if.end

if.end:                                           ; preds = %if.then20, %if.then
  %lcptr.0 = phi %struct.ph_lc_s* [ %5, %if.then20 ], [ %call, %if.then ]
  %rclist = getelementptr inbounds %struct.ph_lc_s, %struct.ph_lc_s* %lcptr.0, i64 0, i32 1
  %12 = load %struct.ph_rc_s*, %struct.ph_rc_s** %rclist, align 8, !tbaa !333
  %call35 = tail call fastcc %struct.ph_rc_s* @find_ph_rc(%struct.ph_rc_s* %12, i8 signext %rc) #36
  %cmp36.not = icmp eq %struct.ph_rc_s* %call35, null
  br i1 %cmp36.not, label %if.end41, label %if.then38

if.then38:                                        ; preds = %if.end
  %13 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %13) #38
  %pid = getelementptr inbounds %struct.ph_rc_s, %struct.ph_rc_s* %call35, i64 0, i32 1
  %14 = load i32, i32* %pid, align 4, !tbaa !335
  %call39 = call i32 @mdef_phone_str(%struct.mdef_t* nonnull %m, i32 %14, i8* nonnull %13) #36
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 191, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.59.283, i64 0, i64 0), i8* nonnull %13) #34
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %13) #38
  br label %if.end41

if.end41:                                         ; preds = %if.then38, %if.end
  %call42 = call i8* @__ckd_calloc__(i64 1, i64 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i32 194) #34
  store i8 %rc, i8* %call42, align 8, !tbaa !340
  %pid44 = getelementptr inbounds i8, i8* %call42, i64 4
  %15 = bitcast i8* %pid44 to i32*
  store i32 %p, i32* %15, align 4, !tbaa !335
  %16 = load %struct.ph_rc_s*, %struct.ph_rc_s** %rclist, align 8, !tbaa !333
  %next46 = getelementptr inbounds i8, i8* %call42, i64 8
  %17 = bitcast i8* %next46 to %struct.ph_rc_s**
  store %struct.ph_rc_s* %16, %struct.ph_rc_s** %17, align 8, !tbaa !341
  %18 = bitcast %struct.ph_rc_s** %rclist to i8**
  store i8* %call42, i8** %18, align 8, !tbaa !333
  br label %if.end48

if.end48:                                         ; preds = %if.end41, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @parse_tmat_senmap(%struct.mdef_t* nocapture readonly %m, i8* %line, i32 %off, i32 %p) unnamed_addr #0 {
entry:
  %wlen = alloca i32, align 4
  %n = alloca i32, align 4
  %s = alloca i32, align 4
  %word = alloca [1024 x i8], align 16
  %0 = bitcast i32* %wlen to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %1 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #38
  %2 = bitcast i32* %s to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #38
  %3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %word, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %3) #38
  %idx.ext = sext i32 %off to i64
  %add.ptr = getelementptr inbounds i8, i8* %line, i64 %idx.ext
  %call = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60.275, i64 0, i64 0), i32* nonnull %n, i32* nonnull %wlen) #34
  %cmp = icmp ne i32 %call, 1
  %4 = load i32, i32* %n, align 4
  %cmp1 = icmp slt i32 %4, 0
  %or.cond = select i1 %cmp, i1 true, i1 %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 381, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.61.276, i64 0, i64 0), i8* %line) #34
  %.pre = load i32, i32* %n, align 4, !tbaa !37
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %5 = phi i32 [ %4, %entry ], [ %.pre, %if.then ]
  %phone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 8
  %6 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %idxprom = sext i32 %p to i64
  %tmat = getelementptr inbounds %struct.phone_t, %struct.phone_t* %6, i64 %idxprom, i32 1
  store i32 %5, i32* %tmat, align 4, !tbaa !321
  %n_tmat = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 5
  %7 = load i32, i32* %n_tmat, align 4, !tbaa !317
  %8 = load i32, i32* %n, align 4, !tbaa !37
  %cmp2.not = icmp sgt i32 %7, %8
  br i1 %cmp2.not, label %if.end5, label %if.then3

if.then3:                                         ; preds = %if.end
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 384, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  %9 = load i32, i32* %n, align 4, !tbaa !37
  %10 = load i32, i32* %n_tmat, align 4, !tbaa !317
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.62.277, i64 0, i64 0), i32 %9, i32 %10, i8* %line) #34
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %if.end
  %11 = load i32, i32* %wlen, align 4, !tbaa !37
  %idx.ext6 = sext i32 %11 to i64
  %add.ptr7 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext6
  %n_emit_state = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 2
  %n_ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 0
  %n_ci_sen = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 3
  %n_sen = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 4
  %sseq = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 9
  store i32 0, i32* %n, align 4, !tbaa !37
  %12 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %cmp875 = icmp sgt i32 %12, 0
  br i1 %cmp875, label %for.body, label %for.end

for.body:                                         ; preds = %if.end5, %if.end23
  %lp.076 = phi i8* [ %add.ptr29, %if.end23 ], [ %add.ptr7, %if.end5 ]
  %call9 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %lp.076, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60.275, i64 0, i64 0), i32* nonnull %s, i32* nonnull %wlen) #34
  %cmp10 = icmp ne i32 %call9, 1
  %13 = load i32, i32* %s, align 4
  %cmp12 = icmp slt i32 %13, 0
  %or.cond48 = select i1 %cmp10, i1 true, i1 %cmp12
  br i1 %or.cond48, label %if.then13, label %if.end14

if.then13:                                        ; preds = %for.body
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 390, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  %14 = load i32, i32* %n, align 4, !tbaa !37
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.63.278, i64 0, i64 0), i32 %14, i8* %line) #34
  br label %if.end14

if.end14:                                         ; preds = %for.body, %if.then13
  %15 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp15 = icmp sgt i32 %15, %p
  br i1 %cmp15, label %land.lhs.true, label %if.end19

land.lhs.true:                                    ; preds = %if.end14
  %16 = load i32, i32* %n_ci_sen, align 4, !tbaa !316
  %17 = load i32, i32* %s, align 4, !tbaa !37
  %cmp16.not = icmp sgt i32 %16, %17
  br i1 %cmp16.not, label %if.end19, label %if.then17

if.then17:                                        ; preds = %land.lhs.true
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 392, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  %18 = load i32, i32* %s, align 4, !tbaa !37
  %19 = load i32, i32* %n_ci_sen, align 4, !tbaa !316
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.64.279, i64 0, i64 0), i32 %18, i32 %19, i8* %line) #34
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %land.lhs.true, %if.end14
  %20 = load i32, i32* %n_sen, align 8, !tbaa !49
  %21 = load i32, i32* %s, align 4, !tbaa !37
  %cmp20.not = icmp sgt i32 %20, %21
  br i1 %cmp20.not, label %if.end23, label %if.then21

if.then21:                                        ; preds = %if.end19
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 394, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  %22 = load i32, i32* %s, align 4, !tbaa !37
  %23 = load i32, i32* %n_sen, align 8, !tbaa !49
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.65.280, i64 0, i64 0), i32 %22, i32 %23, i8* %line) #34
  %.pre77 = load i32, i32* %s, align 4, !tbaa !37
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %if.end19
  %24 = phi i32 [ %.pre77, %if.then21 ], [ %21, %if.end19 ]
  %conv = trunc i32 %24 to i16
  %25 = load i16**, i16*** %sseq, align 8, !tbaa !322
  %arrayidx25 = getelementptr inbounds i16*, i16** %25, i64 %idxprom
  %26 = load i16*, i16** %arrayidx25, align 8, !tbaa !74
  %27 = load i32, i32* %n, align 4, !tbaa !37
  %idxprom26 = sext i32 %27 to i64
  %arrayidx27 = getelementptr inbounds i16, i16* %26, i64 %idxprom26
  store i16 %conv, i16* %arrayidx27, align 2, !tbaa !40
  %28 = load i32, i32* %wlen, align 4, !tbaa !37
  %idx.ext28 = sext i32 %28 to i64
  %add.ptr29 = getelementptr inbounds i8, i8* %lp.076, i64 %idx.ext28
  %inc = add nsw i32 %27, 1
  store i32 %inc, i32* %n, align 4, !tbaa !37
  %29 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %cmp8 = icmp slt i32 %inc, %29
  br i1 %cmp8, label %for.body, label %for.end, !llvm.loop !367

for.end:                                          ; preds = %if.end23, %if.end5
  %lp.0.lcssa = phi i8* [ %add.ptr7, %if.end5 ], [ %add.ptr29, %if.end23 ]
  %call30 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %lp.0.lcssa, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49.263, i64 0, i64 0), i8* nonnull %3, i32* nonnull %wlen) #34
  %cmp31.not = icmp eq i32 %call30, 1
  br i1 %cmp31.not, label %lor.lhs.false33, label %if.then38

lor.lhs.false33:                                  ; preds = %for.end
  %30 = bitcast [1024 x i8]* %word to i16*
  %lhsv = load i16, i16* %30, align 16
  %.not = icmp eq i16 %lhsv, 78
  br i1 %.not, label %if.end39, label %if.then38

if.then38:                                        ; preds = %lor.lhs.false33, %for.end
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 402, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.67.281, i64 0, i64 0), i8* %line) #34
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %lor.lhs.false33
  %31 = load i32, i32* %wlen, align 4, !tbaa !37
  %idx.ext40 = sext i32 %31 to i64
  %add.ptr41 = getelementptr inbounds i8, i8* %lp.0.lcssa, i64 %idx.ext40
  %call43 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %add.ptr41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49.263, i64 0, i64 0), i8* nonnull %3, i32* nonnull %wlen) #34
  %cmp44 = icmp eq i32 %call43, 1
  br i1 %cmp44, label %if.then46, label %if.end47

if.then46:                                        ; preds = %if.end39
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 407, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.68.282, i64 0, i64 0), i8* %line) #34
  br label %if.end47

if.end47:                                         ; preds = %if.then46, %if.end39
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %3) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @ciphone_add(%struct.mdef_t* nocapture readonly %m, i8* %ci, i32 %p) unnamed_addr #0 {
entry:
  %call = tail call i8* @__ckd_salloc__(i8* %ci, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i32 138) #34
  %ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 7
  %0 = load %struct.ciphone_t*, %struct.ciphone_t** %ciphone, align 8, !tbaa !59
  %idxprom = sext i32 %p to i64
  %name = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %0, i64 %idxprom, i32 0
  store i8* %call, i8** %name, align 8, !tbaa !330
  %ciphone_ht = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 6
  %1 = load %struct.hash_table_t*, %struct.hash_table_t** %ciphone_ht, align 8, !tbaa !331
  %call5 = tail call i32 @hash_enter(%struct.hash_table_t* %1, i8* %call, i32 %p) #34
  %cmp.not = icmp eq i32 %call5, %p
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.228, i64 0, i64 0), i64 140, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.229, i64 0, i64 0)) #34
  %2 = load %struct.ciphone_t*, %struct.ciphone_t** %ciphone, align 8, !tbaa !59
  %name9 = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %2, i64 %idxprom, i32 0
  %3 = load i8*, i8** %name9, align 8, !tbaa !330
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.58.287, i64 0, i64 0), i8* %3) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @mdef_sseq2sen_active(%struct.mdef_t* nocapture readonly %mdef, i32* nocapture readonly %sseq, i32* nocapture %sen) local_unnamed_addr #13 {
entry:
  %n_sseq = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 10
  %sseq1 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 9
  %n_emit_state = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 2
  %0 = load i32, i32* %n_sseq, align 8, !tbaa !52
  %cmp26 = icmp sgt i32 %0, 0
  br i1 %cmp26, label %for.body, label %for.end13

for.body:                                         ; preds = %entry, %for.inc11
  %1 = phi i32 [ %9, %for.inc11 ], [ %0, %entry ]
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc11 ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds i32, i32* %sseq, i64 %indvars.iv28
  %2 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %for.inc11, label %if.then

if.then:                                          ; preds = %for.body
  %3 = load i16**, i16*** %sseq1, align 8, !tbaa !322
  %arrayidx3 = getelementptr inbounds i16*, i16** %3, i64 %indvars.iv28
  %4 = load i16*, i16** %arrayidx3, align 8, !tbaa !74
  %5 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %cmp524 = icmp sgt i32 %5, 0
  br i1 %cmp524, label %for.body6, label %for.inc11

for.body6:                                        ; preds = %if.then, %for.body6
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body6 ], [ 0, %if.then ]
  %arrayidx8 = getelementptr inbounds i16, i16* %4, i64 %indvars.iv
  %6 = load i16, i16* %arrayidx8, align 2, !tbaa !40
  %idxprom9 = sext i16 %6 to i64
  %arrayidx10 = getelementptr inbounds i32, i32* %sen, i64 %idxprom9
  store i32 1, i32* %arrayidx10, align 4, !tbaa !37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %7 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %8 = sext i32 %7 to i64
  %cmp5 = icmp slt i64 %indvars.iv.next, %8
  br i1 %cmp5, label %for.body6, label %for.inc11.loopexit, !llvm.loop !368

for.inc11.loopexit:                               ; preds = %for.body6
  %.pre = load i32, i32* %n_sseq, align 8, !tbaa !52
  br label %for.inc11

for.inc11:                                        ; preds = %for.inc11.loopexit, %if.then, %for.body
  %9 = phi i32 [ %.pre, %for.inc11.loopexit ], [ %1, %if.then ], [ %1, %for.body ]
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1
  %10 = sext i32 %9 to i64
  %cmp = icmp slt i64 %indvars.iv.next29, %10
  br i1 %cmp, label %for.body, label %for.end13, !llvm.loop !369

for.end13:                                        ; preds = %for.inc11, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @mdef_free_recursive_lc(%struct.ph_lc_s* %lc) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq %struct.ph_lc_s* %lc, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %rclist = getelementptr inbounds %struct.ph_lc_s, %struct.ph_lc_s* %lc, i64 0, i32 1
  %0 = load %struct.ph_rc_s*, %struct.ph_rc_s** %rclist, align 8, !tbaa !333
  %tobool.not = icmp eq %struct.ph_rc_s* %0, null
  br i1 %tobool.not, label %if.end3, label %if.then1

if.then1:                                         ; preds = %if.end
  tail call void @mdef_free_recursive_rc(%struct.ph_rc_s* nonnull %0) #36
  br label %if.end3

if.end3:                                          ; preds = %if.then1, %if.end
  %next = getelementptr inbounds %struct.ph_lc_s, %struct.ph_lc_s* %lc, i64 0, i32 2
  %1 = load %struct.ph_lc_s*, %struct.ph_lc_s** %next, align 8, !tbaa !338
  %tobool4.not = icmp eq %struct.ph_lc_s* %1, null
  br i1 %tobool4.not, label %if.end7, label %if.then5

if.then5:                                         ; preds = %if.end3
  tail call void @mdef_free_recursive_lc(%struct.ph_lc_s* nonnull %1) #36
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.end3
  %2 = getelementptr %struct.ph_lc_s, %struct.ph_lc_s* %lc, i64 0, i32 0
  tail call void @ckd_free(i8* %2) #34
  br label %return

return:                                           ; preds = %entry, %if.end7
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @mdef_free_recursive_rc(%struct.ph_rc_s* %rc) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq %struct.ph_rc_s* %rc, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ph_rc_s, %struct.ph_rc_s* %rc, i64 0, i32 2
  %0 = load %struct.ph_rc_s*, %struct.ph_rc_s** %next, align 8, !tbaa !341
  %tobool.not = icmp eq %struct.ph_rc_s* %0, null
  br i1 %tobool.not, label %if.end3, label %if.then1

if.then1:                                         ; preds = %if.end
  tail call void @mdef_free_recursive_rc(%struct.ph_rc_s* nonnull %0) #36
  br label %if.end3

if.end3:                                          ; preds = %if.then1, %if.end
  %1 = getelementptr %struct.ph_rc_s, %struct.ph_rc_s* %rc, i64 0, i32 0
  tail call void @ckd_free(i8* %1) #34
  br label %return

return:                                           ; preds = %entry, %if.end3
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @mdef_free(%struct.mdef_t* %m) local_unnamed_addr #0 {
entry:
  %tobool.not = icmp eq %struct.mdef_t* %m, null
  br i1 %tobool.not, label %if.end97, label %if.then

if.then:                                          ; preds = %entry
  %ciphone2n_cd_sen = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 13
  %0 = load i32*, i32** %ciphone2n_cd_sen, align 8, !tbaa !356
  %tobool1.not = icmp eq i32* %0, null
  br i1 %tobool1.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %1 = bitcast i32* %0 to i8*
  tail call void @ckd_free(i8* nonnull %1) #34
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %sen2cimap = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 12
  %2 = load i8*, i8** %sen2cimap, align 8, !tbaa !348
  %tobool4.not = icmp eq i8* %2, null
  br i1 %tobool4.not, label %if.end7, label %if.then5

if.then5:                                         ; preds = %if.end
  tail call void @ckd_free(i8* nonnull %2) #34
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.end
  %cd2cisen = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 11
  %3 = load i16*, i16** %cd2cisen, align 8, !tbaa !115
  %tobool8.not = icmp eq i16* %3, null
  br i1 %tobool8.not, label %if.end11, label %if.then9

if.then9:                                         ; preds = %if.end7
  %4 = bitcast i16* %3 to i8*
  tail call void @ckd_free(i8* nonnull %4) #34
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end7
  %n_ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 0
  %wpos_ci_lclist = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 15
  %.pre = load i32, i32* %n_ciphone, align 8, !tbaa !57
  br label %for.cond12.preheader

for.cond12.preheader:                             ; preds = %if.end11, %for.inc30
  %5 = phi i32 [ %.pre, %if.end11 ], [ %18, %for.inc30 ]
  %6 = phi i32 [ %.pre, %if.end11 ], [ %19, %for.inc30 ]
  %indvars.iv171 = phi i64 [ 0, %if.end11 ], [ %indvars.iv.next172, %for.inc30 ]
  %cmp13162 = icmp sgt i32 %6, 0
  br i1 %cmp13162, label %for.body14, label %for.inc30

for.body14:                                       ; preds = %for.cond12.preheader, %for.inc
  %7 = phi i32 [ %16, %for.inc ], [ %5, %for.cond12.preheader ]
  %indvars.iv169 = phi i64 [ %indvars.iv.next170, %for.inc ], [ 0, %for.cond12.preheader ]
  %8 = load %struct.ph_lc_s***, %struct.ph_lc_s**** %wpos_ci_lclist, align 8, !tbaa !332
  %arrayidx = getelementptr inbounds %struct.ph_lc_s**, %struct.ph_lc_s*** %8, i64 %indvars.iv171
  %9 = load %struct.ph_lc_s**, %struct.ph_lc_s*** %arrayidx, align 8, !tbaa !74
  %arrayidx16 = getelementptr inbounds %struct.ph_lc_s*, %struct.ph_lc_s** %9, i64 %indvars.iv169
  %10 = load %struct.ph_lc_s*, %struct.ph_lc_s** %arrayidx16, align 8, !tbaa !74
  %tobool17.not = icmp eq %struct.ph_lc_s* %10, null
  br i1 %tobool17.not, label %for.inc, label %if.then18

if.then18:                                        ; preds = %for.body14
  %next = getelementptr inbounds %struct.ph_lc_s, %struct.ph_lc_s* %10, i64 0, i32 2
  %11 = load %struct.ph_lc_s*, %struct.ph_lc_s** %next, align 8, !tbaa !338
  tail call void @mdef_free_recursive_lc(%struct.ph_lc_s* %11) #36
  %12 = load %struct.ph_lc_s***, %struct.ph_lc_s**** %wpos_ci_lclist, align 8, !tbaa !332
  %arrayidx26 = getelementptr inbounds %struct.ph_lc_s**, %struct.ph_lc_s*** %12, i64 %indvars.iv171
  %13 = load %struct.ph_lc_s**, %struct.ph_lc_s*** %arrayidx26, align 8, !tbaa !74
  %arrayidx28 = getelementptr inbounds %struct.ph_lc_s*, %struct.ph_lc_s** %13, i64 %indvars.iv169
  %14 = load %struct.ph_lc_s*, %struct.ph_lc_s** %arrayidx28, align 8, !tbaa !74
  %rclist = getelementptr inbounds %struct.ph_lc_s, %struct.ph_lc_s* %14, i64 0, i32 1
  %15 = load %struct.ph_rc_s*, %struct.ph_rc_s** %rclist, align 8, !tbaa !333
  tail call void @mdef_free_recursive_rc(%struct.ph_rc_s* %15) #36
  %.pre174 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  br label %for.inc

for.inc:                                          ; preds = %for.body14, %if.then18
  %16 = phi i32 [ %7, %for.body14 ], [ %.pre174, %if.then18 ]
  %indvars.iv.next170 = add nuw nsw i64 %indvars.iv169, 1
  %17 = sext i32 %16 to i64
  %cmp13 = icmp slt i64 %indvars.iv.next170, %17
  br i1 %cmp13, label %for.body14, label %for.inc30, !llvm.loop !370

for.inc30:                                        ; preds = %for.inc, %for.cond12.preheader
  %18 = phi i32 [ %5, %for.cond12.preheader ], [ %16, %for.inc ]
  %19 = phi i32 [ %6, %for.cond12.preheader ], [ %16, %for.inc ]
  %indvars.iv.next172 = add nuw nsw i64 %indvars.iv171, 1
  %exitcond173.not = icmp eq i64 %indvars.iv.next172, 4
  br i1 %exitcond173.not, label %for.cond36.preheader, label %for.cond12.preheader, !llvm.loop !371

for.cond36.preheader:                             ; preds = %for.inc30, %for.inc56
  %20 = phi i32 [ %29, %for.inc56 ], [ %18, %for.inc30 ]
  %21 = phi i32 [ %30, %for.inc56 ], [ %18, %for.inc30 ]
  %indvars.iv167 = phi i64 [ %indvars.iv.next168, %for.inc56 ], [ 0, %for.inc30 ]
  %cmp38159 = icmp sgt i32 %21, 0
  br i1 %cmp38159, label %for.body39, label %for.inc56

for.body39:                                       ; preds = %for.cond36.preheader, %for.inc53
  %22 = phi i32 [ %27, %for.inc53 ], [ %20, %for.cond36.preheader ]
  %indvars.iv165 = phi i64 [ %indvars.iv.next166, %for.inc53 ], [ 0, %for.cond36.preheader ]
  %23 = load %struct.ph_lc_s***, %struct.ph_lc_s**** %wpos_ci_lclist, align 8, !tbaa !332
  %arrayidx42 = getelementptr inbounds %struct.ph_lc_s**, %struct.ph_lc_s*** %23, i64 %indvars.iv167
  %24 = load %struct.ph_lc_s**, %struct.ph_lc_s*** %arrayidx42, align 8, !tbaa !74
  %arrayidx44 = getelementptr inbounds %struct.ph_lc_s*, %struct.ph_lc_s** %24, i64 %indvars.iv165
  %25 = load %struct.ph_lc_s*, %struct.ph_lc_s** %arrayidx44, align 8, !tbaa !74
  %tobool45.not = icmp eq %struct.ph_lc_s* %25, null
  br i1 %tobool45.not, label %for.inc53, label %if.then46

if.then46:                                        ; preds = %for.body39
  %26 = getelementptr %struct.ph_lc_s, %struct.ph_lc_s* %25, i64 0, i32 0
  tail call void @ckd_free(i8* %26) #34
  %.pre175 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  br label %for.inc53

for.inc53:                                        ; preds = %for.body39, %if.then46
  %27 = phi i32 [ %22, %for.body39 ], [ %.pre175, %if.then46 ]
  %indvars.iv.next166 = add nuw nsw i64 %indvars.iv165, 1
  %28 = sext i32 %27 to i64
  %cmp38 = icmp slt i64 %indvars.iv.next166, %28
  br i1 %cmp38, label %for.body39, label %for.inc56, !llvm.loop !372

for.inc56:                                        ; preds = %for.inc53, %for.cond36.preheader
  %29 = phi i32 [ %20, %for.cond36.preheader ], [ %27, %for.inc53 ]
  %30 = phi i32 [ %21, %for.cond36.preheader ], [ %27, %for.inc53 ]
  %indvars.iv.next168 = add nuw nsw i64 %indvars.iv167, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next168, 4
  br i1 %exitcond.not, label %for.end58, label %for.cond36.preheader, !llvm.loop !373

for.end58:                                        ; preds = %for.inc56
  %31 = load %struct.ph_lc_s***, %struct.ph_lc_s**** %wpos_ci_lclist, align 8, !tbaa !332
  %tobool60.not = icmp eq %struct.ph_lc_s*** %31, null
  br i1 %tobool60.not, label %if.end63, label %if.then61

if.then61:                                        ; preds = %for.end58
  %32 = bitcast %struct.ph_lc_s*** %31 to i8**
  tail call void @ckd_free_2d(i8** nonnull %32) #34
  br label %if.end63

if.end63:                                         ; preds = %if.then61, %for.end58
  %sseq = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 9
  %33 = load i16**, i16*** %sseq, align 8, !tbaa !322
  %tobool64.not = icmp eq i16** %33, null
  br i1 %tobool64.not, label %if.end67, label %if.then65

if.then65:                                        ; preds = %if.end63
  %34 = bitcast i16** %33 to i8**
  tail call void @ckd_free_2d(i8** nonnull %34) #34
  br label %if.end67

if.end67:                                         ; preds = %if.then65, %if.end63
  %phone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 8
  %35 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %tobool68.not = icmp eq %struct.phone_t* %35, null
  br i1 %tobool68.not, label %if.end71, label %if.then69

if.then69:                                        ; preds = %if.end67
  %36 = bitcast %struct.phone_t* %35 to i8*
  tail call void @ckd_free(i8* nonnull %36) #34
  br label %if.end71

if.end71:                                         ; preds = %if.then69, %if.end67
  %ciphone_ht = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 6
  %37 = load %struct.hash_table_t*, %struct.hash_table_t** %ciphone_ht, align 8, !tbaa !331
  %tobool72.not = icmp eq %struct.hash_table_t* %37, null
  br i1 %tobool72.not, label %if.end75, label %if.then73

if.then73:                                        ; preds = %if.end71
  tail call void @hash_free(%struct.hash_table_t* nonnull %37) #34
  br label %if.end75

if.end75:                                         ; preds = %if.then73, %if.end71
  %ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %m, i64 0, i32 7
  %38 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp78157 = icmp sgt i32 %38, 0
  br i1 %cmp78157, label %for.body79, label %for.end91

for.body79:                                       ; preds = %if.end75, %for.inc89
  %39 = phi i32 [ %42, %for.inc89 ], [ %38, %if.end75 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc89 ], [ 0, %if.end75 ]
  %40 = load %struct.ciphone_t*, %struct.ciphone_t** %ciphone, align 8, !tbaa !59
  %name = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %40, i64 %indvars.iv, i32 0
  %41 = load i8*, i8** %name, align 8, !tbaa !330
  %tobool82.not = icmp eq i8* %41, null
  br i1 %tobool82.not, label %for.inc89, label %if.then83

if.then83:                                        ; preds = %for.body79
  tail call void @ckd_free(i8* nonnull %41) #34
  %.pre176 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  br label %for.inc89

for.inc89:                                        ; preds = %for.body79, %if.then83
  %42 = phi i32 [ %39, %for.body79 ], [ %.pre176, %if.then83 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %43 = sext i32 %42 to i64
  %cmp78 = icmp slt i64 %indvars.iv.next, %43
  br i1 %cmp78, label %for.body79, label %for.end91, !llvm.loop !374

for.end91:                                        ; preds = %for.inc89, %if.end75
  %44 = load %struct.ciphone_t*, %struct.ciphone_t** %ciphone, align 8, !tbaa !59
  %tobool93.not = icmp eq %struct.ciphone_t* %44, null
  br i1 %tobool93.not, label %if.end96, label %if.then94

if.then94:                                        ; preds = %for.end91
  %45 = bitcast %struct.ciphone_t* %44 to i8*
  tail call void @ckd_free(i8* nonnull %45) #34
  br label %if.end96

if.end96:                                         ; preds = %if.then94, %for.end91
  %46 = bitcast %struct.mdef_t* %m to i8*
  tail call void @ckd_free(i8* nonnull %46) #34
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.kbcore_t* @kbcore_init(double %logbase, i8* %feattype, i8* %cmn, i8* %varnorm, i8* %agc, i8* %mdeffile, i8* %dictfile, i8* %fdictfile, i8* %compsep, i8* %lmfile, i8* %lmctlfile, i8* %lmdumpdir, i8* %fillpenfile, i8* %senmgau, double %silprob, double %fillprob, double %langwt, double %inspen, double %uw, i8* %meanfile, i8* %varfile, double %varfloor, i8* %mixwfile, double %mixwfloor, i8* %subvqfile, i8* %gsfile, i8* %tmatfile, double %tmatfloor) local_unnamed_addr #0 {
entry:
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.291, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.292, i64 0, i64 0)) #34
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 104, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i32 97) #34
  %fcb = bitcast i8* %call to %struct.feat_s**
  %mdef = getelementptr inbounds i8, i8* %call, i64 8
  %0 = bitcast i8* %mdef to %struct.mdef_t**
  %dict = getelementptr inbounds i8, i8* %call, i64 16
  %1 = bitcast i8* %dict to %struct.dict_t**
  %dict2pid = getelementptr inbounds i8, i8* %call, i64 24
  %2 = bitcast i8* %dict2pid to %struct.dict2pid_t**
  %lm = getelementptr inbounds i8, i8* %call, i64 32
  %3 = bitcast i8* %lm to %struct.lm_s**
  %fillpen = getelementptr inbounds i8, i8* %call, i64 48
  %4 = bitcast i8* %fillpen to %struct.fillpen_t**
  %dict2lmwid = getelementptr inbounds i8, i8* %call, i64 56
  %5 = bitcast i8* %dict2lmwid to i16**
  %mgau = getelementptr inbounds i8, i8* %call, i64 64
  %6 = bitcast i8* %mgau to %struct.mgau_model_t**
  %svq = getelementptr inbounds i8, i8* %call, i64 72
  %7 = bitcast i8* %svq to %struct.subvq_t**
  %tmat = getelementptr inbounds i8, i8* %call, i64 88
  %8 = bitcast i8* %tmat to %struct.tmat_t**
  %n_lm = getelementptr inbounds i8, i8* %call, i64 96
  %9 = bitcast i8* %n_lm to i32*
  %n_alloclm = getelementptr inbounds i8, i8* %call, i64 100
  %10 = bitcast i8* %n_alloclm to i32*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(40) %call, i8 0, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %fillpen, i8 0, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %tmat, i8 0, i64 16, i1 false)
  %call1 = tail call i32 @logs3_init(double %logbase) #34
  %tobool.not = icmp eq i8* %feattype, null
  br i1 %tobool.not, label %if.then, label %if.then3

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 115, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.294, i64 0, i64 0)) #34
  br label %if.end30

if.then3:                                         ; preds = %entry
  %call4 = tail call %struct.feat_s* @feat_init(i8* nonnull %feattype, i8* %cmn, i8* %varnorm, i8* %agc) #34
  store %struct.feat_s* %call4, %struct.feat_s** %fcb, align 8, !tbaa !120
  %cmp = icmp eq %struct.feat_s* %call4, null
  br i1 %cmp, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.then3
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 119, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5.295, i64 0, i64 0), i8* nonnull %feattype) #34
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.then3
  %call8 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %senmgau, i8* noundef nonnull dereferenceable(7) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.296, i64 0, i64 0)) #37
  %cmp9 = icmp eq i32 %call8, 0
  br i1 %cmp9, label %if.then10, label %if.else

if.then10:                                        ; preds = %if.end7
  %11 = load %struct.feat_s*, %struct.feat_s** %fcb, align 8, !tbaa !120
  %n_stream = getelementptr inbounds %struct.feat_s, %struct.feat_s* %11, i64 0, i32 3
  %12 = load i32, i32* %n_stream, align 8, !tbaa !375
  %cmp12.not = icmp eq i32 %12, 1
  br i1 %cmp12.not, label %if.end30, label %if.then13

if.then13:                                        ; preds = %if.then10
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 123, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  %13 = load %struct.feat_s*, %struct.feat_s** %fcb, align 8, !tbaa !120
  %n_stream15 = getelementptr inbounds %struct.feat_s, %struct.feat_s* %13, i64 0, i32 3
  %14 = load i32, i32* %n_stream15, align 8, !tbaa !375
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.7.297, i64 0, i64 0), i32 %14) #34
  br label %if.end30

if.else:                                          ; preds = %if.end7
  %call17 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %senmgau, i8* noundef nonnull dereferenceable(7) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.298, i64 0, i64 0)) #37
  %cmp18 = icmp eq i32 %call17, 0
  br i1 %cmp18, label %if.then19, label %if.else27

if.then19:                                        ; preds = %if.else
  %15 = load %struct.feat_s*, %struct.feat_s** %fcb, align 8, !tbaa !120
  %n_stream21 = getelementptr inbounds %struct.feat_s, %struct.feat_s* %15, i64 0, i32 3
  %16 = load i32, i32* %n_stream21, align 8, !tbaa !375
  %cmp22.not = icmp eq i32 %16, 4
  br i1 %cmp22.not, label %if.end30, label %if.then23

if.then23:                                        ; preds = %if.then19
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 126, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  %17 = load %struct.feat_s*, %struct.feat_s** %fcb, align 8, !tbaa !120
  %n_stream25 = getelementptr inbounds %struct.feat_s, %struct.feat_s* %17, i64 0, i32 3
  %18 = load i32, i32* %n_stream25, align 8, !tbaa !375
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.9.299, i64 0, i64 0), i32 %18) #34
  br label %if.end30

if.else27:                                        ; preds = %if.else
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10.300, i64 0, i64 0)) #34
  br label %if.end30

if.end30:                                         ; preds = %if.then, %if.then13, %if.then10, %if.then19, %if.then23, %if.else27
  %tobool31.not = icmp eq i8* %mdeffile, null
  br i1 %tobool31.not, label %if.end38, label %if.then32

if.then32:                                        ; preds = %if.end30
  %call33 = tail call %struct.mdef_t* @mdef_init(i8* nonnull %mdeffile) #34
  store %struct.mdef_t* %call33, %struct.mdef_t** %0, align 8, !tbaa !14
  %cmp35 = icmp eq %struct.mdef_t* %call33, null
  br i1 %cmp35, label %if.then36, label %if.end38

if.then36:                                        ; preds = %if.then32
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 134, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11.301, i64 0, i64 0), i8* nonnull %mdeffile) #34
  br label %if.end38

if.end38:                                         ; preds = %if.then32, %if.then36, %if.end30
  %tobool39.not = icmp eq i8* %dictfile, null
  br i1 %tobool39.not, label %if.end62, label %if.then40

if.then40:                                        ; preds = %if.end38
  %tobool41.not = icmp eq i8* %compsep, null
  br i1 %tobool41.not, label %if.end52, label %if.else43

if.else43:                                        ; preds = %if.then40
  %19 = load i8, i8* %compsep, align 1, !tbaa !63
  %cmp44.not = icmp eq i8 %19, 0
  br i1 %cmp44.not, label %if.end52, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else43
  %arrayidx46 = getelementptr inbounds i8, i8* %compsep, i64 1
  %20 = load i8, i8* %arrayidx46, align 1, !tbaa !63
  %cmp48.not = icmp eq i8 %20, 0
  br i1 %cmp48.not, label %if.end52, label %if.then50

if.then50:                                        ; preds = %land.lhs.true
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 141, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.13.302, i64 0, i64 0), i8* nonnull %compsep) #34
  br label %if.end52

if.end52:                                         ; preds = %if.then40, %if.else43, %land.lhs.true, %if.then50
  %compsep.addr.0 = phi i8* [ %compsep, %if.then50 ], [ %compsep, %land.lhs.true ], [ %compsep, %if.else43 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12.303, i64 0, i64 0), %if.then40 ]
  %21 = load %struct.mdef_t*, %struct.mdef_t** %0, align 8, !tbaa !14
  %22 = load i8, i8* %compsep.addr.0, align 1, !tbaa !63
  %call55 = tail call %struct.dict_t* @dict_init(%struct.mdef_t* %21, i8* nonnull %dictfile, i8* %fdictfile, i8 signext %22) #34
  store %struct.dict_t* %call55, %struct.dict_t** %1, align 8, !tbaa !16
  %cmp57 = icmp eq %struct.dict_t* %call55, null
  br i1 %cmp57, label %if.then59, label %if.end62

if.then59:                                        ; preds = %if.end52
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 145, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  %tobool60.not = icmp eq i8* %fdictfile, null
  %cond = select i1 %tobool60.not, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12.303, i64 0, i64 0), i8* %fdictfile
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14.304, i64 0, i64 0), i8* nonnull %dictfile, i8* %cond, i8* nonnull %compsep.addr.0) #34
  br label %if.end62

if.end62:                                         ; preds = %if.end52, %if.then59, %if.end38
  %tobool63 = icmp ne i8* %lmfile, null
  %tobool65 = icmp ne i8* %lmctlfile, null
  %or.cond = select i1 %tobool63, i1 %tobool65, i1 false
  br i1 %or.cond, label %if.then66, label %if.end67

if.then66:                                        ; preds = %if.end62
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 151, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.15.305, i64 0, i64 0)) #34
  br label %if.end67

if.end67:                                         ; preds = %if.then66, %if.end62
  %or.cond284 = select i1 %tobool63, i1 true, i1 %tobool65
  br i1 %or.cond284, label %if.end72, label %if.then71

if.then71:                                        ; preds = %if.end67
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 154, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.16.306, i64 0, i64 0)) #34
  br label %if.end72

if.end72:                                         ; preds = %if.then71, %if.end67
  br i1 %tobool63, label %if.then74, label %if.end81

if.then74:                                        ; preds = %if.end72
  %call75 = tail call %struct.lm_s* @lm_read(i8* nonnull %lmfile, double %langwt, double %inspen, double %uw) #34
  store %struct.lm_s* %call75, %struct.lm_s** %3, align 8, !tbaa !17
  %cmp77 = icmp eq %struct.lm_s* %call75, null
  br i1 %cmp77, label %if.then79, label %if.end81

if.then79:                                        ; preds = %if.then74
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 158, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.307, i64 0, i64 0), i8* nonnull %lmfile, double %langwt, double %inspen, double %uw) #34
  br label %if.end81

if.end81:                                         ; preds = %if.then74, %if.then79, %if.end72
  br i1 %tobool65, label %if.then83, label %if.end96

if.then83:                                        ; preds = %if.end81
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 162, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.291, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.308, i64 0, i64 0)) #34
  %23 = load %struct.dict_t*, %struct.dict_t** %1, align 8, !tbaa !16
  %n_word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %23, i64 0, i32 7
  %24 = load i32, i32* %n_word, align 4, !tbaa !58
  %call88 = tail call %struct.lmset_s* @lm_read_ctl(i8* nonnull %lmctlfile, %struct.dict_t* %23, double %langwt, double %uw, double %inspen, i8* %lmdumpdir, i32* nonnull %9, i32* nonnull %10, i32 %24) #34
  %lmset = getelementptr inbounds i8, i8* %call, i64 40
  %25 = bitcast i8* %lmset to %struct.lmset_s**
  store %struct.lmset_s* %call88, %struct.lmset_s** %25, align 8, !tbaa !18
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 165, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.291, i64 0, i64 0)) #34
  %26 = load %struct.lmset_s*, %struct.lmset_s** %25, align 8, !tbaa !18
  %name = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %26, i64 0, i32 0
  %27 = load i8*, i8** %name, align 8, !tbaa !30
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.309, i64 0, i64 0), i8* %27) #34
  %28 = load %struct.lmset_s*, %struct.lmset_s** %25, align 8, !tbaa !18
  %cmp92 = icmp eq %struct.lmset_s* %28, null
  br i1 %cmp92, label %if.then94, label %if.end96

if.then94:                                        ; preds = %if.then83
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 167, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20.310, i64 0, i64 0), i8* nonnull %lmctlfile, double %langwt, double %inspen, double %uw) #34
  br label %if.end96

if.end96:                                         ; preds = %if.then83, %if.then94, %if.end81
  %tobool97.not = icmp eq i8* %fillpenfile, null
  br i1 %tobool97.not, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %if.end96
  br i1 %tobool63, label %land.lhs.true99, label %lor.lhs.false102

land.lhs.true99:                                  ; preds = %lor.lhs.false
  %29 = load %struct.dict_t*, %struct.dict_t** %1, align 8, !tbaa !16
  %tobool101.not = icmp eq %struct.dict_t* %29, null
  br i1 %tobool101.not, label %lor.lhs.false102, label %if.end111

lor.lhs.false102:                                 ; preds = %land.lhs.true99, %lor.lhs.false
  br i1 %tobool65, label %land.lhs.true104, label %if.end119

land.lhs.true104:                                 ; preds = %lor.lhs.false102
  %30 = load %struct.dict_t*, %struct.dict_t** %1, align 8, !tbaa !16
  %tobool106.not = icmp eq %struct.dict_t* %30, null
  br i1 %tobool106.not, label %if.end164, label %if.end111

if.then107:                                       ; preds = %if.end96
  %.pr = load %struct.dict_t*, %struct.dict_t** %1, align 8, !tbaa !16
  %tobool109.not = icmp eq %struct.dict_t* %.pr, null
  br i1 %tobool109.not, label %if.then110, label %if.end111

if.then110:                                       ; preds = %if.then107
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 173, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.21.311, i64 0, i64 0), i8* nonnull %fillpenfile) #34
  %.pre = load %struct.dict_t*, %struct.dict_t** %1, align 8, !tbaa !16
  br label %if.end111

if.end111:                                        ; preds = %land.lhs.true99, %land.lhs.true104, %if.then110, %if.then107
  %31 = phi %struct.dict_t* [ %29, %land.lhs.true99 ], [ %30, %land.lhs.true104 ], [ %.pre, %if.then110 ], [ %.pr, %if.then107 ]
  %call113 = tail call %struct.fillpen_t* @fillpen_init(%struct.dict_t* %31, i8* %fillpenfile, double %silprob, double %fillprob, double %langwt, double %inspen) #34
  store %struct.fillpen_t* %call113, %struct.fillpen_t** %4, align 8, !tbaa !85
  %cmp115 = icmp eq %struct.fillpen_t* %call113, null
  br i1 %cmp115, label %if.then117, label %if.end119

if.then117:                                       ; preds = %if.end111
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 177, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22.312, i64 0, i64 0), i8* %fillpenfile) #34
  br label %if.end119

if.end119:                                        ; preds = %if.end111, %if.then117, %lor.lhs.false102
  %.pr440 = load %struct.dict_t*, %struct.dict_t** %1, align 8, !tbaa !16
  %tobool121.not = icmp eq %struct.dict_t* %.pr440, null
  br i1 %tobool121.not, label %if.end164, label %land.lhs.true122

land.lhs.true122:                                 ; preds = %if.end119
  %32 = load %struct.lm_s*, %struct.lm_s** %3, align 8, !tbaa !17
  %tobool124.not = icmp eq %struct.lm_s* %32, null
  br i1 %tobool124.not, label %land.lhs.true138, label %if.then125

if.then125:                                       ; preds = %land.lhs.true122
  %conv128 = fptosi double %langwt to i32
  %call129 = tail call i16* @wid_dict_lm_map(%struct.dict_t* nonnull %.pr440, %struct.lm_s* nonnull %32, i32 %conv128) #34
  store i16* %call129, i16** %5, align 8, !tbaa !44
  %cmp131 = icmp eq i16* %call129, null
  br i1 %cmp131, label %if.then133, label %if.end135

if.then133:                                       ; preds = %if.then125
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 184, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23.313, i64 0, i64 0)) #34
  br label %if.end135

if.end135:                                        ; preds = %if.then125, %if.then133
  %.pr442 = load %struct.dict_t*, %struct.dict_t** %1, align 8, !tbaa !16
  %tobool137.not = icmp eq %struct.dict_t* %.pr442, null
  br i1 %tobool137.not, label %if.end164, label %land.lhs.true138

land.lhs.true138:                                 ; preds = %land.lhs.true122, %if.end135
  %33 = phi %struct.dict_t* [ %.pr440, %land.lhs.true122 ], [ %.pr442, %if.end135 ]
  %lmset139 = getelementptr inbounds i8, i8* %call, i64 40
  %34 = bitcast i8* %lmset139 to %struct.lmset_s**
  %35 = load %struct.lmset_s*, %struct.lmset_s** %34, align 8, !tbaa !18
  %tobool140.not = icmp eq %struct.lmset_s* %35, null
  br i1 %tobool140.not, label %if.end164, label %for.cond.preheader

for.cond.preheader:                               ; preds = %land.lhs.true138
  %conv149 = fptosi double %langwt to i32
  %36 = load i32, i32* %9, align 8, !tbaa !23
  %cmp143450 = icmp sgt i32 %36, 0
  br i1 %cmp143450, label %for.body, label %if.end164

for.body:                                         ; preds = %for.cond.preheader, %for.inc.for.body_crit_edge
  %37 = phi %struct.lmset_s* [ %.pre454, %for.inc.for.body_crit_edge ], [ %35, %for.cond.preheader ]
  %38 = phi %struct.dict_t* [ %.pre453, %for.inc.for.body_crit_edge ], [ %33, %for.cond.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.for.body_crit_edge ], [ 0, %for.cond.preheader ]
  %lm148 = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %37, i64 %indvars.iv, i32 1
  %39 = load %struct.lm_s*, %struct.lm_s** %lm148, align 8, !tbaa !24
  %call150 = tail call i16* @wid_dict_lm_map(%struct.dict_t* %38, %struct.lm_s* %39, i32 %conv149) #34
  %40 = load %struct.lmset_s*, %struct.lmset_s** %34, align 8, !tbaa !18
  %lm154 = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %40, i64 %indvars.iv, i32 1
  %41 = load %struct.lm_s*, %struct.lm_s** %lm154, align 8, !tbaa !24
  %dict2lmwid155 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %41, i64 0, i32 38
  store i16* %call150, i16** %dict2lmwid155, align 8, !tbaa !38
  %cmp156 = icmp eq i16* %call150, null
  br i1 %cmp156, label %if.then158, label %for.inc

if.then158:                                       ; preds = %for.body
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 189, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  %42 = load %struct.lmset_s*, %struct.lmset_s** %34, align 8, !tbaa !18
  %name162 = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %42, i64 %indvars.iv, i32 0
  %43 = load i8*, i8** %name162, align 8, !tbaa !30
  %44 = trunc i64 %indvars.iv to i32
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.24.314, i64 0, i64 0), i32 %44, i8* %43) #34
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then158
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %45 = load i32, i32* %9, align 8, !tbaa !23
  %46 = sext i32 %45 to i64
  %cmp143 = icmp slt i64 %indvars.iv.next, %46
  br i1 %cmp143, label %for.inc.for.body_crit_edge, label %if.end164, !llvm.loop !377

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  %.pre453 = load %struct.dict_t*, %struct.dict_t** %1, align 8, !tbaa !16
  %.pre454 = load %struct.lmset_s*, %struct.lmset_s** %34, align 8, !tbaa !18
  br label %for.body

if.end164:                                        ; preds = %for.inc, %for.cond.preheader, %land.lhs.true104, %if.end119, %land.lhs.true138, %if.end135
  %tobool165.not = icmp eq i8* %meanfile, null
  br i1 %tobool165.not, label %if.end198, label %if.then166

if.then166:                                       ; preds = %if.end164
  %tobool167 = icmp ne i8* %varfile, null
  %tobool169 = icmp ne i8* %mixwfile, null
  %or.cond285 = select i1 %tobool167, i1 %tobool169, i1 false
  br i1 %or.cond285, label %if.end171, label %if.then170

if.then170:                                       ; preds = %if.then166
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 194, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25.315, i64 0, i64 0), i8* nonnull %meanfile) #34
  br label %if.end171

if.end171:                                        ; preds = %if.then166, %if.then170
  %call172 = tail call %struct.mgau_model_t* @mgau_init(i8* nonnull %meanfile, i8* %varfile, double %varfloor, i8* %mixwfile, double %mixwfloor, i32 1, i8* %senmgau) #34
  store %struct.mgau_model_t* %call172, %struct.mgau_model_t** %6, align 8, !tbaa !91
  %cmp175 = icmp eq %struct.mgau_model_t* %call172, null
  br i1 %cmp175, label %if.then177, label %if.end178

if.then177:                                       ; preds = %if.end171
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 197, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26.316, i64 0, i64 0), i8* nonnull %meanfile, i8* %varfile, double %varfloor) #34
  br label %if.end178

if.end178:                                        ; preds = %if.then177, %if.end171
  %tobool179.not = icmp eq i8* %subvqfile, null
  br i1 %tobool179.not, label %if.end188, label %if.then180

if.then180:                                       ; preds = %if.end178
  %47 = load %struct.mgau_model_t*, %struct.mgau_model_t** %6, align 8, !tbaa !91
  %call182 = tail call %struct.subvq_t* @subvq_init(i8* nonnull %subvqfile, double %varfloor, i32 -1, %struct.mgau_model_t* %47) #34
  store %struct.subvq_t* %call182, %struct.subvq_t** %7, align 8, !tbaa !378
  %cmp184 = icmp eq %struct.subvq_t* %call182, null
  br i1 %cmp184, label %if.then186, label %if.end188

if.then186:                                       ; preds = %if.then180
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 201, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.27.317, i64 0, i64 0), i8* nonnull %subvqfile, double %varfloor) #34
  br label %if.end188

if.end188:                                        ; preds = %if.then180, %if.then186, %if.end178
  %tobool189.not = icmp eq i8* %gsfile, null
  br i1 %tobool189.not, label %if.end198, label %if.then190

if.then190:                                       ; preds = %if.end188
  %call191 = tail call %struct.gs_s* @gs_read(i8* nonnull %gsfile) #34
  %gs = getelementptr inbounds i8, i8* %call, i64 80
  %48 = bitcast i8* %gs to %struct.gs_s**
  store %struct.gs_s* %call191, %struct.gs_s** %48, align 8, !tbaa !107
  %cmp192 = icmp eq %struct.gs_s* %call191, null
  br i1 %cmp192, label %if.then194, label %if.end195

if.then194:                                       ; preds = %if.then190
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 207, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.28.318, i64 0, i64 0), i8* nonnull %gsfile) #34
  br label %if.end195

if.end195:                                        ; preds = %if.then194, %if.then190
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 209, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.291, i64 0, i64 0)) #34
  %49 = load %struct.gs_s*, %struct.gs_s** %48, align 8, !tbaa !107
  %n_mgau = getelementptr inbounds %struct.gs_s, %struct.gs_s* %49, i64 0, i32 0
  %50 = load i32, i32* %n_mgau, align 8, !tbaa !379
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.29.319, i64 0, i64 0), i32 %50) #34
  br label %if.end198

if.end198:                                        ; preds = %if.end188, %if.end195, %if.end164
  %tobool199.not = icmp eq i8* %tmatfile, null
  br i1 %tobool199.not, label %if.end207, label %if.then200

if.then200:                                       ; preds = %if.end198
  %call201 = tail call %struct.tmat_t* @tmat_init(i8* nonnull %tmatfile, double %tmatfloor) #34
  store %struct.tmat_t* %call201, %struct.tmat_t** %8, align 8, !tbaa !33
  %cmp203 = icmp eq %struct.tmat_t* %call201, null
  br i1 %cmp203, label %if.then205, label %if.end207

if.then205:                                       ; preds = %if.then200
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 216, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.30.320, i64 0, i64 0), i8* nonnull %tmatfile, double %tmatfloor) #34
  br label %if.end207

if.end207:                                        ; preds = %if.then200, %if.then205, %if.end198
  %51 = load %struct.mdef_t*, %struct.mdef_t** %0, align 8, !tbaa !14
  %tobool209.not = icmp eq %struct.mdef_t* %51, null
  br i1 %tobool209.not, label %if.end218, label %land.lhs.true210

land.lhs.true210:                                 ; preds = %if.end207
  %52 = load %struct.dict_t*, %struct.dict_t** %1, align 8, !tbaa !16
  %tobool212.not = icmp eq %struct.dict_t* %52, null
  br i1 %tobool212.not, label %if.end218, label %if.then213

if.then213:                                       ; preds = %land.lhs.true210
  %call216 = tail call %struct.dict2pid_t* @dict2pid_build(%struct.mdef_t* nonnull %51, %struct.dict_t* nonnull %52) #34
  store %struct.dict2pid_t* %call216, %struct.dict2pid_t** %2, align 8, !tbaa !19
  br label %if.end218

if.end218:                                        ; preds = %if.then213, %land.lhs.true210, %if.end207
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 225, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.291, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.31.321, i64 0, i64 0)) #34
  %53 = load %struct.feat_s*, %struct.feat_s** %fcb, align 8, !tbaa !120
  %tobool220.not = icmp eq %struct.feat_s* %53, null
  br i1 %tobool220.not, label %if.end237, label %land.lhs.true221

land.lhs.true221:                                 ; preds = %if.end218
  %54 = load %struct.mgau_model_t*, %struct.mgau_model_t** %6, align 8, !tbaa !91
  %tobool223.not = icmp eq %struct.mgau_model_t* %54, null
  br i1 %tobool223.not, label %if.end237, label %if.then224

if.then224:                                       ; preds = %land.lhs.true221
  %stream_len = getelementptr inbounds %struct.feat_s, %struct.feat_s* %53, i64 0, i32 4
  %55 = load i32*, i32** %stream_len, align 8, !tbaa !381
  %56 = load i32, i32* %55, align 4, !tbaa !37
  %veclen = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %54, i64 0, i32 2
  %57 = load i32, i32* %veclen, align 8, !tbaa !382
  %cmp228.not = icmp eq i32 %56, %57
  br i1 %cmp228.not, label %if.end237, label %if.then230

if.then230:                                       ; preds = %if.then224
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 230, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  %58 = load %struct.feat_s*, %struct.feat_s** %fcb, align 8, !tbaa !120
  %stream_len232 = getelementptr inbounds %struct.feat_s, %struct.feat_s* %58, i64 0, i32 4
  %59 = load i32*, i32** %stream_len232, align 8, !tbaa !381
  %60 = load i32, i32* %59, align 4, !tbaa !37
  %61 = load %struct.mgau_model_t*, %struct.mgau_model_t** %6, align 8, !tbaa !91
  %veclen235 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %61, i64 0, i32 2
  %62 = load i32, i32* %veclen235, align 8, !tbaa !382
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.32.322, i64 0, i64 0), i32 %60, i32 %62) #34
  br label %if.end237

if.end237:                                        ; preds = %if.then224, %if.then230, %land.lhs.true221, %if.end218
  %63 = load %struct.mdef_t*, %struct.mdef_t** %0, align 8, !tbaa !14
  %tobool239.not = icmp eq %struct.mdef_t* %63, null
  br i1 %tobool239.not, label %if.end283, label %land.lhs.true240

land.lhs.true240:                                 ; preds = %if.end237
  %64 = load %struct.mgau_model_t*, %struct.mgau_model_t** %6, align 8, !tbaa !91
  %tobool242.not = icmp eq %struct.mgau_model_t* %64, null
  br i1 %tobool242.not, label %land.lhs.true258, label %if.then243

if.then243:                                       ; preds = %land.lhs.true240
  %n_sen = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %63, i64 0, i32 4
  %65 = load i32, i32* %n_sen, align 8, !tbaa !49
  %n_mgau246 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %64, i64 0, i32 0
  %66 = load i32, i32* %n_mgau246, align 8, !tbaa !92
  %cmp247.not = icmp eq i32 %65, %66
  br i1 %cmp247.not, label %land.lhs.true258, label %if.end255

if.end255:                                        ; preds = %if.then243
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 237, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  %67 = load %struct.mdef_t*, %struct.mdef_t** %0, align 8, !tbaa !14
  %n_sen251 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %67, i64 0, i32 4
  %68 = load i32, i32* %n_sen251, align 8, !tbaa !49
  %69 = load %struct.mgau_model_t*, %struct.mgau_model_t** %6, align 8, !tbaa !91
  %n_mgau253 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %69, i64 0, i32 0
  %70 = load i32, i32* %n_mgau253, align 8, !tbaa !92
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.33.323, i64 0, i64 0), i32 %68, i32 %70) #34
  %.pr446.pre = load %struct.mdef_t*, %struct.mdef_t** %0, align 8, !tbaa !14
  %tobool257.not = icmp eq %struct.mdef_t* %.pr446.pre, null
  br i1 %tobool257.not, label %if.end283, label %land.lhs.true258

land.lhs.true258:                                 ; preds = %if.then243, %land.lhs.true240, %if.end255
  %71 = phi %struct.mdef_t* [ %.pr446.pre, %if.end255 ], [ %63, %land.lhs.true240 ], [ %63, %if.then243 ]
  %72 = load %struct.tmat_t*, %struct.tmat_t** %8, align 8, !tbaa !33
  %tobool260.not = icmp eq %struct.tmat_t* %72, null
  br i1 %tobool260.not, label %if.end283, label %if.then261

if.then261:                                       ; preds = %land.lhs.true258
  %n_tmat = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %71, i64 0, i32 5
  %73 = load i32, i32* %n_tmat, align 4, !tbaa !317
  %n_tmat264 = getelementptr inbounds %struct.tmat_t, %struct.tmat_t* %72, i64 0, i32 1
  %74 = load i32, i32* %n_tmat264, align 8, !tbaa !224
  %cmp265.not = icmp eq i32 %73, %74
  br i1 %cmp265.not, label %if.end272, label %if.then267

if.then267:                                       ; preds = %if.then261
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 244, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  %75 = load %struct.mdef_t*, %struct.mdef_t** %0, align 8, !tbaa !14
  %n_tmat269 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %75, i64 0, i32 5
  %76 = load i32, i32* %n_tmat269, align 4, !tbaa !317
  %77 = load %struct.tmat_t*, %struct.tmat_t** %8, align 8, !tbaa !33
  %n_tmat271 = getelementptr inbounds %struct.tmat_t, %struct.tmat_t* %77, i64 0, i32 1
  %78 = load i32, i32* %n_tmat271, align 8, !tbaa !224
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34.324, i64 0, i64 0), i32 %76, i32 %78) #34
  %.pre456 = load %struct.mdef_t*, %struct.mdef_t** %0, align 8, !tbaa !14
  %.pre457 = load %struct.tmat_t*, %struct.tmat_t** %8, align 8, !tbaa !33
  br label %if.end272

if.end272:                                        ; preds = %if.then267, %if.then261
  %79 = phi %struct.tmat_t* [ %.pre457, %if.then267 ], [ %72, %if.then261 ]
  %80 = phi %struct.mdef_t* [ %.pre456, %if.then267 ], [ %71, %if.then261 ]
  %n_emit_state = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %80, i64 0, i32 2
  %81 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %n_state = getelementptr inbounds %struct.tmat_t, %struct.tmat_t* %79, i64 0, i32 2
  %82 = load i32, i32* %n_state, align 4, !tbaa !226
  %cmp275.not = icmp eq i32 %81, %82
  br i1 %cmp275.not, label %if.end283, label %if.then277

if.then277:                                       ; preds = %if.end272
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.290, i64 0, i64 0), i64 246, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.293, i64 0, i64 0)) #34
  %83 = load %struct.mdef_t*, %struct.mdef_t** %0, align 8, !tbaa !14
  %n_emit_state279 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %83, i64 0, i32 2
  %84 = load i32, i32* %n_emit_state279, align 8, !tbaa !315
  %85 = load %struct.tmat_t*, %struct.tmat_t** %8, align 8, !tbaa !33
  %n_state281 = getelementptr inbounds %struct.tmat_t, %struct.tmat_t* %85, i64 0, i32 2
  %86 = load i32, i32* %n_state281, align 4, !tbaa !226
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.35.325, i64 0, i64 0), i32 %84, i32 %86) #34
  br label %if.end283

if.end283:                                        ; preds = %if.end237, %if.end272, %if.then277, %land.lhs.true258, %if.end255
  %87 = bitcast i8* %call to %struct.kbcore_t*
  ret %struct.kbcore_t* %87
}

; Function Attrs: noinline nounwind optsize uwtable
define void @kbcore_free(%struct.kbcore_t* %kbcore) local_unnamed_addr #0 {
entry:
  %fcb1 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbcore, i64 0, i32 0
  %0 = load %struct.feat_s*, %struct.feat_s** %fcb1, align 8, !tbaa !120
  %mdef2 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbcore, i64 0, i32 1
  %1 = load %struct.mdef_t*, %struct.mdef_t** %mdef2, align 8, !tbaa !14
  %dict3 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbcore, i64 0, i32 2
  %2 = load %struct.dict_t*, %struct.dict_t** %dict3, align 8, !tbaa !16
  %dict2pid4 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbcore, i64 0, i32 3
  %3 = load %struct.dict2pid_t*, %struct.dict2pid_t** %dict2pid4, align 8, !tbaa !19
  %lm5 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbcore, i64 0, i32 4
  %4 = load %struct.lm_s*, %struct.lm_s** %lm5, align 8, !tbaa !17
  tail call void @lm_free(%struct.lm_s* %4) #34
  tail call void @dict_free(%struct.dict_t* %2) #34
  %comwt = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %3, i64 0, i32 5
  %5 = bitcast i32** %comwt to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !383
  tail call void @ckd_free(i8* %6) #34
  %comsseq = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %3, i64 0, i32 4
  %7 = bitcast i16*** %comsseq to i8**
  %8 = load i8*, i8** %7, align 8, !tbaa !384
  tail call void @ckd_free(i8* %8) #34
  %comstate = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %3, i64 0, i32 3
  %9 = bitcast i16*** %comstate to i8**
  %10 = load i8*, i8** %9, align 8, !tbaa !385
  tail call void @ckd_free(i8* %10) #34
  %single_lc = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %3, i64 0, i32 2
  %11 = bitcast i32*** %single_lc to i8***
  %12 = load i8**, i8*** %11, align 8, !tbaa !386
  tail call void @ckd_free_2d(i8** %12) #34
  %ldiph_lc = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %3, i64 0, i32 1
  %13 = bitcast i32**** %ldiph_lc to i8****
  %14 = load i8***, i8**** %13, align 8, !tbaa !387
  tail call void @ckd_free_3d(i8*** %14) #34
  %15 = bitcast %struct.dict2pid_t* %3 to i8**
  %16 = load i8*, i8** %15, align 8, !tbaa !388
  tail call void @ckd_free(i8* %16) #34
  tail call void @mdef_free(%struct.mdef_t* %1) #34
  %fillpen = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbcore, i64 0, i32 6
  %17 = load %struct.fillpen_t*, %struct.fillpen_t** %fillpen, align 8, !tbaa !85
  tail call void @fillpen_free(%struct.fillpen_t* %17) #34
  %tmat = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbcore, i64 0, i32 11
  %18 = load %struct.tmat_t*, %struct.tmat_t** %tmat, align 8, !tbaa !33
  tail call void @tmat_free(%struct.tmat_t* %18) #34
  %svq = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbcore, i64 0, i32 9
  %19 = load %struct.subvq_t*, %struct.subvq_t** %svq, align 8, !tbaa !378
  tail call void @subvq_free(%struct.subvq_t* %19) #34
  %mgau = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbcore, i64 0, i32 8
  %20 = load %struct.mgau_model_t*, %struct.mgau_model_t** %mgau, align 8, !tbaa !91
  tail call void @mgau_free(%struct.mgau_model_t* %20) #34
  %tobool.not = icmp eq %struct.feat_s* %0, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %name = getelementptr inbounds %struct.feat_s, %struct.feat_s* %0, i64 0, i32 0
  %21 = load i8*, i8** %name, align 8, !tbaa !389
  tail call void @ckd_free(i8* %21) #34
  %stream_len = getelementptr inbounds %struct.feat_s, %struct.feat_s* %0, i64 0, i32 4
  %22 = bitcast i32** %stream_len to i8**
  %23 = load i8*, i8** %22, align 8, !tbaa !381
  tail call void @ckd_free(i8* %23) #34
  %24 = bitcast %struct.feat_s* %0 to i8*
  tail call void @ckd_free(i8* nonnull %24) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  tail call void (...) bitcast (void ()* @logs_free to void (...)*)() #34
  %25 = load %struct.feat_s*, %struct.feat_s** %fcb1, align 8, !tbaa !120
  tail call void @feat_free(%struct.feat_s* %25) #34
  %26 = bitcast %struct.kbcore_t* %kbcore to i8*
  tail call void @ckd_free(i8* %26) #34
  ret void
}

; Function Attrs: nofree noinline nounwind optsize readonly uwtable
define i32 @lm_get_classid(%struct.lm_s* nocapture readonly %model, i8* nocapture readonly %name) local_unnamed_addr #24 {
entry:
  %lmclass = getelementptr inbounds %struct.lm_s, %struct.lm_s* %model, i64 0, i32 40
  %0 = load %struct.lmclass_s**, %struct.lmclass_s*** %lmclass, align 8, !tbaa !390
  %tobool.not = icmp eq %struct.lmclass_s** %0, null
  br i1 %tobool.not, label %cleanup, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %n_lmclass = getelementptr inbounds %struct.lm_s, %struct.lm_s* %model, i64 0, i32 41
  %1 = load i32, i32* %n_lmclass, align 8, !tbaa !391
  %cmp13 = icmp sgt i32 %1, 0
  br i1 %cmp13, label %for.body.preheader, label %cleanup

for.body.preheader:                               ; preds = %for.cond.preheader
  %wide.trip.count = zext i32 %1 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds %struct.lmclass_s*, %struct.lmclass_s** %0, i64 %indvars.iv
  %2 = load %struct.lmclass_s*, %struct.lmclass_s** %arrayidx, align 8, !tbaa !74
  %name2 = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %2, i64 0, i32 0
  %3 = load i8*, i8** %name2, align 8, !tbaa !392
  %call = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %3, i8* noundef nonnull dereferenceable(1) %name) #37
  %cmp3 = icmp eq i32 %call, 0
  br i1 %cmp3, label %if.then4, label %for.inc

if.then4:                                         ; preds = %for.body
  %4 = trunc i64 %indvars.iv to i32
  %add = add nuw nsw i32 %4, 16777216
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !394

cleanup:                                          ; preds = %for.inc, %for.cond.preheader, %entry, %if.then4
  %retval.0 = phi i32 [ %add, %if.then4 ], [ -1, %entry ], [ -1, %for.cond.preheader ], [ -1, %for.inc ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @lm_delete(%struct.lm_s* nocapture readnone %lm, %struct.lmset_s* nocapture readnone %lmset) local_unnamed_addr #0 {
entry:
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 151, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.2.330, i64 0, i64 0)) #34
  ret i32 0
}

; Function Attrs: noinline nounwind optsize uwtable
define void @lm_set_param(%struct.lm_s* nocapture %lm, double %lw, double %wip) local_unnamed_addr #0 {
entry:
  %cmp = fcmp ugt double %lw, 0.000000e+00
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 207, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.332, i64 0, i64 0), double %lw) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = fcmp ugt double %wip, 0.000000e+00
  br i1 %cmp1, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 209, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.333, i64 0, i64 0), double %wip) #34
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %call = tail call i32 @logs3(double %wip) #34
  %lw4 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 25
  %0 = load float, float* %lw4, align 4, !tbaa !395
  %conv = fpext float %0 to double
  %div = fdiv double %lw, %conv
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 9
  %wip7 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 26
  %1 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp5149 = icmp sgt i32 %1, 0
  br i1 %cmp5149, label %for.body, label %for.cond27.preheader

for.cond27.preheader:                             ; preds = %for.body, %if.end3
  %n_bgprob = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 18
  %bgprob = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 14
  %2 = load i32, i32* %n_bgprob, align 8, !tbaa !396
  %cmp28147 = icmp sgt i32 %2, 0
  br i1 %cmp28147, label %for.body30, label %for.end46

for.body:                                         ; preds = %if.end3, %for.body
  %indvars.iv155 = phi i64 [ %indvars.iv.next156, %for.body ], [ 0, %if.end3 ]
  %3 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %prob = getelementptr inbounds %struct.ug_t, %struct.ug_t* %3, i64 %indvars.iv155, i32 1
  %l = bitcast %union.lmlog_t* %prob to i32*
  %4 = load i32, i32* %l, align 4, !tbaa !63
  %5 = load i32, i32* %wip7, align 8, !tbaa !397
  %sub = sub nsw i32 %4, %5
  %conv8 = sitofp i32 %sub to double
  %mul = fmul double %div, %conv8
  %conv9 = fptosi double %mul to i32
  %add = add nsw i32 %call, %conv9
  store i32 %add, i32* %l, align 4, !tbaa !63
  %6 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %bowt = getelementptr inbounds %struct.ug_t, %struct.ug_t* %6, i64 %indvars.iv155, i32 2
  %l18 = bitcast %union.lmlog_t* %bowt to i32*
  %7 = load i32, i32* %l18, align 4, !tbaa !63
  %conv19 = sitofp i32 %7 to double
  %mul20 = fmul double %div, %conv19
  %conv21 = fptosi double %mul20 to i32
  store i32 %conv21, i32* %l18, align 4, !tbaa !63
  %indvars.iv.next156 = add nuw nsw i64 %indvars.iv155, 1
  %8 = load i32, i32* %n_ug, align 8, !tbaa !133
  %9 = sext i32 %8 to i64
  %cmp5 = icmp slt i64 %indvars.iv.next156, %9
  br i1 %cmp5, label %for.body, label %for.cond27.preheader, !llvm.loop !398

for.body30:                                       ; preds = %for.cond27.preheader, %for.body30
  %indvars.iv153 = phi i64 [ %indvars.iv.next154, %for.body30 ], [ 0, %for.cond27.preheader ]
  %10 = load %union.lmlog_t*, %union.lmlog_t** %bgprob, align 8, !tbaa !399
  %arrayidx32 = getelementptr inbounds %union.lmlog_t, %union.lmlog_t* %10, i64 %indvars.iv153
  %l33 = bitcast %union.lmlog_t* %arrayidx32 to i32*
  %11 = load i32, i32* %l33, align 4, !tbaa !63
  %12 = load i32, i32* %wip7, align 8, !tbaa !397
  %sub35 = sub nsw i32 %11, %12
  %conv36 = sitofp i32 %sub35 to double
  %mul37 = fmul double %div, %conv36
  %conv38 = fptosi double %mul37 to i32
  %add39 = add nsw i32 %call, %conv38
  store i32 %add39, i32* %l33, align 4, !tbaa !63
  %indvars.iv.next154 = add nuw nsw i64 %indvars.iv153, 1
  %13 = load i32, i32* %n_bgprob, align 8, !tbaa !396
  %14 = sext i32 %13 to i64
  %cmp28 = icmp slt i64 %indvars.iv.next154, %14
  br i1 %cmp28, label %for.body30, label %for.end46, !llvm.loop !400

for.end46:                                        ; preds = %for.body30, %for.cond27.preheader
  %n_tg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 2
  %15 = load i32, i32* %n_tg, align 8, !tbaa !135
  %cmp47 = icmp sgt i32 %15, 0
  br i1 %cmp47, label %for.cond50.preheader, label %if.end87

for.cond50.preheader:                             ; preds = %for.end46
  %n_tgprob = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 19
  %tgprob = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 15
  %16 = load i32, i32* %n_tgprob, align 4, !tbaa !401
  %cmp51145 = icmp sgt i32 %16, 0
  br i1 %cmp51145, label %for.body53, label %for.cond70.preheader

for.cond70.preheader:                             ; preds = %for.body53, %for.cond50.preheader
  %n_tgbowt = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 20
  %tgbowt = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 16
  %17 = load i32, i32* %n_tgbowt, align 8, !tbaa !402
  %cmp71143 = icmp sgt i32 %17, 0
  br i1 %cmp71143, label %for.body73, label %if.end87

for.body53:                                       ; preds = %for.cond50.preheader, %for.body53
  %indvars.iv151 = phi i64 [ %indvars.iv.next152, %for.body53 ], [ 0, %for.cond50.preheader ]
  %18 = load %union.lmlog_t*, %union.lmlog_t** %tgprob, align 8, !tbaa !403
  %arrayidx55 = getelementptr inbounds %union.lmlog_t, %union.lmlog_t* %18, i64 %indvars.iv151
  %l56 = bitcast %union.lmlog_t* %arrayidx55 to i32*
  %19 = load i32, i32* %l56, align 4, !tbaa !63
  %20 = load i32, i32* %wip7, align 8, !tbaa !397
  %sub58 = sub nsw i32 %19, %20
  %conv59 = sitofp i32 %sub58 to double
  %mul60 = fmul double %div, %conv59
  %conv61 = fptosi double %mul60 to i32
  %add62 = add nsw i32 %call, %conv61
  store i32 %add62, i32* %l56, align 4, !tbaa !63
  %indvars.iv.next152 = add nuw nsw i64 %indvars.iv151, 1
  %21 = load i32, i32* %n_tgprob, align 4, !tbaa !401
  %22 = sext i32 %21 to i64
  %cmp51 = icmp slt i64 %indvars.iv.next152, %22
  br i1 %cmp51, label %for.body53, label %for.cond70.preheader, !llvm.loop !404

for.body73:                                       ; preds = %for.cond70.preheader, %for.body73
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body73 ], [ 0, %for.cond70.preheader ]
  %23 = load %union.lmlog_t*, %union.lmlog_t** %tgbowt, align 8, !tbaa !405
  %arrayidx75 = getelementptr inbounds %union.lmlog_t, %union.lmlog_t* %23, i64 %indvars.iv
  %l76 = bitcast %union.lmlog_t* %arrayidx75 to i32*
  %24 = load i32, i32* %l76, align 4, !tbaa !63
  %conv77 = sitofp i32 %24 to double
  %mul78 = fmul double %div, %conv77
  %conv79 = fptosi double %mul78 to i32
  store i32 %conv79, i32* %l76, align 4, !tbaa !63
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %25 = load i32, i32* %n_tgbowt, align 8, !tbaa !402
  %26 = sext i32 %25 to i64
  %cmp71 = icmp slt i64 %indvars.iv.next, %26
  br i1 %cmp71, label %for.body73, label %if.end87, !llvm.loop !406

if.end87:                                         ; preds = %for.body73, %for.cond70.preheader, %for.end46
  %conv88 = fptrunc double %lw to float
  store float %conv88, float* %lw4, align 4, !tbaa !395
  store i32 %call, i32* %wip7, align 8, !tbaa !397
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.lmset_s* @lm_read_ctl(i8* %ctlfile, %struct.dict_t* %dict, double %lw, double %wip, double %uw, i8* nocapture readnone %lmdumpdir, i32* nocapture %n_lm, i32* nocapture %n_alloclm, i32 %dict_size) local_unnamed_addr #0 {
entry:
  %lmfile = alloca [4096 x i8], align 16
  %lmname = alloca [4096 x i8], align 16
  %str = alloca [4096 x i8], align 16
  %0 = getelementptr inbounds [4096 x i8], [4096 x i8]* %lmfile, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %0) #38
  %1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %lmname, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %1) #38
  %2 = getelementptr inbounds [4096 x i8], [4096 x i8]* %str, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %2) #38
  %call = tail call %struct.lmclass_set_s* @lmclass_newset() #34
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 291, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.336, i64 0, i64 0), i8* %ctlfile) #34
  %call1 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.337, i64 0, i64 0)) #34
  %3 = bitcast i8* %call1 to i32*
  %4 = load i32, i32* %3, align 4, !tbaa !37
  %tobool.not = icmp ne i32 %4, 0
  store i1 %tobool.not, i1* @LM_IN_MEMORY, align 4
  %call2 = tail call %struct._IO_FILE* @_myfopen(i8* %ctlfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.338, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 299) #34
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.339, i64 0, i64 0), i8* nonnull %2) #34
  %cmp = icmp eq i32 %call3, 1
  br i1 %cmp, label %if.then4, label %if.else28

if.then4:                                         ; preds = %entry
  %5 = bitcast [4096 x i8]* %str to i16*
  %lhsv234 = load i16, i16* %5, align 16
  %.not236 = icmp eq i16 %lhsv234, 123
  br i1 %.not236, label %while.cond.preheader, label %if.end30

while.cond.preheader:                             ; preds = %if.then4
  %call10268 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.339, i64 0, i64 0), i8* nonnull %2) #34
  %cmp11269 = icmp eq i32 %call10268, 1
  br i1 %cmp11269, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %while.cond.preheader, %while.body
  %lmclass_set.0270 = phi %struct.lmclass_set_s* [ %call16, %while.body ], [ %call, %while.cond.preheader ]
  %lhsv240 = load i16, i16* %5, align 16
  %.not242 = icmp eq i16 %lhsv240, 125
  br i1 %.not242, label %if.end21, label %while.body

while.body:                                       ; preds = %land.rhs
  %call16 = call %struct.lmclass_set_s* @lmclass_loadfile(%struct.lmclass_set_s* %lmclass_set.0270, i8* nonnull %2) #34
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.339, i64 0, i64 0), i8* nonnull %2) #34
  %cmp11 = icmp eq i32 %call10, 1
  br i1 %cmp11, label %land.rhs, label %while.end, !llvm.loop !407

while.end:                                        ; preds = %while.body, %while.cond.preheader
  %lmclass_set.0.lcssa = phi %struct.lmclass_set_s* [ %call, %while.cond.preheader ], [ %call16, %while.body ]
  %lhsv237.pr = load i16, i16* %5, align 16
  %.not239 = icmp eq i16 %lhsv237.pr, 125
  br i1 %.not239, label %if.end21, label %if.then20

if.then20:                                        ; preds = %while.end
  call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 308, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.340, i64 0, i64 0), i8* %ctlfile) #34
  br label %if.end21

if.end21:                                         ; preds = %land.rhs, %if.then20, %while.end
  %lmclass_set.0253 = phi %struct.lmclass_set_s* [ %lmclass_set.0.lcssa, %if.then20 ], [ %lmclass_set.0.lcssa, %while.end ], [ %lmclass_set.0270, %land.rhs ]
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.339, i64 0, i64 0), i8* nonnull %2) #34
  %cmp24.not = icmp eq i32 %call23, 1
  br i1 %cmp24.not, label %if.end30, label %if.then25

if.then25:                                        ; preds = %if.end21
  store i8 0, i8* %2, align 16, !tbaa !63
  br label %if.end30

if.else28:                                        ; preds = %entry
  store i8 0, i8* %2, align 16, !tbaa !63
  br label %if.end30

if.end30:                                         ; preds = %if.then4, %if.then25, %if.end21, %if.else28
  %lmclass_set.1 = phi %struct.lmclass_set_s* [ %lmclass_set.0253, %if.then25 ], [ %lmclass_set.0253, %if.end21 ], [ %call, %if.then4 ], [ %call, %if.else28 ]
  %lmclass_list = getelementptr inbounds %struct.lmclass_set_s, %struct.lmclass_set_s* %lmclass_set.1, i64 0, i32 0
  %cl.0265 = load %struct.lmclass_s*, %struct.lmclass_s** %lmclass_list, align 8, !tbaa !74
  %cmp31.not266 = icmp eq %struct.lmclass_s* %cl.0265, null
  br i1 %cmp31.not266, label %for.end38, label %for.body

for.body:                                         ; preds = %if.end30, %for.end
  %cl.0267 = phi %struct.lmclass_s* [ %cl.0, %for.end ], [ %cl.0265, %if.end30 ]
  %wordlist = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %cl.0267, i64 0, i32 1
  %w.0262 = load %struct.lmclass_word_s*, %struct.lmclass_word_s** %wordlist, align 8, !tbaa !74
  %cmp33.not263 = icmp eq %struct.lmclass_word_s* %w.0262, null
  br i1 %cmp33.not263, label %for.end, label %for.body34

for.body34:                                       ; preds = %for.body, %for.body34
  %w.0264 = phi %struct.lmclass_word_s* [ %w.0, %for.body34 ], [ %w.0262, %for.body ]
  %word = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %w.0264, i64 0, i32 0
  %6 = load i8*, i8** %word, align 8, !tbaa !408
  %call35 = call i32 @dict_wordid(%struct.dict_t* %dict, i8* %6) #34
  call void @lmclass_set_dictwid(%struct.lmclass_word_s* nonnull %w.0264, i32 %call35) #34
  %next = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %w.0264, i64 0, i32 3
  %w.0 = load %struct.lmclass_word_s*, %struct.lmclass_word_s** %next, align 8, !tbaa !74
  %cmp33.not = icmp eq %struct.lmclass_word_s* %w.0, null
  br i1 %cmp33.not, label %for.end, label %for.body34, !llvm.loop !410

for.end:                                          ; preds = %for.body34, %for.body
  %next37 = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %cl.0267, i64 0, i32 2
  %cl.0 = load %struct.lmclass_s*, %struct.lmclass_s** %next37, align 8, !tbaa !74
  %cmp31.not = icmp eq %struct.lmclass_s* %cl.0, null
  br i1 %cmp31.not, label %for.end38, label %for.body, !llvm.loop !411

for.end38:                                        ; preds = %for.end, %if.end30
  %call39 = call i32 @lmclass_get_nclass(%struct.lmclass_set_s* %lmclass_set.1) #34
  %conv = sext i32 %call39 to i64
  %call40 = call i8* @__ckd_calloc__(i64 %conv, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 350) #34
  %7 = bitcast i8* %call40 to %struct.lmclass_s**
  call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 352, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13.341, i64 0, i64 0), i32 %call39, i8* %ctlfile) #34
  %8 = bitcast [4096 x i8]* %str to i16*
  %9 = load i8, i8* %2, align 16, !tbaa !63
  %cmp44.not259 = icmp eq i8 %9, 0
  br i1 %cmp44.not259, label %while.end162, label %while.body46

while.body46:                                     ; preds = %for.end38, %if.end153
  %lmset.0260 = phi %struct.lmset_s* [ %lmset.1, %if.end153 ], [ null, %for.end38 ]
  %call49 = call i8* @strcpy(i8* noundef nonnull %0, i8* noundef nonnull %2) #34
  %call51 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.339, i64 0, i64 0), i8* nonnull %1) #34
  %cmp52.not = icmp eq i32 %call51, 1
  br i1 %cmp52.not, label %if.end56, label %if.then54

if.then54:                                        ; preds = %while.body46
  call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 358, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14.342, i64 0, i64 0), i8* nonnull %0) #34
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %while.body46
  %call58 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.339, i64 0, i64 0), i8* nonnull %2) #34
  %cmp59 = icmp eq i32 %call58, 1
  br i1 %cmp59, label %if.then61, label %if.else109

if.then61:                                        ; preds = %if.end56
  %lhsv = load i16, i16* %8, align 16
  %.not = icmp eq i16 %lhsv, 123
  br i1 %.not, label %while.cond67.preheader, label %if.else129

while.cond67.preheader:                           ; preds = %if.then61
  %call69254 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.339, i64 0, i64 0), i8* nonnull %2) #34
  %cmp70255 = icmp eq i32 %call69254, 1
  br i1 %cmp70255, label %land.rhs72, label %while.end94

land.rhs72:                                       ; preds = %while.cond67.preheader, %if.end93
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end93 ], [ 0, %while.cond67.preheader ]
  %lhsv231 = load i16, i16* %8, align 16
  %.not233 = icmp eq i16 %lhsv231, 125
  br i1 %.not233, label %if.end100.loopexit, label %while.body78

while.body78:                                     ; preds = %land.rhs72
  %cmp79.not = icmp slt i64 %indvars.iv, %conv
  br i1 %cmp79.not, label %if.end83, label %if.then81

if.then81:                                        ; preds = %while.body78
  call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 367, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15.343, i64 0, i64 0), i8* nonnull %0) #34
  br label %if.end83

if.end83:                                         ; preds = %if.then81, %while.body78
  %call85 = call %struct.lmclass_s* @lmclass_get_lmclass(%struct.lmclass_set_s* %lmclass_set.1, i8* nonnull %2) #34
  %arrayidx86 = getelementptr inbounds %struct.lmclass_s*, %struct.lmclass_s** %7, i64 %indvars.iv
  store %struct.lmclass_s* %call85, %struct.lmclass_s** %arrayidx86, align 8, !tbaa !74
  %cmp89.not = icmp eq %struct.lmclass_s* %call85, null
  br i1 %cmp89.not, label %if.then91, label %if.end93

if.then91:                                        ; preds = %if.end83
  call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 374, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16.344, i64 0, i64 0), i8* nonnull %2) #34
  br label %if.end93

if.end93:                                         ; preds = %if.then91, %if.end83
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %call69 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.339, i64 0, i64 0), i8* nonnull %2) #34
  %cmp70 = icmp eq i32 %call69, 1
  br i1 %cmp70, label %land.rhs72, label %while.end94.loopexit, !llvm.loop !412

while.end94.loopexit:                             ; preds = %if.end93
  %10 = trunc i64 %indvars.iv.next to i32
  br label %while.end94

while.end94:                                      ; preds = %while.end94.loopexit, %while.cond67.preheader
  %n_lmclass_used.0.lcssa = phi i32 [ 0, %while.cond67.preheader ], [ %10, %while.end94.loopexit ]
  %lhsv228.pr = load i16, i16* %8, align 16
  %.not230 = icmp eq i16 %lhsv228.pr, 125
  br i1 %.not230, label %if.end100, label %if.then99

if.then99:                                        ; preds = %while.end94
  call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 378, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.340, i64 0, i64 0), i8* %ctlfile) #34
  br label %if.end100

if.end100.loopexit:                               ; preds = %land.rhs72
  %11 = trunc i64 %indvars.iv to i32
  br label %if.end100

if.end100:                                        ; preds = %if.end100.loopexit, %if.then99, %while.end94
  %n_lmclass_used.0251 = phi i32 [ %n_lmclass_used.0.lcssa, %if.then99 ], [ %n_lmclass_used.0.lcssa, %while.end94 ], [ %11, %if.end100.loopexit ]
  %call102 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.339, i64 0, i64 0), i8* nonnull %2) #34
  %cmp103.not = icmp eq i32 %call102, 1
  br i1 %cmp103.not, label %if.end111, label %if.then105

if.then105:                                       ; preds = %if.end100
  store i8 0, i8* %2, align 16, !tbaa !63
  br label %if.end111

if.else109:                                       ; preds = %if.end56
  store i8 0, i8* %2, align 16, !tbaa !63
  br label %if.else129

if.end111:                                        ; preds = %if.then105, %if.end100
  %cmp112.not = icmp eq i32 %n_lmclass_used.0251, 0
  br i1 %cmp112.not, label %if.else129, label %if.then114

if.then114:                                       ; preds = %if.end111
  %call116 = call fastcc %struct.lm_s* @lm_read_dump(i8* nonnull %0, double %lw, double %wip, double %uw, i32 %n_lmclass_used.0251, %struct.lmclass_s** %7, i32 %dict_size) #36
  %call117 = call i8* @__ckd_calloc__(i64 100003, i64 12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 399) #34
  %tgcache = getelementptr inbounds %struct.lm_s, %struct.lm_s* %call116, i64 0, i32 27
  %12 = bitcast %struct.lm_tgcache_entry_t** %tgcache to i8**
  store i8* %call117, i8** %12, align 8, !tbaa !413
  %.cast272 = bitcast i8* %call117 to %struct.lm_tgcache_entry_t*
  br label %for.body121

for.body121:                                      ; preds = %if.then114, %for.body121
  %indvars.iv276 = phi i64 [ 0, %if.then114 ], [ %indvars.iv.next277, %for.body121 ]
  %arrayidx125 = getelementptr inbounds %struct.lm_tgcache_entry_t, %struct.lm_tgcache_entry_t* %.cast272, i64 %indvars.iv276, i32 0, i64 0
  store i16 -1, i16* %arrayidx125, align 4, !tbaa !40
  %indvars.iv.next277 = add nuw nsw i64 %indvars.iv276, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next277, 100003
  br i1 %exitcond.not, label %if.end146, label %for.body121, !llvm.loop !414

if.else129:                                       ; preds = %if.else109, %if.then61, %if.end111
  %call131 = call fastcc %struct.lm_s* @lm_read_dump(i8* nonnull %0, double %lw, double %wip, double %uw, i32 0, %struct.lmclass_s** null, i32 %dict_size) #36
  %call132 = call i8* @__ckd_calloc__(i64 100003, i64 12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 410) #34
  %tgcache133 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %call131, i64 0, i32 27
  %13 = bitcast %struct.lm_tgcache_entry_t** %tgcache133 to i8**
  store i8* %call132, i8** %13, align 8, !tbaa !413
  %.cast = bitcast i8* %call132 to %struct.lm_tgcache_entry_t*
  br label %for.body137

for.body137:                                      ; preds = %if.else129, %for.body137
  %indvars.iv278 = phi i64 [ 0, %if.else129 ], [ %indvars.iv.next279, %for.body137 ]
  %arrayidx142 = getelementptr inbounds %struct.lm_tgcache_entry_t, %struct.lm_tgcache_entry_t* %.cast, i64 %indvars.iv278, i32 0, i64 0
  store i16 -1, i16* %arrayidx142, align 4, !tbaa !40
  %indvars.iv.next279 = add nuw nsw i64 %indvars.iv278, 1
  %exitcond280.not = icmp eq i64 %indvars.iv.next279, 100003
  br i1 %exitcond280.not, label %if.end146, label %for.body137, !llvm.loop !415

if.end146:                                        ; preds = %for.body121, %for.body137
  %lm.0 = phi %struct.lm_s* [ %call131, %for.body137 ], [ %call116, %for.body121 ]
  %14 = load i32, i32* %n_lm, align 4, !tbaa !37
  %15 = load i32, i32* %n_alloclm, align 4, !tbaa !37
  %cmp147 = icmp eq i32 %14, %15
  br i1 %cmp147, label %if.then149, label %if.end153

if.then149:                                       ; preds = %if.end146
  %16 = bitcast %struct.lmset_s* %lmset.0260 to i8*
  %add = add nsw i32 %14, 16
  %conv150 = sext i32 %add to i64
  %mul = shl nsw i64 %conv150, 4
  %call151 = call i8* @__ckd_realloc__(i8* %16, i64 %mul, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 416) #34
  %17 = bitcast i8* %call151 to %struct.lmset_s*
  %18 = load i32, i32* %n_alloclm, align 4, !tbaa !37
  %add152 = add nsw i32 %18, 16
  store i32 %add152, i32* %n_alloclm, align 4, !tbaa !37
  br label %if.end153

if.end153:                                        ; preds = %if.then149, %if.end146
  %lmset.1 = phi %struct.lmset_s* [ %17, %if.then149 ], [ %lmset.0260, %if.end146 ]
  %call155 = call i8* @__ckd_salloc__(i8* nonnull %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 419) #34
  %19 = load i32, i32* %n_lm, align 4, !tbaa !37
  %idxprom156 = sext i32 %19 to i64
  %name = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %lmset.1, i64 %idxprom156, i32 0
  store i8* %call155, i8** %name, align 8, !tbaa !30
  %lm160 = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %lmset.1, i64 %idxprom156, i32 1
  store %struct.lm_s* %lm.0, %struct.lm_s** %lm160, align 8, !tbaa !24
  %add161 = add nsw i32 %19, 1
  store i32 %add161, i32* %n_lm, align 4, !tbaa !37
  %20 = load i8, i8* %2, align 16, !tbaa !63
  %cmp44.not = icmp eq i8 %20, 0
  br i1 %cmp44.not, label %while.end162, label %while.body46, !llvm.loop !416

while.end162:                                     ; preds = %if.end153, %for.end38
  %lmset.0.lcssa = phi %struct.lmset_s* [ null, %for.end38 ], [ %lmset.1, %if.end153 ]
  call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 424, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  %21 = load i32, i32* %n_alloclm, align 4, !tbaa !37
  %22 = load i32, i32* %n_lm, align 4, !tbaa !37
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17.345, i64 0, i64 0), i32 %21, i32 %22) #34
  %call163 = call i32 @fclose(%struct._IO_FILE* %call2) #36
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %2) #38
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %0) #38
  ret %struct.lmset_s* %lmset.0.lcssa
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc %struct.lm_s* @lm_read_dump(i8* %file, double %lw, double %wip, double %uw, i32 %n_lmclass_used, %struct.lmclass_s** nocapture readonly %lmclass, i32 %dict_size) unnamed_addr #0 {
entry:
  %k = alloca i32, align 4
  %str = alloca [1024 x i8], align 16
  %0 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %str, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %1) #38
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 248, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 464) #34
  %2 = bitcast i8* %call to %struct.lm_s*
  %dict_size1 = getelementptr inbounds i8, i8* %call, i64 216
  %3 = bitcast i8* %dict_size1 to i32*
  store i32 %dict_size, i32* %3, align 8, !tbaa !417
  %call2 = tail call %struct._IO_FILE* @fopen(i8* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32.346, i64 0, i64 0)) #36
  %fp = getelementptr inbounds i8, i8* %call, i64 128
  %4 = bitcast i8* %fp to %struct._IO_FILE**
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %4, align 8, !tbaa !418
  %cmp = icmp eq %struct._IO_FILE* %call2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 468, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33.347, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__fatal_sys_error(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34.348, i64 0, i64 0), i8* %file) #34
  %.pre = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = phi %struct._IO_FILE* [ %.pre, %if.then ], [ %call2, %entry ]
  %call4 = call i64 @fread(i8* nonnull %0, i64 4, i64 1, %struct._IO_FILE* %5) #36
  %cmp5.not = icmp eq i64 %call4, 1
  br i1 %cmp5.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 472, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35.349, i64 0, i64 0), i8* %file) #34
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end
  %6 = load i32, i32* %k, align 4, !tbaa !37
  %cmp9 = icmp eq i32 %6, 17
  br i1 %cmp9, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.end7
  %byteswap = getelementptr inbounds i8, i8* %call, i64 136
  %7 = bitcast i8* %byteswap to i32*
  store i32 0, i32* %7, align 8, !tbaa !419
  br label %if.end39

if.else:                                          ; preds = %if.end7
  %or18 = tail call i32 @llvm.bswap.i32(i32 %6)
  store i32 %or18, i32* %k, align 4, !tbaa !37
  %cmp22 = icmp eq i32 %6, 285212672
  br i1 %cmp22, label %if.then24, label %if.else26

if.then24:                                        ; preds = %if.else
  %byteswap25 = getelementptr inbounds i8, i8* %call, i64 136
  %8 = bitcast i8* %byteswap25 to i32*
  store i32 1, i32* %8, align 8, !tbaa !419
  br label %if.end39

if.else26:                                        ; preds = %if.else
  %9 = lshr i32 %or18, 24
  %10 = lshr i32 %or18, 8
  %and30 = and i32 %10, 65280
  %shl32 = shl i32 %or18, 8
  %and33 = and i32 %shl32, 16711680
  %shl35 = shl i32 %or18, 24
  %or34 = or i32 %shl35, %9
  %or31 = or i32 %or34, %and30
  %or37 = or i32 %or31, %and33
  store i32 %or37, i32* %k, align 4, !tbaa !37
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 481, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.36.350, i64 0, i64 0), i32 %or37, i32 %or37) #34
  br label %if.end39

if.end39:                                         ; preds = %if.then24, %if.else26, %if.then11
  %11 = phi i32 [ %or18, %if.then24 ], [ %or37, %if.else26 ], [ 17, %if.then11 ]
  %conv40 = sext i32 %11 to i64
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %call42 = call i64 @fread(i8* nonnull %1, i64 1, i64 %conv40, %struct._IO_FILE* %12) #36
  %13 = load i32, i32* %k, align 4, !tbaa !37
  %conv43 = sext i32 %13 to i64
  %cmp44.not = icmp eq i64 %call42, %conv43
  br i1 %cmp44.not, label %if.end47, label %if.then46

if.then46:                                        ; preds = %if.end39
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 487, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35.349, i64 0, i64 0), i8* %file) #34
  br label %if.end47

if.end47:                                         ; preds = %if.then46, %if.end39
  %call50 = call i32 @strncmp(i8* nonnull %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.60.351, i64 0, i64 0), i64 %conv43) #37
  %cmp51.not = icmp eq i32 %call50, 0
  br i1 %cmp51.not, label %if.end54, label %if.then53

if.then53:                                        ; preds = %if.end47
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 489, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37.352, i64 0, i64 0)) #34
  br label %if.end54

if.end54:                                         ; preds = %if.then53, %if.end47
  %call55 = tail call fastcc i32 @lm_fread_int32(%struct.lm_s* nonnull %2) #36
  store i32 %call55, i32* %k, align 4, !tbaa !37
  %call55.off = add i32 %call55, -1
  %14 = icmp ugt i32 %call55.off, 1023
  br i1 %14, label %if.then60, label %if.end61

if.then60:                                        ; preds = %if.end54
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 494, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.38.353, i64 0, i64 0), i32 %call55) #34
  br label %if.end61

if.end61:                                         ; preds = %if.end54, %if.then60
  %conv63 = sext i32 %call55 to i64
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %call65 = call i64 @fread(i8* nonnull %1, i64 1, i64 %conv63, %struct._IO_FILE* %15) #36
  %16 = load i32, i32* %k, align 4, !tbaa !37
  %conv66 = sext i32 %16 to i64
  %cmp67.not = icmp eq i64 %call65, %conv66
  br i1 %cmp67.not, label %if.end70, label %if.then69

if.then69:                                        ; preds = %if.end61
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 496, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35.349, i64 0, i64 0), i8* %file) #34
  br label %if.end70

if.end70:                                         ; preds = %if.then69, %if.end61
  %call71 = tail call fastcc i32 @lm_fread_int32(%struct.lm_s* nonnull %2) #36
  %cmp72 = icmp slt i32 %call71, 1
  br i1 %cmp72, label %if.then74, label %if.else105

if.then74:                                        ; preds = %if.end70
  %call75 = tail call fastcc i32 @lm_fread_int32(%struct.lm_s* nonnull %2) #36
  %call761024 = tail call fastcc i32 @lm_fread_int32(%struct.lm_s* nonnull %2) #36
  store i32 %call761024, i32* %k, align 4, !tbaa !37
  %cmp771025 = icmp eq i32 %call761024, 0
  br i1 %cmp771025, label %for.end, label %if.end80.preheader

if.end80.preheader:                               ; preds = %if.then74
  %k.promoted = load i32, i32* %k, align 4, !tbaa !37
  br label %if.end80

if.end80:                                         ; preds = %if.end80.preheader, %if.end89
  %17 = phi i32 [ %call76, %if.end89 ], [ %k.promoted, %if.end80.preheader ]
  %call761026 = phi i32 [ %call76, %if.end89 ], [ %call761024, %if.end80.preheader ]
  %conv82 = sext i32 %call761026 to i64
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %call84 = call i64 @fread(i8* nonnull %1, i64 1, i64 %conv82, %struct._IO_FILE* %18) #36
  %conv85 = sext i32 %17 to i64
  %cmp86.not = icmp eq i64 %call84, %conv85
  br i1 %cmp86.not, label %if.end89, label %if.then88

if.then88:                                        ; preds = %if.end80
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 509, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35.349, i64 0, i64 0), i8* %file) #34
  br label %if.end89

if.end89:                                         ; preds = %if.then88, %if.end80
  %call76 = tail call fastcc i32 @lm_fread_int32(%struct.lm_s* nonnull %2) #36
  %cmp77 = icmp eq i32 %call76, 0
  br i1 %cmp77, label %for.end.loopexit, label %if.end80, !llvm.loop !420

for.end.loopexit:                                 ; preds = %if.end89
  store i32 %call76, i32* %k, align 4, !tbaa !37
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %if.then74
  %cmp90 = icmp slt i32 %call71, -1
  br i1 %cmp90, label %if.then92, label %if.end103

if.then92:                                        ; preds = %for.end
  %call93 = tail call fastcc i32 @lm_fread_int32(%struct.lm_s* nonnull %2) #36
  store i32 %call93, i32* %k, align 4, !tbaa !37
  %call93.off = add i32 %call93, -1
  %19 = icmp ugt i32 %call93.off, 14
  br i1 %19, label %if.then99, label %if.end103

if.then99:                                        ; preds = %if.then92
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 516, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.39.354, i64 0, i64 0), i32 %call93) #34
  br label %if.end103

if.end103:                                        ; preds = %for.end, %if.then99, %if.then92
  %.sink = phi i32 [ %call93, %if.then92 ], [ %call93, %if.then99 ], [ 9, %for.end ]
  %log_bg_seg_sz102 = getelementptr inbounds i8, i8* %call, i64 28
  %20 = bitcast i8* %log_bg_seg_sz102 to i32*
  store i32 %.sink, i32* %20, align 4, !tbaa !421
  %call104 = tail call fastcc i32 @lm_fread_int32(%struct.lm_s* nonnull %2) #36
  %n_ug = bitcast i8* %call to i32*
  store i32 %call104, i32* %n_ug, align 8, !tbaa !133
  br label %if.end108

if.else105:                                       ; preds = %if.end70
  %n_ug106 = bitcast i8* %call to i32*
  store i32 %call71, i32* %n_ug106, align 8, !tbaa !133
  %log_bg_seg_sz107 = getelementptr inbounds i8, i8* %call, i64 28
  %21 = bitcast i8* %log_bg_seg_sz107 to i32*
  store i32 9, i32* %21, align 4, !tbaa !421
  br label %if.end108

if.end108:                                        ; preds = %if.else105, %if.end103
  %22 = phi i32 [ %call71, %if.else105 ], [ %call104, %if.end103 ]
  %n_ug109.pre-phi = bitcast i8* %call to i32*
  %cmp110 = icmp slt i32 %22, 1
  %cmp114 = icmp ugt i32 %22, 65533
  %or.cond = or i1 %cmp110, %cmp114
  br i1 %or.cond, label %if.then116, label %if.end118

if.then116:                                       ; preds = %if.end108
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 529, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  %23 = load i32, i32* %n_ug109.pre-phi, align 8, !tbaa !133
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.40.355, i64 0, i64 0), i32 %23, i32 65534) #34
  br label %if.end118

if.end118:                                        ; preds = %if.end108, %if.then116
  %log_bg_seg_sz119 = getelementptr inbounds i8, i8* %call, i64 28
  %24 = bitcast i8* %log_bg_seg_sz119 to i32*
  %25 = load i32, i32* %24, align 4, !tbaa !421
  %shl120 = shl nuw i32 1, %25
  %bg_seg_sz = getelementptr inbounds i8, i8* %call, i64 32
  %26 = bitcast i8* %bg_seg_sz to i32*
  store i32 %shl120, i32* %26, align 8, !tbaa !422
  %call121 = tail call fastcc i32 @lm_fread_int32(%struct.lm_s* nonnull %2) #36
  %n_bg = getelementptr inbounds i8, i8* %call, i64 4
  %27 = bitcast i8* %n_bg to i32*
  store i32 %call121, i32* %27, align 4, !tbaa !134
  %cmp123 = icmp slt i32 %call121, 0
  br i1 %cmp123, label %if.then125, label %if.end127

if.then125:                                       ; preds = %if.end118
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 536, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  %28 = load i32, i32* %27, align 4, !tbaa !134
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41.356, i64 0, i64 0), i32 %28) #34
  br label %if.end127

if.end127:                                        ; preds = %if.then125, %if.end118
  %call128 = tail call fastcc i32 @lm_fread_int32(%struct.lm_s* nonnull %2) #36
  %n_tg = getelementptr inbounds i8, i8* %call, i64 8
  %29 = bitcast i8* %n_tg to i32*
  store i32 %call128, i32* %29, align 8, !tbaa !135
  %cmp130 = icmp slt i32 %call128, 0
  br i1 %cmp130, label %if.then132, label %if.end134

if.then132:                                       ; preds = %if.end127
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 541, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  %30 = load i32, i32* %29, align 8, !tbaa !135
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.42.357, i64 0, i64 0), i32 %30) #34
  br label %if.end134

if.end134:                                        ; preds = %if.then132, %if.end127
  %31 = load i32, i32* %n_ug109.pre-phi, align 8, !tbaa !133
  %add136 = add nsw i32 %31, 1
  %conv137 = sext i32 %add136 to i64
  %call138 = tail call i8* @__ckd_calloc__(i64 %conv137, i64 16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 544) #34
  %ug = getelementptr inbounds i8, i8* %call, i64 40
  %32 = bitcast i8* %ug to %struct.ug_t**
  %33 = bitcast i8* %ug to i8**
  store i8* %call138, i8** %33, align 8, !tbaa !34
  %34 = load i32, i32* %n_ug109.pre-phi, align 8, !tbaa !133
  %add141 = add nsw i32 %34, 1
  %conv142 = sext i32 %add141 to i64
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %call144 = tail call i64 @fread(i8* %call138, i64 16, i64 %conv142, %struct._IO_FILE* %35) #36
  %36 = load i32, i32* %n_ug109.pre-phi, align 8, !tbaa !133
  %add146 = add nsw i32 %36, 1
  %conv147 = sext i32 %add146 to i64
  %cmp148.not = icmp eq i64 %call144, %conv147
  br i1 %cmp148.not, label %if.end151, label %if.then150

if.then150:                                       ; preds = %if.end134
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 546, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35.349, i64 0, i64 0), i8* %file) #34
  br label %if.end151

if.end151:                                        ; preds = %if.then150, %if.end134
  %byteswap152 = getelementptr inbounds i8, i8* %call, i64 136
  %37 = bitcast i8* %byteswap152 to i32*
  %38 = load i32, i32* %37, align 8, !tbaa !419
  %tobool.not = icmp eq i32 %38, 0
  br i1 %tobool.not, label %if.end256, label %for.cond154.preheader

for.cond154.preheader:                            ; preds = %if.end151
  %39 = load i32, i32* %n_ug109.pre-phi, align 8, !tbaa !133
  %cmp156.not1022 = icmp slt i32 %39, 0
  br i1 %cmp156.not1022, label %if.end256, label %for.body.preheader

for.body.preheader:                               ; preds = %for.cond154.preheader
  %.pre1040 = load %struct.ug_t*, %struct.ug_t** %32, align 8, !tbaa !34
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %40 = phi %struct.ug_t* [ %.pre1040, %for.body.preheader ], [ %44, %for.body ]
  %indvars.iv1038 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next1039, %for.body ]
  %prob = getelementptr inbounds %struct.ug_t, %struct.ug_t* %40, i64 %indvars.iv1038, i32 1
  %l = bitcast %union.lmlog_t* %prob to i32*
  %41 = load i32, i32* %l, align 4, !tbaa !63
  %or184 = tail call i32 @llvm.bswap.i32(i32 %41)
  store i32 %or184, i32* %l, align 4, !tbaa !63
  %42 = load %struct.ug_t*, %struct.ug_t** %32, align 8, !tbaa !34
  %bowt = getelementptr inbounds %struct.ug_t, %struct.ug_t* %42, i64 %indvars.iv1038, i32 2
  %l193 = bitcast %union.lmlog_t* %bowt to i32*
  %43 = load i32, i32* %l193, align 4, !tbaa !63
  %or219 = tail call i32 @llvm.bswap.i32(i32 %43)
  store i32 %or219, i32* %l193, align 4, !tbaa !63
  %44 = load %struct.ug_t*, %struct.ug_t** %32, align 8, !tbaa !34
  %firstbg = getelementptr inbounds %struct.ug_t, %struct.ug_t* %44, i64 %indvars.iv1038, i32 3
  %45 = load i32, i32* %firstbg, align 4, !tbaa !423
  %or250 = tail call i32 @llvm.bswap.i32(i32 %45)
  store i32 %or250, i32* %firstbg, align 4, !tbaa !423
  %indvars.iv.next1039 = add nuw nsw i64 %indvars.iv1038, 1
  %46 = load i32, i32* %n_ug109.pre-phi, align 8, !tbaa !133
  %47 = sext i32 %46 to i64
  %cmp156.not.not = icmp slt i64 %indvars.iv1038, %47
  br i1 %cmp156.not.not, label %for.body, label %if.end256, !llvm.loop !424

if.end256:                                        ; preds = %for.body, %for.cond154.preheader, %if.end151
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 553, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  %48 = load i32, i32* %n_ug109.pre-phi, align 8, !tbaa !133
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43.358, i64 0, i64 0), i32 %48) #34
  %.b = load i1, i1* @LM_IN_MEMORY, align 4
  br i1 %.b, label %if.then259, label %if.else303

if.then259:                                       ; preds = %if.end256
  %49 = load i32, i32* %27, align 4, !tbaa !134
  %add261 = add nsw i32 %49, 1
  %conv262 = sext i32 %add261 to i64
  %call263 = tail call i8* @__ckd_calloc__(i64 %conv262, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 557) #34
  %bg = getelementptr inbounds i8, i8* %call, i64 48
  %50 = bitcast i8* %bg to i8**
  store i8* %call263, i8** %50, align 8, !tbaa !425
  %51 = load i32, i32* %29, align 8, !tbaa !135
  %add265 = add nsw i32 %51, 1
  %conv266 = sext i32 %add265 to i64
  %call267 = tail call i8* @__ckd_calloc__(i64 %conv266, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 558) #34
  %tg = getelementptr inbounds i8, i8* %call, i64 56
  %52 = bitcast i8* %tg to i8**
  store i8* %call267, i8** %52, align 8, !tbaa !426
  %53 = load i32, i32* %27, align 4, !tbaa !134
  %cmp269 = icmp sgt i32 %53, 0
  br i1 %cmp269, label %if.then271, label %if.end285

if.then271:                                       ; preds = %if.then259
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %call273 = tail call i64 @ftell(%struct._IO_FILE* %54) #36
  %conv274 = trunc i64 %call273 to i32
  %bgoff = getelementptr inbounds i8, i8* %call, i64 140
  %55 = bitcast i8* %bgoff to i32*
  store i32 %conv274, i32* %55, align 4, !tbaa !427
  %56 = load i8*, i8** %50, align 8, !tbaa !425
  %57 = load i32, i32* %27, align 4, !tbaa !134
  %add277 = add nsw i32 %57, 1
  %conv278 = sext i32 %add277 to i64
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %call280 = tail call i64 @fread(i8* %56, i64 %conv278, i64 8, %struct._IO_FILE* %58) #36
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 563, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  %59 = load i32, i32* %27, align 4, !tbaa !134
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.44.359, i64 0, i64 0), i32 %59) #34
  %60 = load i32, i32* %n_ug109.pre-phi, align 8, !tbaa !133
  %conv283 = sext i32 %60 to i64
  %call284 = tail call i8* @__ckd_calloc__(i64 %conv283, i64 16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 565) #34
  %membg = getelementptr inbounds i8, i8* %call, i64 64
  %61 = bitcast i8* %membg to i8**
  store i8* %call284, i8** %61, align 8, !tbaa !428
  br label %if.end285

if.end285:                                        ; preds = %if.then271, %if.then259
  %62 = load i32, i32* %29, align 8, !tbaa !135
  %cmp287 = icmp sgt i32 %62, 0
  br i1 %cmp287, label %if.then289, label %if.end344

if.then289:                                       ; preds = %if.end285
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %call291 = tail call i64 @ftell(%struct._IO_FILE* %63) #36
  %conv292 = trunc i64 %call291 to i32
  %tgoff = getelementptr inbounds i8, i8* %call, i64 144
  %64 = bitcast i8* %tgoff to i32*
  store i32 %conv292, i32* %64, align 8, !tbaa !429
  %65 = load i8*, i8** %52, align 8, !tbaa !426
  %66 = load i32, i32* %29, align 8, !tbaa !135
  %conv295 = sext i32 %66 to i64
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %call297 = tail call i64 @fread(i8* %65, i64 %conv295, i64 4, %struct._IO_FILE* %67) #36
  br label %if.end344.sink.split

if.else303:                                       ; preds = %if.end256
  %bg304 = getelementptr inbounds i8, i8* %call, i64 48
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %bg304, i8 0, i64 16, i1 false)
  %68 = load i32, i32* %27, align 4, !tbaa !134
  %cmp307 = icmp sgt i32 %68, 0
  br i1 %cmp307, label %if.then309, label %if.end324

if.then309:                                       ; preds = %if.else303
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %call311 = tail call i64 @ftell(%struct._IO_FILE* %69) #36
  %conv312 = trunc i64 %call311 to i32
  %bgoff313 = getelementptr inbounds i8, i8* %call, i64 140
  %70 = bitcast i8* %bgoff313 to i32*
  store i32 %conv312, i32* %70, align 4, !tbaa !427
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %72 = load i32, i32* %27, align 4, !tbaa !134
  %add316 = add nsw i32 %72, 1
  %conv317 = sext i32 %add316 to i64
  %mul = shl nsw i64 %conv317, 3
  %call318 = tail call i32 @fseek(%struct._IO_FILE* %71, i64 %mul, i32 1) #36
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 583, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  %73 = load i32, i32* %27, align 4, !tbaa !134
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46.360, i64 0, i64 0), i32 %73) #34
  %74 = load i32, i32* %n_ug109.pre-phi, align 8, !tbaa !133
  %conv321 = sext i32 %74 to i64
  %call322 = tail call i8* @__ckd_calloc__(i64 %conv321, i64 16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 584) #34
  %membg323 = getelementptr inbounds i8, i8* %call, i64 64
  %75 = bitcast i8* %membg323 to i8**
  store i8* %call322, i8** %75, align 8, !tbaa !428
  br label %if.end324

if.end324:                                        ; preds = %if.then309, %if.else303
  %76 = load i32, i32* %29, align 8, !tbaa !135
  %cmp326 = icmp sgt i32 %76, 0
  br i1 %cmp326, label %if.then328, label %if.end344

if.then328:                                       ; preds = %if.end324
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %call330 = tail call i64 @ftell(%struct._IO_FILE* %77) #36
  %conv331 = trunc i64 %call330 to i32
  %tgoff332 = getelementptr inbounds i8, i8* %call, i64 144
  %78 = bitcast i8* %tgoff332 to i32*
  store i32 %conv331, i32* %78, align 8, !tbaa !429
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %80 = load i32, i32* %29, align 8, !tbaa !135
  %conv335 = sext i32 %80 to i64
  %mul336 = shl nsw i64 %conv335, 2
  %call337 = tail call i32 @fseek(%struct._IO_FILE* %79, i64 %mul336, i32 1) #36
  br label %if.end344.sink.split

if.end344.sink.split:                             ; preds = %if.then289, %if.then328
  %.sink1051 = phi i64 [ 591, %if.then328 ], [ 571, %if.then289 ]
  %.sink1049 = phi i8* [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.47.361, i64 0, i64 0), %if.then328 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45.362, i64 0, i64 0), %if.then289 ]
  %.sink1047 = phi i32 [ 593, %if.then328 ], [ 573, %if.then289 ]
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 %.sink1051, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  %81 = load i32, i32* %29, align 8, !tbaa !135
  tail call void (i8*, ...) @_E__pr_info(i8* %.sink1049, i32 %81) #34
  %82 = load i32, i32* %n_ug109.pre-phi, align 8, !tbaa !133
  %conv340 = sext i32 %82 to i64
  %call341 = tail call i8* @__ckd_calloc__(i64 %conv340, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 %.sink1047) #34
  %tginfo342 = getelementptr inbounds i8, i8* %call, i64 72
  %83 = bitcast i8* %tginfo342 to i8**
  store i8* %call341, i8** %83, align 8, !tbaa !430
  br label %if.end344

if.end344:                                        ; preds = %if.end344.sink.split, %if.end324, %if.end285
  %84 = load i32, i32* %27, align 4, !tbaa !134
  %cmp346 = icmp sgt i32 %84, 0
  br i1 %cmp346, label %if.then348, label %if.end418

if.then348:                                       ; preds = %if.end344
  %call349 = tail call fastcc i32 @lm_fread_int32(%struct.lm_s* nonnull %2) #36
  %n_bgprob = getelementptr inbounds i8, i8* %call, i64 112
  %85 = bitcast i8* %n_bgprob to i32*
  store i32 %call349, i32* %85, align 8, !tbaa !396
  %call349.off = add i32 %call349, -1
  %86 = icmp ugt i32 %call349.off, 65535
  br i1 %86, label %if.then357, label %if.end359

if.then357:                                       ; preds = %if.then348
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 601, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  %87 = load i32, i32* %85, align 8, !tbaa !396
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.48.363, i64 0, i64 0), i32 %87) #34
  %.pre1041 = load i32, i32* %85, align 8, !tbaa !396
  br label %if.end359

if.end359:                                        ; preds = %if.then348, %if.then357
  %88 = phi i32 [ %call349, %if.then348 ], [ %.pre1041, %if.then357 ]
  %conv361 = sext i32 %88 to i64
  %call362 = tail call i8* @__ckd_calloc__(i64 %conv361, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 604) #34
  %bgprob = getelementptr inbounds i8, i8* %call, i64 80
  %89 = bitcast i8* %bgprob to %union.lmlog_t**
  %90 = bitcast i8* %bgprob to i8**
  store i8* %call362, i8** %90, align 8, !tbaa !399
  %91 = load i32, i32* %85, align 8, !tbaa !396
  %conv365 = sext i32 %91 to i64
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %call367 = tail call i64 @fread(i8* %call362, i64 4, i64 %conv365, %struct._IO_FILE* %92) #36
  %93 = load i32, i32* %85, align 8, !tbaa !396
  %conv369 = sext i32 %93 to i64
  %cmp370.not = icmp eq i64 %call367, %conv369
  br i1 %cmp370.not, label %if.end373, label %if.then372

if.then372:                                       ; preds = %if.end359
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 607, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35.349, i64 0, i64 0), i8* %file) #34
  br label %if.end373

if.end373:                                        ; preds = %if.then372, %if.end359
  %94 = load i32, i32* %37, align 8, !tbaa !419
  %tobool375.not = icmp eq i32 %94, 0
  br i1 %tobool375.not, label %if.end416, label %for.cond377.preheader

for.cond377.preheader:                            ; preds = %if.end373
  %95 = load i32, i32* %85, align 8, !tbaa !396
  %cmp3791020 = icmp sgt i32 %95, 0
  br i1 %cmp3791020, label %for.body381, label %if.end416

for.body381:                                      ; preds = %for.cond377.preheader, %for.body381
  %indvars.iv1036 = phi i64 [ %indvars.iv.next1037, %for.body381 ], [ 0, %for.cond377.preheader ]
  %96 = load %union.lmlog_t*, %union.lmlog_t** %89, align 8, !tbaa !399
  %arrayidx384 = getelementptr inbounds %union.lmlog_t, %union.lmlog_t* %96, i64 %indvars.iv1036
  %l385 = bitcast %union.lmlog_t* %arrayidx384 to i32*
  %97 = load i32, i32* %l385, align 4, !tbaa !63
  %or408 = tail call i32 @llvm.bswap.i32(i32 %97)
  store i32 %or408, i32* %l385, align 4, !tbaa !63
  %indvars.iv.next1037 = add nuw nsw i64 %indvars.iv1036, 1
  %98 = load i32, i32* %85, align 8, !tbaa !396
  %99 = sext i32 %98 to i64
  %cmp379 = icmp slt i64 %indvars.iv.next1037, %99
  br i1 %cmp379, label %for.body381, label %if.end416, !llvm.loop !431

if.end416:                                        ; preds = %for.body381, %for.cond377.preheader, %if.end373
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 613, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  %100 = load i32, i32* %85, align 8, !tbaa !396
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.49.364, i64 0, i64 0), i32 %100) #34
  br label %if.end418

if.end418:                                        ; preds = %if.end416, %if.end344
  %101 = load i32, i32* %29, align 8, !tbaa !135
  %cmp420 = icmp sgt i32 %101, 0
  br i1 %cmp420, label %if.then422, label %if.end619

if.then422:                                       ; preds = %if.end418
  %call423 = tail call fastcc i32 @lm_fread_int32(%struct.lm_s* nonnull %2) #36
  %n_tgbowt = getelementptr inbounds i8, i8* %call, i64 120
  %102 = bitcast i8* %n_tgbowt to i32*
  store i32 %call423, i32* %102, align 8, !tbaa !402
  %call423.off = add i32 %call423, -1
  %103 = icmp ugt i32 %call423.off, 65535
  br i1 %103, label %if.then431, label %if.end433

if.then431:                                       ; preds = %if.then422
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 620, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  %104 = load i32, i32* %102, align 8, !tbaa !402
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.50.365, i64 0, i64 0), i32 %104) #34
  %.pre1042 = load i32, i32* %102, align 8, !tbaa !402
  br label %if.end433

if.end433:                                        ; preds = %if.then422, %if.then431
  %105 = phi i32 [ %call423, %if.then422 ], [ %.pre1042, %if.then431 ]
  %conv435 = sext i32 %105 to i64
  %call436 = tail call i8* @__ckd_calloc__(i64 %conv435, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 623) #34
  %tgbowt = getelementptr inbounds i8, i8* %call, i64 96
  %106 = bitcast i8* %tgbowt to %union.lmlog_t**
  %107 = bitcast i8* %tgbowt to i8**
  store i8* %call436, i8** %107, align 8, !tbaa !405
  %108 = load i32, i32* %102, align 8, !tbaa !402
  %conv439 = sext i32 %108 to i64
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %call441 = tail call i64 @fread(i8* %call436, i64 4, i64 %conv439, %struct._IO_FILE* %109) #36
  %110 = load i32, i32* %102, align 8, !tbaa !402
  %conv443 = sext i32 %110 to i64
  %cmp444.not = icmp eq i64 %call441, %conv443
  br i1 %cmp444.not, label %if.end447, label %if.then446

if.then446:                                       ; preds = %if.end433
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 626, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35.349, i64 0, i64 0), i8* %file) #34
  br label %if.end447

if.end447:                                        ; preds = %if.then446, %if.end433
  %111 = load i32, i32* %37, align 8, !tbaa !419
  %tobool449.not = icmp eq i32 %111, 0
  br i1 %tobool449.not, label %if.end490, label %for.cond451.preheader

for.cond451.preheader:                            ; preds = %if.end447
  %112 = load i32, i32* %102, align 8, !tbaa !402
  %cmp4531018 = icmp sgt i32 %112, 0
  br i1 %cmp4531018, label %for.body455, label %if.end490

for.body455:                                      ; preds = %for.cond451.preheader, %for.body455
  %indvars.iv1034 = phi i64 [ %indvars.iv.next1035, %for.body455 ], [ 0, %for.cond451.preheader ]
  %113 = load %union.lmlog_t*, %union.lmlog_t** %106, align 8, !tbaa !405
  %arrayidx458 = getelementptr inbounds %union.lmlog_t, %union.lmlog_t* %113, i64 %indvars.iv1034
  %l459 = bitcast %union.lmlog_t* %arrayidx458 to i32*
  %114 = load i32, i32* %l459, align 4, !tbaa !63
  %or482 = tail call i32 @llvm.bswap.i32(i32 %114)
  store i32 %or482, i32* %l459, align 4, !tbaa !63
  %indvars.iv.next1035 = add nuw nsw i64 %indvars.iv1034, 1
  %115 = load i32, i32* %102, align 8, !tbaa !402
  %116 = sext i32 %115 to i64
  %cmp453 = icmp slt i64 %indvars.iv.next1035, %116
  br i1 %cmp453, label %for.body455, label %if.end490, !llvm.loop !432

if.end490:                                        ; preds = %for.body455, %for.cond451.preheader, %if.end447
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 631, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  %117 = load i32, i32* %102, align 8, !tbaa !402
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.51.366, i64 0, i64 0), i32 %117) #34
  %call492 = tail call fastcc i32 @lm_fread_int32(%struct.lm_s* nonnull %2) #36
  %n_tgprob = getelementptr inbounds i8, i8* %call, i64 116
  %118 = bitcast i8* %n_tgprob to i32*
  store i32 %call492, i32* %118, align 4, !tbaa !401
  %call492.off = add i32 %call492, -1
  %119 = icmp ugt i32 %call492.off, 65535
  br i1 %119, label %if.then500, label %if.end502

if.then500:                                       ; preds = %if.end490
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 636, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  %120 = load i32, i32* %118, align 4, !tbaa !401
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.50.365, i64 0, i64 0), i32 %120) #34
  %.pre1043 = load i32, i32* %118, align 4, !tbaa !401
  br label %if.end502

if.end502:                                        ; preds = %if.end490, %if.then500
  %121 = phi i32 [ %call492, %if.end490 ], [ %.pre1043, %if.then500 ]
  %conv504 = sext i32 %121 to i64
  %call505 = tail call i8* @__ckd_calloc__(i64 %conv504, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 639) #34
  %tgprob = getelementptr inbounds i8, i8* %call, i64 88
  %122 = bitcast i8* %tgprob to %union.lmlog_t**
  %123 = bitcast i8* %tgprob to i8**
  store i8* %call505, i8** %123, align 8, !tbaa !403
  %124 = load i32, i32* %118, align 4, !tbaa !401
  %conv508 = sext i32 %124 to i64
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %call510 = tail call i64 @fread(i8* %call505, i64 4, i64 %conv508, %struct._IO_FILE* %125) #36
  %126 = load i32, i32* %118, align 4, !tbaa !401
  %conv512 = sext i32 %126 to i64
  %cmp513.not = icmp eq i64 %call510, %conv512
  br i1 %cmp513.not, label %if.end516, label %if.then515

if.then515:                                       ; preds = %if.end502
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 642, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35.349, i64 0, i64 0), i8* %file) #34
  br label %if.end516

if.end516:                                        ; preds = %if.then515, %if.end502
  %127 = load i32, i32* %37, align 8, !tbaa !419
  %tobool518.not = icmp eq i32 %127, 0
  br i1 %tobool518.not, label %if.end559, label %for.cond520.preheader

for.cond520.preheader:                            ; preds = %if.end516
  %128 = load i32, i32* %118, align 4, !tbaa !401
  %cmp5221016 = icmp sgt i32 %128, 0
  br i1 %cmp5221016, label %for.body524, label %if.end559

for.body524:                                      ; preds = %for.cond520.preheader, %for.body524
  %indvars.iv1032 = phi i64 [ %indvars.iv.next1033, %for.body524 ], [ 0, %for.cond520.preheader ]
  %129 = load %union.lmlog_t*, %union.lmlog_t** %122, align 8, !tbaa !403
  %arrayidx527 = getelementptr inbounds %union.lmlog_t, %union.lmlog_t* %129, i64 %indvars.iv1032
  %l528 = bitcast %union.lmlog_t* %arrayidx527 to i32*
  %130 = load i32, i32* %l528, align 4, !tbaa !63
  %or551 = tail call i32 @llvm.bswap.i32(i32 %130)
  store i32 %or551, i32* %l528, align 4, !tbaa !63
  %indvars.iv.next1033 = add nuw nsw i64 %indvars.iv1032, 1
  %131 = load i32, i32* %118, align 4, !tbaa !401
  %132 = sext i32 %131 to i64
  %cmp522 = icmp slt i64 %indvars.iv.next1033, %132
  br i1 %cmp522, label %for.body524, label %if.end559, !llvm.loop !433

if.end559:                                        ; preds = %for.body524, %for.cond520.preheader, %if.end516
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 647, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  %133 = load i32, i32* %118, align 4, !tbaa !401
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.52.367, i64 0, i64 0), i32 %133) #34
  %call561 = tail call fastcc i32 @lm_fread_int32(%struct.lm_s* nonnull %2) #36
  store i32 %call561, i32* %k, align 4, !tbaa !37
  %134 = load i32, i32* %27, align 4, !tbaa !134
  %add563 = add nsw i32 %134, 1
  %135 = load i32, i32* %26, align 8, !tbaa !422
  %div = sdiv i32 %add563, %135
  %add565 = add nsw i32 %div, 1
  %cmp566.not = icmp eq i32 %call561, %add565
  br i1 %cmp566.not, label %if.end569, label %if.then568

if.then568:                                       ; preds = %if.end559
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 652, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.53.368, i64 0, i64 0), i32 %call561) #34
  br label %if.end569

if.end569:                                        ; preds = %if.then568, %if.end559
  %conv570 = sext i32 %call561 to i64
  %call571 = tail call i8* @__ckd_calloc__(i64 %conv570, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 655) #34
  %tg_segbase = getelementptr inbounds i8, i8* %call, i64 104
  %136 = bitcast i8* %tg_segbase to i32**
  %137 = bitcast i8* %tg_segbase to i8**
  store i8* %call571, i8** %137, align 8, !tbaa !434
  %138 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %call575 = tail call i64 @fread(i8* %call571, i64 4, i64 %conv570, %struct._IO_FILE* %138) #36
  %cmp577.not = icmp eq i64 %call575, %conv570
  br i1 %cmp577.not, label %if.end580, label %if.then579

if.then579:                                       ; preds = %if.end569
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 657, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35.349, i64 0, i64 0), i8* %file) #34
  br label %if.end580

if.end580:                                        ; preds = %if.then579, %if.end569
  %139 = load i32, i32* %37, align 8, !tbaa !419
  %tobool582.not = icmp ne i32 %139, 0
  %cmp5851014 = icmp sgt i32 %call561, 0
  %or.cond1027 = select i1 %tobool582.not, i1 %cmp5851014, i1 false
  br i1 %or.cond1027, label %for.body587.lr.ph, label %if.end617

for.body587.lr.ph:                                ; preds = %if.end580
  %140 = load i32*, i32** %136, align 8, !tbaa !434
  br label %for.body587

for.body587:                                      ; preds = %for.body587.lr.ph, %for.body587
  %indvars.iv1030 = phi i64 [ 0, %for.body587.lr.ph ], [ %indvars.iv.next1031, %for.body587 ]
  %arrayidx590 = getelementptr inbounds i32, i32* %140, i64 %indvars.iv1030
  %141 = load i32, i32* %arrayidx590, align 4, !tbaa !37
  %or610 = tail call i32 @llvm.bswap.i32(i32 %141)
  store i32 %or610, i32* %arrayidx590, align 4, !tbaa !37
  %indvars.iv.next1031 = add nuw nsw i64 %indvars.iv1030, 1
  %cmp585 = icmp slt i64 %indvars.iv.next1031, %conv570
  br i1 %cmp585, label %for.body587, label %if.end617, !llvm.loop !435

if.end617:                                        ; preds = %for.body587, %if.end580
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 662, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  %142 = load i32, i32* %26, align 8, !tbaa !422
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.54.369, i64 0, i64 0), i32 %call561, i32 %142) #34
  br label %if.end619

if.end619:                                        ; preds = %if.end617, %if.end418
  %call620 = tail call fastcc i32 @lm_fread_int32(%struct.lm_s* nonnull %2) #36
  store i32 %call620, i32* %k, align 4, !tbaa !37
  %cmp621 = icmp slt i32 %call620, 1
  br i1 %cmp621, label %if.then623, label %if.end624

if.then623:                                       ; preds = %if.end619
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 668, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.55.370, i64 0, i64 0), i32 %call620) #34
  br label %if.end624

if.end624:                                        ; preds = %if.then623, %if.end619
  %conv625 = sext i32 %call620 to i64
  %call626 = tail call i8* @__ckd_calloc__(i64 %conv625, i64 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 670) #34
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !tbaa !418
  %call629 = tail call i64 @fread(i8* %call626, i64 1, i64 %conv625, %struct._IO_FILE* %143) #36
  %cmp631.not = icmp eq i64 %call629, %conv625
  br i1 %cmp631.not, label %if.end634, label %if.then633

if.then633:                                       ; preds = %if.end624
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 672, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35.349, i64 0, i64 0), i8* %file) #34
  br label %if.end634

if.end634:                                        ; preds = %if.then633, %if.end624
  %cmp6361010 = icmp sgt i32 %call620, 0
  br i1 %cmp6361010, label %for.body638.preheader, label %for.end649

for.body638.preheader:                            ; preds = %if.end634
  %wide.trip.count = zext i32 %call620 to i64
  br label %for.body638

for.body638:                                      ; preds = %for.body638.preheader, %for.body638
  %indvars.iv1028 = phi i64 [ 0, %for.body638.preheader ], [ %indvars.iv.next1029, %for.body638 ]
  %j.01011 = phi i32 [ 0, %for.body638.preheader ], [ %spec.select, %for.body638 ]
  %arrayidx640 = getelementptr inbounds i8, i8* %call626, i64 %indvars.iv1028
  %144 = load i8, i8* %arrayidx640, align 1, !tbaa !63
  %cmp642 = icmp eq i8 %144, 0
  %inc645 = zext i1 %cmp642 to i32
  %spec.select = add nuw nsw i32 %j.01011, %inc645
  %indvars.iv.next1029 = add nuw nsw i64 %indvars.iv1028, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next1029, %wide.trip.count
  br i1 %exitcond.not, label %for.end649, label %for.body638, !llvm.loop !436

for.end649:                                       ; preds = %for.body638, %if.end634
  %j.0.lcssa = phi i32 [ 0, %if.end634 ], [ %spec.select, %for.body638 ]
  %145 = load i32, i32* %n_ug109.pre-phi, align 8, !tbaa !133
  %cmp651.not = icmp eq i32 %j.0.lcssa, %145
  br i1 %cmp651.not, label %if.end654, label %if.then653

if.then653:                                       ; preds = %for.end649
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 679, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56.371, i64 0, i64 0), i32 %j.0.lcssa) #34
  %.pre1044 = load i32, i32* %n_ug109.pre-phi, align 8, !tbaa !133
  br label %if.end654

if.end654:                                        ; preds = %if.then653, %for.end649
  %146 = phi i32 [ %.pre1044, %if.then653 ], [ %j.0.lcssa, %for.end649 ]
  %conv656 = sext i32 %146 to i64
  %call657 = tail call i8* @__ckd_calloc__(i64 %conv656, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 683) #34
  %wordstr = getelementptr inbounds i8, i8* %call, i64 16
  %147 = bitcast i8* %wordstr to i8***
  %148 = bitcast i8* %wordstr to i8**
  store i8* %call657, i8** %148, align 8, !tbaa !437
  %149 = load i32, i32* %n_ug109.pre-phi, align 8, !tbaa !133
  %cmp6601003 = icmp sgt i32 %149, 0
  br i1 %cmp6601003, label %for.body662, label %for.end693

for.body662:                                      ; preds = %if.end654, %if.end677
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end677 ], [ 0, %if.end654 ]
  %endwid.01007 = phi i16 [ %endwid.1, %if.end677 ], [ -1, %if.end654 ]
  %startwid.01006 = phi i16 [ %startwid.1, %if.end677 ], [ -1, %if.end654 ]
  %j.21004 = phi i64 [ %add689, %if.end677 ], [ 0, %if.end654 ]
  %sext = shl i64 %j.21004, 32
  %idx.ext = ashr exact i64 %sext, 32
  %add.ptr = getelementptr inbounds i8, i8* %call626, i64 %idx.ext
  %call663 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %add.ptr, i8* noundef nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57.372, i64 0, i64 0)) #37
  %cmp664 = icmp eq i32 %call663, 0
  br i1 %cmp664, label %if.then666, label %if.else668

if.then666:                                       ; preds = %for.body662
  %conv667 = trunc i64 %indvars.iv to i16
  br label %if.end677

if.else668:                                       ; preds = %for.body662
  %call671 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %add.ptr, i8* noundef nonnull dereferenceable(5) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58.373, i64 0, i64 0)) #37
  %cmp672 = icmp eq i32 %call671, 0
  %conv675 = trunc i64 %indvars.iv to i16
  %spec.select1002 = select i1 %cmp672, i16 %conv675, i16 %endwid.01007
  br label %if.end677

if.end677:                                        ; preds = %if.else668, %if.then666
  %startwid.1 = phi i16 [ %conv667, %if.then666 ], [ %startwid.01006, %if.else668 ]
  %endwid.1 = phi i16 [ %endwid.01007, %if.then666 ], [ %spec.select1002, %if.else668 ]
  %call680 = tail call i8* @__ckd_salloc__(i8* %add.ptr, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 691) #34
  %150 = load i8**, i8*** %147, align 8, !tbaa !437
  %arrayidx683 = getelementptr inbounds i8*, i8** %150, i64 %indvars.iv
  store i8* %call680, i8** %arrayidx683, align 8, !tbaa !74
  %call686 = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %add.ptr) #37
  %add687 = add nsw i64 %idx.ext, 1
  %add689 = add i64 %add687, %call686
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %151 = load i32, i32* %n_ug109.pre-phi, align 8, !tbaa !133
  %152 = sext i32 %151 to i64
  %cmp660 = icmp slt i64 %indvars.iv.next, %152
  br i1 %cmp660, label %for.body662, label %for.end693.loopexit, !llvm.loop !438

for.end693.loopexit:                              ; preds = %if.end677
  %153 = trunc i64 %indvars.iv.next to i32
  br label %for.end693

for.end693:                                       ; preds = %for.end693.loopexit, %if.end654
  %i.6.lcssa = phi i32 [ 0, %if.end654 ], [ %153, %for.end693.loopexit ]
  %startwid.0.lcssa = phi i16 [ -1, %if.end654 ], [ %startwid.1, %for.end693.loopexit ]
  %endwid.0.lcssa = phi i16 [ -1, %if.end654 ], [ %endwid.1, %for.end693.loopexit ]
  tail call void @free(i8* %call626) #34
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 696, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.59.374, i64 0, i64 0), i32 %i.6.lcssa) #34
  %cmp695.not = icmp eq i16 %startwid.0.lcssa, -1
  br i1 %cmp695.not, label %if.end702, label %if.then697

if.then697:                                       ; preds = %for.end693
  %154 = load %struct.ug_t*, %struct.ug_t** %32, align 8, !tbaa !34
  %idxprom699 = zext i16 %startwid.0.lcssa to i64
  %f = getelementptr inbounds %struct.ug_t, %struct.ug_t* %154, i64 %idxprom699, i32 1, i32 0
  store float -9.900000e+01, float* %f, align 4, !tbaa !63
  %startlwid = getelementptr inbounds i8, i8* %call, i64 24
  %155 = bitcast i8* %startlwid to i16*
  store i16 %startwid.0.lcssa, i16* %155, align 8, !tbaa !26
  br label %if.end702

if.end702:                                        ; preds = %if.then697, %for.end693
  %cmp704.not = icmp eq i16 %endwid.0.lcssa, -1
  br i1 %cmp704.not, label %if.end712, label %if.then706

if.then706:                                       ; preds = %if.end702
  %156 = load %struct.ug_t*, %struct.ug_t** %32, align 8, !tbaa !34
  %idxprom708 = zext i16 %endwid.0.lcssa to i64
  %f711 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %156, i64 %idxprom708, i32 2, i32 0
  store float -9.900000e+01, float* %f711, align 4, !tbaa !63
  %finishlwid = getelementptr inbounds i8, i8* %call, i64 26
  %157 = bitcast i8* %finishlwid to i16*
  store i16 %endwid.0.lcssa, i16* %157, align 2, !tbaa !29
  br label %if.end712

if.end712:                                        ; preds = %if.then706, %if.end702
  %cmp713 = icmp sgt i32 %n_lmclass_used, 0
  br i1 %cmp713, label %if.then715, label %if.end717

if.then715:                                       ; preds = %if.end712
  tail call fastcc void @lm_build_lmclass_info(%struct.lm_s* nonnull %2, i32 %n_lmclass_used, %struct.lmclass_s** %lmclass) #36
  br label %if.end717

if.end717:                                        ; preds = %if.then715, %if.end712
  tail call fastcc void @lm2logs3(%struct.lm_s* nonnull %2, double %uw) #36
  %lw718 = getelementptr inbounds i8, i8* %call, i64 148
  %158 = bitcast i8* %lw718 to float*
  store float 1.000000e+00, float* %158, align 4, !tbaa !395
  %wip719 = getelementptr inbounds i8, i8* %call, i64 152
  %159 = bitcast i8* %wip719 to i32*
  store i32 0, i32* %159, align 8, !tbaa !397
  tail call void @lm_set_param(%struct.lm_s* nonnull %2, double %lw, double %wip) #36
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret %struct.lm_s* %2
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #10

; Function Attrs: argmemonly mustprogress nofree nounwind optsize readonly willreturn
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc i32 @lm_fread_int32(%struct.lm_s* nocapture readonly %lm) unnamed_addr #0 {
entry:
  %val = alloca i32, align 4
  %0 = bitcast i32* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %fp = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 21
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !418
  %call = call i64 @fread(i8* nonnull %0, i64 4, i64 1, %struct._IO_FILE* %1) #36
  %cmp.not = icmp eq i64 %call, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 242, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.61.377, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %byteswap = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 22
  %2 = load i32, i32* %byteswap, align 8, !tbaa !419
  %tobool.not = icmp eq i32 %2, 0
  %.pre = load i32, i32* %val, align 4, !tbaa !37
  %or8 = tail call i32 @llvm.bswap.i32(i32 %.pre)
  %3 = select i1 %tobool.not, i32 %.pre, i32 %or8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret i32 %3
}

; Function Attrs: nofree nounwind optsize
declare noundef i64 @ftell(%struct._IO_FILE* nocapture noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind optsize
declare noundef i32 @fseek(%struct._IO_FILE* nocapture noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @lm_build_lmclass_info(%struct.lm_s* nocapture %lm, i32 %n_lmclass_used, %struct.lmclass_s** nocapture readonly %lmclass) unnamed_addr #0 {
entry:
  %conv = sext i32 %n_lmclass_used to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 436) #34
  %lmclass1 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 40
  %0 = bitcast %struct.lmclass_s*** %lmclass1 to i8**
  store i8* %call, i8** %0, align 8, !tbaa !390
  %cmp21 = icmp sgt i32 %n_lmclass_used, 0
  br i1 %cmp21, label %for.body.preheader, label %if.end

for.body.preheader:                               ; preds = %entry
  %1 = bitcast i8* %call to %struct.lmclass_s**
  %wide.trip.count = zext i32 %n_lmclass_used to i64
  %2 = load %struct.lmclass_s*, %struct.lmclass_s** %lmclass, align 8, !tbaa !74
  store %struct.lmclass_s* %2, %struct.lmclass_s** %1, align 8, !tbaa !74
  %exitcond.not3 = icmp eq i32 %n_lmclass_used, 1
  br i1 %exitcond.not3, label %if.end, label %for.body.for.body_crit_edge, !llvm.loop !439

for.body.for.body_crit_edge:                      ; preds = %for.body.preheader, %for.body.for.body_crit_edge
  %indvars.iv.next4 = phi i64 [ %indvars.iv.next, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %.pre = load %struct.lmclass_s**, %struct.lmclass_s*** %lmclass1, align 8, !tbaa !390
  %arrayidx = getelementptr inbounds %struct.lmclass_s*, %struct.lmclass_s** %lmclass, i64 %indvars.iv.next4
  %3 = load %struct.lmclass_s*, %struct.lmclass_s** %arrayidx, align 8, !tbaa !74
  %arrayidx6 = getelementptr inbounds %struct.lmclass_s*, %struct.lmclass_s** %.pre, i64 %indvars.iv.next4
  store %struct.lmclass_s* %3, %struct.lmclass_s** %arrayidx6, align 8, !tbaa !74
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next4, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end, label %for.body.for.body_crit_edge, !llvm.loop !439

if.end:                                           ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %entry
  %n_lmclass = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 41
  store i32 %n_lmclass_used, i32* %n_lmclass, align 8, !tbaa !391
  %dict_size = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 39
  %4 = load i32, i32* %dict_size, align 8, !tbaa !417
  %conv8 = sext i32 %4 to i64
  %call9 = tail call i8* @__ckd_calloc__(i64 %conv8, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 443) #34
  %inclass_ugscore = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 42
  %5 = bitcast i32** %inclass_ugscore to i8**
  store i8* %call9, i8** %5, align 8, !tbaa !440
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 445, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  %6 = load i32, i32* %dict_size, align 8, !tbaa !417
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62.375, i64 0, i64 0), i32 %6) #34
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 446, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.63.376, i64 0, i64 0), i32 %n_lmclass_used) #34
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @lm2logs3(%struct.lm_s* nocapture readonly %lm, double %uw) unnamed_addr #0 {
entry:
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 9
  %0 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp105 = icmp sgt i32 %0, 0
  br i1 %cmp105, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv111 = phi i64 [ %indvars.iv.next112, %for.body ], [ 0, %entry ]
  %1 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %f = getelementptr inbounds %struct.ug_t, %struct.ug_t* %1, i64 %indvars.iv111, i32 1, i32 0
  %2 = load float, float* %f, align 4, !tbaa !63
  %conv = fpext float %2 to double
  %call = tail call i32 @log10_to_logs3(double %conv) #34
  %3 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %prob4 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %3, i64 %indvars.iv111, i32 1
  %l = bitcast %union.lmlog_t* %prob4 to i32*
  store i32 %call, i32* %l, align 4, !tbaa !63
  %4 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %f8 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %4, i64 %indvars.iv111, i32 2, i32 0
  %5 = load float, float* %f8, align 4, !tbaa !63
  %conv9 = fpext float %5 to double
  %call10 = tail call i32 @log10_to_logs3(double %conv9) #34
  %6 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %bowt14 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %6, i64 %indvars.iv111, i32 2
  %l15 = bitcast %union.lmlog_t* %bowt14 to i32*
  store i32 %call10, i32* %l15, align 4, !tbaa !63
  %indvars.iv.next112 = add nuw nsw i64 %indvars.iv111, 1
  %7 = load i32, i32* %n_ug, align 8, !tbaa !133
  %8 = sext i32 %7 to i64
  %cmp = icmp slt i64 %indvars.iv.next112, %8
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !441

for.end:                                          ; preds = %for.body, %entry
  tail call fastcc void @lm_uw(%struct.lm_s* nonnull %lm, double %uw) #36
  %n_bgprob = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 18
  %bgprob = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 14
  %9 = load i32, i32* %n_bgprob, align 8, !tbaa !396
  %cmp17103 = icmp sgt i32 %9, 0
  br i1 %cmp17103, label %for.body19, label %for.end31

for.body19:                                       ; preds = %for.end, %for.body19
  %indvars.iv109 = phi i64 [ %indvars.iv.next110, %for.body19 ], [ 0, %for.end ]
  %10 = load %union.lmlog_t*, %union.lmlog_t** %bgprob, align 8, !tbaa !399
  %f22 = getelementptr inbounds %union.lmlog_t, %union.lmlog_t* %10, i64 %indvars.iv109, i32 0
  %11 = load float, float* %f22, align 4, !tbaa !63
  %conv23 = fpext float %11 to double
  %call24 = tail call i32 @log10_to_logs3(double %conv23) #34
  %12 = load %union.lmlog_t*, %union.lmlog_t** %bgprob, align 8, !tbaa !399
  %arrayidx27 = getelementptr inbounds %union.lmlog_t, %union.lmlog_t* %12, i64 %indvars.iv109
  %l28 = bitcast %union.lmlog_t* %arrayidx27 to i32*
  store i32 %call24, i32* %l28, align 4, !tbaa !63
  %indvars.iv.next110 = add nuw nsw i64 %indvars.iv109, 1
  %13 = load i32, i32* %n_bgprob, align 8, !tbaa !396
  %14 = sext i32 %13 to i64
  %cmp17 = icmp slt i64 %indvars.iv.next110, %14
  br i1 %cmp17, label %for.body19, label %for.end31, !llvm.loop !442

for.end31:                                        ; preds = %for.body19, %for.end
  %n_tg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 2
  %15 = load i32, i32* %n_tg, align 8, !tbaa !135
  %cmp32 = icmp sgt i32 %15, 0
  br i1 %cmp32, label %for.cond34.preheader, label %if.end

for.cond34.preheader:                             ; preds = %for.end31
  %n_tgprob = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 19
  %tgprob = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 15
  %16 = load i32, i32* %n_tgprob, align 4, !tbaa !401
  %cmp35101 = icmp sgt i32 %16, 0
  br i1 %cmp35101, label %for.body37, label %for.cond50.preheader

for.cond50.preheader:                             ; preds = %for.body37, %for.cond34.preheader
  %n_tgbowt = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 20
  %tgbowt = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 16
  %17 = load i32, i32* %n_tgbowt, align 8, !tbaa !402
  %cmp5199 = icmp sgt i32 %17, 0
  br i1 %cmp5199, label %for.body53, label %if.end

for.body37:                                       ; preds = %for.cond34.preheader, %for.body37
  %indvars.iv107 = phi i64 [ %indvars.iv.next108, %for.body37 ], [ 0, %for.cond34.preheader ]
  %18 = load %union.lmlog_t*, %union.lmlog_t** %tgprob, align 8, !tbaa !403
  %f40 = getelementptr inbounds %union.lmlog_t, %union.lmlog_t* %18, i64 %indvars.iv107, i32 0
  %19 = load float, float* %f40, align 4, !tbaa !63
  %conv41 = fpext float %19 to double
  %call42 = tail call i32 @log10_to_logs3(double %conv41) #34
  %20 = load %union.lmlog_t*, %union.lmlog_t** %tgprob, align 8, !tbaa !403
  %arrayidx45 = getelementptr inbounds %union.lmlog_t, %union.lmlog_t* %20, i64 %indvars.iv107
  %l46 = bitcast %union.lmlog_t* %arrayidx45 to i32*
  store i32 %call42, i32* %l46, align 4, !tbaa !63
  %indvars.iv.next108 = add nuw nsw i64 %indvars.iv107, 1
  %21 = load i32, i32* %n_tgprob, align 4, !tbaa !401
  %22 = sext i32 %21 to i64
  %cmp35 = icmp slt i64 %indvars.iv.next108, %22
  br i1 %cmp35, label %for.body37, label %for.cond50.preheader, !llvm.loop !443

for.body53:                                       ; preds = %for.cond50.preheader, %for.body53
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body53 ], [ 0, %for.cond50.preheader ]
  %23 = load %union.lmlog_t*, %union.lmlog_t** %tgbowt, align 8, !tbaa !405
  %f56 = getelementptr inbounds %union.lmlog_t, %union.lmlog_t* %23, i64 %indvars.iv, i32 0
  %24 = load float, float* %f56, align 4, !tbaa !63
  %conv57 = fpext float %24 to double
  %call58 = tail call i32 @log10_to_logs3(double %conv57) #34
  %25 = load %union.lmlog_t*, %union.lmlog_t** %tgbowt, align 8, !tbaa !405
  %arrayidx61 = getelementptr inbounds %union.lmlog_t, %union.lmlog_t* %25, i64 %indvars.iv
  %l62 = bitcast %union.lmlog_t* %arrayidx61 to i32*
  store i32 %call58, i32* %l62, align 4, !tbaa !63
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %26 = load i32, i32* %n_tgbowt, align 8, !tbaa !402
  %27 = sext i32 %26 to i64
  %cmp51 = icmp slt i64 %indvars.iv.next, %27
  br i1 %cmp51, label %for.body53, label %if.end, !llvm.loop !444

if.end:                                           ; preds = %for.body53, %for.cond50.preheader, %for.end31
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @lm_uw(%struct.lm_s* nocapture readonly %lm, double %uw) unnamed_addr #0 {
entry:
  %call = tail call i32 @logs3(double %uw) #34
  %sub = fsub double 1.000000e+00, %uw
  %call1 = tail call i32 @logs3(double %sub) #34
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %0 = load i32, i32* %n_ug, align 8, !tbaa !133
  %sub2 = add nsw i32 %0, -1
  %conv = sitofp i32 %sub2 to double
  %div = fdiv double 1.000000e+00, %conv
  %call3 = tail call i32 @logs3(double %div) #34
  %wordstr = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 4
  %ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 9
  %add11 = add nsw i32 %call3, %call1
  %1 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp33 = icmp sgt i32 %1, 0
  br i1 %cmp33, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.inc
  %2 = phi i32 [ %8, %for.inc ], [ %1, %entry ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ]
  %3 = load i8**, i8*** %wordstr, align 8, !tbaa !437
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %indvars.iv
  %4 = load i8*, i8** %arrayidx, align 8, !tbaa !74
  %call6 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %4, i8* noundef nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57.372, i64 0, i64 0)) #37
  %cmp7.not = icmp eq i32 %call6, 0
  br i1 %cmp7.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %5 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %prob = getelementptr inbounds %struct.ug_t, %struct.ug_t* %5, i64 %indvars.iv, i32 1
  %l = bitcast %union.lmlog_t* %prob to i32*
  %6 = load i32, i32* %l, align 4, !tbaa !63
  %add = add nsw i32 %6, %call
  %call12 = tail call i32 @logs3_add(i32 %add, i32 %add11) #34
  %7 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %prob16 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %7, i64 %indvars.iv, i32 1
  %l17 = bitcast %union.lmlog_t* %prob16 to i32*
  store i32 %call12, i32* %l17, align 4, !tbaa !63
  %.pre = load i32, i32* %n_ug, align 8, !tbaa !133
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %8 = phi i32 [ %2, %for.body ], [ %.pre, %if.then ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %9 = sext i32 %8 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %9
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !445

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.lm_s* @lm_read(i8* %file, double %lw, double %wip, double %uw) local_unnamed_addr #0 {
entry:
  %tobool.not = icmp eq i8* %file, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 731, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18.380, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp = fcmp ugt double %lw, 0.000000e+00
  br i1 %cmp, label %if.end2, label %if.then1

if.then1:                                         ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 733, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.332, i64 0, i64 0), double %lw) #34
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end
  %cmp3 = fcmp ugt double %wip, 0.000000e+00
  br i1 %cmp3, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end2
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 735, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.333, i64 0, i64 0), double %wip) #34
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end2
  %cmp6 = fcmp olt double %uw, 0.000000e+00
  %cmp7 = fcmp ogt double %uw, 1.000000e+00
  %or.cond = or i1 %cmp6, %cmp7
  br i1 %or.cond, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end5
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 737, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19.381, i64 0, i64 0), double %uw) #34
  br label %if.end9

if.end9:                                          ; preds = %if.end5, %if.then8
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 739, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  %call = tail call i32 @logs3(double %wip) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20.382, i64 0, i64 0), i8* %file, double %lw, i32 %call, double %uw) #34
  %call10 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.337, i64 0, i64 0)) #34
  %0 = bitcast i8* %call10 to i32*
  %1 = load i32, i32* %0, align 4, !tbaa !37
  %tobool11.not = icmp ne i32 %1, 0
  store i1 %tobool11.not, i1* @LM_IN_MEMORY, align 4
  %call14 = tail call fastcc %struct.lm_s* @lm_read_dump(i8* %file, double %lw, double %wip, double %uw, i32 0, %struct.lmclass_s** null, i32 0) #36
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %call14, i64 0, i32 0
  %2 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp1551 = icmp sgt i32 %2, 0
  br i1 %cmp1551, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end9
  %ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %call14, i64 0, i32 9
  %3 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %wide.trip.count = zext i32 %2 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv53 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next54, %for.body ]
  %dictwid = getelementptr inbounds %struct.ug_t, %struct.ug_t* %3, i64 %indvars.iv53, i32 0
  store i32 -1, i32* %dictwid, align 4, !tbaa !35
  %indvars.iv.next54 = add nuw nsw i64 %indvars.iv53, 1
  %exitcond55.not = icmp eq i64 %indvars.iv.next54, %wide.trip.count
  br i1 %exitcond55.not, label %for.end, label %for.body, !llvm.loop !446

for.end:                                          ; preds = %for.body, %if.end9
  %call16 = tail call i8* @__ckd_calloc__(i64 100003, i64 12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 752) #34
  %tgcache = getelementptr inbounds %struct.lm_s, %struct.lm_s* %call14, i64 0, i32 27
  %4 = bitcast %struct.lm_tgcache_entry_t** %tgcache to i8**
  store i8* %call16, i8** %4, align 8, !tbaa !413
  %.cast = bitcast i8* %call16 to %struct.lm_tgcache_entry_t*
  br label %for.body19

for.body19:                                       ; preds = %for.end, %for.body19
  %indvars.iv = phi i64 [ 0, %for.end ], [ %indvars.iv.next, %for.body19 ]
  %arrayidx23 = getelementptr inbounds %struct.lm_tgcache_entry_t, %struct.lm_tgcache_entry_t* %.cast, i64 %indvars.iv, i32 0, i64 0
  store i16 -1, i16* %arrayidx23, align 4, !tbaa !40
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 100003
  br i1 %exitcond.not, label %for.end26, label %for.body19, !llvm.loop !447

for.end26:                                        ; preds = %for.body19
  ret %struct.lm_s* %call14
}

; Function Attrs: noinline nounwind optsize uwtable
define void @lm_cache_reset(%struct.lm_s* nocapture %lm) local_unnamed_addr #0 {
entry:
  %.b = load i1, i1* @LM_IN_MEMORY, align 4
  br i1 %.b, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %n_bg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 1
  %0 = load i32, i32* %n_bg, align 4, !tbaa !134
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %land.lhs.true, label %if.end33

land.lhs.true:                                    ; preds = %if.end
  %bg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 10
  %1 = load %struct.bg_t*, %struct.bg_t** %bg, align 8, !tbaa !425
  %tobool1.not = icmp eq %struct.bg_t* %1, null
  br i1 %tobool1.not, label %for.cond.preheader, label %if.end33

for.cond.preheader:                               ; preds = %land.lhs.true
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %membg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 12
  %ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 9
  %n_bg_inmem = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 29
  %2 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp3145 = icmp sgt i32 %2, 0
  br i1 %cmp3145, label %for.body.preheader, label %if.end33

for.body.preheader:                               ; preds = %for.cond.preheader
  %.pre = load %struct.membg_t*, %struct.membg_t** %membg, align 8, !tbaa !428
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %if.end27
  %3 = phi i32 [ %2, %for.body.preheader ], [ %14, %if.end27 ]
  %4 = phi %struct.membg_t* [ %.pre, %for.body.preheader ], [ %15, %if.end27 ]
  %indvars.iv150 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next151, %if.end27 ]
  %n_bgfree.0146 = phi i32 [ 0, %for.body.preheader ], [ %n_bgfree.1, %if.end27 ]
  %bg4 = getelementptr inbounds %struct.membg_t, %struct.membg_t* %4, i64 %indvars.iv150, i32 0
  %5 = load %struct.bg_t*, %struct.bg_t** %bg4, align 8, !tbaa !330
  %tobool5.not = icmp eq %struct.bg_t* %5, null
  %6 = bitcast %struct.bg_t* %5 to i8*
  br i1 %tobool5.not, label %if.end27, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %for.body
  %used = getelementptr inbounds %struct.membg_t, %struct.membg_t* %4, i64 %indvars.iv150, i32 1
  %7 = load i32, i32* %used, align 8, !tbaa !64
  %tobool10.not = icmp eq i32 %7, 0
  br i1 %tobool10.not, label %if.then11, label %if.end27

if.then11:                                        ; preds = %land.lhs.true6
  %8 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %9 = add nuw nsw i64 %indvars.iv150, 1
  %firstbg = getelementptr inbounds %struct.ug_t, %struct.ug_t* %8, i64 %9, i32 3
  %10 = load i32, i32* %firstbg, align 4, !tbaa !423
  %firstbg17 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %8, i64 %indvars.iv150, i32 3
  %11 = load i32, i32* %firstbg17, align 4, !tbaa !423
  %sub.neg = sub i32 %11, %10
  %12 = load i32, i32* %n_bg_inmem, align 4, !tbaa !448
  %sub18 = add i32 %sub.neg, %12
  store i32 %sub18, i32* %n_bg_inmem, align 4, !tbaa !448
  tail call void @free(i8* %6) #34
  %13 = load %struct.membg_t*, %struct.membg_t** %membg, align 8, !tbaa !428
  %bg26 = getelementptr inbounds %struct.membg_t, %struct.membg_t* %13, i64 %indvars.iv150, i32 0
  store %struct.bg_t* null, %struct.bg_t** %bg26, align 8, !tbaa !330
  %inc = add nsw i32 %n_bgfree.0146, 1
  %.pre153 = load i32, i32* %n_ug, align 8, !tbaa !133
  br label %if.end27

if.end27:                                         ; preds = %if.then11, %land.lhs.true6, %for.body
  %14 = phi i32 [ %3, %land.lhs.true6 ], [ %.pre153, %if.then11 ], [ %3, %for.body ]
  %15 = phi %struct.membg_t* [ %4, %land.lhs.true6 ], [ %13, %if.then11 ], [ %4, %for.body ]
  %n_bgfree.1 = phi i32 [ %n_bgfree.0146, %land.lhs.true6 ], [ %inc, %if.then11 ], [ %n_bgfree.0146, %for.body ]
  %used31 = getelementptr inbounds %struct.membg_t, %struct.membg_t* %15, i64 %indvars.iv150, i32 1
  store i32 0, i32* %used31, align 8, !tbaa !64
  %indvars.iv.next151 = add nuw nsw i64 %indvars.iv150, 1
  %16 = sext i32 %14 to i64
  %cmp3 = icmp slt i64 %indvars.iv.next151, %16
  br i1 %cmp3, label %for.body, label %if.end33, !llvm.loop !449

if.end33:                                         ; preds = %if.end27, %for.cond.preheader, %land.lhs.true, %if.end
  %n_bgfree.2 = phi i32 [ 0, %land.lhs.true ], [ 0, %if.end ], [ 0, %for.cond.preheader ], [ %n_bgfree.1, %if.end27 ]
  %n_tg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 2
  %17 = load i32, i32* %n_tg, align 8, !tbaa !135
  %cmp34 = icmp sgt i32 %17, 0
  br i1 %cmp34, label %for.cond36.preheader, label %if.end74

for.cond36.preheader:                             ; preds = %if.end33
  %n_ug37 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %tginfo40 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 13
  %tg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 11
  %n_tg_inmem = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 33
  %18 = load i32, i32* %n_ug37, align 8, !tbaa !133
  %cmp38141 = icmp sgt i32 %18, 0
  br i1 %cmp38141, label %for.body39, label %if.end74

for.body39:                                       ; preds = %for.cond36.preheader, %for.inc71
  %19 = phi i32 [ %31, %for.inc71 ], [ %18, %for.cond36.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc71 ], [ 0, %for.cond36.preheader ]
  %n_tgfree.0142 = phi i32 [ %n_tgfree.1.lcssa, %for.inc71 ], [ 0, %for.cond36.preheader ]
  %20 = load %struct.tginfo_s**, %struct.tginfo_s*** %tginfo40, align 8, !tbaa !430
  %arrayidx42 = getelementptr inbounds %struct.tginfo_s*, %struct.tginfo_s** %20, i64 %indvars.iv
  %21 = load %struct.tginfo_s*, %struct.tginfo_s** %arrayidx42, align 8, !tbaa !74
  %tobool44.not137 = icmp eq %struct.tginfo_s* %21, null
  br i1 %tobool44.not137, label %for.inc71, label %for.body45

for.body45:                                       ; preds = %for.body39, %for.inc69
  %prev_tginfo.0140 = phi %struct.tginfo_s* [ %prev_tginfo.1, %for.inc69 ], [ null, %for.body39 ]
  %tginfo.0139 = phi %struct.tginfo_s* [ %22, %for.inc69 ], [ %21, %for.body39 ]
  %n_tgfree.1138 = phi i32 [ %n_tgfree.3, %for.inc69 ], [ %n_tgfree.0142, %for.body39 ]
  %next = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.0139, i64 0, i32 5
  %22 = load %struct.tginfo_s*, %struct.tginfo_s** %next, align 8, !tbaa !450
  %used46 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.0139, i64 0, i32 4
  %23 = load i32, i32* %used46, align 4, !tbaa !452
  %tobool47.not = icmp eq i32 %23, 0
  br i1 %tobool47.not, label %if.then48, label %if.else66

if.then48:                                        ; preds = %for.body45
  %24 = load %struct.tg_t*, %struct.tg_t** %tg, align 8, !tbaa !426
  %tobool49.not = icmp eq %struct.tg_t* %24, null
  br i1 %tobool49.not, label %land.lhs.true50, label %if.end58

land.lhs.true50:                                  ; preds = %if.then48
  %tg51 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.0139, i64 0, i32 2
  %25 = load %struct.tg_t*, %struct.tg_t** %tg51, align 8, !tbaa !453
  %tobool52.not = icmp eq %struct.tg_t* %25, null
  br i1 %tobool52.not, label %if.end58, label %if.then53

if.then53:                                        ; preds = %land.lhs.true50
  %26 = bitcast %struct.tg_t* %25 to i8*
  %n_tg54 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.0139, i64 0, i32 1
  %27 = load i32, i32* %n_tg54, align 4, !tbaa !454
  %28 = load i32, i32* %n_tg_inmem, align 4, !tbaa !455
  %sub55 = sub nsw i32 %28, %27
  store i32 %sub55, i32* %n_tg_inmem, align 4, !tbaa !455
  tail call void @free(i8* %26) #34
  %inc57 = add nsw i32 %n_tgfree.1138, 1
  br label %if.end58

if.end58:                                         ; preds = %if.then53, %land.lhs.true50, %if.then48
  %n_tgfree.2 = phi i32 [ %n_tgfree.1138, %if.then48 ], [ %inc57, %if.then53 ], [ %n_tgfree.1138, %land.lhs.true50 ]
  %29 = bitcast %struct.tginfo_s* %tginfo.0139 to i8*
  tail call void @free(i8* %29) #34
  %tobool59.not = icmp eq %struct.tginfo_s* %prev_tginfo.0140, null
  br i1 %tobool59.not, label %if.else, label %if.then60

if.then60:                                        ; preds = %if.end58
  %next61 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %prev_tginfo.0140, i64 0, i32 5
  store %struct.tginfo_s* %22, %struct.tginfo_s** %next61, align 8, !tbaa !450
  br label %for.inc69

if.else:                                          ; preds = %if.end58
  %30 = load %struct.tginfo_s**, %struct.tginfo_s*** %tginfo40, align 8, !tbaa !430
  %arrayidx64 = getelementptr inbounds %struct.tginfo_s*, %struct.tginfo_s** %30, i64 %indvars.iv
  store %struct.tginfo_s* %22, %struct.tginfo_s** %arrayidx64, align 8, !tbaa !74
  br label %for.inc69

if.else66:                                        ; preds = %for.body45
  store i32 0, i32* %used46, align 4, !tbaa !452
  br label %for.inc69

for.inc69:                                        ; preds = %if.else66, %if.else, %if.then60
  %n_tgfree.3 = phi i32 [ %n_tgfree.1138, %if.else66 ], [ %n_tgfree.2, %if.then60 ], [ %n_tgfree.2, %if.else ]
  %prev_tginfo.1 = phi %struct.tginfo_s* [ %tginfo.0139, %if.else66 ], [ %prev_tginfo.0140, %if.then60 ], [ null, %if.else ]
  %tobool44.not = icmp eq %struct.tginfo_s* %22, null
  br i1 %tobool44.not, label %for.inc71.loopexit, label %for.body45, !llvm.loop !456

for.inc71.loopexit:                               ; preds = %for.inc69
  %.pre154 = load i32, i32* %n_ug37, align 8, !tbaa !133
  br label %for.inc71

for.inc71:                                        ; preds = %for.inc71.loopexit, %for.body39
  %31 = phi i32 [ %19, %for.body39 ], [ %.pre154, %for.inc71.loopexit ]
  %n_tgfree.1.lcssa = phi i32 [ %n_tgfree.0142, %for.body39 ], [ %n_tgfree.3, %for.inc71.loopexit ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %32 = sext i32 %31 to i64
  %cmp38 = icmp slt i64 %indvars.iv.next, %32
  br i1 %cmp38, label %for.body39, label %if.end74, !llvm.loop !457

if.end74:                                         ; preds = %for.inc71, %for.cond36.preheader, %if.end33
  %n_tgfree.4 = phi i32 [ 0, %if.end33 ], [ 0, %for.cond36.preheader ], [ %n_tgfree.1.lcssa, %for.inc71 ]
  %cmp75 = icmp sgt i32 %n_tgfree.4, 0
  %cmp76 = icmp sgt i32 %n_bgfree.2, 0
  %or.cond = select i1 %cmp75, i1 true, i1 %cmp76
  br i1 %or.cond, label %if.then77, label %cleanup

if.then77:                                        ; preds = %if.end74
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 815, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  %n_tg_inmem78 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 33
  %33 = load i32, i32* %n_tg_inmem78, align 4, !tbaa !455
  %n_bg_inmem79 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 29
  %34 = load i32, i32* %n_bg_inmem79, align 4, !tbaa !448
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.21.383, i64 0, i64 0), i32 %n_tgfree.4, i32 %33, i32 %n_bgfree.2, i32 %34) #34
  br label %cleanup

cleanup:                                          ; preds = %if.then77, %if.end74, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @lm_cache_stats_dump(%struct.lm_s* nocapture %lm) local_unnamed_addr #0 {
entry:
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 823, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  %n_tg_score = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 34
  %0 = load i32, i32* %n_tg_score, align 8, !tbaa !458
  %n_tgcache_hit = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 36
  %1 = load i32, i32* %n_tgcache_hit, align 8, !tbaa !459
  %n_tg_bo = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 35
  %2 = load i32, i32* %n_tg_bo, align 4, !tbaa !460
  %n_tg_fill = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 32
  %3 = load i32, i32* %n_tg_fill, align 8, !tbaa !461
  %n_tg_inmem = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 33
  %4 = load i32, i32* %n_tg_inmem, align 4, !tbaa !455
  %conv = sitofp i32 %4 to double
  %mul = fmul double %conv, 1.000000e+02
  %n_tg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 2
  %5 = load i32, i32* %n_tg, align 8, !tbaa !135
  %add = add nsw i32 %5, 1
  %conv2 = sitofp i32 %add to double
  %div = fdiv double %mul, %conv2
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.22.384, i64 0, i64 0), i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, double %div) #34
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 826, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.329, i64 0, i64 0)) #34
  %n_bg_score = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 30
  %6 = load i32, i32* %n_bg_score, align 8, !tbaa !462
  %n_bg_bo = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 31
  %7 = load i32, i32* %n_bg_bo, align 4, !tbaa !463
  %n_bg_fill = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 28
  %8 = load i32, i32* %n_bg_fill, align 8, !tbaa !464
  %n_bg_inmem = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 29
  %9 = load i32, i32* %n_bg_inmem, align 4, !tbaa !448
  %conv4 = sitofp i32 %9 to double
  %mul5 = fmul double %conv4, 1.000000e+02
  %n_bg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 1
  %10 = load i32, i32* %n_bg, align 4, !tbaa !134
  %add6 = add nsw i32 %10, 1
  %conv7 = sitofp i32 %add6 to double
  %div8 = fdiv double %mul5, %conv7
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.385, i64 0, i64 0), i32 %6, i32 %7, i32 %8, i32 %9, double %div8) #34
  store i32 0, i32* %n_tgcache_hit, align 8, !tbaa !459
  store i32 0, i32* %n_tg_fill, align 8, !tbaa !461
  store i32 0, i32* %n_tg_score, align 8, !tbaa !458
  store i32 0, i32* %n_tg_bo, align 4, !tbaa !460
  store i32 0, i32* %n_bg_fill, align 8, !tbaa !464
  store i32 0, i32* %n_bg_score, align 8, !tbaa !462
  store i32 0, i32* %n_bg_bo, align 4, !tbaa !463
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @lm_ug_score(%struct.lm_s* nocapture %lm, i16 zeroext %lwid, i32 %wid) local_unnamed_addr #0 {
entry:
  %conv = zext i16 %lwid to i32
  %cmp = icmp eq i16 %lwid, -1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %0 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp2.not = icmp sgt i32 %0, %wid
  br i1 %cmp2.not, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 843, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.24.386, i64 0, i64 0), i32 %conv) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %access_type = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 37
  store i32 1, i32* %access_type, align 4, !tbaa !465
  %inclass_ugscore = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 42
  %1 = load i32*, i32** %inclass_ugscore, align 8, !tbaa !440
  %tobool.not = icmp eq i32* %1, null
  %ug9 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 9
  %2 = load %struct.ug_t*, %struct.ug_t** %ug9, align 8, !tbaa !34
  %idxprom10 = zext i16 %lwid to i64
  %prob12 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %2, i64 %idxprom10, i32 1
  %l13 = bitcast %union.lmlog_t* %prob12 to i32*
  %3 = load i32, i32* %l13, align 4, !tbaa !63
  br i1 %tobool.not, label %return, label %if.then5

if.then5:                                         ; preds = %if.end
  %idxprom7 = sext i32 %wid to i64
  %arrayidx8 = getelementptr inbounds i32, i32* %1, i64 %idxprom7
  %4 = load i32, i32* %arrayidx8, align 4, !tbaa !37
  %add = add nsw i32 %4, %3
  br label %return

return:                                           ; preds = %if.end, %if.then5
  %retval.0 = phi i32 [ %add, %if.then5 ], [ %3, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn
define i32 @lm_uglist(%struct.lm_s* nocapture readonly %lm, %struct.ug_t** nocapture %ugptr) local_unnamed_addr #4 {
entry:
  %ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 9
  %0 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  store %struct.ug_t* %0, %struct.ug_t** %ugptr, align 8, !tbaa !74
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %1 = load i32, i32* %n_ug, align 8, !tbaa !133
  ret i32 %1
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define i32 @lm_ug_wordprob(%struct.lm_s* nocapture readonly %lm, %struct.dict_t* nocapture readonly %dict, i32 %th, %struct.arraysize_t* nocapture %wp) local_unnamed_addr #13 {
entry:
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %0 = load i32, i32* %n_ug, align 8, !tbaa !133
  %lmclass14 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 40
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %dict, i64 0, i32 4
  %inclass_ugscore = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 42
  %cmp99 = icmp sgt i32 %0, 0
  br i1 %cmp99, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 9
  %1 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %j.0100 = phi i32 [ 0, %for.body.lr.ph ], [ %j.3, %for.inc ]
  %dictwid = getelementptr inbounds %struct.ug_t, %struct.ug_t* %1, i64 %indvars.iv, i32 0
  %2 = load i32, i32* %dictwid, align 4, !tbaa !35
  %cmp1 = icmp sgt i32 %2, -1
  br i1 %cmp1, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %cmp2 = icmp slt i32 %2, 16777216
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  %prob = getelementptr inbounds %struct.ug_t, %struct.ug_t* %1, i64 %indvars.iv, i32 1
  %l = bitcast %union.lmlog_t* %prob to i32*
  %3 = load i32, i32* %l, align 4, !tbaa !63
  %cmp7.not = icmp slt i32 %3, %th
  br i1 %cmp7.not, label %for.inc, label %if.then8

if.then8:                                         ; preds = %if.then3
  %idxprom9 = sext i32 %j.0100 to i64
  %wid = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %wp, i64 %idxprom9, i32 0
  store i32 %2, i32* %wid, align 4, !tbaa !84
  %prob13 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %wp, i64 %idxprom9, i32 1
  store i32 %3, i32* %prob13, align 4, !tbaa !71
  %inc = add nsw i32 %j.0100, 1
  br label %for.inc

if.else:                                          ; preds = %if.then
  %4 = load %struct.lmclass_s**, %struct.lmclass_s*** %lmclass14, align 8, !tbaa !390
  %sub = add nsw i32 %2, -16777216
  %5 = zext i32 %sub to i64
  %arrayidx16 = getelementptr inbounds %struct.lmclass_s*, %struct.lmclass_s** %4, i64 %5
  %6 = load %struct.lmclass_s*, %struct.lmclass_s** %arrayidx16, align 8, !tbaa !74
  %wordlist = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %6, i64 0, i32 1
  %prob31 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %1, i64 %indvars.iv, i32 1
  %l32 = bitcast %union.lmlog_t* %prob31 to i32*
  %lm_cw.095 = load %struct.lmclass_word_s*, %struct.lmclass_word_s** %wordlist, align 8, !tbaa !74
  %cmp17.not96 = icmp eq %struct.lmclass_word_s* %lm_cw.095, null
  br i1 %cmp17.not96, label %for.inc, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %if.else
  %7 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %8 = load i32*, i32** %inclass_ugscore, align 8, !tbaa !440
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %if.end49
  %lm_cw.098 = phi %struct.lmclass_word_s* [ %lm_cw.095, %while.body.lr.ph ], [ %lm_cw.0, %if.end49 ]
  %j.197 = phi i32 [ %j.0100, %while.body.lr.ph ], [ %j.2, %if.end49 ]
  %dictwid18 = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %lm_cw.098, i64 0, i32 1
  %9 = load i32, i32* %dictwid18, align 8, !tbaa !466
  %idxprom19 = sext i32 %9 to i64
  %basewid = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %7, i64 %idxprom19, i32 4
  %10 = load i32, i32* %basewid, align 8, !tbaa !249
  %11 = load i32, i32* %l32, align 4, !tbaa !63
  %idxprom33 = sext i32 %10 to i64
  %arrayidx34 = getelementptr inbounds i32, i32* %8, i64 %idxprom33
  %12 = load i32, i32* %arrayidx34, align 4, !tbaa !37
  %add = add nsw i32 %12, %11
  %cmp35.not = icmp slt i32 %add, %th
  br i1 %cmp35.not, label %if.end49, label %if.then36

if.then36:                                        ; preds = %while.body
  %idxprom37 = sext i32 %j.197 to i64
  %wid39 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %wp, i64 %idxprom37, i32 0
  store i32 %10, i32* %wid39, align 4, !tbaa !84
  %13 = load i32, i32* %l32, align 4, !tbaa !63
  %prob47 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %wp, i64 %idxprom37, i32 1
  store i32 %13, i32* %prob47, align 4, !tbaa !71
  %inc48 = add nsw i32 %j.197, 1
  br label %if.end49

if.end49:                                         ; preds = %if.then36, %while.body
  %j.2 = phi i32 [ %inc48, %if.then36 ], [ %j.197, %while.body ]
  %next = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %lm_cw.098, i64 0, i32 3
  %lm_cw.0 = load %struct.lmclass_word_s*, %struct.lmclass_word_s** %next, align 8, !tbaa !74
  %cmp17.not = icmp eq %struct.lmclass_word_s* %lm_cw.0, null
  br i1 %cmp17.not, label %for.inc, label %while.body, !llvm.loop !467

for.inc:                                          ; preds = %if.end49, %if.else, %for.body, %if.then3, %if.then8
  %j.3 = phi i32 [ %inc, %if.then8 ], [ %j.0100, %if.then3 ], [ %j.0100, %for.body ], [ %j.0100, %if.else ], [ %j.2, %if.end49 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !468

for.end:                                          ; preds = %for.inc, %entry
  %j.0.lcssa = phi i32 [ 0, %entry ], [ %j.3, %for.inc ]
  ret i32 %j.0.lcssa
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @lm_bglist(%struct.lm_s* nocapture %lm, i16 zeroext %w1, %struct.bg_t** nocapture %bgptr, i32* nocapture %bowt) local_unnamed_addr #0 {
entry:
  %conv = zext i16 %w1 to i32
  %cmp = icmp eq i16 %w1, -1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %0 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp3.not = icmp sgt i32 %0, %conv
  br i1 %cmp3.not, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 972, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.25.389, i64 0, i64 0), i32 %conv) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %n_bg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 1
  %1 = load i32, i32* %n_bg, align 4, !tbaa !134
  %cmp6 = icmp sgt i32 %1, 0
  br i1 %cmp6, label %cond.end, label %if.else

cond.end:                                         ; preds = %if.end
  %ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 9
  %2 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %add = add nuw nsw i32 %conv, 1
  %idxprom = zext i32 %add to i64
  %firstbg = getelementptr inbounds %struct.ug_t, %struct.ug_t* %2, i64 %idxprom, i32 3
  %3 = load i32, i32* %firstbg, align 4, !tbaa !423
  %idxprom10 = zext i16 %w1 to i64
  %firstbg12 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %2, i64 %idxprom10, i32 3
  %4 = load i32, i32* %firstbg12, align 4, !tbaa !423
  %sub = sub nsw i32 %3, %4
  %cmp13 = icmp sgt i32 %sub, 0
  br i1 %cmp13, label %if.then15, label %if.else

if.then15:                                        ; preds = %cond.end
  %membg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 12
  %5 = load %struct.membg_t*, %struct.membg_t** %membg, align 8, !tbaa !428
  %bg = getelementptr inbounds %struct.membg_t, %struct.membg_t* %5, i64 %idxprom10, i32 0
  %6 = load %struct.bg_t*, %struct.bg_t** %bg, align 8, !tbaa !330
  %tobool.not = icmp eq %struct.bg_t* %6, null
  br i1 %tobool.not, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.then15
  tail call fastcc void @load_bg(%struct.lm_s* nonnull %lm, i16 zeroext %w1) #36
  %.pre = load %struct.membg_t*, %struct.membg_t** %membg, align 8, !tbaa !428
  %bg26.phi.trans.insert = getelementptr inbounds %struct.membg_t, %struct.membg_t* %.pre, i64 %idxprom10, i32 0
  %.pre57 = load %struct.bg_t*, %struct.bg_t** %bg26.phi.trans.insert, align 8, !tbaa !330
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %if.then15
  %7 = phi %struct.bg_t* [ %.pre57, %if.then18 ], [ %6, %if.then15 ]
  %8 = phi %struct.membg_t* [ %.pre, %if.then18 ], [ %5, %if.then15 ]
  %used = getelementptr inbounds %struct.membg_t, %struct.membg_t* %8, i64 %idxprom10, i32 1
  store i32 1, i32* %used, align 8, !tbaa !64
  store %struct.bg_t* %7, %struct.bg_t** %bgptr, align 8, !tbaa !74
  %9 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %bowt30 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %9, i64 %idxprom10, i32 2
  %l = bitcast %union.lmlog_t* %bowt30 to i32*
  %10 = load i32, i32* %l, align 4, !tbaa !63
  br label %if.end31

if.else:                                          ; preds = %if.end, %cond.end
  %cond56 = phi i32 [ %sub, %cond.end ], [ 0, %if.end ]
  store %struct.bg_t* null, %struct.bg_t** %bgptr, align 8, !tbaa !74
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.end19
  %cond55 = phi i32 [ %cond56, %if.else ], [ %sub, %if.end19 ]
  %storemerge = phi i32 [ 0, %if.else ], [ %10, %if.end19 ]
  store i32 %storemerge, i32* %bowt, align 4, !tbaa !37
  ret i32 %cond55
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @load_bg(%struct.lm_s* nocapture %lm, i16 zeroext %lw1) unnamed_addr #0 {
entry:
  %ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 9
  %0 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %idxprom = zext i16 %lw1 to i64
  %firstbg = getelementptr inbounds %struct.ug_t, %struct.ug_t* %0, i64 %idxprom, i32 3
  %1 = load i32, i32* %firstbg, align 4, !tbaa !423
  %add = add nuw nsw i64 %idxprom, 1
  %firstbg4 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %0, i64 %add, i32 3
  %2 = load i32, i32* %firstbg4, align 4, !tbaa !423
  %sub = sub nsw i32 %2, %1
  %.b = load i1, i1* @LM_IN_MEMORY, align 4
  br i1 %.b, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %bg5 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 10
  %3 = load %struct.bg_t*, %struct.bg_t** %bg5, align 8, !tbaa !425
  %idxprom6 = sext i32 %1 to i64
  %arrayidx7 = getelementptr inbounds %struct.bg_t, %struct.bg_t* %3, i64 %idxprom6
  %membg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 12
  %4 = load %struct.membg_t*, %struct.membg_t** %membg, align 8, !tbaa !428
  %bg10 = getelementptr inbounds %struct.membg_t, %struct.membg_t* %4, i64 %idxprom, i32 0
  store %struct.bg_t* %arrayidx7, %struct.bg_t** %bg10, align 8, !tbaa !330
  br label %if.end98

if.else:                                          ; preds = %entry
  %add11 = add nsw i32 %sub, 1
  %conv12 = sext i32 %add11 to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv12, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 919) #34
  %5 = bitcast i8* %call to %struct.bg_t*
  %membg13 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 12
  %6 = load %struct.membg_t*, %struct.membg_t** %membg13, align 8, !tbaa !428
  %bg16 = getelementptr inbounds %struct.membg_t, %struct.membg_t* %6, i64 %idxprom, i32 0
  %7 = bitcast %struct.bg_t** %bg16 to i8**
  store i8* %call, i8** %7, align 8, !tbaa !330
  %fp = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 21
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !418
  %bgoff = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 23
  %9 = load i32, i32* %bgoff, align 4, !tbaa !427
  %conv17 = sext i32 %9 to i64
  %conv18 = sext i32 %1 to i64
  %mul = shl nsw i64 %conv18, 3
  %add19 = add nsw i64 %mul, %conv17
  %call20 = tail call i32 @fseek(%struct._IO_FILE* %8, i64 %add19, i32 0) #36
  %cmp = icmp slt i32 %call20, 0
  br i1 %cmp, label %if.then22, label %if.end

if.then22:                                        ; preds = %if.else
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 922, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33.347, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__fatal_sys_error(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64.390, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then22, %if.else
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !418
  %call26 = tail call i64 @fread(i8* %call, i64 8, i64 %conv12, %struct._IO_FILE* %10) #36
  %cmp29.not = icmp eq i64 %call26, %conv12
  br i1 %cmp29.not, label %if.end32, label %if.then31

if.then31:                                        ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 926, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.61.377, i64 0, i64 0)) #34
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %if.end
  %byteswap = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 22
  %11 = load i32, i32* %byteswap, align 8, !tbaa !419
  %tobool33.not = icmp eq i32 %11, 0
  %cmp35.not152 = icmp slt i32 %sub, 0
  %or.cond = select i1 %tobool33.not, i1 true, i1 %cmp35.not152
  br i1 %or.cond, label %if.end98, label %for.body.preheader

for.body.preheader:                               ; preds = %if.end32
  %12 = add i32 %2, 1
  %13 = sub i32 %12, %1
  %wide.trip.count = zext i32 %13 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %wid = getelementptr inbounds %struct.bg_t, %struct.bg_t* %5, i64 %indvars.iv, i32 0
  %14 = load i16, i16* %wid, align 2, !tbaa !469
  %rev = tail call i16 @llvm.bswap.i16(i16 %14)
  store i16 %rev, i16* %wid, align 2, !tbaa !469
  %probid = getelementptr inbounds %struct.bg_t, %struct.bg_t* %5, i64 %indvars.iv, i32 1
  %15 = load i16, i16* %probid, align 2, !tbaa !471
  %rev149 = tail call i16 @llvm.bswap.i16(i16 %15)
  store i16 %rev149, i16* %probid, align 2, !tbaa !471
  %bowtid = getelementptr inbounds %struct.bg_t, %struct.bg_t* %5, i64 %indvars.iv, i32 2
  %16 = load i16, i16* %bowtid, align 2, !tbaa !472
  %rev150 = tail call i16 @llvm.bswap.i16(i16 %16)
  store i16 %rev150, i16* %bowtid, align 2, !tbaa !472
  %firsttg = getelementptr inbounds %struct.bg_t, %struct.bg_t* %5, i64 %indvars.iv, i32 3
  %17 = load i16, i16* %firsttg, align 2, !tbaa !473
  %rev151 = tail call i16 @llvm.bswap.i16(i16 %17)
  store i16 %rev151, i16* %firsttg, align 2, !tbaa !473
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end98, label %for.body, !llvm.loop !474

if.end98:                                         ; preds = %for.body, %if.end32, %if.then
  %n_bg_fill = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 28
  %18 = load i32, i32* %n_bg_fill, align 8, !tbaa !464
  %inc99 = add nsw i32 %18, 1
  store i32 %inc99, i32* %n_bg_fill, align 8, !tbaa !464
  %n_bg_inmem = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 29
  %19 = load i32, i32* %n_bg_inmem, align 4, !tbaa !448
  %add100 = add nsw i32 %19, %sub
  store i32 %add100, i32* %n_bg_inmem, align 4, !tbaa !448
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #10

; Function Attrs: noinline nounwind optsize uwtable
define i32 @lm_bg_score(%struct.lm_s* nocapture %lm, i16 zeroext %lw1, i16 zeroext %lw2, i32 %w2) local_unnamed_addr #0 {
entry:
  %n_bg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 1
  %0 = load i32, i32* %n_bg, align 4, !tbaa !134
  %cmp = icmp eq i32 %0, 0
  %conv = zext i16 %lw1 to i64
  %cmp1 = icmp eq i16 %lw1, -1
  %or.cond = select i1 %cmp, i1 true, i1 %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 @lm_ug_score(%struct.lm_s* nonnull %lm, i16 zeroext %lw2, i32 %w2) #36
  br label %cleanup

if.end:                                           ; preds = %entry
  %n_bg_score = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 30
  %1 = load i32, i32* %n_bg_score, align 8, !tbaa !462
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %n_bg_score, align 8, !tbaa !462
  %conv3 = zext i16 %lw2 to i32
  %cmp4 = icmp eq i16 %lw2, -1
  br i1 %cmp4, label %if.then10, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %if.end
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %2 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp8.not = icmp sgt i32 %2, %conv3
  br i1 %cmp8.not, label %if.end12, label %if.then10

if.then10:                                        ; preds = %lor.lhs.false6, %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 1038, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.26.391, i64 0, i64 0), i32 %conv3) #34
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %lor.lhs.false6
  %ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 9
  %3 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %add = add nuw nsw i64 %conv, 1
  %firstbg = getelementptr inbounds %struct.ug_t, %struct.ug_t* %3, i64 %add, i32 3
  %4 = load i32, i32* %firstbg, align 4, !tbaa !423
  %firstbg17 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %3, i64 %conv, i32 3
  %5 = load i32, i32* %firstbg17, align 4, !tbaa !423
  %sub = sub nsw i32 %4, %5
  %cmp18 = icmp sgt i32 %sub, 0
  br i1 %cmp18, label %if.then20, label %if.else49

if.then20:                                        ; preds = %if.end12
  %membg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 12
  %6 = load %struct.membg_t*, %struct.membg_t** %membg, align 8, !tbaa !428
  %bg23 = getelementptr inbounds %struct.membg_t, %struct.membg_t* %6, i64 %conv, i32 0
  %7 = load %struct.bg_t*, %struct.bg_t** %bg23, align 8, !tbaa !330
  %tobool.not = icmp eq %struct.bg_t* %7, null
  br i1 %tobool.not, label %if.then24, label %if.end34

if.then24:                                        ; preds = %if.then20
  tail call fastcc void @load_bg(%struct.lm_s* nonnull %lm, i16 zeroext %lw1) #36
  %.pre = load %struct.membg_t*, %struct.membg_t** %membg, align 8, !tbaa !428
  %bg32.phi.trans.insert = getelementptr inbounds %struct.membg_t, %struct.membg_t* %.pre, i64 %conv, i32 0
  %.pre107 = load %struct.bg_t*, %struct.bg_t** %bg32.phi.trans.insert, align 8, !tbaa !330
  br label %if.end34

if.end34:                                         ; preds = %if.then20, %if.then24
  %8 = phi %struct.bg_t* [ %7, %if.then20 ], [ %.pre107, %if.then24 ]
  %9 = phi %struct.membg_t* [ %6, %if.then20 ], [ %.pre, %if.then24 ]
  %used = getelementptr inbounds %struct.membg_t, %struct.membg_t* %9, i64 %conv, i32 1
  store i32 1, i32* %used, align 8, !tbaa !64
  %call33 = tail call fastcc i32 @find_bg(%struct.bg_t* %8, i32 %sub, i16 zeroext %lw2) #36
  %cmp35 = icmp sgt i32 %call33, -1
  br i1 %cmp35, label %if.then37, label %if.end34.if.else49_crit_edge

if.end34.if.else49_crit_edge:                     ; preds = %if.end34
  %.pre108 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  br label %if.else49

if.then37:                                        ; preds = %if.end34
  %bgprob = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 14
  %10 = load %union.lmlog_t*, %union.lmlog_t** %bgprob, align 8, !tbaa !399
  %idxprom38106 = zext i32 %call33 to i64
  %probid = getelementptr inbounds %struct.bg_t, %struct.bg_t* %8, i64 %idxprom38106, i32 1
  %11 = load i16, i16* %probid, align 2, !tbaa !471
  %idxprom40 = zext i16 %11 to i64
  %arrayidx41 = getelementptr inbounds %union.lmlog_t, %union.lmlog_t* %10, i64 %idxprom40
  %l = bitcast %union.lmlog_t* %arrayidx41 to i32*
  %12 = load i32, i32* %l, align 4, !tbaa !63
  %inclass_ugscore = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 42
  %13 = load i32*, i32** %inclass_ugscore, align 8, !tbaa !440
  %tobool42.not = icmp eq i32* %13, null
  br i1 %tobool42.not, label %if.end48, label %if.then43

if.then43:                                        ; preds = %if.then37
  %idxprom45 = sext i32 %w2 to i64
  %arrayidx46 = getelementptr inbounds i32, i32* %13, i64 %idxprom45
  %14 = load i32, i32* %arrayidx46, align 4, !tbaa !37
  %add47 = add nsw i32 %14, %12
  br label %if.end48

if.end48:                                         ; preds = %if.then43, %if.then37
  %score.0 = phi i32 [ %add47, %if.then43 ], [ %12, %if.then37 ]
  %access_type = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 37
  store i32 2, i32* %access_type, align 4, !tbaa !465
  br label %cleanup

if.else49:                                        ; preds = %if.end34.if.else49_crit_edge, %if.end12
  %15 = phi %struct.ug_t* [ %.pre108, %if.end34.if.else49_crit_edge ], [ %3, %if.end12 ]
  %n_bg_bo = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 31
  %16 = load i32, i32* %n_bg_bo, align 4, !tbaa !463
  %inc50 = add nsw i32 %16, 1
  store i32 %inc50, i32* %n_bg_bo, align 4, !tbaa !463
  %access_type51 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 37
  store i32 1, i32* %access_type51, align 4, !tbaa !465
  %bowt = getelementptr inbounds %struct.ug_t, %struct.ug_t* %15, i64 %conv, i32 2
  %l55 = bitcast %union.lmlog_t* %bowt to i32*
  %17 = load i32, i32* %l55, align 4, !tbaa !63
  %idxprom57 = zext i16 %lw2 to i64
  %prob = getelementptr inbounds %struct.ug_t, %struct.ug_t* %15, i64 %idxprom57, i32 1
  %l59 = bitcast %union.lmlog_t* %prob to i32*
  %18 = load i32, i32* %l59, align 4, !tbaa !63
  %add60 = add nsw i32 %18, %17
  br label %cleanup

cleanup:                                          ; preds = %if.end48, %if.else49, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %score.0, %if.end48 ], [ %add60, %if.else49 ]
  ret i32 %retval.0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define internal fastcc i32 @find_bg(%struct.bg_t* nocapture readonly %bg, i32 %n, i16 zeroext %w) unnamed_addr #16 {
entry:
  %cmp55 = icmp sgt i32 %n, 16
  br i1 %cmp55, label %while.body, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end14, %entry
  %b.0.lcssa = phi i32 [ 0, %entry ], [ %b.1, %if.end14 ]
  %e.0.lcssa = phi i32 [ %n, %entry ], [ %e.1, %if.end14 ]
  %cmp1552 = icmp slt i32 %b.0.lcssa, %e.0.lcssa
  br i1 %cmp1552, label %land.rhs.preheader, label %cleanup

land.rhs.preheader:                               ; preds = %for.cond.preheader
  %0 = sext i32 %b.0.lcssa to i64
  br label %land.rhs

while.body:                                       ; preds = %entry, %if.end14
  %e.057 = phi i32 [ %e.1, %if.end14 ], [ %n, %entry ]
  %b.056 = phi i32 [ %b.1, %if.end14 ], [ 0, %entry ]
  %add = add nsw i32 %e.057, %b.056
  %shr = ashr i32 %add, 1
  %idxprom = sext i32 %shr to i64
  %wid = getelementptr inbounds %struct.bg_t, %struct.bg_t* %bg, i64 %idxprom, i32 0
  %1 = load i16, i16* %wid, align 2, !tbaa !469
  %cmp2 = icmp ult i16 %1, %w
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %add4 = add nsw i32 %shr, 1
  br label %if.end14

if.else:                                          ; preds = %while.body
  %cmp10 = icmp ugt i16 %1, %w
  br i1 %cmp10, label %if.end14, label %cleanup

if.end14:                                         ; preds = %if.else, %if.then
  %b.1 = phi i32 [ %add4, %if.then ], [ %b.056, %if.else ]
  %e.1 = phi i32 [ %e.057, %if.then ], [ %shr, %if.else ]
  %sub = sub nsw i32 %e.1, %b.1
  %cmp = icmp sgt i32 %sub, 16
  br i1 %cmp, label %while.body, label %for.cond.preheader, !llvm.loop !475

land.rhs:                                         ; preds = %land.rhs.preheader, %for.inc
  %indvars.iv = phi i64 [ %0, %land.rhs.preheader ], [ %indvars.iv.next, %for.inc ]
  %wid19 = getelementptr inbounds %struct.bg_t, %struct.bg_t* %bg, i64 %indvars.iv, i32 0
  %2 = load i16, i16* %wid19, align 2, !tbaa !469
  %cmp22.not = icmp eq i16 %2, %w
  br i1 %cmp22.not, label %cleanup.loopexit.split.loop.exit, label %for.inc

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %e.0.lcssa, %lftr.wideiv
  br i1 %exitcond.not, label %cleanup, label %land.rhs, !llvm.loop !476

cleanup.loopexit.split.loop.exit:                 ; preds = %land.rhs
  %3 = trunc i64 %indvars.iv to i32
  br label %cleanup

cleanup:                                          ; preds = %if.else, %for.inc, %cleanup.loopexit.split.loop.exit, %for.cond.preheader
  %retval.0 = phi i32 [ -1, %for.cond.preheader ], [ %3, %cleanup.loopexit.split.loop.exit ], [ -1, %for.inc ], [ %shr, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @lm_tglist(%struct.lm_s* nocapture %lm, i16 zeroext %lw1, i16 zeroext %lw2, %struct.tg_t** nocapture %tgptr, i32* nocapture %bowt) local_unnamed_addr #0 {
entry:
  %n_tg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 2
  %0 = load i32, i32* %n_tg, align 8, !tbaa !135
  %cmp = icmp slt i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.tg_t* null, %struct.tg_t** %tgptr, align 8, !tbaa !74
  store i32 0, i32* %bowt, align 4, !tbaa !37
  br label %cleanup

if.end:                                           ; preds = %entry
  %conv = zext i16 %lw1 to i32
  %cmp1 = icmp eq i16 %lw1, -1
  br i1 %cmp1, label %if.then6, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %1 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp4.not = icmp sgt i32 %1, %conv
  br i1 %cmp4.not, label %if.end8, label %if.then6

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 1192, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.27.392, i64 0, i64 0), i32 %conv) #34
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %lor.lhs.false
  %conv9 = zext i16 %lw2 to i32
  %cmp10 = icmp eq i16 %lw2, -1
  br i1 %cmp10, label %if.then17, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %if.end8
  %n_ug14 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %2 = load i32, i32* %n_ug14, align 8, !tbaa !133
  %cmp15.not = icmp sgt i32 %2, %conv9
  br i1 %cmp15.not, label %if.end19, label %if.then17

if.then17:                                        ; preds = %lor.lhs.false12, %if.end8
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 1194, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28.393, i64 0, i64 0), i32 %conv9) #34
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %lor.lhs.false12
  %tginfo20 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 13
  %3 = load %struct.tginfo_s**, %struct.tginfo_s*** %tginfo20, align 8, !tbaa !430
  %idxprom = zext i16 %lw2 to i64
  %arrayidx = getelementptr inbounds %struct.tginfo_s*, %struct.tginfo_s** %3, i64 %idxprom
  %tginfo.084 = load %struct.tginfo_s*, %struct.tginfo_s** %arrayidx, align 8, !tbaa !74
  %tobool.not85 = icmp eq %struct.tginfo_s* %tginfo.084, null
  br i1 %tobool.not85, label %if.then28, label %for.body.preheader

for.body.preheader:                               ; preds = %if.end19
  %w194 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.084, i64 0, i32 0
  %4 = load i16, i16* %w194, align 8, !tbaa !477
  %cmp2395 = icmp eq i16 %4, %lw1
  br i1 %cmp2395, label %if.else, label %if.end26

for.body:                                         ; preds = %if.end26
  %w1 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.0, i64 0, i32 0
  %5 = load i16, i16* %w1, align 8, !tbaa !477
  %cmp23 = icmp eq i16 %5, %lw1
  br i1 %cmp23, label %if.else, label %if.end26, !llvm.loop !478

if.end26:                                         ; preds = %for.body.preheader, %for.body
  %tginfo.08796 = phi %struct.tginfo_s* [ %tginfo.0, %for.body ], [ %tginfo.084, %for.body.preheader ]
  %next = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.08796, i64 0, i32 5
  %tginfo.0 = load %struct.tginfo_s*, %struct.tginfo_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.tginfo_s* %tginfo.0, null
  br i1 %tobool.not, label %if.then28, label %for.body, !llvm.loop !478

if.then28:                                        ; preds = %if.end26, %if.end19
  tail call fastcc void @load_tg(%struct.lm_s* %lm, i16 zeroext %lw1, i16 zeroext %lw2) #36
  %6 = load %struct.tginfo_s**, %struct.tginfo_s*** %tginfo20, align 8, !tbaa !430
  %arrayidx31 = getelementptr inbounds %struct.tginfo_s*, %struct.tginfo_s** %6, i64 %idxprom
  %7 = load %struct.tginfo_s*, %struct.tginfo_s** %arrayidx31, align 8, !tbaa !74
  br label %if.end44

if.else:                                          ; preds = %for.body, %for.body.preheader
  %tginfo.087.lcssa = phi %struct.tginfo_s* [ %tginfo.084, %for.body.preheader ], [ %tginfo.0, %for.body ]
  %prev_tginfo.086.lcssa = phi %struct.tginfo_s* [ null, %for.body.preheader ], [ %tginfo.08796, %for.body ]
  %tobool32.not = icmp eq %struct.tginfo_s* %prev_tginfo.086.lcssa, null
  br i1 %tobool32.not, label %if.end44, label %if.then33

if.then33:                                        ; preds = %if.else
  %next34 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.087.lcssa, i64 0, i32 5
  %8 = load %struct.tginfo_s*, %struct.tginfo_s** %next34, align 8, !tbaa !450
  %next35 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %prev_tginfo.086.lcssa, i64 0, i32 5
  store %struct.tginfo_s* %8, %struct.tginfo_s** %next35, align 8, !tbaa !450
  %9 = load %struct.tginfo_s*, %struct.tginfo_s** %arrayidx, align 8, !tbaa !74
  store %struct.tginfo_s* %9, %struct.tginfo_s** %next34, align 8, !tbaa !450
  store %struct.tginfo_s* %tginfo.087.lcssa, %struct.tginfo_s** %arrayidx, align 8, !tbaa !74
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then33, %if.then28
  %tginfo.1 = phi %struct.tginfo_s* [ %tginfo.087.lcssa, %if.then33 ], [ %tginfo.087.lcssa, %if.else ], [ %7, %if.then28 ]
  %used = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.1, i64 0, i32 4
  store i32 1, i32* %used, align 4, !tbaa !452
  %tg = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.1, i64 0, i32 2
  %10 = load %struct.tg_t*, %struct.tg_t** %tg, align 8, !tbaa !453
  store %struct.tg_t* %10, %struct.tg_t** %tgptr, align 8, !tbaa !74
  %bowt45 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.1, i64 0, i32 3
  %11 = load i32, i32* %bowt45, align 8, !tbaa !479
  store i32 %11, i32* %bowt, align 4, !tbaa !37
  %n_tg46 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.1, i64 0, i32 1
  %12 = load i32, i32* %n_tg46, align 4, !tbaa !454
  br label %cleanup

cleanup:                                          ; preds = %if.end44, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ %12, %if.end44 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @load_tg(%struct.lm_s* nocapture %lm, i16 zeroext %lw1, i16 zeroext %lw2) unnamed_addr #0 {
entry:
  %call = tail call i8* @__ckd_malloc__(i64 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 1087) #34
  %w1 = bitcast i8* %call to i16*
  store i16 %lw1, i16* %w1, align 8, !tbaa !477
  %tg1 = getelementptr inbounds i8, i8* %call, i64 8
  %0 = bitcast i8* %tg1 to %struct.tg_t**
  store %struct.tg_t* null, %struct.tg_t** %0, align 8, !tbaa !453
  %tginfo2 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 13
  %1 = load %struct.tginfo_s**, %struct.tginfo_s*** %tginfo2, align 8, !tbaa !430
  %idxprom = zext i16 %lw2 to i64
  %arrayidx = getelementptr inbounds %struct.tginfo_s*, %struct.tginfo_s** %1, i64 %idxprom
  %2 = load %struct.tginfo_s*, %struct.tginfo_s** %arrayidx, align 8, !tbaa !74
  %next = getelementptr inbounds i8, i8* %call, i64 24
  %3 = bitcast i8* %next to %struct.tginfo_s**
  store %struct.tginfo_s* %2, %struct.tginfo_s** %3, align 8, !tbaa !450
  %4 = bitcast %struct.tginfo_s** %arrayidx to i8**
  store i8* %call, i8** %4, align 8, !tbaa !74
  %ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 9
  %5 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %idxprom6 = zext i16 %lw1 to i64
  %firstbg = getelementptr inbounds %struct.ug_t, %struct.ug_t* %5, i64 %idxprom6, i32 3
  %6 = load i32, i32* %firstbg, align 4, !tbaa !423
  %add = add nuw nsw i64 %idxprom6, 1
  %firstbg11 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %5, i64 %add, i32 3
  %7 = load i32, i32* %firstbg11, align 4, !tbaa !423
  %sub = sub nsw i32 %7, %6
  %cmp = icmp sgt i32 %sub, 0
  br i1 %cmp, label %if.then, label %if.end57.thread

if.then:                                          ; preds = %entry
  %membg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 12
  %8 = load %struct.membg_t*, %struct.membg_t** %membg, align 8, !tbaa !428
  %bg15 = getelementptr inbounds %struct.membg_t, %struct.membg_t* %8, i64 %idxprom6, i32 0
  %9 = load %struct.bg_t*, %struct.bg_t** %bg15, align 8, !tbaa !330
  %tobool.not = icmp eq %struct.bg_t* %9, null
  br i1 %tobool.not, label %if.then16, label %land.lhs.true

if.then16:                                        ; preds = %if.then
  tail call fastcc void @load_bg(%struct.lm_s* nonnull %lm, i16 zeroext %lw1) #36
  %.pre = load %struct.membg_t*, %struct.membg_t** %membg, align 8, !tbaa !428
  %bg23.phi.trans.insert = getelementptr inbounds %struct.membg_t, %struct.membg_t* %.pre, i64 %idxprom6, i32 0
  %.pre235 = load %struct.bg_t*, %struct.bg_t** %bg23.phi.trans.insert, align 8, !tbaa !330
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then, %if.then16
  %10 = phi %struct.bg_t* [ %9, %if.then ], [ %.pre235, %if.then16 ]
  %11 = phi %struct.membg_t* [ %8, %if.then ], [ %.pre, %if.then16 ]
  %used = getelementptr inbounds %struct.membg_t, %struct.membg_t* %11, i64 %idxprom6, i32 1
  store i32 1, i32* %used, align 8, !tbaa !64
  %call27 = tail call fastcc i32 @find_bg(%struct.bg_t* %10, i32 %sub, i16 zeroext %lw2) #36
  %cmp28 = icmp sgt i32 %call27, -1
  br i1 %cmp28, label %if.end57, label %if.end57.thread

if.end57:                                         ; preds = %land.lhs.true
  %tgbowt = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 16
  %12 = load %union.lmlog_t*, %union.lmlog_t** %tgbowt, align 8, !tbaa !405
  %idxprom31230 = zext i32 %call27 to i64
  %bowtid = getelementptr inbounds %struct.bg_t, %struct.bg_t* %10, i64 %idxprom31230, i32 2
  %13 = load i16, i16* %bowtid, align 2, !tbaa !472
  %idxprom33 = zext i16 %13 to i64
  %arrayidx34 = getelementptr inbounds %union.lmlog_t, %union.lmlog_t* %12, i64 %idxprom33
  %l = bitcast %union.lmlog_t* %arrayidx34 to i32*
  %14 = load i32, i32* %l, align 4, !tbaa !63
  %bowt = getelementptr inbounds i8, i8* %call, i64 16
  %15 = bitcast i8* %bowt to i32*
  store i32 %14, i32* %15, align 8, !tbaa !479
  %add35 = add nsw i32 %call27, %6
  %tg_segbase = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 17
  %16 = load i32*, i32** %tg_segbase, align 8, !tbaa !434
  %log_bg_seg_sz = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 7
  %17 = load i32, i32* %log_bg_seg_sz, align 4, !tbaa !421
  %shr = ashr i32 %add35, %17
  %idxprom36 = sext i32 %shr to i64
  %arrayidx37 = getelementptr inbounds i32, i32* %16, i64 %idxprom36
  %18 = load i32, i32* %arrayidx37, align 4, !tbaa !37
  %firsttg = getelementptr inbounds %struct.bg_t, %struct.bg_t* %10, i64 %idxprom31230, i32 3
  %19 = load i16, i16* %firsttg, align 2, !tbaa !473
  %conv40 = zext i16 %19 to i32
  %add41 = add nsw i32 %18, %conv40
  %add43 = add nsw i32 %add35, 1
  %shr45 = ashr i32 %add43, %17
  %idxprom46 = sext i32 %shr45 to i64
  %arrayidx47 = getelementptr inbounds i32, i32* %16, i64 %idxprom46
  %20 = load i32, i32* %arrayidx47, align 4, !tbaa !37
  %add48 = add nuw nsw i32 %call27, 1
  %idxprom49231 = zext i32 %add48 to i64
  %firsttg51 = getelementptr inbounds %struct.bg_t, %struct.bg_t* %10, i64 %idxprom49231, i32 3
  %21 = load i16, i16* %firsttg51, align 2, !tbaa !473
  %conv52 = zext i16 %21 to i32
  %add53 = sub i32 %20, %add41
  %sub54 = add i32 %add53, %conv52
  %n_tg = getelementptr inbounds i8, i8* %call, i64 4
  %22 = bitcast i8* %n_tg to i32*
  store i32 %sub54, i32* %22, align 4, !tbaa !454
  %phi.cast = sext i32 %add41 to i64
  %.b = load i1, i1* @LM_IN_MEMORY, align 4
  %cmp60 = icmp sgt i32 %sub54, 0
  br i1 %.b, label %if.then59, label %if.else68

if.end57.thread:                                  ; preds = %land.lhs.true, %entry
  %bowt55 = getelementptr inbounds i8, i8* %call, i64 16
  %23 = bitcast i8* %bowt55 to i32*
  store i32 0, i32* %23, align 8, !tbaa !479
  %n_tg56 = getelementptr inbounds i8, i8* %call, i64 4
  %24 = bitcast i8* %n_tg56 to i32*
  store i32 0, i32* %24, align 4, !tbaa !454
  br label %if.end127

if.then59:                                        ; preds = %if.end57
  br i1 %cmp60, label %if.then62, label %if.end127

if.then62:                                        ; preds = %if.then59
  %tg63 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 11
  %25 = load %struct.tg_t*, %struct.tg_t** %tg63, align 8, !tbaa !426
  %arrayidx65 = getelementptr inbounds %struct.tg_t, %struct.tg_t* %25, i64 %phi.cast
  store %struct.tg_t* %arrayidx65, %struct.tg_t** %0, align 8, !tbaa !453
  br label %if.end127

if.else68:                                        ; preds = %if.end57
  br i1 %cmp60, label %if.then71, label %if.end127

if.then71:                                        ; preds = %if.else68
  %conv72232 = zext i32 %sub54 to i64
  %call73 = tail call i8* @__ckd_calloc__(i64 %conv72232, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i32 1140) #34
  %26 = bitcast i8* %call73 to %struct.tg_t*
  %27 = bitcast i8* %tg1 to i8**
  store i8* %call73, i8** %27, align 8, !tbaa !453
  %fp = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 21
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !418
  %tgoff = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 24
  %29 = load i32, i32* %tgoff, align 8, !tbaa !429
  %conv75 = sext i32 %29 to i64
  %mul = shl nsw i64 %phi.cast, 2
  %add77 = add nsw i64 %mul, %conv75
  %call78 = tail call i32 @fseek(%struct._IO_FILE* %28, i64 %add77, i32 0) #36
  %cmp79 = icmp slt i32 %call78, 0
  br i1 %cmp79, label %if.then81, label %if.end82

if.then81:                                        ; preds = %if.then71
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 1142, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33.347, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__fatal_sys_error(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64.390, i64 0, i64 0)) #34
  br label %if.end82

if.end82:                                         ; preds = %if.then81, %if.then71
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !418
  %call85 = tail call i64 @fread(i8* %call73, i64 4, i64 %conv72232, %struct._IO_FILE* %30) #36
  %cmp87.not = icmp eq i64 %call85, %conv72232
  br i1 %cmp87.not, label %if.end91, label %if.then89

if.then89:                                        ; preds = %if.end82
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 1145, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  %31 = load i32, i32* %tgoff, align 8, !tbaa !429
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.65.394, i64 0, i64 0), i32 %sub54, i32 %31) #34
  br label %if.end91

if.end91:                                         ; preds = %if.then89, %if.end82
  %byteswap = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 22
  %32 = load i32, i32* %byteswap, align 8, !tbaa !419
  %tobool92.not.not = icmp eq i32 %32, 0
  br i1 %tobool92.not.not, label %if.end127, label %for.body.preheader

for.body.preheader:                               ; preds = %if.end91
  %33 = zext i32 %sub54 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %wid = getelementptr inbounds %struct.tg_t, %struct.tg_t* %26, i64 %indvars.iv, i32 0
  %34 = load i16, i16* %wid, align 2, !tbaa !480
  %rev = tail call i16 @llvm.bswap.i16(i16 %34)
  store i16 %rev, i16* %wid, align 2, !tbaa !480
  %probid = getelementptr inbounds %struct.tg_t, %struct.tg_t* %26, i64 %indvars.iv, i32 1
  %35 = load i16, i16* %probid, align 2, !tbaa !482
  %rev213 = tail call i16 @llvm.bswap.i16(i16 %35)
  store i16 %rev213, i16* %probid, align 2, !tbaa !482
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp94 = icmp ult i64 %indvars.iv.next, %33
  br i1 %cmp94, label %for.body, label %if.end127, !llvm.loop !483

if.end127:                                        ; preds = %for.body, %if.end57.thread, %if.else68, %if.end91, %if.then59, %if.then62
  %n.0220 = phi i32 [ %sub54, %if.else68 ], [ %sub54, %if.end91 ], [ %sub54, %if.then59 ], [ %sub54, %if.then62 ], [ 0, %if.end57.thread ], [ %sub54, %for.body ]
  %n_tg_fill = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 32
  %36 = load i32, i32* %n_tg_fill, align 8, !tbaa !461
  %inc128 = add nsw i32 %36, 1
  store i32 %inc128, i32* %n_tg_fill, align 8, !tbaa !461
  %n_tg_inmem = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 33
  %37 = load i32, i32* %n_tg_inmem, align 4, !tbaa !455
  %add129 = add nsw i32 %37, %n.0220
  store i32 %add129, i32* %n_tg_inmem, align 4, !tbaa !455
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @lm_tg_score(%struct.lm_s* nocapture %lm, i16 zeroext %lw1, i16 zeroext %lw2, i16 zeroext %lw3, i32 %w3) local_unnamed_addr #0 {
entry:
  %n_tg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 2
  %0 = load i32, i32* %n_tg, align 8, !tbaa !135
  %cmp = icmp eq i32 %0, 0
  %conv = zext i16 %lw1 to i32
  %cmp1 = icmp eq i16 %lw1, -1
  %or.cond = select i1 %cmp, i1 true, i1 %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i32 @lm_bg_score(%struct.lm_s* nonnull %lm, i16 zeroext %lw2, i16 zeroext %lw3, i32 %w3) #36
  br label %cleanup

if.end:                                           ; preds = %entry
  %n_tg_score = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 34
  %1 = load i32, i32* %n_tg_score, align 8, !tbaa !458
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %n_tg_score, align 8, !tbaa !458
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %2 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp8.not = icmp sgt i32 %2, %conv
  br i1 %cmp8.not, label %if.end12, label %if.then10

if.then10:                                        ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 1241, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.395, i64 0, i64 0), i32 %conv) #34
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end
  %conv13 = zext i16 %lw2 to i32
  %cmp14 = icmp eq i16 %lw2, -1
  br i1 %cmp14, label %if.then21, label %lor.lhs.false16

lor.lhs.false16:                                  ; preds = %if.end12
  %3 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp19.not = icmp sgt i32 %3, %conv13
  br i1 %cmp19.not, label %if.end23, label %if.then21

if.then21:                                        ; preds = %lor.lhs.false16, %if.end12
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 1243, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.30.396, i64 0, i64 0), i32 %conv13) #34
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %lor.lhs.false16
  %conv24 = zext i16 %lw3 to i32
  %cmp25 = icmp eq i16 %lw3, -1
  br i1 %cmp25, label %if.then32, label %lor.lhs.false27

lor.lhs.false27:                                  ; preds = %if.end23
  %4 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp30.not = icmp sgt i32 %4, %conv24
  br i1 %cmp30.not, label %if.end34, label %if.then32

if.then32:                                        ; preds = %lor.lhs.false27, %if.end23
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.328, i64 0, i64 0), i64 1245, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.331, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.31.397, i64 0, i64 0), i32 %conv24) #34
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %lor.lhs.false27
  %and = shl i32 %conv, 21
  %shl = and i32 %and, 2145386496
  %and37 = shl nuw nsw i32 %conv13, 11
  %shl38 = and i32 %and37, 2095104
  %add = or i32 %shl38, %shl
  %and40 = and i32 %conv24, 2047
  %add41 = or i32 %add, %and40
  %rem = urem i32 %add41, 100003
  %tgcache = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 27
  %5 = load %struct.lm_tgcache_entry_t*, %struct.lm_tgcache_entry_t** %tgcache, align 8, !tbaa !413
  %6 = zext i32 %rem to i64
  %arrayidx42 = getelementptr inbounds %struct.lm_tgcache_entry_t, %struct.lm_tgcache_entry_t* %5, i64 %6, i32 0, i64 0
  %7 = load i16, i16* %arrayidx42, align 4, !tbaa !40
  %cmp45 = icmp eq i16 %7, %lw1
  br i1 %cmp45, label %land.lhs.true, label %if.end71

land.lhs.true:                                    ; preds = %if.end34
  %arrayidx51 = getelementptr inbounds %struct.lm_tgcache_entry_t, %struct.lm_tgcache_entry_t* %5, i64 %6, i32 0, i64 1
  %8 = load i16, i16* %arrayidx51, align 2, !tbaa !40
  %cmp54 = icmp eq i16 %8, %lw2
  br i1 %cmp54, label %land.lhs.true56, label %if.end71

land.lhs.true56:                                  ; preds = %land.lhs.true
  %arrayidx61 = getelementptr inbounds %struct.lm_tgcache_entry_t, %struct.lm_tgcache_entry_t* %5, i64 %6, i32 0, i64 2
  %9 = load i16, i16* %arrayidx61, align 4, !tbaa !40
  %cmp64 = icmp eq i16 %9, %lw3
  br i1 %cmp64, label %if.then66, label %if.end71

if.then66:                                        ; preds = %land.lhs.true56
  %n_tgcache_hit = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 36
  %10 = load i32, i32* %n_tgcache_hit, align 8, !tbaa !459
  %inc67 = add nsw i32 %10, 1
  store i32 %inc67, i32* %n_tgcache_hit, align 8, !tbaa !459
  %lscr = getelementptr inbounds %struct.lm_tgcache_entry_t, %struct.lm_tgcache_entry_t* %5, i64 %6, i32 1
  %11 = load i32, i32* %lscr, align 4, !tbaa !484
  br label %cleanup

if.end71:                                         ; preds = %land.lhs.true56, %land.lhs.true, %if.end34
  %tginfo72 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 13
  %12 = load %struct.tginfo_s**, %struct.tginfo_s*** %tginfo72, align 8, !tbaa !430
  %idxprom73 = zext i16 %lw2 to i64
  %arrayidx74 = getelementptr inbounds %struct.tginfo_s*, %struct.tginfo_s** %12, i64 %idxprom73
  %tginfo.0234 = load %struct.tginfo_s*, %struct.tginfo_s** %arrayidx74, align 8, !tbaa !74
  %tobool.not235 = icmp eq %struct.tginfo_s* %tginfo.0234, null
  br i1 %tobool.not235, label %if.then82, label %for.body.preheader

for.body.preheader:                               ; preds = %if.end71
  %w1244 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.0234, i64 0, i32 0
  %13 = load i16, i16* %w1244, align 8, !tbaa !477
  %cmp77245 = icmp eq i16 %13, %lw1
  br i1 %cmp77245, label %if.else, label %if.end80

for.body:                                         ; preds = %if.end80
  %w1 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.0, i64 0, i32 0
  %14 = load i16, i16* %w1, align 8, !tbaa !477
  %cmp77 = icmp eq i16 %14, %lw1
  br i1 %cmp77, label %if.else, label %if.end80, !llvm.loop !486

if.end80:                                         ; preds = %for.body.preheader, %for.body
  %tginfo.0237246 = phi %struct.tginfo_s* [ %tginfo.0, %for.body ], [ %tginfo.0234, %for.body.preheader ]
  %next = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.0237246, i64 0, i32 5
  %tginfo.0 = load %struct.tginfo_s*, %struct.tginfo_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.tginfo_s* %tginfo.0, null
  br i1 %tobool.not, label %if.then82, label %for.body, !llvm.loop !486

if.then82:                                        ; preds = %if.end80, %if.end71
  tail call fastcc void @load_tg(%struct.lm_s* %lm, i16 zeroext %lw1, i16 zeroext %lw2) #36
  %15 = load %struct.tginfo_s**, %struct.tginfo_s*** %tginfo72, align 8, !tbaa !430
  %arrayidx85 = getelementptr inbounds %struct.tginfo_s*, %struct.tginfo_s** %15, i64 %idxprom73
  %16 = load %struct.tginfo_s*, %struct.tginfo_s** %arrayidx85, align 8, !tbaa !74
  br label %if.end98

if.else:                                          ; preds = %for.body, %for.body.preheader
  %tginfo.0237.lcssa = phi %struct.tginfo_s* [ %tginfo.0234, %for.body.preheader ], [ %tginfo.0, %for.body ]
  %prev_tginfo.0236.lcssa = phi %struct.tginfo_s* [ null, %for.body.preheader ], [ %tginfo.0237246, %for.body ]
  %tobool86.not = icmp eq %struct.tginfo_s* %prev_tginfo.0236.lcssa, null
  br i1 %tobool86.not, label %if.end98, label %if.then87

if.then87:                                        ; preds = %if.else
  %next88 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.0237.lcssa, i64 0, i32 5
  %17 = load %struct.tginfo_s*, %struct.tginfo_s** %next88, align 8, !tbaa !450
  %next89 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %prev_tginfo.0236.lcssa, i64 0, i32 5
  store %struct.tginfo_s* %17, %struct.tginfo_s** %next89, align 8, !tbaa !450
  %18 = load %struct.tginfo_s*, %struct.tginfo_s** %arrayidx74, align 8, !tbaa !74
  store %struct.tginfo_s* %18, %struct.tginfo_s** %next88, align 8, !tbaa !450
  store %struct.tginfo_s* %tginfo.0237.lcssa, %struct.tginfo_s** %arrayidx74, align 8, !tbaa !74
  br label %if.end98

if.end98:                                         ; preds = %if.else, %if.then87, %if.then82
  %tginfo.1 = phi %struct.tginfo_s* [ %tginfo.0237.lcssa, %if.then87 ], [ %tginfo.0237.lcssa, %if.else ], [ %16, %if.then82 ]
  %used = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.1, i64 0, i32 4
  store i32 1, i32* %used, align 4, !tbaa !452
  %n_tg99 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.1, i64 0, i32 1
  %19 = load i32, i32* %n_tg99, align 4, !tbaa !454
  %tg100 = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.1, i64 0, i32 2
  %20 = load %struct.tg_t*, %struct.tg_t** %tg100, align 8, !tbaa !453
  %call101 = tail call fastcc i32 @find_tg(%struct.tg_t* %20, i32 %19, i16 zeroext %lw3) #36
  %cmp102 = icmp sgt i32 %call101, -1
  br i1 %cmp102, label %if.then104, label %if.else116

if.then104:                                       ; preds = %if.end98
  %tgprob = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 15
  %21 = load %union.lmlog_t*, %union.lmlog_t** %tgprob, align 8, !tbaa !403
  %idxprom105231 = zext i32 %call101 to i64
  %probid = getelementptr inbounds %struct.tg_t, %struct.tg_t* %20, i64 %idxprom105231, i32 1
  %22 = load i16, i16* %probid, align 2, !tbaa !482
  %idxprom107 = zext i16 %22 to i64
  %arrayidx108 = getelementptr inbounds %union.lmlog_t, %union.lmlog_t* %21, i64 %idxprom107
  %l = bitcast %union.lmlog_t* %arrayidx108 to i32*
  %23 = load i32, i32* %l, align 4, !tbaa !63
  %inclass_ugscore = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 42
  %24 = load i32*, i32** %inclass_ugscore, align 8, !tbaa !440
  %tobool109.not = icmp eq i32* %24, null
  br i1 %tobool109.not, label %if.end115, label %if.then110

if.then110:                                       ; preds = %if.then104
  %idxprom112 = sext i32 %w3 to i64
  %arrayidx113 = getelementptr inbounds i32, i32* %24, i64 %idxprom112
  %25 = load i32, i32* %arrayidx113, align 4, !tbaa !37
  %add114 = add nsw i32 %25, %23
  br label %if.end115

if.end115:                                        ; preds = %if.then110, %if.then104
  %score.0 = phi i32 [ %add114, %if.then110 ], [ %23, %if.then104 ]
  %access_type = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 37
  store i32 3, i32* %access_type, align 4, !tbaa !465
  br label %if.end120

if.else116:                                       ; preds = %if.end98
  %n_tg_bo = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 35
  %26 = load i32, i32* %n_tg_bo, align 4, !tbaa !460
  %inc117 = add nsw i32 %26, 1
  store i32 %inc117, i32* %n_tg_bo, align 4, !tbaa !460
  %bowt = getelementptr inbounds %struct.tginfo_s, %struct.tginfo_s* %tginfo.1, i64 0, i32 3
  %27 = load i32, i32* %bowt, align 8, !tbaa !479
  %call118 = tail call i32 @lm_bg_score(%struct.lm_s* %lm, i16 zeroext %lw2, i16 zeroext %lw3, i32 %w3) #36
  %add119 = add nsw i32 %call118, %27
  br label %if.end120

if.end120:                                        ; preds = %if.else116, %if.end115
  %score.1 = phi i32 [ %score.0, %if.end115 ], [ %add119, %if.else116 ]
  %28 = load %struct.lm_tgcache_entry_t*, %struct.lm_tgcache_entry_t** %tgcache, align 8, !tbaa !413
  %arrayidx125 = getelementptr inbounds %struct.lm_tgcache_entry_t, %struct.lm_tgcache_entry_t* %28, i64 %6, i32 0, i64 0
  store i16 %lw1, i16* %arrayidx125, align 4, !tbaa !40
  %arrayidx130 = getelementptr inbounds %struct.lm_tgcache_entry_t, %struct.lm_tgcache_entry_t* %28, i64 %6, i32 0, i64 1
  store i16 %lw2, i16* %arrayidx130, align 2, !tbaa !40
  %arrayidx135 = getelementptr inbounds %struct.lm_tgcache_entry_t, %struct.lm_tgcache_entry_t* %28, i64 %6, i32 0, i64 2
  store i16 %lw3, i16* %arrayidx135, align 4, !tbaa !40
  %lscr139 = getelementptr inbounds %struct.lm_tgcache_entry_t, %struct.lm_tgcache_entry_t* %28, i64 %6, i32 1
  store i32 %score.1, i32* %lscr139, align 4, !tbaa !484
  br label %cleanup

cleanup:                                          ; preds = %if.end120, %if.then66, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %11, %if.then66 ], [ %score.1, %if.end120 ]
  ret i32 %retval.0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define internal fastcc i32 @find_tg(%struct.tg_t* nocapture readonly %tg, i32 %n, i16 zeroext %w) unnamed_addr #16 {
entry:
  %cmp55 = icmp sgt i32 %n, 16
  br i1 %cmp55, label %while.body, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end14, %entry
  %b.0.lcssa = phi i32 [ 0, %entry ], [ %b.1, %if.end14 ]
  %e.0.lcssa = phi i32 [ %n, %entry ], [ %e.1, %if.end14 ]
  %cmp1552 = icmp slt i32 %b.0.lcssa, %e.0.lcssa
  br i1 %cmp1552, label %land.rhs.preheader, label %cleanup

land.rhs.preheader:                               ; preds = %for.cond.preheader
  %0 = sext i32 %b.0.lcssa to i64
  br label %land.rhs

while.body:                                       ; preds = %entry, %if.end14
  %e.057 = phi i32 [ %e.1, %if.end14 ], [ %n, %entry ]
  %b.056 = phi i32 [ %b.1, %if.end14 ], [ 0, %entry ]
  %add = add nsw i32 %e.057, %b.056
  %shr = ashr i32 %add, 1
  %idxprom = sext i32 %shr to i64
  %wid = getelementptr inbounds %struct.tg_t, %struct.tg_t* %tg, i64 %idxprom, i32 0
  %1 = load i16, i16* %wid, align 2, !tbaa !480
  %cmp2 = icmp ult i16 %1, %w
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %add4 = add nsw i32 %shr, 1
  br label %if.end14

if.else:                                          ; preds = %while.body
  %cmp10 = icmp ugt i16 %1, %w
  br i1 %cmp10, label %if.end14, label %cleanup

if.end14:                                         ; preds = %if.else, %if.then
  %b.1 = phi i32 [ %add4, %if.then ], [ %b.056, %if.else ]
  %e.1 = phi i32 [ %e.057, %if.then ], [ %shr, %if.else ]
  %sub = sub nsw i32 %e.1, %b.1
  %cmp = icmp sgt i32 %sub, 16
  br i1 %cmp, label %while.body, label %for.cond.preheader, !llvm.loop !487

land.rhs:                                         ; preds = %land.rhs.preheader, %for.inc
  %indvars.iv = phi i64 [ %0, %land.rhs.preheader ], [ %indvars.iv.next, %for.inc ]
  %wid19 = getelementptr inbounds %struct.tg_t, %struct.tg_t* %tg, i64 %indvars.iv, i32 0
  %2 = load i16, i16* %wid19, align 2, !tbaa !480
  %cmp22.not = icmp eq i16 %2, %w
  br i1 %cmp22.not, label %cleanup.loopexit.split.loop.exit, label %for.inc

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %e.0.lcssa, %lftr.wideiv
  br i1 %exitcond.not, label %cleanup, label %land.rhs, !llvm.loop !488

cleanup.loopexit.split.loop.exit:                 ; preds = %land.rhs
  %3 = trunc i64 %indvars.iv to i32
  br label %cleanup

cleanup:                                          ; preds = %if.else, %for.inc, %cleanup.loopexit.split.loop.exit, %for.cond.preheader
  %retval.0 = phi i32 [ -1, %for.cond.preheader ], [ %3, %cleanup.loopexit.split.loop.exit ], [ -1, %for.inc ], [ %shr, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nofree noinline nounwind optsize readonly uwtable
define zeroext i16 @lm_wid(%struct.lm_s* nocapture readonly %lm, i8* nocapture readonly %word) local_unnamed_addr #24 {
entry:
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %0 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp8 = icmp sgt i32 %0, 0
  br i1 %cmp8, label %for.body.lr.ph, label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %wordstr = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 4
  %1 = load i8**, i8*** %wordstr, align 8, !tbaa !437
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %indvars.iv
  %2 = load i8*, i8** %arrayidx, align 8, !tbaa !74
  %call = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %2, i8* noundef nonnull dereferenceable(1) %word) #37
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %conv = trunc i64 %indvars.iv to i16
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !489

cleanup:                                          ; preds = %for.inc, %entry, %if.then
  %retval.0 = phi i16 [ %conv, %if.then ], [ -1, %entry ], [ -1, %for.inc ]
  ret i16 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define void @lm_free(%struct.lm_s* %lm) local_unnamed_addr #0 {
entry:
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %wordstr = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 4
  %0 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp16 = icmp sgt i32 %0, 0
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %1 = load i8**, i8*** %wordstr, align 8, !tbaa !437
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %indvars.iv
  %2 = load i8*, i8** %arrayidx, align 8, !tbaa !74
  tail call void @ckd_free(i8* %2) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %3 = load i32, i32* %n_ug, align 8, !tbaa !133
  %4 = sext i32 %3 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %4
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !490

for.end:                                          ; preds = %for.body, %entry
  %membg = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 12
  %5 = bitcast %struct.membg_t** %membg to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !428
  tail call void @ckd_free(i8* %6) #34
  %7 = bitcast i8*** %wordstr to i8**
  %8 = load i8*, i8** %7, align 8, !tbaa !437
  tail call void @ckd_free(i8* %8) #34
  %tgcache = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 27
  %9 = bitcast %struct.lm_tgcache_entry_t** %tgcache to i8**
  %10 = load i8*, i8** %9, align 8, !tbaa !413
  tail call void @ckd_free(i8* %10) #34
  %tg_segbase = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 17
  %11 = bitcast i32** %tg_segbase to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !434
  tail call void @ckd_free(i8* %12) #34
  %tgprob = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 15
  %13 = bitcast %union.lmlog_t** %tgprob to i8**
  %14 = load i8*, i8** %13, align 8, !tbaa !403
  tail call void @ckd_free(i8* %14) #34
  %tgbowt = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 16
  %15 = bitcast %union.lmlog_t** %tgbowt to i8**
  %16 = load i8*, i8** %15, align 8, !tbaa !405
  tail call void @ckd_free(i8* %16) #34
  %bgprob = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 14
  %17 = bitcast %union.lmlog_t** %bgprob to i8**
  %18 = load i8*, i8** %17, align 8, !tbaa !399
  tail call void @ckd_free(i8* %18) #34
  %tginfo = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 13
  %19 = bitcast %struct.tginfo_s*** %tginfo to i8**
  %20 = load i8*, i8** %19, align 8, !tbaa !430
  tail call void @ckd_free(i8* %20) #34
  %ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 9
  %21 = bitcast %struct.ug_t** %ug to i8**
  %22 = load i8*, i8** %21, align 8, !tbaa !34
  tail call void @ckd_free(i8* %22) #34
  %23 = bitcast %struct.lm_s* %lm to i8*
  tail call void @ckd_free(i8* %23) #34
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @unlimit() local_unnamed_addr #0 {
entry:
  %rl = alloca %struct.timespec, align 8
  %0 = bitcast %struct.timespec* %rl to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #38
  %call = call i32 @getrlimit(i32 2, %struct.timespec* nonnull %rl) #34
  %rlim_max = getelementptr inbounds %struct.timespec, %struct.timespec* %rl, i64 0, i32 1
  %1 = load i64, i64* %rlim_max, align 8, !tbaa !491
  %rlim_cur = getelementptr inbounds %struct.timespec, %struct.timespec* %rl, i64 0, i32 0
  store i64 %1, i64* %rlim_cur, align 8, !tbaa !494
  %call1 = call i32 @setrlimit(i32 2, %struct.timespec* nonnull %rl) #34
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #38
  ret void
}

; Function Attrs: nounwind optsize
declare i32 @getrlimit(i32, %struct.timespec*) local_unnamed_addr #25

; Function Attrs: nounwind optsize
declare i32 @setrlimit(i32, %struct.timespec*) local_unnamed_addr #25

; Function Attrs: noinline nounwind optsize uwtable
define %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %g, i8* %ptr) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @__mymalloc__(i32 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.400, i64 0, i64 0), i32 69) #34
  %0 = bitcast i8* %call to %struct.gnode_s*
  %ptr1 = bitcast i8* %call to i8**
  store i8* %ptr, i8** %ptr1, align 8, !tbaa !63
  %next = getelementptr inbounds i8, i8* %call, i64 8
  %1 = bitcast i8* %next to %struct.gnode_s**
  store %struct.gnode_s* %g, %struct.gnode_s** %1, align 8, !tbaa !364
  ret %struct.gnode_s* %0
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.gnode_s* @glist_add_int32(%struct.gnode_s* %g, i32 %val) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @__mymalloc__(i32 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.400, i64 0, i64 0), i32 80) #34
  %0 = bitcast i8* %call to %struct.gnode_s*
  %int32 = bitcast i8* %call to i32*
  store i32 %val, i32* %int32, align 8, !tbaa !63
  %next = getelementptr inbounds i8, i8* %call, i64 8
  %1 = bitcast i8* %next to %struct.gnode_s**
  store %struct.gnode_s* %g, %struct.gnode_s** %1, align 8, !tbaa !364
  ret %struct.gnode_s* %0
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.gnode_s* @glist_add_uint32(%struct.gnode_s* %g, i32 %val) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @__mymalloc__(i32 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.400, i64 0, i64 0), i32 91) #34
  %0 = bitcast i8* %call to %struct.gnode_s*
  %uint32 = bitcast i8* %call to i32*
  store i32 %val, i32* %uint32, align 8, !tbaa !63
  %next = getelementptr inbounds i8, i8* %call, i64 8
  %1 = bitcast i8* %next to %struct.gnode_s**
  store %struct.gnode_s* %g, %struct.gnode_s** %1, align 8, !tbaa !364
  ret %struct.gnode_s* %0
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.gnode_s* @glist_add_float32(%struct.gnode_s* %g, float %val) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @__mymalloc__(i32 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.400, i64 0, i64 0), i32 102) #34
  %0 = bitcast i8* %call to %struct.gnode_s*
  %float32 = bitcast i8* %call to float*
  store float %val, float* %float32, align 8, !tbaa !63
  %next = getelementptr inbounds i8, i8* %call, i64 8
  %1 = bitcast i8* %next to %struct.gnode_s**
  store %struct.gnode_s* %g, %struct.gnode_s** %1, align 8, !tbaa !364
  ret %struct.gnode_s* %0
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.gnode_s* @glist_add_float64(%struct.gnode_s* %g, double %val) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @__mymalloc__(i32 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.400, i64 0, i64 0), i32 113) #34
  %0 = bitcast i8* %call to %struct.gnode_s*
  %float64 = bitcast i8* %call to double*
  store double %val, double* %float64, align 8, !tbaa !63
  %next = getelementptr inbounds i8, i8* %call, i64 8
  %1 = bitcast i8* %next to %struct.gnode_s**
  store %struct.gnode_s* %g, %struct.gnode_s** %1, align 8, !tbaa !364
  ret %struct.gnode_s* %0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @glist_chkdup_ptr(%struct.gnode_s* readonly %g, i8* readnone %val) local_unnamed_addr #16 {
entry:
  %tobool.not4 = icmp eq %struct.gnode_s* %g, null
  br i1 %tobool.not4, label %cleanup, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %gn.05 = phi %struct.gnode_s* [ %1, %for.inc ], [ %g, %entry ]
  %ptr = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.05, i64 0, i32 0, i32 0
  %0 = load i8*, i8** %ptr, align 8, !tbaa !63
  %cmp = icmp eq i8* %0, %val
  br i1 %cmp, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.05, i64 0, i32 1
  %1 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %1, null
  br i1 %tobool.not, label %cleanup, label %for.body, !llvm.loop !495

cleanup:                                          ; preds = %for.body, %for.inc, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %for.inc ], [ 1, %for.body ]
  ret i32 %retval.0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @glist_chkdup_int32(%struct.gnode_s* readonly %g, i32 %val) local_unnamed_addr #16 {
entry:
  %tobool.not4 = icmp eq %struct.gnode_s* %g, null
  br i1 %tobool.not4, label %cleanup, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %gn.05 = phi %struct.gnode_s* [ %1, %for.inc ], [ %g, %entry ]
  %int32 = bitcast %struct.gnode_s* %gn.05 to i32*
  %0 = load i32, i32* %int32, align 8, !tbaa !63
  %cmp = icmp eq i32 %0, %val
  br i1 %cmp, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.05, i64 0, i32 1
  %1 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %1, null
  br i1 %tobool.not, label %cleanup, label %for.body, !llvm.loop !496

cleanup:                                          ; preds = %for.body, %for.inc, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %for.inc ], [ 1, %for.body ]
  ret i32 %retval.0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @glist_chkdup_uint32(%struct.gnode_s* readonly %g, i32 %val) local_unnamed_addr #16 {
entry:
  %tobool.not4 = icmp eq %struct.gnode_s* %g, null
  br i1 %tobool.not4, label %cleanup, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %gn.05 = phi %struct.gnode_s* [ %1, %for.inc ], [ %g, %entry ]
  %uint32 = bitcast %struct.gnode_s* %gn.05 to i32*
  %0 = load i32, i32* %uint32, align 8, !tbaa !63
  %cmp = icmp eq i32 %0, %val
  br i1 %cmp, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.05, i64 0, i32 1
  %1 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %1, null
  br i1 %tobool.not, label %cleanup, label %for.body, !llvm.loop !497

cleanup:                                          ; preds = %for.body, %for.inc, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %for.inc ], [ 1, %for.body ]
  ret i32 %retval.0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @glist_chkdup_float32(%struct.gnode_s* readonly %g, float %val) local_unnamed_addr #16 {
entry:
  %tobool.not4 = icmp eq %struct.gnode_s* %g, null
  br i1 %tobool.not4, label %cleanup, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %gn.05 = phi %struct.gnode_s* [ %1, %for.inc ], [ %g, %entry ]
  %float32 = bitcast %struct.gnode_s* %gn.05 to float*
  %0 = load float, float* %float32, align 8, !tbaa !63
  %cmp = fcmp oeq float %0, %val
  br i1 %cmp, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.05, i64 0, i32 1
  %1 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %1, null
  br i1 %tobool.not, label %cleanup, label %for.body, !llvm.loop !498

cleanup:                                          ; preds = %for.body, %for.inc, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %for.inc ], [ 1, %for.body ]
  ret i32 %retval.0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @glist_chkdup_float64(%struct.gnode_s* readonly %g, double %val) local_unnamed_addr #16 {
entry:
  %tobool.not4 = icmp eq %struct.gnode_s* %g, null
  br i1 %tobool.not4, label %cleanup, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %gn.05 = phi %struct.gnode_s* [ %1, %for.inc ], [ %g, %entry ]
  %float64 = bitcast %struct.gnode_s* %gn.05 to double*
  %0 = load double, double* %float64, align 8, !tbaa !63
  %cmp = fcmp oeq double %0, %val
  br i1 %cmp, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.05, i64 0, i32 1
  %1 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %1, null
  br i1 %tobool.not, label %cleanup, label %for.body, !llvm.loop !499

cleanup:                                          ; preds = %for.body, %for.inc, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %for.inc ], [ 1, %for.body ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define void @glist_apply_ptr(%struct.gnode_s* readonly %g, void (i8*)* nocapture %func) local_unnamed_addr #0 {
entry:
  %tobool.not4 = icmp eq %struct.gnode_s* %g, null
  br i1 %tobool.not4, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %gn.05 = phi %struct.gnode_s* [ %1, %for.body ], [ %g, %entry ]
  %ptr = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.05, i64 0, i32 0, i32 0
  %0 = load i8*, i8** %ptr, align 8, !tbaa !63
  tail call void %func(i8* %0) #34
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.05, i64 0, i32 1
  %1 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %1, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !500

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @glist_apply_int32(%struct.gnode_s* readonly %g, void (i32)* nocapture %func) local_unnamed_addr #0 {
entry:
  %tobool.not4 = icmp eq %struct.gnode_s* %g, null
  br i1 %tobool.not4, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %gn.05 = phi %struct.gnode_s* [ %1, %for.body ], [ %g, %entry ]
  %int32 = bitcast %struct.gnode_s* %gn.05 to i32*
  %0 = load i32, i32* %int32, align 8, !tbaa !63
  tail call void %func(i32 %0) #34
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.05, i64 0, i32 1
  %1 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %1, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !501

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @glist_apply_uint32(%struct.gnode_s* readonly %g, void (i32)* nocapture %func) local_unnamed_addr #0 {
entry:
  %tobool.not4 = icmp eq %struct.gnode_s* %g, null
  br i1 %tobool.not4, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %gn.05 = phi %struct.gnode_s* [ %1, %for.body ], [ %g, %entry ]
  %uint32 = bitcast %struct.gnode_s* %gn.05 to i32*
  %0 = load i32, i32* %uint32, align 8, !tbaa !63
  tail call void %func(i32 %0) #34
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.05, i64 0, i32 1
  %1 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %1, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !502

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @glist_apply_float32(%struct.gnode_s* readonly %g, void (float)* nocapture %func) local_unnamed_addr #0 {
entry:
  %tobool.not4 = icmp eq %struct.gnode_s* %g, null
  br i1 %tobool.not4, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %gn.05 = phi %struct.gnode_s* [ %1, %for.body ], [ %g, %entry ]
  %float32 = bitcast %struct.gnode_s* %gn.05 to float*
  %0 = load float, float* %float32, align 8, !tbaa !63
  tail call void %func(float %0) #34
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.05, i64 0, i32 1
  %1 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %1, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !503

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @glist_apply_float64(%struct.gnode_s* readonly %g, void (double)* nocapture %func) local_unnamed_addr #0 {
entry:
  %tobool.not4 = icmp eq %struct.gnode_s* %g, null
  br i1 %tobool.not4, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %gn.05 = phi %struct.gnode_s* [ %1, %for.body ], [ %g, %entry ]
  %float64 = bitcast %struct.gnode_s* %gn.05 to double*
  %0 = load double, double* %float64, align 8, !tbaa !63
  tail call void %func(double %0) #34
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.05, i64 0, i32 1
  %1 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %1, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !504

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @glist_free(%struct.gnode_s* %g) local_unnamed_addr #0 {
entry:
  %tobool.not4 = icmp eq %struct.gnode_s* %g, null
  br i1 %tobool.not4, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %g.addr.05 = phi %struct.gnode_s* [ %0, %while.body ], [ %g, %entry ]
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %g.addr.05, i64 0, i32 1
  %0 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %1 = bitcast %struct.gnode_s* %g.addr.05 to i8*
  tail call void @__myfree__(i8* nonnull %1, i32 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.400, i64 0, i64 0), i32 232) #34
  %tobool.not = icmp eq %struct.gnode_s* %0, null
  br i1 %tobool.not, label %while.end, label %while.body, !llvm.loop !505

while.end:                                        ; preds = %while.body, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @glist_myfree(%struct.gnode_s* %g, i32 %datasize) local_unnamed_addr #0 {
entry:
  %tobool.not5 = icmp eq %struct.gnode_s* %g, null
  br i1 %tobool.not5, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %g.addr.06 = phi %struct.gnode_s* [ %0, %while.body ], [ %g, %entry ]
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %g.addr.06, i64 0, i32 1
  %0 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %ptr = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %g.addr.06, i64 0, i32 0, i32 0
  %1 = load i8*, i8** %ptr, align 8, !tbaa !63
  tail call void @__myfree__(i8* %1, i32 %datasize, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.400, i64 0, i64 0), i32 244) #34
  %2 = bitcast %struct.gnode_s* %g.addr.06 to i8*
  tail call void @__myfree__(i8* nonnull %2, i32 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.400, i64 0, i64 0), i32 245) #34
  %tobool.not = icmp eq %struct.gnode_s* %0, null
  br i1 %tobool.not, label %while.end, label %while.body, !llvm.loop !506

while.end:                                        ; preds = %while.body, %entry
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @glist_count(%struct.gnode_s* readonly %g) local_unnamed_addr #16 {
entry:
  %tobool.not5 = icmp eq %struct.gnode_s* %g, null
  br i1 %tobool.not5, label %for.end, label %for.inc

for.inc:                                          ; preds = %entry, %for.inc
  %n.07 = phi i32 [ %inc, %for.inc ], [ 0, %entry ]
  %gn.06 = phi %struct.gnode_s* [ %0, %for.inc ], [ %g, %entry ]
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.06, i64 0, i32 1
  %0 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %inc = add nuw nsw i32 %n.07, 1
  %tobool.not = icmp eq %struct.gnode_s* %0, null
  br i1 %tobool.not, label %for.end, label %for.inc, !llvm.loop !507

for.end:                                          ; preds = %for.inc, %entry
  %n.0.lcssa = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  ret i32 %n.0.lcssa
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define %struct.gnode_s* @glist_tail(%struct.gnode_s* readonly %g) local_unnamed_addr #16 {
entry:
  %tobool.not = icmp eq %struct.gnode_s* %g, null
  br i1 %tobool.not, label %cleanup, label %for.cond

for.cond:                                         ; preds = %entry, %for.cond
  %gn.0 = phi %struct.gnode_s* [ %0, %for.cond ], [ %g, %entry ]
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.0, i64 0, i32 1
  %0 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool1.not = icmp eq %struct.gnode_s* %0, null
  br i1 %tobool1.not, label %cleanup, label %for.cond, !llvm.loop !508

cleanup:                                          ; preds = %for.cond, %entry
  %retval.0 = phi %struct.gnode_s* [ null, %entry ], [ %gn.0, %for.cond ]
  ret %struct.gnode_s* %retval.0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define %struct.gnode_s* @glist_reverse(%struct.gnode_s* %g) local_unnamed_addr #13 {
entry:
  %tobool.not9 = icmp eq %struct.gnode_s* %g, null
  br i1 %tobool.not9, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %rev.011 = phi %struct.gnode_s* [ %gn.010, %for.body ], [ null, %entry ]
  %gn.010 = phi %struct.gnode_s* [ %0, %for.body ], [ %g, %entry ]
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.010, i64 0, i32 1
  %0 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  store %struct.gnode_s* %rev.011, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %0, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !509

for.end:                                          ; preds = %for.body, %entry
  %rev.0.lcssa = phi %struct.gnode_s* [ null, %entry ], [ %gn.010, %for.body ]
  ret %struct.gnode_s* %rev.0.lcssa
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.dict2pid_t* @dict2pid_build(%struct.mdef_t* %mdef, %struct.dict_t* nocapture readonly %dict) local_unnamed_addr #0 {
entry:
  %n = alloca i32, align 4
  %0 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i64 254, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.406, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2.407, i64 0, i64 0)) #34
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 56, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 256) #34
  %1 = bitcast i8* %call to %struct.dict2pid_t*
  %n_word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %dict, i64 0, i32 7
  %2 = load i32, i32* %n_word, align 4, !tbaa !58
  %conv = sext i32 %2 to i64
  %call1 = tail call i8* @__ckd_calloc__(i64 %conv, i64 8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 257) #34
  %internal2 = bitcast i8* %call to i32***
  %3 = bitcast i8* %call to i8**
  store i8* %call1, i8** %3, align 8, !tbaa !388
  %n_ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 0
  %4 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %call5 = tail call i8*** @__ckd_calloc_3d__(i32 %4, i32 %4, i32 %4, i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 261) #34
  %ldiph_lc = getelementptr inbounds i8, i8* %call, i64 8
  %5 = bitcast i8* %ldiph_lc to i32****
  %6 = bitcast i8* %ldiph_lc to i8****
  store i8*** %call5, i8**** %6, align 8, !tbaa !387
  %7 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %call8 = tail call i8** @__ckd_calloc_2d__(i32 %7, i32 %7, i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 264) #34
  %single_lc = getelementptr inbounds i8, i8* %call, i64 16
  %8 = bitcast i8* %single_lc to i32***
  %9 = bitcast i8* %single_lc to i8***
  store i8** %call8, i8*** %9, align 8, !tbaa !386
  %n_comstate = getelementptr inbounds i8, i8* %call, i64 48
  %10 = bitcast i8* %n_comstate to i32*
  store i32 0, i32* %10, align 8, !tbaa !94
  %n_comsseq = getelementptr inbounds i8, i8* %call, i64 52
  %11 = bitcast i8* %n_comsseq to i32*
  store i32 0, i32* %11, align 4, !tbaa !54
  %12 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %mul = mul nsw i32 %12, %12
  %n_emit_state = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 2
  %13 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %mul11 = mul nsw i32 %mul, %13
  %call12 = tail call %struct.hash_table_t* @hash_new(i32 %mul11, i32 0) #34
  %14 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %mul15 = mul nsw i32 %14, %14
  %call16 = tail call %struct.hash_table_t* @hash_new(i32 %mul15, i32 0) #34
  store i32 0, i32* %n, align 4, !tbaa !37
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %dict, i64 0, i32 4
  %15 = load i32, i32* %n_word, align 4, !tbaa !58
  %cmp640 = icmp sgt i32 %15, 0
  br i1 %cmp640, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %if.end
  %16 = phi i32 [ %22, %if.end ], [ %15, %entry ]
  %17 = phi i32 [ %add, %if.end ], [ 0, %entry ]
  %indvars.iv668 = phi i64 [ %indvars.iv.next669, %if.end ], [ 0, %entry ]
  %18 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %pronlen19 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %18, i64 %indvars.iv668, i32 2
  %19 = load i32, i32* %pronlen19, align 8, !tbaa !62
  %cmp20 = icmp slt i32 %19, 0
  br i1 %cmp20, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  tail call void @_E__pr_header(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i64 274, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.408, i64 0, i64 0)) #34
  %20 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %word25 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %20, i64 %indvars.iv668, i32 0
  %21 = load i8*, i8** %word25, align 8, !tbaa !510
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.409, i64 0, i64 0), i8* %21, i32 %19) #34
  %.pre = load i32, i32* %n_word, align 4, !tbaa !58
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %22 = phi i32 [ %.pre, %if.then ], [ %16, %for.body ]
  %add = add nsw i32 %17, %19
  store i32 %add, i32* %n, align 4, !tbaa !37
  %indvars.iv.next669 = add nuw nsw i64 %indvars.iv668, 1
  %23 = sext i32 %22 to i64
  %cmp = icmp slt i64 %indvars.iv.next669, %23
  br i1 %cmp, label %for.body, label %for.end.loopexit, !llvm.loop !511

for.end.loopexit:                                 ; preds = %if.end
  %phi.cast = sext i32 %add to i64
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %entry
  %24 = phi i64 [ %phi.cast, %for.end.loopexit ], [ 0, %entry ]
  %call27 = tail call i8* @__ckd_calloc__(i64 %24, i64 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 278) #34
  %25 = bitcast i8* %call27 to i32*
  %26 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %call30 = tail call i8** @__ckd_calloc_2d__(i32 %26, i32 %26, i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 281) #34
  %27 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %call33 = tail call i8** @__ckd_calloc_2d__(i32 %27, i32 %27, i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 282) #34
  %28 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %conv35 = sext i32 %28 to i64
  %call36 = tail call i8* @__ckd_calloc__(i64 %conv35, i64 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 283) #34
  %29 = bitcast i8* %call36 to i32*
  %30 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp39638 = icmp sgt i32 %30, 0
  br i1 %cmp39638, label %for.cond42.preheader, label %for.cond83.preheader

for.cond42.preheader:                             ; preds = %for.end, %for.end77
  %31 = phi i32 [ %45, %for.end77 ], [ %30, %for.end ]
  %indvars.iv666 = phi i64 [ %indvars.iv.next667, %for.end77 ], [ 0, %for.end ]
  %cmp44636 = icmp sgt i32 %31, 0
  br i1 %cmp44636, label %for.cond47.preheader.lr.ph, label %for.end77

for.cond47.preheader.lr.ph:                       ; preds = %for.cond42.preheader
  %arrayidx72606 = getelementptr inbounds i8*, i8** %call33, i64 %indvars.iv666
  %arrayidx72 = bitcast i8** %arrayidx72606 to i32**
  %arrayidx68605 = getelementptr inbounds i8*, i8** %call30, i64 %indvars.iv666
  %arrayidx68 = bitcast i8** %arrayidx68605 to i32**
  %32 = load i32**, i32*** %8, align 8, !tbaa !386
  %arrayidx64 = getelementptr inbounds i32*, i32** %32, i64 %indvars.iv666
  %33 = load i32*, i32** %arrayidx64, align 8, !tbaa !74
  %34 = load i32*, i32** %arrayidx68, align 8, !tbaa !74
  %35 = load i32*, i32** %arrayidx72, align 8, !tbaa !74
  br label %for.cond47.preheader

for.cond83.preheader:                             ; preds = %for.end77, %for.end
  %phone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 8
  %36 = load i32, i32* %n_word, align 4, !tbaa !58
  %cmp85630 = icmp sgt i32 %36, 0
  br i1 %cmp85630, label %for.body87, label %for.end236

for.cond47.preheader:                             ; preds = %for.cond47.preheader.lr.ph, %for.end61
  %37 = phi i32 [ %31, %for.cond47.preheader.lr.ph ], [ %43, %for.end61 ]
  %indvars.iv664 = phi i64 [ 0, %for.cond47.preheader.lr.ph ], [ %indvars.iv.next665, %for.end61 ]
  %cmp49634 = icmp sgt i32 %37, 0
  br i1 %cmp49634, label %for.body51.lr.ph, label %for.end61

for.body51.lr.ph:                                 ; preds = %for.cond47.preheader
  %38 = load i32***, i32**** %5, align 8, !tbaa !387
  %arrayidx54 = getelementptr inbounds i32**, i32*** %38, i64 %indvars.iv666
  %39 = load i32**, i32*** %arrayidx54, align 8, !tbaa !74
  br label %for.body51

for.body51:                                       ; preds = %for.body51.lr.ph, %for.body51
  %indvars.iv662 = phi i64 [ 0, %for.body51.lr.ph ], [ %indvars.iv.next663, %for.body51 ]
  %arrayidx56 = getelementptr inbounds i32*, i32** %39, i64 %indvars.iv662
  %40 = load i32*, i32** %arrayidx56, align 8, !tbaa !74
  %arrayidx58 = getelementptr inbounds i32, i32* %40, i64 %indvars.iv664
  store i32 -1, i32* %arrayidx58, align 4, !tbaa !37
  %indvars.iv.next663 = add nuw nsw i64 %indvars.iv662, 1
  %41 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %42 = sext i32 %41 to i64
  %cmp49 = icmp slt i64 %indvars.iv.next663, %42
  br i1 %cmp49, label %for.body51, label %for.end61, !llvm.loop !512

for.end61:                                        ; preds = %for.body51, %for.cond47.preheader
  %arrayidx66 = getelementptr inbounds i32, i32* %33, i64 %indvars.iv664
  store i32 -1, i32* %arrayidx66, align 4, !tbaa !37
  %arrayidx70 = getelementptr inbounds i32, i32* %34, i64 %indvars.iv664
  store i32 -1, i32* %arrayidx70, align 4, !tbaa !37
  %arrayidx74 = getelementptr inbounds i32, i32* %35, i64 %indvars.iv664
  store i32 -1, i32* %arrayidx74, align 4, !tbaa !37
  %indvars.iv.next665 = add nuw nsw i64 %indvars.iv664, 1
  %43 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %44 = sext i32 %43 to i64
  %cmp44 = icmp slt i64 %indvars.iv.next665, %44
  br i1 %cmp44, label %for.cond47.preheader, label %for.end77, !llvm.loop !513

for.end77:                                        ; preds = %for.end61, %for.cond42.preheader
  %arrayidx79 = getelementptr inbounds i32, i32* %29, i64 %indvars.iv666
  store i32 -1, i32* %arrayidx79, align 4, !tbaa !37
  %indvars.iv.next667 = add nuw nsw i64 %indvars.iv666, 1
  %45 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %46 = sext i32 %45 to i64
  %cmp39 = icmp slt i64 %indvars.iv.next667, %46
  br i1 %cmp39, label %for.cond42.preheader, label %for.cond83.preheader, !llvm.loop !514

for.body87:                                       ; preds = %for.cond83.preheader, %if.end233
  %indvars.iv660 = phi i64 [ %indvars.iv.next661, %if.end233 ], [ 0, %for.cond83.preheader ]
  %internal.0631 = phi i32* [ %add.ptr, %if.end233 ], [ %25, %for.cond83.preheader ]
  %47 = load i32**, i32*** %internal2, align 8, !tbaa !388
  %arrayidx90 = getelementptr inbounds i32*, i32** %47, i64 %indvars.iv660
  store i32* %internal.0631, i32** %arrayidx90, align 8, !tbaa !74
  %48 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %pronlen94 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %48, i64 %indvars.iv660, i32 2
  %49 = load i32, i32* %pronlen94, align 8, !tbaa !62
  %cmp95 = icmp sgt i32 %49, 1
  br i1 %cmp95, label %if.then97, label %if.else

if.then97:                                        ; preds = %for.body87
  %ciphone = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %48, i64 %indvars.iv660, i32 1
  %50 = load i8*, i8** %ciphone, align 8, !tbaa !60
  %51 = load i8, i8* %50, align 1, !tbaa !63
  %conv102 = sext i8 %51 to i32
  %arrayidx107 = getelementptr inbounds i8, i8* %50, i64 1
  %52 = load i8, i8* %arrayidx107, align 1, !tbaa !63
  %conv108 = sext i8 %52 to i32
  %idxprom109 = sext i8 %51 to i64
  %arrayidx110603 = getelementptr inbounds i8*, i8** %call30, i64 %idxprom109
  %arrayidx110 = bitcast i8** %arrayidx110603 to i32**
  %53 = load i32*, i32** %arrayidx110, align 8, !tbaa !74
  %idxprom111 = sext i8 %52 to i64
  %arrayidx112 = getelementptr inbounds i32, i32* %53, i64 %idxprom111
  %54 = load i32, i32* %arrayidx112, align 4, !tbaa !37
  %cmp113 = icmp slt i32 %54, 0
  br i1 %cmp113, label %if.then115, label %if.end143

if.then115:                                       ; preds = %if.then97
  %call116 = tail call fastcc %struct.gnode_s* @ldiph_comsseq(%struct.mdef_t* %mdef, i32 %conv102, i32 %conv108) #36
  %call117 = tail call fastcc i32 @ssidlist2comsseq(%struct.gnode_s* %call116, %struct.mdef_t* %mdef, %struct.dict2pid_t* nonnull %1, %struct.hash_table_t* %call12, %struct.hash_table_t* %call16) #36
  %55 = load i32*, i32** %arrayidx110, align 8, !tbaa !74
  %arrayidx121 = getelementptr inbounds i32, i32* %55, i64 %idxprom111
  store i32 %call117, i32* %arrayidx121, align 4, !tbaa !37
  tail call void @glist_free(%struct.gnode_s* %call116) #34
  %56 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp124622 = icmp sgt i32 %56, 0
  br i1 %cmp124622, label %for.body126, label %if.end143

for.body126:                                      ; preds = %if.then115, %for.body126
  %indvars.iv654 = phi i64 [ %indvars.iv.next655, %for.body126 ], [ 0, %if.then115 ]
  %conv128 = trunc i64 %indvars.iv654 to i8
  %call130 = tail call i32 @mdef_phone_id_nearest(%struct.mdef_t* nonnull %mdef, i8 signext %51, i8 signext %conv128, i8 signext %52, i32 0) #34
  %57 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %idxprom131 = sext i32 %call130 to i64
  %ssid = getelementptr inbounds %struct.phone_t, %struct.phone_t* %57, i64 %idxprom131, i32 0
  %58 = load i32, i32* %ssid, align 4, !tbaa !319
  %59 = load i32***, i32**** %5, align 8, !tbaa !387
  %arrayidx135 = getelementptr inbounds i32**, i32*** %59, i64 %idxprom109
  %60 = load i32**, i32*** %arrayidx135, align 8, !tbaa !74
  %arrayidx137 = getelementptr inbounds i32*, i32** %60, i64 %idxprom111
  %61 = load i32*, i32** %arrayidx137, align 8, !tbaa !74
  %arrayidx139 = getelementptr inbounds i32, i32* %61, i64 %indvars.iv654
  store i32 %58, i32* %arrayidx139, align 4, !tbaa !37
  %indvars.iv.next655 = add nuw nsw i64 %indvars.iv654, 1
  %62 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %63 = sext i32 %62 to i64
  %cmp124 = icmp slt i64 %indvars.iv.next655, %63
  br i1 %cmp124, label %for.body126, label %if.end143, !llvm.loop !515

if.end143:                                        ; preds = %for.body126, %if.then115, %if.then97
  %64 = load i32*, i32** %arrayidx110, align 8, !tbaa !74
  %arrayidx147 = getelementptr inbounds i32, i32* %64, i64 %idxprom111
  %65 = load i32, i32* %arrayidx147, align 4, !tbaa !37
  store i32 %65, i32* %internal.0631, align 4, !tbaa !37
  %sub = add i32 %49, -1
  %cmp150624 = icmp sgt i32 %49, 2
  br i1 %cmp150624, label %for.body152.preheader, label %for.end173

for.body152.preheader:                            ; preds = %if.end143
  %wide.trip.count658 = zext i32 %sub to i64
  br label %for.body152

for.body152:                                      ; preds = %for.body152.preheader, %for.body152
  %indvars.iv656 = phi i64 [ 1, %for.body152.preheader ], [ %indvars.iv.next657, %for.body152 ]
  %r.1627 = phi i32 [ %conv108, %for.body152.preheader ], [ %conv160, %for.body152 ]
  %b.1626 = phi i32 [ %conv102, %for.body152.preheader ], [ %r.1627, %for.body152 ]
  %66 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %ciphone156 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %66, i64 %indvars.iv660, i32 1
  %67 = load i8*, i8** %ciphone156, align 8, !tbaa !60
  %indvars.iv.next657 = add nuw nsw i64 %indvars.iv656, 1
  %arrayidx159 = getelementptr inbounds i8, i8* %67, i64 %indvars.iv.next657
  %68 = load i8, i8* %arrayidx159, align 1, !tbaa !63
  %conv160 = sext i8 %68 to i32
  %conv161 = trunc i32 %r.1627 to i8
  %conv162 = trunc i32 %b.1626 to i8
  %call164 = tail call i32 @mdef_phone_id_nearest(%struct.mdef_t* %mdef, i8 signext %conv161, i8 signext %conv162, i8 signext %68, i32 3) #34
  %69 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %idxprom166 = sext i32 %call164 to i64
  %ssid168 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %69, i64 %idxprom166, i32 0
  %70 = load i32, i32* %ssid168, align 4, !tbaa !319
  %arrayidx170 = getelementptr inbounds i32, i32* %internal.0631, i64 %indvars.iv656
  store i32 %70, i32* %arrayidx170, align 4, !tbaa !37
  %exitcond659.not = icmp eq i64 %indvars.iv.next657, %wide.trip.count658
  br i1 %exitcond659.not, label %for.end173.loopexit, label %for.body152, !llvm.loop !516

for.end173.loopexit:                              ; preds = %for.body152
  %conv160.le = sext i8 %68 to i32
  br label %for.end173

for.end173:                                       ; preds = %for.end173.loopexit, %if.end143
  %b.1.lcssa = phi i32 [ %conv102, %if.end143 ], [ %r.1627, %for.end173.loopexit ]
  %r.1.lcssa = phi i32 [ %conv108, %if.end143 ], [ %conv160.le, %for.end173.loopexit ]
  %idxprom174 = sext i32 %r.1.lcssa to i64
  %arrayidx175604 = getelementptr inbounds i8*, i8** %call33, i64 %idxprom174
  %arrayidx175 = bitcast i8** %arrayidx175604 to i32**
  %71 = load i32*, i32** %arrayidx175, align 8, !tbaa !74
  %idxprom176 = sext i32 %b.1.lcssa to i64
  %arrayidx177 = getelementptr inbounds i32, i32* %71, i64 %idxprom176
  %72 = load i32, i32* %arrayidx177, align 4, !tbaa !37
  %cmp178 = icmp slt i32 %72, 0
  br i1 %cmp178, label %if.then180, label %if.end187

if.then180:                                       ; preds = %for.end173
  %call181 = tail call fastcc %struct.gnode_s* @rdiph_comsseq(%struct.mdef_t* %mdef, i32 %r.1.lcssa, i32 %b.1.lcssa) #36
  %call182 = tail call fastcc i32 @ssidlist2comsseq(%struct.gnode_s* %call181, %struct.mdef_t* %mdef, %struct.dict2pid_t* %1, %struct.hash_table_t* %call12, %struct.hash_table_t* %call16) #36
  %73 = load i32*, i32** %arrayidx175, align 8, !tbaa !74
  %arrayidx186 = getelementptr inbounds i32, i32* %73, i64 %idxprom176
  store i32 %call182, i32* %arrayidx186, align 4, !tbaa !37
  tail call void @glist_free(%struct.gnode_s* %call181) #34
  %.pre670 = load i32*, i32** %arrayidx175, align 8, !tbaa !74
  %arrayidx191.phi.trans.insert = getelementptr inbounds i32, i32* %.pre670, i64 %idxprom176
  %.pre671 = load i32, i32* %arrayidx191.phi.trans.insert, align 4, !tbaa !37
  br label %if.end187

if.end187:                                        ; preds = %if.then180, %for.end173
  %74 = phi i32 [ %.pre671, %if.then180 ], [ %72, %for.end173 ]
  %idxprom193 = sext i32 %sub to i64
  %arrayidx194 = getelementptr inbounds i32, i32* %internal.0631, i64 %idxprom193
  store i32 %74, i32* %arrayidx194, align 4, !tbaa !37
  br label %if.end233

if.else:                                          ; preds = %for.body87
  %cmp195 = icmp eq i32 %49, 1
  br i1 %cmp195, label %if.then197, label %if.end233

if.then197:                                       ; preds = %if.else
  %ciphone201 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %48, i64 %indvars.iv660, i32 1
  %75 = load i8*, i8** %ciphone201, align 8, !tbaa !60
  %76 = load i8, i8* %75, align 1, !tbaa !63
  %conv203 = sext i8 %76 to i32
  %idxprom204 = sext i8 %76 to i64
  %arrayidx205 = getelementptr inbounds i32, i32* %29, i64 %idxprom204
  %77 = load i32, i32* %arrayidx205, align 4, !tbaa !37
  %cmp206 = icmp slt i32 %77, 0
  br i1 %cmp206, label %if.then208, label %if.end228

if.then208:                                       ; preds = %if.then197
  %call209 = tail call fastcc %struct.gnode_s* @single_comsseq(%struct.mdef_t* %mdef, i32 %conv203) #36
  %call210 = tail call fastcc i32 @ssidlist2comsseq(%struct.gnode_s* %call209, %struct.mdef_t* %mdef, %struct.dict2pid_t* nonnull %1, %struct.hash_table_t* %call12, %struct.hash_table_t* %call16) #36
  store i32 %call210, i32* %arrayidx205, align 4, !tbaa !37
  tail call void @glist_free(%struct.gnode_s* %call209) #34
  %78 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp215620 = icmp sgt i32 %78, 0
  br i1 %cmp215620, label %for.body217, label %if.end228

for.body217:                                      ; preds = %if.then208, %for.body217
  %indvars.iv652 = phi i64 [ %indvars.iv.next653, %for.body217 ], [ 0, %if.then208 ]
  %79 = trunc i64 %indvars.iv652 to i32
  %call218 = tail call fastcc %struct.gnode_s* @single_lc_comsseq(%struct.mdef_t* nonnull %mdef, i32 %conv203, i32 %79) #36
  %call219 = tail call fastcc i32 @ssidlist2comsseq(%struct.gnode_s* %call218, %struct.mdef_t* nonnull %mdef, %struct.dict2pid_t* nonnull %1, %struct.hash_table_t* %call12, %struct.hash_table_t* %call16) #36
  %80 = load i32**, i32*** %8, align 8, !tbaa !386
  %arrayidx222 = getelementptr inbounds i32*, i32** %80, i64 %idxprom204
  %81 = load i32*, i32** %arrayidx222, align 8, !tbaa !74
  %arrayidx224 = getelementptr inbounds i32, i32* %81, i64 %indvars.iv652
  store i32 %call219, i32* %arrayidx224, align 4, !tbaa !37
  tail call void @glist_free(%struct.gnode_s* %call218) #34
  %indvars.iv.next653 = add nuw nsw i64 %indvars.iv652, 1
  %82 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %83 = sext i32 %82 to i64
  %cmp215 = icmp slt i64 %indvars.iv.next653, %83
  br i1 %cmp215, label %for.body217, label %if.end228, !llvm.loop !517

if.end228:                                        ; preds = %for.body217, %if.then208, %if.then197
  %84 = load i32, i32* %arrayidx205, align 4, !tbaa !37
  store i32 %84, i32* %internal.0631, align 4, !tbaa !37
  br label %if.end233

if.end233:                                        ; preds = %if.else, %if.end228, %if.end187
  %idx.ext = sext i32 %49 to i64
  %add.ptr = getelementptr inbounds i32, i32* %internal.0631, i64 %idx.ext
  %indvars.iv.next661 = add nuw nsw i64 %indvars.iv660, 1
  %85 = load i32, i32* %n_word, align 4, !tbaa !58
  %86 = sext i32 %85 to i64
  %cmp85 = icmp slt i64 %indvars.iv.next661, %86
  br i1 %cmp85, label %for.body87, label %for.end236, !llvm.loop !518

for.end236:                                       ; preds = %if.end233, %for.cond83.preheader
  tail call void @ckd_free_2d(i8** %call30) #34
  tail call void @ckd_free_2d(i8** %call33) #34
  tail call void @ckd_free(i8* %call36) #34
  %87 = load i32, i32* %10, align 8, !tbaa !94
  %conv238 = sext i32 %87 to i64
  %call239 = tail call i8* @__ckd_calloc__(i64 %conv238, i64 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 357) #34
  %88 = bitcast i8* %call239 to i32*
  %call240 = call %struct.gnode_s* @hash_tolist(%struct.hash_table_t* %call12, i32* nonnull %n) #34
  store i32 0, i32* %n, align 4, !tbaa !37
  %tobool.not618 = icmp eq %struct.gnode_s* %call240, null
  br i1 %tobool.not618, label %for.end259, label %for.body242

for.body242:                                      ; preds = %for.end236, %for.end252
  %gn.0619 = phi %struct.gnode_s* [ %97, %for.end252 ], [ %call240, %for.end236 ]
  %89 = bitcast %struct.gnode_s* %gn.0619 to %struct.hash_entry_s**
  %90 = load %struct.hash_entry_s*, %struct.hash_entry_s** %89, align 8, !tbaa !63
  %91 = bitcast %struct.hash_entry_s* %90 to i16**
  %92 = load i16*, i16** %91, align 8, !tbaa !363
  br label %for.cond243

for.cond243:                                      ; preds = %for.cond243, %for.body242
  %indvars.iv650 = phi i64 [ %indvars.iv.next651, %for.cond243 ], [ 0, %for.body242 ]
  %arrayidx245 = getelementptr inbounds i16, i16* %92, i64 %indvars.iv650
  %93 = load i16, i16* %arrayidx245, align 2, !tbaa !40
  %cmp247 = icmp sgt i16 %93, -1
  %indvars.iv.next651 = add nuw i64 %indvars.iv650, 1
  br i1 %cmp247, label %for.cond243, label %for.end252, !llvm.loop !519

for.end252:                                       ; preds = %for.cond243
  %94 = trunc i64 %indvars.iv650 to i32
  %add253 = add nuw nsw i32 %94, 1
  %val = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %90, i64 0, i32 2
  %95 = load i32, i32* %val, align 4, !tbaa !361
  %idxprom254 = sext i32 %95 to i64
  %arrayidx255 = getelementptr inbounds i32, i32* %88, i64 %idxprom254
  store i32 %add253, i32* %arrayidx255, align 4, !tbaa !37
  %96 = load i32, i32* %n, align 4, !tbaa !37
  %add257 = add nsw i32 %96, %add253
  store i32 %add257, i32* %n, align 4, !tbaa !37
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.0619, i64 0, i32 1
  %97 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %97, null
  br i1 %tobool.not, label %for.end259, label %for.body242, !llvm.loop !520

for.end259:                                       ; preds = %for.end252, %for.end236
  %98 = load i32, i32* %10, align 8, !tbaa !94
  %conv261 = sext i32 %98 to i64
  %call262 = call i8* @__ckd_calloc__(i64 %conv261, i64 8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 370) #34
  %comstate = getelementptr inbounds i8, i8* %call, i64 24
  %99 = bitcast i8* %comstate to i16***
  %100 = bitcast i8* %comstate to i8**
  store i8* %call262, i8** %100, align 8, !tbaa !385
  %101 = load i32, i32* %n, align 4, !tbaa !37
  %conv263 = sext i32 %101 to i64
  %call264 = call i8* @__ckd_calloc__(i64 %conv263, i64 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 371) #34
  %102 = load i32, i32* %10, align 8, !tbaa !94
  %cmp267615 = icmp sgt i32 %102, 0
  br i1 %cmp267615, label %for.body269.preheader, label %for.cond280.preheader

for.body269.preheader:                            ; preds = %for.end259
  %103 = bitcast i8* %call264 to i16*
  %wide.trip.count648 = zext i32 %102 to i64
  br label %for.body269

for.cond280.preheader:                            ; preds = %for.body269, %for.end259
  br i1 %tobool.not618, label %for.end305, label %for.body282

for.body269:                                      ; preds = %for.body269.preheader, %for.body269
  %indvars.iv646 = phi i64 [ 0, %for.body269.preheader ], [ %indvars.iv.next647, %for.body269 ]
  %sen.0616 = phi i16* [ %103, %for.body269.preheader ], [ %add.ptr276, %for.body269 ]
  %104 = load i16**, i16*** %99, align 8, !tbaa !385
  %arrayidx272 = getelementptr inbounds i16*, i16** %104, i64 %indvars.iv646
  store i16* %sen.0616, i16** %arrayidx272, align 8, !tbaa !74
  %arrayidx274 = getelementptr inbounds i32, i32* %88, i64 %indvars.iv646
  %105 = load i32, i32* %arrayidx274, align 4, !tbaa !37
  %idx.ext275 = sext i32 %105 to i64
  %add.ptr276 = getelementptr inbounds i16, i16* %sen.0616, i64 %idx.ext275
  %indvars.iv.next647 = add nuw nsw i64 %indvars.iv646, 1
  %exitcond649.not = icmp eq i64 %indvars.iv.next647, %wide.trip.count648
  br i1 %exitcond649.not, label %for.cond280.preheader, label %for.body269, !llvm.loop !521

for.body282:                                      ; preds = %for.cond280.preheader, %for.end302
  %gn.1614 = phi %struct.gnode_s* [ %115, %for.end302 ], [ %call240, %for.cond280.preheader ]
  %106 = bitcast %struct.gnode_s* %gn.1614 to %struct.hash_entry_s**
  %107 = load %struct.hash_entry_s*, %struct.hash_entry_s** %106, align 8, !tbaa !63
  %key285 = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %107, i64 0, i32 0
  %108 = load i8*, i8** %key285, align 8, !tbaa !363
  %109 = bitcast i8* %108 to i16*
  %val286 = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %107, i64 0, i32 2
  %110 = load i32, i32* %val286, align 4, !tbaa !361
  %idxprom288 = sext i32 %110 to i64
  %arrayidx289 = getelementptr inbounds i32, i32* %88, i64 %idxprom288
  %111 = load i32, i32* %arrayidx289, align 4, !tbaa !37
  %cmp290611 = icmp sgt i32 %111, 0
  br i1 %cmp290611, label %for.body292.lr.ph, label %for.end302

for.body292.lr.ph:                                ; preds = %for.body282
  %112 = load i16**, i16*** %99, align 8, !tbaa !385
  %arrayidx297 = getelementptr inbounds i16*, i16** %112, i64 %idxprom288
  %113 = load i16*, i16** %arrayidx297, align 8, !tbaa !74
  %wide.trip.count = zext i32 %111 to i64
  br label %for.body292

for.body292:                                      ; preds = %for.body292.lr.ph, %for.body292
  %indvars.iv644 = phi i64 [ 0, %for.body292.lr.ph ], [ %indvars.iv.next645, %for.body292 ]
  %arrayidx294 = getelementptr inbounds i16, i16* %109, i64 %indvars.iv644
  %114 = load i16, i16* %arrayidx294, align 2, !tbaa !40
  %arrayidx299 = getelementptr inbounds i16, i16* %113, i64 %indvars.iv644
  store i16 %114, i16* %arrayidx299, align 2, !tbaa !40
  %indvars.iv.next645 = add nuw nsw i64 %indvars.iv644, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next645, %wide.trip.count
  br i1 %exitcond.not, label %for.end302, label %for.body292, !llvm.loop !522

for.end302:                                       ; preds = %for.body292, %for.body282
  call void @ckd_free(i8* %108) #34
  %next304 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.1614, i64 0, i32 1
  %115 = load %struct.gnode_s*, %struct.gnode_s** %next304, align 8, !tbaa !364
  %tobool281.not = icmp eq %struct.gnode_s* %115, null
  br i1 %tobool281.not, label %for.end305, label %for.body282, !llvm.loop !523

for.end305:                                       ; preds = %for.end302, %for.cond280.preheader
  call void @ckd_free(i8* %call239) #34
  call void @glist_free(%struct.gnode_s* %call240) #34
  call void @hash_free(%struct.hash_table_t* %call12) #34
  %116 = load i32, i32* %11, align 4, !tbaa !54
  %conv307 = sext i32 %116 to i64
  %call308 = call i8* @__ckd_calloc__(i64 %conv307, i64 8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 394) #34
  %comsseq = getelementptr inbounds i8, i8* %call, i64 32
  %117 = bitcast i8* %comsseq to i16***
  %118 = bitcast i8* %comsseq to i8**
  store i8* %call308, i8** %118, align 8, !tbaa !384
  %call309 = call %struct.gnode_s* @hash_tolist(%struct.hash_table_t* %call16, i32* nonnull %n) #34
  %tobool311.not609 = icmp eq %struct.gnode_s* %call309, null
  br i1 %tobool311.not609, label %for.end322, label %for.body312

for.body312:                                      ; preds = %for.end305, %for.body312
  %gn.2610 = phi %struct.gnode_s* [ %125, %for.body312 ], [ %call309, %for.end305 ]
  %119 = bitcast %struct.gnode_s* %gn.2610 to %struct.hash_entry_s**
  %120 = load %struct.hash_entry_s*, %struct.hash_entry_s** %119, align 8, !tbaa !63
  %val315 = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %120, i64 0, i32 2
  %121 = load i32, i32* %val315, align 4, !tbaa !361
  %122 = bitcast %struct.hash_entry_s* %120 to i16**
  %123 = load i16*, i16** %122, align 8, !tbaa !363
  %124 = load i16**, i16*** %117, align 8, !tbaa !384
  %idxprom318 = sext i32 %121 to i64
  %arrayidx319 = getelementptr inbounds i16*, i16** %124, i64 %idxprom318
  store i16* %123, i16** %arrayidx319, align 8, !tbaa !74
  %next321 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.2610, i64 0, i32 1
  %125 = load %struct.gnode_s*, %struct.gnode_s** %next321, align 8, !tbaa !364
  %tobool311.not = icmp eq %struct.gnode_s* %125, null
  br i1 %tobool311.not, label %for.end322, label %for.body312, !llvm.loop !524

for.end322:                                       ; preds = %for.body312, %for.end305
  call void @glist_free(%struct.gnode_s* %call309) #34
  call void @hash_free(%struct.hash_table_t* %call16) #34
  %126 = load i32, i32* %10, align 8, !tbaa !94
  %conv324 = sext i32 %126 to i64
  %call325 = call i8* @__ckd_calloc__(i64 %conv324, i64 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 408) #34
  %comwt = getelementptr inbounds i8, i8* %call, i64 40
  %127 = bitcast i8* %comwt to i32**
  %128 = bitcast i8* %comwt to i8**
  store i8* %call325, i8** %128, align 8, !tbaa !383
  %129 = load i32, i32* %10, align 8, !tbaa !94
  %cmp328607 = icmp sgt i32 %129, 0
  br i1 %cmp328607, label %for.body330, label %for.end352

for.body330:                                      ; preds = %for.end322, %for.end343
  %indvars.iv642 = phi i64 [ %indvars.iv.next643, %for.end343 ], [ 0, %for.end322 ]
  %130 = load i16**, i16*** %99, align 8, !tbaa !385
  %arrayidx333 = getelementptr inbounds i16*, i16** %130, i64 %indvars.iv642
  %131 = load i16*, i16** %arrayidx333, align 8, !tbaa !74
  br label %for.cond334

for.cond334:                                      ; preds = %for.cond334, %for.body330
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond334 ], [ 0, %for.body330 ]
  %arrayidx336 = getelementptr inbounds i16, i16* %131, i64 %indvars.iv
  %132 = load i16, i16* %arrayidx336, align 2, !tbaa !40
  %cmp338 = icmp sgt i16 %132, -1
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  br i1 %cmp338, label %for.cond334, label %for.end343, !llvm.loop !525

for.end343:                                       ; preds = %for.cond334
  %133 = trunc i64 %indvars.iv to i32
  %conv344 = sitofp i32 %133 to double
  %call345 = call i32 @logs3(double %conv344) #34
  %sub346 = sub nsw i32 0, %call345
  %134 = load i32*, i32** %127, align 8, !tbaa !383
  %arrayidx349 = getelementptr inbounds i32, i32* %134, i64 %indvars.iv642
  store i32 %sub346, i32* %arrayidx349, align 4, !tbaa !37
  %indvars.iv.next643 = add nuw nsw i64 %indvars.iv642, 1
  %135 = load i32, i32* %10, align 8, !tbaa !94
  %136 = sext i32 %135 to i64
  %cmp328 = icmp slt i64 %indvars.iv.next643, %136
  br i1 %cmp328, label %for.body330, label %for.end352, !llvm.loop !526

for.end352:                                       ; preds = %for.end343, %for.end322
  call void @_E__pr_info_header(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i64 422, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.406, i64 0, i64 0)) #34
  %137 = load i32, i32* %10, align 8, !tbaa !94
  %138 = load i32, i32* %11, align 4, !tbaa !54
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.410, i64 0, i64 0), i32 %137, i32 %138) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret %struct.dict2pid_t* %1
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc %struct.gnode_s* @ldiph_comsseq(%struct.mdef_t* %mdef, i32 %b, i32 %r) unnamed_addr #0 {
entry:
  %n_ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 0
  %conv = trunc i32 %b to i8
  %conv2 = trunc i32 %r to i8
  %phone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 8
  %0 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp35 = icmp sgt i32 %0, 0
  br i1 %cmp35, label %for.body, label %if.then11

for.body:                                         ; preds = %entry, %for.inc
  %g.037 = phi %struct.gnode_s* [ %g.1, %for.inc ], [ null, %entry ]
  %l.036 = phi i32 [ %inc, %for.inc ], [ 0, %entry ]
  %conv1 = trunc i32 %l.036 to i8
  %call = tail call i32 @mdef_phone_id(%struct.mdef_t* nonnull %mdef, i8 signext %conv, i8 signext %conv1, i8 signext %conv2, i32 0) #34
  %cmp3 = icmp sgt i32 %call, -1
  br i1 %cmp3, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %1 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %idxprom34 = zext i32 %call to i64
  %ssid5 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %1, i64 %idxprom34, i32 0
  %2 = load i32, i32* %ssid5, align 4, !tbaa !319
  %call6 = tail call i32 @glist_chkdup_int32(%struct.gnode_s* %g.037, i32 %2) #34
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.then7, label %for.inc

if.then7:                                         ; preds = %if.then
  %call8 = tail call %struct.gnode_s* @glist_add_int32(%struct.gnode_s* %g.037, i32 %2) #34
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then7, %if.then
  %g.1 = phi %struct.gnode_s* [ %g.037, %if.then ], [ %call8, %if.then7 ], [ %g.037, %for.body ]
  %inc = add nuw nsw i32 %l.036, 1
  %3 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp = icmp slt i32 %inc, %3
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !527

for.end:                                          ; preds = %for.inc
  %tobool10.not = icmp eq %struct.gnode_s* %g.1, null
  br i1 %tobool10.not, label %if.then11, label %if.end17

if.then11:                                        ; preds = %entry, %for.end
  %4 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %idxprom13 = sext i32 %b to i64
  %ssid15 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %4, i64 %idxprom13, i32 0
  %5 = load i32, i32* %ssid15, align 4, !tbaa !319
  %call16 = tail call %struct.gnode_s* @glist_add_int32(%struct.gnode_s* null, i32 %5) #34
  br label %if.end17

if.end17:                                         ; preds = %if.then11, %for.end
  %g.2 = phi %struct.gnode_s* [ %g.1, %for.end ], [ %call16, %if.then11 ]
  ret %struct.gnode_s* %g.2
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc i32 @ssidlist2comsseq(%struct.gnode_s* %g, %struct.mdef_t* nocapture readonly %mdef, %struct.dict2pid_t* nocapture %dict2pid, %struct.hash_table_t* %hs, %struct.hash_table_t* %hp) unnamed_addr #0 {
entry:
  %call = tail call i32 @glist_count(%struct.gnode_s* %g) #34
  %cmp = icmp slt i32 %call, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i64 184, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.408, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20.411, i64 0, i64 0), i32 %call) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %n_emit_state = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 2
  %0 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %conv = sext i32 %0 to i64
  %call1 = tail call i8* @__ckd_calloc__(i64 %conv, i64 8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 187) #34
  %1 = bitcast i8* %call1 to i16**
  %add = add nsw i32 %call, 1
  %conv5 = sext i32 %add to i64
  %2 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %cmp3206 = icmp sgt i32 %2, 0
  br i1 %cmp3206, label %for.body, label %for.end

for.body:                                         ; preds = %if.end, %for.body
  %indvars.iv215 = phi i64 [ %indvars.iv.next216, %for.body ], [ 0, %if.end ]
  %call6 = tail call i8* @__ckd_calloc__(i64 %conv5, i64 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 189) #34
  %3 = bitcast i8* %call6 to i16*
  %arrayidx = getelementptr inbounds i16*, i16** %1, i64 %indvars.iv215
  %4 = bitcast i16** %arrayidx to i8**
  store i8* %call6, i8** %4, align 8, !tbaa !74
  store i16 -1, i16* %3, align 2, !tbaa !40
  %indvars.iv.next216 = add nuw nsw i64 %indvars.iv215, 1
  %5 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %6 = sext i32 %5 to i64
  %cmp3 = icmp slt i64 %indvars.iv.next216, %6
  br i1 %cmp3, label %for.body, label %for.end, !llvm.loop !528

for.end:                                          ; preds = %for.body, %if.end
  %.lcssa218.sink = phi i32 [ %2, %if.end ], [ %5, %for.body ]
  %7 = sext i32 %.lcssa218.sink to i64
  %call12 = tail call i8* @__ckd_calloc__(i64 %7, i64 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i32 193) #34
  %8 = bitcast i8* %call12 to i16*
  %sseq = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 9
  %tobool.not204 = icmp eq %struct.gnode_s* %g, null
  %.pre = load i32, i32* %n_emit_state, align 8, !tbaa !315
  br i1 %tobool.not204, label %for.cond68.preheader, label %for.body14.lr.ph

for.body14.lr.ph:                                 ; preds = %for.end
  %cmp17202 = icmp sgt i32 %.pre, 0
  %wide.trip.count = zext i32 %.pre to i64
  br label %for.body14

for.cond68.preheader:                             ; preds = %for.inc66, %for.end
  %n_comstate = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %dict2pid, i64 0, i32 6
  %cmp70198 = icmp sgt i32 %.pre, 0
  br i1 %cmp70198, label %for.cond73.preheader, label %for.end104

for.body14:                                       ; preds = %for.body14.lr.ph, %for.inc66
  %gn.0205 = phi %struct.gnode_s* [ %g, %for.body14.lr.ph ], [ %15, %for.inc66 ]
  br i1 %cmp17202, label %for.body19.lr.ph, label %for.inc66

for.body19.lr.ph:                                 ; preds = %for.body14
  %int32 = bitcast %struct.gnode_s* %gn.0205 to i32*
  %9 = load i32, i32* %int32, align 8, !tbaa !63
  %idxprom20 = sext i32 %9 to i64
  %10 = load i16**, i16*** %sseq, align 8, !tbaa !322
  %arrayidx21 = getelementptr inbounds i16*, i16** %10, i64 %idxprom20
  %11 = load i16*, i16** %arrayidx21, align 8, !tbaa !74
  br label %for.body19

for.body19:                                       ; preds = %for.body19.lr.ph, %for.inc63
  %indvars.iv213 = phi i64 [ 0, %for.body19.lr.ph ], [ %indvars.iv.next214, %for.inc63 ]
  %arrayidx23 = getelementptr inbounds i16, i16* %11, i64 %indvars.iv213
  %12 = load i16, i16* %arrayidx23, align 2, !tbaa !40
  %arrayidx27 = getelementptr inbounds i16*, i16** %1, i64 %indvars.iv213
  %13 = load i16*, i16** %arrayidx27, align 8, !tbaa !74
  br label %for.cond25

for.cond25:                                       ; preds = %for.cond25, %for.body19
  %indvars.iv211 = phi i64 [ %indvars.iv.next212, %for.cond25 ], [ 0, %for.body19 ]
  %arrayidx29 = getelementptr inbounds i16, i16* %13, i64 %indvars.iv211
  %14 = load i16, i16* %arrayidx29, align 2, !tbaa !40
  %cmp31 = icmp slt i16 %14, 0
  %cmp38.not = icmp eq i16 %14, %12
  %or.cond = select i1 %cmp31, i1 true, i1 %cmp38.not
  %indvars.iv.next212 = add nuw i64 %indvars.iv211, 1
  br i1 %or.cond, label %for.end43, label %for.cond25, !llvm.loop !529

for.end43:                                        ; preds = %for.cond25
  br i1 %cmp31, label %if.then51, label %for.inc63

if.then51:                                        ; preds = %for.end43
  %idxprom28.le = and i64 %indvars.iv211, 4294967295
  %arrayidx29.le = getelementptr inbounds i16, i16* %13, i64 %idxprom28.le
  store i16 %12, i16* %arrayidx29.le, align 2, !tbaa !40
  %add59 = add i64 %indvars.iv211, 1
  %idxprom60 = and i64 %add59, 4294967295
  %arrayidx61 = getelementptr inbounds i16, i16* %13, i64 %idxprom60
  store i16 -1, i16* %arrayidx61, align 2, !tbaa !40
  br label %for.inc63

for.inc63:                                        ; preds = %for.end43, %if.then51
  %indvars.iv.next214 = add nuw nsw i64 %indvars.iv213, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next214, %wide.trip.count
  br i1 %exitcond.not, label %for.inc66, label %for.body19, !llvm.loop !530

for.inc66:                                        ; preds = %for.inc63, %for.body14
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.0205, i64 0, i32 1
  %15 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %15, null
  br i1 %tobool.not, label %for.cond68.preheader, label %for.body14, !llvm.loop !531

for.cond73.preheader:                             ; preds = %for.cond68.preheader, %if.end98
  %indvars.iv209 = phi i64 [ %indvars.iv.next210, %if.end98 ], [ 0, %for.cond68.preheader ]
  %arrayidx75 = getelementptr inbounds i16*, i16** %1, i64 %indvars.iv209
  %16 = load i16*, i16** %arrayidx75, align 8, !tbaa !74
  br label %for.cond73

for.cond73:                                       ; preds = %for.cond73, %for.cond73.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond73 ], [ 0, %for.cond73.preheader ]
  %arrayidx77 = getelementptr inbounds i16, i16* %16, i64 %indvars.iv
  %17 = load i16, i16* %arrayidx77, align 2, !tbaa !40
  %cmp79 = icmp sgt i16 %17, -1
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  br i1 %cmp79, label %for.cond73, label %for.end84, !llvm.loop !532

for.end84:                                        ; preds = %for.cond73
  %18 = trunc i64 %indvars.iv to i32
  %19 = bitcast i16* %16 to i8*
  %mul = shl nuw i32 %18, 1
  %20 = load i32, i32* %n_comstate, align 8, !tbaa !94
  %call89 = tail call i32 @hash_enter_bkey(%struct.hash_table_t* %hs, i8* %19, i32 %mul, i32 %20) #34
  %21 = load i32, i32* %n_comstate, align 8, !tbaa !94
  %cmp91 = icmp eq i32 %call89, %21
  br i1 %cmp91, label %if.then93, label %if.else

if.then93:                                        ; preds = %for.end84
  %inc95 = add nsw i32 %call89, 1
  store i32 %inc95, i32* %n_comstate, align 8, !tbaa !94
  br label %if.end98

if.else:                                          ; preds = %for.end84
  %22 = bitcast i16** %arrayidx75 to i8**
  %23 = load i8*, i8** %22, align 8, !tbaa !74
  tail call void @ckd_free(i8* %23) #34
  br label %if.end98

if.end98:                                         ; preds = %if.else, %if.then93
  %conv99 = trunc i32 %call89 to i16
  %arrayidx101 = getelementptr inbounds i16, i16* %8, i64 %indvars.iv209
  store i16 %conv99, i16* %arrayidx101, align 2, !tbaa !40
  %indvars.iv.next210 = add nuw nsw i64 %indvars.iv209, 1
  %24 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %25 = sext i32 %24 to i64
  %cmp70 = icmp slt i64 %indvars.iv.next210, %25
  br i1 %cmp70, label %for.cond73.preheader, label %for.end104, !llvm.loop !533

for.end104:                                       ; preds = %if.end98, %for.cond68.preheader
  tail call void @ckd_free(i8* %call1) #34
  %26 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %mul107 = shl i32 %26, 1
  %n_comsseq = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %dict2pid, i64 0, i32 7
  %27 = load i32, i32* %n_comsseq, align 4, !tbaa !54
  %call109 = tail call i32 @hash_enter_bkey(%struct.hash_table_t* %hp, i8* %call12, i32 %mul107, i32 %27) #34
  %28 = load i32, i32* %n_comsseq, align 4, !tbaa !54
  %cmp111 = icmp eq i32 %call109, %28
  br i1 %cmp111, label %if.then113, label %if.else122

if.then113:                                       ; preds = %for.end104
  %inc115 = add nsw i32 %call109, 1
  store i32 %inc115, i32* %n_comsseq, align 4, !tbaa !54
  %cmp117 = icmp sgt i32 %call109, 32764
  br i1 %cmp117, label %if.then119, label %if.end123

if.then119:                                       ; preds = %if.then113
  tail call void @_E__pr_header(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.405, i64 0, i64 0), i64 231, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.408, i64 0, i64 0)) #34
  %29 = load i32, i32* %n_comsseq, align 4, !tbaa !54
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.21.412, i64 0, i64 0), i32 %29) #34
  br label %if.end123

if.else122:                                       ; preds = %for.end104
  tail call void @ckd_free(i8* %call12) #34
  br label %if.end123

if.end123:                                        ; preds = %if.then113, %if.then119, %if.else122
  ret i32 %call109
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc %struct.gnode_s* @rdiph_comsseq(%struct.mdef_t* %mdef, i32 %b, i32 %l) unnamed_addr #0 {
entry:
  %n_ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 0
  %conv = trunc i32 %b to i8
  %conv1 = trunc i32 %l to i8
  %phone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 8
  %0 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp35 = icmp sgt i32 %0, 0
  br i1 %cmp35, label %for.body, label %if.then11

for.body:                                         ; preds = %entry, %for.inc
  %g.037 = phi %struct.gnode_s* [ %g.1, %for.inc ], [ null, %entry ]
  %r.036 = phi i32 [ %inc, %for.inc ], [ 0, %entry ]
  %conv2 = trunc i32 %r.036 to i8
  %call = tail call i32 @mdef_phone_id(%struct.mdef_t* nonnull %mdef, i8 signext %conv, i8 signext %conv1, i8 signext %conv2, i32 1) #34
  %cmp3 = icmp sgt i32 %call, -1
  br i1 %cmp3, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %1 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %idxprom34 = zext i32 %call to i64
  %ssid5 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %1, i64 %idxprom34, i32 0
  %2 = load i32, i32* %ssid5, align 4, !tbaa !319
  %call6 = tail call i32 @glist_chkdup_int32(%struct.gnode_s* %g.037, i32 %2) #34
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.then7, label %for.inc

if.then7:                                         ; preds = %if.then
  %call8 = tail call %struct.gnode_s* @glist_add_int32(%struct.gnode_s* %g.037, i32 %2) #34
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then7, %if.then
  %g.1 = phi %struct.gnode_s* [ %g.037, %if.then ], [ %call8, %if.then7 ], [ %g.037, %for.body ]
  %inc = add nuw nsw i32 %r.036, 1
  %3 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp = icmp slt i32 %inc, %3
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !534

for.end:                                          ; preds = %for.inc
  %tobool10.not = icmp eq %struct.gnode_s* %g.1, null
  br i1 %tobool10.not, label %if.then11, label %if.end17

if.then11:                                        ; preds = %entry, %for.end
  %4 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %idxprom13 = sext i32 %b to i64
  %ssid15 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %4, i64 %idxprom13, i32 0
  %5 = load i32, i32* %ssid15, align 4, !tbaa !319
  %call16 = tail call %struct.gnode_s* @glist_add_int32(%struct.gnode_s* null, i32 %5) #34
  br label %if.end17

if.end17:                                         ; preds = %if.then11, %for.end
  %g.2 = phi %struct.gnode_s* [ %g.1, %for.end ], [ %call16, %if.then11 ]
  ret %struct.gnode_s* %g.2
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc %struct.gnode_s* @single_comsseq(%struct.mdef_t* %mdef, i32 %b) unnamed_addr #0 {
entry:
  %n_ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 0
  %conv = trunc i32 %b to i8
  %phone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 8
  %0 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp49 = icmp sgt i32 %0, 0
  br i1 %cmp49, label %for.cond1.preheader, label %if.then18

for.cond1.preheader:                              ; preds = %entry, %for.inc14
  %1 = phi i32 [ %5, %for.inc14 ], [ %0, %entry ]
  %g.051 = phi %struct.gnode_s* [ %g.1.lcssa, %for.inc14 ], [ null, %entry ]
  %l.050 = phi i32 [ %inc15, %for.inc14 ], [ 0, %entry ]
  %conv5 = trunc i32 %l.050 to i8
  %cmp346 = icmp sgt i32 %1, 0
  br i1 %cmp346, label %for.body4, label %for.inc14

for.body4:                                        ; preds = %for.cond1.preheader, %for.inc
  %g.148 = phi %struct.gnode_s* [ %g.2, %for.inc ], [ %g.051, %for.cond1.preheader ]
  %r.047 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond1.preheader ]
  %conv6 = trunc i32 %r.047 to i8
  %call = tail call i32 @mdef_phone_id(%struct.mdef_t* nonnull %mdef, i8 signext %conv, i8 signext %conv5, i8 signext %conv6, i32 2) #34
  %cmp7 = icmp sgt i32 %call, -1
  br i1 %cmp7, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body4
  %2 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %idxprom45 = zext i32 %call to i64
  %ssid9 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %2, i64 %idxprom45, i32 0
  %3 = load i32, i32* %ssid9, align 4, !tbaa !319
  %call10 = tail call i32 @glist_chkdup_int32(%struct.gnode_s* %g.148, i32 %3) #34
  %tobool.not = icmp eq i32 %call10, 0
  br i1 %tobool.not, label %if.then11, label %for.inc

if.then11:                                        ; preds = %if.then
  %call12 = tail call %struct.gnode_s* @glist_add_int32(%struct.gnode_s* %g.148, i32 %3) #34
  br label %for.inc

for.inc:                                          ; preds = %for.body4, %if.then11, %if.then
  %g.2 = phi %struct.gnode_s* [ %g.148, %if.then ], [ %call12, %if.then11 ], [ %g.148, %for.body4 ]
  %inc = add nuw nsw i32 %r.047, 1
  %4 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp3 = icmp slt i32 %inc, %4
  br i1 %cmp3, label %for.body4, label %for.inc14, !llvm.loop !535

for.inc14:                                        ; preds = %for.inc, %for.cond1.preheader
  %5 = phi i32 [ %1, %for.cond1.preheader ], [ %4, %for.inc ]
  %g.1.lcssa = phi %struct.gnode_s* [ %g.051, %for.cond1.preheader ], [ %g.2, %for.inc ]
  %inc15 = add nuw nsw i32 %l.050, 1
  %cmp = icmp slt i32 %inc15, %5
  br i1 %cmp, label %for.cond1.preheader, label %for.end16, !llvm.loop !536

for.end16:                                        ; preds = %for.inc14
  %tobool17.not = icmp eq %struct.gnode_s* %g.1.lcssa, null
  br i1 %tobool17.not, label %if.then18, label %if.end24

if.then18:                                        ; preds = %entry, %for.end16
  %6 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %idxprom20 = sext i32 %b to i64
  %ssid22 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %6, i64 %idxprom20, i32 0
  %7 = load i32, i32* %ssid22, align 4, !tbaa !319
  %call23 = tail call %struct.gnode_s* @glist_add_int32(%struct.gnode_s* null, i32 %7) #34
  br label %if.end24

if.end24:                                         ; preds = %if.then18, %for.end16
  %g.3 = phi %struct.gnode_s* [ %g.1.lcssa, %for.end16 ], [ %call23, %if.then18 ]
  ret %struct.gnode_s* %g.3
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc %struct.gnode_s* @single_lc_comsseq(%struct.mdef_t* %mdef, i32 %b, i32 %l) unnamed_addr #0 {
entry:
  %n_ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 0
  %conv = trunc i32 %b to i8
  %conv1 = trunc i32 %l to i8
  %phone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 8
  %0 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp35 = icmp sgt i32 %0, 0
  br i1 %cmp35, label %for.body, label %if.then11

for.body:                                         ; preds = %entry, %for.inc
  %g.037 = phi %struct.gnode_s* [ %g.1, %for.inc ], [ null, %entry ]
  %r.036 = phi i32 [ %inc, %for.inc ], [ 0, %entry ]
  %conv2 = trunc i32 %r.036 to i8
  %call = tail call i32 @mdef_phone_id(%struct.mdef_t* nonnull %mdef, i8 signext %conv, i8 signext %conv1, i8 signext %conv2, i32 2) #34
  %cmp3 = icmp sgt i32 %call, -1
  br i1 %cmp3, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %1 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %idxprom34 = zext i32 %call to i64
  %ssid5 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %1, i64 %idxprom34, i32 0
  %2 = load i32, i32* %ssid5, align 4, !tbaa !319
  %call6 = tail call i32 @glist_chkdup_int32(%struct.gnode_s* %g.037, i32 %2) #34
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.then7, label %for.inc

if.then7:                                         ; preds = %if.then
  %call8 = tail call %struct.gnode_s* @glist_add_int32(%struct.gnode_s* %g.037, i32 %2) #34
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then7, %if.then
  %g.1 = phi %struct.gnode_s* [ %g.037, %if.then ], [ %call8, %if.then7 ], [ %g.037, %for.body ]
  %inc = add nuw nsw i32 %r.036, 1
  %3 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp = icmp slt i32 %inc, %3
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !537

for.end:                                          ; preds = %for.inc
  %tobool10.not = icmp eq %struct.gnode_s* %g.1, null
  br i1 %tobool10.not, label %if.then11, label %if.end17

if.then11:                                        ; preds = %entry, %for.end
  %4 = load %struct.phone_t*, %struct.phone_t** %phone, align 8, !tbaa !318
  %idxprom13 = sext i32 %b to i64
  %ssid15 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %4, i64 %idxprom13, i32 0
  %5 = load i32, i32* %ssid15, align 4, !tbaa !319
  %call16 = tail call %struct.gnode_s* @glist_add_int32(%struct.gnode_s* null, i32 %5) #34
  br label %if.end17

if.end17:                                         ; preds = %if.then11, %for.end
  %g.2 = phi %struct.gnode_s* [ %g.1, %for.end ], [ %call16, %if.then11 ]
  ret %struct.gnode_s* %g.2
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @dict2pid_comsenscr(%struct.dict2pid_t* nocapture readonly %d2p, i32* nocapture readonly %senscr, i32* nocapture %comsenscr) local_unnamed_addr #13 {
entry:
  %n_comstate = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %d2p, i64 0, i32 6
  %0 = load i32, i32* %n_comstate, align 8, !tbaa !94
  %cmp48 = icmp sgt i32 %0, 0
  br i1 %cmp48, label %for.body.lr.ph, label %for.end24

for.body.lr.ph:                                   ; preds = %entry
  %comwt = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %d2p, i64 0, i32 5
  %comstate1 = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %d2p, i64 0, i32 3
  %1 = load i16**, i16*** %comstate1, align 8, !tbaa !385
  %2 = load i32*, i32** %comwt, align 8, !tbaa !383
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.end
  %indvars.iv50 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next51, %for.end ]
  %arrayidx = getelementptr inbounds i16*, i16** %1, i64 %indvars.iv50
  %3 = load i16*, i16** %arrayidx, align 8, !tbaa !74
  %4 = load i16, i16* %3, align 2, !tbaa !40
  %idxprom3 = sext i16 %4 to i64
  %arrayidx4 = getelementptr inbounds i32, i32* %senscr, i64 %idxprom3
  %5 = load i32, i32* %arrayidx4, align 4, !tbaa !37
  %arrayidx744 = getelementptr inbounds i16, i16* %3, i64 1
  %6 = load i16, i16* %arrayidx744, align 2, !tbaa !40
  %cmp845 = icmp slt i16 %6, 0
  br i1 %cmp845, label %for.end, label %if.end

if.end:                                           ; preds = %for.body, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end ], [ 1, %for.body ]
  %7 = phi i16 [ %9, %if.end ], [ %6, %for.body ]
  %best.046 = phi i32 [ %spec.select, %if.end ], [ %5, %for.body ]
  %idxprom1043 = zext i16 %7 to i64
  %arrayidx11 = getelementptr inbounds i32, i32* %senscr, i64 %idxprom1043
  %8 = load i32, i32* %arrayidx11, align 4, !tbaa !37
  %cmp12 = icmp slt i32 %best.046, %8
  %spec.select = select i1 %cmp12, i32 %8, i32 %best.046
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx7 = getelementptr inbounds i16, i16* %3, i64 %indvars.iv.next
  %9 = load i16, i16* %arrayidx7, align 2, !tbaa !40
  %cmp8 = icmp slt i16 %9, 0
  br i1 %cmp8, label %for.end, label %if.end, !llvm.loop !538

for.end:                                          ; preds = %if.end, %for.body
  %best.0.lcssa = phi i32 [ %5, %for.body ], [ %spec.select, %if.end ]
  %arrayidx19 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv50
  %10 = load i32, i32* %arrayidx19, align 4, !tbaa !37
  %add = add nsw i32 %10, %best.0.lcssa
  %arrayidx21 = getelementptr inbounds i32, i32* %comsenscr, i64 %indvars.iv50
  store i32 %add, i32* %arrayidx21, align 4, !tbaa !37
  %indvars.iv.next51 = add nuw nsw i64 %indvars.iv50, 1
  %11 = load i32, i32* %n_comstate, align 8, !tbaa !94
  %12 = sext i32 %11 to i64
  %cmp = icmp slt i64 %indvars.iv.next51, %12
  br i1 %cmp, label %for.body, label %for.end24, !llvm.loop !539

for.end24:                                        ; preds = %for.end, %entry
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @dict2pid_comsseq2sen_active(%struct.dict2pid_t* nocapture readonly %d2p, %struct.mdef_t* nocapture readonly %mdef, i32* nocapture readonly %comssid, i32* nocapture %sen) local_unnamed_addr #13 {
entry:
  %n_comsseq = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %d2p, i64 0, i32 7
  %comsseq = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %d2p, i64 0, i32 4
  %n_emit_state = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 2
  %comstate = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %d2p, i64 0, i32 3
  %0 = load i32, i32* %n_comsseq, align 4, !tbaa !54
  %cmp49 = icmp sgt i32 %0, 0
  br i1 %cmp49, label %for.body, label %for.end26

for.body:                                         ; preds = %entry, %for.inc24
  %1 = phi i32 [ %15, %for.inc24 ], [ %0, %entry ]
  %indvars.iv53 = phi i64 [ %indvars.iv.next54, %for.inc24 ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds i32, i32* %comssid, i64 %indvars.iv53
  %2 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %for.inc24, label %if.then

if.then:                                          ; preds = %for.body
  %3 = load i16**, i16*** %comsseq, align 8, !tbaa !384
  %arrayidx2 = getelementptr inbounds i16*, i16** %3, i64 %indvars.iv53
  %4 = load i16*, i16** %arrayidx2, align 8, !tbaa !74
  %5 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %cmp447 = icmp sgt i32 %5, 0
  br i1 %cmp447, label %for.body5.lr.ph, label %for.inc24

for.body5.lr.ph:                                  ; preds = %if.then
  %6 = load i16**, i16*** %comstate, align 8, !tbaa !385
  br label %for.body5

for.body5:                                        ; preds = %for.body5.lr.ph, %for.inc21
  %7 = phi i32 [ %5, %for.body5.lr.ph ], [ %13, %for.inc21 ]
  %indvars.iv51 = phi i64 [ 0, %for.body5.lr.ph ], [ %indvars.iv.next52, %for.inc21 ]
  %arrayidx7 = getelementptr inbounds i16, i16* %4, i64 %indvars.iv51
  %8 = load i16, i16* %arrayidx7, align 2, !tbaa !40
  %idxprom8 = sext i16 %8 to i64
  %arrayidx9 = getelementptr inbounds i16*, i16** %6, i64 %idxprom8
  %9 = load i16*, i16** %arrayidx9, align 8, !tbaa !74
  %10 = load i16, i16* %9, align 2, !tbaa !40
  %cmp1445 = icmp sgt i16 %10, -1
  br i1 %cmp1445, label %for.body16, label %for.inc21

for.body16:                                       ; preds = %for.body5, %for.body16
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body16 ], [ 0, %for.body5 ]
  %11 = phi i16 [ %12, %for.body16 ], [ %10, %for.body5 ]
  %idxprom1943 = zext i16 %11 to i64
  %arrayidx20 = getelementptr inbounds i32, i32* %sen, i64 %idxprom1943
  store i32 1, i32* %arrayidx20, align 4, !tbaa !37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx12 = getelementptr inbounds i16, i16* %9, i64 %indvars.iv.next
  %12 = load i16, i16* %arrayidx12, align 2, !tbaa !40
  %cmp14 = icmp sgt i16 %12, -1
  br i1 %cmp14, label %for.body16, label %for.inc21.loopexit, !llvm.loop !540

for.inc21.loopexit:                               ; preds = %for.body16
  %.pre = load i32, i32* %n_emit_state, align 8, !tbaa !315
  br label %for.inc21

for.inc21:                                        ; preds = %for.inc21.loopexit, %for.body5
  %13 = phi i32 [ %.pre, %for.inc21.loopexit ], [ %7, %for.body5 ]
  %indvars.iv.next52 = add nuw nsw i64 %indvars.iv51, 1
  %14 = sext i32 %13 to i64
  %cmp4 = icmp slt i64 %indvars.iv.next52, %14
  br i1 %cmp4, label %for.body5, label %for.inc24.loopexit, !llvm.loop !541

for.inc24.loopexit:                               ; preds = %for.inc21
  %.pre55 = load i32, i32* %n_comsseq, align 4, !tbaa !54
  br label %for.inc24

for.inc24:                                        ; preds = %for.inc24.loopexit, %if.then, %for.body
  %15 = phi i32 [ %.pre55, %for.inc24.loopexit ], [ %1, %if.then ], [ %1, %for.body ]
  %indvars.iv.next54 = add nuw nsw i64 %indvars.iv53, 1
  %16 = sext i32 %15 to i64
  %cmp = icmp slt i64 %indvars.iv.next54, %16
  br i1 %cmp, label %for.body, label %for.end26, !llvm.loop !542

for.end26:                                        ; preds = %for.inc24, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @dict2pid_dump(%struct._IO_FILE* %fp, %struct.dict2pid_t* nocapture readonly %d2p, %struct.mdef_t* %mdef, %struct.dict_t* nocapture readonly %dict) local_unnamed_addr #0 {
entry:
  %0 = tail call i64 @fwrite(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.6.413, i64 0, i64 0), i64 51, i64 1, %struct._IO_FILE* %fp)
  %n_word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %dict, i64 0, i32 7
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %dict, i64 0, i32 4
  %internal = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %d2p, i64 0, i32 0
  %1 = load i32, i32* %n_word, align 4, !tbaa !58
  %cmp324 = icmp sgt i32 %1, 0
  br i1 %cmp324, label %for.body, label %for.end18

for.body:                                         ; preds = %entry, %for.end
  %indvars.iv348 = phi i64 [ %indvars.iv.next349, %for.end ], [ 0, %entry ]
  %2 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %word1 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %2, i64 %indvars.iv348, i32 0
  %3 = load i8*, i8** %word1, align 8, !tbaa !510
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.414, i64 0, i64 0), i8* %3) #36
  %4 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %pronlen6 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %4, i64 %indvars.iv348, i32 2
  %5 = load i32, i32* %pronlen6, align 8, !tbaa !62
  %cmp8322 = icmp sgt i32 %5, 0
  br i1 %cmp8322, label %for.body9.preheader, label %for.end

for.body9.preheader:                              ; preds = %for.body
  %wide.trip.count = zext i32 %5 to i64
  br label %for.body9

for.body9:                                        ; preds = %for.body9.preheader, %for.body9
  %indvars.iv346 = phi i64 [ 0, %for.body9.preheader ], [ %indvars.iv.next347, %for.body9 ]
  %6 = load i32**, i32*** %internal, align 8, !tbaa !388
  %arrayidx11 = getelementptr inbounds i32*, i32** %6, i64 %indvars.iv348
  %7 = load i32*, i32** %arrayidx11, align 8, !tbaa !74
  %arrayidx13 = getelementptr inbounds i32, i32* %7, i64 %indvars.iv346
  %8 = load i32, i32* %arrayidx13, align 4, !tbaa !37
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.415, i64 0, i64 0), i32 %8) #36
  %indvars.iv.next347 = add nuw nsw i64 %indvars.iv346, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next347, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body9, !llvm.loop !543

for.end:                                          ; preds = %for.body9, %for.body
  %fputc294 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  %indvars.iv.next349 = add nuw nsw i64 %indvars.iv348, 1
  %9 = load i32, i32* %n_word, align 4, !tbaa !58
  %10 = sext i32 %9 to i64
  %cmp = icmp slt i64 %indvars.iv.next349, %10
  br i1 %cmp, label %for.body, label %for.end18, !llvm.loop !544

for.end18:                                        ; preds = %for.end, %entry
  %11 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.416, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %fp)
  %12 = tail call i64 @fwrite(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.417, i64 0, i64 0), i64 24, i64 1, %struct._IO_FILE* %fp)
  %n_ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 0
  %ldiph_lc = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %d2p, i64 0, i32 1
  %13 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp22320 = icmp sgt i32 %13, 0
  br i1 %cmp22320, label %for.cond24.preheader, label %for.end60

for.cond24.preheader:                             ; preds = %for.end18, %for.inc58
  %14 = phi i32 [ %35, %for.inc58 ], [ %13, %for.end18 ]
  %indvars.iv344 = phi i64 [ %indvars.iv.next345, %for.inc58 ], [ 0, %for.end18 ]
  %conv = trunc i64 %indvars.iv344 to i8
  %cmp26318 = icmp sgt i32 %14, 0
  br i1 %cmp26318, label %for.cond28.preheader, label %for.inc58

for.cond28.preheader:                             ; preds = %for.cond24.preheader, %for.inc55
  %15 = phi i32 [ %32, %for.inc55 ], [ %14, %for.cond24.preheader ]
  %16 = phi i32 [ %33, %for.inc55 ], [ %14, %for.cond24.preheader ]
  %indvars.iv342 = phi i64 [ %indvars.iv.next343, %for.inc55 ], [ 0, %for.cond24.preheader ]
  %conv40 = trunc i64 %indvars.iv342 to i8
  %cmp30315 = icmp sgt i32 %16, 0
  br i1 %cmp30315, label %for.body31, label %for.inc55

for.body31:                                       ; preds = %for.cond28.preheader, %for.inc52
  %17 = phi i32 [ %28, %for.inc52 ], [ %15, %for.cond28.preheader ]
  %18 = phi i32 [ %29, %for.inc52 ], [ %16, %for.cond28.preheader ]
  %19 = phi i32 [ %30, %for.inc52 ], [ %16, %for.cond28.preheader ]
  %indvars.iv340 = phi i64 [ %indvars.iv.next341, %for.inc52 ], [ 0, %for.cond28.preheader ]
  %20 = load i32***, i32**** %ldiph_lc, align 8, !tbaa !387
  %arrayidx33 = getelementptr inbounds i32**, i32*** %20, i64 %indvars.iv344
  %21 = load i32**, i32*** %arrayidx33, align 8, !tbaa !74
  %arrayidx35 = getelementptr inbounds i32*, i32** %21, i64 %indvars.iv342
  %22 = load i32*, i32** %arrayidx35, align 8, !tbaa !74
  %arrayidx37 = getelementptr inbounds i32, i32* %22, i64 %indvars.iv340
  %23 = load i32, i32* %arrayidx37, align 4, !tbaa !37
  %cmp38 = icmp sgt i32 %23, -1
  br i1 %cmp38, label %if.then, label %for.inc52

if.then:                                          ; preds = %for.body31
  %call39 = tail call i8* @mdef_ciphone_str(%struct.mdef_t* nonnull %mdef, i8 signext %conv) #34
  %call41 = tail call i8* @mdef_ciphone_str(%struct.mdef_t* nonnull %mdef, i8 signext %conv40) #34
  %conv42 = trunc i64 %indvars.iv340 to i8
  %call43 = tail call i8* @mdef_ciphone_str(%struct.mdef_t* nonnull %mdef, i8 signext %conv42) #34
  %24 = load i32***, i32**** %ldiph_lc, align 8, !tbaa !387
  %arrayidx46 = getelementptr inbounds i32**, i32*** %24, i64 %indvars.iv344
  %25 = load i32**, i32*** %arrayidx46, align 8, !tbaa !74
  %arrayidx48 = getelementptr inbounds i32*, i32** %25, i64 %indvars.iv342
  %26 = load i32*, i32** %arrayidx48, align 8, !tbaa !74
  %arrayidx50 = getelementptr inbounds i32, i32* %26, i64 %indvars.iv340
  %27 = load i32, i32* %arrayidx50, align 4, !tbaa !37
  %call51 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12.418, i64 0, i64 0), i8* %call39, i8* %call41, i8* %call43, i32 %27) #36
  %.pre = load i32, i32* %n_ciphone, align 8, !tbaa !57
  br label %for.inc52

for.inc52:                                        ; preds = %for.body31, %if.then
  %28 = phi i32 [ %17, %for.body31 ], [ %.pre, %if.then ]
  %29 = phi i32 [ %18, %for.body31 ], [ %.pre, %if.then ]
  %30 = phi i32 [ %19, %for.body31 ], [ %.pre, %if.then ]
  %indvars.iv.next341 = add nuw nsw i64 %indvars.iv340, 1
  %31 = sext i32 %30 to i64
  %cmp30 = icmp slt i64 %indvars.iv.next341, %31
  br i1 %cmp30, label %for.body31, label %for.inc55, !llvm.loop !545

for.inc55:                                        ; preds = %for.inc52, %for.cond28.preheader
  %32 = phi i32 [ %15, %for.cond28.preheader ], [ %28, %for.inc52 ]
  %33 = phi i32 [ %16, %for.cond28.preheader ], [ %29, %for.inc52 ]
  %indvars.iv.next343 = add nuw nsw i64 %indvars.iv342, 1
  %34 = sext i32 %33 to i64
  %cmp26 = icmp slt i64 %indvars.iv.next343, %34
  br i1 %cmp26, label %for.cond28.preheader, label %for.inc58, !llvm.loop !546

for.inc58:                                        ; preds = %for.inc55, %for.cond24.preheader
  %35 = phi i32 [ %14, %for.cond24.preheader ], [ %32, %for.inc55 ]
  %indvars.iv.next345 = add nuw nsw i64 %indvars.iv344, 1
  %36 = sext i32 %35 to i64
  %cmp22 = icmp slt i64 %indvars.iv.next345, %36
  br i1 %cmp22, label %for.cond24.preheader, label %for.end60, !llvm.loop !547

for.end60:                                        ; preds = %for.inc58, %for.end18
  %37 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.416, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %fp)
  %38 = tail call i64 @fwrite(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.419, i64 0, i64 0), i64 26, i64 1, %struct._IO_FILE* %fp)
  %single_lc = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %d2p, i64 0, i32 2
  %39 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %cmp65313 = icmp sgt i32 %39, 0
  br i1 %cmp65313, label %for.cond68.preheader, label %for.end96

for.cond68.preheader:                             ; preds = %for.end60, %for.inc94
  %40 = phi i32 [ %52, %for.inc94 ], [ %39, %for.end60 ]
  %indvars.iv338 = phi i64 [ %indvars.iv.next339, %for.inc94 ], [ 0, %for.end60 ]
  %conv80 = trunc i64 %indvars.iv338 to i8
  %cmp70310 = icmp sgt i32 %40, 0
  br i1 %cmp70310, label %for.body72, label %for.inc94

for.body72:                                       ; preds = %for.cond68.preheader, %for.inc91
  %41 = phi i32 [ %49, %for.inc91 ], [ %40, %for.cond68.preheader ]
  %42 = phi i32 [ %50, %for.inc91 ], [ %40, %for.cond68.preheader ]
  %indvars.iv336 = phi i64 [ %indvars.iv.next337, %for.inc91 ], [ 0, %for.cond68.preheader ]
  %43 = load i32**, i32*** %single_lc, align 8, !tbaa !386
  %arrayidx74 = getelementptr inbounds i32*, i32** %43, i64 %indvars.iv338
  %44 = load i32*, i32** %arrayidx74, align 8, !tbaa !74
  %arrayidx76 = getelementptr inbounds i32, i32* %44, i64 %indvars.iv336
  %45 = load i32, i32* %arrayidx76, align 4, !tbaa !37
  %cmp77 = icmp sgt i32 %45, -1
  br i1 %cmp77, label %if.then79, label %for.inc91

if.then79:                                        ; preds = %for.body72
  %call81 = tail call i8* @mdef_ciphone_str(%struct.mdef_t* nonnull %mdef, i8 signext %conv80) #34
  %conv82 = trunc i64 %indvars.iv336 to i8
  %call83 = tail call i8* @mdef_ciphone_str(%struct.mdef_t* nonnull %mdef, i8 signext %conv82) #34
  %46 = load i32**, i32*** %single_lc, align 8, !tbaa !386
  %arrayidx86 = getelementptr inbounds i32*, i32** %46, i64 %indvars.iv338
  %47 = load i32*, i32** %arrayidx86, align 8, !tbaa !74
  %arrayidx88 = getelementptr inbounds i32, i32* %47, i64 %indvars.iv336
  %48 = load i32, i32* %arrayidx88, align 4, !tbaa !37
  %call89 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14.420, i64 0, i64 0), i8* %call81, i8* %call83, i32 %48) #36
  %.pre350 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  br label %for.inc91

for.inc91:                                        ; preds = %for.body72, %if.then79
  %49 = phi i32 [ %41, %for.body72 ], [ %.pre350, %if.then79 ]
  %50 = phi i32 [ %42, %for.body72 ], [ %.pre350, %if.then79 ]
  %indvars.iv.next337 = add nuw nsw i64 %indvars.iv336, 1
  %51 = sext i32 %50 to i64
  %cmp70 = icmp slt i64 %indvars.iv.next337, %51
  br i1 %cmp70, label %for.body72, label %for.inc94, !llvm.loop !548

for.inc94:                                        ; preds = %for.inc91, %for.cond68.preheader
  %52 = phi i32 [ %40, %for.cond68.preheader ], [ %49, %for.inc91 ]
  %indvars.iv.next339 = add nuw nsw i64 %indvars.iv338, 1
  %53 = sext i32 %52 to i64
  %cmp65 = icmp slt i64 %indvars.iv.next339, %53
  br i1 %cmp65, label %for.cond68.preheader, label %for.end96, !llvm.loop !549

for.end96:                                        ; preds = %for.inc94, %for.end60
  %54 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.416, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %fp)
  %n_sseq = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 10
  %55 = load i32, i32* %n_sseq, align 8, !tbaa !52
  %call98 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15.421, i64 0, i64 0), i32 %55) #36
  %n_emit_state = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 2
  %sseq = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %mdef, i64 0, i32 9
  %56 = load i32, i32* %n_sseq, align 8, !tbaa !52
  %cmp101308 = icmp sgt i32 %56, 0
  br i1 %cmp101308, label %for.body103, label %for.end121

for.body103:                                      ; preds = %for.end96, %for.end117
  %indvars.iv334 = phi i64 [ %indvars.iv.next335, %for.end117 ], [ 0, %for.end96 ]
  %57 = trunc i64 %indvars.iv334 to i32
  %call104 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.422, i64 0, i64 0), i32 %57) #36
  %58 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %cmp106306 = icmp sgt i32 %58, 0
  br i1 %cmp106306, label %for.body108, label %for.end117

for.body108:                                      ; preds = %for.body103, %for.body108
  %indvars.iv332 = phi i64 [ %indvars.iv.next333, %for.body108 ], [ 0, %for.body103 ]
  %59 = load i16**, i16*** %sseq, align 8, !tbaa !322
  %arrayidx110 = getelementptr inbounds i16*, i16** %59, i64 %indvars.iv334
  %60 = load i16*, i16** %arrayidx110, align 8, !tbaa !74
  %arrayidx112 = getelementptr inbounds i16, i16* %60, i64 %indvars.iv332
  %61 = load i16, i16* %arrayidx112, align 2, !tbaa !40
  %conv113 = sext i16 %61 to i32
  %call114 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.415, i64 0, i64 0), i32 %conv113) #36
  %indvars.iv.next333 = add nuw nsw i64 %indvars.iv332, 1
  %62 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %63 = sext i32 %62 to i64
  %cmp106 = icmp slt i64 %indvars.iv.next333, %63
  br i1 %cmp106, label %for.body108, label %for.end117, !llvm.loop !550

for.end117:                                       ; preds = %for.body108, %for.body103
  %fputc293 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  %indvars.iv.next335 = add nuw nsw i64 %indvars.iv334, 1
  %64 = load i32, i32* %n_sseq, align 8, !tbaa !52
  %65 = sext i32 %64 to i64
  %cmp101 = icmp slt i64 %indvars.iv.next335, %65
  br i1 %cmp101, label %for.body103, label %for.end121, !llvm.loop !551

for.end121:                                       ; preds = %for.end117, %for.end96
  %66 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.416, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %fp)
  %n_comsseq = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %d2p, i64 0, i32 7
  %67 = load i32, i32* %n_comsseq, align 4, !tbaa !54
  %call123 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17.423, i64 0, i64 0), i32 %67) #36
  %comsseq = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %d2p, i64 0, i32 4
  %68 = load i32, i32* %n_comsseq, align 4, !tbaa !54
  %cmp126304 = icmp sgt i32 %68, 0
  br i1 %cmp126304, label %for.body128, label %for.end147

for.body128:                                      ; preds = %for.end121, %for.end143
  %indvars.iv330 = phi i64 [ %indvars.iv.next331, %for.end143 ], [ 0, %for.end121 ]
  %69 = trunc i64 %indvars.iv330 to i32
  %call129 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.422, i64 0, i64 0), i32 %69) #36
  %70 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %cmp132302 = icmp sgt i32 %70, 0
  br i1 %cmp132302, label %for.body134, label %for.end143

for.body134:                                      ; preds = %for.body128, %for.body134
  %indvars.iv328 = phi i64 [ %indvars.iv.next329, %for.body134 ], [ 0, %for.body128 ]
  %71 = load i16**, i16*** %comsseq, align 8, !tbaa !384
  %arrayidx136 = getelementptr inbounds i16*, i16** %71, i64 %indvars.iv330
  %72 = load i16*, i16** %arrayidx136, align 8, !tbaa !74
  %arrayidx138 = getelementptr inbounds i16, i16* %72, i64 %indvars.iv328
  %73 = load i16, i16* %arrayidx138, align 2, !tbaa !40
  %conv139 = sext i16 %73 to i32
  %call140 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.415, i64 0, i64 0), i32 %conv139) #36
  %indvars.iv.next329 = add nuw nsw i64 %indvars.iv328, 1
  %74 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %75 = sext i32 %74 to i64
  %cmp132 = icmp slt i64 %indvars.iv.next329, %75
  br i1 %cmp132, label %for.body134, label %for.end143, !llvm.loop !552

for.end143:                                       ; preds = %for.body134, %for.body128
  %fputc292 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  %indvars.iv.next331 = add nuw nsw i64 %indvars.iv330, 1
  %76 = load i32, i32* %n_comsseq, align 4, !tbaa !54
  %77 = sext i32 %76 to i64
  %cmp126 = icmp slt i64 %indvars.iv.next331, %77
  br i1 %cmp126, label %for.body128, label %for.end147, !llvm.loop !553

for.end147:                                       ; preds = %for.end143, %for.end121
  %78 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.416, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %fp)
  %n_comstate = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %d2p, i64 0, i32 6
  %79 = load i32, i32* %n_comstate, align 8, !tbaa !94
  %call149 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18.424, i64 0, i64 0), i32 %79) #36
  %comstate = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %d2p, i64 0, i32 3
  %80 = load i32, i32* %n_comstate, align 8, !tbaa !94
  %cmp152300 = icmp sgt i32 %80, 0
  br i1 %cmp152300, label %for.body154, label %for.end178

for.body154:                                      ; preds = %for.end147, %for.end174
  %indvars.iv326 = phi i64 [ %indvars.iv.next327, %for.end174 ], [ 0, %for.end147 ]
  %81 = trunc i64 %indvars.iv326 to i32
  %call155 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.422, i64 0, i64 0), i32 %81) #36
  %82 = load i16**, i16*** %comstate, align 8, !tbaa !385
  %arrayidx158296 = getelementptr inbounds i16*, i16** %82, i64 %indvars.iv326
  %83 = load i16*, i16** %arrayidx158296, align 8, !tbaa !74
  %84 = load i16, i16* %83, align 2, !tbaa !40
  %cmp162298 = icmp sgt i16 %84, -1
  br i1 %cmp162298, label %for.body164, label %for.end174

for.body164:                                      ; preds = %for.body154, %for.body164
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body164 ], [ 0, %for.body154 ]
  %85 = phi i16 [ %88, %for.body164 ], [ %84, %for.body154 ]
  %conv161295 = zext i16 %85 to i32
  %call171 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.415, i64 0, i64 0), i32 %conv161295) #36
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %86 = load i16**, i16*** %comstate, align 8, !tbaa !385
  %arrayidx158 = getelementptr inbounds i16*, i16** %86, i64 %indvars.iv326
  %87 = load i16*, i16** %arrayidx158, align 8, !tbaa !74
  %arrayidx160 = getelementptr inbounds i16, i16* %87, i64 %indvars.iv.next
  %88 = load i16, i16* %arrayidx160, align 2, !tbaa !40
  %cmp162 = icmp sgt i16 %88, -1
  br i1 %cmp162, label %for.body164, label %for.end174, !llvm.loop !554

for.end174:                                       ; preds = %for.body164, %for.body154
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  %indvars.iv.next327 = add nuw nsw i64 %indvars.iv326, 1
  %89 = load i32, i32* %n_comstate, align 8, !tbaa !94
  %90 = sext i32 %89 to i64
  %cmp152 = icmp slt i64 %indvars.iv.next327, %90
  br i1 %cmp152, label %for.body154, label %for.end178, !llvm.loop !555

for.end178:                                       ; preds = %for.end174, %for.end147
  %91 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.416, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %fp)
  %92 = tail call i64 @fwrite(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19.425, i64 0, i64 0), i64 6, i64 1, %struct._IO_FILE* %fp)
  %call181 = tail call i32 @fflush(%struct._IO_FILE* %fp) #36
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias i8* @__ckd_calloc__(i64 %n_elem, i64 %elem_size, i8* %caller_file, i32 %caller_line) local_unnamed_addr #0 {
entry:
  %call = tail call noalias align 16 i8* @calloc(i64 %n_elem, i64 %elem_size) #34
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.428, i64 0, i64 0), i64 95, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.429, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.430, i64 0, i64 0), i64 %n_elem, i64 %elem_size, i8* %caller_file, i32 %caller_line) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i8* %call
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias i8* @__ckd_malloc__(i64 %size, i8* %caller_file, i32 %caller_line) local_unnamed_addr #0 {
entry:
  %call = tail call noalias align 16 i8* @malloc(i64 %size) #34
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.428, i64 0, i64 0), i64 109, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.429, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.433, i64 0, i64 0), i64 %size, i8* %caller_file, i32 %caller_line) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i8* %call
}

; Function Attrs: inaccessiblememonly mustprogress nofree nounwind optsize willreturn
declare noalias noundef align 16 i8* @malloc(i64 noundef) local_unnamed_addr #26

; Function Attrs: noinline nounwind optsize uwtable
define noalias i8* @__ckd_realloc__(i8* nocapture %ptr, i64 %new_size, i8* %caller_file, i32 %caller_line) local_unnamed_addr #0 {
entry:
  %call = tail call align 16 i8* @realloc(i8* %ptr, i64 %new_size) #34
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.428, i64 0, i64 0), i64 121, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.429, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4.436, i64 0, i64 0), i64 %new_size, i8* %caller_file, i32 %caller_line) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i8* %call
}

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind optsize willreturn
declare noalias noundef align 16 i8* @realloc(i8* nocapture, i64 noundef) local_unnamed_addr #11

; Function Attrs: noinline nounwind optsize uwtable
define i8* @__ckd_salloc__(i8* nocapture readonly %orig, i8* %caller_file, i32 %caller_line) local_unnamed_addr #0 {
entry:
  %call = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %orig) #37
  %conv = shl i64 %call, 32
  %sext = add i64 %conv, 4294967296
  %conv1 = ashr exact i64 %sext, 32
  %call2 = tail call i8* @__ckd_malloc__(i64 %conv1, i8* %caller_file, i32 %caller_line) #36
  %call3 = tail call i8* @strcpy(i8* noundef nonnull dereferenceable(1) %call2, i8* noundef nonnull dereferenceable(1) %orig) #34
  ret i8* %call2
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias i8** @__ckd_calloc_2d__(i32 %d1, i32 %d2, i32 %elemsize, i8* %caller_file, i32 %caller_line) local_unnamed_addr #0 {
entry:
  %mul = mul nsw i32 %d2, %d1
  %conv = sext i32 %mul to i64
  %conv1 = sext i32 %elemsize to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv, i64 %conv1, i8* %caller_file, i32 %caller_line) #36
  %conv2 = sext i32 %d1 to i64
  %mul3 = shl nsw i64 %conv2, 3
  %call4 = tail call i8* @__ckd_malloc__(i64 %mul3, i8* %caller_file, i32 %caller_line) #36
  %0 = bitcast i8* %call4 to i8**
  %cmp21 = icmp sgt i32 %d1, 0
  br i1 %cmp21, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %1 = mul i32 %elemsize, %d2
  %2 = sext i32 %1 to i64
  %wide.trip.count = zext i32 %d1 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv24 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next25, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 %indvars.iv
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %indvars.iv24
  store i8* %add.ptr, i8** %arrayidx, align 8, !tbaa !74
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1
  %indvars.iv.next = add nsw i64 %indvars.iv, %2
  %exitcond.not = icmp eq i64 %indvars.iv.next25, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !556

for.end:                                          ; preds = %for.body, %entry
  ret i8** %0
}

; Function Attrs: mustprogress noinline nounwind optsize uwtable willreturn
define void @ckd_free(i8* %ptr) local_unnamed_addr #15 {
entry:
  %tobool.not = icmp eq i8* %ptr, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @free(i8* nonnull %ptr) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optsize uwtable willreturn
define void @ckd_free_2d(i8** %ptr) local_unnamed_addr #15 {
entry:
  %tobool.not = icmp eq i8** %ptr, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = load i8*, i8** %ptr, align 8, !tbaa !74
  tail call void @ckd_free(i8* %0) #36
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = bitcast i8** %ptr to i8*
  tail call void @ckd_free(i8* %1) #36
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define noalias i8*** @__ckd_calloc_3d__(i32 %d1, i32 %d2, i32 %d3, i32 %elemsize, i8* %caller_file, i32 %caller_line) local_unnamed_addr #0 {
entry:
  %mul = mul nsw i32 %d2, %d1
  %mul1 = mul nsw i32 %mul, %d3
  %conv = sext i32 %mul1 to i64
  %conv2 = sext i32 %elemsize to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv, i64 %conv2, i8* %caller_file, i32 %caller_line) #36
  %conv3 = sext i32 %d1 to i64
  %mul4 = shl nsw i64 %conv3, 3
  %call5 = tail call i8* @__ckd_malloc__(i64 %mul4, i8* %caller_file, i32 %caller_line) #36
  %0 = bitcast i8* %call5 to i8***
  %conv7 = sext i32 %mul to i64
  %mul8 = shl nsw i64 %conv7, 3
  %call9 = tail call i8* @__ckd_malloc__(i64 %mul8, i8* %caller_file, i32 %caller_line) #36
  %1 = bitcast i8* %call9 to i8**
  %cmp70 = icmp sgt i32 %d1, 0
  br i1 %cmp70, label %for.body.preheader, label %for.end32

for.body.preheader:                               ; preds = %entry
  %2 = sext i32 %d2 to i64
  %wide.trip.count83 = zext i32 %d1 to i64
  br label %for.body

for.cond11.preheader:                             ; preds = %for.body
  %cmp1664 = icmp sgt i32 %d2, 0
  br i1 %cmp70, label %for.cond15.preheader.preheader, label %for.end32

for.cond15.preheader.preheader:                   ; preds = %for.cond11.preheader
  %3 = mul i32 %elemsize, %d3
  %4 = sext i32 %3 to i64
  %wide.trip.count77 = zext i32 %d1 to i64
  %wide.trip.count = zext i32 %d2 to i64
  br label %for.cond15.preheader

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv81 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next82, %for.body ]
  %indvars.iv79 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next80, %for.body ]
  %add.ptr = getelementptr inbounds i8*, i8** %1, i64 %indvars.iv79
  %arrayidx = getelementptr inbounds i8**, i8*** %0, i64 %indvars.iv81
  store i8** %add.ptr, i8*** %arrayidx, align 8, !tbaa !74
  %indvars.iv.next82 = add nuw nsw i64 %indvars.iv81, 1
  %indvars.iv.next80 = add nsw i64 %indvars.iv79, %2
  %exitcond84.not = icmp eq i64 %indvars.iv.next82, %wide.trip.count83
  br i1 %exitcond84.not, label %for.cond11.preheader, label %for.body, !llvm.loop !557

for.cond15.preheader:                             ; preds = %for.cond15.preheader.preheader, %for.inc30
  %indvars.iv75 = phi i64 [ 0, %for.cond15.preheader.preheader ], [ %indvars.iv.next76, %for.inc30 ]
  %offset.169 = phi i32 [ 0, %for.cond15.preheader.preheader ], [ %offset.2.lcssa, %for.inc30 ]
  br i1 %cmp1664, label %for.body18.lr.ph, label %for.inc30

for.body18.lr.ph:                                 ; preds = %for.cond15.preheader
  %arrayidx22 = getelementptr inbounds i8**, i8*** %0, i64 %indvars.iv75
  %5 = load i8**, i8*** %arrayidx22, align 8, !tbaa !74
  %6 = sext i32 %offset.169 to i64
  br label %for.body18

for.body18:                                       ; preds = %for.body18.lr.ph, %for.body18
  %indvars.iv73 = phi i64 [ 0, %for.body18.lr.ph ], [ %indvars.iv.next74, %for.body18 ]
  %indvars.iv = phi i64 [ %6, %for.body18.lr.ph ], [ %indvars.iv.next, %for.body18 ]
  %add.ptr20 = getelementptr inbounds i8, i8* %call, i64 %indvars.iv
  %arrayidx24 = getelementptr inbounds i8*, i8** %5, i64 %indvars.iv73
  store i8* %add.ptr20, i8** %arrayidx24, align 8, !tbaa !74
  %indvars.iv.next = add i64 %indvars.iv, %4
  %indvars.iv.next74 = add nuw nsw i64 %indvars.iv73, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next74, %wide.trip.count
  br i1 %exitcond.not, label %for.inc30.loopexit, label %for.body18, !llvm.loop !558

for.inc30.loopexit:                               ; preds = %for.body18
  %7 = trunc i64 %indvars.iv.next to i32
  br label %for.inc30

for.inc30:                                        ; preds = %for.inc30.loopexit, %for.cond15.preheader
  %offset.2.lcssa = phi i32 [ %offset.169, %for.cond15.preheader ], [ %7, %for.inc30.loopexit ]
  %indvars.iv.next76 = add nuw nsw i64 %indvars.iv75, 1
  %exitcond78.not = icmp eq i64 %indvars.iv.next76, %wide.trip.count77
  br i1 %exitcond78.not, label %for.end32, label %for.cond15.preheader, !llvm.loop !559

for.end32:                                        ; preds = %for.inc30, %entry, %for.cond11.preheader
  ret i8*** %0
}

; Function Attrs: mustprogress noinline nounwind optsize uwtable willreturn
define void @ckd_free_3d(i8*** %ptr) local_unnamed_addr #15 {
entry:
  %tobool.not = icmp eq i8*** %ptr, null
  br i1 %tobool.not, label %if.end7, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %0 = load i8**, i8*** %ptr, align 8, !tbaa !74
  %tobool1.not = icmp eq i8** %0, null
  br i1 %tobool1.not, label %land.lhs.true.if.then5_crit_edge, label %if.then

land.lhs.true.if.then5_crit_edge:                 ; preds = %land.lhs.true
  %1 = bitcast i8** %0 to i8*
  br label %if.then5

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %0, align 8, !tbaa !74
  tail call void @ckd_free(i8* %2) #36
  %.phi.trans.insert = bitcast i8*** %ptr to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !74
  br label %if.then5

if.then5:                                         ; preds = %land.lhs.true.if.then5_crit_edge, %if.then
  %3 = phi i8* [ %1, %land.lhs.true.if.then5_crit_edge ], [ %.pre, %if.then ]
  tail call void @ckd_free(i8* %3) #36
  br label %if.end7

if.end7:                                          ; preds = %entry, %if.then5
  %4 = bitcast i8*** %ptr to i8*
  tail call void @ckd_free(i8* %4) #36
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i8* @__mymalloc__(i32 %elemsize, i8* %caller_file, i32 %caller_line) local_unnamed_addr #0 {
entry:
  %list.0109 = load %struct.mylist_s*, %struct.mylist_s** @head, align 8, !tbaa !74
  %tobool.not110 = icmp eq %struct.mylist_s* %list.0109, null
  br i1 %tobool.not110, label %if.then, label %land.rhs.preheader

land.rhs.preheader:                               ; preds = %entry
  %elemsize1120 = getelementptr inbounds %struct.mylist_s, %struct.mylist_s* %list.0109, i64 0, i32 2
  %0 = load i32, i32* %elemsize1120, align 8, !tbaa !560
  %cmp.not121 = icmp eq i32 %0, %elemsize
  br i1 %cmp.not121, label %if.else, label %for.body

land.rhs:                                         ; preds = %for.body
  %elemsize1 = getelementptr inbounds %struct.mylist_s, %struct.mylist_s* %list.0, i64 0, i32 2
  %1 = load i32, i32* %elemsize1, align 8, !tbaa !560
  %cmp.not = icmp eq i32 %1, %elemsize
  br i1 %cmp.not, label %if.else, label %for.body, !llvm.loop !562

for.body:                                         ; preds = %land.rhs.preheader, %land.rhs
  %list.0112122 = phi %struct.mylist_s* [ %list.0, %land.rhs ], [ %list.0109, %land.rhs.preheader ]
  %next = getelementptr inbounds %struct.mylist_s, %struct.mylist_s* %list.0112122, i64 0, i32 1
  %list.0 = load %struct.mylist_s*, %struct.mylist_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.mylist_s* %list.0, null
  br i1 %tobool.not, label %if.then, label %land.rhs, !llvm.loop !562

if.then:                                          ; preds = %for.body, %entry
  %2 = and i32 %elemsize, 7
  %cmp3.not = icmp eq i32 %2, 0
  br i1 %cmp3.not, label %if.end, label %if.then5

if.then5:                                         ; preds = %if.then
  tail call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.428, i64 0, i64 0), i64 236, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.429, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.451, i64 0, i64 0), i32 %elemsize) #34
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.then
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.428, i64 0, i64 0), i32 238) #36
  %3 = bitcast i8* %call to %struct.mylist_s*
  %freelist = bitcast i8* %call to i8***
  store i8** null, i8*** %freelist, align 8, !tbaa !563
  %elemsize6 = getelementptr inbounds i8, i8* %call, i64 16
  %4 = bitcast i8* %elemsize6 to i32*
  store i32 %elemsize, i32* %4, align 8, !tbaa !560
  %blocksize = getelementptr inbounds i8, i8* %call, i64 20
  %5 = bitcast i8* %blocksize to i32*
  store i32 50, i32* %5, align 4, !tbaa !564
  %mul = mul nsw i32 %elemsize, 50
  %div = sdiv i32 262144, %mul
  %blk_alloc = getelementptr inbounds i8, i8* %call, i64 24
  %6 = bitcast i8* %blk_alloc to i32*
  store i32 %div, i32* %6, align 8, !tbaa !565
  %7 = load %struct.mylist_s*, %struct.mylist_s** @head, align 8, !tbaa !74
  %next8 = getelementptr inbounds i8, i8* %call, i64 8
  %8 = bitcast i8* %next8 to %struct.mylist_s**
  store %struct.mylist_s* %7, %struct.mylist_s** %8, align 8, !tbaa !566
  store i8* %call, i8** bitcast (%struct.mylist_s** @head to i8**), align 8, !tbaa !74
  br label %if.end15

if.else:                                          ; preds = %land.rhs, %land.rhs.preheader
  %list.0112.lcssa = phi %struct.mylist_s* [ %list.0109, %land.rhs.preheader ], [ %list.0, %land.rhs ]
  %prev.0111.lcssa = phi %struct.mylist_s* [ null, %land.rhs.preheader ], [ %list.0112122, %land.rhs ]
  %tobool9.not = icmp eq %struct.mylist_s* %prev.0111.lcssa, null
  br i1 %tobool9.not, label %if.end15, label %if.then10

if.then10:                                        ; preds = %if.else
  %next11 = getelementptr inbounds %struct.mylist_s, %struct.mylist_s* %list.0112.lcssa, i64 0, i32 1
  %9 = load %struct.mylist_s*, %struct.mylist_s** %next11, align 8, !tbaa !566
  %next12 = getelementptr inbounds %struct.mylist_s, %struct.mylist_s* %prev.0111.lcssa, i64 0, i32 1
  store %struct.mylist_s* %9, %struct.mylist_s** %next12, align 8, !tbaa !566
  store %struct.mylist_s* %list.0109, %struct.mylist_s** %next11, align 8, !tbaa !566
  store %struct.mylist_s* %list.0112.lcssa, %struct.mylist_s** @head, align 8, !tbaa !74
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then10, %if.end
  %list.1 = phi %struct.mylist_s* [ %list.0112.lcssa, %if.then10 ], [ %list.0112.lcssa, %if.else ], [ %3, %if.end ]
  %freelist16 = getelementptr inbounds %struct.mylist_s, %struct.mylist_s* %list.1, i64 0, i32 0
  %10 = load i8**, i8*** %freelist16, align 8, !tbaa !563
  %cmp17 = icmp eq i8** %10, null
  br i1 %cmp17, label %if.then19, label %if.end50

if.then19:                                        ; preds = %if.end15
  %blk_alloc20 = getelementptr inbounds %struct.mylist_s, %struct.mylist_s* %list.1, i64 0, i32 4
  %11 = load i32, i32* %blk_alloc20, align 8, !tbaa !565
  %cmp21 = icmp eq i32 %11, 0
  %blocksize24 = getelementptr inbounds %struct.mylist_s, %struct.mylist_s* %list.1, i64 0, i32 3
  %12 = load i32, i32* %blocksize24, align 4, !tbaa !564
  br i1 %cmp21, label %if.then23, label %if.end35

if.then23:                                        ; preds = %if.then19
  %shl = shl i32 %12, 1
  store i32 %shl, i32* %blocksize24, align 4, !tbaa !564
  %mul26 = mul nsw i32 %shl, %elemsize
  %div27 = sdiv i32 262144, %mul26
  %cmp30 = icmp slt i32 %div27, 1
  %spec.store.select = select i1 %cmp30, i32 1879048192, i32 %div27
  store i32 %spec.store.select, i32* %blk_alloc20, align 8
  br label %if.end35

if.end35:                                         ; preds = %if.then19, %if.then23
  %13 = phi i32 [ %shl, %if.then23 ], [ %12, %if.then19 ]
  %blocksize36 = getelementptr inbounds %struct.mylist_s, %struct.mylist_s* %list.1, i64 0, i32 3
  %conv37 = sext i32 %13 to i64
  %conv38 = sext i32 %elemsize to i64
  %call39 = tail call i8* @__ckd_calloc__(i64 %conv37, i64 %conv38, i8* %caller_file, i32 %caller_line) #36
  %14 = bitcast %struct.mylist_s* %list.1 to i8**
  store i8* %call39, i8** %14, align 8, !tbaa !563
  %15 = load i32, i32* %blocksize36, align 4, !tbaa !564
  %cmp43105 = icmp sgt i32 %15, 1
  br i1 %cmp43105, label %for.body45, label %for.end47

for.body45:                                       ; preds = %if.end35, %for.body45
  %j.0.in107 = phi i32 [ %j.0, %for.body45 ], [ %15, %if.end35 ]
  %cp.0106 = phi i8* [ %add.ptr, %for.body45 ], [ %call39, %if.end35 ]
  %cpp.0108 = bitcast i8* %cp.0106 to i8**
  %j.0 = add nsw i32 %j.0.in107, -1
  %add.ptr = getelementptr inbounds i8, i8* %cp.0106, i64 %conv38
  store i8* %add.ptr, i8** %cpp.0108, align 8, !tbaa !74
  %cmp43 = icmp sgt i32 %j.0.in107, 2
  br i1 %cmp43, label %for.body45, label %for.end47, !llvm.loop !567

for.end47:                                        ; preds = %for.body45, %if.end35
  %cp.0.lcssa = phi i8* [ %call39, %if.end35 ], [ %add.ptr, %for.body45 ]
  %cpp.0.le = bitcast i8* %cp.0.lcssa to i8**
  store i8* null, i8** %cpp.0.le, align 8, !tbaa !74
  %16 = load i32, i32* %blk_alloc20, align 8, !tbaa !565
  %dec49 = add nsw i32 %16, -1
  store i32 %dec49, i32* %blk_alloc20, align 8, !tbaa !565
  %.pre115 = load i8**, i8*** %freelist16, align 8, !tbaa !563
  br label %if.end50

if.end50:                                         ; preds = %for.end47, %if.end15
  %17 = phi i8** [ %.pre115, %for.end47 ], [ %10, %if.end15 ]
  %18 = bitcast i8** %17 to i8*
  %19 = bitcast i8** %17 to i8***
  %20 = load i8**, i8*** %19, align 8, !tbaa !74
  store i8** %20, i8*** %freelist16, align 8, !tbaa !563
  ret i8* %18
}

; Function Attrs: noinline nounwind optsize uwtable
define void @__myfree__(i8* %elem, i32 %elemsize, i8* %caller_file, i32 %caller_line) local_unnamed_addr #0 {
entry:
  %list.028 = load %struct.mylist_s*, %struct.mylist_s** @head, align 8, !tbaa !74
  %tobool.not29 = icmp eq %struct.mylist_s* %list.028, null
  br i1 %tobool.not29, label %if.then, label %land.rhs.preheader

land.rhs.preheader:                               ; preds = %entry
  %elemsize140 = getelementptr inbounds %struct.mylist_s, %struct.mylist_s* %list.028, i64 0, i32 2
  %0 = load i32, i32* %elemsize140, align 8, !tbaa !560
  %cmp.not41 = icmp eq i32 %0, %elemsize
  br i1 %cmp.not41, label %if.else, label %for.body

land.rhs:                                         ; preds = %for.body
  %elemsize1 = getelementptr inbounds %struct.mylist_s, %struct.mylist_s* %list.0, i64 0, i32 2
  %1 = load i32, i32* %elemsize1, align 8, !tbaa !560
  %cmp.not = icmp eq i32 %1, %elemsize
  br i1 %cmp.not, label %if.else, label %for.body, !llvm.loop !568

for.body:                                         ; preds = %land.rhs.preheader, %land.rhs
  %list.03142 = phi %struct.mylist_s* [ %list.0, %land.rhs ], [ %list.028, %land.rhs.preheader ]
  %next = getelementptr inbounds %struct.mylist_s, %struct.mylist_s* %list.03142, i64 0, i32 1
  %list.0 = load %struct.mylist_s*, %struct.mylist_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.mylist_s* %list.0, null
  br i1 %tobool.not, label %if.then, label %land.rhs, !llvm.loop !568

if.then:                                          ; preds = %for.body, %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.428, i64 0, i64 0), i64 302, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.429, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6.454, i64 0, i64 0), i32 %elemsize, i8* %caller_file, i32 %caller_line) #34
  unreachable

if.else:                                          ; preds = %land.rhs, %land.rhs.preheader
  %list.031.lcssa = phi %struct.mylist_s* [ %list.028, %land.rhs.preheader ], [ %list.0, %land.rhs ]
  %prev.030.lcssa = phi %struct.mylist_s* [ null, %land.rhs.preheader ], [ %list.03142, %land.rhs ]
  %tobool3.not = icmp eq %struct.mylist_s* %prev.030.lcssa, null
  br i1 %tobool3.not, label %if.end8, label %if.then4

if.then4:                                         ; preds = %if.else
  %next5 = getelementptr inbounds %struct.mylist_s, %struct.mylist_s* %list.031.lcssa, i64 0, i32 1
  %2 = load %struct.mylist_s*, %struct.mylist_s** %next5, align 8, !tbaa !566
  %next6 = getelementptr inbounds %struct.mylist_s, %struct.mylist_s* %prev.030.lcssa, i64 0, i32 1
  store %struct.mylist_s* %2, %struct.mylist_s** %next6, align 8, !tbaa !566
  store %struct.mylist_s* %list.028, %struct.mylist_s** %next5, align 8, !tbaa !566
  store %struct.mylist_s* %list.031.lcssa, %struct.mylist_s** @head, align 8, !tbaa !74
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then4
  %3 = bitcast i8* %elem to i8**
  %4 = bitcast %struct.mylist_s* %list.031.lcssa to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !563
  store i8* %5, i8** %3, align 8, !tbaa !74
  store i8* %elem, i8** %4, align 8, !tbaa !563
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.vithist_t* @vithist_init(%struct.kbcore_t* nocapture readonly %kbc, i32 %wbeam, i32 %bghist) local_unnamed_addr #0 {
entry:
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i64 77, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.458, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.459, i64 0, i64 0)) #34
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 64, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i32 79) #34
  %call1 = tail call i8* @__ckd_calloc__(i64 256, i64 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i32 81) #34
  %0 = bitcast i8* %call to i8**
  store i8* %call1, i8** %0, align 8, !tbaa !143
  %n_entry = getelementptr inbounds i8, i8* %call, i64 16
  %1 = bitcast i8* %n_entry to i32*
  store i32 0, i32* %1, align 8, !tbaa !569
  %call3 = tail call i8* @__ckd_calloc__(i64 15001, i64 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i32 84) #34
  %frame_start = getelementptr inbounds i8, i8* %call, i64 8
  %2 = bitcast i8* %frame_start to i8**
  store i8* %call3, i8** %2, align 8, !tbaa !145
  %call4 = tail call i8* @__ckd_calloc__(i64 15001, i64 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i32 86) #34
  %bestscore = getelementptr inbounds i8, i8* %call, i64 32
  %3 = bitcast i8* %bestscore to i8**
  store i8* %call4, i8** %3, align 8, !tbaa !146
  %call5 = tail call i8* @__ckd_calloc__(i64 15001, i64 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i32 87) #34
  %bestvh = getelementptr inbounds i8, i8* %call, i64 40
  %4 = bitcast i8* %bestvh to i8**
  store i8* %call5, i8** %4, align 8, !tbaa !147
  %wbeam6 = getelementptr inbounds i8, i8* %call, i64 28
  %5 = bitcast i8* %wbeam6 to i32*
  store i32 %wbeam, i32* %5, align 4, !tbaa !570
  %bghist7 = getelementptr inbounds i8, i8* %call, i64 24
  %6 = bitcast i8* %bghist7 to i32*
  store i32 %bghist, i32* %6, align 8, !tbaa !571
  %lm8 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 4
  %7 = load %struct.lm_s*, %struct.lm_s** %lm8, align 8, !tbaa !17
  %lmset9 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 5
  %8 = load %struct.lmset_s*, %struct.lmset_s** %lmset9, align 8, !tbaa !18
  %dict10 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 2
  %9 = load %struct.dict_t*, %struct.dict_t** %dict10, align 8, !tbaa !16
  %n_word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %9, i64 0, i32 7
  %10 = load i32, i32* %n_word, align 4, !tbaa !58
  %conv = sext i32 %10 to i64
  %call11 = tail call i8* @__ckd_calloc__(i64 %conv, i64 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i32 96) #34
  %tobool.not = icmp eq %struct.lmset_s* %8, null
  br i1 %tobool.not, label %if.else, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %n_lm = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 12
  %11 = load i32, i32* %n_lm, align 8, !tbaa !23
  %cmp61 = icmp sgt i32 %11, 0
  br i1 %cmp61, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %for.cond.preheader
  %wide.trip.count = zext i32 %11 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %max.063 = phi i32 [ -1, %for.body.preheader ], [ %spec.select, %for.body ]
  %lm13 = getelementptr inbounds %struct.lmset_s, %struct.lmset_s* %8, i64 %indvars.iv, i32 1
  %12 = load %struct.lm_s*, %struct.lm_s** %lm13, align 8, !tbaa !24
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %12, i64 0, i32 0
  %13 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp14 = icmp sgt i32 %13, %max.063
  %spec.select = select i1 %cmp14, i32 %13, i32 %max.063
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !572

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %max.0.lcssa = phi i32 [ -1, %for.cond.preheader ], [ %spec.select, %for.body ]
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i64 105, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.458, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3.460, i64 0, i64 0), i32 %max.0.lcssa) #34
  br label %if.end30.sink.split

if.else:                                          ; preds = %entry
  %tobool23.not = icmp eq %struct.lm_s* %7, null
  br i1 %tobool23.not, label %if.end30, label %if.then24

if.then24:                                        ; preds = %if.else
  %n_ug25 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %7, i64 0, i32 0
  %14 = load i32, i32* %n_ug25, align 8, !tbaa !133
  br label %if.end30.sink.split

if.end30.sink.split:                              ; preds = %for.end, %if.then24
  %.sink64 = phi i32 [ %14, %if.then24 ], [ %max.0.lcssa, %for.end ]
  %.sink = phi i32 [ 109, %if.then24 ], [ 106, %for.end ]
  %conv26 = sext i32 %.sink64 to i64
  %call27 = tail call i8* @__ckd_calloc__(i64 %conv26, i64 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i32 %.sink) #34
  %lms2vh_root28 = getelementptr inbounds i8, i8* %call, i64 48
  %15 = bitcast i8* %lms2vh_root28 to i8**
  store i8* %call27, i8** %15, align 8, !tbaa !148
  br label %if.end30

if.end30:                                         ; preds = %if.end30.sink.split, %if.else
  %16 = bitcast i8* %call to %struct.vithist_t*
  tail call void @ckd_free(i8* %call11) #34
  %lwidlist = getelementptr inbounds i8, i8* %call, i64 56
  %17 = bitcast i8* %lwidlist to %struct.gnode_s**
  store %struct.gnode_s* null, %struct.gnode_s** %17, align 8, !tbaa !573
  ret %struct.vithist_t* %16
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @vithist_utt_begin(%struct.vithist_t* nocapture %vh, %struct.kbcore_t* nocapture readonly %kbc) local_unnamed_addr #0 {
entry:
  %lm1 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 4
  %0 = load %struct.lm_s*, %struct.lm_s** %lm1, align 8, !tbaa !17
  %dict2 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 2
  %1 = load %struct.dict_t*, %struct.dict_t** %dict2, align 8, !tbaa !16
  %call = tail call fastcc %struct.vithist_entry_t* @vithist_entry_alloc(%struct.vithist_t* %vh) #36
  %startwid = getelementptr inbounds %struct.dict_t, %struct.dict_t* %1, i64 0, i32 11
  %2 = load i32, i32* %startwid, align 8, !tbaa !20
  %wid = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call, i64 0, i32 0
  store i32 %2, i32* %wid, align 4, !tbaa !574
  %sf = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call, i64 0, i32 1
  store i16 -1, i16* %sf, align 4, !tbaa !576
  %ef = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call, i64 0, i32 2
  store i16 -1, i16* %ef, align 2, !tbaa !577
  %ascr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call, i64 0, i32 3
  store i32 0, i32* %ascr, align 4, !tbaa !578
  %lscr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call, i64 0, i32 4
  store i32 0, i32* %lscr, align 4, !tbaa !579
  %score = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call, i64 0, i32 5
  store i32 0, i32* %score, align 4, !tbaa !580
  %pred = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call, i64 0, i32 6
  store i32 -1, i32* %pred, align 4, !tbaa !581
  %type = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call, i64 0, i32 7
  store i32 0, i32* %type, align 4, !tbaa !582
  %valid = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call, i64 0, i32 8
  store i32 1, i32* %valid, align 4, !tbaa !583
  %startlwid = getelementptr inbounds %struct.lm_s, %struct.lm_s* %0, i64 0, i32 5
  %3 = load i16, i16* %startlwid, align 8, !tbaa !26
  %arrayidx = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call, i64 0, i32 9, i32 0, i32 0, i64 0
  store i16 %3, i16* %arrayidx, align 4, !tbaa !63
  %arrayidx6 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call, i64 0, i32 9, i32 0, i32 0, i64 1
  store i16 -1, i16* %arrayidx6, align 2, !tbaa !63
  %n_frm = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 3
  store i32 0, i32* %n_frm, align 4, !tbaa !584
  %frame_start = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 1
  %4 = load i32*, i32** %frame_start, align 8, !tbaa !145
  store i32 1, i32* %4, align 4, !tbaa !37
  %bestscore = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 6
  %5 = load i32*, i32** %bestscore, align 8, !tbaa !146
  store i32 -2147483648, i32* %5, align 4, !tbaa !37
  %bestvh = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 7
  %6 = load i32*, i32** %bestvh, align 8, !tbaa !147
  store i32 -1, i32* %6, align 4, !tbaa !37
  ret i32 0
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc %struct.vithist_entry_t* @vithist_entry_alloc(%struct.vithist_t* nocapture %vh) unnamed_addr #0 {
entry:
  %n_entry = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 2
  %0 = load i32, i32* %n_entry, align 8, !tbaa !569
  %shr = ashr i32 %0, 14
  %and = and i32 %0, 16383
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %cmp2 = icmp sgt i32 %0, 4194303
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  tail call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i64 132, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.461, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.33.462, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %call = tail call i8* @__ckd_calloc__(i64 16384, i64 36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i32 136) #34
  %1 = bitcast i8* %call to %struct.vithist_entry_t*
  %entry4 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 0
  %2 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry4, align 8, !tbaa !143
  %idxprom = sext i32 %shr to i64
  %arrayidx = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %2, i64 %idxprom
  %3 = bitcast %struct.vithist_entry_t** %arrayidx to i8**
  store i8* %call, i8** %3, align 8, !tbaa !74
  %.pre = load i32, i32* %n_entry, align 8, !tbaa !569
  br label %if.end8

if.else:                                          ; preds = %entry
  %entry5 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 0
  %4 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry5, align 8, !tbaa !143
  %idxprom6 = sext i32 %shr to i64
  %arrayidx7 = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %4, i64 %idxprom6
  %5 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %arrayidx7, align 8, !tbaa !74
  %idx.ext = zext i32 %and to i64
  %add.ptr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %5, i64 %idx.ext
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.end
  %6 = phi i32 [ %.pre, %if.end ], [ %0, %if.else ]
  %ve.0 = phi %struct.vithist_entry_t* [ %1, %if.end ], [ %add.ptr, %if.else ]
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %n_entry, align 8, !tbaa !569
  ret %struct.vithist_entry_t* %ve.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define %struct.vithist_entry_t* @vithist_id2entry(%struct.vithist_t* nocapture readonly %vh, i32 %id) local_unnamed_addr #21 {
entry:
  %entry1 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 0
  %0 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry1, align 8, !tbaa !143
  %shr = ashr i32 %id, 14
  %idxprom = sext i32 %shr to i64
  %arrayidx = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %0, i64 %idxprom
  %1 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %arrayidx, align 8, !tbaa !74
  %and = and i32 %id, 16383
  %2 = zext i32 %and to i64
  %add.ptr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %1, i64 %2
  ret %struct.vithist_entry_t* %add.ptr
}

; Function Attrs: noinline nounwind optsize uwtable
define void @vithist_rescore(%struct.vithist_t* nocapture %vh, %struct.kbcore_t* nocapture readonly %kbc, i32 %wid, i32 %ef, i32 %score, i32 %pred, i32 %type) local_unnamed_addr #0 {
entry:
  %tve = alloca %struct.vithist_entry_t, align 4
  %0 = bitcast %struct.vithist_entry_t* %tve to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %0) #38
  %cmp = icmp eq i32 %pred, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i64 286, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.461, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.5.463, i64 0, i64 0), i32 %score) #34
  tail call void @exit(i32 -1) #40
  unreachable

if.end:                                           ; preds = %entry
  %entry1 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 0
  %1 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry1, align 8, !tbaa !143
  %shr = ashr i32 %pred, 14
  %idxprom = sext i32 %shr to i64
  %arrayidx = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %1, i64 %idxprom
  %2 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %arrayidx, align 8, !tbaa !74
  %and = and i32 %pred, 16383
  %3 = zext i32 %and to i64
  %wid2 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 0
  store i32 %wid, i32* %wid2, align 4, !tbaa !574
  %ef3 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %2, i64 %3, i32 2
  %4 = load i16, i16* %ef3, align 2, !tbaa !577
  %add = add i16 %4, 1
  %sf = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 1
  store i16 %add, i16* %sf, align 4, !tbaa !576
  %conv5 = trunc i32 %ef to i16
  %ef6 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 2
  store i16 %conv5, i16* %ef6, align 2, !tbaa !577
  %type7 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 7
  store i32 %type, i32* %type7, align 4, !tbaa !582
  %valid = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 8
  store i32 1, i32* %valid, align 4, !tbaa !583
  %score8 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %2, i64 %3, i32 5
  %5 = load i32, i32* %score8, align 4, !tbaa !580
  %sub = sub nsw i32 %score, %5
  %ascr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 3
  store i32 %sub, i32* %ascr, align 4, !tbaa !578
  %cmp9 = icmp eq i32 %pred, 0
  br i1 %cmp9, label %if.end21, label %if.else

if.else:                                          ; preds = %if.end
  %frame_start = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 1
  %6 = load i32*, i32** %frame_start, align 8, !tbaa !145
  %idxprom13 = sext i16 %4 to i64
  %arrayidx14 = getelementptr inbounds i32, i32* %6, i64 %idxprom13
  %7 = load i32, i32* %arrayidx14, align 4, !tbaa !37
  %add18 = add nsw i64 %idxprom13, 1
  %arrayidx20 = getelementptr inbounds i32, i32* %6, i64 %add18
  %8 = load i32, i32* %arrayidx20, align 4, !tbaa !37
  br label %if.end21

if.end21:                                         ; preds = %if.end, %if.else
  %se.0 = phi i32 [ %7, %if.else ], [ 0, %if.end ]
  %fe.0 = phi i32 [ %8, %if.else ], [ 1, %if.end ]
  %dict = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 2
  %9 = load %struct.dict_t*, %struct.dict_t** %dict, align 8, !tbaa !16
  %call = tail call i32 @dict_filler_word(%struct.dict_t* %9, i32 %wid) #34
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.else30, label %if.then22

if.then22:                                        ; preds = %if.end21
  %fillpen = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 6
  %10 = load %struct.fillpen_t*, %struct.fillpen_t** %fillpen, align 8, !tbaa !85
  %call23 = tail call i32 @fillpen(%struct.fillpen_t* %10, i32 %wid) #34
  %lscr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 4
  store i32 %call23, i32* %lscr, align 4, !tbaa !579
  %add25 = add nsw i32 %call23, %score
  %score26 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 5
  store i32 %add25, i32* %score26, align 4, !tbaa !580
  %pred27 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 6
  store i32 %pred, i32* %pred27, align 4, !tbaa !581
  %lm3g = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 9, i32 0
  %lm3g29 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %2, i64 %3, i32 9, i32 0
  %11 = bitcast %struct.anon* %lm3g29 to i32*
  %12 = bitcast %struct.anon* %lm3g to i32*
  %13 = load i32, i32* %11, align 4, !tbaa !63
  store i32 %13, i32* %12, align 4, !tbaa !63
  call fastcc void @vithist_enter(%struct.vithist_t* nonnull %vh, %struct.vithist_entry_t* nonnull %tve) #36
  br label %if.end91

if.else30:                                        ; preds = %if.end21
  %lmset = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 5
  %14 = load %struct.lmset_s*, %struct.lmset_s** %lmset, align 8, !tbaa !18
  %tobool31.not = icmp eq %struct.lmset_s* %14, null
  br i1 %tobool31.not, label %if.else35, label %if.then32

if.then32:                                        ; preds = %if.else30
  %lm = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 4
  %15 = load %struct.lm_s*, %struct.lm_s** %lm, align 8, !tbaa !17
  %dict2lmwid = getelementptr inbounds %struct.lm_s, %struct.lm_s* %15, i64 0, i32 38
  br label %if.end39

if.else35:                                        ; preds = %if.else30
  %dict2lmwid36 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 7
  br label %if.end39

if.end39:                                         ; preds = %if.else35, %if.then32
  %dict2lmwid36.sink = phi i16** [ %dict2lmwid36, %if.else35 ], [ %dict2lmwid, %if.then32 ]
  %16 = load i16*, i16** %dict2lmwid36.sink, align 8, !tbaa !74
  %idxprom37 = sext i32 %wid to i64
  %arrayidx38 = getelementptr inbounds i16, i16* %16, i64 %idxprom37
  %lwid.0 = load i16, i16* %arrayidx38, align 2, !tbaa !40
  %arrayidx43 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 9, i32 0, i32 0, i64 0
  store i16 %lwid.0, i16* %arrayidx43, align 4, !tbaa !63
  %lm56 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 4
  %lscr66 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 4
  %score72 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 5
  %wbeam = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 5
  %bestscore = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 6
  %n_frm = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 3
  %pred80 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 6
  %arrayidx88 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 9, i32 0, i32 0, i64 1
  %cmp44137 = icmp slt i32 %se.0, %fe.0
  br i1 %cmp44137, label %for.body, label %if.end91

for.body:                                         ; preds = %if.end39, %for.inc
  %i.0138 = phi i32 [ %inc, %for.inc ], [ %se.0, %if.end39 ]
  %17 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry1, align 8, !tbaa !143
  %shr47 = ashr i32 %i.0138, 14
  %idxprom48 = sext i32 %shr47 to i64
  %arrayidx49 = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %17, i64 %idxprom48
  %18 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %arrayidx49, align 8, !tbaa !74
  %and50 = and i32 %i.0138, 16383
  %19 = zext i32 %and50 to i64
  %valid53 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 %19, i32 8
  %20 = load i32, i32* %valid53, align 4, !tbaa !583
  %tobool54.not = icmp eq i32 %20, 0
  br i1 %tobool54.not, label %for.inc, label %if.then55

if.then55:                                        ; preds = %for.body
  %21 = load %struct.lm_s*, %struct.lm_s** %lm56, align 8, !tbaa !17
  %arrayidx60 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 %19, i32 9, i32 0, i32 0, i64 1
  %22 = load i16, i16* %arrayidx60, align 2, !tbaa !63
  %arrayidx64 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 %19, i32 9, i32 0, i32 0, i64 0
  %23 = load i16, i16* %arrayidx64, align 4, !tbaa !63
  %call65 = tail call i32 @lm_tg_score(%struct.lm_s* %21, i16 zeroext %22, i16 zeroext %23, i16 zeroext %lwid.0, i32 %wid) #34
  store i32 %call65, i32* %lscr66, align 4, !tbaa !579
  %score67 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 %19, i32 5
  %24 = load i32, i32* %score67, align 4, !tbaa !580
  %add69 = add i32 %call65, %sub
  %add71 = add i32 %add69, %24
  store i32 %add71, i32* %score72, align 4, !tbaa !580
  %25 = load i32, i32* %wbeam, align 4, !tbaa !570
  %sub74 = sub nsw i32 %add71, %25
  %26 = load i32*, i32** %bestscore, align 8, !tbaa !146
  %27 = load i32, i32* %n_frm, align 4, !tbaa !584
  %idxprom75 = sext i32 %27 to i64
  %arrayidx76 = getelementptr inbounds i32, i32* %26, i64 %idxprom75
  %28 = load i32, i32* %arrayidx76, align 4, !tbaa !37
  %cmp77.not = icmp slt i32 %sub74, %28
  br i1 %cmp77.not, label %for.inc, label %if.then79

if.then79:                                        ; preds = %if.then55
  store i32 %i.0138, i32* %pred80, align 4, !tbaa !581
  %29 = load i16, i16* %arrayidx64, align 4, !tbaa !63
  store i16 %29, i16* %arrayidx88, align 2, !tbaa !63
  call fastcc void @vithist_enter(%struct.vithist_t* nonnull %vh, %struct.vithist_entry_t* nonnull %tve) #36
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then79, %if.then55
  %inc = add i32 %i.0138, 1
  %exitcond.not = icmp eq i32 %inc, %fe.0
  br i1 %exitcond.not, label %if.end91, label %for.body, !llvm.loop !585

if.end91:                                         ; preds = %for.inc, %if.end39, %if.then22
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %0) #38
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @vithist_enter(%struct.vithist_t* nocapture %vh, %struct.vithist_entry_t* nocapture readonly %tve) unnamed_addr #0 {
entry:
  %lmstate = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 9
  %call = tail call fastcc i32 @vh_lmstate_find(%struct.vithist_t* %vh, %union.vh_lmstate_t* nonnull %lmstate) #36
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %n_entry = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 2
  %0 = load i32, i32* %n_entry, align 8, !tbaa !569
  %call1 = tail call fastcc %struct.vithist_entry_t* @vithist_entry_alloc(%struct.vithist_t* %vh) #36
  %1 = bitcast %struct.vithist_entry_t* %call1 to i8*
  %2 = bitcast %struct.vithist_entry_t* %tve to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(36) %1, i8* noundef nonnull align 4 dereferenceable(36) %2, i64 36, i1 false), !tbaa.struct !586
  tail call fastcc void @vithist_lmstate_enter(%struct.vithist_t* %vh, i32 %0, %struct.vithist_entry_t* %call1) #36
  br label %if.end6

if.else:                                          ; preds = %entry
  %entry2 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 0
  %3 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry2, align 8, !tbaa !143
  %shr1 = lshr i32 %call, 14
  %4 = zext i32 %shr1 to i64
  %arrayidx = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %3, i64 %4
  %5 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %arrayidx, align 8, !tbaa !74
  %and = and i32 %call, 16383
  %6 = zext i32 %and to i64
  %score = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %5, i64 %6, i32 5
  %7 = load i32, i32* %score, align 4, !tbaa !580
  %score3 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 5
  %8 = load i32, i32* %score3, align 4, !tbaa !580
  %cmp4 = icmp slt i32 %7, %8
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.else
  %add.ptr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %5, i64 %6
  %9 = bitcast %struct.vithist_entry_t* %add.ptr to i8*
  %10 = bitcast %struct.vithist_entry_t* %tve to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(36) %9, i8* noundef nonnull align 4 dereferenceable(36) %10, i64 36, i1 false), !tbaa.struct !586
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then5, %if.then
  %vhid.0 = phi i32 [ %0, %if.then ], [ %call, %if.then5 ], [ %call, %if.else ]
  %bestscore = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 6
  %11 = load i32*, i32** %bestscore, align 8, !tbaa !146
  %n_frm = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 3
  %12 = load i32, i32* %n_frm, align 4, !tbaa !584
  %idxprom7 = sext i32 %12 to i64
  %arrayidx8 = getelementptr inbounds i32, i32* %11, i64 %idxprom7
  %13 = load i32, i32* %arrayidx8, align 4, !tbaa !37
  %score9 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %tve, i64 0, i32 5
  %14 = load i32, i32* %score9, align 4, !tbaa !580
  %cmp10 = icmp slt i32 %13, %14
  br i1 %cmp10, label %if.then11, label %if.end20

if.then11:                                        ; preds = %if.end6
  store i32 %14, i32* %arrayidx8, align 4, !tbaa !37
  %bestvh = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 7
  %15 = load i32*, i32** %bestvh, align 8, !tbaa !147
  %16 = load i32, i32* %n_frm, align 4, !tbaa !584
  %idxprom18 = sext i32 %16 to i64
  %arrayidx19 = getelementptr inbounds i32, i32* %15, i64 %idxprom18
  store i32 %vhid.0, i32* %arrayidx19, align 4, !tbaa !37
  br label %if.end20

if.end20:                                         ; preds = %if.then11, %if.end6
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define internal fastcc i32 @vh_lmstate_find(%struct.vithist_t* nocapture readonly %vh, %union.vh_lmstate_t* nocapture readonly %lms) unnamed_addr #16 {
entry:
  %arrayidx = getelementptr inbounds %union.vh_lmstate_t, %union.vh_lmstate_t* %lms, i64 0, i32 0, i32 0, i64 0
  %0 = load i16, i16* %arrayidx, align 2, !tbaa !63
  %lms2vh_root = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 8
  %1 = load %struct.vh_lms2vh_t**, %struct.vh_lms2vh_t*** %lms2vh_root, align 8, !tbaa !148
  %idxprom = zext i16 %0 to i64
  %arrayidx2 = getelementptr inbounds %struct.vh_lms2vh_t*, %struct.vh_lms2vh_t** %1, i64 %idxprom
  %2 = load %struct.vh_lms2vh_t*, %struct.vh_lms2vh_t** %arrayidx2, align 8, !tbaa !74
  %cmp = icmp eq %struct.vh_lms2vh_t* %2, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %arrayidx5 = getelementptr inbounds %union.vh_lmstate_t, %union.vh_lmstate_t* %lms, i64 0, i32 0, i32 0, i64 1
  %3 = load i16, i16* %arrayidx5, align 2, !tbaa !63
  %children = getelementptr inbounds %struct.vh_lms2vh_t, %struct.vh_lms2vh_t* %2, i64 0, i32 3
  %conv = zext i16 %3 to i32
  %gn.021 = load %struct.gnode_s*, %struct.gnode_s** %children, align 8, !tbaa !74
  %tobool.not22 = icmp eq %struct.gnode_s* %gn.021, null
  br i1 %tobool.not22, label %cleanup, label %for.body

for.cond:                                         ; preds = %for.body
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.023, i64 0, i32 1
  %gn.0 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.gnode_s* %gn.0, null
  br i1 %tobool.not, label %cleanup, label %for.body, !llvm.loop !587

for.body:                                         ; preds = %if.end, %for.cond
  %gn.023 = phi %struct.gnode_s* [ %gn.0, %for.cond ], [ %gn.021, %if.end ]
  %4 = bitcast %struct.gnode_s* %gn.023 to %struct.vh_lms2vh_t**
  %5 = load %struct.vh_lms2vh_t*, %struct.vh_lms2vh_t** %4, align 8, !tbaa !63
  %state = getelementptr inbounds %struct.vh_lms2vh_t, %struct.vh_lms2vh_t* %5, i64 0, i32 0
  %6 = load i32, i32* %state, align 8, !tbaa !588
  %cmp6 = icmp eq i32 %6, %conv
  br i1 %cmp6, label %if.then8, label %for.cond

if.then8:                                         ; preds = %for.body
  %vhid = getelementptr inbounds %struct.vh_lms2vh_t, %struct.vh_lms2vh_t* %5, i64 0, i32 1
  %7 = load i32, i32* %vhid, align 4, !tbaa !590
  br label %cleanup

cleanup:                                          ; preds = %for.cond, %if.end, %entry, %if.then8
  %retval.0 = phi i32 [ %7, %if.then8 ], [ -1, %entry ], [ -1, %if.end ], [ -1, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @vithist_lmstate_enter(%struct.vithist_t* nocapture %vh, i32 %vhid, %struct.vithist_entry_t* %ve) unnamed_addr #0 {
entry:
  %arrayidx = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %ve, i64 0, i32 9, i32 0, i32 0, i64 0
  %0 = load i16, i16* %arrayidx, align 4, !tbaa !63
  %lms2vh_root = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 8
  %1 = load %struct.vh_lms2vh_t**, %struct.vh_lms2vh_t*** %lms2vh_root, align 8, !tbaa !148
  %idxprom = zext i16 %0 to i64
  %arrayidx2 = getelementptr inbounds %struct.vh_lms2vh_t*, %struct.vh_lms2vh_t** %1, i64 %idxprom
  %2 = load %struct.vh_lms2vh_t*, %struct.vh_lms2vh_t** %arrayidx2, align 8, !tbaa !74
  %cmp = icmp eq %struct.vh_lms2vh_t* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i32 218) #34
  %3 = bitcast i8* %call to %struct.vh_lms2vh_t*
  %4 = load %struct.vh_lms2vh_t**, %struct.vh_lms2vh_t*** %lms2vh_root, align 8, !tbaa !148
  %arrayidx5 = getelementptr inbounds %struct.vh_lms2vh_t*, %struct.vh_lms2vh_t** %4, i64 %idxprom
  %5 = bitcast %struct.vh_lms2vh_t** %arrayidx5 to i8**
  store i8* %call, i8** %5, align 8, !tbaa !74
  %conv = zext i16 %0 to i32
  %state = bitcast i8* %call to i32*
  store i32 %conv, i32* %state, align 8, !tbaa !588
  %children = getelementptr inbounds i8, i8* %call, i64 16
  %6 = bitcast i8* %children to %struct.gnode_s**
  store %struct.gnode_s* null, %struct.gnode_s** %6, align 8, !tbaa !591
  %lwidlist = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 9
  %7 = load %struct.gnode_s*, %struct.gnode_s** %lwidlist, align 8, !tbaa !573
  %call7 = tail call %struct.gnode_s* @glist_add_int32(%struct.gnode_s* %7, i32 %conv) #34
  store %struct.gnode_s* %call7, %struct.gnode_s** %lwidlist, align 8, !tbaa !573
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %lms2vh.0 = phi %struct.vh_lms2vh_t* [ %3, %if.then ], [ %2, %entry ]
  %call9 = tail call i8* @__ckd_calloc__(i64 1, i64 24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i32 229) #34
  %arrayidx13 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %ve, i64 0, i32 9, i32 0, i32 0, i64 1
  %8 = load i16, i16* %arrayidx13, align 2, !tbaa !63
  %conv14 = zext i16 %8 to i32
  %state15 = bitcast i8* %call9 to i32*
  store i32 %conv14, i32* %state15, align 8, !tbaa !588
  %children16 = getelementptr inbounds i8, i8* %call9, i64 16
  %9 = bitcast i8* %children16 to %struct.gnode_s**
  store %struct.gnode_s* null, %struct.gnode_s** %9, align 8, !tbaa !591
  %vhid17 = getelementptr inbounds i8, i8* %call9, i64 4
  %10 = bitcast i8* %vhid17 to i32*
  store i32 %vhid, i32* %10, align 4, !tbaa !590
  %ve18 = getelementptr inbounds i8, i8* %call9, i64 8
  %11 = bitcast i8* %ve18 to %struct.vithist_entry_t**
  store %struct.vithist_entry_t* %ve, %struct.vithist_entry_t** %11, align 8, !tbaa !592
  %children19 = getelementptr inbounds %struct.vh_lms2vh_t, %struct.vh_lms2vh_t* %lms2vh.0, i64 0, i32 3
  %12 = load %struct.gnode_s*, %struct.gnode_s** %children19, align 8, !tbaa !591
  %call20 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %12, i8* %call9) #34
  store %struct.gnode_s* %call20, %struct.gnode_s** %children19, align 8, !tbaa !591
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @vithist_prune(%struct.vithist_t* nocapture %vh, %struct.dict_t* %dict, i32 %frm, i32 %maxwpf, i32 %maxhist, i32 %beam) local_unnamed_addr #0 {
entry:
  %ve = alloca %struct.vithist_entry_t*, align 8
  %i = alloca i32, align 4
  %0 = bitcast %struct.vithist_entry_t** %ve to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #38
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #38
  %frame_start = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 1
  %2 = load i32*, i32** %frame_start, align 8, !tbaa !145
  %idxprom = sext i32 %frm to i64
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %n_entry = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 2
  %4 = load i32, i32* %n_entry, align 8, !tbaa !569
  %bestscore = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 6
  %5 = load i32*, i32** %bestscore, align 8, !tbaa !146
  %arrayidx2 = getelementptr inbounds i32, i32* %5, i64 %idxprom
  %6 = load i32, i32* %arrayidx2, align 4, !tbaa !37
  %add = add nsw i32 %6, %beam
  %call = tail call i8* @heap_new() #34
  %add3 = add nsw i32 %maxwpf, 1
  %conv = sext i32 %add3 to i64
  %call4 = tail call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i32 410) #34
  %7 = bitcast i8* %call4 to i32*
  store i32 -1, i32* %7, align 4, !tbaa !37
  %entry7 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 0
  store i32 %3, i32* %i, align 4, !tbaa !37
  %cmp.not.not96 = icmp slt i32 %3, %4
  br i1 %cmp.not.not96, label %for.body, label %while.cond.preheader

while.cond.preheader:                             ; preds = %for.body, %entry
  %8 = bitcast %struct.vithist_entry_t** %ve to i8**
  %bghist = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 4
  br label %while.cond.outer.outer

for.body:                                         ; preds = %entry, %for.body
  %storemerge97 = phi i32 [ %inc, %for.body ], [ %3, %entry ]
  %9 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry7, align 8, !tbaa !143
  %shr = ashr i32 %storemerge97, 14
  %idxprom8 = sext i32 %shr to i64
  %arrayidx9 = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %9, i64 %idxprom8
  %10 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %arrayidx9, align 8, !tbaa !74
  %and = and i32 %storemerge97, 16383
  %11 = zext i32 %and to i64
  %add.ptr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %10, i64 %11
  store %struct.vithist_entry_t* %add.ptr, %struct.vithist_entry_t** %ve, align 8, !tbaa !74
  %12 = bitcast %struct.vithist_entry_t* %add.ptr to i8*
  %score = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %10, i64 %11, i32 5
  %13 = load i32, i32* %score, align 4, !tbaa !580
  %sub10 = sub nsw i32 0, %13
  %call11 = tail call i32 @heap_insert(i8* %call, i8* %12, i32 %sub10) #34
  %valid = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %10, i64 %11, i32 8
  store i32 0, i32* %valid, align 4, !tbaa !583
  %14 = load i32, i32* %i, align 4, !tbaa !37
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4, !tbaa !37
  %cmp.not.not = icmp slt i32 %inc, %4
  br i1 %cmp.not.not, label %for.body, label %while.cond.preheader, !llvm.loop !593

while.cond:                                       ; preds = %while.cond.outer, %if.then
  %filler_done.0 = phi i32 [ 1, %if.then ], [ %filler_done.0.ph, %while.cond.outer ]
  %call12 = call i32 @heap_pop(i8* %call, i8** nonnull %8, i32* nonnull %i) #34
  %cmp13 = icmp sgt i32 %call12, 0
  br i1 %cmp13, label %land.lhs.true, label %while.end

land.lhs.true:                                    ; preds = %while.cond
  %15 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %ve, align 8, !tbaa !74
  %score15 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %15, i64 0, i32 5
  %16 = load i32, i32* %score15, align 4, !tbaa !580
  %cmp16 = icmp sge i32 %16, %add
  %or.cond = select i1 %cmp16, i1 %cmp18, i1 false
  br i1 %or.cond, label %while.body, label %while.end

while.body:                                       ; preds = %land.lhs.true
  %wid20 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %15, i64 0, i32 0
  %17 = load i32, i32* %wid20, align 4, !tbaa !574
  %call21 = call i32 @dict_filler_word(%struct.dict_t* %dict, i32 %17) #34
  %tobool.not = icmp eq i32 %call21, 0
  br i1 %tobool.not, label %if.end24, label %if.then

if.then:                                          ; preds = %while.body
  %tobool22.not = icmp eq i32 %filler_done.0, 0
  br i1 %tobool22.not, label %if.end24, label %while.cond, !llvm.loop !594

if.end24:                                         ; preds = %if.then, %while.body
  %filler_done.1 = phi i32 [ %filler_done.0, %while.body ], [ 1, %if.then ]
  %18 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %ve, align 8
  %wid33 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 0, i32 0
  store i32 0, i32* %i, align 4, !tbaa !37
  %19 = load i32, i32* %7, align 4, !tbaa !37
  %cmp2893 = icmp sgt i32 %19, -1
  br i1 %cmp2893, label %land.rhs30, label %if.then45

land.rhs30:                                       ; preds = %if.end24, %for.inc38
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc38 ], [ 0, %if.end24 ]
  %20 = phi i32 [ %23, %for.inc38 ], [ %19, %if.end24 ]
  %storemerge9294 = phi i32 [ %inc39, %for.inc38 ], [ 0, %if.end24 ]
  %21 = load i32, i32* %wid33, align 4, !tbaa !574
  %cmp34.not = icmp eq i32 %20, %21
  br i1 %cmp34.not, label %for.end40.split.loop.exit, label %for.inc38

for.inc38:                                        ; preds = %land.rhs30
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %inc39 = add nuw nsw i32 %storemerge9294, 1
  %22 = trunc i64 %indvars.iv.next to i32
  store i32 %22, i32* %i, align 4, !tbaa !37
  %arrayidx27 = getelementptr inbounds i32, i32* %7, i64 %indvars.iv.next
  %23 = load i32, i32* %arrayidx27, align 4, !tbaa !37
  %cmp28 = icmp sgt i32 %23, -1
  br i1 %cmp28, label %land.rhs30, label %for.end40, !llvm.loop !595

for.end40.split.loop.exit:                        ; preds = %land.rhs30
  %24 = trunc i64 %indvars.iv to i32
  br label %for.end40

for.end40:                                        ; preds = %for.inc38, %for.end40.split.loop.exit
  %storemerge92.lcssa.ph = phi i32 [ %24, %for.end40.split.loop.exit ], [ %inc39, %for.inc38 ]
  %idxprom41.phi.trans.insert = zext i32 %storemerge92.lcssa.ph to i64
  %arrayidx42.phi.trans.insert = getelementptr inbounds i32, i32* %7, i64 %idxprom41.phi.trans.insert
  %.pre = load i32, i32* %arrayidx42.phi.trans.insert, align 4, !tbaa !37
  %idxprom41 = zext i32 %storemerge92.lcssa.ph to i64
  %arrayidx42 = getelementptr inbounds i32, i32* %7, i64 %idxprom41
  %cmp43 = icmp slt i32 %.pre, 0
  br i1 %cmp43, label %if.then45, label %if.else

if.then45:                                        ; preds = %if.end24, %for.end40
  %arrayidx42102 = phi i32* [ %arrayidx42, %for.end40 ], [ %7, %if.end24 ]
  %cmp46 = icmp sgt i32 %maxwpf.addr.0.ph.ph, 0
  br i1 %cmp46, label %if.then48, label %while.cond.outer.backedge

if.then48:                                        ; preds = %if.then45
  %25 = load i32, i32* %wid33, align 4, !tbaa !574
  store i32 %25, i32* %arrayidx42102, align 4, !tbaa !37
  %26 = load i32, i32* %i, align 4, !tbaa !37
  %add52 = add nsw i32 %26, 1
  %idxprom53 = sext i32 %add52 to i64
  %arrayidx54 = getelementptr inbounds i32, i32* %7, i64 %idxprom53
  store i32 -1, i32* %arrayidx54, align 4, !tbaa !37
  %dec = add nsw i32 %maxwpf.addr.0.ph.ph, -1
  br label %if.end63.sink.split

if.else:                                          ; preds = %for.end40
  %27 = load i32, i32* %bghist, align 8, !tbaa !571
  %tobool58.not = icmp eq i32 %27, 0
  br i1 %tobool58.not, label %if.end63.sink.split, label %while.cond.outer.backedge

while.cond.outer.backedge:                        ; preds = %if.else, %if.then45
  br label %while.cond.outer, !llvm.loop !594

if.end63.sink.split:                              ; preds = %if.else, %if.then48
  %maxwpf.addr.1.ph = phi i32 [ %dec, %if.then48 ], [ %maxwpf.addr.0.ph.ph, %if.else ]
  %dec60 = add nsw i32 %maxhist.addr.0.ph.ph, -1
  %valid61 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 0, i32 8
  store i32 1, i32* %valid61, align 4, !tbaa !583
  br label %while.cond.outer.outer, !llvm.loop !594

while.cond.outer.outer:                           ; preds = %if.end63.sink.split, %while.cond.preheader
  %filler_done.0.ph.ph = phi i32 [ %filler_done.1, %if.end63.sink.split ], [ 0, %while.cond.preheader ]
  %maxhist.addr.0.ph.ph = phi i32 [ %dec60, %if.end63.sink.split ], [ %maxhist, %while.cond.preheader ]
  %maxwpf.addr.0.ph.ph = phi i32 [ %maxwpf.addr.1.ph, %if.end63.sink.split ], [ %maxwpf, %while.cond.preheader ]
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %while.cond.outer.backedge, %while.cond.outer.outer
  %filler_done.0.ph = phi i32 [ %filler_done.0.ph.ph, %while.cond.outer.outer ], [ %filler_done.1, %while.cond.outer.backedge ]
  %cmp18 = icmp sgt i32 %maxhist.addr.0.ph.ph, 0
  br label %while.cond

while.end:                                        ; preds = %while.cond, %land.lhs.true
  call void @ckd_free(i8* %call4) #34
  %call64 = call i32 @heap_destroy(i8* %call) #34
  call fastcc void @vithist_frame_gc(%struct.vithist_t* %vh, i32 %frm) #36
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #38
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @vithist_frame_gc(%struct.vithist_t* nocapture %vh, i32 %frm) unnamed_addr #0 {
entry:
  %frame_start = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 1
  %0 = load i32*, i32** %frame_start, align 8, !tbaa !145
  %idxprom = sext i32 %frm to i64
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom
  %1 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %n_entry = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 2
  %2 = load i32, i32* %n_entry, align 8, !tbaa !569
  %entry1 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 0
  %cmp.not.not77 = icmp slt i32 %1, %2
  br i1 %cmp.not.not77, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.inc
  %te.082 = phi i32 [ %te.1, %for.inc ], [ %1, %entry ]
  %i.080 = phi i32 [ %inc18, %for.inc ], [ %1, %entry ]
  %bv.079 = phi i32 [ %bv.2, %for.inc ], [ -1, %entry ]
  %bs.078 = phi i32 [ %bs.2, %for.inc ], [ -2147483648, %entry ]
  %3 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry1, align 8, !tbaa !143
  %shr = ashr i32 %i.080, 14
  %idxprom2 = sext i32 %shr to i64
  %arrayidx3 = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %3, i64 %idxprom2
  %4 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %arrayidx3, align 8, !tbaa !74
  %and = and i32 %i.080, 16383
  %5 = zext i32 %and to i64
  %add.ptr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %4, i64 %5
  %valid = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %4, i64 %5, i32 8
  %6 = load i32, i32* %valid, align 4, !tbaa !583
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %cmp4.not = icmp eq i32 %i.080, %te.082
  br i1 %cmp4.not, label %if.end, label %if.then5

if.then5:                                         ; preds = %if.then
  %shr7 = ashr i32 %te.082, 14
  %idxprom8 = sext i32 %shr7 to i64
  %arrayidx9 = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %3, i64 %idxprom8
  %7 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %arrayidx9, align 8, !tbaa !74
  %and10 = and i32 %te.082, 16383
  %8 = zext i32 %and10 to i64
  %add.ptr12 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %7, i64 %8
  %9 = bitcast %struct.vithist_entry_t* %add.ptr12 to i8*
  %10 = bitcast %struct.vithist_entry_t* %add.ptr to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(36) %9, i8* noundef nonnull align 4 dereferenceable(36) %10, i64 36, i1 false), !tbaa.struct !586
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.then
  %score = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %4, i64 %5, i32 5
  %11 = load i32, i32* %score, align 4, !tbaa !580
  %cmp13 = icmp sgt i32 %11, %bs.078
  %spec.select = select i1 %cmp13, i32 %11, i32 %bs.078
  %spec.select74 = select i1 %cmp13, i32 %te.082, i32 %bv.079
  %inc = add nsw i32 %te.082, 1
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.end
  %bs.2 = phi i32 [ %spec.select, %if.end ], [ %bs.078, %for.body ]
  %bv.2 = phi i32 [ %spec.select74, %if.end ], [ %bv.079, %for.body ]
  %te.1 = phi i32 [ %inc, %if.end ], [ %te.082, %for.body ]
  %inc18 = add nsw i32 %i.080, 1
  %exitcond.not = icmp eq i32 %inc18, %2
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !596

for.end:                                          ; preds = %for.inc, %entry
  %bv.0.lcssa = phi i32 [ -1, %entry ], [ %bv.2, %for.inc ]
  %te.0.lcssa = phi i32 [ %1, %entry ], [ %te.1, %for.inc ]
  %bestvh = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 7
  %12 = load i32*, i32** %bestvh, align 8, !tbaa !147
  %arrayidx20 = getelementptr inbounds i32, i32* %12, i64 %idxprom
  store i32 %bv.0.lcssa, i32* %arrayidx20, align 4, !tbaa !37
  %13 = load i32, i32* %n_entry, align 8, !tbaa !569
  %sub22 = add nsw i32 %13, -1
  %shr23 = ashr i32 %sub22, 14
  %sub24 = add nsw i32 %te.0.lcssa, -1
  %shr25 = ashr i32 %sub24, 14
  %cmp2775 = icmp sgt i32 %shr23, %shr25
  br i1 %cmp2775, label %for.body28.preheader, label %for.end36

for.body28.preheader:                             ; preds = %for.end
  %14 = sext i32 %shr23 to i64
  %15 = sext i32 %shr25 to i64
  br label %for.body28

for.body28:                                       ; preds = %for.body28.preheader, %for.body28
  %indvars.iv = phi i64 [ %14, %for.body28.preheader ], [ %indvars.iv.next, %for.body28 ]
  %16 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry1, align 8, !tbaa !143
  %arrayidx31 = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %16, i64 %indvars.iv
  %17 = bitcast %struct.vithist_entry_t** %arrayidx31 to i8**
  %18 = load i8*, i8** %17, align 8, !tbaa !74
  tail call void @ckd_free(i8* %18) #34
  %19 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry1, align 8, !tbaa !143
  %arrayidx34 = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %19, i64 %indvars.iv
  store %struct.vithist_entry_t* null, %struct.vithist_entry_t** %arrayidx34, align 8, !tbaa !74
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %cmp27 = icmp sgt i64 %indvars.iv.next, %15
  br i1 %cmp27, label %for.body28, label %for.end36, !llvm.loop !597

for.end36:                                        ; preds = %for.body28, %for.end
  store i32 %te.0.lcssa, i32* %n_entry, align 8, !tbaa !569
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @vithist_frame_windup(%struct.vithist_t* nocapture %vh, i32 %frm, %struct._IO_FILE* %fp, %struct.kbcore_t* nocapture readonly %kbc) local_unnamed_addr #0 {
entry:
  %n_frm = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 3
  %0 = load i32, i32* %n_frm, align 4, !tbaa !584
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* %n_frm, align 4, !tbaa !584
  %n_entry = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 2
  %1 = load i32, i32* %n_entry, align 8, !tbaa !569
  %frame_start = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 1
  %2 = load i32*, i32** %frame_start, align 8, !tbaa !145
  %idxprom = sext i32 %inc to i64
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom
  store i32 %1, i32* %arrayidx, align 4, !tbaa !37
  %tobool.not = icmp eq %struct._IO_FILE* %fp, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @vithist_dump(%struct.vithist_t* nonnull %vh, i32 %frm, %struct.kbcore_t* %kbc, %struct._IO_FILE* nonnull %fp) #36
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  tail call fastcc void @vithist_lmstate_reset(%struct.vithist_t* nonnull %vh) #36
  %bestscore = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 6
  %3 = load i32*, i32** %bestscore, align 8, !tbaa !146
  %4 = load i32, i32* %n_frm, align 4, !tbaa !584
  %idxprom3 = sext i32 %4 to i64
  %arrayidx4 = getelementptr inbounds i32, i32* %3, i64 %idxprom3
  store i32 -2147483648, i32* %arrayidx4, align 4, !tbaa !37
  %bestvh = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 7
  %5 = load i32*, i32** %bestvh, align 8, !tbaa !147
  %6 = load i32, i32* %n_frm, align 4, !tbaa !584
  %idxprom6 = sext i32 %6 to i64
  %arrayidx7 = getelementptr inbounds i32, i32* %5, i64 %idxprom6
  store i32 -1, i32* %arrayidx7, align 4, !tbaa !37
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @vithist_dump(%struct.vithist_t* nocapture readonly %vh, i32 %frm, %struct.kbcore_t* nocapture readonly %kbc, %struct._IO_FILE* nocapture %fp) local_unnamed_addr #14 {
entry:
  %dict1 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 2
  %0 = load %struct.dict_t*, %struct.dict_t** %dict1, align 8, !tbaa !16
  %lm2 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 4
  %1 = load %struct.lm_s*, %struct.lm_s** %lm2, align 8, !tbaa !17
  %cmp = icmp sgt i32 %frm, -1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %frame_start = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 1
  %2 = load i32*, i32** %frame_start, align 8, !tbaa !145
  %add = add nuw nsw i32 %frm, 1
  %idxprom128 = zext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom128
  %3 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %idxprom4129 = zext i32 %frm to i64
  %arrayidx5 = getelementptr inbounds i32, i32* %2, i64 %idxprom4129
  %4 = load i32, i32* %arrayidx5, align 4, !tbaa !37
  %sub = sub nsw i32 %3, %4
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6.464, i64 0, i64 0), i32 %frm, i32 %sub) #36
  br label %if.end

if.else:                                          ; preds = %entry
  %n_frm = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 3
  %5 = load i32, i32* %n_frm, align 4, !tbaa !584
  %sub6 = add nsw i32 %5, -1
  %n_entry = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 2
  %6 = load i32, i32* %n_entry, align 8, !tbaa !569
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7.465, i64 0, i64 0), i32 %5, i32 %6) #36
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %sf.0 = phi i32 [ %frm, %if.then ], [ 0, %if.else ]
  %ef.0 = phi i32 [ %frm, %if.then ], [ %sub6, %if.else ]
  %call9 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.8.466, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.467, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.468, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11.469, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12.470, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13.471, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.472, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.473, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.474, i64 0, i64 0)) #36
  %bestscore = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 6
  %bestvh = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 7
  %frame_start16 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 1
  %entry26 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 0
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %0, i64 0, i32 4
  %wordstr = getelementptr inbounds %struct.lm_s, %struct.lm_s* %1, i64 0, i32 4
  %cmp10.not135 = icmp sgt i32 %sf.0, %ef.0
  br i1 %cmp10.not135, label %for.end65, label %for.body.preheader

for.body.preheader:                               ; preds = %if.end
  %7 = zext i32 %sf.0 to i64
  %8 = add i32 %ef.0, 1
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc63
  %indvars.iv = phi i64 [ %7, %for.body.preheader ], [ %indvars.iv.next, %for.inc63 ]
  %9 = load i32*, i32** %bestscore, align 8, !tbaa !146
  %arrayidx12 = getelementptr inbounds i32, i32* %9, i64 %indvars.iv
  %10 = load i32, i32* %arrayidx12, align 4, !tbaa !37
  %11 = load i32*, i32** %bestvh, align 8, !tbaa !147
  %arrayidx14 = getelementptr inbounds i32, i32* %11, i64 %indvars.iv
  %12 = load i32, i32* %arrayidx14, align 4, !tbaa !37
  %13 = trunc i64 %indvars.iv to i32
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.475, i64 0, i64 0), i32 %13, i32 %10, i32 %12) #36
  %14 = load i32*, i32** %frame_start16, align 8, !tbaa !145
  %arrayidx18 = getelementptr inbounds i32, i32* %14, i64 %indvars.iv
  %15 = load i32, i32* %arrayidx18, align 4, !tbaa !37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx23130 = getelementptr inbounds i32, i32* %14, i64 %indvars.iv.next
  %16 = load i32, i32* %arrayidx23130, align 4, !tbaa !37
  %cmp24131 = icmp slt i32 %15, %16
  br i1 %cmp24131, label %for.body25, label %if.then60

for.body25:                                       ; preds = %for.body, %if.end53
  %j.0132 = phi i32 [ %inc, %if.end53 ], [ %15, %for.body ]
  %shr = ashr i32 %j.0132, 14
  %and = and i32 %j.0132, 16383
  %17 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry26, align 8, !tbaa !143
  %idxprom27 = sext i32 %shr to i64
  %arrayidx28 = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %17, i64 %idxprom27
  %18 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %arrayidx28, align 8, !tbaa !74
  %19 = zext i32 %and to i64
  %valid = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 %19, i32 8
  %20 = load i32, i32* %valid, align 4, !tbaa !583
  %tobool.not = icmp eq i32 %20, 0
  %cond = select i1 %tobool.not, i32 42, i32 32
  %sf29 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 %19, i32 1
  %21 = load i16, i16* %sf29, align 4, !tbaa !576
  %conv = sext i16 %21 to i32
  %ef30 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 %19, i32 2
  %22 = load i16, i16* %ef30, align 2, !tbaa !577
  %conv31 = sext i16 %22 to i32
  %score = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 %19, i32 5
  %23 = load i32, i32* %score, align 4, !tbaa !580
  %ascr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 %19, i32 3
  %24 = load i32, i32* %ascr, align 4, !tbaa !578
  %lscr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 %19, i32 4
  %25 = load i32, i32* %lscr, align 4, !tbaa !579
  %pred = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 %19, i32 6
  %26 = load i32, i32* %pred, align 4, !tbaa !581
  %type = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 %19, i32 7
  %27 = load i32, i32* %type, align 4, !tbaa !582
  %28 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %wid = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 %19, i32 0
  %29 = load i32, i32* %wid, align 4, !tbaa !574
  %idxprom32 = sext i32 %29 to i64
  %word34 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %28, i64 %idxprom32, i32 0
  %30 = load i8*, i8** %word34, align 8, !tbaa !510
  %call35 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.18.476, i64 0, i64 0), i32 %cond, i32 %j.0132, i32 %conv, i32 %conv31, i32 %23, i32 %24, i32 %25, i32 %26, i32 %27, i8* %30) #36
  %31 = load i8**, i8*** %wordstr, align 8, !tbaa !437
  %arrayidx37 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 %19, i32 9, i32 0, i32 0, i64 0
  %32 = load i16, i16* %arrayidx37, align 4, !tbaa !63
  %idxprom38 = zext i16 %32 to i64
  %arrayidx39 = getelementptr inbounds i8*, i8** %31, i64 %idxprom38
  %33 = load i8*, i8** %arrayidx39, align 8, !tbaa !74
  %call40 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.477, i64 0, i64 0), i8* %33) #36
  %arrayidx44 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %18, i64 %19, i32 9, i32 0, i32 0, i64 1
  %34 = load i16, i16* %arrayidx44, align 2, !tbaa !63
  %cmp46.not = icmp eq i16 %34, -1
  br i1 %cmp46.not, label %if.end53, label %if.then48

if.then48:                                        ; preds = %for.body25
  %35 = load i8**, i8*** %wordstr, align 8, !tbaa !437
  %idxprom50 = zext i16 %34 to i64
  %arrayidx51 = getelementptr inbounds i8*, i8** %35, i64 %idxprom50
  %36 = load i8*, i8** %arrayidx51, align 8, !tbaa !74
  %call52 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20.478, i64 0, i64 0), i8* %36) #36
  br label %if.end53

if.end53:                                         ; preds = %if.then48, %for.body25
  %37 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21.479, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %fp)
  %inc = add nsw i32 %j.0132, 1
  %38 = load i32*, i32** %frame_start16, align 8, !tbaa !145
  %arrayidx23 = getelementptr inbounds i32, i32* %38, i64 %indvars.iv.next
  %39 = load i32, i32* %arrayidx23, align 4, !tbaa !37
  %cmp24 = icmp slt i32 %inc, %39
  br i1 %cmp24, label %for.body25, label %for.end, !llvm.loop !598

for.end:                                          ; preds = %if.end53
  %arrayidx57.phi.trans.insert = getelementptr inbounds i32, i32* %38, i64 %indvars.iv
  %.pre = load i32, i32* %arrayidx57.phi.trans.insert, align 4, !tbaa !37
  %cmp58 = icmp eq i32 %inc, %.pre
  br i1 %cmp58, label %if.then60, label %for.inc63

if.then60:                                        ; preds = %for.body, %for.end
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  br label %for.inc63

for.inc63:                                        ; preds = %for.end, %if.then60
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %8, %lftr.wideiv
  br i1 %exitcond.not, label %for.end65, label %for.body, !llvm.loop !599

for.end65:                                        ; preds = %for.inc63, %if.end
  %40 = tail call i64 @fwrite(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23.480, i64 0, i64 0), i64 12, i64 1, %struct._IO_FILE* %fp)
  %call67 = tail call i32 @fflush(%struct._IO_FILE* %fp) #36
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @vithist_lmstate_reset(%struct.vithist_t* nocapture %vh) unnamed_addr #0 {
entry:
  %lwidlist = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 9
  %lms2vh_root = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 8
  %lgn.033 = load %struct.gnode_s*, %struct.gnode_s** %lwidlist, align 8, !tbaa !74
  %tobool.not34 = icmp eq %struct.gnode_s* %lgn.033, null
  br i1 %tobool.not34, label %for.end11, label %for.body

for.body:                                         ; preds = %entry, %for.end
  %lgn.035 = phi %struct.gnode_s* [ %lgn.0, %for.end ], [ %lgn.033, %entry ]
  %int32 = bitcast %struct.gnode_s* %lgn.035 to i32*
  %0 = load i32, i32* %int32, align 8, !tbaa !63
  %1 = load %struct.vh_lms2vh_t**, %struct.vh_lms2vh_t*** %lms2vh_root, align 8, !tbaa !148
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds %struct.vh_lms2vh_t*, %struct.vh_lms2vh_t** %1, i64 %idxprom
  %2 = load %struct.vh_lms2vh_t*, %struct.vh_lms2vh_t** %arrayidx, align 8, !tbaa !74
  %children = getelementptr inbounds %struct.vh_lms2vh_t, %struct.vh_lms2vh_t* %2, i64 0, i32 3
  %gn.030 = load %struct.gnode_s*, %struct.gnode_s** %children, align 8, !tbaa !74
  %tobool2.not31 = icmp eq %struct.gnode_s* %gn.030, null
  br i1 %tobool2.not31, label %for.end, label %for.body3

for.body3:                                        ; preds = %for.body, %for.body3
  %gn.032 = phi %struct.gnode_s* [ %gn.0, %for.body3 ], [ %gn.030, %for.body ]
  %ptr = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.032, i64 0, i32 0, i32 0
  %3 = load i8*, i8** %ptr, align 8, !tbaa !63
  tail call void @ckd_free(i8* %3) #34
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.032, i64 0, i32 1
  %gn.0 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !74
  %tobool2.not = icmp eq %struct.gnode_s* %gn.0, null
  br i1 %tobool2.not, label %for.end.loopexit, label %for.body3, !llvm.loop !600

for.end.loopexit:                                 ; preds = %for.body3
  %.pre = load %struct.gnode_s*, %struct.gnode_s** %children, align 8, !tbaa !591
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.body
  %4 = phi %struct.gnode_s* [ %.pre, %for.end.loopexit ], [ null, %for.body ]
  tail call void @glist_free(%struct.gnode_s* %4) #34
  %5 = bitcast %struct.vh_lms2vh_t* %2 to i8*
  tail call void @ckd_free(i8* %5) #34
  %6 = load %struct.vh_lms2vh_t**, %struct.vh_lms2vh_t*** %lms2vh_root, align 8, !tbaa !148
  %arrayidx8 = getelementptr inbounds %struct.vh_lms2vh_t*, %struct.vh_lms2vh_t** %6, i64 %idxprom
  store %struct.vh_lms2vh_t* null, %struct.vh_lms2vh_t** %arrayidx8, align 8, !tbaa !74
  %next10 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %lgn.035, i64 0, i32 1
  %lgn.0 = load %struct.gnode_s*, %struct.gnode_s** %next10, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.gnode_s* %lgn.0, null
  br i1 %tobool.not, label %for.end11.loopexit, label %for.body, !llvm.loop !601

for.end11.loopexit:                               ; preds = %for.end
  %.pre36 = load %struct.gnode_s*, %struct.gnode_s** %lwidlist, align 8, !tbaa !573
  br label %for.end11

for.end11:                                        ; preds = %for.end11.loopexit, %entry
  %7 = phi %struct.gnode_s* [ %.pre36, %for.end11.loopexit ], [ null, %entry ]
  tail call void @glist_free(%struct.gnode_s* %7) #34
  store %struct.gnode_s* null, %struct.gnode_s** %lwidlist, align 8, !tbaa !573
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @vithist_utt_end(%struct.vithist_t* nocapture %vh, %struct.kbcore_t* nocapture readonly %kbc) local_unnamed_addr #0 {
entry:
  %n_frm = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 3
  %frame_start = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 1
  %lm8 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 4
  %dict9 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 2
  %entry13 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 0
  %n_entry = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 2
  br label %tailrecurse

tailrecurse:                                      ; preds = %if.then30, %entry
  %0 = load i32, i32* %n_frm, align 4, !tbaa !584
  br label %for.cond

for.cond:                                         ; preds = %for.body, %tailrecurse
  %f.0.in = phi i32 [ %0, %tailrecurse ], [ %f.0, %for.body ]
  %f.0 = add nsw i32 %f.0.in, -1
  %cmp = icmp sgt i32 %f.0.in, 0
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %1 = load i32*, i32** %frame_start, align 8, !tbaa !145
  %idxprom160 = zext i32 %f.0 to i64
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom160
  %2 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %idxprom2161 = zext i32 %f.0.in to i64
  %arrayidx3 = getelementptr inbounds i32, i32* %1, i64 %idxprom2161
  %3 = load i32, i32* %arrayidx3, align 4, !tbaa !37
  %cmp4 = icmp slt i32 %2, %3
  br i1 %cmp4, label %for.body12.preheader, label %for.cond, !llvm.loop !602

for.body12.preheader:                             ; preds = %for.body
  %4 = load %struct.lm_s*, %struct.lm_s** %lm8, align 8, !tbaa !17
  %finishlwid = getelementptr inbounds %struct.lm_s, %struct.lm_s* %4, i64 0, i32 6
  %5 = load i16, i16* %finishlwid, align 2, !tbaa !29
  %6 = load %struct.dict_t*, %struct.dict_t** %dict9, align 8, !tbaa !16
  %finishwid = getelementptr inbounds %struct.dict_t, %struct.dict_t* %6, i64 0, i32 12
  br label %for.body12

for.body12:                                       ; preds = %for.body12.preheader, %for.body12
  %i.0171 = phi i32 [ %inc, %for.body12 ], [ %2, %for.body12.preheader ]
  %bestve.0170 = phi %struct.vithist_entry_t* [ %bestve.1, %for.body12 ], [ null, %for.body12.preheader ]
  %bestvh.0169 = phi i32 [ %bestvh.1, %for.body12 ], [ -1, %for.body12.preheader ]
  %bestscore.0168 = phi i32 [ %bestscore.1, %for.body12 ], [ -2147483648, %for.body12.preheader ]
  %shr = ashr i32 %i.0171, 14
  %and = and i32 %i.0171, 16383
  %7 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry13, align 8, !tbaa !143
  %idxprom14 = sext i32 %shr to i64
  %arrayidx15 = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %7, i64 %idxprom14
  %8 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %arrayidx15, align 8, !tbaa !74
  %9 = zext i32 %and to i64
  %score = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %8, i64 %9, i32 5
  %10 = load i32, i32* %score, align 4, !tbaa !580
  %arrayidx16 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %8, i64 %9, i32 9, i32 0, i32 0, i64 1
  %11 = load i16, i16* %arrayidx16, align 2, !tbaa !63
  %arrayidx20 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %8, i64 %9, i32 9, i32 0, i32 0, i64 0
  %12 = load i16, i16* %arrayidx20, align 4, !tbaa !63
  %13 = load i32, i32* %finishwid, align 4, !tbaa !22
  %call = tail call i32 @lm_tg_score(%struct.lm_s* %4, i16 zeroext %11, i16 zeroext %12, i16 zeroext %5, i32 %13) #34
  %add21 = add nsw i32 %call, %10
  %cmp22 = icmp slt i32 %bestscore.0168, %add21
  %add.ptr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %8, i64 %9
  %bestscore.1 = select i1 %cmp22, i32 %add21, i32 %bestscore.0168
  %bestvh.1 = select i1 %cmp22, i32 %i.0171, i32 %bestvh.0169
  %bestve.1 = select i1 %cmp22, %struct.vithist_entry_t* %add.ptr, %struct.vithist_entry_t* %bestve.0170
  %inc = add nsw i32 %i.0171, 1
  %cmp11 = icmp slt i32 %inc, %3
  br i1 %cmp11, label %for.body12, label %for.end26, !llvm.loop !603

for.end26:                                        ; preds = %for.body12
  %.pre = load i32, i32* %n_frm, align 4, !tbaa !584
  %sub28 = add nsw i32 %.pre, -1
  %cmp29.not = icmp eq i32 %f.0.in, %.pre
  br i1 %cmp29.not, label %if.end42, label %if.then30

if.then30:                                        ; preds = %for.end26
  store i32 %sub28, i32* %n_frm, align 4, !tbaa !584
  %silwid = getelementptr inbounds %struct.dict_t, %struct.dict_t* %6, i64 0, i32 13
  %14 = load i32, i32* %silwid, align 8, !tbaa !604
  %score34 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %bestve.1, i64 0, i32 5
  %15 = load i32, i32* %score34, align 4, !tbaa !580
  tail call void @vithist_rescore(%struct.vithist_t* nonnull %vh, %struct.kbcore_t* %kbc, i32 %14, i32 %sub28, i32 %15, i32 %bestvh.1, i32 -1) #36
  %16 = load i32, i32* %n_frm, align 4, !tbaa !584
  %add36 = add nsw i32 %16, 1
  store i32 %add36, i32* %n_frm, align 4, !tbaa !584
  %17 = load i32, i32* %n_entry, align 8, !tbaa !569
  %18 = load i32*, i32** %frame_start, align 8, !tbaa !145
  %idxprom39 = sext i32 %add36 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %18, i64 %idxprom39
  store i32 %17, i32* %arrayidx40, align 4, !tbaa !37
  br label %tailrecurse

if.end42:                                         ; preds = %for.end26
  %19 = load i32, i32* %n_entry, align 8, !tbaa !569
  %call44 = tail call fastcc %struct.vithist_entry_t* @vithist_entry_alloc(%struct.vithist_t* nonnull %vh) #36
  %20 = load i32, i32* %finishwid, align 4, !tbaa !22
  %wid = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call44, i64 0, i32 0
  store i32 %20, i32* %wid, align 4, !tbaa !574
  %ef = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %bestve.1, i64 0, i32 2
  %21 = load i16, i16* %ef, align 2, !tbaa !577
  %add50 = add i16 %21, 1
  %sf = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call44, i64 0, i32 1
  store i16 %add50, i16* %sf, align 4, !tbaa !576
  %22 = load i32, i32* %n_frm, align 4, !tbaa !584
  %conv53 = trunc i32 %22 to i16
  %ef54 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call44, i64 0, i32 2
  store i16 %conv53, i16* %ef54, align 2, !tbaa !577
  %ascr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call44, i64 0, i32 3
  store i32 0, i32* %ascr, align 4, !tbaa !578
  %score55 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %bestve.1, i64 0, i32 5
  %23 = load i32, i32* %score55, align 4, !tbaa !580
  %sub56 = sub nsw i32 %bestscore.1, %23
  %lscr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call44, i64 0, i32 4
  store i32 %sub56, i32* %lscr, align 4, !tbaa !579
  %score57 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call44, i64 0, i32 5
  store i32 %bestscore.1, i32* %score57, align 4, !tbaa !580
  %pred = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call44, i64 0, i32 6
  store i32 %bestvh.1, i32* %pred, align 4, !tbaa !581
  %type = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call44, i64 0, i32 7
  store i32 0, i32* %type, align 4, !tbaa !582
  %valid = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call44, i64 0, i32 8
  store i32 1, i32* %valid, align 4, !tbaa !583
  %arrayidx61 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call44, i64 0, i32 9, i32 0, i32 0, i64 0
  store i16 %5, i16* %arrayidx61, align 4, !tbaa !63
  %arrayidx69 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call44, i64 0, i32 9, i32 0, i32 0, i64 1
  store i16 %5, i16* %arrayidx69, align 2, !tbaa !63
  br label %cleanup

cleanup:                                          ; preds = %for.cond, %if.end42
  %retval.0 = phi i32 [ %19, %if.end42 ], [ -1, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @vithist_partialutt_end(%struct.vithist_t* nocapture readonly %vh, %struct.kbcore_t* nocapture readonly %kbc) local_unnamed_addr #0 {
entry:
  %n_frm = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 3
  %0 = load i32, i32* %n_frm, align 4, !tbaa !584
  %frame_start = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 1
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %f.0.in = phi i32 [ %0, %entry ], [ %f.0, %for.body ]
  %f.0 = add nsw i32 %f.0.in, -1
  %cmp = icmp sgt i32 %f.0.in, 0
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %1 = load i32*, i32** %frame_start, align 8, !tbaa !145
  %idxprom87 = zext i32 %f.0 to i64
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom87
  %2 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %idxprom288 = zext i32 %f.0.in to i64
  %arrayidx3 = getelementptr inbounds i32, i32* %1, i64 %idxprom288
  %3 = load i32, i32* %arrayidx3, align 4, !tbaa !37
  %cmp4 = icmp slt i32 %2, %3
  br i1 %cmp4, label %if.end7, label %for.cond, !llvm.loop !605

if.end7:                                          ; preds = %for.body
  %cmp10.not = icmp eq i32 %f.0.in, %0
  br i1 %cmp10.not, label %for.body17.preheader, label %cleanup

for.body17.preheader:                             ; preds = %if.end7
  %lm13 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 4
  %4 = load %struct.lm_s*, %struct.lm_s** %lm13, align 8, !tbaa !17
  %dict14 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 2
  %5 = load %struct.dict_t*, %struct.dict_t** %dict14, align 8, !tbaa !16
  %finishlwid = getelementptr inbounds %struct.lm_s, %struct.lm_s* %4, i64 0, i32 6
  %6 = load i16, i16* %finishlwid, align 2, !tbaa !29
  %entry18 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 0
  %finishwid = getelementptr inbounds %struct.dict_t, %struct.dict_t* %5, i64 0, i32 12
  br label %for.body17

for.body17:                                       ; preds = %for.body17.preheader, %for.body17
  %i.095 = phi i32 [ %inc, %for.body17 ], [ %2, %for.body17.preheader ]
  %bestvh.094 = phi i32 [ %spec.select83, %for.body17 ], [ -1, %for.body17.preheader ]
  %bestscore.093 = phi i32 [ %spec.select, %for.body17 ], [ -2147483648, %for.body17.preheader ]
  %shr = ashr i32 %i.095, 14
  %and = and i32 %i.095, 16383
  %7 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry18, align 8, !tbaa !143
  %idxprom19 = sext i32 %shr to i64
  %arrayidx20 = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %7, i64 %idxprom19
  %8 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %arrayidx20, align 8, !tbaa !74
  %9 = zext i32 %and to i64
  %score = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %8, i64 %9, i32 5
  %10 = load i32, i32* %score, align 4, !tbaa !580
  %arrayidx21 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %8, i64 %9, i32 9, i32 0, i32 0, i64 1
  %11 = load i16, i16* %arrayidx21, align 2, !tbaa !63
  %arrayidx25 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %8, i64 %9, i32 9, i32 0, i32 0, i64 0
  %12 = load i16, i16* %arrayidx25, align 4, !tbaa !63
  %13 = load i32, i32* %finishwid, align 4, !tbaa !22
  %call = tail call i32 @lm_tg_score(%struct.lm_s* %4, i16 zeroext %11, i16 zeroext %12, i16 zeroext %6, i32 %13) #34
  %add26 = add nsw i32 %call, %10
  %cmp27 = icmp slt i32 %bestscore.093, %add26
  %spec.select = select i1 %cmp27, i32 %add26, i32 %bestscore.093
  %spec.select83 = select i1 %cmp27, i32 %i.095, i32 %bestvh.094
  %inc = add i32 %i.095, 1
  %exitcond.not = icmp eq i32 %inc, %3
  br i1 %exitcond.not, label %cleanup, label %for.body17, !llvm.loop !606

cleanup:                                          ; preds = %for.cond, %for.body17, %if.end7
  %retval.0 = phi i32 [ -1, %if.end7 ], [ %spec.select83, %for.body17 ], [ -1, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define void @vithist_utt_reset(%struct.vithist_t* nocapture %vh) local_unnamed_addr #0 {
entry:
  tail call fastcc void @vithist_lmstate_reset(%struct.vithist_t* %vh) #36
  %n_entry = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 2
  %0 = load i32, i32* %n_entry, align 8, !tbaa !569
  %entry1 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 0
  %cmp19 = icmp sgt i32 %0, 0
  br i1 %cmp19, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %sub = add nsw i32 %0, -1
  %shr21 = lshr i32 %sub, 14
  %1 = zext i32 %shr21 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ %1, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %2 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry1, align 8, !tbaa !143
  %arrayidx = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %2, i64 %indvars.iv
  %3 = bitcast %struct.vithist_entry_t** %arrayidx to i8**
  %4 = load i8*, i8** %3, align 8, !tbaa !74
  tail call void @ckd_free(i8* %4) #34
  %5 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry1, align 8, !tbaa !143
  %arrayidx4 = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %5, i64 %indvars.iv
  store %struct.vithist_entry_t* null, %struct.vithist_entry_t** %arrayidx4, align 8, !tbaa !74
  %6 = trunc i64 %indvars.iv to i32
  %cmp = icmp sgt i32 %6, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !607

for.end:                                          ; preds = %for.body, %entry
  store i32 0, i32* %n_entry, align 8, !tbaa !569
  %bestscore = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 6
  %7 = load i32*, i32** %bestscore, align 8, !tbaa !146
  store i32 -2147483648, i32* %7, align 4, !tbaa !37
  %bestvh = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 7
  %8 = load i32*, i32** %bestvh, align 8, !tbaa !147
  store i32 -1, i32* %8, align 4, !tbaa !37
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.gnode_s* @vithist_backtrace(%struct.vithist_t* nocapture readonly %vh, i32 %id) local_unnamed_addr #0 {
entry:
  %entry1 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 0
  %cmp33 = icmp sgt i32 %id, 0
  br i1 %cmp33, label %while.body, label %while.end

while.body:                                       ; preds = %entry, %while.body
  %id.addr.035 = phi i32 [ %16, %while.body ], [ %id, %entry ]
  %hyp.034 = phi %struct.gnode_s* [ %call9, %while.body ], [ null, %entry ]
  %shr32 = lshr i32 %id.addr.035, 14
  %and = and i32 %id.addr.035, 16383
  %0 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry1, align 8, !tbaa !143
  %1 = zext i32 %shr32 to i64
  %arrayidx = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %0, i64 %1
  %2 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %arrayidx, align 8, !tbaa !74
  %3 = zext i32 %and to i64
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 28, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i32 784) #34
  %wid = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %2, i64 %3, i32 0
  %4 = load i32, i32* %wid, align 4, !tbaa !574
  %id2 = bitcast i8* %call to i32*
  store i32 %4, i32* %id2, align 4, !tbaa !608
  %sf = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %2, i64 %3, i32 1
  %5 = load i16, i16* %sf, align 4, !tbaa !576
  %conv = sext i16 %5 to i32
  %sf3 = getelementptr inbounds i8, i8* %call, i64 8
  %6 = bitcast i8* %sf3 to i32*
  store i32 %conv, i32* %6, align 4, !tbaa !610
  %ef = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %2, i64 %3, i32 2
  %7 = load i16, i16* %ef, align 2, !tbaa !577
  %conv4 = sext i16 %7 to i32
  %ef5 = getelementptr inbounds i8, i8* %call, i64 12
  %8 = bitcast i8* %ef5 to i32*
  store i32 %conv4, i32* %8, align 4, !tbaa !611
  %ascr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %2, i64 %3, i32 3
  %9 = load i32, i32* %ascr, align 4, !tbaa !578
  %ascr6 = getelementptr inbounds i8, i8* %call, i64 16
  %10 = bitcast i8* %ascr6 to i32*
  store i32 %9, i32* %10, align 4, !tbaa !612
  %lscr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %2, i64 %3, i32 4
  %11 = load i32, i32* %lscr, align 4, !tbaa !579
  %lscr7 = getelementptr inbounds i8, i8* %call, i64 20
  %12 = bitcast i8* %lscr7 to i32*
  store i32 %11, i32* %12, align 4, !tbaa !613
  %type = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %2, i64 %3, i32 7
  %13 = load i32, i32* %type, align 4, !tbaa !582
  %type8 = getelementptr inbounds i8, i8* %call, i64 24
  %14 = bitcast i8* %type8 to i32*
  store i32 %13, i32* %14, align 4, !tbaa !614
  %vhid = getelementptr inbounds i8, i8* %call, i64 4
  %15 = bitcast i8* %vhid to i32*
  store i32 %id.addr.035, i32* %15, align 4, !tbaa !615
  %call9 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %hyp.034, i8* %call) #34
  %pred = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %2, i64 %3, i32 6
  %16 = load i32, i32* %pred, align 4, !tbaa !581
  %cmp = icmp sgt i32 %16, 0
  br i1 %cmp, label %while.body, label %while.end, !llvm.loop !616

while.end:                                        ; preds = %while.body, %entry
  %hyp.0.lcssa = phi %struct.gnode_s* [ null, %entry ], [ %call9, %while.body ]
  ret %struct.gnode_s* %hyp.0.lcssa
}

; Function Attrs: noinline nounwind optsize uwtable
define void @vithist_dag_write(%struct.vithist_t* nocapture readonly %vh, %struct.gnode_s* readonly %hyp, %struct.dict_t* nocapture readonly %dict, i32 %oldfmt, %struct._IO_FILE* nocapture %fp) local_unnamed_addr #0 {
entry:
  %n_frm = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 3
  %0 = load i32, i32* %n_frm, align 4, !tbaa !584
  %add = add nsw i32 %0, 1
  %conv = sext i32 %add to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv, i64 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i32 823) #34
  %1 = bitcast i8* %call to %struct.gnode_s**
  %n_entry = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 2
  %entry2 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %vh, i64 0, i32 0
  %2 = load i32, i32* %n_entry, align 8, !tbaa !569
  %cmp508 = icmp sgt i32 %2, 0
  br i1 %cmp508, label %for.body, label %for.cond79.preheader

for.cond79.preheader:                             ; preds = %for.inc76, %entry
  %tobool80.not499 = icmp eq %struct.gnode_s* %hyp, null
  br i1 %tobool80.not499, label %for.end103, label %for.body81

for.body:                                         ; preds = %entry, %for.inc76
  %i.0511 = phi i32 [ %inc77, %for.inc76 ], [ 0, %entry ]
  %3 = load %struct.vithist_entry_t**, %struct.vithist_entry_t*** %entry2, align 8, !tbaa !143
  %4 = lshr i32 %i.0511, 14
  %idxprom = zext i32 %4 to i64
  %arrayidx = getelementptr inbounds %struct.vithist_entry_t*, %struct.vithist_entry_t** %3, i64 %idxprom
  %5 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %arrayidx, align 8, !tbaa !74
  %and = and i32 %i.0511, 16383
  %6 = zext i32 %and to i64
  %add.ptr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %5, i64 %6
  %valid = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %5, i64 %6, i32 8
  %7 = load i32, i32* %valid, align 4, !tbaa !583
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %for.inc76, label %if.end

if.end:                                           ; preds = %for.body
  %sf3 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %5, i64 %6, i32 1
  %8 = load i16, i16* %sf3, align 4, !tbaa !576
  %conv4 = sext i16 %8 to i32
  %cmp5 = icmp slt i16 %8, 1
  br i1 %cmp5, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.end
  %add10 = add nsw i32 %conv4, 1
  %ef11 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %5, i64 %6, i32 2
  %9 = load i16, i16* %ef11, align 2, !tbaa !577
  %10 = icmp sgt i16 %9, 0
  %narrow = select i1 %10, i16 %9, i16 0
  %spec.select = zext i16 %narrow to i32
  br label %if.end21

if.else:                                          ; preds = %if.end
  %ef19 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %5, i64 %6, i32 2
  %11 = load i16, i16* %ef19, align 2, !tbaa !577
  %conv20 = sext i16 %11 to i32
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then7
  %sf.0 = phi i32 [ %add10, %if.then7 ], [ %conv4, %if.else ]
  %ef.0 = phi i32 [ %spec.select, %if.then7 ], [ %conv20, %if.else ]
  %idxprom22 = sext i32 %sf.0 to i64
  %arrayidx23 = getelementptr inbounds %struct.gnode_s*, %struct.gnode_s** %1, i64 %idxprom22
  %gn.0501 = load %struct.gnode_s*, %struct.gnode_s** %arrayidx23, align 8, !tbaa !74
  %tobool25.not502 = icmp eq %struct.gnode_s* %gn.0501, null
  br i1 %tobool25.not502, label %if.then33, label %for.body26.lr.ph

for.body26.lr.ph:                                 ; preds = %if.end21
  %wid27 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %add.ptr, i64 0, i32 0
  %12 = load i32, i32* %wid27, align 4, !tbaa !574
  br label %for.body26

for.cond24:                                       ; preds = %for.body26
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.0503, i64 0, i32 1
  %gn.0 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !74
  %tobool25.not = icmp eq %struct.gnode_s* %gn.0, null
  br i1 %tobool25.not, label %if.then33, label %for.body26, !llvm.loop !617

for.body26:                                       ; preds = %for.body26.lr.ph, %for.cond24
  %gn.0503 = phi %struct.gnode_s* [ %gn.0501, %for.body26.lr.ph ], [ %gn.0, %for.cond24 ]
  %13 = bitcast %struct.gnode_s* %gn.0503 to %struct.dagnode_t**
  %14 = load %struct.dagnode_t*, %struct.dagnode_t** %13, align 8, !tbaa !63
  %wid = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %14, i64 0, i32 0
  %15 = load i32, i32* %wid, align 8, !tbaa !618
  %cmp28 = icmp eq i32 %15, %12
  br i1 %cmp28, label %if.else42, label %for.cond24

if.then33:                                        ; preds = %for.cond24, %if.end21
  %call34 = tail call i8* @__ckd_calloc__(i64 1, i64 24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i64 0, i64 0), i32 854) #34
  %16 = bitcast i8* %call34 to %struct.dagnode_t*
  %wid35 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %add.ptr, i64 0, i32 0
  %17 = load i32, i32* %wid35, align 4, !tbaa !574
  %wid36 = bitcast i8* %call34 to i32*
  store i32 %17, i32* %wid36, align 8, !tbaa !618
  %fef = getelementptr inbounds i8, i8* %call34, i64 4
  %18 = bitcast i8* %fef to i32*
  store i32 %ef.0, i32* %18, align 4, !tbaa !620
  %lef = getelementptr inbounds i8, i8* %call34, i64 8
  %19 = bitcast i8* %lef to i32*
  store i32 %ef.0, i32* %19, align 8, !tbaa !621
  %seqid = getelementptr inbounds i8, i8* %call34, i64 12
  %20 = bitcast i8* %seqid to i32*
  store i32 -1, i32* %20, align 4, !tbaa !622
  %velist = getelementptr inbounds i8, i8* %call34, i64 16
  %21 = bitcast i8* %velist to %struct.gnode_s**
  store %struct.gnode_s* null, %struct.gnode_s** %21, align 8, !tbaa !623
  %22 = load %struct.gnode_s*, %struct.gnode_s** %arrayidx23, align 8, !tbaa !74
  %call39 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %22, i8* %call34) #34
  store %struct.gnode_s* %call39, %struct.gnode_s** %arrayidx23, align 8, !tbaa !74
  br label %if.end44

if.else42:                                        ; preds = %for.body26
  %lef43 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %14, i64 0, i32 2
  store i32 %ef.0, i32* %lef43, align 8, !tbaa !621
  br label %if.end44

if.end44:                                         ; preds = %if.else42, %if.then33
  %dn.3 = phi %struct.dagnode_t* [ %14, %if.else42 ], [ %16, %if.then33 ]
  %velist45 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %dn.3, i64 0, i32 4
  %gn.1504 = load %struct.gnode_s*, %struct.gnode_s** %velist45, align 8, !tbaa !74
  %tobool47.not505 = icmp eq %struct.gnode_s* %gn.1504, null
  br i1 %tobool47.not505, label %if.else71, label %for.body48.lr.ph

for.body48.lr.ph:                                 ; preds = %if.end44
  %ef53 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %5, i64 %6, i32 2
  %23 = load i16, i16* %ef53, align 2, !tbaa !577
  br label %for.body48

for.body48:                                       ; preds = %for.body48.lr.ph, %for.inc59
  %gn.1506 = phi %struct.gnode_s* [ %gn.1504, %for.body48.lr.ph ], [ %gn.1, %for.inc59 ]
  %24 = bitcast %struct.gnode_s* %gn.1506 to %struct.vithist_entry_t**
  %25 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %24, align 8, !tbaa !63
  %ef51 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %25, i64 0, i32 2
  %26 = load i16, i16* %ef51, align 2, !tbaa !577
  %cmp55 = icmp eq i16 %26, %23
  br i1 %cmp55, label %if.then63, label %for.inc59

for.inc59:                                        ; preds = %for.body48
  %next60 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.1506, i64 0, i32 1
  %gn.1 = load %struct.gnode_s*, %struct.gnode_s** %next60, align 8, !tbaa !74
  %tobool47.not = icmp eq %struct.gnode_s* %gn.1, null
  br i1 %tobool47.not, label %if.else71, label %for.body48, !llvm.loop !624

if.then63:                                        ; preds = %for.body48
  %score = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %5, i64 %6, i32 5
  %27 = load i32, i32* %score, align 4, !tbaa !580
  %score64 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %25, i64 0, i32 5
  %28 = load i32, i32* %score64, align 4, !tbaa !580
  %cmp65 = icmp sgt i32 %27, %28
  br i1 %cmp65, label %if.then67, label %for.inc76

if.then67:                                        ; preds = %if.then63
  %29 = bitcast %struct.gnode_s* %gn.1506 to %struct.vithist_entry_t**
  store %struct.vithist_entry_t* %add.ptr, %struct.vithist_entry_t** %29, align 8, !tbaa !63
  br label %for.inc76

if.else71:                                        ; preds = %for.inc59, %if.end44
  %30 = bitcast %struct.vithist_entry_t* %add.ptr to i8*
  %call73 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %gn.1504, i8* %30) #34
  store %struct.gnode_s* %call73, %struct.gnode_s** %velist45, align 8, !tbaa !623
  br label %for.inc76

for.inc76:                                        ; preds = %if.else71, %if.then67, %if.then63, %for.body
  %inc77 = add nuw nsw i32 %i.0511, 1
  %31 = load i32, i32* %n_entry, align 8, !tbaa !569
  %cmp = icmp slt i32 %inc77, %31
  br i1 %cmp, label %for.body, label %for.cond79.preheader, !llvm.loop !625

for.body81:                                       ; preds = %for.cond79.preheader, %for.inc101
  %gn.2500 = phi %struct.gnode_s* [ %39, %for.inc101 ], [ %hyp, %for.cond79.preheader ]
  %32 = bitcast %struct.gnode_s* %gn.2500 to %struct.hyp_t**
  %33 = load %struct.hyp_t*, %struct.hyp_t** %32, align 8, !tbaa !63
  %sf84 = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %33, i64 0, i32 2
  %34 = load i32, i32* %sf84, align 4, !tbaa !610
  %idxprom85 = sext i32 %34 to i64
  %arrayidx86 = getelementptr inbounds %struct.gnode_s*, %struct.gnode_s** %1, i64 %idxprom85
  %gn2.0496 = load %struct.gnode_s*, %struct.gnode_s** %arrayidx86, align 8, !tbaa !74
  %tobool88.not497 = icmp eq %struct.gnode_s* %gn2.0496, null
  br i1 %tobool88.not497, label %for.inc101, label %for.body89.lr.ph

for.body89.lr.ph:                                 ; preds = %for.body81
  %id = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %33, i64 0, i32 0
  %35 = load i32, i32* %id, align 4, !tbaa !608
  br label %for.body89

for.body89:                                       ; preds = %for.body89.lr.ph, %for.inc98
  %gn2.0498 = phi %struct.gnode_s* [ %gn2.0496, %for.body89.lr.ph ], [ %gn2.0, %for.inc98 ]
  %36 = bitcast %struct.gnode_s* %gn2.0498 to %struct.dagnode_t**
  %37 = load %struct.dagnode_t*, %struct.dagnode_t** %36, align 8, !tbaa !63
  %wid92 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %37, i64 0, i32 0
  %38 = load i32, i32* %wid92, align 8, !tbaa !618
  %cmp93 = icmp eq i32 %35, %38
  br i1 %cmp93, label %if.then95, label %for.inc98

if.then95:                                        ; preds = %for.body89
  %seqid96 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %37, i64 0, i32 3
  store i32 0, i32* %seqid96, align 4, !tbaa !622
  br label %for.inc98

for.inc98:                                        ; preds = %for.body89, %if.then95
  %next99 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn2.0498, i64 0, i32 1
  %gn2.0 = load %struct.gnode_s*, %struct.gnode_s** %next99, align 8, !tbaa !74
  %tobool88.not = icmp eq %struct.gnode_s* %gn2.0, null
  br i1 %tobool88.not, label %for.inc101, label %for.body89, !llvm.loop !626

for.inc101:                                       ; preds = %for.inc98, %for.body81
  %next102 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.2500, i64 0, i32 1
  %39 = load %struct.gnode_s*, %struct.gnode_s** %next102, align 8, !tbaa !364
  %tobool80.not = icmp eq %struct.gnode_s* %39, null
  br i1 %tobool80.not, label %for.end103, label %for.body81, !llvm.loop !627

for.end103:                                       ; preds = %for.inc101, %for.cond79.preheader
  %40 = bitcast i8* %call to %struct.dagnode_t***
  %41 = load %struct.dagnode_t**, %struct.dagnode_t*** %40, align 8, !tbaa !74
  %42 = load %struct.dagnode_t*, %struct.dagnode_t** %41, align 8, !tbaa !63
  %seqid107 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %42, i64 0, i32 3
  store i32 0, i32* %seqid107, align 4, !tbaa !622
  %43 = load i32, i32* %n_frm, align 4, !tbaa !584
  %idxprom109 = sext i32 %43 to i64
  %arrayidx110 = getelementptr inbounds %struct.gnode_s*, %struct.gnode_s** %1, i64 %idxprom109
  %44 = bitcast %struct.gnode_s** %arrayidx110 to %struct.dagnode_t***
  %45 = load %struct.dagnode_t**, %struct.dagnode_t*** %44, align 8, !tbaa !74
  %46 = load %struct.dagnode_t*, %struct.dagnode_t** %45, align 8, !tbaa !63
  %seqid113 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %46, i64 0, i32 3
  store i32 0, i32* %seqid113, align 4, !tbaa !622
  %cmp116492 = icmp sgt i32 %43, -1
  br i1 %cmp116492, label %for.body118.preheader, label %for.end143

for.body118.preheader:                            ; preds = %for.end103
  %47 = zext i32 %43 to i64
  br label %for.body118

for.body118:                                      ; preds = %for.body118.preheader, %for.inc142
  %indvars.iv521 = phi i64 [ %47, %for.body118.preheader ], [ %indvars.iv.next522, %for.inc142 ]
  %i.1494 = phi i32 [ 0, %for.body118.preheader ], [ %i.2.lcssa, %for.inc142 ]
  %arrayidx120 = getelementptr inbounds %struct.gnode_s*, %struct.gnode_s** %1, i64 %indvars.iv521
  %gn.3487 = load %struct.gnode_s*, %struct.gnode_s** %arrayidx120, align 8, !tbaa !74
  %tobool122.not488 = icmp eq %struct.gnode_s* %gn.3487, null
  br i1 %tobool122.not488, label %for.inc142, label %for.body123

for.body123:                                      ; preds = %for.body118, %for.inc139
  %gn.3491 = phi %struct.gnode_s* [ %gn.3, %for.inc139 ], [ %gn.3487, %for.body118 ]
  %i.2489 = phi i32 [ %i.3, %for.inc139 ], [ %i.1494, %for.body118 ]
  %48 = bitcast %struct.gnode_s* %gn.3491 to %struct.dagnode_t**
  %49 = load %struct.dagnode_t*, %struct.dagnode_t** %48, align 8, !tbaa !63
  %lef126 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %49, i64 0, i32 2
  %50 = load i32, i32* %lef126, align 8, !tbaa !621
  %fef127 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %49, i64 0, i32 1
  %51 = load i32, i32* %fef127, align 4, !tbaa !620
  %cmp128 = icmp sgt i32 %50, %51
  br i1 %cmp128, label %if.then133, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body123
  %seqid130 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %49, i64 0, i32 3
  %52 = load i32, i32* %seqid130, align 4, !tbaa !622
  %cmp131 = icmp sgt i32 %52, -1
  br i1 %cmp131, label %if.then133, label %if.else136

if.then133:                                       ; preds = %lor.lhs.false, %for.body123
  %inc134 = add nsw i32 %i.2489, 1
  %seqid135 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %49, i64 0, i32 3
  store i32 %i.2489, i32* %seqid135, align 4, !tbaa !622
  br label %for.inc139

if.else136:                                       ; preds = %lor.lhs.false
  store i32 -1, i32* %seqid130, align 4, !tbaa !622
  br label %for.inc139

for.inc139:                                       ; preds = %if.then133, %if.else136
  %i.3 = phi i32 [ %inc134, %if.then133 ], [ %i.2489, %if.else136 ]
  %next140 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.3491, i64 0, i32 1
  %gn.3 = load %struct.gnode_s*, %struct.gnode_s** %next140, align 8, !tbaa !74
  %tobool122.not = icmp eq %struct.gnode_s* %gn.3, null
  br i1 %tobool122.not, label %for.inc142, label %for.body123, !llvm.loop !628

for.inc142:                                       ; preds = %for.inc139, %for.body118
  %i.2.lcssa = phi i32 [ %i.1494, %for.body118 ], [ %i.3, %for.inc139 ]
  %cmp116 = icmp sgt i64 %indvars.iv521, 0
  %indvars.iv.next522 = add nsw i64 %indvars.iv521, -1
  br i1 %cmp116, label %for.body118, label %for.end143, !llvm.loop !629

for.end143:                                       ; preds = %for.inc142, %for.end103
  %i.1.lcssa = phi i32 [ 0, %for.end103 ], [ %i.2.lcssa, %for.inc142 ]
  %call144 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.24.481, i64 0, i64 0), i32 %i.1.lcssa) #36
  %53 = load i32, i32* %n_frm, align 4, !tbaa !584
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %dict, i64 0, i32 4
  %cmp147484 = icmp sgt i32 %53, -1
  br i1 %cmp147484, label %for.body149.preheader, label %for.end175

for.body149.preheader:                            ; preds = %for.end143
  %54 = zext i32 %53 to i64
  br label %for.body149

for.body149:                                      ; preds = %for.body149.preheader, %for.inc173
  %indvars.iv519 = phi i64 [ %54, %for.body149.preheader ], [ %indvars.iv.next520, %for.inc173 ]
  %arrayidx151 = getelementptr inbounds %struct.gnode_s*, %struct.gnode_s** %1, i64 %indvars.iv519
  %gn.4481 = load %struct.gnode_s*, %struct.gnode_s** %arrayidx151, align 8, !tbaa !74
  %tobool153.not482 = icmp eq %struct.gnode_s* %gn.4481, null
  br i1 %tobool153.not482, label %for.inc173, label %for.body154.preheader

for.body154.preheader:                            ; preds = %for.body149
  %55 = trunc i64 %indvars.iv519 to i32
  br label %for.body154

for.body154:                                      ; preds = %for.body154.preheader, %for.inc170
  %gn.4483 = phi %struct.gnode_s* [ %gn.4, %for.inc170 ], [ %gn.4481, %for.body154.preheader ]
  %56 = bitcast %struct.gnode_s* %gn.4483 to %struct.dagnode_t**
  %57 = load %struct.dagnode_t*, %struct.dagnode_t** %56, align 8, !tbaa !63
  %seqid157 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %57, i64 0, i32 3
  %58 = load i32, i32* %seqid157, align 4, !tbaa !622
  %cmp158 = icmp sgt i32 %58, -1
  br i1 %cmp158, label %if.then160, label %for.inc170

if.then160:                                       ; preds = %for.body154
  %59 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %wid162 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %57, i64 0, i32 0
  %60 = load i32, i32* %wid162, align 8, !tbaa !618
  %idxprom163 = sext i32 %60 to i64
  %word165 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %59, i64 %idxprom163, i32 0
  %61 = load i8*, i8** %word165, align 8, !tbaa !510
  %fef166 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %57, i64 0, i32 1
  %62 = load i32, i32* %fef166, align 4, !tbaa !620
  %lef167 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %57, i64 0, i32 2
  %63 = load i32, i32* %lef167, align 8, !tbaa !621
  %call168 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25.482, i64 0, i64 0), i32 %58, i8* %61, i32 %55, i32 %62, i32 %63) #36
  br label %for.inc170

for.inc170:                                       ; preds = %for.body154, %if.then160
  %next171 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.4483, i64 0, i32 1
  %gn.4 = load %struct.gnode_s*, %struct.gnode_s** %next171, align 8, !tbaa !74
  %tobool153.not = icmp eq %struct.gnode_s* %gn.4, null
  br i1 %tobool153.not, label %for.inc173, label %for.body154, !llvm.loop !630

for.inc173:                                       ; preds = %for.inc170, %for.body149
  %cmp147 = icmp sgt i64 %indvars.iv519, 0
  %indvars.iv.next520 = add nsw i64 %indvars.iv519, -1
  br i1 %cmp147, label %for.body149, label %for.end175, !llvm.loop !631

for.end175:                                       ; preds = %for.inc173, %for.end143
  %64 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.483, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %fp)
  %sub = add nsw i32 %i.1.lcssa, -1
  %call177 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27.484, i64 0, i64 0), i32 %sub, i32 0) #36
  %65 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.483, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %fp)
  %66 = tail call i64 @fwrite(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.28.485, i64 0, i64 0), i64 39, i64 1, %struct._IO_FILE* %fp)
  %67 = tail call i64 @fwrite(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.483, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* %fp)
  %tobool181.not = icmp eq i32 %oldfmt, 0
  br i1 %tobool181.not, label %if.else184, label %if.then182

if.then182:                                       ; preds = %for.end175
  %68 = tail call i64 @fwrite(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.486, i64 0, i64 0), i64 37, i64 1, %struct._IO_FILE* %fp)
  br label %if.end186

if.else184:                                       ; preds = %for.end175
  %69 = tail call i64 @fwrite(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.30.487, i64 0, i64 0), i64 36, i64 1, %struct._IO_FILE* %fp)
  br label %if.end186

if.end186:                                        ; preds = %if.else184, %if.then182
  %70 = load i32, i32* %n_frm, align 4, !tbaa !584
  %cmp190479 = icmp sgt i32 %70, 0
  br i1 %cmp190479, label %for.body192.preheader, label %for.end271

for.body192.preheader:                            ; preds = %if.end186
  %71 = zext i32 %70 to i64
  br label %for.body192

for.cond189.loopexit:                             ; preds = %for.inc266, %for.body192
  %cmp190 = icmp sgt i64 %indvars.iv517, 1
  %indvars.iv.next518 = add nsw i64 %indvars.iv517, -1
  br i1 %cmp190, label %for.body192, label %for.end271, !llvm.loop !632

for.body192:                                      ; preds = %for.body192.preheader, %for.cond189.loopexit
  %indvars.iv517 = phi i64 [ %71, %for.body192.preheader ], [ %indvars.iv.next518, %for.cond189.loopexit ]
  %f.2480.in = phi i32 [ %70, %for.body192.preheader ], [ %f.2480, %for.cond189.loopexit ]
  %f.2480 = add nsw i32 %f.2480.in, -1
  %idxprom193456 = zext i32 %f.2480 to i64
  %arrayidx194 = getelementptr inbounds %struct.gnode_s*, %struct.gnode_s** %1, i64 %idxprom193456
  %gn.5475 = load %struct.gnode_s*, %struct.gnode_s** %arrayidx194, align 8, !tbaa !74
  %tobool196.not476 = icmp eq %struct.gnode_s* %gn.5475, null
  br i1 %tobool196.not476, label %for.cond189.loopexit, label %for.body197

for.body197:                                      ; preds = %for.body192, %for.inc266
  %gn.5477 = phi %struct.gnode_s* [ %gn.5, %for.inc266 ], [ %gn.5475, %for.body192 ]
  %72 = bitcast %struct.gnode_s* %gn.5477 to %struct.dagnode_t**
  %73 = load %struct.dagnode_t*, %struct.dagnode_t** %72, align 8, !tbaa !63
  %seqid200 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %73, i64 0, i32 3
  %74 = load i32, i32* %seqid200, align 4, !tbaa !622
  %cmp201 = icmp slt i32 %74, 0
  br i1 %cmp201, label %for.inc266, label %if.end204

if.end204:                                        ; preds = %for.body197
  %velist205 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %73, i64 0, i32 4
  %gn2.1472 = load %struct.gnode_s*, %struct.gnode_s** %velist205, align 8, !tbaa !74
  %tobool207.not473 = icmp eq %struct.gnode_s* %gn2.1472, null
  br i1 %tobool207.not473, label %for.inc266, label %for.body208

for.body208:                                      ; preds = %if.end204, %for.inc263
  %gn2.1474 = phi %struct.gnode_s* [ %gn2.1, %for.inc263 ], [ %gn2.1472, %if.end204 ]
  %75 = bitcast %struct.gnode_s* %gn2.1474 to %struct.vithist_entry_t**
  %76 = load %struct.vithist_entry_t*, %struct.vithist_entry_t** %75, align 8, !tbaa !63
  %ef211 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %76, i64 0, i32 2
  %77 = load i16, i16* %ef211, align 2, !tbaa !577
  %cmp213 = icmp slt i16 %77, 0
  %conv212 = sext i16 %77 to i32
  %add219 = add nsw i32 %conv212, 1
  %cond221 = select i1 %cmp213, i32 1, i32 %add219
  %idxprom243 = sext i32 %cond221 to i64
  %arrayidx244 = getelementptr inbounds %struct.gnode_s*, %struct.gnode_s** %1, i64 %idxprom243
  br i1 %tobool181.not, label %if.else242, label %if.then223

if.then223:                                       ; preds = %for.body208
  %ascr = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %76, i64 0, i32 3
  %gn3.0466 = load %struct.gnode_s*, %struct.gnode_s** %arrayidx244, align 8, !tbaa !74
  %tobool227.not467 = icmp eq %struct.gnode_s* %gn3.0466, null
  br i1 %tobool227.not467, label %for.inc263, label %for.body228

for.body228:                                      ; preds = %if.then223, %for.inc239
  %gn3.0468 = phi %struct.gnode_s* [ %gn3.0, %for.inc239 ], [ %gn3.0466, %if.then223 ]
  %78 = bitcast %struct.gnode_s* %gn3.0468 to %struct.dagnode_t**
  %79 = load %struct.dagnode_t*, %struct.dagnode_t** %78, align 8, !tbaa !63
  %seqid231 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %79, i64 0, i32 3
  %80 = load i32, i32* %seqid231, align 4, !tbaa !622
  %cmp232 = icmp sgt i32 %80, -1
  br i1 %cmp232, label %if.then234, label %for.inc239

if.then234:                                       ; preds = %for.body228
  %81 = load i32, i32* %seqid200, align 4, !tbaa !622
  %82 = load i32, i32* %ascr, align 4, !tbaa !578
  %call237 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31.488, i64 0, i64 0), i32 %81, i32 %80, i32 %82) #36
  br label %for.inc239

for.inc239:                                       ; preds = %for.body228, %if.then234
  %next240 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn3.0468, i64 0, i32 1
  %gn3.0 = load %struct.gnode_s*, %struct.gnode_s** %next240, align 8, !tbaa !74
  %tobool227.not = icmp eq %struct.gnode_s* %gn3.0, null
  br i1 %tobool227.not, label %for.inc263, label %for.body228, !llvm.loop !633

if.else242:                                       ; preds = %for.body208
  %gn3.1469 = load %struct.gnode_s*, %struct.gnode_s** %arrayidx244, align 8, !tbaa !74
  %tobool246.not470 = icmp eq %struct.gnode_s* %gn3.1469, null
  br i1 %tobool246.not470, label %for.inc263, label %for.body247

for.cond245:                                      ; preds = %for.body247
  %next260 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn3.1471, i64 0, i32 1
  %gn3.1 = load %struct.gnode_s*, %struct.gnode_s** %next260, align 8, !tbaa !74
  %tobool246.not = icmp eq %struct.gnode_s* %gn3.1, null
  br i1 %tobool246.not, label %for.inc263, label %for.body247, !llvm.loop !634

for.body247:                                      ; preds = %if.else242, %for.cond245
  %gn3.1471 = phi %struct.gnode_s* [ %gn3.1, %for.cond245 ], [ %gn3.1469, %if.else242 ]
  %83 = bitcast %struct.gnode_s* %gn3.1471 to %struct.dagnode_t**
  %84 = load %struct.dagnode_t*, %struct.dagnode_t** %83, align 8, !tbaa !63
  %seqid250 = getelementptr inbounds %struct.dagnode_t, %struct.dagnode_t* %84, i64 0, i32 3
  %85 = load i32, i32* %seqid250, align 4, !tbaa !622
  %cmp251 = icmp sgt i32 %85, -1
  br i1 %cmp251, label %if.then253, label %for.cond245

if.then253:                                       ; preds = %for.body247
  %86 = load i32, i32* %seqid200, align 4, !tbaa !622
  %sub255 = add nsw i32 %cond221, -1
  %ascr256 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %76, i64 0, i32 3
  %87 = load i32, i32* %ascr256, align 4, !tbaa !578
  %call257 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31.488, i64 0, i64 0), i32 %86, i32 %sub255, i32 %87) #36
  br label %for.inc263

for.inc263:                                       ; preds = %for.inc239, %for.cond245, %if.then223, %if.else242, %if.then253
  %next264 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn2.1474, i64 0, i32 1
  %gn2.1 = load %struct.gnode_s*, %struct.gnode_s** %next264, align 8, !tbaa !74
  %tobool207.not = icmp eq %struct.gnode_s* %gn2.1, null
  br i1 %tobool207.not, label %for.inc266, label %for.body208, !llvm.loop !635

for.inc266:                                       ; preds = %for.inc263, %if.end204, %for.body197
  %next267 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.5477, i64 0, i32 1
  %gn.5 = load %struct.gnode_s*, %struct.gnode_s** %next267, align 8, !tbaa !74
  %tobool196.not = icmp eq %struct.gnode_s* %gn.5, null
  br i1 %tobool196.not, label %for.cond189.loopexit, label %for.body197, !llvm.loop !636

for.end271:                                       ; preds = %for.cond189.loopexit, %if.end186
  %88 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32.489, i64 0, i64 0), i64 4, i64 1, %struct._IO_FILE* %fp)
  %89 = load i32, i32* %n_frm, align 4, !tbaa !584
  %cmp275.not464 = icmp slt i32 %89, 0
  br i1 %cmp275.not464, label %for.end293, label %for.body277

for.body277:                                      ; preds = %for.end271, %for.end288
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.end288 ], [ 0, %for.end271 ]
  %arrayidx279 = getelementptr inbounds %struct.gnode_s*, %struct.gnode_s** %1, i64 %indvars.iv
  %gn.6461 = load %struct.gnode_s*, %struct.gnode_s** %arrayidx279, align 8, !tbaa !74
  %tobool281.not462 = icmp eq %struct.gnode_s* %gn.6461, null
  br i1 %tobool281.not462, label %for.end288, label %for.body282

for.body282:                                      ; preds = %for.body277, %for.body282
  %gn.6463 = phi %struct.gnode_s* [ %gn.6, %for.body282 ], [ %gn.6461, %for.body277 ]
  %ptr284 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.6463, i64 0, i32 0, i32 0
  %90 = load i8*, i8** %ptr284, align 8, !tbaa !63
  %velist285 = getelementptr inbounds i8, i8* %90, i64 16
  %91 = bitcast i8* %velist285 to %struct.gnode_s**
  %92 = load %struct.gnode_s*, %struct.gnode_s** %91, align 8, !tbaa !623
  tail call void @glist_free(%struct.gnode_s* %92) #34
  tail call void @ckd_free(i8* %90) #34
  %next287 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.6463, i64 0, i32 1
  %gn.6 = load %struct.gnode_s*, %struct.gnode_s** %next287, align 8, !tbaa !74
  %tobool281.not = icmp eq %struct.gnode_s* %gn.6, null
  br i1 %tobool281.not, label %for.end288.loopexit, label %for.body282, !llvm.loop !637

for.end288.loopexit:                              ; preds = %for.body282
  %.pre = load %struct.gnode_s*, %struct.gnode_s** %arrayidx279, align 8, !tbaa !74
  br label %for.end288

for.end288:                                       ; preds = %for.end288.loopexit, %for.body277
  %93 = phi %struct.gnode_s* [ %.pre, %for.end288.loopexit ], [ null, %for.body277 ]
  tail call void @glist_free(%struct.gnode_s* %93) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %94 = load i32, i32* %n_frm, align 4, !tbaa !584
  %95 = sext i32 %94 to i64
  %cmp275.not.not = icmp slt i64 %indvars.iv, %95
  br i1 %cmp275.not.not, label %for.body277, label %for.end293, !llvm.loop !638

for.end293:                                       ; preds = %for.end288, %for.end271
  tail call void @ckd_free(i8* %call) #34
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @vithist_free(%struct.vithist_t* %v) local_unnamed_addr #0 {
entry:
  %tobool.not = icmp eq %struct.vithist_t* %v, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = bitcast %struct.vithist_t* %v to i8*
  tail call void @ckd_free(i8* nonnull %0) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @feat_readfile(%struct.feat_s* nocapture readonly %fcb, i8* %file, i32 %sf, i32 %ef, float*** nocapture readonly %feat, i32 %maxfr) local_unnamed_addr #0 {
entry:
  %l = alloca i32, align 4
  %nfr = alloca i32, align 4
  %byteswap = alloca i32, align 4
  %chksum = alloca i32, align 4
  %argname = alloca i8**, align 8
  %argval = alloca i8**, align 8
  %0 = bitcast i32* %l to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %1 = bitcast i32* %nfr to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #38
  %2 = bitcast i32* %byteswap to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #38
  %3 = bitcast i32* %chksum to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #38
  %4 = bitcast i8*** %argname to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  %5 = bitcast i8*** %argval to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #38
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 127, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.491, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2.492, i64 0, i64 0), i8* %file, i32 %sf, i32 %ef) #34
  %cmp.not = icmp sgt i32 %ef, %sf
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 131, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4.494, i64 0, i64 0), i8* %file, i32 %ef, i32 %sf) #34
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call %struct._IO_FILE* @fopen(i8* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.495, i64 0, i64 0)) #36
  %cmp1 = icmp eq %struct._IO_FILE* %call, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 136, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.496, i64 0, i64 0), i8* %file) #34
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %call4 = call i32 @bio_readhdr(%struct._IO_FILE* nonnull %call, i8*** nonnull %argname, i8*** nonnull %argval, i32* nonnull %byteswap) #34
  %cmp5 = icmp slt i32 %call4, 0
  br i1 %cmp5, label %if.then6, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end3
  %6 = load i8**, i8*** %argname, align 8, !tbaa !74
  %7 = load i8*, i8** %6, align 8, !tbaa !74
  %tobool.not162 = icmp eq i8* %7, null
  br i1 %tobool.not162, label %for.end, label %for.body

if.then6:                                         ; preds = %if.end3
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 142, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.497, i64 0, i64 0), i8* %file) #34
  %call7 = call i32 @fclose(%struct._IO_FILE* nonnull %call) #36
  br label %cleanup

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %8 = phi i8** [ %14, %for.inc ], [ %6, %for.cond.preheader ]
  %indvars.iv167 = phi i64 [ %indvars.iv.next168, %for.inc ], [ 0, %for.cond.preheader ]
  %9 = phi i8* [ %15, %for.inc ], [ %7, %for.cond.preheader ]
  %call11 = call i32 @strcmp(i8* noundef nonnull %9, i8* noundef nonnull dereferenceable(8) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8.498, i64 0, i64 0)) #37
  %cmp12 = icmp eq i32 %call11, 0
  br i1 %cmp12, label %if.then13, label %for.inc

if.then13:                                        ; preds = %for.body
  %10 = load i8**, i8*** %argval, align 8, !tbaa !74
  %arrayidx15 = getelementptr inbounds i8*, i8** %10, i64 %indvars.iv167
  %11 = load i8*, i8** %arrayidx15, align 8, !tbaa !74
  %call16 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %11, i8* noundef nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.499, i64 0, i64 0)) #37
  %cmp17.not = icmp eq i32 %call16, 0
  br i1 %cmp17.not, label %for.inc, label %if.then18

if.then18:                                        ; preds = %if.then13
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 152, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.500, i64 0, i64 0)) #34
  %12 = load i8**, i8*** %argval, align 8, !tbaa !74
  %arrayidx20 = getelementptr inbounds i8*, i8** %12, i64 %indvars.iv167
  %13 = load i8*, i8** %arrayidx20, align 8, !tbaa !74
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.501, i64 0, i64 0), i8* %file, i8* %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.499, i64 0, i64 0)) #34
  %.pre = load i8**, i8*** %argname, align 8, !tbaa !74
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then18, %if.then13
  %14 = phi i8** [ %8, %for.body ], [ %.pre, %if.then18 ], [ %8, %if.then13 ]
  %indvars.iv.next168 = add nuw i64 %indvars.iv167, 1
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %indvars.iv.next168
  %15 = load i8*, i8** %arrayidx, align 8, !tbaa !74
  %tobool.not = icmp eq i8* %15, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !639

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  %.lcssa = phi i8** [ %6, %for.cond.preheader ], [ %14, %for.inc ]
  %16 = load i8**, i8*** %argval, align 8, !tbaa !74
  call void @bio_hdrarg_free(i8** nonnull %.lcssa, i8** %16) #34
  store i8** null, i8*** %argval, align 8, !tbaa !74
  store i8** null, i8*** %argname, align 8, !tbaa !74
  store i32 0, i32* %chksum, align 4, !tbaa !37
  %17 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call29 = call i32 @bio_fread(i8* nonnull %1, i32 4, i32 1, %struct._IO_FILE* nonnull %call, i32 %17, i32* nonnull %chksum) #34
  %cmp30.not = icmp eq i32 %call29, 1
  br i1 %cmp30.not, label %if.end33, label %if.then31

if.then31:                                        ; preds = %for.end
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 166, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.502, i64 0, i64 0), i8* %file) #34
  %call32 = call i32 @fclose(%struct._IO_FILE* nonnull %call) #36
  br label %cleanup

if.end33:                                         ; preds = %for.end
  %18 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call34 = call i32 @bio_fread(i8* nonnull %0, i32 4, i32 1, %struct._IO_FILE* nonnull %call, i32 %18, i32* nonnull %chksum) #34
  %cmp35.not = icmp eq i32 %call34, 1
  br i1 %cmp35.not, label %lor.lhs.false, label %if.then37

lor.lhs.false:                                    ; preds = %if.end33
  %19 = load i32, i32* %l, align 4, !tbaa !37
  %n_stream = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 3
  %20 = load i32, i32* %n_stream, align 8, !tbaa !375
  %cmp36.not = icmp eq i32 %19, %20
  br i1 %cmp36.not, label %for.cond40.preheader, label %if.then37

for.cond40.preheader:                             ; preds = %lor.lhs.false
  %stream_len = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 4
  %cmp42159 = icmp sgt i32 %19, 0
  br i1 %cmp42159, label %for.body43, label %for.end55

if.then37:                                        ; preds = %lor.lhs.false, %if.end33
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 174, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.503, i64 0, i64 0), i8* %file) #34
  %call38 = call i32 @fclose(%struct._IO_FILE* nonnull %call) #36
  br label %cleanup

for.body43:                                       ; preds = %for.cond40.preheader, %if.end52
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end52 ], [ 0, %for.cond40.preheader ]
  %k.0161 = phi i32 [ %add, %if.end52 ], [ 0, %for.cond40.preheader ]
  %21 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call44 = call i32 @bio_fread(i8* nonnull %0, i32 4, i32 1, %struct._IO_FILE* nonnull %call, i32 %21, i32* nonnull %chksum) #34
  %cmp45.not = icmp eq i32 %call44, 1
  br i1 %cmp45.not, label %lor.lhs.false46, label %if.then50

lor.lhs.false46:                                  ; preds = %for.body43
  %22 = load i32, i32* %l, align 4, !tbaa !37
  %23 = load i32*, i32** %stream_len, align 8, !tbaa !381
  %arrayidx48 = getelementptr inbounds i32, i32* %23, i64 %indvars.iv
  %24 = load i32, i32* %arrayidx48, align 4, !tbaa !37
  %cmp49.not = icmp eq i32 %22, %24
  br i1 %cmp49.not, label %if.end52, label %if.then50

if.then50:                                        ; preds = %lor.lhs.false46, %for.body43
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 184, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15.504, i64 0, i64 0), i8* %file) #34
  %call51 = call i32 @fclose(%struct._IO_FILE* nonnull %call) #36
  br label %cleanup

if.end52:                                         ; preds = %lor.lhs.false46
  %add = add nsw i32 %22, %k.0161
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %25 = load i32, i32* %n_stream, align 8, !tbaa !375
  %26 = sext i32 %25 to i64
  %cmp42 = icmp slt i64 %indvars.iv.next, %26
  br i1 %cmp42, label %for.body43, label %for.end55, !llvm.loop !640

for.end55:                                        ; preds = %if.end52, %for.cond40.preheader
  %k.0.lcssa = phi i32 [ 0, %for.cond40.preheader ], [ %add, %if.end52 ]
  %cmp56 = icmp sgt i32 %sf, 0
  %27 = load i32, i32* %nfr, align 4, !tbaa !37
  br i1 %cmp56, label %if.then57, label %if.end62

if.then57:                                        ; preds = %for.end55
  %cmp58.not = icmp sgt i32 %27, %sf
  br i1 %cmp58.not, label %if.end61, label %if.then59

if.then59:                                        ; preds = %if.then57
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 194, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  %28 = load i32, i32* %nfr, align 4, !tbaa !37
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16.505, i64 0, i64 0), i8* %file, i32 %sf, i32 %28) #34
  %call60 = call i32 @fclose(%struct._IO_FILE* nonnull %call) #36
  br label %cleanup

if.end61:                                         ; preds = %if.then57
  %sub = sub nsw i32 %27, %sf
  store i32 %sub, i32* %nfr, align 4, !tbaa !37
  br label %if.end62

if.end62:                                         ; preds = %for.end55, %if.end61
  %29 = phi i32 [ %sub, %if.end61 ], [ %27, %for.end55 ]
  %sub63 = sub nsw i32 %ef, %sf
  %add64 = add nsw i32 %sub63, 1
  %cmp65 = icmp slt i32 %add64, %29
  br i1 %cmp65, label %if.then66, label %if.end69

if.then66:                                        ; preds = %if.end62
  store i32 %add64, i32* %nfr, align 4, !tbaa !37
  br label %if.end69

if.end69:                                         ; preds = %if.then66, %if.end62
  %30 = phi i32 [ %add64, %if.then66 ], [ %29, %if.end62 ]
  %cmp70 = icmp sgt i32 %30, %maxfr
  br i1 %cmp70, label %if.then71, label %if.end73

if.then71:                                        ; preds = %if.end69
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 205, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  %31 = load i32, i32* %nfr, align 4, !tbaa !37
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.17.506, i64 0, i64 0), i8* %file, i32 %maxfr, i32 %31) #34
  %call72 = call i32 @fclose(%struct._IO_FILE* nonnull %call) #36
  br label %cleanup

if.end73:                                         ; preds = %if.end69
  br i1 %cmp56, label %if.then75, label %if.end78

if.then75:                                        ; preds = %if.end73
  %mul = mul nsw i32 %k.0.lcssa, %sf
  %conv = sext i32 %mul to i64
  %mul76 = shl nsw i64 %conv, 2
  %call77 = call i32 @fseek(%struct._IO_FILE* nonnull %call, i64 %mul76, i32 1) #36
  %.pre170 = load i32, i32* %nfr, align 4, !tbaa !37
  br label %if.end78

if.end78:                                         ; preds = %if.then75, %if.end73
  %32 = phi i32 [ %.pre170, %if.then75 ], [ %30, %if.end73 ]
  %33 = bitcast float*** %feat to i8***
  %34 = load i8**, i8*** %33, align 8, !tbaa !74
  %35 = load i8*, i8** %34, align 8, !tbaa !74
  %mul81 = mul nsw i32 %32, %k.0.lcssa
  %36 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call82 = call i32 @bio_fread(i8* %35, i32 4, i32 %mul81, %struct._IO_FILE* nonnull %call, i32 %36, i32* nonnull %chksum) #34
  %37 = load i32, i32* %nfr, align 4, !tbaa !37
  %mul83 = mul nsw i32 %37, %k.0.lcssa
  %cmp84.not = icmp eq i32 %call82, %mul83
  br i1 %cmp84.not, label %if.end88, label %if.then86

if.then86:                                        ; preds = %if.end78
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 215, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  %38 = load i32, i32* %nfr, align 4, !tbaa !37
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18.507, i64 0, i64 0), i8* %file, i32 %38, i32 %k.0.lcssa) #34
  %call87 = call i32 @fclose(%struct._IO_FILE* nonnull %call) #36
  br label %cleanup

if.end88:                                         ; preds = %if.end78
  %call89 = call i32 @fclose(%struct._IO_FILE* nonnull %call) #36
  %39 = load i32, i32* %nfr, align 4, !tbaa !37
  br label %cleanup

cleanup:                                          ; preds = %if.end88, %if.then86, %if.then71, %if.then59, %if.then50, %if.then37, %if.then31, %if.then6, %if.then2, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ -1, %if.then2 ], [ -1, %if.then6 ], [ -1, %if.then31 ], [ -1, %if.then37 ], [ -1, %if.then50 ], [ -1, %if.then59 ], [ -1, %if.then71 ], [ -1, %if.then86 ], [ %39, %if.end88 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @feat_writefile(%struct.feat_s* nocapture %fcb, i8* %file, float*** nocapture readonly %feat, i32 %nfr) local_unnamed_addr #0 {
entry:
  %nfr.addr = alloca i32, align 4
  store i32 %nfr, i32* %nfr.addr, align 4, !tbaa !37
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 231, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.491, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19.508, i64 0, i64 0), i8* %file) #34
  %call = tail call %struct._IO_FILE* @fopen(i8* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.509, i64 0, i64 0)) #36
  %cmp = icmp eq %struct._IO_FILE* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 235, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21.510, i64 0, i64 0), i8* %file) #34
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @bio_writehdr_version(%struct._IO_FILE* nonnull %call, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9.499, i64 0, i64 0)) #34
  %0 = bitcast i32* %nfr.addr to i8*
  %call2 = call i64 @fwrite(i8* nonnull %0, i64 4, i64 1, %struct._IO_FILE* nonnull %call) #36
  %n_stream = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 3
  %1 = bitcast i32* %n_stream to i8*
  %call3 = tail call i64 @fwrite(i8* nonnull %1, i64 4, i64 1, %struct._IO_FILE* nonnull %call) #36
  %stream_len = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 4
  %2 = load i32, i32* %n_stream, align 8, !tbaa !375
  %cmp544 = icmp sgt i32 %2, 0
  br i1 %cmp544, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %if.end
  %.pre = load i32*, i32** %stream_len, align 8, !tbaa !381
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %3 = phi i32* [ %.pre, %for.body.preheader ], [ %5, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %k.046 = phi i32 [ 0, %for.body.preheader ], [ %add, %for.body ]
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %indvars.iv
  %4 = bitcast i32* %arrayidx to i8*
  %call6 = tail call i64 @fwrite(i8* %4, i64 4, i64 1, %struct._IO_FILE* nonnull %call) #36
  %5 = load i32*, i32** %stream_len, align 8, !tbaa !381
  %arrayidx9 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv
  %6 = load i32, i32* %arrayidx9, align 4, !tbaa !37
  %add = add nsw i32 %6, %k.046
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %7 = load i32, i32* %n_stream, align 8, !tbaa !375
  %8 = sext i32 %7 to i64
  %cmp5 = icmp slt i64 %indvars.iv.next, %8
  br i1 %cmp5, label %for.body, label %for.end, !llvm.loop !641

for.end:                                          ; preds = %for.body, %if.end
  %k.0.lcssa = phi i32 [ 0, %if.end ], [ %add, %for.body ]
  %9 = bitcast float*** %feat to i8***
  %10 = load i8**, i8*** %9, align 8, !tbaa !74
  %11 = load i8*, i8** %10, align 8, !tbaa !74
  %12 = load i32, i32* %nfr.addr, align 4, !tbaa !37
  %mul = mul nsw i32 %12, %k.0.lcssa
  %conv = sext i32 %mul to i64
  %call12 = tail call i64 @fwrite(i8* %11, i64 4, i64 %conv, %struct._IO_FILE* nonnull %call) #36
  %conv13 = trunc i64 %call12 to i32
  %cmp15.not = icmp eq i32 %mul, %conv13
  br i1 %cmp15.not, label %if.end19, label %if.then17

if.then17:                                        ; preds = %for.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 252, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22.511, i64 0, i64 0), i8* %file, i32 %12, i32 %k.0.lcssa) #34
  %call18 = tail call i32 @fclose(%struct._IO_FILE* nonnull %call) #36
  br label %cleanup

if.end19:                                         ; preds = %for.end
  %call20 = tail call i32 @fclose(%struct._IO_FILE* nonnull %call) #36
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %if.then17, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ -1, %if.then17 ], [ 0, %if.end19 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @feat_s2mfc_read(i8* %file, i32 %sf, i32 %ef, float** nocapture readonly %mfc, i32 %maxfr) local_unnamed_addr #0 {
entry:
  %n_float32 = alloca i32, align 4
  %statbuf = alloca %struct.stat, align 8
  %0 = bitcast i32* %n_float32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %1 = bitcast %struct.stat* %statbuf to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %1) #38
  %cmp = icmp slt i32 %ef, 0
  %spec.store.select = select i1 %cmp, i32 2147418112, i32 %ef
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 277, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.491, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23.512, i64 0, i64 0), i8* %file, i32 %sf, i32 %spec.store.select) #34
  %cmp1.not = icmp sgt i32 %spec.store.select, %sf
  br i1 %cmp1.not, label %if.end3, label %if.then2

if.then2:                                         ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 279, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4.494, i64 0, i64 0), i8* %file, i32 %spec.store.select, i32 %sf) #34
  br label %cleanup

if.end3:                                          ; preds = %entry
  %call = call i32 @stat_retry(i8* %file, %struct.stat* nonnull %statbuf) #34
  %cmp4 = icmp slt i32 %call, 0
  br i1 %cmp4, label %if.then7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end3
  %call5 = call %struct._IO_FILE* @fopen(i8* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.495, i64 0, i64 0)) #36
  %cmp6 = icmp eq %struct._IO_FILE* %call5, null
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %lor.lhs.false, %if.end3
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 287, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24.513, i64 0, i64 0), i8* %file) #34
  br label %cleanup

if.end8:                                          ; preds = %lor.lhs.false
  %call9 = call i32 @fread_retry(i8* nonnull %0, i32 4, i32 1, %struct._IO_FILE* nonnull %call5) #34
  %cmp10.not = icmp eq i32 %call9, 1
  br i1 %cmp10.not, label %if.end13, label %if.then11

if.then11:                                        ; preds = %if.end8
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 293, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25.514, i64 0, i64 0), i8* %file) #34
  %call12 = call i32 @fclose(%struct._IO_FILE* nonnull %call5) #36
  br label %cleanup

if.end13:                                         ; preds = %if.end8
  %2 = load i32, i32* %n_float32, align 4, !tbaa !37
  %mul = shl i32 %2, 2
  %add = add i32 %mul, 4
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i64 0, i32 8
  %3 = load i64, i64* %st_size, align 8, !tbaa !642
  %conv15 = trunc i64 %3 to i32
  %cmp16.not = icmp eq i32 %add, %conv15
  br i1 %cmp16.not, label %if.end39, label %if.then18

if.then18:                                        ; preds = %if.end13
  %or25 = call i32 @llvm.bswap.i32(i32 %2)
  %mul27 = shl i32 %or25, 2
  %add28 = add i32 %mul27, 4
  %cmp32.not = icmp eq i32 %add28, %conv15
  br i1 %cmp32.not, label %if.end38, label %if.then34

if.then34:                                        ; preds = %if.then18
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 305, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  %4 = load i32, i32* %n_float32, align 4, !tbaa !37
  %5 = load i64, i64* %st_size, align 8, !tbaa !642
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.26.515, i64 0, i64 0), i8* %file, i32 %4, i32 %4, i64 %5, i64 %5) #34
  %call37 = call i32 @fclose(%struct._IO_FILE* nonnull %call5) #36
  br label %cleanup

if.end38:                                         ; preds = %if.then18
  store i32 %or25, i32* %n_float32, align 4, !tbaa !37
  br label %if.end39

if.end39:                                         ; preds = %if.end13, %if.end38
  %6 = phi i32 [ %or25, %if.end38 ], [ %2, %if.end13 ]
  %cmp40 = icmp slt i32 %6, 1
  br i1 %cmp40, label %if.then42, label %if.end44

if.then42:                                        ; preds = %if.end39
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 315, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  %7 = load i32, i32* %n_float32, align 4, !tbaa !37
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.27.516, i64 0, i64 0), i8* %file, i32 %7) #34
  %call43 = call i32 @fclose(%struct._IO_FILE* nonnull %call5) #36
  br label %cleanup

if.end44:                                         ; preds = %if.end39
  %div206 = udiv i32 %6, 13
  %mul45 = mul nuw nsw i32 %div206, 13
  %cmp46.not = icmp eq i32 %mul45, %6
  br i1 %cmp46.not, label %if.end50, label %if.then48

if.then48:                                        ; preds = %if.end44
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 323, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  %8 = load i32, i32* %n_float32, align 4, !tbaa !37
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.28.517, i64 0, i64 0), i32 %8, i32 13) #34
  %call49 = call i32 @fclose(%struct._IO_FILE* nonnull %call5) #36
  br label %cleanup

if.end50:                                         ; preds = %if.end44
  %cmp51 = icmp sgt i32 %sf, 0
  br i1 %cmp51, label %if.then53, label %if.end59.thread

if.then53:                                        ; preds = %if.end50
  %cmp54.not = icmp sgt i32 %div206, %sf
  br i1 %cmp54.not, label %if.end59, label %if.then56

if.then56:                                        ; preds = %if.then53
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 331, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16.505, i64 0, i64 0), i8* %file, i32 %sf, i32 %div206) #34
  %call57 = call i32 @fclose(%struct._IO_FILE* nonnull %call5) #36
  br label %cleanup

if.end59:                                         ; preds = %if.then53
  %sub = sub nsw i32 %div206, %sf
  %sub60 = sub nsw i32 %spec.store.select, %sf
  %add61 = add nsw i32 %sub60, 1
  %cmp62 = icmp slt i32 %add61, %sub
  %spec.select = select i1 %cmp62, i32 %add61, i32 %sub
  %cmp68 = icmp sgt i32 %spec.select, %maxfr
  br i1 %cmp68, label %if.then70, label %if.then75

if.end59.thread:                                  ; preds = %if.end50
  %sub60197 = sub nsw i32 %spec.store.select, %sf
  %add61198 = add nuw nsw i32 %sub60197, 1
  %cmp62199 = icmp slt i32 %add61198, %div206
  %spec.select200 = select i1 %cmp62199, i32 %add61198, i32 %div206
  %cmp68201 = icmp sgt i32 %spec.select200, %maxfr
  br i1 %cmp68201, label %if.then70, label %if.end80

if.then70:                                        ; preds = %if.end59.thread, %if.end59
  %spec.select203 = phi i32 [ %spec.select200, %if.end59.thread ], [ %spec.select, %if.end59 ]
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 342, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.29.518, i64 0, i64 0), i8* %file, i32 %maxfr, i32 %spec.select203) #34
  %call71 = call i32 @fclose(%struct._IO_FILE* nonnull %call5) #36
  br label %cleanup

if.then75:                                        ; preds = %if.end59
  %mul76 = mul nsw i32 %sf, 13
  %conv77 = sext i32 %mul76 to i64
  %mul78 = shl nsw i64 %conv77, 2
  %call79 = call i32 @fseek(%struct._IO_FILE* nonnull %call5, i64 %mul78, i32 1) #36
  br label %if.end80

if.end80:                                         ; preds = %if.end59.thread, %if.then75
  %spec.select202205 = phi i32 [ %spec.select, %if.then75 ], [ %spec.select200, %if.end59.thread ]
  %mul81 = mul nsw i32 %spec.select202205, 13
  store i32 %mul81, i32* %n_float32, align 4, !tbaa !37
  %9 = bitcast float** %mfc to i8**
  %10 = load i8*, i8** %9, align 8, !tbaa !74
  %call82 = call i32 @fread_retry(i8* %10, i32 4, i32 %mul81, %struct._IO_FILE* nonnull %call5) #34
  %11 = load i32, i32* %n_float32, align 4, !tbaa !37
  %cmp83.not = icmp eq i32 %call82, %11
  br i1 %cmp83.not, label %if.end87, label %if.then85

if.then85:                                        ; preds = %if.end80
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.30.519, i64 0, i64 0), i8* %file, i32 %spec.select202205, i32 13) #34
  %call86 = call i32 @fclose(%struct._IO_FILE* nonnull %call5) #36
  br label %cleanup

if.end87:                                         ; preds = %if.end80
  %cmp16.not.not = xor i1 %cmp16.not, true
  %cmp89207 = icmp sgt i32 %call82, 0
  %or.cond = select i1 %cmp16.not.not, i1 %cmp89207, i1 false
  br i1 %or.cond, label %for.body.lr.ph, label %if.end116

for.body.lr.ph:                                   ; preds = %if.end87
  %12 = load float*, float** %mfc, align 8, !tbaa !74
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx92 = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %13 = bitcast float* %arrayidx92 to i32*
  %14 = load i32, i32* %13, align 4, !tbaa !37
  %or112 = call i32 @llvm.bswap.i32(i32 %14)
  store i32 %or112, i32* %13, align 4, !tbaa !37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %15 = load i32, i32* %n_float32, align 4, !tbaa !37
  %16 = sext i32 %15 to i64
  %cmp89 = icmp slt i64 %indvars.iv.next, %16
  br i1 %cmp89, label %for.body, label %if.end116, !llvm.loop !645

if.end116:                                        ; preds = %for.body, %if.end87
  %call117 = call i32 @fclose(%struct._IO_FILE* nonnull %call5) #36
  br label %cleanup

cleanup:                                          ; preds = %if.end116, %if.then85, %if.then70, %if.then56, %if.then48, %if.then42, %if.then34, %if.then11, %if.then7, %if.then2
  %retval.0 = phi i32 [ -1, %if.then2 ], [ -1, %if.then7 ], [ -1, %if.then11 ], [ -1, %if.then34 ], [ -1, %if.then42 ], [ -1, %if.then48 ], [ -1, %if.then56 ], [ -1, %if.then70 ], [ -1, %if.then85 ], [ %spec.select202205, %if.end116 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define float** @feat_vector_alloc(%struct.feat_s* nocapture readonly %fcb) local_unnamed_addr #0 {
entry:
  %call = tail call fastcc i32 @feat_stream_len_sum(%struct.feat_s* %fcb) #36
  %cmp = icmp slt i32 %call, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 386, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.31.520, i64 0, i64 0), i32 %call) #34
  br label %cleanup

if.end:                                           ; preds = %entry
  %n_stream = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 3
  %0 = load i32, i32* %n_stream, align 8, !tbaa !375
  %conv = sext i32 %0 to i64
  %call1 = tail call i8* @__ckd_calloc__(i64 %conv, i64 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i32 391) #34
  %1 = bitcast i8* %call1 to float**
  %conv225 = zext i32 %call to i64
  %call3 = tail call i8* @__ckd_calloc__(i64 %conv225, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i32 392) #34
  %2 = load i32, i32* %n_stream, align 8, !tbaa !375
  %stream_len = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 4
  %cmp526 = icmp sgt i32 %2, 0
  br i1 %cmp526, label %for.body.preheader, label %cleanup

for.body.preheader:                               ; preds = %if.end
  %3 = bitcast i8* %call3 to float*
  %wide.trip.count = zext i32 %2 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %data.028 = phi float* [ %3, %for.body.preheader ], [ %add.ptr, %for.body ]
  %arrayidx = getelementptr inbounds float*, float** %1, i64 %indvars.iv
  store float* %data.028, float** %arrayidx, align 8, !tbaa !74
  %4 = load i32*, i32** %stream_len, align 8, !tbaa !381
  %arrayidx8 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv
  %5 = load i32, i32* %arrayidx8, align 4, !tbaa !37
  %idx.ext = sext i32 %5 to i64
  %add.ptr = getelementptr inbounds float, float* %data.028, i64 %idx.ext
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !646

cleanup:                                          ; preds = %for.body, %if.end, %if.then
  %retval.0 = phi float** [ null, %if.then ], [ %1, %if.end ], [ %1, %for.body ]
  ret float** %retval.0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define internal fastcc i32 @feat_stream_len_sum(%struct.feat_s* nocapture readonly %fcb) unnamed_addr #16 {
entry:
  %n_stream = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 3
  %0 = load i32, i32* %n_stream, align 8, !tbaa !375
  %cmp7 = icmp sgt i32 %0, 0
  br i1 %cmp7, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %stream_len = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 4
  %1 = load i32*, i32** %stream_len, align 8, !tbaa !381
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %k.09 = phi i32 [ 0, %for.body.lr.ph ], [ %add, %for.body ]
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %indvars.iv
  %2 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %add = add nsw i32 %2, %k.09
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !647

for.end:                                          ; preds = %for.body, %entry
  %k.0.lcssa = phi i32 [ 0, %entry ], [ %add, %for.body ]
  ret i32 %k.0.lcssa
}

; Function Attrs: noinline nounwind optsize uwtable
define float*** @feat_array_alloc(%struct.feat_s* nocapture readonly %fcb, i32 %nfr) local_unnamed_addr #0 {
entry:
  %call = tail call fastcc i32 @feat_stream_len_sum(%struct.feat_s* %fcb) #36
  %cmp = icmp slt i32 %call, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 412, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.31.520, i64 0, i64 0), i32 %call) #34
  br label %cleanup

if.end:                                           ; preds = %entry
  %n_stream = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 3
  %0 = load i32, i32* %n_stream, align 8, !tbaa !375
  %call1 = tail call i8** @__ckd_calloc_2d__(i32 %nfr, i32 %0, i32 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i32 417) #34
  %1 = bitcast i8** %call1 to float***
  %mul = mul nsw i32 %call, %nfr
  %conv = sext i32 %mul to i64
  %call2 = tail call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i32 418) #34
  %stream_len = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 4
  %cmp343 = icmp sgt i32 %nfr, 0
  br i1 %cmp343, label %for.cond5.preheader.lr.ph, label %cleanup

for.cond5.preheader.lr.ph:                        ; preds = %if.end
  %2 = bitcast i8* %call2 to float*
  %3 = load i32, i32* %n_stream, align 8, !tbaa !375
  %cmp740 = icmp sgt i32 %3, 0
  %wide.trip.count48 = zext i32 %nfr to i64
  %wide.trip.count = zext i32 %3 to i64
  br label %for.cond5.preheader

for.cond5.preheader:                              ; preds = %for.cond5.preheader.lr.ph, %for.inc14
  %indvars.iv46 = phi i64 [ 0, %for.cond5.preheader.lr.ph ], [ %indvars.iv.next47, %for.inc14 ]
  %data.045 = phi float* [ %2, %for.cond5.preheader.lr.ph ], [ %data.1.lcssa, %for.inc14 ]
  %arrayidx39 = getelementptr inbounds i8*, i8** %call1, i64 %indvars.iv46
  %arrayidx = bitcast i8** %arrayidx39 to float***
  br i1 %cmp740, label %for.body9, label %for.inc14

for.body9:                                        ; preds = %for.cond5.preheader, %for.body9
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body9 ], [ 0, %for.cond5.preheader ]
  %data.142 = phi float* [ %add.ptr, %for.body9 ], [ %data.045, %for.cond5.preheader ]
  %4 = load float**, float*** %arrayidx, align 8, !tbaa !74
  %arrayidx11 = getelementptr inbounds float*, float** %4, i64 %indvars.iv
  store float* %data.142, float** %arrayidx11, align 8, !tbaa !74
  %5 = load i32*, i32** %stream_len, align 8, !tbaa !381
  %arrayidx13 = getelementptr inbounds i32, i32* %5, i64 %indvars.iv
  %6 = load i32, i32* %arrayidx13, align 4, !tbaa !37
  %idx.ext = sext i32 %6 to i64
  %add.ptr = getelementptr inbounds float, float* %data.142, i64 %idx.ext
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.inc14, label %for.body9, !llvm.loop !648

for.inc14:                                        ; preds = %for.body9, %for.cond5.preheader
  %data.1.lcssa = phi float* [ %data.045, %for.cond5.preheader ], [ %add.ptr, %for.body9 ]
  %indvars.iv.next47 = add nuw nsw i64 %indvars.iv46, 1
  %exitcond49.not = icmp eq i64 %indvars.iv.next47, %wide.trip.count48
  br i1 %exitcond49.not, label %cleanup, label %for.cond5.preheader, !llvm.loop !649

cleanup:                                          ; preds = %for.inc14, %if.end, %if.then
  %retval.0 = phi float*** [ null, %if.then ], [ %1, %if.end ], [ %1, %for.inc14 ]
  ret float*** %retval.0
}

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define void @feat_1s_c_d_dd_cep2feat(%struct.feat_s* nocapture readonly %fcb, float** nocapture readonly %mfc, float** nocapture readonly %feat) #12 {
entry:
  %0 = bitcast float** %feat to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !74
  %2 = bitcast float** %mfc to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !74
  %cepsize = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 1
  %4 = load i32, i32* %cepsize, align 8, !tbaa !650
  %conv = sext i32 %4 to i64
  %mul = shl nsw i64 %conv, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %3, i64 %mul, i1 false)
  %5 = load float*, float** %feat, align 8, !tbaa !74
  %6 = load i32, i32* %cepsize, align 8, !tbaa !650
  %idx.ext = sext i32 %6 to i64
  %add.ptr = getelementptr inbounds float, float* %5, i64 %idx.ext
  %arrayidx4 = getelementptr inbounds float*, float** %mfc, i64 2
  %7 = load float*, float** %arrayidx4, align 8, !tbaa !74
  %arrayidx5 = getelementptr inbounds float*, float** %mfc, i64 -2
  %8 = load float*, float** %arrayidx5, align 8, !tbaa !74
  %cmp77 = icmp sgt i32 %6, 0
  br i1 %cmp77, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count81 = zext i32 %6 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv79 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next80, %for.body ]
  %arrayidx8 = getelementptr inbounds float, float* %7, i64 %indvars.iv79
  %9 = load float, float* %arrayidx8, align 4, !tbaa !4
  %arrayidx10 = getelementptr inbounds float, float* %8, i64 %indvars.iv79
  %10 = load float, float* %arrayidx10, align 4, !tbaa !4
  %sub = fsub float %9, %10
  %arrayidx12 = getelementptr inbounds float, float* %add.ptr, i64 %indvars.iv79
  store float %sub, float* %arrayidx12, align 4, !tbaa !4
  %indvars.iv.next80 = add nuw nsw i64 %indvars.iv79, 1
  %exitcond82.not = icmp eq i64 %indvars.iv.next80, %wide.trip.count81
  br i1 %exitcond82.not, label %for.end, label %for.body, !llvm.loop !651

for.end:                                          ; preds = %for.body, %entry
  %arrayidx16 = getelementptr inbounds float*, float** %mfc, i64 3
  %11 = load float*, float** %arrayidx16, align 8, !tbaa !74
  %arrayidx17 = getelementptr inbounds float*, float** %mfc, i64 -1
  %12 = load float*, float** %arrayidx17, align 8, !tbaa !74
  %arrayidx18 = getelementptr inbounds float*, float** %mfc, i64 1
  %13 = load float*, float** %arrayidx18, align 8, !tbaa !74
  %arrayidx19 = getelementptr inbounds float*, float** %mfc, i64 -3
  %14 = load float*, float** %arrayidx19, align 8, !tbaa !74
  br i1 %cmp77, label %for.body24.preheader, label %for.end40

for.body24.preheader:                             ; preds = %for.end
  %wide.trip.count = zext i32 %6 to i64
  br label %for.body24

for.body24:                                       ; preds = %for.body24.preheader, %for.body24
  %indvars.iv = phi i64 [ 0, %for.body24.preheader ], [ %indvars.iv.next, %for.body24 ]
  %arrayidx26 = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %15 = load float, float* %arrayidx26, align 4, !tbaa !4
  %arrayidx28 = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %16 = load float, float* %arrayidx28, align 4, !tbaa !4
  %sub29 = fsub float %15, %16
  %arrayidx31 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  %17 = load float, float* %arrayidx31, align 4, !tbaa !4
  %arrayidx33 = getelementptr inbounds float, float* %14, i64 %indvars.iv
  %18 = load float, float* %arrayidx33, align 4, !tbaa !4
  %sub34 = fsub float %17, %18
  %sub35 = fsub float %sub29, %sub34
  %arrayidx37.idx = add nsw i64 %indvars.iv, %idx.ext
  %arrayidx37 = getelementptr inbounds float, float* %add.ptr, i64 %arrayidx37.idx
  store float %sub35, float* %arrayidx37, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end40, label %for.body24, !llvm.loop !652

for.end40:                                        ; preds = %for.body24, %for.end
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.feat_s* @feat_init(i8* %type, i8* %cmn, i8* %varnorm, i8* %agc) local_unnamed_addr #0 {
entry:
  %l = alloca i32, align 4
  %wd = alloca [16384 x i8], align 16
  %0 = bitcast i32* %l to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %1 = getelementptr inbounds [16384 x i8], [16384 x i8]* %wd, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %1) #38
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 642, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.491, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.32.525, i64 0, i64 0), i8* %type, i8* %cmn, i8* %varnorm, i8* %agc) #34
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 56, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i32 645) #34
  %call1 = tail call i8* @__ckd_salloc__(i8* %type, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i32 647) #34
  %name = bitcast i8* %call to i8**
  store i8* %call1, i8** %name, align 8, !tbaa !389
  %call2 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %type, i8* noundef nonnull dereferenceable(6) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33.526, i64 0, i64 0)) #37
  %cmp = icmp eq i32 %call2, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %cepsize = getelementptr inbounds i8, i8* %call, i64 8
  %2 = bitcast i8* %cepsize to i32*
  store i32 13, i32* %2, align 8, !tbaa !650
  %cepsize_used = getelementptr inbounds i8, i8* %call, i64 12
  %3 = bitcast i8* %cepsize_used to i32*
  store i32 13, i32* %3, align 4, !tbaa !653
  %n_stream = getelementptr inbounds i8, i8* %call, i64 16
  %4 = bitcast i8* %n_stream to i32*
  store i32 4, i32* %4, align 8, !tbaa !375
  %call3 = tail call i8* @__ckd_calloc__(i64 4, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i32 653) #34
  %5 = bitcast i8* %call3 to i32*
  %stream_len = getelementptr inbounds i8, i8* %call, i64 24
  %6 = bitcast i8* %stream_len to i8**
  store i8* %call3, i8** %6, align 8, !tbaa !381
  store i32 12, i32* %5, align 4, !tbaa !37
  %arrayidx6 = getelementptr inbounds i8, i8* %call3, i64 4
  %7 = bitcast i8* %arrayidx6 to i32*
  store i32 24, i32* %7, align 4, !tbaa !37
  %arrayidx8 = getelementptr inbounds i8, i8* %call3, i64 8
  %8 = bitcast i8* %arrayidx8 to i32*
  store i32 3, i32* %8, align 4, !tbaa !37
  %arrayidx10 = getelementptr inbounds i8, i8* %call3, i64 12
  %9 = bitcast i8* %arrayidx10 to i32*
  store i32 12, i32* %9, align 4, !tbaa !37
  br label %if.end176

if.else:                                          ; preds = %entry
  %call11 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %type, i8* noundef nonnull dereferenceable(8) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34.527, i64 0, i64 0)) #37
  %cmp12 = icmp eq i32 %call11, 0
  br i1 %cmp12, label %if.then13, label %if.else23

if.then13:                                        ; preds = %if.else
  %cepsize14 = getelementptr inbounds i8, i8* %call, i64 8
  %10 = bitcast i8* %cepsize14 to i32*
  store i32 13, i32* %10, align 8, !tbaa !650
  %cepsize_used15 = getelementptr inbounds i8, i8* %call, i64 12
  %11 = bitcast i8* %cepsize_used15 to i32*
  store i32 13, i32* %11, align 4, !tbaa !653
  %n_stream16 = getelementptr inbounds i8, i8* %call, i64 16
  %12 = bitcast i8* %n_stream16 to i32*
  store i32 1, i32* %12, align 8, !tbaa !375
  %call17 = tail call i8* @__ckd_calloc__(i64 1, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i32 665) #34
  %13 = bitcast i8* %call17 to i32*
  %stream_len18 = getelementptr inbounds i8, i8* %call, i64 24
  %14 = bitcast i8* %stream_len18 to i8**
  store i8* %call17, i8** %14, align 8, !tbaa !381
  store i32 39, i32* %13, align 4, !tbaa !37
  br label %if.end176

if.else23:                                        ; preds = %if.else
  %call24 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %type, i8* noundef nonnull dereferenceable(10) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35.528, i64 0, i64 0)) #37
  %cmp25 = icmp eq i32 %call24, 0
  br i1 %cmp25, label %if.then26, label %if.else36

if.then26:                                        ; preds = %if.else23
  %cepsize27 = getelementptr inbounds i8, i8* %call, i64 8
  %15 = bitcast i8* %cepsize27 to i32*
  store i32 13, i32* %15, align 8, !tbaa !650
  %cepsize_used28 = getelementptr inbounds i8, i8* %call, i64 12
  %16 = bitcast i8* %cepsize_used28 to i32*
  store i32 13, i32* %16, align 4, !tbaa !653
  %n_stream29 = getelementptr inbounds i8, i8* %call, i64 16
  %17 = bitcast i8* %n_stream29 to i32*
  store i32 1, i32* %17, align 8, !tbaa !375
  %call30 = tail call i8* @__ckd_calloc__(i64 1, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i32 673) #34
  %18 = bitcast i8* %call30 to i32*
  %stream_len31 = getelementptr inbounds i8, i8* %call, i64 24
  %19 = bitcast i8* %stream_len31 to i8**
  store i8* %call30, i8** %19, align 8, !tbaa !381
  store i32 39, i32* %18, align 4, !tbaa !37
  br label %if.end176

if.else36:                                        ; preds = %if.else23
  %call37 = tail call i32 @strncmp(i8* noundef nonnull dereferenceable(1) %type, i8* noundef nonnull dereferenceable(9) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36.529, i64 0, i64 0), i64 8) #37
  %cmp38 = icmp eq i32 %call37, 0
  br i1 %cmp38, label %if.then39, label %if.else74

if.then39:                                        ; preds = %if.else36
  %cepsize40 = getelementptr inbounds i8, i8* %call, i64 8
  %20 = bitcast i8* %cepsize40 to i32*
  store i32 13, i32* %20, align 8, !tbaa !650
  %arrayidx41 = getelementptr inbounds i8, i8* %type, i64 8
  %21 = load i8, i8* %arrayidx41, align 1, !tbaa !63
  %cmp42 = icmp eq i8 %21, 44
  br i1 %cmp42, label %if.then44, label %if.else63

if.then44:                                        ; preds = %if.then39
  %add.ptr = getelementptr inbounds i8, i8* %type, i64 9
  %cepsize_used45 = getelementptr inbounds i8, i8* %call, i64 12
  %22 = bitcast i8* %cepsize_used45 to i32*
  %call46 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %add.ptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37.530, i64 0, i64 0), i8* nonnull %cepsize_used45, i32* nonnull %l) #34
  %cmp47.not = icmp eq i32 %call46, 1
  br i1 %cmp47.not, label %lor.lhs.false, label %if.then62

lor.lhs.false:                                    ; preds = %if.then44
  %23 = load i32, i32* %l, align 4, !tbaa !37
  %add = add nsw i32 %23, 9
  %idxprom = sext i32 %add to i64
  %arrayidx49 = getelementptr inbounds i8, i8* %type, i64 %idxprom
  %24 = load i8, i8* %arrayidx49, align 1, !tbaa !63
  %cmp51.not = icmp eq i8 %24, 0
  br i1 %cmp51.not, label %lor.lhs.false53, label %if.then62

lor.lhs.false53:                                  ; preds = %lor.lhs.false
  %25 = load i32, i32* %22, align 4, !tbaa !653
  %cmp55 = icmp slt i32 %25, 1
  br i1 %cmp55, label %if.then62, label %lor.lhs.false57

lor.lhs.false57:                                  ; preds = %lor.lhs.false53
  %26 = load i32, i32* %20, align 8, !tbaa !650
  %cmp60 = icmp sgt i32 %25, %26
  br i1 %cmp60, label %if.then62, label %if.end65

if.then62:                                        ; preds = %lor.lhs.false57, %lor.lhs.false53, %lor.lhs.false, %if.then44
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 686, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38.531, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39.532, i64 0, i64 0), i8* nonnull %type) #34
  br label %if.end65

if.else63:                                        ; preds = %if.then39
  %cepsize_used64 = getelementptr inbounds i8, i8* %call, i64 12
  %27 = bitcast i8* %cepsize_used64 to i32*
  store i32 13, i32* %27, align 4, !tbaa !653
  br label %if.end65

if.end65:                                         ; preds = %lor.lhs.false57, %if.then62, %if.else63
  %.pre-phi = phi i32* [ %22, %lor.lhs.false57 ], [ %22, %if.then62 ], [ %27, %if.else63 ]
  %n_stream66 = getelementptr inbounds i8, i8* %call, i64 16
  %28 = bitcast i8* %n_stream66 to i32*
  store i32 1, i32* %28, align 8, !tbaa !375
  %call67 = call i8* @__ckd_calloc__(i64 1, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i32 690) #34
  %29 = bitcast i8* %call67 to i32*
  %stream_len68 = getelementptr inbounds i8, i8* %call, i64 24
  %30 = bitcast i8* %stream_len68 to i8**
  store i8* %call67, i8** %30, align 8, !tbaa !381
  %31 = load i32, i32* %.pre-phi, align 4, !tbaa !653
  %mul = shl nsw i32 %31, 1
  store i32 %mul, i32* %29, align 4, !tbaa !37
  br label %if.end176

if.else74:                                        ; preds = %if.else36
  %call75 = tail call i32 @strncmp(i8* noundef nonnull dereferenceable(1) %type, i8* noundef nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40.533, i64 0, i64 0), i64 3) #37
  %cmp76 = icmp eq i32 %call75, 0
  br i1 %cmp76, label %if.then78, label %if.else119

if.then78:                                        ; preds = %if.else74
  %cepsize79 = getelementptr inbounds i8, i8* %call, i64 8
  %32 = bitcast i8* %cepsize79 to i32*
  store i32 13, i32* %32, align 8, !tbaa !650
  %arrayidx80 = getelementptr inbounds i8, i8* %type, i64 3
  %33 = load i8, i8* %arrayidx80, align 1, !tbaa !63
  %cmp82 = icmp eq i8 %33, 44
  br i1 %cmp82, label %if.then84, label %if.else108

if.then84:                                        ; preds = %if.then78
  %add.ptr85 = getelementptr inbounds i8, i8* %type, i64 4
  %cepsize_used86 = getelementptr inbounds i8, i8* %call, i64 12
  %34 = bitcast i8* %cepsize_used86 to i32*
  %call87 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %add.ptr85, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37.530, i64 0, i64 0), i8* nonnull %cepsize_used86, i32* nonnull %l) #34
  %cmp88.not = icmp eq i32 %call87, 1
  br i1 %cmp88.not, label %lor.lhs.false90, label %if.then106

lor.lhs.false90:                                  ; preds = %if.then84
  %35 = load i32, i32* %l, align 4, !tbaa !37
  %add91 = add nsw i32 %35, 4
  %idxprom92 = sext i32 %add91 to i64
  %arrayidx93 = getelementptr inbounds i8, i8* %type, i64 %idxprom92
  %36 = load i8, i8* %arrayidx93, align 1, !tbaa !63
  %cmp95.not = icmp eq i8 %36, 0
  br i1 %cmp95.not, label %lor.lhs.false97, label %if.then106

lor.lhs.false97:                                  ; preds = %lor.lhs.false90
  %37 = load i32, i32* %34, align 4, !tbaa !653
  %cmp99 = icmp slt i32 %37, 1
  br i1 %cmp99, label %if.then106, label %lor.lhs.false101

lor.lhs.false101:                                 ; preds = %lor.lhs.false97
  %38 = load i32, i32* %32, align 8, !tbaa !650
  %cmp104 = icmp sgt i32 %37, %38
  br i1 %cmp104, label %if.then106, label %if.end110

if.then106:                                       ; preds = %lor.lhs.false101, %lor.lhs.false97, %lor.lhs.false90, %if.then84
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 703, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38.531, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39.532, i64 0, i64 0), i8* nonnull %type) #34
  br label %if.end110

if.else108:                                       ; preds = %if.then78
  %cepsize_used109 = getelementptr inbounds i8, i8* %call, i64 12
  %39 = bitcast i8* %cepsize_used109 to i32*
  store i32 13, i32* %39, align 4, !tbaa !653
  br label %if.end110

if.end110:                                        ; preds = %lor.lhs.false101, %if.then106, %if.else108
  %.pre-phi340 = phi i32* [ %34, %lor.lhs.false101 ], [ %34, %if.then106 ], [ %39, %if.else108 ]
  %n_stream111 = getelementptr inbounds i8, i8* %call, i64 16
  %40 = bitcast i8* %n_stream111 to i32*
  store i32 1, i32* %40, align 8, !tbaa !375
  %call112 = call i8* @__ckd_calloc__(i64 1, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i32 707) #34
  %41 = bitcast i8* %call112 to i32*
  %stream_len113 = getelementptr inbounds i8, i8* %call, i64 24
  %42 = bitcast i8* %stream_len113 to i8**
  store i8* %call112, i8** %42, align 8, !tbaa !381
  %43 = load i32, i32* %.pre-phi340, align 4, !tbaa !653
  store i32 %43, i32* %41, align 4, !tbaa !37
  br label %if.end176

if.else119:                                       ; preds = %if.else74
  %call120 = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %type) #37
  %conv121 = trunc i64 %call120 to i32
  store i32 %conv121, i32* %l, align 4, !tbaa !37
  %cmp122334 = icmp sgt i32 %conv121, 2
  br i1 %cmp122334, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %if.else119
  %44 = add i64 %call120, 4294967295
  %wide.trip.count = and i64 %44, 4294967295
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv338 = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next339, %for.inc ]
  %k.0336 = phi i32 [ 0, %for.body.preheader ], [ %k.1, %for.inc ]
  %arrayidx125 = getelementptr inbounds i8, i8* %type, i64 %indvars.iv338
  %45 = load i8, i8* %arrayidx125, align 1, !tbaa !63
  %cmp127 = icmp eq i8 %45, 44
  br i1 %cmp127, label %if.then129, label %for.inc

if.then129:                                       ; preds = %for.body
  store i8 32, i8* %arrayidx125, align 1, !tbaa !63
  %inc = add nsw i32 %k.0336, 1
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then129
  %k.1 = phi i32 [ %inc, %if.then129 ], [ %k.0336, %for.body ]
  %indvars.iv.next339 = add nuw nsw i64 %indvars.iv338, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next339, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !654

for.end:                                          ; preds = %for.inc, %if.else119
  %k.0.lcssa = phi i32 [ 0, %if.else119 ], [ %k.1, %for.inc ]
  %inc134 = add nsw i32 %k.0.lcssa, 1
  %n_stream135 = getelementptr inbounds i8, i8* %call, i64 16
  %46 = bitcast i8* %n_stream135 to i32*
  store i32 %inc134, i32* %46, align 8, !tbaa !375
  %conv136 = sext i32 %inc134 to i64
  %call137 = tail call i8* @__ckd_calloc__(i64 %conv136, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i32 725) #34
  %stream_len138 = getelementptr inbounds i8, i8* %call, i64 24
  %47 = bitcast i8* %stream_len138 to i32**
  %48 = bitcast i8* %stream_len138 to i8**
  store i8* %call137, i8** %48, align 8, !tbaa !381
  %call139328 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %type, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41.534, i64 0, i64 0), i8* nonnull %1, i32* nonnull %l) #34
  %cmp140329 = icmp eq i32 %call139328, 1
  br i1 %cmp140329, label %while.body, label %while.end

while.body:                                       ; preds = %for.end, %if.end161
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end161 ], [ 0, %for.end ]
  %strp.0333 = phi i8* [ %add.ptr142, %if.end161 ], [ %type, %for.end ]
  %49 = load i32, i32* %l, align 4, !tbaa !37
  %idx.ext = sext i32 %49 to i64
  %add.ptr142 = getelementptr inbounds i8, i8* %strp.0333, i64 %idx.ext
  %50 = load i32, i32* %46, align 8, !tbaa !375
  %51 = sext i32 %50 to i64
  %cmp144.not = icmp slt i64 %indvars.iv, %51
  br i1 %cmp144.not, label %lor.lhs.false146, label %if.then160

lor.lhs.false146:                                 ; preds = %while.body
  %52 = load i32*, i32** %47, align 8, !tbaa !381
  %arrayidx150 = getelementptr inbounds i32, i32* %52, i64 %indvars.iv
  %call151 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42.535, i64 0, i64 0), i32* %arrayidx150) #34
  %cmp152.not = icmp eq i32 %call151, 1
  br i1 %cmp152.not, label %lor.lhs.false154, label %if.then160

lor.lhs.false154:                                 ; preds = %lor.lhs.false146
  %53 = load i32*, i32** %47, align 8, !tbaa !381
  %arrayidx157 = getelementptr inbounds i32, i32* %53, i64 %indvars.iv
  %54 = load i32, i32* %arrayidx157, align 4, !tbaa !37
  %cmp158 = icmp slt i32 %54, 1
  br i1 %cmp158, label %if.then160, label %if.end161

if.then160:                                       ; preds = %lor.lhs.false154, %lor.lhs.false146, %while.body
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 734, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38.531, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43.536, i64 0, i64 0)) #34
  br label %if.end161

if.end161:                                        ; preds = %if.then160, %lor.lhs.false154
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %call139 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %add.ptr142, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41.534, i64 0, i64 0), i8* nonnull %1, i32* nonnull %l) #34
  %cmp140 = icmp eq i32 %call139, 1
  br i1 %cmp140, label %while.body, label %while.end.loopexit, !llvm.loop !655

while.end.loopexit:                               ; preds = %if.end161
  %55 = trunc i64 %indvars.iv.next to i32
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %for.end
  %i.1.lcssa = phi i32 [ 0, %for.end ], [ %55, %while.end.loopexit ]
  %56 = load i32, i32* %46, align 8, !tbaa !375
  %cmp164.not = icmp eq i32 %i.1.lcssa, %56
  br i1 %cmp164.not, label %if.end167, label %if.then166

if.then166:                                       ; preds = %while.end
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 738, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38.531, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43.536, i64 0, i64 0)) #34
  br label %if.end167

if.end167:                                        ; preds = %if.then166, %while.end
  %cepsize168 = getelementptr inbounds i8, i8* %call, i64 8
  %57 = bitcast i8* %cepsize168 to i32*
  store i32 -1, i32* %57, align 8, !tbaa !650
  %cepsize_used169 = getelementptr inbounds i8, i8* %call, i64 12
  %58 = bitcast i8* %cepsize_used169 to i32*
  store i32 -1, i32* %58, align 4, !tbaa !653
  br label %if.end176

if.end176:                                        ; preds = %if.then13, %if.end65, %if.end167, %if.end110, %if.then26, %if.then
  %.sink = phi i32 [ 3, %if.then13 ], [ 2, %if.end65 ], [ 0, %if.end167 ], [ 0, %if.end110 ], [ 3, %if.then26 ], [ 4, %if.then ]
  %feat_s3_1x39_cep2feat.sink = phi void (%struct.feat_s*, float**, float**)* [ @feat_s3_1x39_cep2feat, %if.then13 ], [ @feat_s3_cep_dcep, %if.end65 ], [ null, %if.end167 ], [ @feat_s3_cep, %if.end110 ], [ @feat_1s_c_d_dd_cep2feat, %if.then26 ], [ @feat_s2_4x_cep2feat, %if.then ]
  %window_size21 = getelementptr inbounds i8, i8* %call, i64 32
  %59 = bitcast i8* %window_size21 to i32*
  store i32 %.sink, i32* %59, align 8, !tbaa !656
  %compute_feat22 = getelementptr inbounds i8, i8* %call, i64 48
  %60 = bitcast i8* %compute_feat22 to void (%struct.feat_s*, float**, float**)**
  store void (%struct.feat_s*, float**, float**)* %feat_s3_1x39_cep2feat.sink, void (%struct.feat_s*, float**, float**)** %60, align 8, !tbaa !657
  %call177 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %cmn, i8* noundef nonnull dereferenceable(8) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44.537, i64 0, i64 0)) #37
  %cmp178 = icmp eq i32 %call177, 0
  br i1 %cmp178, label %if.then180, label %if.else182

if.then180:                                       ; preds = %if.end176
  %cmn181 = getelementptr inbounds i8, i8* %call, i64 36
  %61 = bitcast i8* %cmn181 to i32*
  store i32 1, i32* %61, align 4, !tbaa !658
  br label %if.end190

if.else182:                                       ; preds = %if.end176
  %call183 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %cmn, i8* noundef nonnull dereferenceable(5) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45.538, i64 0, i64 0)) #37
  %cmp184 = icmp eq i32 %call183, 0
  br i1 %cmp184, label %if.then186, label %if.else188

if.then186:                                       ; preds = %if.else182
  %cmn187 = getelementptr inbounds i8, i8* %call, i64 36
  %62 = bitcast i8* %cmn187 to i32*
  store i32 0, i32* %62, align 4, !tbaa !658
  br label %if.end190

if.else188:                                       ; preds = %if.else182
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 752, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38.531, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46.539, i64 0, i64 0), i8* %cmn) #34
  br label %if.end190

if.end190:                                        ; preds = %if.then186, %if.else188, %if.then180
  %call191 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %varnorm, i8* noundef nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47.540, i64 0, i64 0)) #37
  %cmp192 = icmp eq i32 %call191, 0
  br i1 %cmp192, label %if.then194, label %if.else196

if.then194:                                       ; preds = %if.end190
  %varnorm195 = getelementptr inbounds i8, i8* %call, i64 40
  %63 = bitcast i8* %varnorm195 to i32*
  store i32 1, i32* %63, align 8, !tbaa !659
  br label %if.end204

if.else196:                                       ; preds = %if.end190
  %call197 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %varnorm, i8* noundef nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48.541, i64 0, i64 0)) #37
  %cmp198 = icmp eq i32 %call197, 0
  br i1 %cmp198, label %if.then200, label %if.else202

if.then200:                                       ; preds = %if.else196
  %varnorm201 = getelementptr inbounds i8, i8* %call, i64 40
  %64 = bitcast i8* %varnorm201 to i32*
  store i32 0, i32* %64, align 8, !tbaa !659
  br label %if.end204

if.else202:                                       ; preds = %if.else196
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 759, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38.531, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.49.542, i64 0, i64 0), i8* %varnorm) #34
  br label %if.end204

if.end204:                                        ; preds = %if.then200, %if.else202, %if.then194
  %call205 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %agc, i8* noundef nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50.543, i64 0, i64 0)) #37
  %cmp206 = icmp eq i32 %call205, 0
  br i1 %cmp206, label %if.then208, label %if.else210

if.then208:                                       ; preds = %if.end204
  %agc209 = getelementptr inbounds i8, i8* %call, i64 44
  %65 = bitcast i8* %agc209 to i32*
  store i32 1, i32* %65, align 4, !tbaa !660
  br label %if.end218

if.else210:                                       ; preds = %if.end204
  %call211 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %agc, i8* noundef nonnull dereferenceable(5) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45.538, i64 0, i64 0)) #37
  %cmp212 = icmp eq i32 %call211, 0
  br i1 %cmp212, label %if.then214, label %if.else216

if.then214:                                       ; preds = %if.else210
  %agc215 = getelementptr inbounds i8, i8* %call, i64 44
  %66 = bitcast i8* %agc215 to i32*
  store i32 0, i32* %66, align 4, !tbaa !660
  br label %if.end218

if.else216:                                       ; preds = %if.else210
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 766, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38.531, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.51.544, i64 0, i64 0), i8* %agc) #34
  br label %if.end218

if.end218:                                        ; preds = %if.then214, %if.else216, %if.then208
  %67 = bitcast i8* %call to %struct.feat_s*
  call void @llvm.lifetime.end.p0i8(i64 16384, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret %struct.feat_s* %67
}

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define internal void @feat_s3_1x39_cep2feat(%struct.feat_s* nocapture readonly %fcb, float** nocapture readonly %mfc, float** nocapture readonly %feat) #12 {
entry:
  %0 = bitcast float** %feat to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !74
  %2 = load float*, float** %mfc, align 8, !tbaa !74
  %add.ptr = getelementptr inbounds float, float* %2, i64 1
  %3 = bitcast float* %add.ptr to i8*
  %cepsize = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 1
  %4 = load i32, i32* %cepsize, align 8, !tbaa !650
  %sub = add nsw i32 %4, -1
  %conv = sext i32 %sub to i64
  %mul = shl nsw i64 %conv, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* nonnull align 4 %3, i64 %mul, i1 false)
  %5 = load float*, float** %feat, align 8, !tbaa !74
  %6 = load i32, i32* %cepsize, align 8, !tbaa !650
  %idx.ext = sext i32 %6 to i64
  %add.ptr5.idx = add nsw i64 %idx.ext, -1
  %add.ptr5 = getelementptr inbounds float, float* %5, i64 %add.ptr5.idx
  %arrayidx6 = getelementptr inbounds float*, float** %mfc, i64 2
  %7 = load float*, float** %arrayidx6, align 8, !tbaa !74
  %arrayidx8 = getelementptr inbounds float*, float** %mfc, i64 -2
  %8 = load float*, float** %arrayidx8, align 8, !tbaa !74
  %sub11 = add i32 %6, -1
  %cmp124 = icmp sgt i32 %6, 1
  br i1 %cmp124, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count128 = zext i32 %sub11 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv126 = phi i64 [ 0, %for.body.preheader ], [ %arrayidx13.idx, %for.body ]
  %arrayidx13.idx = add nuw nsw i64 %indvars.iv126, 1
  %arrayidx13 = getelementptr inbounds float, float* %7, i64 %arrayidx13.idx
  %9 = load float, float* %arrayidx13, align 4, !tbaa !4
  %arrayidx15 = getelementptr inbounds float, float* %8, i64 %arrayidx13.idx
  %10 = load float, float* %arrayidx15, align 4, !tbaa !4
  %sub16 = fsub float %9, %10
  %arrayidx18 = getelementptr inbounds float, float* %add.ptr5, i64 %indvars.iv126
  store float %sub16, float* %arrayidx18, align 4, !tbaa !4
  %exitcond129.not = icmp eq i64 %arrayidx13.idx, %wide.trip.count128
  br i1 %exitcond129.not, label %for.end, label %for.body, !llvm.loop !661

for.end:                                          ; preds = %for.body, %entry
  %idx.ext21 = sext i32 %sub11 to i64
  %add.ptr22 = getelementptr inbounds float, float* %add.ptr5, i64 %idx.ext21
  %11 = load float*, float** %mfc, align 8, !tbaa !74
  %12 = load float, float* %11, align 4, !tbaa !4
  store float %12, float* %add.ptr22, align 4, !tbaa !4
  %13 = load float, float* %7, align 4, !tbaa !4
  %14 = load float, float* %8, align 4, !tbaa !4
  %sub30 = fsub float %13, %14
  %arrayidx31 = getelementptr inbounds float, float* %add.ptr22, i64 1
  store float %sub30, float* %arrayidx31, align 4, !tbaa !4
  %arrayidx32 = getelementptr inbounds float*, float** %mfc, i64 3
  %15 = load float*, float** %arrayidx32, align 8, !tbaa !74
  %16 = load float, float* %15, align 4, !tbaa !4
  %arrayidx34 = getelementptr inbounds float*, float** %mfc, i64 -1
  %17 = load float*, float** %arrayidx34, align 8, !tbaa !74
  %18 = load float, float* %17, align 4, !tbaa !4
  %sub36 = fsub float %16, %18
  %arrayidx37 = getelementptr inbounds float*, float** %mfc, i64 1
  %19 = load float*, float** %arrayidx37, align 8, !tbaa !74
  %20 = load float, float* %19, align 4, !tbaa !4
  %arrayidx39 = getelementptr inbounds float*, float** %mfc, i64 -3
  %21 = load float*, float** %arrayidx39, align 8, !tbaa !74
  %22 = load float, float* %21, align 4, !tbaa !4
  %sub41 = fsub float %20, %22
  %sub42 = fsub float %sub36, %sub41
  %arrayidx43 = getelementptr inbounds float, float* %add.ptr22, i64 2
  store float %sub42, float* %arrayidx43, align 4, !tbaa !4
  br i1 %cmp124, label %for.body58.preheader, label %for.end74

for.body58.preheader:                             ; preds = %for.end
  %wide.trip.count = zext i32 %sub11 to i64
  br label %for.body58

for.body58:                                       ; preds = %for.body58.preheader, %for.body58
  %indvars.iv = phi i64 [ 0, %for.body58.preheader ], [ %arrayidx60.idx, %for.body58 ]
  %arrayidx60.idx = add nuw nsw i64 %indvars.iv, 1
  %arrayidx60 = getelementptr inbounds float, float* %15, i64 %arrayidx60.idx
  %23 = load float, float* %arrayidx60, align 4, !tbaa !4
  %arrayidx62 = getelementptr inbounds float, float* %17, i64 %arrayidx60.idx
  %24 = load float, float* %arrayidx62, align 4, !tbaa !4
  %sub63 = fsub float %23, %24
  %arrayidx65 = getelementptr inbounds float, float* %19, i64 %arrayidx60.idx
  %25 = load float, float* %arrayidx65, align 4, !tbaa !4
  %arrayidx67 = getelementptr inbounds float, float* %21, i64 %arrayidx60.idx
  %26 = load float, float* %arrayidx67, align 4, !tbaa !4
  %sub68 = fsub float %25, %26
  %sub69 = fsub float %sub63, %sub68
  %arrayidx71.idx = add nuw nsw i64 %indvars.iv, 3
  %arrayidx71 = getelementptr inbounds float, float* %add.ptr22, i64 %arrayidx71.idx
  store float %sub69, float* %arrayidx71, align 4, !tbaa !4
  %exitcond.not = icmp eq i64 %arrayidx60.idx, %wide.trip.count
  br i1 %exitcond.not, label %for.end74, label %for.body58, !llvm.loop !662

for.end74:                                        ; preds = %for.body58, %for.end
  ret void
}

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define internal void @feat_s3_cep_dcep(%struct.feat_s* nocapture readonly %fcb, float** nocapture readonly %mfc, float** nocapture readonly %feat) #12 {
entry:
  %0 = bitcast float** %feat to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !74
  %2 = bitcast float** %mfc to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !74
  %cepsize_used = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 2
  %4 = load i32, i32* %cepsize_used, align 4, !tbaa !653
  %conv = sext i32 %4 to i64
  %mul = shl nsw i64 %conv, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %3, i64 %mul, i1 false)
  %5 = load float*, float** %feat, align 8, !tbaa !74
  %6 = load i32, i32* %cepsize_used, align 4, !tbaa !653
  %idx.ext = sext i32 %6 to i64
  %arrayidx4 = getelementptr inbounds float*, float** %mfc, i64 2
  %7 = load float*, float** %arrayidx4, align 8, !tbaa !74
  %arrayidx5 = getelementptr inbounds float*, float** %mfc, i64 -2
  %8 = load float*, float** %arrayidx5, align 8, !tbaa !74
  %cmp26 = icmp sgt i32 %6, 0
  br i1 %cmp26, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %6 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %arrayidx8 = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %9 = load float, float* %arrayidx8, align 4, !tbaa !4
  %arrayidx10 = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %10 = load float, float* %arrayidx10, align 4, !tbaa !4
  %sub = fsub float %9, %10
  %arrayidx12.idx = add nsw i64 %indvars.iv, %idx.ext
  %arrayidx12 = getelementptr inbounds float, float* %5, i64 %arrayidx12.idx
  store float %sub, float* %arrayidx12, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !663

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize uwtable willreturn
define internal void @feat_s3_cep(%struct.feat_s* nocapture readonly %fcb, float** nocapture readonly %mfc, float** nocapture readonly %feat) #27 {
entry:
  %0 = bitcast float** %feat to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !74
  %2 = bitcast float** %mfc to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !74
  %cepsize_used = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 2
  %4 = load i32, i32* %cepsize_used, align 4, !tbaa !653
  %conv = sext i32 %4 to i64
  %mul = shl nsw i64 %conv, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %3, i64 %mul, i1 false)
  ret void
}

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define internal void @feat_s2_4x_cep2feat(%struct.feat_s* nocapture readonly %fcb, float** nocapture readonly %mfc, float** nocapture readonly %feat) #12 {
entry:
  %0 = bitcast float** %feat to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !74
  %2 = load float*, float** %mfc, align 8, !tbaa !74
  %add.ptr = getelementptr inbounds float, float* %2, i64 1
  %3 = bitcast float* %add.ptr to i8*
  %cepsize = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 1
  %4 = load i32, i32* %cepsize, align 8, !tbaa !650
  %sub = add nsw i32 %4, -1
  %conv = sext i32 %sub to i64
  %mul = shl nsw i64 %conv, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* nonnull align 4 %3, i64 %mul, i1 false)
  %arrayidx2 = getelementptr inbounds float*, float** %mfc, i64 2
  %5 = load float*, float** %arrayidx2, align 8, !tbaa !74
  %arrayidx4 = getelementptr inbounds float*, float** %mfc, i64 -2
  %6 = load float*, float** %arrayidx4, align 8, !tbaa !74
  %arrayidx6 = getelementptr inbounds float*, float** %feat, i64 1
  %7 = load float*, float** %arrayidx6, align 8, !tbaa !74
  %8 = load i32, i32* %cepsize, align 8, !tbaa !650
  %cmp152 = icmp sgt i32 %8, 1
  br i1 %cmp152, label %for.body.preheader, label %for.end36

for.body.preheader:                               ; preds = %entry
  %9 = add nsw i32 %8, -1
  %wide.trip.count163 = zext i32 %9 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv161 = phi i64 [ 0, %for.body.preheader ], [ %arrayidx10.idx, %for.body ]
  %arrayidx10.idx = add nuw nsw i64 %indvars.iv161, 1
  %arrayidx10 = getelementptr inbounds float, float* %5, i64 %arrayidx10.idx
  %10 = load float, float* %arrayidx10, align 4, !tbaa !4
  %arrayidx12 = getelementptr inbounds float, float* %6, i64 %arrayidx10.idx
  %11 = load float, float* %arrayidx12, align 4, !tbaa !4
  %sub13 = fsub float %10, %11
  %arrayidx15 = getelementptr inbounds float, float* %7, i64 %indvars.iv161
  store float %sub13, float* %arrayidx15, align 4, !tbaa !4
  %exitcond164.not = icmp eq i64 %arrayidx10.idx, %wide.trip.count163
  br i1 %exitcond164.not, label %for.end, label %for.body, !llvm.loop !664

for.end:                                          ; preds = %for.body
  %arrayidx16 = getelementptr inbounds float*, float** %mfc, i64 4
  %12 = load float*, float** %arrayidx16, align 8, !tbaa !74
  %arrayidx18 = getelementptr inbounds float*, float** %mfc, i64 -4
  %13 = load float*, float** %arrayidx18, align 8, !tbaa !74
  br i1 %cmp152, label %for.body25.preheader, label %for.end36

for.body25.preheader:                             ; preds = %for.end
  %phi.cast = zext i32 %9 to i64
  %14 = add nsw i32 %8, -1
  %wide.trip.count159 = zext i32 %14 to i64
  br label %for.body25

for.body25:                                       ; preds = %for.body25.preheader, %for.body25
  %indvars.iv157 = phi i64 [ %phi.cast, %for.body25.preheader ], [ %indvars.iv.next158, %for.body25 ]
  %indvars.iv155 = phi i64 [ 0, %for.body25.preheader ], [ %indvars.iv.next156, %for.body25 ]
  %indvars.iv.next156 = add nuw nsw i64 %indvars.iv155, 1
  %arrayidx27 = getelementptr inbounds float, float* %12, i64 %indvars.iv.next156
  %15 = load float, float* %arrayidx27, align 4, !tbaa !4
  %arrayidx29 = getelementptr inbounds float, float* %13, i64 %indvars.iv.next156
  %16 = load float, float* %arrayidx29, align 4, !tbaa !4
  %sub30 = fsub float %15, %16
  %arrayidx32 = getelementptr inbounds float, float* %7, i64 %indvars.iv157
  store float %sub30, float* %arrayidx32, align 4, !tbaa !4
  %indvars.iv.next158 = add nuw nsw i64 %indvars.iv157, 1
  %exitcond160.not = icmp eq i64 %indvars.iv.next156, %wide.trip.count159
  br i1 %exitcond160.not, label %for.end36, label %for.body25, !llvm.loop !665

for.end36:                                        ; preds = %for.body25, %entry, %for.end
  %arrayidx37 = getelementptr inbounds float*, float** %mfc, i64 3
  %17 = load float*, float** %arrayidx37, align 8, !tbaa !74
  %arrayidx39 = getelementptr inbounds float*, float** %mfc, i64 -1
  %18 = load float*, float** %arrayidx39, align 8, !tbaa !74
  %arrayidx41 = getelementptr inbounds float*, float** %mfc, i64 1
  %19 = load float*, float** %arrayidx41, align 8, !tbaa !74
  %arrayidx43 = getelementptr inbounds float*, float** %mfc, i64 -3
  %20 = load float*, float** %arrayidx43, align 8, !tbaa !74
  %arrayidx45 = getelementptr inbounds float*, float** %feat, i64 3
  %21 = load float*, float** %arrayidx45, align 8, !tbaa !74
  br i1 %cmp152, label %for.body51.preheader, label %for.end67

for.body51.preheader:                             ; preds = %for.end36
  %22 = add nsw i32 %8, -1
  %wide.trip.count = zext i32 %22 to i64
  br label %for.body51

for.body51:                                       ; preds = %for.body51.preheader, %for.body51
  %indvars.iv = phi i64 [ 0, %for.body51.preheader ], [ %arrayidx53.idx, %for.body51 ]
  %arrayidx53.idx = add nuw nsw i64 %indvars.iv, 1
  %arrayidx53 = getelementptr inbounds float, float* %17, i64 %arrayidx53.idx
  %23 = load float, float* %arrayidx53, align 4, !tbaa !4
  %arrayidx55 = getelementptr inbounds float, float* %18, i64 %arrayidx53.idx
  %24 = load float, float* %arrayidx55, align 4, !tbaa !4
  %sub56 = fsub float %23, %24
  %arrayidx58 = getelementptr inbounds float, float* %19, i64 %arrayidx53.idx
  %25 = load float, float* %arrayidx58, align 4, !tbaa !4
  %arrayidx60 = getelementptr inbounds float, float* %20, i64 %arrayidx53.idx
  %26 = load float, float* %arrayidx60, align 4, !tbaa !4
  %sub61 = fsub float %25, %26
  %sub62 = fsub float %sub56, %sub61
  %arrayidx64 = getelementptr inbounds float, float* %21, i64 %indvars.iv
  store float %sub62, float* %arrayidx64, align 4, !tbaa !4
  %exitcond.not = icmp eq i64 %arrayidx53.idx, %wide.trip.count
  br i1 %exitcond.not, label %for.end67, label %for.body51, !llvm.loop !666

for.end67:                                        ; preds = %for.body51, %for.end36
  %arrayidx68 = getelementptr inbounds float*, float** %feat, i64 2
  %27 = load float*, float** %arrayidx68, align 8, !tbaa !74
  %28 = load float*, float** %mfc, align 8, !tbaa !74
  %29 = load float, float* %28, align 4, !tbaa !4
  store float %29, float* %27, align 4, !tbaa !4
  %30 = load float, float* %5, align 4, !tbaa !4
  %31 = load float, float* %6, align 4, !tbaa !4
  %sub76 = fsub float %30, %31
  %arrayidx77 = getelementptr inbounds float, float* %27, i64 1
  store float %sub76, float* %arrayidx77, align 4, !tbaa !4
  %32 = load float, float* %17, align 4, !tbaa !4
  %33 = load float, float* %18, align 4, !tbaa !4
  %sub82 = fsub float %32, %33
  %34 = load float, float* %19, align 4, !tbaa !4
  %35 = load float, float* %20, align 4, !tbaa !4
  %sub87 = fsub float %34, %35
  %sub88 = fsub float %sub82, %sub87
  %arrayidx89 = getelementptr inbounds float, float* %27, i64 2
  store float %sub88, float* %arrayidx89, align 4, !tbaa !4
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @feat_print(%struct.feat_s* nocapture readonly %fcb, float*** nocapture readonly %feat, i32 %nfr, %struct._IO_FILE* nocapture %fp) local_unnamed_addr #14 {
entry:
  %n_stream = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 3
  %stream_len = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 4
  %cmp45 = icmp sgt i32 %nfr, 0
  br i1 %cmp45, label %for.body.preheader, label %for.end21

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %nfr to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc19
  %indvars.iv49 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next50, %for.inc19 ]
  %0 = trunc i64 %indvars.iv49 to i32
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52.545, i64 0, i64 0), i32 %0) #36
  %arrayidx9 = getelementptr inbounds float**, float*** %feat, i64 %indvars.iv49
  %1 = load i32, i32* %n_stream, align 8, !tbaa !375
  %cmp243 = icmp sgt i32 %1, 0
  br i1 %cmp243, label %for.body3, label %for.inc19

for.body3:                                        ; preds = %for.body, %for.end
  %indvars.iv47 = phi i64 [ %indvars.iv.next48, %for.end ], [ 0, %for.body ]
  %2 = trunc i64 %indvars.iv47 to i32
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53.546, i64 0, i64 0), i32 %2) #36
  %3 = load i32*, i32** %stream_len, align 8, !tbaa !381
  %arrayidx40 = getelementptr inbounds i32, i32* %3, i64 %indvars.iv47
  %4 = load i32, i32* %arrayidx40, align 4, !tbaa !37
  %cmp641 = icmp sgt i32 %4, 0
  br i1 %cmp641, label %for.body7, label %for.end

for.body7:                                        ; preds = %for.body3, %for.body7
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body7 ], [ 0, %for.body3 ]
  %5 = load float**, float*** %arrayidx9, align 8, !tbaa !74
  %arrayidx11 = getelementptr inbounds float*, float** %5, i64 %indvars.iv47
  %6 = load float*, float** %arrayidx11, align 8, !tbaa !74
  %arrayidx13 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %7 = load float, float* %arrayidx13, align 4, !tbaa !4
  %conv = fpext float %7 to double
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54.547, i64 0, i64 0), double %conv) #36
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %8 = load i32*, i32** %stream_len, align 8, !tbaa !381
  %arrayidx = getelementptr inbounds i32, i32* %8, i64 %indvars.iv47
  %9 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %10 = sext i32 %9 to i64
  %cmp6 = icmp slt i64 %indvars.iv.next, %10
  br i1 %cmp6, label %for.body7, label %for.end, !llvm.loop !667

for.end:                                          ; preds = %for.body7, %for.body3
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  %indvars.iv.next48 = add nuw nsw i64 %indvars.iv47, 1
  %11 = load i32, i32* %n_stream, align 8, !tbaa !375
  %12 = sext i32 %11 to i64
  %cmp2 = icmp slt i64 %indvars.iv.next48, %12
  br i1 %cmp2, label %for.body3, label %for.inc19, !llvm.loop !668

for.inc19:                                        ; preds = %for.end, %for.body
  %indvars.iv.next50 = add nuw nsw i64 %indvars.iv49, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next50, %wide.trip.count
  br i1 %exitcond.not, label %for.end21, label %for.body, !llvm.loop !669

for.end21:                                        ; preds = %for.inc19, %entry
  %call22 = tail call i32 @fflush(%struct._IO_FILE* %fp) #36
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @feat_s2mfc2feat(%struct.feat_s* %fcb, i8* %file, i8* %dir, i32 %sf, i32 %ef, float*** nocapture readonly %feat, i32 %maxfr) local_unnamed_addr #0 {
entry:
  %path = alloca [16384 x i8], align 16
  %0 = getelementptr inbounds [16384 x i8], [16384 x i8]* %path, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %0) #38
  %cepsize = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 1
  %1 = load i32, i32* %cepsize, align 8, !tbaa !650
  %cmp = icmp slt i32 %1, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 802, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  %2 = load i32, i32* %cepsize, align 8, !tbaa !650
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.56.548, i64 0, i64 0), i32 %2) #34
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %file) #37
  %conv = trunc i64 %call to i32
  %cmp2 = icmp sgt i32 %conv, 4
  br i1 %cmp2, label %land.lhs.true, label %if.else18

land.lhs.true:                                    ; preds = %if.end
  %sext = shl i64 %call, 32
  %idx.ext = ashr exact i64 %sext, 32
  %add.ptr4.idx = add nsw i64 %idx.ext, -4
  %add.ptr4 = getelementptr inbounds i8, i8* %file, i64 %add.ptr4.idx
  %call5 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %add.ptr4, i8* noundef nonnull dereferenceable(5) getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57.549, i64 0, i64 0)) #37
  %cmp6 = icmp eq i32 %call5, 0
  br i1 %cmp6, label %if.then8, label %if.else18

if.then8:                                         ; preds = %land.lhs.true
  %tobool.not = icmp eq i8* %dir, null
  br i1 %tobool.not, label %if.else, label %land.lhs.true9

land.lhs.true9:                                   ; preds = %if.then8
  %3 = load i8, i8* %file, align 1, !tbaa !63
  %cmp11.not = icmp eq i8 %3, 47
  br i1 %cmp11.not, label %if.else, label %if.then13

if.then13:                                        ; preds = %land.lhs.true9
  %call14 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58.550, i64 0, i64 0), i8* nonnull %dir, i8* nonnull %file) #34
  br label %if.end32

if.else:                                          ; preds = %land.lhs.true9, %if.then8
  %call16 = call i8* @strcpy(i8* noundef nonnull %0, i8* noundef nonnull dereferenceable(1) %file) #34
  br label %if.end32

if.else18:                                        ; preds = %land.lhs.true, %if.end
  %tobool19.not = icmp eq i8* %dir, null
  br i1 %tobool19.not, label %if.else28, label %land.lhs.true20

land.lhs.true20:                                  ; preds = %if.else18
  %4 = load i8, i8* %file, align 1, !tbaa !63
  %cmp23.not = icmp eq i8 %4, 47
  br i1 %cmp23.not, label %if.else28, label %if.then25

if.then25:                                        ; preds = %land.lhs.true20
  %call27 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59.551, i64 0, i64 0), i8* nonnull %dir, i8* nonnull %file) #34
  br label %if.end32

if.else28:                                        ; preds = %land.lhs.true20, %if.else18
  %call30 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %0, i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60.552, i64 0, i64 0), i8* %file) #34
  br label %if.end32

if.end32:                                         ; preds = %if.then25, %if.else28, %if.then13, %if.else
  %window_size = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 5
  %5 = load i32, i32* %window_size, align 8, !tbaa !656
  %cmp33 = icmp slt i32 %ef, 0
  %sub = sub nsw i32 2147418112, %5
  %spec.select = select i1 %cmp33, i32 %sub, i32 %ef
  %sub37 = sub nsw i32 %sf, %5
  %sub66 = sub i32 0, %sub37
  %add = add nsw i32 %spec.select, %5
  %6 = load i32, i32* %cepsize, align 8, !tbaa !650
  %call39 = call i8** @__ckd_calloc_2d__(i32 15000, i32 %6, i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i32 829) #34
  %7 = bitcast i8** %call39 to float**
  %cmp40 = icmp slt i32 %sub37, 0
  br i1 %cmp40, label %if.then42, label %if.else49

if.then42:                                        ; preds = %if.end32
  %idx.ext44 = sext i32 %sub37 to i64
  %idx.neg = sub nsw i64 0, %idx.ext44
  %add.ptr45247 = getelementptr inbounds i8*, i8** %call39, i64 %idx.neg
  %add.ptr45 = bitcast i8** %add.ptr45247 to float**
  %add46 = sub i32 15000, %5
  %sub47 = add i32 %add46, %sub37
  %call48 = call i32 @feat_s2mfc_read(i8* nonnull %0, i32 0, i32 %add, float** %add.ptr45, i32 %sub47) #36
  br label %if.end53

if.else49:                                        ; preds = %if.end32
  %sub51 = sub nsw i32 15000, %5
  %call52 = call i32 @feat_s2mfc_read(i8* nonnull %0, i32 %sub37, i32 %add, float** %7, i32 %sub51) #36
  br label %if.end53

if.end53:                                         ; preds = %if.else49, %if.then42
  %nfr.0 = phi i32 [ %call48, %if.then42 ], [ %call52, %if.else49 ]
  %cmp54 = icmp slt i32 %nfr.0, 0
  br i1 %cmp54, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.end53
  call void @ckd_free_2d(i8** %call39) #34
  br label %cleanup

if.end57:                                         ; preds = %if.end53
  %mul = shl nsw i32 %5, 1
  %add58 = or i32 %mul, 1
  %cmp59 = icmp slt i32 %nfr.0, %add58
  br i1 %cmp59, label %if.then61, label %if.end62

if.then61:                                        ; preds = %if.end57
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 853, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.61.553, i64 0, i64 0), i8* %file, i32 %nfr.0) #34
  call void @ckd_free_2d(i8** %call39) #34
  br label %cleanup

if.end62:                                         ; preds = %if.end57
  br i1 %cmp40, label %for.cond.preheader, label %if.end78

for.cond.preheader:                               ; preds = %if.end62
  %sub70 = sub i32 1, %sub37
  %cmp67253 = icmp sgt i32 %sub66, 0
  br i1 %cmp67253, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %for.cond.preheader
  %wide.trip.count262 = zext i32 %sub66 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv260 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next261, %for.body ]
  %arrayidx69245 = getelementptr inbounds i8*, i8** %call39, i64 %indvars.iv260
  %8 = load i8*, i8** %arrayidx69245, align 8, !tbaa !74
  %9 = trunc i64 %indvars.iv260 to i32
  %add71 = add i32 %sub70, %9
  %idxprom72 = sext i32 %add71 to i64
  %arrayidx73246 = getelementptr inbounds i8*, i8** %call39, i64 %idxprom72
  %10 = load i8*, i8** %arrayidx73246, align 8, !tbaa !74
  %11 = load i32, i32* %cepsize, align 8, !tbaa !650
  %conv75 = sext i32 %11 to i64
  %mul76 = shl nsw i64 %conv75, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %10, i64 %mul76, i1 false)
  %indvars.iv.next261 = add nuw nsw i64 %indvars.iv260, 1
  %exitcond263.not = icmp eq i64 %indvars.iv.next261, %wide.trip.count262
  br i1 %exitcond263.not, label %for.end, label %for.body, !llvm.loop !670

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %sub77 = sub nsw i32 %nfr.0, %sub37
  br label %if.end78

if.end78:                                         ; preds = %for.end, %if.end62
  %nfr.1 = phi i32 [ %sub77, %for.end ], [ %nfr.0, %if.end62 ]
  %sub79 = sub nsw i32 %add, %sub37
  %cmp81.not = icmp slt i32 %sub79, %nfr.1
  br i1 %cmp81.not, label %if.end108, label %if.then83

if.then83:                                        ; preds = %if.end78
  %add80 = add nsw i32 %sub79, 1
  %sub84 = sub i32 %add80, %nfr.1
  %cmp85 = icmp sgt i32 %sub84, %5
  %spec.select248 = select i1 %cmp85, i32 %5, i32 %sub84
  %12 = xor i32 %spec.select248, -1
  %cmp90251 = icmp sgt i32 %spec.select248, 0
  br i1 %cmp90251, label %for.body92.preheader, label %for.end106

for.body92.preheader:                             ; preds = %if.then83
  %13 = sext i32 %nfr.1 to i64
  %wide.trip.count = zext i32 %spec.select248 to i64
  br label %for.body92

for.body92:                                       ; preds = %for.body92.preheader, %for.body92
  %indvars.iv256 = phi i64 [ 0, %for.body92.preheader ], [ %indvars.iv.next257, %for.body92 ]
  %14 = add nsw i64 %indvars.iv256, %13
  %arrayidx95243 = getelementptr inbounds i8*, i8** %call39, i64 %14
  %15 = load i8*, i8** %arrayidx95243, align 8, !tbaa !74
  %16 = trunc i64 %14 to i32
  %sub98 = add i32 %16, %12
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100244 = getelementptr inbounds i8*, i8** %call39, i64 %idxprom99
  %17 = load i8*, i8** %arrayidx100244, align 8, !tbaa !74
  %18 = load i32, i32* %cepsize, align 8, !tbaa !650
  %conv102 = sext i32 %18 to i64
  %mul103 = shl nsw i64 %conv102, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %17, i64 %mul103, i1 false)
  %indvars.iv.next257 = add nuw nsw i64 %indvars.iv256, 1
  %exitcond259.not = icmp eq i64 %indvars.iv.next257, %wide.trip.count
  br i1 %exitcond259.not, label %for.end106, label %for.body92, !llvm.loop !671

for.end106:                                       ; preds = %for.body92, %if.then83
  %add107 = add nsw i32 %spec.select248, %nfr.1
  br label %if.end108

if.end108:                                        ; preds = %for.end106, %if.end78
  %nfr.2 = phi i32 [ %add107, %for.end106 ], [ %nfr.1, %if.end78 ]
  %sub110 = sub nsw i32 %nfr.2, %mul
  %cmp111 = icmp sgt i32 %sub110, %maxfr
  br i1 %cmp111, label %if.then113, label %if.end116

if.then113:                                       ; preds = %if.end108
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 879, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.493, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.62.554, i64 0, i64 0), i32 %maxfr, i32 %sub110) #34
  call void @ckd_free_2d(i8** %call39) #34
  br label %cleanup

if.end116:                                        ; preds = %if.end108
  %cmn = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 6
  %19 = load i32, i32* %cmn, align 4, !tbaa !658
  %tobool117.not = icmp eq i32 %19, 0
  br i1 %tobool117.not, label %if.end120, label %if.then118

if.then118:                                       ; preds = %if.end116
  call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 885, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.491, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63.555, i64 0, i64 0)) #34
  %varnorm = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 7
  %20 = load i32, i32* %varnorm, align 8, !tbaa !659
  %21 = load i32, i32* %cepsize, align 8, !tbaa !650
  call void @cmn(float** %7, i32 %20, i32 %nfr.2, i32 %21) #34
  br label %if.end120

if.end120:                                        ; preds = %if.then118, %if.end116
  %agc = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 8
  %22 = load i32, i32* %agc, align 4, !tbaa !660
  %tobool121.not = icmp eq i32 %22, 0
  br i1 %tobool121.not, label %if.end123, label %if.then122

if.then122:                                       ; preds = %if.end120
  call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 889, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.491, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64.556, i64 0, i64 0)) #34
  call void @agc_max(float** %7, i32 %nfr.2) #34
  br label %if.end123

if.end123:                                        ; preds = %if.then122, %if.end120
  %sub125 = sub i32 %nfr.2, %5
  %compute_feat = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 9
  %cmp126249 = icmp slt i32 %5, %sub125
  br i1 %cmp126249, label %for.body128.preheader, label %for.end136

for.body128.preheader:                            ; preds = %if.end123
  %23 = sext i32 %5 to i64
  br label %for.body128

for.body128:                                      ; preds = %for.body128.preheader, %for.body128
  %indvars.iv = phi i64 [ %23, %for.body128.preheader ], [ %indvars.iv.next, %for.body128 ]
  %24 = load void (%struct.feat_s*, float**, float**)*, void (%struct.feat_s*, float**, float**)** %compute_feat, align 8, !tbaa !657
  %add.ptr130242 = getelementptr inbounds i8*, i8** %call39, i64 %indvars.iv
  %add.ptr130 = bitcast i8** %add.ptr130242 to float**
  %25 = sub nsw i64 %indvars.iv, %23
  %arrayidx133 = getelementptr inbounds float**, float*** %feat, i64 %25
  %26 = load float**, float*** %arrayidx133, align 8, !tbaa !74
  call void %24(%struct.feat_s* nonnull %fcb, float** %add.ptr130, float** %26) #34
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %sub125, %lftr.wideiv
  br i1 %exitcond.not, label %for.end136, label %for.body128, !llvm.loop !672

for.end136:                                       ; preds = %for.body128, %if.end123
  call void @ckd_free_2d(i8** %call39) #34
  br label %cleanup

cleanup:                                          ; preds = %for.end136, %if.then113, %if.then61, %if.then56, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ -1, %if.then56 ], [ -1, %if.then61 ], [ -1, %if.then113 ], [ %sub110, %for.end136 ]
  call void @llvm.lifetime.end.p0i8(i64 16384, i8* nonnull %0) #38
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @feat_s2mfc2feat_block(%struct.feat_s* %fcb, float** %uttcep, i32 %nfr, i32 %beginutt, i32 %endutt, float*** nocapture readonly %ofeat) local_unnamed_addr #0 {
entry:
  %window_size = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 5
  %0 = load i32, i32* %window_size, align 8, !tbaa !656
  %cepsize1 = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 1
  %1 = load i32, i32* %cepsize1, align 8, !tbaa !650
  %cmp = icmp slt i32 %1, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 964, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38.531, i64 0, i64 0)) #34
  %2 = load i32, i32* %cepsize1, align 8, !tbaa !650
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.56.548, i64 0, i64 0), i32 %2) #34
  %.pre = load i32, i32* %cepsize1, align 8, !tbaa !650
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = phi i32 [ %.pre, %if.then ], [ %1, %entry ]
  %4 = load float**, float*** @feat_s2mfc2feat_block.cepbuf, align 8, !tbaa !74
  %cmp4 = icmp eq float** %4, null
  br i1 %cmp4, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end
  %call = tail call i8** @__ckd_calloc_2d__(i32 256, i32 %3, i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i32 968) #34
  store i8** %call, i8*** bitcast (float*** @feat_s2mfc2feat_block.cepbuf to i8***), align 8, !tbaa !74
  %tobool.not = icmp eq i8** %call, null
  br i1 %tobool.not, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.then5
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 969, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38.531, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.65.557, i64 0, i64 0), i32 256, i32 %3, i64 4) #34
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.then5
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 971, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.491, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.66.558, i64 0, i64 0), i32 256) #34
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.end
  %beginutt.addr.0 = phi i32 [ 1, %if.end7 ], [ %beginutt, %if.end ]
  %5 = load float**, float*** @feat_s2mfc2feat_block.tmpcepbuf, align 8, !tbaa !74
  %cmp9 = icmp eq float** %5, null
  br i1 %cmp9, label %if.then10, label %if.end17

if.then10:                                        ; preds = %if.end8
  %mul = shl nsw i32 %0, 1
  %add = or i32 %mul, 1
  %call11 = tail call i8** @__ckd_calloc_2d__(i32 %add, i32 %3, i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i32 975) #34
  store i8** %call11, i8*** bitcast (float*** @feat_s2mfc2feat_block.tmpcepbuf to i8***), align 8, !tbaa !74
  %tobool12.not = icmp eq i8** %call11, null
  br i1 %tobool12.not, label %if.then13, label %if.end17

if.then13:                                        ; preds = %if.then10
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.490, i64 0, i64 0), i64 976, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38.531, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.67.559, i64 0, i64 0), i32 %add, i32 %3, i64 4) #34
  br label %if.end17

if.end17:                                         ; preds = %if.then10, %if.then13, %if.end8
  %cmn = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 6
  %6 = load i32, i32* %cmn, align 4, !tbaa !658
  %tobool18.not = icmp eq i32 %6, 0
  br i1 %tobool18.not, label %if.end21, label %if.then19

if.then19:                                        ; preds = %if.end17
  %varnorm = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 7
  %7 = load i32, i32* %varnorm, align 8, !tbaa !659
  %8 = load i32, i32* %cepsize1, align 8, !tbaa !650
  tail call void @cmn_prior(float** %uttcep, i32 %7, i32 %nfr, i32 %8, i32 %endutt) #34
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end17
  %tobool22.not = icmp eq i32 %beginutt.addr.0, 0
  br i1 %tobool22.not, label %if.end21.if.end39_crit_edge, label %for.cond.preheader

if.end21.if.end39_crit_edge:                      ; preds = %if.end21
  %.pre260 = load float**, float*** @feat_s2mfc2feat_block.cepbuf, align 8
  %.pre262 = sext i32 %3 to i64
  %.pre263 = shl nsw i64 %.pre262, 2
  br label %if.end39

for.cond.preheader:                               ; preds = %if.end21
  %cmp26.not.not = icmp slt i32 %0, %nfr
  %9 = load float**, float*** @feat_s2mfc2feat_block.cepbuf, align 8
  %10 = bitcast float** %uttcep to i8**
  %conv36 = sext i32 %3 to i64
  %mul37 = shl nsw i64 %conv36, 2
  %cmp24242 = icmp sgt i32 %0, 0
  br i1 %cmp24242, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %for.cond.preheader
  %wide.trip.count258 = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv255 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next256.pre-phi, %for.inc ]
  %arrayidx = getelementptr inbounds float*, float** %9, i64 %indvars.iv255
  %11 = bitcast float** %arrayidx to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !74
  br i1 %cmp26.not.not, label %if.then27, label %if.else

if.then27:                                        ; preds = %for.body
  %13 = add nuw nsw i64 %indvars.iv255, 1
  %arrayidx31 = getelementptr inbounds float*, float** %uttcep, i64 %13
  %14 = bitcast float** %arrayidx31 to i8**
  %15 = load i8*, i8** %14, align 8, !tbaa !74
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %15, i64 %mul37, i1 false)
  br label %for.inc

if.else:                                          ; preds = %for.body
  %16 = load i8*, i8** %10, align 8, !tbaa !74
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %16, i64 %mul37, i1 false)
  %.pre264 = add nuw nsw i64 %indvars.iv255, 1
  br label %for.inc

for.inc:                                          ; preds = %if.then27, %if.else
  %indvars.iv.next256.pre-phi = phi i64 [ %13, %if.then27 ], [ %.pre264, %if.else ]
  %exitcond259.not = icmp eq i64 %indvars.iv.next256.pre-phi, %wide.trip.count258
  br i1 %exitcond259.not, label %for.end, label %for.body, !llvm.loop !673

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  %rem = srem i32 %0, 256
  store i32 %rem, i32* @feat_s2mfc2feat_block.bufpos, align 4, !tbaa !37
  store i32 %rem, i32* @feat_s2mfc2feat_block.curpos, align 4, !tbaa !37
  %sub = sub nsw i32 0, %0
  br label %if.end39

if.end39:                                         ; preds = %if.end21.if.end39_crit_edge, %for.end
  %mul50.pre-phi = phi i64 [ %.pre263, %if.end21.if.end39_crit_edge ], [ %mul37, %for.end ]
  %17 = phi float** [ %.pre260, %if.end21.if.end39_crit_edge ], [ %9, %for.end ]
  %residualvecs.0 = phi i32 [ 0, %if.end21.if.end39_crit_edge ], [ %sub, %for.end ]
  %cmp41238 = icmp sgt i32 %nfr, 0
  br i1 %cmp41238, label %for.body43.lr.ph, label %for.end54.thread

for.body43.lr.ph:                                 ; preds = %if.end39
  %feat_s2mfc2feat_block.bufpos.promoted240 = load i32, i32* @feat_s2mfc2feat_block.bufpos, align 4, !tbaa !37
  %wide.trip.count253 = zext i32 %nfr to i64
  br label %for.body43

for.body43:                                       ; preds = %for.body43.lr.ph, %for.body43
  %indvars.iv251 = phi i64 [ 0, %for.body43.lr.ph ], [ %indvars.iv.next252, %for.body43 ]
  %rem51241 = phi i32 [ %feat_s2mfc2feat_block.bufpos.promoted240, %for.body43.lr.ph ], [ %rem51, %for.body43 ]
  %inc44 = add nsw i32 %rem51241, 1
  %idxprom45 = sext i32 %rem51241 to i64
  %arrayidx46 = getelementptr inbounds float*, float** %17, i64 %idxprom45
  %18 = bitcast float** %arrayidx46 to i8**
  %19 = load i8*, i8** %18, align 8, !tbaa !74
  %arrayidx48 = getelementptr inbounds float*, float** %uttcep, i64 %indvars.iv251
  %20 = bitcast float** %arrayidx48 to i8**
  %21 = load i8*, i8** %20, align 8, !tbaa !74
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %21, i64 %mul50.pre-phi, i1 false)
  %rem51 = srem i32 %inc44, 256
  %indvars.iv.next252 = add nuw nsw i64 %indvars.iv251, 1
  %exitcond254.not = icmp eq i64 %indvars.iv.next252, %wide.trip.count253
  br i1 %exitcond254.not, label %for.end54, label %for.body43, !llvm.loop !674

for.end54:                                        ; preds = %for.body43
  store i32 %rem51, i32* @feat_s2mfc2feat_block.bufpos, align 4, !tbaa !37
  %tobool55.not = icmp eq i32 %endutt, 0
  br i1 %tobool55.not, label %if.end99, label %if.then56

for.end54.thread:                                 ; preds = %if.end39
  %tobool55.not265 = icmp eq i32 %endutt, 0
  br i1 %tobool55.not265, label %if.end99, label %if.else76

if.then56:                                        ; preds = %for.end54
  br i1 %cmp41238, label %for.cond60.preheader, label %if.else76

for.cond60.preheader:                             ; preds = %if.then56
  %sub67 = add nsw i32 %nfr, -1
  %22 = zext i32 %sub67 to i64
  %arrayidx69 = getelementptr inbounds float*, float** %uttcep, i64 %22
  %23 = bitcast float** %arrayidx69 to i8**
  %cmp61231 = icmp sgt i32 %0, 0
  br i1 %cmp61231, label %for.body63.lr.ph, label %if.end97

for.body63.lr.ph:                                 ; preds = %for.cond60.preheader
  %feat_s2mfc2feat_block.bufpos.promoted = load i32, i32* @feat_s2mfc2feat_block.bufpos, align 4, !tbaa !37
  br label %for.body63

for.body63:                                       ; preds = %for.body63.lr.ph, %for.body63
  %rem72233 = phi i32 [ %feat_s2mfc2feat_block.bufpos.promoted, %for.body63.lr.ph ], [ %rem72, %for.body63 ]
  %i.2232 = phi i32 [ 0, %for.body63.lr.ph ], [ %inc74, %for.body63 ]
  %inc64 = add nsw i32 %rem72233, 1
  %idxprom65 = sext i32 %rem72233 to i64
  %arrayidx66 = getelementptr inbounds float*, float** %17, i64 %idxprom65
  %24 = bitcast float** %arrayidx66 to i8**
  %25 = load i8*, i8** %24, align 8, !tbaa !74
  %26 = load i8*, i8** %23, align 8, !tbaa !74
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %26, i64 %mul50.pre-phi, i1 false)
  %rem72 = srem i32 %inc64, 256
  %inc74 = add nuw nsw i32 %i.2232, 1
  %exitcond249.not = icmp eq i32 %inc74, %0
  br i1 %exitcond249.not, label %if.end97.sink.split, label %for.body63, !llvm.loop !675

if.else76:                                        ; preds = %for.end54.thread, %if.then56
  %27 = load i32, i32* @feat_s2mfc2feat_block.bufpos, align 4, !tbaa !37
  %conv78 = shl i32 %27, 16
  %sext = add i32 %conv78, -65536
  %28 = lshr exact i32 %sext, 16
  %rem80.lhs.trunc = trunc i32 %28 to i16
  %rem80222 = srem i16 %rem80.lhs.trunc, 256
  %idxprom89 = sext i16 %rem80222 to i64
  %arrayidx90 = getelementptr inbounds float*, float** %17, i64 %idxprom89
  %29 = bitcast float** %arrayidx90 to i8**
  %cmp83234 = icmp sgt i32 %0, 0
  br i1 %cmp83234, label %for.body85, label %if.end97

for.body85:                                       ; preds = %if.else76, %for.body85
  %rem93237 = phi i32 [ %rem93, %for.body85 ], [ %27, %if.else76 ]
  %i.3235 = phi i32 [ %inc95, %for.body85 ], [ 0, %if.else76 ]
  %inc86 = add nsw i32 %rem93237, 1
  %idxprom87 = sext i32 %rem93237 to i64
  %arrayidx88 = getelementptr inbounds float*, float** %17, i64 %idxprom87
  %30 = bitcast float** %arrayidx88 to i8**
  %31 = load i8*, i8** %30, align 8, !tbaa !74
  %32 = load i8*, i8** %29, align 8, !tbaa !74
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %mul50.pre-phi, i1 false)
  %rem93 = srem i32 %inc86, 256
  %inc95 = add nuw nsw i32 %i.3235, 1
  %exitcond250.not = icmp eq i32 %inc95, %0
  br i1 %exitcond250.not, label %if.end97.sink.split, label %for.body85, !llvm.loop !676

if.end97.sink.split:                              ; preds = %for.body85, %for.body63
  %rem93.lcssa.sink = phi i32 [ %rem72, %for.body63 ], [ %rem93, %for.body85 ]
  store i32 %rem93.lcssa.sink, i32* @feat_s2mfc2feat_block.bufpos, align 4, !tbaa !37
  br label %if.end97

if.end97:                                         ; preds = %if.end97.sink.split, %if.else76, %for.cond60.preheader
  %add98 = add nsw i32 %residualvecs.0, %0
  br label %if.end99

if.end99:                                         ; preds = %for.end54.thread, %if.end97, %for.end54
  %residualvecs.1 = phi i32 [ %add98, %if.end97 ], [ %residualvecs.0, %for.end54 ], [ %residualvecs.0, %for.end54.thread ]
  %add100 = add i32 %residualvecs.1, %nfr
  %sub108 = sub i32 255, %0
  %compute_feat133 = getelementptr inbounds %struct.feat_s, %struct.feat_s* %fcb, i64 0, i32 9
  %cmp114.not225 = icmp slt i32 %0, 0
  %idx.ext = sext i32 %0 to i64
  %cmp102227 = icmp sgt i32 %add100, 0
  br i1 %cmp102227, label %for.body104.preheader, label %for.end144

for.body104.preheader:                            ; preds = %if.end99
  %33 = sub i32 0, %0
  %34 = sext i32 %33 to i64
  %35 = call i32 @llvm.abs.i32(i32 %0, i1 false)
  %36 = add nuw i32 %35, 1
  %wide.trip.count = zext i32 %add100 to i64
  %.pre261 = load i32, i32* @feat_s2mfc2feat_block.curpos, align 4, !tbaa !37
  br label %for.body104

for.body104:                                      ; preds = %for.body104.preheader, %if.end138
  %37 = phi i32 [ %.pre261, %for.body104.preheader ], [ %rem140, %if.end138 ]
  %indvars.iv246 = phi i64 [ 0, %for.body104.preheader ], [ %indvars.iv.next247, %if.end138 ]
  %cmp105 = icmp slt i32 %37, %0
  %cmp109 = icmp sgt i32 %37, %sub108
  %or.cond = or i1 %cmp105, %cmp109
  br i1 %or.cond, label %if.then111, label %if.else132

if.then111:                                       ; preds = %for.body104
  %add117 = add i32 %37, 256
  %38 = load float**, float*** @feat_s2mfc2feat_block.tmpcepbuf, align 8
  %39 = load float**, float*** @feat_s2mfc2feat_block.cepbuf, align 8
  br i1 %cmp114.not225, label %for.end129, label %for.body116

for.body116:                                      ; preds = %if.then111, %for.body116
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body116 ], [ %34, %if.then111 ]
  %40 = trunc i64 %indvars.iv to i32
  %add118 = add i32 %add117, %40
  %rem119 = srem i32 %add118, 256
  %41 = add nsw i64 %indvars.iv, %idx.ext
  %arrayidx122 = getelementptr inbounds float*, float** %38, i64 %41
  %42 = bitcast float** %arrayidx122 to i8**
  %43 = load i8*, i8** %42, align 8, !tbaa !74
  %idxprom123 = sext i32 %rem119 to i64
  %arrayidx124 = getelementptr inbounds float*, float** %39, i64 %idxprom123
  %44 = bitcast float** %arrayidx124 to i8**
  %45 = load i8*, i8** %44, align 8, !tbaa !74
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %45, i64 %mul50.pre-phi, i1 false)
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %36, %lftr.wideiv
  br i1 %exitcond.not, label %for.end129, label %for.body116, !llvm.loop !677

for.end129:                                       ; preds = %for.body116, %if.then111
  %46 = load void (%struct.feat_s*, float**, float**)*, void (%struct.feat_s*, float**, float**)** %compute_feat133, align 8, !tbaa !657
  %add.ptr = getelementptr inbounds float*, float** %38, i64 %idx.ext
  %arrayidx131 = getelementptr inbounds float**, float*** %ofeat, i64 %indvars.iv246
  %47 = load float**, float*** %arrayidx131, align 8, !tbaa !74
  tail call void %46(%struct.feat_s* %fcb, float** %add.ptr, float** %47) #34
  br label %if.end138

if.else132:                                       ; preds = %for.body104
  %48 = load void (%struct.feat_s*, float**, float**)*, void (%struct.feat_s*, float**, float**)** %compute_feat133, align 8, !tbaa !657
  %49 = load float**, float*** @feat_s2mfc2feat_block.cepbuf, align 8, !tbaa !74
  %idx.ext134 = sext i32 %37 to i64
  %add.ptr135 = getelementptr inbounds float*, float** %49, i64 %idx.ext134
  %arrayidx137 = getelementptr inbounds float**, float*** %ofeat, i64 %indvars.iv246
  %50 = load float**, float*** %arrayidx137, align 8, !tbaa !74
  tail call void %48(%struct.feat_s* %fcb, float** %add.ptr135, float** %50) #34
  br label %if.end138

if.end138:                                        ; preds = %if.else132, %for.end129
  %51 = load i32, i32* @feat_s2mfc2feat_block.curpos, align 4, !tbaa !37
  %inc139 = add nsw i32 %51, 1
  %rem140 = srem i32 %inc139, 256
  store i32 %rem140, i32* @feat_s2mfc2feat_block.curpos, align 4, !tbaa !37
  %indvars.iv.next247 = add nuw nsw i64 %indvars.iv246, 1
  %exitcond248.not = icmp eq i64 %indvars.iv.next247, %wide.trip.count
  br i1 %exitcond248.not, label %for.end144, label %for.body104, !llvm.loop !678

for.end144:                                       ; preds = %if.end138, %if.end99
  %nfeatvec.0.lcssa = phi i32 [ 0, %if.end99 ], [ %add100, %if.end138 ]
  ret i32 %nfeatvec.0.lcssa
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #10

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @feat_free(%struct.feat_s* nocapture %f) local_unnamed_addr #28 {
entry:
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @bio_hdrarg_free(i8** %argname, i8** %argval) local_unnamed_addr #0 {
entry:
  %0 = load i8*, i8** %argname, align 8, !tbaa !74
  %tobool.not12 = icmp eq i8* %0, null
  br i1 %tobool.not12, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %1 = phi i8* [ %3, %for.body ], [ %0, %entry ]
  tail call void @ckd_free(i8* nonnull %1) #34
  %arrayidx4 = getelementptr inbounds i8*, i8** %argval, i64 %indvars.iv
  %2 = load i8*, i8** %arrayidx4, align 8, !tbaa !74
  tail call void @ckd_free(i8* %2) #34
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %arrayidx = getelementptr inbounds i8*, i8** %argname, i64 %indvars.iv.next
  %3 = load i8*, i8** %arrayidx, align 8, !tbaa !74
  %tobool.not = icmp eq i8* %3, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !679

for.end:                                          ; preds = %for.body, %entry
  %4 = bitcast i8** %argname to i8*
  tail call void @ckd_free(i8* nonnull %4) #34
  %5 = bitcast i8** %argval to i8*
  tail call void @ckd_free(i8* %5) #34
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @bio_writehdr_version(%struct._IO_FILE* nocapture %fp, i8* %version) local_unnamed_addr #14 {
entry:
  %b = alloca i32, align 4
  %0 = bitcast i32* %b to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %1 = tail call i64 @fwrite(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.566, i64 0, i64 0), i64 3, i64 1, %struct._IO_FILE* %fp)
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.567, i64 0, i64 0), i8* %version) #36
  %2 = tail call i64 @fwrite(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.568, i64 0, i64 0), i64 7, i64 1, %struct._IO_FILE* %fp)
  %call3 = tail call i32 @fflush(%struct._IO_FILE* %fp) #36
  store i32 287454020, i32* %b, align 4, !tbaa !37
  %call4 = call i64 @fwrite(i8* nonnull %0, i64 4, i64 1, %struct._IO_FILE* %fp) #36
  %call5 = tail call i32 @fflush(%struct._IO_FILE* %fp) #36
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret i32 0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @bio_readhdr(%struct._IO_FILE* nocapture %fp, i8*** nocapture %argname, i8*** nocapture %argval, i32* nocapture %swap) local_unnamed_addr #0 {
entry:
  %line = alloca [16384 x i8], align 16
  %word = alloca [4096 x i8], align 16
  %l = alloca i32, align 4
  %0 = getelementptr inbounds [16384 x i8], [16384 x i8]* %line, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %0) #38
  %1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %word, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %1) #38
  %2 = bitcast i32* %l to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #38
  %call = tail call i8* @__ckd_calloc__(i64 33, i64 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i32 137) #34
  %3 = bitcast i8*** %argname to i8**
  store i8* %call, i8** %3, align 8, !tbaa !74
  %call1 = tail call i8* @__ckd_calloc__(i64 32, i64 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i32 138) #34
  %4 = bitcast i8*** %argval to i8**
  store i8* %call1, i8** %4, align 8, !tbaa !74
  %call2 = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %fp) #36
  %cmp = icmp eq i8* %call2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 142, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5.573, i64 0, i64 0), i32 0) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8, i8* %0, align 16, !tbaa !63
  %cmp3 = icmp eq i8 %5, 115
  br i1 %cmp3, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %arrayidx5 = getelementptr inbounds [16384 x i8], [16384 x i8]* %line, i64 0, i64 1
  %6 = load i8, i8* %arrayidx5, align 1, !tbaa !63
  %cmp7 = icmp eq i8 %6, 51
  br i1 %cmp7, label %land.lhs.true9, label %if.else

land.lhs.true9:                                   ; preds = %land.lhs.true
  %arrayidx10 = getelementptr inbounds [16384 x i8], [16384 x i8]* %line, i64 0, i64 2
  %7 = load i8, i8* %arrayidx10, align 2, !tbaa !63
  %cmp12 = icmp eq i8 %7, 10
  br i1 %cmp12, label %for.cond.outer, label %if.else

for.cond.outer:                                   ; preds = %land.lhs.true9, %if.end54
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end54 ], [ 0, %land.lhs.true9 ]
  %lineno.0.ph = phi i32 [ %inc21, %if.end54 ], [ 1, %land.lhs.true9 ]
  br label %for.cond

for.cond:                                         ; preds = %for.cond.outer, %if.end34
  %lineno.0 = phi i32 [ %inc21, %if.end34 ], [ %lineno.0.ph, %for.cond.outer ]
  %call16 = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %fp) #36
  %cmp17 = icmp eq i8* %call16, null
  br i1 %cmp17, label %if.then19, label %if.end20

if.then19:                                        ; preds = %for.cond
  call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 149, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5.573, i64 0, i64 0), i32 %lineno.0) #34
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %for.cond
  %inc21 = add nsw i32 %lineno.0, 1
  %call24 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.574, i64 0, i64 0), i8* nonnull %1, i32* nonnull %l) #34
  %cmp25.not = icmp eq i32 %call24, 1
  br i1 %cmp25.not, label %if.end28, label %if.then27

if.then27:                                        ; preds = %if.end20
  call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 153, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.575, i64 0, i64 0), i32 %inc21) #34
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %if.end20
  %bcmp = call i32 @bcmp(i8* noundef nonnull dereferenceable(7) %1, i8* noundef nonnull dereferenceable(7) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.576, i64 0, i64 0), i64 7)
  %cmp31 = icmp eq i32 %bcmp, 0
  br i1 %cmp31, label %if.end72.loopexit, label %if.end34

if.end34:                                         ; preds = %if.end28
  %8 = load i8, i8* %1, align 16, !tbaa !63
  %cmp37 = icmp eq i8 %8, 35
  br i1 %cmp37, label %for.cond, label %if.end40, !llvm.loop !680

if.end40:                                         ; preds = %if.end34
  %cmp41 = icmp ugt i64 %indvars.iv, 31
  br i1 %cmp41, label %if.then43, label %if.end44

if.then43:                                        ; preds = %if.end40
  call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 160, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9.577, i64 0, i64 0), i32 32) #34
  br label %if.end44

if.end44:                                         ; preds = %if.then43, %if.end40
  %call46 = call i8* @__ckd_salloc__(i8* nonnull %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i32 163) #34
  %9 = load i8**, i8*** %argname, align 8, !tbaa !74
  %arrayidx47 = getelementptr inbounds i8*, i8** %9, i64 %indvars.iv
  store i8* %call46, i8** %arrayidx47, align 8, !tbaa !74
  %10 = load i32, i32* %l, align 4, !tbaa !37
  %idx.ext = sext i32 %10 to i64
  %add.ptr = getelementptr inbounds [16384 x i8], [16384 x i8]* %line, i64 0, i64 %idx.ext
  %call50 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %add.ptr, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.578, i64 0, i64 0), i8* nonnull %1) #34
  %cmp51.not = icmp eq i32 %call50, 1
  br i1 %cmp51.not, label %if.end54, label %if.then53

if.then53:                                        ; preds = %if.end44
  call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 165, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.575, i64 0, i64 0), i32 %inc21) #34
  br label %if.end54

if.end54:                                         ; preds = %if.then53, %if.end44
  %call56 = call i8* @__ckd_salloc__(i8* nonnull %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i32 166) #34
  %11 = load i8**, i8*** %argval, align 8, !tbaa !74
  %arrayidx58 = getelementptr inbounds i8*, i8** %11, i64 %indvars.iv
  store i8* %call56, i8** %arrayidx58, align 8, !tbaa !74
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  br label %for.cond.outer, !llvm.loop !680

if.else:                                          ; preds = %land.lhs.true9, %land.lhs.true, %if.end
  %call62 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.578, i64 0, i64 0), i8* nonnull %1) #34
  %cmp63.not = icmp eq i32 %call62, 1
  br i1 %cmp63.not, label %if.end66, label %if.then65

if.then65:                                        ; preds = %if.else
  call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 172, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.575, i64 0, i64 0), i32 1) #34
  br label %if.end66

if.end66:                                         ; preds = %if.then65, %if.else
  %call67 = call i8* @__ckd_salloc__(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.579, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i32 174) #34
  %12 = load i8**, i8*** %argname, align 8, !tbaa !74
  store i8* %call67, i8** %12, align 8, !tbaa !74
  %call70 = call i8* @__ckd_salloc__(i8* nonnull %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i32 175) #34
  %13 = load i8**, i8*** %argval, align 8, !tbaa !74
  store i8* %call70, i8** %13, align 8, !tbaa !74
  call fastcc void @bcomment_read(%struct._IO_FILE* %fp) #36
  br label %if.end72

if.end72.loopexit:                                ; preds = %if.end28
  %phi.cast = and i64 %indvars.iv, 4294967295
  br label %if.end72

if.end72:                                         ; preds = %if.end72.loopexit, %if.end66
  %i.1 = phi i64 [ 1, %if.end66 ], [ %phi.cast, %if.end72.loopexit ]
  %14 = load i8**, i8*** %argname, align 8, !tbaa !74
  %arrayidx74 = getelementptr inbounds i8*, i8** %14, i64 %i.1
  store i8* null, i8** %arrayidx74, align 8, !tbaa !74
  %call75 = call fastcc i32 @swap_check(%struct._IO_FILE* %fp) #36
  store i32 %call75, i32* %swap, align 4, !tbaa !37
  %cmp76 = icmp slt i32 %call75, 0
  br i1 %cmp76, label %if.then78, label %if.end79

if.then78:                                        ; preds = %if.end72
  call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 183, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12.580, i64 0, i64 0)) #34
  br label %if.end79

if.end79:                                         ; preds = %if.then78, %if.end72
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #38
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 16384, i8* nonnull %0) #38
  ret i32 0
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @bcomment_read(%struct._IO_FILE* nocapture %fp) unnamed_addr #0 {
entry:
  %iline = alloca [16384 x i8], align 16
  %0 = getelementptr inbounds [16384 x i8], [16384 x i8]* %iline, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %0) #38
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %call = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %fp) #36
  %cmp.not = icmp eq i8* %call, null
  br i1 %cmp.not, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %bcmp = call i32 @bcmp(i8* noundef nonnull dereferenceable(15) %0, i8* noundef nonnull dereferenceable(15) getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19.584, i64 0, i64 0), i64 15)
  %cmp3 = icmp eq i32 %bcmp, 0
  br i1 %cmp3, label %cleanup, label %while.cond, !llvm.loop !681

while.end:                                        ; preds = %while.cond
  call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 71, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20.585, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19.584, i64 0, i64 0)) #34
  br label %cleanup

cleanup:                                          ; preds = %while.body, %while.end
  call void @llvm.lifetime.end.p0i8(i64 16384, i8* nonnull %0) #38
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc i32 @swap_check(%struct._IO_FILE* nocapture %fp) unnamed_addr #0 {
entry:
  %magic = alloca i32, align 4
  %0 = bitcast i32* %magic to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %call = call i64 @fread(i8* nonnull %0, i64 4, i64 1, %struct._IO_FILE* %fp) #36
  %cmp.not = icmp eq i64 %call, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 80, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.581, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22.582, i64 0, i64 0)) #34
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %magic, align 4, !tbaa !37
  %cmp1.not = icmp eq i32 %1, 287454020
  br i1 %cmp1.not, label %cleanup, label %if.then2

if.then2:                                         ; preds = %if.end
  %or9 = tail call i32 @llvm.bswap.i32(i32 %1)
  %cmp10 = icmp eq i32 %1, 1144201745
  br i1 %cmp10, label %cleanup, label %if.end12

if.end12:                                         ; preds = %if.then2
  %shr13 = lshr i32 %or9, 24
  %shr15 = lshr i32 %or9, 8
  %and16 = and i32 %shr15, 65280
  %or17 = or i32 %and16, %shr13
  %shl18 = shl i32 %or9, 8
  %and19 = and i32 %shl18, 16711680
  %or20 = or i32 %or17, %and19
  %shl21 = shl i32 %or9, 24
  %or23 = or i32 %or20, %shl21
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 92, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.581, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.23.583, i64 0, i64 0), i32 %or23, i32 287454020) #34
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then2, %if.end12, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ -1, %if.end12 ], [ 1, %if.then2 ], [ 0, %if.end ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @bio_fread(i8* nocapture %buf, i32 %el_sz, i32 %n_el, %struct._IO_FILE* nocapture %fp, i32 %swap, i32* %chksum) local_unnamed_addr #0 {
entry:
  %conv = sext i32 %el_sz to i64
  %conv1 = sext i32 %n_el to i64
  %call = tail call i64 @fread(i8* %buf, i64 %conv, i64 %conv1, %struct._IO_FILE* %fp) #36
  %cmp.not = icmp eq i64 %call, %conv1
  br i1 %cmp.not, label %if.end, label %return

if.end:                                           ; preds = %entry
  %tobool.not = icmp eq i32 %swap, 0
  br i1 %tobool.not, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end
  tail call fastcc void @swap_buf(i8* %buf, i32 %el_sz, i32 %n_el) #36
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  %tobool6.not = icmp eq i32* %chksum, null
  br i1 %tobool6.not, label %return, label %if.then7

if.then7:                                         ; preds = %if.end5
  %0 = load i32, i32* %chksum, align 4, !tbaa !37
  %call8 = tail call fastcc i32 @chksum_accum(i8* %buf, i32 %el_sz, i32 %n_el, i32 %0) #36
  store i32 %call8, i32* %chksum, align 4, !tbaa !37
  br label %return

return:                                           ; preds = %if.end5, %if.then7, %entry
  %retval.0 = phi i32 [ -1, %entry ], [ %n_el, %if.then7 ], [ %n_el, %if.end5 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @swap_buf(i8* nocapture %buf, i32 %el_sz, i32 %n_el) unnamed_addr #0 {
entry:
  switch i32 %el_sz, label %sw.default [
    i32 1, label %sw.epilog
    i32 2, label %sw.bb
    i32 4, label %sw.bb8
  ]

sw.bb:                                            ; preds = %entry
  %0 = bitcast i8* %buf to i16*
  %cmp61 = icmp sgt i32 %n_el, 0
  br i1 %cmp61, label %for.body.preheader, label %sw.epilog

for.body.preheader:                               ; preds = %sw.bb
  %wide.trip.count = zext i32 %n_el to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %add.ptr = getelementptr inbounds i16, i16* %0, i64 %indvars.iv
  %1 = load i16, i16* %add.ptr, align 2, !tbaa !40
  %rev = tail call i16 @llvm.bswap.i16(i16 %1)
  store i16 %rev, i16* %add.ptr, align 2, !tbaa !40
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %sw.epilog, label %for.body, !llvm.loop !682

sw.bb8:                                           ; preds = %entry
  %2 = bitcast i8* %buf to i32*
  %cmp1063 = icmp sgt i32 %n_el, 0
  br i1 %cmp1063, label %for.body12.preheader, label %sw.epilog

for.body12.preheader:                             ; preds = %sw.bb8
  %wide.trip.count68 = zext i32 %n_el to i64
  br label %for.body12

for.body12:                                       ; preds = %for.body12.preheader, %for.body12
  %indvars.iv66 = phi i64 [ 0, %for.body12.preheader ], [ %indvars.iv.next67, %for.body12 ]
  %add.ptr14 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv66
  %3 = load i32, i32* %add.ptr14, align 4, !tbaa !37
  %or31 = tail call i32 @llvm.bswap.i32(i32 %3)
  store i32 %or31, i32* %add.ptr14, align 4, !tbaa !37
  %indvars.iv.next67 = add nuw nsw i64 %indvars.iv66, 1
  %exitcond69.not = icmp eq i64 %indvars.iv.next67, %wide.trip.count68
  br i1 %exitcond69.not, label %sw.epilog, label %for.body12, !llvm.loop !683

sw.default:                                       ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 241, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.24.589, i64 0, i64 0), i32 %el_sz) #34
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.body12, %for.body, %sw.bb8, %sw.bb, %sw.default, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc i32 @chksum_accum(i8* nocapture readonly %buf, i32 %el_sz, i32 %n_el, i32 %sum) unnamed_addr #0 {
entry:
  switch i32 %el_sz, label %sw.default [
    i32 1, label %for.cond.preheader
    i32 2, label %sw.bb1
    i32 4, label %sw.bb16
  ]

for.cond.preheader:                               ; preds = %entry
  %cmp55 = icmp sgt i32 %n_el, 0
  br i1 %cmp55, label %for.body.preheader, label %sw.epilog

for.body.preheader:                               ; preds = %for.cond.preheader
  %wide.trip.count = zext i32 %n_el to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %sum.addr.057 = phi i32 [ %sum, %for.body.preheader ], [ %add, %for.body ]
  %or = tail call i32 @llvm.fshl.i32(i32 %sum.addr.057, i32 %sum.addr.057, i32 5)
  %arrayidx = getelementptr inbounds i8, i8* %buf, i64 %indvars.iv
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !63
  %conv = zext i8 %0 to i32
  %add = add i32 %or, %conv
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %sw.epilog, label %for.body, !llvm.loop !684

sw.bb1:                                           ; preds = %entry
  %1 = bitcast i8* %buf to i16*
  %cmp358 = icmp sgt i32 %n_el, 0
  br i1 %cmp358, label %for.body5.preheader, label %sw.epilog

for.body5.preheader:                              ; preds = %sw.bb1
  %wide.trip.count70 = zext i32 %n_el to i64
  br label %for.body5

for.body5:                                        ; preds = %for.body5.preheader, %for.body5
  %indvars.iv68 = phi i64 [ 0, %for.body5.preheader ], [ %indvars.iv.next69, %for.body5 ]
  %sum.addr.160 = phi i32 [ %sum, %for.body5.preheader ], [ %add12, %for.body5 ]
  %or8 = tail call i32 @llvm.fshl.i32(i32 %sum.addr.160, i32 %sum.addr.160, i32 10)
  %arrayidx10 = getelementptr inbounds i16, i16* %1, i64 %indvars.iv68
  %2 = load i16, i16* %arrayidx10, align 2, !tbaa !40
  %conv11 = zext i16 %2 to i32
  %add12 = add i32 %or8, %conv11
  %indvars.iv.next69 = add nuw nsw i64 %indvars.iv68, 1
  %exitcond71.not = icmp eq i64 %indvars.iv.next69, %wide.trip.count70
  br i1 %exitcond71.not, label %sw.epilog, label %for.body5, !llvm.loop !685

sw.bb16:                                          ; preds = %entry
  %3 = bitcast i8* %buf to i32*
  %cmp1862 = icmp sgt i32 %n_el, 0
  br i1 %cmp1862, label %for.body20.preheader, label %sw.epilog

for.body20.preheader:                             ; preds = %sw.bb16
  %wide.trip.count74 = zext i32 %n_el to i64
  br label %for.body20

for.body20:                                       ; preds = %for.body20.preheader, %for.body20
  %indvars.iv72 = phi i64 [ 0, %for.body20.preheader ], [ %indvars.iv.next73, %for.body20 ]
  %sum.addr.264 = phi i32 [ %sum, %for.body20.preheader ], [ %add26, %for.body20 ]
  %or23 = tail call i32 @llvm.fshl.i32(i32 %sum.addr.264, i32 %sum.addr.264, i32 20)
  %arrayidx25 = getelementptr inbounds i32, i32* %3, i64 %indvars.iv72
  %4 = load i32, i32* %arrayidx25, align 4, !tbaa !37
  %add26 = add i32 %4, %or23
  %indvars.iv.next73 = add nuw nsw i64 %indvars.iv72, 1
  %exitcond75.not = icmp eq i64 %indvars.iv.next73, %wide.trip.count74
  br i1 %exitcond75.not, label %sw.epilog, label %for.body20, !llvm.loop !686

sw.default:                                       ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 213, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.25.588, i64 0, i64 0), i32 %el_sz) #34
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.body20, %for.body5, %for.body, %sw.bb16, %sw.bb1, %for.cond.preheader, %sw.default
  %sum.addr.3 = phi i32 [ %sum, %sw.default ], [ %sum, %for.cond.preheader ], [ %sum, %sw.bb1 ], [ %sum, %sw.bb16 ], [ %add, %for.body ], [ %add12, %for.body5 ], [ %add26, %for.body20 ]
  ret i32 %sum.addr.3
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #10

; Function Attrs: noinline nounwind optsize uwtable
define i32 @bio_fread_1d(i8** nocapture %buf, i32 %el_sz, i32* nocapture %n_el, %struct._IO_FILE* nocapture %fp, i32 %sw, i32* %ck) local_unnamed_addr #0 {
entry:
  switch i32 %el_sz, label %if.then [
    i32 4, label %if.end
    i32 2, label %if.end
    i32 1, label %if.end
  ]

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 265, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13.590, i64 0, i64 0), i32 %el_sz) #34
  br label %if.end

if.end:                                           ; preds = %entry, %entry, %entry, %if.then
  %0 = bitcast i32* %n_el to i8*
  %call = tail call i32 @bio_fread(i8* %0, i32 4, i32 1, %struct._IO_FILE* %fp, i32 %sw, i32* %ck) #36
  %cmp4.not = icmp eq i32 %call, 1
  br i1 %cmp4.not, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 269, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14.591, i64 0, i64 0)) #34
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end
  %1 = load i32, i32* %n_el, align 4, !tbaa !37
  %cmp7 = icmp slt i32 %1, 1
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end6
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 271, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  %2 = load i32, i32* %n_el, align 4, !tbaa !37
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15.592, i64 0, i64 0), i32 %2) #34
  %.pre = load i32, i32* %n_el, align 4, !tbaa !37
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end6
  %3 = phi i32 [ %.pre, %if.then8 ], [ %1, %if.end6 ]
  %conv = sext i32 %3 to i64
  %conv10 = sext i32 %el_sz to i64
  %call11 = tail call i8* @__ckd_calloc__(i64 %conv, i64 %conv10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i32 274) #34
  store i8* %call11, i8** %buf, align 8, !tbaa !74
  %4 = load i32, i32* %n_el, align 4, !tbaa !37
  %call12 = tail call i32 @bio_fread(i8* %call11, i32 %el_sz, i32 %4, %struct._IO_FILE* %fp, i32 %sw, i32* %ck) #36
  %5 = load i32, i32* %n_el, align 4, !tbaa !37
  %cmp13.not = icmp eq i32 %call12, %5
  br i1 %cmp13.not, label %if.end16, label %if.then15

if.then15:                                        ; preds = %if.end9
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 278, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16.593, i64 0, i64 0)) #34
  %.pre33 = load i32, i32* %n_el, align 4, !tbaa !37
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.end9
  %6 = phi i32 [ %.pre33, %if.then15 ], [ %call12, %if.end9 ]
  ret i32 %6
}

; Function Attrs: noinline nounwind optsize uwtable
define void @bio_verify_chksum(%struct._IO_FILE* nocapture %fp, i32 %byteswap, i32 %chksum) local_unnamed_addr #0 {
entry:
  %file_chksum = alloca i32, align 4
  %0 = bitcast i32* %file_chksum to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %call = call i64 @fread(i8* nonnull %0, i64 4, i64 1, %struct._IO_FILE* %fp) #36
  %cmp.not = icmp eq i64 %call, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 289, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.596, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %tobool.not = icmp eq i32 %byteswap, 0
  %.pre = load i32, i32* %file_chksum, align 4, !tbaa !37
  %or8 = tail call i32 @llvm.bswap.i32(i32 %.pre)
  %1 = select i1 %tobool.not, i32 %.pre, i32 %or8
  %cmp10.not = icmp eq i32 %1, %chksum
  br i1 %cmp10.not, label %if.end12, label %if.then11

if.then11:                                        ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.571, i64 0, i64 0), i64 293, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.572, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18.597, i64 0, i64 0), i32 %1, i32 %chksum) #34
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @main(i32 %argc, i8** nocapture readonly %argv) local_unnamed_addr #0 {
entry:
  %samps = alloca [10000 x i16*], align 16
  %uttid = alloca [10000 x i8*], align 16
  %uttsize = alloca [10000 x i32], align 16
  %filename = alloca [512 x i8], align 16
  %cepfile = alloca [516 x i8], align 16
  %filesize = alloca i32, align 4
  %parthyp = alloca %struct.partialhyp_t*, align 8
  %0 = bitcast [10000 x i16*]* %samps to i8*
  call void @llvm.lifetime.start.p0i8(i64 80000, i8* nonnull %0) #38
  %1 = bitcast [10000 x i8*]* %uttid to i8*
  call void @llvm.lifetime.start.p0i8(i64 80000, i8* nonnull %1) #38
  %2 = bitcast [10000 x i32]* %uttsize to i8*
  call void @llvm.lifetime.start.p0i8(i64 40000, i8* nonnull %2) #38
  %3 = getelementptr inbounds [512 x i8], [512 x i8]* %filename, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %3) #38
  %4 = getelementptr inbounds [516 x i8], [516 x i8]* %cepfile, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 516, i8* nonnull %4) #38
  %5 = bitcast i32* %filesize to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #38
  %6 = bitcast %struct.partialhyp_t** %parthyp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #38
  %call = tail call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.598, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.599, i64 0, i64 0)) #36
  %cmp = icmp eq %struct._IO_FILE* %call, null
  br i1 %cmp, label %if.then, label %land.rhs.preheader

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.600, i64 0, i64 0), i64 104, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.601, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.602, i64 0, i64 0)) #34
  br label %land.rhs.preheader

land.rhs.preheader:                               ; preds = %if.then, %entry
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.preheader, %while.body
  %indvars.iv263 = phi i64 [ %indvars.iv.next264, %while.body ], [ 0, %land.rhs.preheader ]
  %arrayidx2 = getelementptr inbounds [1000 x [4 x double]], [1000 x [4 x double]]* @beams, i64 0, i64 %indvars.iv263, i64 0
  %arrayidx5 = getelementptr inbounds [1000 x [4 x double]], [1000 x [4 x double]]* @beams, i64 0, i64 %indvars.iv263, i64 1
  %arrayidx8 = getelementptr inbounds [1000 x [4 x double]], [1000 x [4 x double]]* @beams, i64 0, i64 %indvars.iv263, i64 2
  %arrayidx11 = getelementptr inbounds [1000 x [4 x double]], [1000 x [4 x double]]* @beams, i64 0, i64 %indvars.iv263, i64 3
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5.603, i64 0, i64 0), double* nonnull %arrayidx2, double* nonnull %arrayidx5, double* nonnull %arrayidx8, double* nonnull %arrayidx11) #34
  %cmp13.not = icmp eq i32 %call12, -1
  br i1 %cmp13.not, label %while.end, label %while.body

while.body:                                       ; preds = %land.rhs
  %indvars.iv.next264 = add nuw nsw i64 %indvars.iv263, 1
  %exitcond265.not = icmp eq i64 %indvars.iv.next264, 1000
  br i1 %exitcond265.not, label %if.end16, label %land.rhs, !llvm.loop !687

while.end:                                        ; preds = %land.rhs
  %7 = trunc i64 %indvars.iv263 to i32
  %cmp14 = icmp eq i32 %7, 0
  br i1 %cmp14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %while.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.600, i64 0, i64 0), i64 117, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.601, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.604, i64 0, i64 0), i32 0) #34
  br label %if.end16

if.end16:                                         ; preds = %while.body, %if.then15, %while.end
  %ib.0244 = phi i32 [ 0, %if.then15 ], [ %7, %while.end ], [ 1000, %while.body ]
  %call17 = tail call i32 @fclose(%struct._IO_FILE* %call) #36
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.600, i64 0, i64 0), i64 120, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.605, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.606, i64 0, i64 0), i32 %ib.0244) #34
  %cmp18.not = icmp eq i32 %argc, 4
  br i1 %cmp18.not, label %if.end21, label %if.then19

if.then19:                                        ; preds = %if.end16
  tail call void @parse_args_file(i8* null) #34
  tail call void @_E__pr_header(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.600, i64 0, i64 0), i64 127, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.601, i64 0, i64 0)) #34
  %8 = load i8*, i8** %argv, align 8, !tbaa !74
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9.607, i64 0, i64 0), i8* %8) #34
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end16
  %arrayidx22 = getelementptr inbounds i8*, i8** %argv, i64 1
  %9 = load i8*, i8** %arrayidx22, align 8, !tbaa !74
  %arrayidx23 = getelementptr inbounds i8*, i8** %argv, i64 2
  %10 = load i8*, i8** %arrayidx23, align 8, !tbaa !74
  %arrayidx24 = getelementptr inbounds i8*, i8** %argv, i64 3
  %11 = load i8*, i8** %arrayidx24, align 8, !tbaa !74
  %call25 = tail call %struct._IO_FILE* @fopen(i8* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.599, i64 0, i64 0)) #36
  %cmp26 = icmp eq %struct._IO_FILE* %call25, null
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.end21
  tail call void @_E__pr_header(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.600, i64 0, i64 0), i64 132, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.601, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10.608, i64 0, i64 0), i8* %9) #34
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %if.end21
  tail call void @live_initialize_decoder(i8* %11) #34
  br label %land.rhs31

land.rhs31:                                       ; preds = %if.end28, %if.end99
  %indvars.iv260 = phi i64 [ 0, %if.end28 ], [ %indvars.iv.next261, %if.end99 ]
  %call32 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11.609, i64 0, i64 0), i8* nonnull %3, i32* nonnull %filesize) #34
  %cmp33.not = icmp eq i32 %call32, -1
  br i1 %cmp33.not, label %while.end105.split.loop.exit267, label %while.body35

while.body35:                                     ; preds = %land.rhs31
  %12 = load i32, i32* %filesize, align 4, !tbaa !37
  %cmp36 = icmp sgt i32 %12, 0
  %13 = and i32 %12, 1
  %cmp37.not = icmp eq i32 %13, 0
  %or.cond = and i1 %cmp36, %cmp37.not
  br i1 %or.cond, label %if.end41, label %if.then39

if.then39:                                        ; preds = %while.body35
  call void @_E__pr_header(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.600, i64 0, i64 0), i64 140, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.601, i64 0, i64 0)) #34
  %14 = load i32, i32* %filesize, align 4, !tbaa !37
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.610, i64 0, i64 0), i32 %14, i8* nonnull %3) #34
  %.pre = load i32, i32* %filesize, align 4, !tbaa !37
  br label %if.end41

if.end41:                                         ; preds = %while.body35, %if.then39
  %15 = phi i32 [ %12, %while.body35 ], [ %.pre, %if.then39 ]
  %conv43 = ashr i32 %15, 1
  %arrayidx45 = getelementptr inbounds [10000 x i32], [10000 x i32]* %uttsize, i64 0, i64 %indvars.iv260
  store i32 %conv43, i32* %arrayidx45, align 4, !tbaa !37
  %conv48 = sext i32 %conv43 to i64
  %call49 = call noalias align 16 i8* @calloc(i64 %conv48, i64 2) #34
  %arrayidx51 = getelementptr inbounds [10000 x i16*], [10000 x i16*]* %samps, i64 0, i64 %indvars.iv260
  %16 = bitcast i16** %arrayidx51 to i8**
  store i8* %call49, i8** %16, align 8, !tbaa !74
  %cmp52 = icmp eq i8* %call49, null
  br i1 %cmp52, label %if.then54, label %if.end56

if.then54:                                        ; preds = %if.end41
  call void @_E__pr_header(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.600, i64 0, i64 0), i64 144, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.601, i64 0, i64 0)) #34
  %17 = load i32, i32* %filesize, align 4, !tbaa !37
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13.611, i64 0, i64 0), i32 %17, i8* nonnull %3) #34
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %if.end41
  %call58 = call i64 @strlen(i8* noundef nonnull %3) #37
  %add = add i64 %call58, 1
  %call59 = call noalias align 16 i8* @malloc(i64 %add) #34
  %arrayidx61 = getelementptr inbounds [10000 x i8*], [10000 x i8*]* %uttid, i64 0, i64 %indvars.iv260
  store i8* %call59, i8** %arrayidx61, align 8, !tbaa !74
  %cmp62 = icmp eq i8* %call59, null
  br i1 %cmp62, label %if.then64, label %if.end69

if.then64:                                        ; preds = %if.end56
  call void @_E__pr_header(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.600, i64 0, i64 0), i64 147, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.601, i64 0, i64 0)) #34
  %call66 = call i64 @strlen(i8* noundef nonnull %3) #37
  %add67 = add i64 %call66, 1
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.612, i64 0, i64 0), i64 %add67, i8* nonnull %3) #34
  br label %if.end69

if.end69:                                         ; preds = %if.then64, %if.end56
  %call73 = call i8* @strcpy(i8* noundef nonnull dereferenceable(1) %call59, i8* noundef nonnull %3) #34
  %call76 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %4, i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.613, i64 0, i64 0), i8* %10, i8* nonnull %3) #34
  %call78 = call %struct._IO_FILE* @fopen(i8* nonnull %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16.614, i64 0, i64 0)) #36
  %cmp79 = icmp eq %struct._IO_FILE* %call78, null
  br i1 %cmp79, label %if.then81, label %if.end83

if.then81:                                        ; preds = %if.end69
  call void @_E__pr_header(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.600, i64 0, i64 0), i64 152, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.601, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10.608, i64 0, i64 0), i8* nonnull %4) #34
  br label %if.end83

if.end83:                                         ; preds = %if.then81, %if.end69
  %call89 = call i64 @fread(i8* %call49, i64 2, i64 %conv48, %struct._IO_FILE* %call78) #36
  %conv90 = trunc i64 %call89 to i32
  %cmp93.not = icmp eq i32 %conv43, %conv90
  br i1 %cmp93.not, label %if.end99, label %if.then95

if.then95:                                        ; preds = %if.end83
  call void @_E__pr_header(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.600, i64 0, i64 0), i64 156, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.601, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17.615, i64 0, i64 0), i32 %conv90, i32 %conv43, i8* nonnull %3) #34
  br label %if.end99

if.end99:                                         ; preds = %if.then95, %if.end83
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !74
  %call101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.18.616, i64 0, i64 0), i32 %conv90, i8* nonnull %4, i32 2000) #36
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !74
  %call102 = call i32 @fflush(%struct._IO_FILE* %19) #36
  %call103 = call i32 @fclose(%struct._IO_FILE* %call78) #36
  %indvars.iv.next261 = add nuw nsw i64 %indvars.iv260, 1
  %exitcond262.not = icmp eq i64 %indvars.iv.next261, 10000
  br i1 %exitcond262.not, label %while.end105, label %land.rhs31, !llvm.loop !688

while.end105.split.loop.exit267:                  ; preds = %land.rhs31
  %20 = trunc i64 %indvars.iv260 to i32
  br label %while.end105

while.end105:                                     ; preds = %if.end99, %while.end105.split.loop.exit267
  %iutt.0.lcssa = phi i32 [ %20, %while.end105.split.loop.exit267 ], [ 10000, %if.end99 ]
  %cmp136247.not = icmp eq i32 %iutt.0.lcssa, 0
  %cmp106249.not = icmp eq i32 %ib.0244, 0
  br i1 %cmp106249.not, label %for.end170, label %for.body.preheader

for.body.preheader:                               ; preds = %while.end105
  %wide.trip.count258 = zext i32 %ib.0244 to i64
  %wide.trip.count = zext i32 %iutt.0.lcssa to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc168
  %indvars.iv256 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next257, %for.inc168 ]
  %arrayidx110 = getelementptr inbounds [1000 x [4 x double]], [1000 x [4 x double]]* @beams, i64 0, i64 %indvars.iv256, i64 0
  %21 = load double, double* %arrayidx110, align 16, !tbaa !96
  %call111 = call i32 @logs3(double %21) #34
  %22 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  %beam = getelementptr inbounds %struct.kb_t, %struct.kb_t* %22, i64 0, i32 22
  %23 = load %struct.beam_t*, %struct.beam_t** %beam, align 8, !tbaa !97
  %hmm = getelementptr inbounds %struct.beam_t, %struct.beam_t* %23, i64 0, i32 1
  store i32 %call111, i32* %hmm, align 4, !tbaa !98
  %arrayidx114 = getelementptr inbounds [1000 x [4 x double]], [1000 x [4 x double]]* @beams, i64 0, i64 %indvars.iv256, i64 1
  %24 = load double, double* %arrayidx114, align 8, !tbaa !96
  %call115 = call i32 @logs3(double %24) #34
  %25 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  %beam116 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %25, i64 0, i32 22
  %26 = load %struct.beam_t*, %struct.beam_t** %beam116, align 8, !tbaa !97
  %ptrans = getelementptr inbounds %struct.beam_t, %struct.beam_t* %26, i64 0, i32 2
  store i32 %call115, i32* %ptrans, align 4, !tbaa !100
  %arrayidx119 = getelementptr inbounds [1000 x [4 x double]], [1000 x [4 x double]]* @beams, i64 0, i64 %indvars.iv256, i64 2
  %27 = load double, double* %arrayidx119, align 16, !tbaa !96
  %call120 = call i32 @logs3(double %27) #34
  %28 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  %beam121 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %28, i64 0, i32 22
  %29 = load %struct.beam_t*, %struct.beam_t** %beam121, align 8, !tbaa !97
  %word = getelementptr inbounds %struct.beam_t, %struct.beam_t* %29, i64 0, i32 3
  store i32 %call120, i32* %word, align 4, !tbaa !101
  %arrayidx124 = getelementptr inbounds [1000 x [4 x double]], [1000 x [4 x double]]* @beams, i64 0, i64 %indvars.iv256, i64 3
  %30 = load double, double* %arrayidx124, align 8, !tbaa !96
  %call125 = call i32 @logs3(double %30) #34
  %31 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  %beam126 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %31, i64 0, i32 22
  %32 = load %struct.beam_t*, %struct.beam_t** %beam126, align 8, !tbaa !97
  %subvq = getelementptr inbounds %struct.beam_t, %struct.beam_t* %32, i64 0, i32 0
  store i32 %call125, i32* %subvq, align 4, !tbaa !102
  call void @_E__pr_info_header(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.600, i64 0, i64 0), i64 172, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.605, i64 0, i64 0)) #34
  %33 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  %beam127 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %33, i64 0, i32 22
  %34 = load %struct.beam_t*, %struct.beam_t** %beam127, align 8, !tbaa !97
  %hmm128 = getelementptr inbounds %struct.beam_t, %struct.beam_t* %34, i64 0, i32 1
  %35 = load i32, i32* %hmm128, align 4, !tbaa !98
  %ptrans130 = getelementptr inbounds %struct.beam_t, %struct.beam_t* %34, i64 0, i32 2
  %36 = load i32, i32* %ptrans130, align 4, !tbaa !100
  %word132 = getelementptr inbounds %struct.beam_t, %struct.beam_t* %34, i64 0, i32 3
  %37 = load i32, i32* %word132, align 4, !tbaa !101
  %subvq134 = getelementptr inbounds %struct.beam_t, %struct.beam_t* %34, i64 0, i32 0
  %38 = load i32, i32* %subvq134, align 4, !tbaa !102
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.19.617, i64 0, i64 0), i32 %35, i32 %36, i32 %37, i32 %38) #34
  br i1 %cmp136247.not, label %for.inc168, label %for.body138

for.body138:                                      ; preds = %for.body, %for.inc165
  %indvars.iv254 = phi i64 [ %indvars.iv.next255, %for.inc165 ], [ 0, %for.body ]
  %arrayidx140 = getelementptr inbounds [10000 x i8*], [10000 x i8*]* %uttid, i64 0, i64 %indvars.iv254
  %39 = load i8*, i8** %arrayidx140, align 8, !tbaa !74
  call void @live_utt_set_uttid(i8* %39) #34
  %arrayidx143 = getelementptr inbounds [10000 x i32], [10000 x i32]* %uttsize, i64 0, i64 %indvars.iv254
  %40 = load i32, i32* %arrayidx143, align 4, !tbaa !37
  %cmp144245 = icmp sgt i32 %40, 0
  br i1 %cmp144245, label %for.body146.lr.ph, label %for.inc165

for.body146.lr.ph:                                ; preds = %for.body138
  %arrayidx162 = getelementptr inbounds [10000 x i16*], [10000 x i16*]* %samps, i64 0, i64 %indvars.iv254
  %41 = load i16*, i16** %arrayidx162, align 8, !tbaa !74
  br label %for.body146

for.body146:                                      ; preds = %for.body146.lr.ph, %for.body146
  %indvars.iv = phi i64 [ 0, %for.body146.lr.ph ], [ %indvars.iv.next, %for.body146 ]
  %indvars.iv.next = add nuw i64 %indvars.iv, 2000
  %42 = trunc i64 %indvars.iv.next to i32
  %cmp150 = icmp sgt i32 %40, %42
  %43 = trunc i64 %indvars.iv to i32
  %sub = sub nsw i32 %40, %43
  %cond = select i1 %cmp150, i32 2000, i32 %sub
  %cmp158.not.not = icmp sle i32 %40, %42
  %cond160 = zext i1 %cmp158.not.not to i32
  %add.ptr = getelementptr inbounds i16, i16* %41, i64 %indvars.iv
  %call163 = call i32 @live_utt_decode_block(i16* %add.ptr, i32 %cond, i32 %cond160, %struct.partialhyp_t** nonnull %parthyp) #34
  br i1 %cmp150, label %for.body146, label %for.inc165, !llvm.loop !689

for.inc165:                                       ; preds = %for.body146, %for.body138
  %indvars.iv.next255 = add nuw nsw i64 %indvars.iv254, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next255, %wide.trip.count
  br i1 %exitcond.not, label %for.inc168, label %for.body138, !llvm.loop !690

for.inc168:                                       ; preds = %for.inc165, %for.body
  %indvars.iv.next257 = add nuw nsw i64 %indvars.iv256, 1
  %exitcond259.not = icmp eq i64 %indvars.iv.next257, %wide.trip.count258
  br i1 %exitcond259.not, label %for.end170, label %for.body, !llvm.loop !691

for.end170:                                       ; preds = %for.inc168, %while.end105
  call void (...) bitcast (void ()* @live_utt_summary to void (...)*)() #34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #38
  call void @llvm.lifetime.end.p0i8(i64 516, i8* nonnull %4) #38
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %3) #38
  call void @llvm.lifetime.end.p0i8(i64 40000, i8* nonnull %2) #38
  call void @llvm.lifetime.end.p0i8(i64 80000, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 80000, i8* nonnull %0) #38
  ret i32 0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @gs_fread_int32(%struct.gs_s* nocapture readonly %gs) local_unnamed_addr #0 {
entry:
  %val = alloca i32, align 4
  %0 = bitcast i32* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %fp = getelementptr inbounds %struct.gs_s, %struct.gs_s* %gs, i64 0, i32 8
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !692
  %call = call i64 @fread(i8* nonnull %0, i64 4, i64 1, %struct._IO_FILE* %1) #36
  %cmp.not = icmp eq i64 %call, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 63, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.619, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.620, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %val, align 4, !tbaa !37
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret i32 %2
}

; Function Attrs: noinline nounwind optsize uwtable
define float @gs_fread_float32(%struct.gs_s* nocapture readonly %gs) local_unnamed_addr #0 {
entry:
  %val = alloca float, align 4
  %0 = bitcast float* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %fp = getelementptr inbounds %struct.gs_s, %struct.gs_s* %gs, i64 0, i32 8
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !692
  %call = call i64 @fread(i8* nonnull %0, i64 4, i64 1, %struct._IO_FILE* %1) #36
  %cmp.not = icmp eq i64 %call, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 71, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.619, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.620, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load float, float* %val, align 4, !tbaa !4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret float %2
}

; Function Attrs: noinline nounwind optsize uwtable
define void @gs_fread_bitvec_t(i32* nocapture %val, %struct.gs_s* nocapture readonly %gs) local_unnamed_addr #0 {
entry:
  %0 = bitcast i32* %val to i8*
  %n_mbyte = getelementptr inbounds %struct.gs_s, %struct.gs_s* %gs, i64 0, i32 5
  %1 = load i32, i32* %n_mbyte, align 4, !tbaa !693
  %conv = sext i32 %1 to i64
  %fp = getelementptr inbounds %struct.gs_s, %struct.gs_s* %gs, i64 0, i32 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !692
  %call = tail call i64 @fread(i8* %0, i64 %conv, i64 1, %struct._IO_FILE* %2) #36
  %cmp.not = icmp eq i64 %call, 1
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 78, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.619, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.620, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @gs_display(i8* %file, %struct.gs_s* nocapture readnone %gs) local_unnamed_addr #0 {
entry:
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 89, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.621, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.622, i64 0, i64 0), i8* %file) #34
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 56, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i32 90) #34
  %0 = bitcast i8* %call to %struct.gs_s*
  %call1 = tail call %struct._IO_FILE* @fopen(i8* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.623, i64 0, i64 0)) #36
  %fp = getelementptr inbounds i8, i8* %call, i64 40
  %1 = bitcast i8* %fp to %struct._IO_FILE**
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %1, align 8, !tbaa !692
  %cmp = icmp eq %struct._IO_FILE* %call1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 93, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.619, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.624, i64 0, i64 0), i8* %file) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call2 = tail call i32 @gs_fread_int32(%struct.gs_s* nonnull %0) #36
  %n_mgau = bitcast i8* %call to i32*
  store i32 %call2, i32* %n_mgau, align 8, !tbaa !379
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.621, i64 0, i64 0)) #34
  %2 = load i32, i32* %n_mgau, align 8, !tbaa !379
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.625, i64 0, i64 0), i32 %2) #34
  %call4 = tail call i32 @gs_fread_int32(%struct.gs_s* nonnull %0) #36
  %n_feat = getelementptr inbounds i8, i8* %call, i64 4
  %3 = bitcast i8* %n_feat to i32*
  store i32 %call4, i32* %3, align 4, !tbaa !694
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 99, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.621, i64 0, i64 0)) #34
  %4 = load i32, i32* %3, align 4, !tbaa !694
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8.626, i64 0, i64 0), i32 %4) #34
  %call6 = tail call i32 @gs_fread_int32(%struct.gs_s* nonnull %0) #36
  %n_density = getelementptr inbounds i8, i8* %call, i64 12
  %5 = bitcast i8* %n_density to i32*
  store i32 %call6, i32* %5, align 4, !tbaa !695
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 101, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.621, i64 0, i64 0)) #34
  %6 = load i32, i32* %5, align 4, !tbaa !695
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9.627, i64 0, i64 0), i32 %6) #34
  %call8 = tail call i32 @gs_fread_int32(%struct.gs_s* nonnull %0) #36
  %n_code = getelementptr inbounds i8, i8* %call, i64 8
  %7 = bitcast i8* %n_code to i32*
  store i32 %call8, i32* %7, align 8, !tbaa !696
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 103, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.621, i64 0, i64 0)) #34
  %8 = load i32, i32* %7, align 8, !tbaa !696
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10.628, i64 0, i64 0), i32 %8) #34
  %call10 = tail call i32 @gs_fread_int32(%struct.gs_s* nonnull %0) #36
  %n_featlen = getelementptr inbounds i8, i8* %call, i64 16
  %9 = bitcast i8* %n_featlen to i32*
  store i32 %call10, i32* %9, align 8, !tbaa !697
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 105, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.621, i64 0, i64 0)) #34
  %10 = load i32, i32* %9, align 8, !tbaa !697
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11.629, i64 0, i64 0), i32 %10) #34
  %11 = load i32, i32* %5, align 4, !tbaa !695
  %add = add nsw i32 %11, 31
  %12 = ashr i32 %add, 3
  %mul = and i32 %12, -4
  %n_mbyte = getelementptr inbounds i8, i8* %call, i64 20
  %13 = bitcast i8* %n_mbyte to i32*
  store i32 %mul, i32* %13, align 4, !tbaa !693
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.621, i64 0, i64 0)) #34
  %14 = load i32, i32* %13, align 4, !tbaa !693
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12.630, i64 0, i64 0), i32 %14) #34
  %15 = load i32, i32* %5, align 4, !tbaa !695
  %add16 = add nsw i32 %15, 31
  %shr17 = ashr i32 %add16, 5
  %conv18 = sext i32 %shr17 to i64
  %call19 = tail call i8* @__ckd_calloc__(i64 %conv18, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i32 111) #34
  %16 = bitcast i8* %call19 to i32*
  %17 = load i32, i32* %7, align 8, !tbaa !696
  %cmp21129 = icmp sgt i32 %17, 0
  br i1 %cmp21129, label %for.body, label %for.end66

for.body:                                         ; preds = %if.end, %for.inc64
  %code_id.0130 = phi i32 [ %inc65, %for.inc64 ], [ 0, %if.end ]
  %call23 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.631, i64 0, i64 0), i32 %code_id.0130) #36
  %18 = load i32, i32* %9, align 8, !tbaa !697
  %cmp26119 = icmp sgt i32 %18, 0
  br i1 %cmp26119, label %for.body28, label %for.end

for.body28:                                       ; preds = %for.body, %for.body28
  %c_id.0120 = phi i32 [ %inc, %for.body28 ], [ 0, %for.body ]
  %call29 = tail call float @gs_fread_float32(%struct.gs_s* nonnull %0) #36
  %conv30 = fpext float %call29 to double
  %call31 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.632, i64 0, i64 0), double %conv30) #36
  %inc = add nuw nsw i32 %c_id.0120, 1
  %19 = load i32, i32* %9, align 8, !tbaa !697
  %cmp26 = icmp slt i32 %inc, %19
  br i1 %cmp26, label %for.body28, label %for.end, !llvm.loop !698

for.end:                                          ; preds = %for.body28, %for.body
  %putchar117 = tail call i32 @putchar(i32 10)
  %20 = load i32, i32* %n_mgau, align 8, !tbaa !379
  %cmp35126 = icmp sgt i32 %20, 0
  br i1 %cmp35126, label %for.cond38.preheader.preheader, label %for.inc64

for.cond38.preheader.preheader:                   ; preds = %for.end
  %.pre = load i32, i32* %3, align 4, !tbaa !694
  br label %for.cond38.preheader

for.cond38.preheader:                             ; preds = %for.cond38.preheader.preheader, %for.inc61
  %21 = phi i32 [ %29, %for.inc61 ], [ %20, %for.cond38.preheader.preheader ]
  %22 = phi i32 [ %30, %for.inc61 ], [ %.pre, %for.cond38.preheader.preheader ]
  %m_id.0127 = phi i32 [ %inc62, %for.inc61 ], [ 0, %for.cond38.preheader.preheader ]
  %cmp40124 = icmp sgt i32 %22, 0
  br i1 %cmp40124, label %for.body42, label %for.inc61

for.body42:                                       ; preds = %for.cond38.preheader, %for.end56
  %s_id.0125 = phi i32 [ %inc59, %for.end56 ], [ 0, %for.cond38.preheader ]
  tail call void @gs_fread_bitvec_t(i32* %16, %struct.gs_s* nonnull %0) #36
  %call43 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16.633, i64 0, i64 0), i32 %m_id.0127, i32 %s_id.0125) #36
  %23 = load i32, i32* %5, align 4, !tbaa !695
  %cmp46121 = icmp sgt i32 %23, 0
  br i1 %cmp46121, label %for.body48, label %for.end56

for.body48:                                       ; preds = %for.body42, %for.inc54
  %24 = phi i32 [ %27, %for.inc54 ], [ %23, %for.body42 ]
  %i.0122 = phi i32 [ %inc55, %for.inc54 ], [ 0, %for.body42 ]
  %25 = lshr i32 %i.0122, 5
  %idxprom = zext i32 %25 to i64
  %arrayidx = getelementptr inbounds i32, i32* %16, i64 %idxprom
  %26 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %and = and i32 %i.0122, 31
  %shl = shl nuw i32 1, %and
  %and50 = and i32 %26, %shl
  %tobool.not = icmp eq i32 %and50, 0
  br i1 %tobool.not, label %for.inc54, label %if.then51

if.then51:                                        ; preds = %for.body48
  %call52 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.634, i64 0, i64 0), i32 %i.0122) #36
  %.pre131 = load i32, i32* %5, align 4, !tbaa !695
  br label %for.inc54

for.inc54:                                        ; preds = %for.body48, %if.then51
  %27 = phi i32 [ %24, %for.body48 ], [ %.pre131, %if.then51 ]
  %inc55 = add nuw nsw i32 %i.0122, 1
  %cmp46 = icmp slt i32 %inc55, %27
  br i1 %cmp46, label %for.body48, label %for.end56, !llvm.loop !699

for.end56:                                        ; preds = %for.inc54, %for.body42
  %putchar118 = tail call i32 @putchar(i32 10)
  %inc59 = add nuw nsw i32 %s_id.0125, 1
  %28 = load i32, i32* %3, align 4, !tbaa !694
  %cmp40 = icmp slt i32 %inc59, %28
  br i1 %cmp40, label %for.body42, label %for.inc61.loopexit, !llvm.loop !700

for.inc61.loopexit:                               ; preds = %for.end56
  %.pre132 = load i32, i32* %n_mgau, align 8, !tbaa !379
  br label %for.inc61

for.inc61:                                        ; preds = %for.inc61.loopexit, %for.cond38.preheader
  %29 = phi i32 [ %.pre132, %for.inc61.loopexit ], [ %21, %for.cond38.preheader ]
  %30 = phi i32 [ %28, %for.inc61.loopexit ], [ %22, %for.cond38.preheader ]
  %inc62 = add nuw nsw i32 %m_id.0127, 1
  %cmp35 = icmp slt i32 %inc62, %29
  br i1 %cmp35, label %for.cond38.preheader, label %for.inc64, !llvm.loop !701

for.inc64:                                        ; preds = %for.inc61, %for.end
  %inc65 = add nuw nsw i32 %code_id.0130, 1
  %31 = load i32, i32* %7, align 8, !tbaa !696
  %cmp21 = icmp slt i32 %inc65, %31
  br i1 %cmp21, label %for.body, label %for.end66, !llvm.loop !702

for.end66:                                        ; preds = %for.inc64, %if.end
  %putchar = tail call i32 @putchar(i32 10)
  %call68 = tail call i32 @gs_free(%struct.gs_s* nonnull %0) #36
  ret i32 1
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #7

; Function Attrs: noinline nounwind optsize uwtable
define i32 @gs_free(%struct.gs_s* nocapture %gs) local_unnamed_addr #0 {
entry:
  %fp = getelementptr inbounds %struct.gs_s, %struct.gs_s* %gs, i64 0, i32 8
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !tbaa !692
  %call = tail call i32 @fclose(%struct._IO_FILE* %0) #36
  %1 = bitcast %struct.gs_s* %gs to i8*
  tail call void @free(i8* %1) #34
  ret i32 1
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.gs_s* @gs_read(i8* %file) local_unnamed_addr #0 {
entry:
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 159, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.621, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.622, i64 0, i64 0), i8* %file) #34
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 56, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i32 160) #34
  %0 = bitcast i8* %call to %struct.gs_s*
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 162, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.619, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.637, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call1 = tail call %struct._IO_FILE* @fopen(i8* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.623, i64 0, i64 0)) #36
  %fp = getelementptr inbounds i8, i8* %call, i64 40
  %1 = bitcast i8* %fp to %struct._IO_FILE**
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %1, align 8, !tbaa !692
  %cmp2 = icmp eq %struct._IO_FILE* %call1, null
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 165, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.619, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19.638, i64 0, i64 0), i8* %file) #34
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end
  %call5 = tail call i32 @gs_fread_int32(%struct.gs_s* nonnull %0) #36
  %n_mgau = bitcast i8* %call to i32*
  store i32 %call5, i32* %n_mgau, align 8, !tbaa !379
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 169, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.621, i64 0, i64 0)) #34
  %2 = load i32, i32* %n_mgau, align 8, !tbaa !379
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.625, i64 0, i64 0), i32 %2) #34
  %call7 = tail call i32 @gs_fread_int32(%struct.gs_s* nonnull %0) #36
  %n_feat = getelementptr inbounds i8, i8* %call, i64 4
  %3 = bitcast i8* %n_feat to i32*
  store i32 %call7, i32* %3, align 4, !tbaa !694
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 171, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.621, i64 0, i64 0)) #34
  %4 = load i32, i32* %3, align 4, !tbaa !694
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8.626, i64 0, i64 0), i32 %4) #34
  %call9 = tail call i32 @gs_fread_int32(%struct.gs_s* nonnull %0) #36
  %n_density = getelementptr inbounds i8, i8* %call, i64 12
  %5 = bitcast i8* %n_density to i32*
  store i32 %call9, i32* %5, align 4, !tbaa !695
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 173, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.621, i64 0, i64 0)) #34
  %6 = load i32, i32* %5, align 4, !tbaa !695
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9.627, i64 0, i64 0), i32 %6) #34
  %call11 = tail call i32 @gs_fread_int32(%struct.gs_s* nonnull %0) #36
  %n_code = getelementptr inbounds i8, i8* %call, i64 8
  %7 = bitcast i8* %n_code to i32*
  store i32 %call11, i32* %7, align 8, !tbaa !696
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 175, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.621, i64 0, i64 0)) #34
  %8 = load i32, i32* %7, align 8, !tbaa !696
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10.628, i64 0, i64 0), i32 %8) #34
  %call13 = tail call i32 @gs_fread_int32(%struct.gs_s* nonnull %0) #36
  %n_featlen = getelementptr inbounds i8, i8* %call, i64 16
  %9 = bitcast i8* %n_featlen to i32*
  store i32 %call13, i32* %9, align 8, !tbaa !697
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 177, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.621, i64 0, i64 0)) #34
  %10 = load i32, i32* %9, align 8, !tbaa !697
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11.629, i64 0, i64 0), i32 %10) #34
  %11 = load i32, i32* %5, align 4, !tbaa !695
  %add = add nsw i32 %11, 31
  %12 = ashr i32 %add, 3
  %mul = and i32 %12, -4
  %n_mbyte = getelementptr inbounds i8, i8* %call, i64 20
  %13 = bitcast i8* %n_mbyte to i32*
  store i32 %mul, i32* %13, align 4, !tbaa !693
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 180, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.621, i64 0, i64 0)) #34
  %14 = load i32, i32* %13, align 4, !tbaa !693
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12.630, i64 0, i64 0), i32 %14) #34
  %15 = load i32, i32* %5, align 4, !tbaa !695
  %add19 = add nsw i32 %15, 31
  %shr20 = ashr i32 %add19, 5
  %conv21 = sext i32 %shr20 to i64
  %call22 = tail call i8* @__ckd_calloc__(i64 %conv21, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i32 183) #34
  %16 = bitcast i8* %call22 to i32*
  %17 = load i32, i32* %7, align 8, !tbaa !696
  %18 = load i32, i32* %9, align 8, !tbaa !697
  %call25 = tail call i8** @__ckd_calloc_2d__(i32 %17, i32 %18, i32 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i32 188) #34
  %codeword = getelementptr inbounds i8, i8* %call, i64 24
  %19 = bitcast i8* %codeword to float***
  %20 = bitcast i8* %codeword to i8***
  store i8** %call25, i8*** %20, align 8, !tbaa !703
  %21 = load i32, i32* %n_mgau, align 8, !tbaa !379
  %22 = load i32, i32* %3, align 4, !tbaa !694
  %23 = load i32, i32* %7, align 8, !tbaa !696
  %call29 = tail call i8*** @__ckd_calloc_3d__(i32 %21, i32 %22, i32 %23, i32 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i32 191) #34
  %codemap = getelementptr inbounds i8, i8* %call, i64 32
  %24 = bitcast i8* %codemap to i32****
  %25 = bitcast i8* %codemap to i8****
  store i8*** %call29, i8**** %25, align 8, !tbaa !704
  %26 = load i32, i32* %5, align 4, !tbaa !695
  %add31 = add nsw i32 %26, 1
  %conv32 = sext i32 %add31 to i64
  %call33 = tail call i8* @__ckd_calloc__(i64 %conv32, i64 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i32 192) #34
  %mgau_sl = getelementptr inbounds i8, i8* %call, i64 48
  %27 = bitcast i8* %mgau_sl to i8**
  store i8* %call33, i8** %27, align 8, !tbaa !705
  %28 = load i32, i32* %7, align 8, !tbaa !696
  %cmp35134 = icmp sgt i32 %28, 0
  br i1 %cmp35134, label %for.cond37.preheader, label %for.end71

for.cond37.preheader:                             ; preds = %if.end4, %for.inc69
  %indvars.iv140 = phi i64 [ %indvars.iv.next141, %for.inc69 ], [ 0, %if.end4 ]
  %29 = load i32, i32* %9, align 8, !tbaa !697
  %cmp39128 = icmp sgt i32 %29, 0
  br i1 %cmp39128, label %for.body41, label %for.cond46.preheader

for.cond46.preheader:                             ; preds = %for.body41, %for.cond37.preheader
  %30 = load i32, i32* %n_mgau, align 8, !tbaa !379
  %cmp48132 = icmp sgt i32 %30, 0
  br i1 %cmp48132, label %for.cond51.preheader.preheader, label %for.inc69

for.cond51.preheader.preheader:                   ; preds = %for.cond46.preheader
  %.pre = load i32, i32* %3, align 4, !tbaa !694
  br label %for.cond51.preheader

for.body41:                                       ; preds = %for.cond37.preheader, %for.body41
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body41 ], [ 0, %for.cond37.preheader ]
  %call42 = tail call float @gs_fread_float32(%struct.gs_s* nonnull %0) #36
  %31 = load float**, float*** %19, align 8, !tbaa !703
  %arrayidx = getelementptr inbounds float*, float** %31, i64 %indvars.iv140
  %32 = load float*, float** %arrayidx, align 8, !tbaa !74
  %arrayidx45 = getelementptr inbounds float, float* %32, i64 %indvars.iv
  store float %call42, float* %arrayidx45, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %33 = load i32, i32* %9, align 8, !tbaa !697
  %34 = sext i32 %33 to i64
  %cmp39 = icmp slt i64 %indvars.iv.next, %34
  br i1 %cmp39, label %for.body41, label %for.cond46.preheader, !llvm.loop !706

for.cond51.preheader:                             ; preds = %for.cond51.preheader.preheader, %for.inc66
  %35 = phi i32 [ %30, %for.cond51.preheader.preheader ], [ %43, %for.inc66 ]
  %36 = phi i32 [ %.pre, %for.cond51.preheader.preheader ], [ %44, %for.inc66 ]
  %indvars.iv138 = phi i64 [ 0, %for.cond51.preheader.preheader ], [ %indvars.iv.next139, %for.inc66 ]
  %cmp53130 = icmp sgt i32 %36, 0
  br i1 %cmp53130, label %for.body55, label %for.inc66

for.body55:                                       ; preds = %for.cond51.preheader, %for.body55
  %indvars.iv136 = phi i64 [ %indvars.iv.next137, %for.body55 ], [ 0, %for.cond51.preheader ]
  tail call void @gs_fread_bitvec_t(i32* %16, %struct.gs_s* nonnull %0) #36
  %37 = load i32, i32* %16, align 4, !tbaa !37
  %38 = load i32***, i32**** %24, align 8, !tbaa !704
  %arrayidx58 = getelementptr inbounds i32**, i32*** %38, i64 %indvars.iv138
  %39 = load i32**, i32*** %arrayidx58, align 8, !tbaa !74
  %arrayidx60 = getelementptr inbounds i32*, i32** %39, i64 %indvars.iv136
  %40 = load i32*, i32** %arrayidx60, align 8, !tbaa !74
  %arrayidx62 = getelementptr inbounds i32, i32* %40, i64 %indvars.iv140
  store i32 %37, i32* %arrayidx62, align 4, !tbaa !37
  %indvars.iv.next137 = add nuw nsw i64 %indvars.iv136, 1
  %41 = load i32, i32* %3, align 4, !tbaa !694
  %42 = sext i32 %41 to i64
  %cmp53 = icmp slt i64 %indvars.iv.next137, %42
  br i1 %cmp53, label %for.body55, label %for.inc66.loopexit, !llvm.loop !707

for.inc66.loopexit:                               ; preds = %for.body55
  %.pre142 = load i32, i32* %n_mgau, align 8, !tbaa !379
  br label %for.inc66

for.inc66:                                        ; preds = %for.inc66.loopexit, %for.cond51.preheader
  %43 = phi i32 [ %.pre142, %for.inc66.loopexit ], [ %35, %for.cond51.preheader ]
  %44 = phi i32 [ %41, %for.inc66.loopexit ], [ %36, %for.cond51.preheader ]
  %indvars.iv.next139 = add nuw nsw i64 %indvars.iv138, 1
  %45 = sext i32 %43 to i64
  %cmp48 = icmp slt i64 %indvars.iv.next139, %45
  br i1 %cmp48, label %for.cond51.preheader, label %for.inc69, !llvm.loop !708

for.inc69:                                        ; preds = %for.inc66, %for.cond46.preheader
  %indvars.iv.next141 = add nuw nsw i64 %indvars.iv140, 1
  %46 = load i32, i32* %7, align 8, !tbaa !696
  %47 = sext i32 %46 to i64
  %cmp35 = icmp slt i64 %indvars.iv.next141, %47
  br i1 %cmp35, label %for.cond37.preheader, label %for.end71, !llvm.loop !709

for.end71:                                        ; preds = %for.inc69, %if.end4
  ret %struct.gs_s* %0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @gc_compute_closest_cw(%struct.gs_s* nocapture readonly %gs, float* nocapture readonly %feat) local_unnamed_addr #0 {
entry:
  %call = tail call double @logs3_to_log(i32 -939524096) #34
  %n_code = getelementptr inbounds %struct.gs_s, %struct.gs_s* %gs, i64 0, i32 2
  %0 = load i32, i32* %n_code, align 8, !tbaa !696
  %codeword = getelementptr inbounds %struct.gs_s, %struct.gs_s* %gs, i64 0, i32 6
  %cmp62 = icmp sgt i32 %0, 0
  br i1 %cmp62, label %for.cond1.preheader.lr.ph, label %for.end26

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %n_featlen = getelementptr inbounds %struct.gs_s, %struct.gs_s* %gs, i64 0, i32 4
  %1 = load i32, i32* %n_featlen, align 8, !tbaa !697
  %cmp257 = icmp sgt i32 %1, 0
  %2 = zext i32 %0 to i64
  %wide.trip.count = zext i32 %1 to i64
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.lr.ph, %for.end
  %indvars.iv68 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next69, %for.end ]
  %min.064 = phi double [ 1.800000e+307, %for.cond1.preheader.lr.ph ], [ %min.2, %for.end ]
  %bst_codeid.063 = phi i32 [ 0, %for.cond1.preheader.lr.ph ], [ %bst_codeid.2, %for.end ]
  %3 = or i64 %indvars.iv68, 1
  br i1 %cmp257, label %for.body3.lr.ph, label %for.end

for.body3.lr.ph:                                  ; preds = %for.cond1.preheader
  %4 = load float**, float*** %codeword, align 8, !tbaa !703
  %arrayidx5 = getelementptr inbounds float*, float** %4, i64 %indvars.iv68
  %5 = load float*, float** %arrayidx5, align 8, !tbaa !74
  %arrayidx12 = getelementptr inbounds float*, float** %4, i64 %3
  %6 = load float*, float** %arrayidx12, align 8, !tbaa !74
  br label %for.body3

for.body3:                                        ; preds = %for.body3.lr.ph, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body3.lr.ph ], [ %indvars.iv.next, %for.body3 ]
  %tmp2.059 = phi double [ 0.000000e+00, %for.body3.lr.ph ], [ %11, %for.body3 ]
  %tmp1.058 = phi double [ 0.000000e+00, %for.body3.lr.ph ], [ %9, %for.body3 ]
  %arrayidx = getelementptr inbounds float, float* %feat, i64 %indvars.iv
  %7 = load float, float* %arrayidx, align 4, !tbaa !4
  %arrayidx7 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %8 = load float, float* %arrayidx7, align 4, !tbaa !4
  %sub = fsub float %7, %8
  %conv = fpext float %sub to double
  %9 = tail call double @llvm.fmuladd.f64(double %conv, double %conv, double %tmp1.058)
  %arrayidx14 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %10 = load float, float* %arrayidx14, align 4, !tbaa !4
  %sub15 = fsub float %7, %10
  %conv16 = fpext float %sub15 to double
  %11 = tail call double @llvm.fmuladd.f64(double %conv16, double %conv16, double %tmp2.059)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body3, !llvm.loop !710

for.end:                                          ; preds = %for.body3, %for.cond1.preheader
  %tmp1.0.lcssa = phi double [ 0.000000e+00, %for.cond1.preheader ], [ %9, %for.body3 ]
  %tmp2.0.lcssa = phi double [ 0.000000e+00, %for.cond1.preheader ], [ %11, %for.body3 ]
  %cmp17 = fcmp olt double %tmp1.0.lcssa, %min.064
  %12 = trunc i64 %indvars.iv68 to i32
  %bst_codeid.1 = select i1 %cmp17, i32 %12, i32 %bst_codeid.063
  %min.1 = select i1 %cmp17, double %tmp1.0.lcssa, double %min.064
  %cmp19 = fcmp olt double %tmp2.0.lcssa, %min.1
  %13 = trunc i64 %3 to i32
  %bst_codeid.2 = select i1 %cmp19, i32 %13, i32 %bst_codeid.1
  %min.2 = select i1 %cmp19, double %tmp2.0.lcssa, double %min.1
  %indvars.iv.next69 = add nuw nsw i64 %indvars.iv68, 2
  %cmp = icmp ult i64 %indvars.iv.next69, %2
  br i1 %cmp, label %for.cond1.preheader, label %for.end26, !llvm.loop !711

for.end26:                                        ; preds = %for.end, %entry
  %bst_codeid.0.lcssa = phi i32 [ 0, %entry ], [ %bst_codeid.2, %for.end ]
  ret i32 %bst_codeid.0.lcssa
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @gs_mgau_shortlist(%struct.gs_s* nocapture readonly %gs, i32 %m, i32 %n, float* nocapture readnone %feat, i32 %bst_codeid) local_unnamed_addr #0 {
entry:
  %codemap = getelementptr inbounds %struct.gs_s, %struct.gs_s* %gs, i64 0, i32 7
  %0 = load i32***, i32**** %codemap, align 8, !tbaa !704
  %idxprom = sext i32 %m to i64
  %arrayidx = getelementptr inbounds i32**, i32*** %0, i64 %idxprom
  %1 = load i32**, i32*** %arrayidx, align 8, !tbaa !74
  %2 = load i32*, i32** %1, align 8, !tbaa !74
  %idxprom2 = sext i32 %bst_codeid to i64
  %arrayidx3 = getelementptr inbounds i32, i32* %2, i64 %idxprom2
  %3 = load i32, i32* %arrayidx3, align 4, !tbaa !37
  %mgau_sl = getelementptr inbounds %struct.gs_s, %struct.gs_s* %gs, i64 0, i32 9
  %cmp57 = icmp sgt i32 %n, 0
  br i1 %cmp57, label %for.body, label %for.cond12.preheader.thread

for.cond12.preheader.thread:                      ; preds = %entry
  %4 = load i32*, i32** %mgau_sl, align 8, !tbaa !705
  store i32 -1, i32* %4, align 4, !tbaa !37
  br label %if.end25.thread

for.body:                                         ; preds = %entry, %for.inc
  %nc.060 = phi i32 [ %nc.1, %for.inc ], [ 0, %entry ]
  %bit_id.058 = phi i32 [ %inc6, %for.inc ], [ 0, %entry ]
  %shl = shl nuw i32 1, %bit_id.058
  %and = and i32 %shl, %3
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %5 = load i32*, i32** %mgau_sl, align 8, !tbaa !705
  %inc = add nsw i32 %nc.060, 1
  %idxprom4 = sext i32 %nc.060 to i64
  %arrayidx5 = getelementptr inbounds i32, i32* %5, i64 %idxprom4
  store i32 %bit_id.058, i32* %arrayidx5, align 4, !tbaa !37
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %nc.1 = phi i32 [ %inc, %if.then ], [ %nc.060, %for.body ]
  %inc6 = add nuw nsw i32 %bit_id.058, 1
  %exitcond62.not = icmp eq i32 %inc6, %n
  br i1 %exitcond62.not, label %for.end, label %for.body, !llvm.loop !712

for.end:                                          ; preds = %for.inc
  %6 = load i32*, i32** %mgau_sl, align 8, !tbaa !705
  %idxprom8 = sext i32 %nc.1 to i64
  %arrayidx9 = getelementptr inbounds i32, i32* %6, i64 %idxprom8
  store i32 -1, i32* %arrayidx9, align 4, !tbaa !37
  %cmp10 = icmp eq i32 %nc.1, 0
  br i1 %cmp10, label %for.cond12.preheader, label %if.end28

for.cond12.preheader:                             ; preds = %for.end
  br i1 %cmp57, label %for.body14.preheader, label %if.end25.thread

for.body14.preheader:                             ; preds = %for.cond12.preheader
  %wide.trip.count = zext i32 %n to i64
  br label %for.body14

for.body14:                                       ; preds = %for.body14.preheader, %for.body14
  %indvars.iv = phi i64 [ 0, %for.body14.preheader ], [ %indvars.iv.next, %for.body14 ]
  %nc.256 = phi i32 [ 0, %for.body14.preheader ], [ %inc16, %for.body14 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %inc16 = add nuw nsw i32 %nc.256, 1
  %arrayidx18 = getelementptr inbounds i32, i32* %6, i64 %indvars.iv
  store i32 %nc.256, i32* %arrayidx18, align 4, !tbaa !37
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end25, label %for.body14, !llvm.loop !713

if.end25.thread:                                  ; preds = %for.cond12.preheader.thread, %for.cond12.preheader
  %.ph = phi i32* [ %6, %for.cond12.preheader ], [ %4, %for.cond12.preheader.thread ]
  store i32 -1, i32* %.ph, align 4, !tbaa !37
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.618, i64 0, i64 0), i64 287, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.621, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.20.639, i64 0, i64 0), i32 %m, i32 %n) #34
  br label %if.end28

if.end25:                                         ; preds = %for.body14
  %idxprom23 = zext i32 %n to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %6, i64 %idxprom23
  store i32 -1, i32* %arrayidx24, align 4, !tbaa !37
  br label %if.end28

if.end28:                                         ; preds = %if.end25, %for.end, %if.end25.thread
  %nc.353 = phi i32 [ 0, %if.end25.thread ], [ %n, %if.end25 ], [ %nc.1, %for.end ]
  ret i32 %nc.353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define i32 @gs_delete(i8* nocapture readnone %file) local_unnamed_addr #28 {
entry:
  ret i32 1
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn writeonly
define void @pctr_reset(%struct.ciphone_t* nocapture %ctr) local_unnamed_addr #29 {
entry:
  %count = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %ctr, i64 0, i32 1
  store i32 0, i32* %count, align 8, !tbaa !64
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @pctr_reset_all(%struct.ciphone_t* nocapture %ctr) local_unnamed_addr #13 {
entry:
  %name3 = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %ctr, i64 0, i32 0
  %0 = load i8*, i8** %name3, align 8, !tbaa !330
  %tobool.not4 = icmp eq i8* %0, null
  br i1 %tobool.not4, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %ctr.addr.05 = phi %struct.ciphone_t* [ %incdec.ptr, %for.body ], [ %ctr, %entry ]
  tail call void @pctr_reset(%struct.ciphone_t* nonnull %ctr.addr.05) #36
  %incdec.ptr = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %ctr.addr.05, i64 1
  %name = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %incdec.ptr, i64 0, i32 0
  %1 = load i8*, i8** %name, align 8, !tbaa !330
  %tobool.not = icmp eq i8* %1, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !714

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @pctr_print_all(%struct._IO_FILE* nocapture %fp, %struct.ciphone_t* nocapture readonly %ctr) local_unnamed_addr #14 {
entry:
  %name = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %ctr, i64 0, i32 0
  %0 = load i8*, i8** %name, align 8, !tbaa !330
  %tobool.not = icmp eq i8* %0, null
  br i1 %tobool.not, label %return, label %if.end

if.end:                                           ; preds = %entry
  %1 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.640, i64 0, i64 0), i64 4, i64 1, %struct._IO_FILE* %fp)
  %2 = load i8*, i8** %name, align 8, !tbaa !330
  %tobool2.not13 = icmp eq i8* %2, null
  br i1 %tobool2.not13, label %for.end, label %for.body

for.body:                                         ; preds = %if.end, %for.body
  %3 = phi i8* [ %5, %for.body ], [ %2, %if.end ]
  %ctr.addr.014 = phi %struct.ciphone_t* [ %incdec.ptr, %for.body ], [ %ctr, %if.end ]
  %count = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %ctr.addr.014, i64 0, i32 1
  %4 = load i32, i32* %count, align 8, !tbaa !64
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.641, i64 0, i64 0), i32 %4, i8* nonnull %3) #36
  %incdec.ptr = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %ctr.addr.014, i64 1
  %name1 = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %incdec.ptr, i64 0, i32 0
  %5 = load i8*, i8** %name1, align 8, !tbaa !330
  %tobool2.not = icmp eq i8* %5, null
  br i1 %tobool2.not, label %for.end, label %for.body, !llvm.loop !715

for.end:                                          ; preds = %for.body, %if.end
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  br label %return

return:                                           ; preds = %entry, %for.end
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define i32 @host_pclk(i32 %dummy) local_unnamed_addr #28 {
entry:
  ret i32 0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @ptmr_start(%struct.ptmr_t* nocapture %tm) local_unnamed_addr #28 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define void @ptmr_stop(%struct.ptmr_t* nocapture %tm) local_unnamed_addr #28 {
entry:
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn writeonly
define void @ptmr_reset(%struct.ptmr_t* nocapture %tm) local_unnamed_addr #29 {
entry:
  %t_cpu = getelementptr inbounds %struct.ptmr_t, %struct.ptmr_t* %tm, i64 0, i32 1
  %0 = bitcast double* %t_cpu to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %0, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn writeonly
define void @ptmr_init(%struct.ptmr_t* nocapture %tm) local_unnamed_addr #29 {
entry:
  %t_cpu = getelementptr inbounds %struct.ptmr_t, %struct.ptmr_t* %tm, i64 0, i32 1
  %0 = bitcast double* %t_cpu to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(32) %0, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @ptmr_reset_all(%struct.ptmr_t* nocapture %tm) local_unnamed_addr #13 {
entry:
  %name3 = getelementptr inbounds %struct.ptmr_t, %struct.ptmr_t* %tm, i64 0, i32 0
  %0 = load i8*, i8** %name3, align 8, !tbaa !716
  %tobool.not4 = icmp eq i8* %0, null
  br i1 %tobool.not4, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %tm.addr.05 = phi %struct.ptmr_t* [ %incdec.ptr, %for.body ], [ %tm, %entry ]
  tail call void @ptmr_reset(%struct.ptmr_t* nonnull %tm.addr.05) #36
  %incdec.ptr = getelementptr inbounds %struct.ptmr_t, %struct.ptmr_t* %tm.addr.05, i64 1
  %name = getelementptr inbounds %struct.ptmr_t, %struct.ptmr_t* %incdec.ptr, i64 0, i32 0
  %1 = load i8*, i8** %name, align 8, !tbaa !716
  %tobool.not = icmp eq i8* %1, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !717

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @ptmr_print_all(%struct._IO_FILE* nocapture %fp, %struct.ptmr_t* nocapture readonly %tm, double %norm) local_unnamed_addr #14 {
entry:
  %cmp = fcmp une double %norm, 0.000000e+00
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %div = fdiv double 1.000000e+00, %norm
  %name7 = getelementptr inbounds %struct.ptmr_t, %struct.ptmr_t* %tm, i64 0, i32 0
  %0 = load i8*, i8** %name7, align 8, !tbaa !716
  %tobool.not8 = icmp eq i8* %0, null
  br i1 %tobool.not8, label %if.end, label %for.body

for.body:                                         ; preds = %if.then, %for.body
  %1 = phi i8* [ %3, %for.body ], [ %0, %if.then ]
  %tm.addr.09 = phi %struct.ptmr_t* [ %incdec.ptr, %for.body ], [ %tm, %if.then ]
  %t_cpu = getelementptr inbounds %struct.ptmr_t, %struct.ptmr_t* %tm.addr.09, i64 0, i32 1
  %2 = load double, double* %t_cpu, align 8, !tbaa !718
  %mul = fmul double %div, %2
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.644, i64 0, i64 0), double %mul, i8* nonnull %1) #36
  %incdec.ptr = getelementptr inbounds %struct.ptmr_t, %struct.ptmr_t* %tm.addr.09, i64 1
  %name = getelementptr inbounds %struct.ptmr_t, %struct.ptmr_t* %incdec.ptr, i64 0, i32 0
  %3 = load i8*, i8** %name, align 8, !tbaa !716
  %tobool.not = icmp eq i8* %3, null
  br i1 %tobool.not, label %if.end, label %for.body, !llvm.loop !719

if.end:                                           ; preds = %for.body, %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @host_endian() local_unnamed_addr #0 {
entry:
  %buf = alloca [8 x i8], align 1
  %k = alloca i32, align 4
  %0 = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #38
  %1 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #38
  %call = tail call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.645, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.646, i64 0, i64 0)) #36
  %cmp = icmp eq %struct._IO_FILE* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.647, i64 0, i64 0), i64 291, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.648, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.649, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.645, i64 0, i64 0)) #34
  br label %cleanup

if.end:                                           ; preds = %entry
  store i32 287454020, i32* %k, align 4, !tbaa !37
  %call1 = call i64 @fwrite(i8* nonnull %1, i64 4, i64 1, %struct._IO_FILE* nonnull %call) #36
  %cmp2.not = icmp eq i64 %call1, 1
  br i1 %cmp2.not, label %if.end6, label %if.then3

if.then3:                                         ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.647, i64 0, i64 0), i64 299, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.648, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9.650, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.645, i64 0, i64 0)) #34
  %call4 = tail call i32 @fclose(%struct._IO_FILE* nonnull %call) #36
  %call5 = tail call i32 @unlink(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.645, i64 0, i64 0)) #34
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %call7 = tail call i32 @fclose(%struct._IO_FILE* nonnull %call) #36
  %call8 = tail call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.645, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.651, i64 0, i64 0)) #36
  %cmp9 = icmp eq %struct._IO_FILE* %call8, null
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end6
  tail call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.647, i64 0, i64 0), i64 307, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.648, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11.652, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.645, i64 0, i64 0)) #34
  %call11 = tail call i32 @unlink(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.645, i64 0, i64 0)) #34
  br label %cleanup

if.end12:                                         ; preds = %if.end6
  %call13 = call i64 @fread(i8* nonnull %0, i64 1, i64 4, %struct._IO_FILE* nonnull %call8) #36
  %cmp14.not = icmp eq i64 %call13, 4
  br i1 %cmp14.not, label %if.end18, label %if.then15

if.then15:                                        ; preds = %if.end12
  tail call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.647, i64 0, i64 0), i64 312, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7.648, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12.653, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.645, i64 0, i64 0)) #34
  %call16 = tail call i32 @fclose(%struct._IO_FILE* nonnull %call8) #36
  %call17 = tail call i32 @unlink(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.645, i64 0, i64 0)) #34
  br label %cleanup

if.end18:                                         ; preds = %if.end12
  %call19 = tail call i32 @fclose(%struct._IO_FILE* nonnull %call8) #36
  %call20 = tail call i32 @unlink(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.645, i64 0, i64 0)) #34
  %2 = load i8, i8* %0, align 1, !tbaa !63
  %cmp21 = icmp eq i8 %2, 68
  %cond = zext i1 %cmp21 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end18, %if.then15, %if.then10, %if.then3, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ -1, %if.then3 ], [ -1, %if.then10 ], [ -1, %if.then15 ], [ %cond, %if.end18 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #38
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @unlink(i8* nocapture noundef readonly) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize uwtable
define void @parse_args_file(i8* %live_args) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq i8* %live_args, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  tail call void @cmd_ln_print_help(%struct._IO_FILE* %0, %struct.arg_t* getelementptr inbounds ([77 x %struct.arg_t], [77 x %struct.arg_t]* @arg, i64 0, i64 0)) #34
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call %struct._IO_FILE* @fopen(i8* nonnull %live_args, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.656, i64 0, i64 0)) #36
  %cmp1 = icmp eq %struct._IO_FILE* %call, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.657, i64 0, i64 0), i64 388, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.658, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3.659, i64 0, i64 0), i8* nonnull %live_args) #34
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %call4 = tail call i8* @__ckd_calloc__(i64 10000, i64 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.657, i64 0, i64 0), i32 390) #34
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %while.cond.outer.backedge, %if.end3
  %maxarglen.0.ph = phi i32 [ 0, %if.end3 ], [ %maxarglen.0.ph.be, %while.cond.outer.backedge ]
  %nargs.0.ph = phi i32 [ 1, %if.end3 ], [ %nargs.0.ph.be, %while.cond.outer.backedge ]
  br label %while.cond

while.cond:                                       ; preds = %while.cond.outer, %while.body
  %call5 = tail call i8* @fgets(i8* %call4, i32 10000, %struct._IO_FILE* %call) #36
  %cmp6.not = icmp eq i8* %call5, null
  br i1 %cmp6.not, label %while.end32, label %while.body

while.body:                                       ; preds = %while.cond
  %call7 = tail call i8* @strtok(i8* %call4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.660, i64 0, i64 0)) #34
  %cmp8 = icmp eq i8* %call7, null
  br i1 %cmp8, label %while.cond, label %if.end10, !llvm.loop !720

if.end10:                                         ; preds = %while.body
  %call11 = tail call i64 @strlen(i8* noundef nonnull %call7) #37
  %conv = trunc i64 %call11 to i32
  %cmp12 = icmp slt i32 %maxarglen.0.ph, %conv
  %spec.select = select i1 %cmp12, i32 %conv, i32 %maxarglen.0.ph
  %nargs.195 = add nsw i32 %nargs.0.ph, 1
  %call1996 = tail call i8* @strtok(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.660, i64 0, i64 0)) #34
  %cmp20.not97 = icmp eq i8* %call1996, null
  br i1 %cmp20.not97, label %while.cond.outer.backedge, label %while.body22

while.cond.outer.backedge:                        ; preds = %while.body22, %if.end10
  %maxarglen.0.ph.be = phi i32 [ %spec.select, %if.end10 ], [ %spec.select89, %while.body22 ]
  %nargs.0.ph.be = phi i32 [ %nargs.195, %if.end10 ], [ %nargs.1, %while.body22 ]
  br label %while.cond.outer, !llvm.loop !720

while.body22:                                     ; preds = %if.end10, %while.body22
  %call19100 = phi i8* [ %call19, %while.body22 ], [ %call1996, %if.end10 ]
  %nargs.199 = phi i32 [ %nargs.1, %while.body22 ], [ %nargs.195, %if.end10 ]
  %maxarglen.298 = phi i32 [ %spec.select89, %while.body22 ], [ %spec.select, %if.end10 ]
  %call23 = tail call i64 @strlen(i8* noundef nonnull %call19100) #37
  %conv24 = trunc i64 %call23 to i32
  %cmp25 = icmp slt i32 %maxarglen.298, %conv24
  %spec.select89 = select i1 %cmp25, i32 %conv24, i32 %maxarglen.298
  %nargs.1 = add nsw i32 %nargs.199, 1
  %call19 = tail call i8* @strtok(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.660, i64 0, i64 0)) #34
  %cmp20.not = icmp eq i8* %call19, null
  br i1 %cmp20.not, label %while.cond.outer.backedge, label %while.body22, !llvm.loop !721

while.end32:                                      ; preds = %while.cond
  tail call void @rewind(%struct._IO_FILE* %call) #36
  store i32 %nargs.0.ph, i32* @parse_args_file.nliveargs, align 4, !tbaa !37
  %add = add nsw i32 %maxarglen.0.ph, 1
  %call33 = tail call i8** @__ckd_calloc_2d__(i32 %nargs.0.ph, i32 %add, i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.657, i64 0, i64 0), i32 407) #34
  store i8** %call33, i8*** @liveargs, align 8, !tbaa !74
  br label %while.cond34.outer

while.cond34.loopexit.loopexit:                   ; preds = %while.body50
  %1 = trunc i64 %indvars.iv.next to i32
  br label %while.cond34.outer.backedge

while.cond34.outer.backedge:                      ; preds = %while.cond34.loopexit.loopexit, %if.end43
  %nargs.2.ph.be = phi i32 [ %nargs.390, %if.end43 ], [ %1, %while.cond34.loopexit.loopexit ]
  br label %while.cond34.outer, !llvm.loop !722

while.cond34.outer:                               ; preds = %while.cond34.outer.backedge, %while.end32
  %nargs.2.ph = phi i32 [ 1, %while.end32 ], [ %nargs.2.ph.be, %while.cond34.outer.backedge ]
  br label %while.cond34

while.cond34:                                     ; preds = %while.cond34.outer, %while.body38
  %call35 = tail call i8* @fgets(i8* %call4, i32 10000, %struct._IO_FILE* %call) #36
  %cmp36.not = icmp eq i8* %call35, null
  br i1 %cmp36.not, label %while.end56, label %while.body38

while.body38:                                     ; preds = %while.cond34
  %call39 = tail call i8* @strtok(i8* %call4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.660, i64 0, i64 0)) #34
  %cmp40 = icmp eq i8* %call39, null
  br i1 %cmp40, label %while.cond34, label %if.end43, !llvm.loop !722

if.end43:                                         ; preds = %while.body38
  %2 = load i8**, i8*** @liveargs, align 8, !tbaa !74
  %idxprom = sext i32 %nargs.2.ph to i64
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom
  %3 = load i8*, i8** %arrayidx, align 8, !tbaa !74
  %call45 = tail call i8* @strcpy(i8* noundef nonnull dereferenceable(1) %3, i8* noundef nonnull %call39) #34
  %nargs.390 = add i32 %nargs.2.ph, 1
  %call4791 = tail call i8* @strtok(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.660, i64 0, i64 0)) #34
  %cmp48.not92 = icmp eq i8* %call4791, null
  br i1 %cmp48.not92, label %while.cond34.outer.backedge, label %while.body50.preheader

while.body50.preheader:                           ; preds = %if.end43
  %4 = sext i32 %nargs.390 to i64
  br label %while.body50

while.body50:                                     ; preds = %while.body50.preheader, %while.body50
  %indvars.iv = phi i64 [ %4, %while.body50.preheader ], [ %indvars.iv.next, %while.body50 ]
  %call4794 = phi i8* [ %call4791, %while.body50.preheader ], [ %call47, %while.body50 ]
  %5 = load i8**, i8*** @liveargs, align 8, !tbaa !74
  %arrayidx53 = getelementptr inbounds i8*, i8** %5, i64 %indvars.iv
  %6 = load i8*, i8** %arrayidx53, align 8, !tbaa !74
  %call54 = tail call i8* @strcpy(i8* noundef nonnull dereferenceable(1) %6, i8* noundef nonnull %call4794) #34
  %indvars.iv.next = add i64 %indvars.iv, 1
  %call47 = tail call i8* @strtok(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.660, i64 0, i64 0)) #34
  %cmp48.not = icmp eq i8* %call47, null
  br i1 %cmp48.not, label %while.cond34.loopexit.loopexit, label %while.body50, !llvm.loop !723

while.end56:                                      ; preds = %while.cond34
  %call57 = tail call i32 @fclose(%struct._IO_FILE* %call) #36
  tail call void @free(i8* %call4) #34
  %7 = load i32, i32* @parse_args_file.nliveargs, align 4, !tbaa !37
  %8 = load i8**, i8*** @liveargs, align 8, !tbaa !74
  %call58 = tail call i32 @cmd_ln_parse(%struct.arg_t* getelementptr inbounds ([77 x %struct.arg_t], [77 x %struct.arg_t]* @arg, i64 0, i64 0), i32 %7, i8** %8) #34
  br label %cleanup

cleanup:                                          ; preds = %while.end56, %if.then
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn
declare i8* @strtok(i8*, i8* nocapture readonly) local_unnamed_addr #6

; Function Attrs: nofree nounwind optsize
declare void @rewind(%struct._IO_FILE* nocapture noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize uwtable
define void @parse_args_free() local_unnamed_addr #0 {
entry:
  tail call void (...) bitcast (void ()* @cmd_ln_free to void (...)*)() #34
  %0 = load i8**, i8*** @liveargs, align 8, !tbaa !74
  tail call void @ckd_free_2d(i8** %0) #34
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i8* @dict_ciphone_str(%struct.dict_t* nocapture readonly %d, i32 %wid, i32 %pos) local_unnamed_addr #0 {
entry:
  %mdef = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 0
  %0 = load %struct.mdef_t*, %struct.mdef_t** %mdef, align 8, !tbaa !724
  %tobool.not = icmp eq %struct.mdef_t* %0, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 4
  %1 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %idxprom = sext i32 %wid to i64
  %ciphone = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %1, i64 %idxprom, i32 1
  %2 = load i8*, i8** %ciphone, align 8, !tbaa !60
  %idxprom2 = sext i32 %pos to i64
  %arrayidx3 = getelementptr inbounds i8, i8* %2, i64 %idxprom2
  %3 = load i8, i8* %arrayidx3, align 1, !tbaa !63
  %call = tail call i8* @mdef_ciphone_str(%struct.mdef_t* nonnull %0, i8 signext %3) #34
  br label %return

if.else:                                          ; preds = %entry
  %ciphone_str = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 2
  %4 = load i8**, i8*** %ciphone_str, align 8, !tbaa !725
  %word4 = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 4
  %5 = load %struct.dictword_t*, %struct.dictword_t** %word4, align 8, !tbaa !39
  %idxprom5 = sext i32 %wid to i64
  %ciphone7 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %5, i64 %idxprom5, i32 1
  %6 = load i8*, i8** %ciphone7, align 8, !tbaa !60
  %idxprom8 = sext i32 %pos to i64
  %arrayidx9 = getelementptr inbounds i8, i8* %6, i64 %idxprom8
  %7 = load i8, i8* %arrayidx9, align 1, !tbaa !63
  %idxprom10 = sext i8 %7 to i64
  %arrayidx11 = getelementptr inbounds i8*, i8** %4, i64 %idxprom10
  %8 = load i8*, i8** %arrayidx11, align 8, !tbaa !74
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i8* [ %call, %if.then ], [ %8, %if.else ]
  ret i8* %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @dict_add_word(%struct.dict_t* nocapture %d, i8* %word, i8* readonly %p, i32 %np) local_unnamed_addr #0 {
entry:
  %w = alloca i32, align 4
  %0 = bitcast i32* %w to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %n_word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 7
  %1 = load i32, i32* %n_word, align 4, !tbaa !58
  %max_words = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 6
  %2 = load i32, i32* %max_words, align 8, !tbaa !726
  %cmp.not = icmp slt i32 %1, %2
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 112, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.761, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.762, i64 0, i64 0), i8* %word) #34
  br label %cleanup

if.end:                                           ; preds = %entry
  %word1 = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 4
  %3 = load %struct.dictword_t*, %struct.dictword_t** %word1, align 8, !tbaa !39
  %idx.ext = sext i32 %1 to i64
  %call = tail call i8* @__ckd_salloc__(i8* %word, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i32 117) #34
  %word3 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %3, i64 %idx.ext, i32 0
  store i8* %call, i8** %word3, align 8, !tbaa !510
  %ht = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 5
  %4 = load %struct.hash_table_t*, %struct.hash_table_t** %ht, align 8, !tbaa !727
  %5 = load i32, i32* %n_word, align 4, !tbaa !58
  %call6 = tail call i32 @hash_enter(%struct.hash_table_t* %4, i8* %call, i32 %5) #34
  %6 = load i32, i32* %n_word, align 4, !tbaa !58
  %cmp8.not = icmp eq i32 %call6, %6
  br i1 %cmp8.not, label %if.end11, label %if.then9

if.then9:                                         ; preds = %if.end
  %7 = load i8*, i8** %word3, align 8, !tbaa !510
  tail call void @ckd_free(i8* %7) #34
  br label %cleanup

if.end11:                                         ; preds = %if.end
  %tobool = icmp ne i8* %p, null
  %cmp12 = icmp sgt i32 %np, 0
  %or.cond = select i1 %tobool, i1 %cmp12, i1 false
  br i1 %or.cond, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.end11
  %conv90 = zext i32 %np to i64
  %call14 = tail call i8* @__ckd_malloc__(i64 %conv90, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i32 127) #34
  %ciphone = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %3, i64 %idx.ext, i32 1
  store i8* %call14, i8** %ciphone, align 8, !tbaa !60
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call14, i8* nonnull align 1 %p, i64 %conv90, i1 false)
  br label %if.end20

if.else:                                          ; preds = %if.end11
  %ciphone18 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %3, i64 %idx.ext, i32 1
  store i8* null, i8** %ciphone18, align 8, !tbaa !60
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then13
  %.sink = phi i32 [ %np, %if.then13 ], [ 0, %if.else ]
  %8 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %3, i64 %idx.ext, i32 2
  store i32 %.sink, i32* %8, align 8
  %alt = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %3, i64 %idx.ext, i32 3
  store i32 -1, i32* %alt, align 4, !tbaa !728
  %9 = load i32, i32* %n_word, align 4, !tbaa !58
  %basewid = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %3, i64 %idx.ext, i32 4
  store i32 %9, i32* %basewid, align 8, !tbaa !249
  %n_comp = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %3, i64 %idx.ext, i32 5
  store i32 0, i32* %n_comp, align 4, !tbaa !729
  %comp = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %3, i64 %idx.ext, i32 6
  store i32* null, i32** %comp, align 8, !tbaa !730
  %call22 = tail call i32 @dict_word2basestr(i8* %word) #36
  %cmp23 = icmp sgt i32 %call22, 0
  br i1 %cmp23, label %if.then25, label %if.end20.if.end46_crit_edge

if.end20.if.end46_crit_edge:                      ; preds = %if.end20
  %.pre = load i32, i32* %n_word, align 4, !tbaa !58
  br label %if.end46

if.then25:                                        ; preds = %if.end20
  %10 = load %struct.hash_table_t*, %struct.hash_table_t** %ht, align 8, !tbaa !727
  %call27 = call i32 @hash_lookup(%struct.hash_table_t* %10, i8* %word, i32* nonnull %w) #34
  %cmp28 = icmp slt i32 %call27, 0
  %idxprom91 = zext i32 %call22 to i64
  %arrayidx = getelementptr inbounds i8, i8* %word, i64 %idxprom91
  store i8 40, i8* %arrayidx, align 1, !tbaa !63
  br i1 %cmp28, label %if.then30, label %if.end34

if.then30:                                        ; preds = %if.then25
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 144, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.763, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.764, i64 0, i64 0), i8* %word) #34
  br label %if.end34

if.end34:                                         ; preds = %if.then25, %if.then30
  %11 = load i32, i32* %w, align 4, !tbaa !37
  store i32 %11, i32* %basewid, align 8, !tbaa !249
  %12 = load %struct.dictword_t*, %struct.dictword_t** %word1, align 8, !tbaa !39
  %13 = load i32, i32* %w, align 4, !tbaa !37
  %idxprom37 = sext i32 %13 to i64
  %alt39 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %12, i64 %idxprom37, i32 3
  %14 = load i32, i32* %alt39, align 4, !tbaa !728
  store i32 %14, i32* %alt, align 4, !tbaa !728
  %15 = load i32, i32* %n_word, align 4, !tbaa !58
  %16 = load i32, i32* %w, align 4, !tbaa !37
  %idxprom43 = sext i32 %16 to i64
  %alt45 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %12, i64 %idxprom43, i32 3
  store i32 %15, i32* %alt45, align 4, !tbaa !728
  br label %if.end46

if.end46:                                         ; preds = %if.end20.if.end46_crit_edge, %if.end34
  %17 = phi i32 [ %.pre, %if.end20.if.end46_crit_edge ], [ %15, %if.end34 ]
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %n_word, align 4, !tbaa !58
  br label %cleanup

cleanup:                                          ; preds = %if.end46, %if.then9, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ -1, %if.then9 ], [ %17, %if.end46 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret i32 %retval.0
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @dict_word2basestr(i8* nocapture %word) local_unnamed_addr #14 {
entry:
  %call = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %word) #37
  %sub = shl i64 %call, 32
  %sext = add i64 %sub, -4294967296
  %idxprom = ashr exact i64 %sext, 32
  %arrayidx = getelementptr inbounds i8, i8* %word, i64 %idxprom
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !63
  %cmp = icmp eq i8 %0, 41
  %conv = trunc i64 %call to i32
  %cmp431 = icmp sgt i32 %conv, 2
  %or.cond = select i1 %cmp, i1 %cmp431, i1 false
  br i1 %or.cond, label %land.rhs.preheader, label %cleanup

land.rhs.preheader:                               ; preds = %entry
  %sub3 = add nsw i32 %conv, -2
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.preheader, %for.inc
  %i.032 = phi i32 [ %dec, %for.inc ], [ %sub3, %land.rhs.preheader ]
  %idxprom629 = zext i32 %i.032 to i64
  %arrayidx7 = getelementptr inbounds i8, i8* %word, i64 %idxprom629
  %1 = load i8, i8* %arrayidx7, align 1, !tbaa !63
  %cmp9.not = icmp eq i8 %1, 40
  br i1 %cmp9.not, label %if.then13, label %for.inc

for.inc:                                          ; preds = %land.rhs
  %dec = add nsw i32 %i.032, -1
  %cmp4 = icmp sgt i32 %i.032, 1
  br i1 %cmp4, label %land.rhs, label %cleanup, !llvm.loop !731

if.then13:                                        ; preds = %land.rhs
  %idxprom629.le = zext i32 %i.032 to i64
  %arrayidx7.le = getelementptr inbounds i8, i8* %word, i64 %idxprom629.le
  store i8 0, i8* %arrayidx7.le, align 1, !tbaa !63
  br label %cleanup

cleanup:                                          ; preds = %for.inc, %entry, %if.then13
  %retval.0 = phi i32 [ %i.032, %if.then13 ], [ -1, %entry ], [ -1, %for.inc ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.dict_t* @dict_init(%struct.mdef_t* %mdef, i8* %dictfile, i8* %fillerfile, i8 signext %comp_sep) local_unnamed_addr #0 {
entry:
  %line = alloca [1024 x i8], align 16
  %0 = getelementptr inbounds [1024 x i8], [1024 x i8]* %line, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %0) #38
  %tobool.not = icmp eq i8* %dictfile, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 302, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.763, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.767, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call = tail call %struct._IO_FILE* @fopen(i8* %dictfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.768, i64 0, i64 0)) #36
  %cmp = icmp eq %struct._IO_FILE* %call, null
  br i1 %cmp, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 310, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.769, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__fatal_sys_error(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8.770, i64 0, i64 0), i8* %dictfile) #34
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end
  %call3132 = call i8* @fgets(i8* nonnull %0, i32 1024, %struct._IO_FILE* %call) #36
  %cmp4.not133 = icmp eq i8* %call3132, null
  br i1 %cmp4.not133, label %while.end, label %while.body

while.body:                                       ; preds = %if.end2, %while.body
  %n.0134 = phi i32 [ %spec.select, %while.body ], [ 0, %if.end2 ]
  %1 = load i8, i8* %0, align 16, !tbaa !63
  %cmp5.not = icmp ne i8 %1, 35
  %inc = zext i1 %cmp5.not to i32
  %spec.select = add nuw nsw i32 %n.0134, %inc
  %call3 = call i8* @fgets(i8* nonnull %0, i32 1024, %struct._IO_FILE* %call) #36
  %cmp4.not = icmp eq i8* %call3, null
  br i1 %cmp4.not, label %while.end, label %while.body, !llvm.loop !732

while.end:                                        ; preds = %while.body, %if.end2
  %n.0.lcssa = phi i32 [ 0, %if.end2 ], [ %spec.select, %while.body ]
  call void @rewind(%struct._IO_FILE* %call) #36
  %tobool9.not = icmp eq i8* %fillerfile, null
  br i1 %tobool9.not, label %if.end30, label %if.then10

if.then10:                                        ; preds = %while.end
  %call11 = call %struct._IO_FILE* @fopen(i8* nonnull %fillerfile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.768, i64 0, i64 0)) #36
  %cmp12 = icmp eq %struct._IO_FILE* %call11, null
  br i1 %cmp12, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.then10
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 321, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.769, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__fatal_sys_error(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8.770, i64 0, i64 0), i8* nonnull %fillerfile) #34
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %if.then10
  %call18129 = call i8* @fgets(i8* nonnull %0, i32 1024, %struct._IO_FILE* %call11) #36
  %cmp19.not130 = icmp eq i8* %call18129, null
  br i1 %cmp19.not130, label %while.end29, label %while.body21

while.body21:                                     ; preds = %if.end15, %while.body21
  %n.2131 = phi i32 [ %spec.select128, %while.body21 ], [ %n.0.lcssa, %if.end15 ]
  %2 = load i8, i8* %0, align 16, !tbaa !63
  %cmp24.not = icmp ne i8 %2, 35
  %inc27 = zext i1 %cmp24.not to i32
  %spec.select128 = add nuw nsw i32 %n.2131, %inc27
  %call18 = call i8* @fgets(i8* nonnull %0, i32 1024, %struct._IO_FILE* %call11) #36
  %cmp19.not = icmp eq i8* %call18, null
  br i1 %cmp19.not, label %while.end29, label %while.body21, !llvm.loop !733

while.end29:                                      ; preds = %while.body21, %if.end15
  %n.2.lcssa = phi i32 [ %n.0.lcssa, %if.end15 ], [ %spec.select128, %while.body21 ]
  call void @rewind(%struct._IO_FILE* %call11) #36
  br label %if.end30

if.end30:                                         ; preds = %while.end29, %while.end
  %n.4 = phi i32 [ %n.2.lcssa, %while.end29 ], [ %n.0.lcssa, %while.end ]
  %fp2.0 = phi %struct._IO_FILE* [ %call11, %while.end29 ], [ null, %while.end ]
  %call31 = call i8* @__ckd_calloc__(i64 1, i64 88, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i32 334) #34
  %3 = bitcast i8* %call31 to %struct.dict_t*
  %4 = icmp slt i32 %n.4, 2147482622
  %5 = select i1 %4, i32 %n.4, i32 2147482622
  %cond = add nsw i32 %5, 1024
  %max_words = getelementptr inbounds i8, i8* %call31, i64 48
  %6 = bitcast i8* %max_words to i32*
  store i32 %cond, i32* %6, align 8, !tbaa !726
  %cmp35 = icmp sgt i32 %n.4, 2147483645
  br i1 %cmp35, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.end30
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 337, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.763, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9.771, i64 0, i64 0), i32 %n.4, i32 2147483646) #34
  %.pre = load i32, i32* %6, align 8, !tbaa !726
  br label %if.end38

if.end38:                                         ; preds = %if.then37, %if.end30
  %7 = phi i32 [ %.pre, %if.then37 ], [ %cond, %if.end30 ]
  %conv40 = sext i32 %7 to i64
  %call41 = call i8* @__ckd_calloc__(i64 %conv40, i64 40, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i32 339) #34
  %word = getelementptr inbounds i8, i8* %call31, i64 32
  %8 = bitcast i8* %word to i8**
  store i8* %call41, i8** %8, align 8, !tbaa !39
  %n_word = getelementptr inbounds i8, i8* %call31, i64 52
  %9 = bitcast i8* %n_word to i32*
  store i32 0, i32* %9, align 4, !tbaa !58
  %mdef42 = bitcast i8* %call31 to %struct.mdef_t**
  store %struct.mdef_t* %mdef, %struct.mdef_t** %mdef42, align 8, !tbaa !724
  %tobool43.not = icmp eq %struct.mdef_t* %mdef, null
  br i1 %tobool43.not, label %if.else, label %if.then44

if.then44:                                        ; preds = %if.end38
  %pht = getelementptr inbounds i8, i8* %call31, i64 8
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(16) %pht, i8 0, i64 16, i1 false)
  br label %if.end49

if.else:                                          ; preds = %if.end38
  %call45 = call %struct.hash_table_t* @hash_new(i32 128, i32 1) #34
  %pht46 = getelementptr inbounds i8, i8* %call31, i64 8
  %10 = bitcast i8* %pht46 to %struct.hash_table_t**
  store %struct.hash_table_t* %call45, %struct.hash_table_t** %10, align 8, !tbaa !734
  %call47 = call i8* @__ckd_calloc__(i64 128, i64 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i32 347) #34
  %ciphone_str48 = getelementptr inbounds i8, i8* %call31, i64 16
  %11 = bitcast i8* %ciphone_str48 to i8**
  store i8* %call47, i8** %11, align 8, !tbaa !725
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then44
  %n_ciphone = getelementptr inbounds i8, i8* %call31, i64 24
  %12 = bitcast i8* %n_ciphone to i32*
  store i32 0, i32* %12, align 8, !tbaa !735
  %13 = load i32, i32* %6, align 8, !tbaa !726
  %call51 = call %struct.hash_table_t* @hash_new(i32 %13, i32 1) #34
  %ht = getelementptr inbounds i8, i8* %call31, i64 40
  %14 = bitcast i8* %ht to %struct.hash_table_t**
  store %struct.hash_table_t* %call51, %struct.hash_table_t** %14, align 8, !tbaa !727
  %comp_head = getelementptr inbounds i8, i8* %call31, i64 64
  %15 = bitcast i8* %comp_head to i32**
  store i32* null, i32** %15, align 8, !tbaa !736
  call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 358, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.772, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11.773, i64 0, i64 0), i8* %dictfile) #34
  call fastcc void @dict_read(%struct._IO_FILE* %call, %struct.dict_t* nonnull %3) #36
  %call53 = call i32 @fclose(%struct._IO_FILE* %call) #36
  call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 361, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.772, i64 0, i64 0)) #34
  %16 = load i32, i32* %9, align 4, !tbaa !58
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.774, i64 0, i64 0), i32 %16) #34
  %17 = load i32, i32* %9, align 4, !tbaa !58
  %filler_start = getelementptr inbounds i8, i8* %call31, i64 56
  %18 = bitcast i8* %filler_start to i32*
  store i32 %17, i32* %18, align 8, !tbaa !82
  br i1 %tobool9.not, label %if.end62, label %if.then57

if.then57:                                        ; preds = %if.end49
  call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 366, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.772, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13.775, i64 0, i64 0), i8* nonnull %fillerfile) #34
  call fastcc void @dict_read(%struct._IO_FILE* %fp2.0, %struct.dict_t* nonnull %3) #36
  %call59 = call i32 @fclose(%struct._IO_FILE* %fp2.0) #36
  call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 369, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.772, i64 0, i64 0)) #34
  %19 = load i32, i32* %9, align 4, !tbaa !58
  %20 = load i32, i32* %18, align 8, !tbaa !82
  %sub = sub nsw i32 %19, %20
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.774, i64 0, i64 0), i32 %sub) #34
  %.pre136 = load i32, i32* %9, align 4, !tbaa !58
  br label %if.end62

if.end62:                                         ; preds = %if.then57, %if.end49
  %21 = phi i32 [ %.pre136, %if.then57 ], [ %17, %if.end49 ]
  %sub64 = add nsw i32 %21, -1
  %filler_end = getelementptr inbounds i8, i8* %call31, i64 60
  %22 = bitcast i8* %filler_end to i32*
  store i32 %sub64, i32* %22, align 4, !tbaa !83
  %call65 = call i32 @dict_wordid(%struct.dict_t* nonnull %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.776, i64 0, i64 0)) #36
  %startwid = getelementptr inbounds i8, i8* %call31, i64 72
  %23 = bitcast i8* %startwid to i32*
  store i32 %call65, i32* %23, align 8, !tbaa !20
  %call66 = call i32 @dict_wordid(%struct.dict_t* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.779, i64 0, i64 0)) #36
  %finishwid = getelementptr inbounds i8, i8* %call31, i64 76
  %24 = bitcast i8* %finishwid to i32*
  store i32 %call66, i32* %24, align 4, !tbaa !22
  %call67 = call i32 @dict_wordid(%struct.dict_t* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.780, i64 0, i64 0)) #36
  %silwid = getelementptr inbounds i8, i8* %call31, i64 80
  %25 = bitcast i8* %silwid to i32*
  store i32 %call67, i32* %25, align 8, !tbaa !604
  %tobool68.not = icmp eq i8 %comp_sep, 0
  br i1 %tobool68.not, label %if.end72, label %if.then69

if.then69:                                        ; preds = %if.end62
  call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 388, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.772, i64 0, i64 0)) #34
  %conv70 = sext i8 %comp_sep to i32
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17.781, i64 0, i64 0), i32 %conv70) #34
  %call71 = call fastcc i32 @dict_build_comp(%struct.dict_t* nonnull %3, i8 signext %comp_sep) #36
  call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 390, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10.772, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18.782, i64 0, i64 0), i32 %call71) #34
  br label %if.end72

if.end72:                                         ; preds = %if.then69, %if.end62
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %0) #38
  ret %struct.dict_t* %3
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @dict_read(%struct._IO_FILE* nocapture %fp, %struct.dict_t* nocapture %d) unnamed_addr #0 {
entry:
  %line = alloca [16384 x i8], align 16
  %p = alloca [4096 x i8], align 16
  %0 = getelementptr inbounds [16384 x i8], [16384 x i8]* %line, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %0) #38
  %1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %p, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %1) #38
  %call = tail call i8* @__ckd_calloc__(i64 4092, i64 8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i32 169) #34
  %2 = bitcast i8* %call to i8**
  %call16 = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %fp) #36
  %cmp.not7 = icmp eq i8* %call16, null
  br i1 %cmp.not7, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.cond.backedge
  %lineno.08 = phi i32 [ %inc, %while.cond.backedge ], [ 0, %entry ]
  %inc = add nuw nsw i32 %lineno.08, 1
  %3 = load i8, i8* %0, align 16, !tbaa !63
  %cmp4 = icmp eq i8 %3, 35
  br i1 %cmp4, label %while.cond.backedge, label %if.end

if.end:                                           ; preds = %while.body
  %call7 = call i32 @str2words(i8* nonnull %0, i8** %2, i32 4092) #34
  %cmp8 = icmp slt i32 %call7, 0
  br i1 %cmp8, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 178, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.763, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.19.789, i64 0, i64 0), i8* nonnull %0, i32 4092) #34
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end
  switch i32 %call7, label %for.cond.preheader [
    i32 0, label %while.cond.backedge
    i32 1, label %while.cond.backedge.sink.split
  ]

for.cond.preheader:                               ; preds = %if.end12
  %cmp224 = icmp sgt i32 %call7, 1
  br i1 %cmp224, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %for.cond.preheader
  %wide.trip.count = zext i32 %call7 to i64
  br label %for.body

while.cond.backedge.sink.split:                   ; preds = %if.end12, %if.then42
  %.sink15 = phi i64 [ 201, %if.then42 ], [ 184, %if.end12 ]
  %.sink = phi i8* [ getelementptr inbounds ([58 x i8], [58 x i8]* @.str.22.790, i64 0, i64 0), %if.then42 ], [ getelementptr inbounds ([48 x i8], [48 x i8]* @.str.20.791, i64 0, i64 0), %if.end12 ]
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 %.sink15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.761, i64 0, i64 0)) #34
  %4 = load i8*, i8** %2, align 8, !tbaa !74
  call void (i8*, ...) @_E__pr_warn(i8* %.sink, i32 %inc, i8* %4) #34
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %while.cond.backedge.sink.split, %for.end, %if.then42, %while.body, %if.end12
  %call1 = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %fp) #36
  %cmp.not = icmp eq i8* %call1, null
  br i1 %cmp.not, label %while.end, label %while.body, !llvm.loop !737

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %arrayidx24 = getelementptr inbounds i8*, i8** %2, i64 %indvars.iv
  %5 = load i8*, i8** %arrayidx24, align 8, !tbaa !74
  %call25 = call fastcc signext i8 @dict_ciphone_id(%struct.dict_t* %d, i8* %5) #36
  %6 = add nsw i64 %indvars.iv, -1
  %arrayidx27 = getelementptr inbounds [4096 x i8], [4096 x i8]* %p, i64 0, i64 %6
  store i8 %call25, i8* %arrayidx27, align 1, !tbaa !63
  %cmp32 = icmp slt i8 %call25, 0
  br i1 %cmp32, label %if.then34, label %for.inc

if.then34:                                        ; preds = %for.body
  %7 = trunc i64 %indvars.iv to i32
  %idxprom.le = and i64 %indvars.iv, 4294967295
  %arrayidx24.le = getelementptr inbounds i8*, i8** %2, i64 %idxprom.le
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 192, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.761, i64 0, i64 0)) #34
  %8 = load i8*, i8** %arrayidx24.le, align 8, !tbaa !74
  %9 = load i8*, i8** %2, align 8, !tbaa !74
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.21.792, i64 0, i64 0), i32 %inc, i8* %8, i8* %9) #34
  br label %for.end

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.then42, label %for.body, !llvm.loop !738

for.end:                                          ; preds = %for.cond.preheader, %if.then34
  %i.02 = phi i32 [ %7, %if.then34 ], [ 1, %for.cond.preheader ]
  %cmp40 = icmp eq i32 %i.02, %call7
  br i1 %cmp40, label %if.then42, label %while.cond.backedge

if.then42:                                        ; preds = %for.inc, %for.end
  %10 = load i8*, i8** %2, align 8, !tbaa !74
  %sub45 = add nsw i32 %call7, -1
  %call46 = call i32 @dict_add_word(%struct.dict_t* %d, i8* %10, i8* nonnull %1, i32 %sub45) #36
  %cmp47 = icmp slt i32 %call46, 0
  br i1 %cmp47, label %while.cond.backedge.sink.split, label %while.cond.backedge

while.end:                                        ; preds = %while.cond.backedge, %entry
  call void @ckd_free(i8* %call) #34
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 16384, i8* nonnull %0) #38
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @dict_wordid(%struct.dict_t* nocapture readonly %d, i8* %word) local_unnamed_addr #0 {
entry:
  %w = alloca i32, align 4
  %0 = bitcast i32* %w to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %ht = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 5
  %1 = load %struct.hash_table_t*, %struct.hash_table_t** %ht, align 8, !tbaa !727
  %call = call i32 @hash_lookup(%struct.hash_table_t* %1, i8* %word, i32* nonnull %w) #34
  %2 = load i32, i32* %w, align 4
  %cmp.inv = icmp sgt i32 %call, -1
  %retval.0 = select i1 %cmp.inv, i32 %2, i32 -1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc i32 @dict_build_comp(%struct.dict_t* nocapture %d, i8 signext %sep) unnamed_addr #0 {
entry:
  %wd = alloca [4096 x i8], align 16
  %0 = getelementptr inbounds [4096 x i8], [4096 x i8]* %wd, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %0) #38
  %n_word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 7
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 4
  %startwid = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 11
  %finishwid = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 12
  %1 = load i32, i32* %n_word, align 4, !tbaa !58
  %cmp164 = icmp sgt i32 %1, 0
  br i1 %cmp164, label %for.body, label %if.end98

for.body:                                         ; preds = %entry, %for.inc91
  %indvars.iv176 = phi i64 [ %indvars.iv.next177, %for.inc91 ], [ 0, %entry ]
  %nc.0165 = phi i32 [ %nc.1, %for.inc91 ], [ 0, %entry ]
  %2 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %basewid = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %2, i64 %indvars.iv176, i32 4
  %3 = load i32, i32* %basewid, align 8, !tbaa !249
  %idx.ext = sext i32 %3 to i64
  %word2 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %2, i64 %idx.ext, i32 0
  %4 = load i8*, i8** %word2, align 8, !tbaa !510
  %call = call i8* @strcpy(i8* noundef nonnull %0, i8* noundef nonnull dereferenceable(1) %4) #34
  %call4 = call i64 @strlen(i8* noundef nonnull %0) #37
  %conv = trunc i64 %call4 to i32
  %5 = load i8, i8* %0, align 16, !tbaa !63
  %cmp8 = icmp eq i8 %5, %sep
  br i1 %cmp8, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %sub = shl i64 %call4, 32
  %sext = add i64 %sub, -4294967296
  %idxprom10 = ashr exact i64 %sext, 32
  %arrayidx11 = getelementptr inbounds [4096 x i8], [4096 x i8]* %wd, i64 0, i64 %idxprom10
  %6 = load i8, i8* %arrayidx11, align 1, !tbaa !63
  %cmp14 = icmp eq i8 %6, %sep
  br i1 %cmp14, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.body
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 253, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.763, i64 0, i64 0)) #34
  %7 = load i8*, i8** %word2, align 8, !tbaa !510
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.25.783, i64 0, i64 0), i8* %7) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %cmp19153 = icmp sgt i32 %conv, 2
  br i1 %cmp19153, label %for.body21.preheader, label %for.inc91

for.body21.preheader:                             ; preds = %if.end
  %8 = add i64 %call4, 4294967295
  %wide.trip.count = and i64 %8, 4294967295
  br label %for.body21

for.body21:                                       ; preds = %for.body21.preheader, %for.body21
  %indvars.iv = phi i64 [ 1, %for.body21.preheader ], [ %indvars.iv.next, %for.body21 ]
  %n.0155 = phi i32 [ 1, %for.body21.preheader ], [ %spec.select, %for.body21 ]
  %arrayidx23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %wd, i64 0, i64 %indvars.iv
  %9 = load i8, i8* %arrayidx23, align 1, !tbaa !63
  %cmp26 = icmp eq i8 %9, %sep
  %inc = zext i1 %cmp26 to i32
  %spec.select = add nuw nsw i32 %n.0155, %inc
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body21, !llvm.loop !739

for.end:                                          ; preds = %for.body21
  %cmp31 = icmp eq i32 %spec.select, 1
  br i1 %cmp31, label %for.inc91, label %if.end34

if.end34:                                         ; preds = %for.end
  %inc35 = add nsw i32 %nc.0165, 1
  %10 = load i32, i32* %startwid, align 8, !tbaa !20
  %11 = zext i32 %10 to i64
  %cmp36 = icmp eq i64 %indvars.iv176, %11
  br i1 %cmp36, label %if.then43, label %lor.lhs.false38

lor.lhs.false38:                                  ; preds = %if.end34
  %12 = load i32, i32* %finishwid, align 4, !tbaa !22
  %13 = zext i32 %12 to i64
  %cmp39 = icmp eq i64 %indvars.iv176, %13
  br i1 %cmp39, label %if.then43, label %lor.lhs.false41

lor.lhs.false41:                                  ; preds = %lor.lhs.false38
  %14 = trunc i64 %indvars.iv176 to i32
  %call42 = call i32 @dict_filler_word(%struct.dict_t* nonnull %d, i32 %14) #36
  %tobool.not = icmp eq i32 %call42, 0
  br i1 %tobool.not, label %if.end45, label %if.then43

if.then43:                                        ; preds = %lor.lhs.false41, %lor.lhs.false38, %if.end34
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 265, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.763, i64 0, i64 0)) #34
  %15 = load i8*, i8** %word2, align 8, !tbaa !510
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.26.786, i64 0, i64 0), i8* %15) #34
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %lor.lhs.false41
  %n_comp = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %2, i64 %idx.ext, i32 5
  store i32 %spec.select, i32* %n_comp, align 4, !tbaa !729
  %conv46 = zext i32 %spec.select to i64
  %call47 = call i8* @__ckd_calloc__(i64 %conv46, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i32 269) #34
  %comp = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %2, i64 %idx.ext, i32 6
  %16 = bitcast i32** %comp to i8**
  store i8* %call47, i8** %16, align 8, !tbaa !730
  %cmp49160 = icmp sgt i32 %conv, 0
  br i1 %cmp49160, label %for.cond52.preheader.preheader, label %for.inc91

for.cond52.preheader.preheader:                   ; preds = %if.end45
  %sext178 = shl i64 %call4, 32
  %17 = ashr exact i64 %sext178, 32
  br label %for.cond52.preheader

for.cond52.preheader:                             ; preds = %for.cond52.preheader.preheader, %if.end83
  %indvars.iv174 = phi i64 [ 0, %for.cond52.preheader.preheader ], [ %indvars.iv.next175, %if.end83 ]
  %i.1161 = phi i32 [ 0, %for.cond52.preheader.preheader ], [ %inc89, %if.end83 ]
  %cmp53156 = icmp slt i32 %i.1161, %conv
  br i1 %cmp53156, label %land.rhs.preheader, label %for.end64

land.rhs.preheader:                               ; preds = %for.cond52.preheader
  %18 = sext i32 %i.1161 to i64
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.preheader, %for.inc62
  %indvars.iv171 = phi i64 [ %18, %land.rhs.preheader ], [ %indvars.iv.next172, %for.inc62 ]
  %arrayidx56 = getelementptr inbounds [4096 x i8], [4096 x i8]* %wd, i64 0, i64 %indvars.iv171
  %19 = load i8, i8* %arrayidx56, align 1, !tbaa !63
  %cmp59.not = icmp eq i8 %19, %sep
  br i1 %cmp59.not, label %for.end64.loopexit.split.loop.exit184, label %for.inc62

for.inc62:                                        ; preds = %land.rhs
  %indvars.iv.next172 = add nsw i64 %indvars.iv171, 1
  %exitcond173.not = icmp eq i64 %indvars.iv.next172, %17
  br i1 %exitcond173.not, label %for.end64, label %land.rhs, !llvm.loop !740

for.end64.loopexit.split.loop.exit184:            ; preds = %land.rhs
  %20 = trunc i64 %indvars.iv171 to i32
  br label %for.end64

for.end64:                                        ; preds = %for.inc62, %for.end64.loopexit.split.loop.exit184, %for.cond52.preheader
  %i.2.lcssa = phi i32 [ %i.1161, %for.cond52.preheader ], [ %20, %for.end64.loopexit.split.loop.exit184 ], [ %conv, %for.inc62 ]
  %cmp65 = icmp eq i32 %i.1161, %i.2.lcssa
  br i1 %cmp65, label %if.then67, label %if.end69

if.then67:                                        ; preds = %for.end64
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 276, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.763, i64 0, i64 0)) #34
  %21 = load i8*, i8** %word2, align 8, !tbaa !510
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27.787, i64 0, i64 0), i8* %21) #34
  br label %if.end69

if.end69:                                         ; preds = %if.then67, %for.end64
  %idxprom70 = sext i32 %i.2.lcssa to i64
  %arrayidx71 = getelementptr inbounds [4096 x i8], [4096 x i8]* %wd, i64 0, i64 %idxprom70
  store i8 0, i8* %arrayidx71, align 1, !tbaa !63
  %idx.ext73 = sext i32 %i.1161 to i64
  %add.ptr74 = getelementptr inbounds [4096 x i8], [4096 x i8]* %wd, i64 0, i64 %idx.ext73
  %call75 = call i32 @dict_wordid(%struct.dict_t* %d, i8* nonnull %add.ptr74) #36
  %cmp76 = icmp slt i32 %call75, 0
  br i1 %cmp76, label %if.then78, label %if.end83

if.then78:                                        ; preds = %if.end69
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 281, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.763, i64 0, i64 0)) #34
  %22 = load i8*, i8** %word2, align 8, !tbaa !510
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.28.788, i64 0, i64 0), i8* nonnull %add.ptr74, i8* %22) #34
  br label %if.end83

if.end83:                                         ; preds = %if.then78, %if.end69
  %23 = load i32*, i32** %comp, align 8, !tbaa !730
  %arrayidx86 = getelementptr inbounds i32, i32* %23, i64 %indvars.iv174
  store i32 %call75, i32* %arrayidx86, align 4, !tbaa !37
  %indvars.iv.next175 = add nuw i64 %indvars.iv174, 1
  %inc89 = add nsw i32 %i.2.lcssa, 1
  %cmp49 = icmp slt i32 %inc89, %conv
  br i1 %cmp49, label %for.cond52.preheader, label %for.inc91, !llvm.loop !741

for.inc91:                                        ; preds = %if.end83, %if.end, %if.end45, %for.end
  %nc.1 = phi i32 [ %nc.0165, %for.end ], [ %inc35, %if.end45 ], [ %nc.0165, %if.end ], [ %inc35, %if.end83 ]
  %indvars.iv.next177 = add nuw nsw i64 %indvars.iv176, 1
  %24 = load i32, i32* %n_word, align 4, !tbaa !58
  %25 = sext i32 %24 to i64
  %cmp = icmp slt i64 %indvars.iv.next177, %25
  br i1 %cmp, label %for.body, label %for.end93, !llvm.loop !742

for.end93:                                        ; preds = %for.inc91
  %cmp94 = icmp sgt i32 %nc.1, 0
  br i1 %cmp94, label %if.then96, label %if.end98

if.then96:                                        ; preds = %for.end93
  %call97 = call fastcc i32* @dict_comp_head(%struct.dict_t* nonnull %d) #36
  %comp_head = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 10
  store i32* %call97, i32** %comp_head, align 8, !tbaa !736
  br label %if.end98

if.end98:                                         ; preds = %entry, %if.then96, %for.end93
  %nc.0.lcssa183 = phi i32 [ %nc.1, %if.then96 ], [ %nc.1, %for.end93 ], [ 0, %entry ]
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %0) #38
  ret i32 %nc.0.lcssa183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define i32 @dict_filler_word(%struct.dict_t* nocapture readonly %d, i32 %w) local_unnamed_addr #21 {
entry:
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 4
  %0 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %idxprom = sext i32 %w to i64
  %basewid = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %0, i64 %idxprom, i32 4
  %1 = load i32, i32* %basewid, align 8, !tbaa !249
  %startwid = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 11
  %2 = load i32, i32* %startwid, align 8, !tbaa !20
  %cmp = icmp eq i32 %1, %2
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %finishwid = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 12
  %3 = load i32, i32* %finishwid, align 4, !tbaa !22
  %cmp1 = icmp eq i32 %1, %3
  br i1 %cmp1, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %filler_start = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 8
  %4 = load i32, i32* %filler_start, align 8, !tbaa !82
  %cmp2.not = icmp slt i32 %1, %4
  br i1 %cmp2.not, label %if.end5, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %filler_end = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 9
  %5 = load i32, i32* %filler_end, align 4, !tbaa !83
  %cmp3.not = icmp sgt i32 %1, %5
  br i1 %cmp3.not, label %if.end5, label %return

if.end5:                                          ; preds = %land.lhs.true, %if.end
  br label %return

return:                                           ; preds = %land.lhs.true, %entry, %lor.lhs.false, %if.end5
  %retval.0 = phi i32 [ 0, %if.end5 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 1, %land.lhs.true ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc i32* @dict_comp_head(%struct.dict_t* nocapture readonly %d) unnamed_addr #0 {
entry:
  %n_word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 7
  %0 = load i32, i32* %n_word, align 4, !tbaa !58
  %conv = sext i32 %0 to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i32 217) #34
  %1 = bitcast i8* %call to i32*
  %2 = load i32, i32* %n_word, align 4, !tbaa !58
  %cmp53 = icmp sgt i32 %2, 0
  br i1 %cmp53, label %for.body, label %for.end29

for.cond3.preheader:                              ; preds = %for.body
  %cmp550 = icmp sgt i32 %4, 0
  br i1 %cmp550, label %for.body7.lr.ph, label %for.end29

for.body7.lr.ph:                                  ; preds = %for.cond3.preheader
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 4
  %3 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  br label %for.body7

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv55 = phi i64 [ %indvars.iv.next56, %for.body ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %indvars.iv55
  store i32 -1, i32* %arrayidx, align 4, !tbaa !37
  %indvars.iv.next56 = add nuw nsw i64 %indvars.iv55, 1
  %4 = load i32, i32* %n_word, align 4, !tbaa !58
  %5 = sext i32 %4 to i64
  %cmp = icmp slt i64 %indvars.iv.next56, %5
  br i1 %cmp, label %for.body, label %for.cond3.preheader, !llvm.loop !743

for.body7:                                        ; preds = %for.body7.lr.ph, %for.inc27
  %6 = phi i32 [ %4, %for.body7.lr.ph ], [ %13, %for.inc27 ]
  %indvars.iv = phi i64 [ 0, %for.body7.lr.ph ], [ %indvars.iv.next, %for.inc27 ]
  %n_comp = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %3, i64 %indvars.iv, i32 5
  %7 = load i32, i32* %n_comp, align 4, !tbaa !729
  %cmp10 = icmp sgt i32 %7, 0
  br i1 %cmp10, label %if.then, label %for.inc27

if.then:                                          ; preds = %for.body7
  %comp = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %3, i64 %indvars.iv, i32 6
  %8 = load i32*, i32** %comp, align 8, !tbaa !730
  %9 = load i32, i32* %8, align 4, !tbaa !37
  %idxprom16 = sext i32 %9 to i64
  %arrayidx17 = getelementptr inbounds i32, i32* %1, i64 %idxprom16
  %10 = load i32, i32* %arrayidx17, align 4, !tbaa !37
  %arrayidx19 = getelementptr inbounds i32, i32* %1, i64 %indvars.iv
  store i32 %10, i32* %arrayidx19, align 4, !tbaa !37
  %11 = load i32, i32* %8, align 4, !tbaa !37
  %idxprom25 = sext i32 %11 to i64
  %arrayidx26 = getelementptr inbounds i32, i32* %1, i64 %idxprom25
  %12 = trunc i64 %indvars.iv to i32
  store i32 %12, i32* %arrayidx26, align 4, !tbaa !37
  %.pre = load i32, i32* %n_word, align 4, !tbaa !58
  br label %for.inc27

for.inc27:                                        ; preds = %for.body7, %if.then
  %13 = phi i32 [ %6, %for.body7 ], [ %.pre, %if.then ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %14 = sext i32 %13 to i64
  %cmp5 = icmp slt i64 %indvars.iv.next, %14
  br i1 %cmp5, label %for.body7, label %for.end29, !llvm.loop !744

for.end29:                                        ; preds = %for.inc27, %entry, %for.cond3.preheader
  ret i32* %1
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc signext i8 @dict_ciphone_id(%struct.dict_t* nocapture %d, i8* %str) unnamed_addr #0 {
entry:
  %id = alloca i32, align 4
  %0 = bitcast i32* %id to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %mdef = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 0
  %1 = load %struct.mdef_t*, %struct.mdef_t** %mdef, align 8, !tbaa !724
  %tobool.not = icmp eq %struct.mdef_t* %1, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call signext i8 @mdef_ciphone_id(%struct.mdef_t* nonnull %1, i8* %str) #34
  br label %cleanup

if.else:                                          ; preds = %entry
  %pht = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 1
  %2 = load %struct.hash_table_t*, %struct.hash_table_t** %pht, align 8, !tbaa !734
  %call2 = call i32 @hash_lookup(%struct.hash_table_t* %2, i8* %str, i32* nonnull %id) #34
  %cmp = icmp slt i32 %call2, 0
  br i1 %cmp, label %if.then3, label %if.end15

if.then3:                                         ; preds = %if.else
  %n_ciphone = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 3
  %3 = load i32, i32* %n_ciphone, align 8, !tbaa !735
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %n_ciphone, align 8, !tbaa !735
  store i32 %3, i32* %id, align 4, !tbaa !37
  %cmp4 = icmp sgt i32 %3, 126
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.then3
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 81, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.763, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.23.793, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.then3
  %call6 = call i8* @__ckd_salloc__(i8* %str, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i32 82) #34
  %ciphone_str = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 2
  %4 = load i8**, i8*** %ciphone_str, align 8, !tbaa !725
  %5 = load i32, i32* %id, align 4, !tbaa !37
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds i8*, i8** %4, i64 %idxprom
  store i8* %call6, i8** %arrayidx, align 8, !tbaa !74
  %6 = load %struct.hash_table_t*, %struct.hash_table_t** %pht, align 8, !tbaa !734
  %7 = load i8**, i8*** %ciphone_str, align 8, !tbaa !725
  %arrayidx10 = getelementptr inbounds i8*, i8** %7, i64 %idxprom
  %8 = load i8*, i8** %arrayidx10, align 8, !tbaa !74
  %call11 = call i32 @hash_enter(%struct.hash_table_t* %6, i8* %8, i32 %5) #34
  %9 = load i32, i32* %id, align 4, !tbaa !37
  %cmp12.not = icmp eq i32 %call11, %9
  br i1 %cmp12.not, label %if.end15, label %if.then13

if.then13:                                        ; preds = %if.end
  call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.760, i64 0, i64 0), i64 85, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3.763, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.24.794, i64 0, i64 0), i8* %str) #34
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then13, %if.else
  %10 = load i32, i32* %id, align 4, !tbaa !37
  %conv = trunc i32 %10 to i8
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %if.then
  %retval.0 = phi i8 [ %call, %if.then ], [ %conv, %if.end15 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret i8 %retval.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define i32 @_dict_basewid(%struct.dict_t* nocapture readonly %d, i32 %w) local_unnamed_addr #21 {
entry:
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 4
  %0 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %idxprom = sext i32 %w to i64
  %basewid = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %0, i64 %idxprom, i32 4
  %1 = load i32, i32* %basewid, align 8, !tbaa !249
  ret i32 %1
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define i8* @_dict_wordstr(%struct.dict_t* nocapture readonly %d, i32 %wid) local_unnamed_addr #21 {
entry:
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 4
  %0 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %idxprom = sext i32 %wid to i64
  %word1 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %0, i64 %idxprom, i32 0
  %1 = load i8*, i8** %word1, align 8, !tbaa !510
  ret i8* %1
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define i32 @_dict_nextalt(%struct.dict_t* nocapture readonly %d, i32 %wid) local_unnamed_addr #21 {
entry:
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 4
  %0 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %idxprom = sext i32 %wid to i64
  %alt = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %0, i64 %idxprom, i32 3
  %1 = load i32, i32* %alt, align 4, !tbaa !728
  ret i32 %1
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @dict_wids2compwid(%struct.dict_t* nocapture readonly %d, i32* nocapture readonly %wid, i32 %len) local_unnamed_addr #16 {
entry:
  %comp_head = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 10
  %0 = load i32*, i32** %comp_head, align 8, !tbaa !736
  %tobool.not = icmp eq i32* %0, null
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %wid, align 4, !tbaa !37
  %idxprom = sext i32 %1 to i64
  %cmp850 = icmp sgt i32 %len, 0
  %w.0.in53 = getelementptr inbounds i32, i32* %0, i64 %idxprom
  %w.054 = load i32, i32* %w.0.in53, align 4, !tbaa !37
  %cmp55 = icmp sgt i32 %w.054, -1
  br i1 %cmp55, label %for.body.lr.ph, label %cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 4
  %2 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc25
  %w.056 = phi i32 [ %w.054, %for.body.lr.ph ], [ %w.0, %for.inc25 ]
  %idxprom349 = zext i32 %w.056 to i64
  %n_comp = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %2, i64 %idxprom349, i32 5
  %3 = load i32, i32* %n_comp, align 4, !tbaa !729
  %cmp5 = icmp eq i32 %3, %len
  br i1 %cmp5, label %for.cond7.preheader, label %for.inc25

for.cond7.preheader:                              ; preds = %for.body
  br i1 %cmp850, label %land.rhs.lr.ph, label %for.end

land.rhs.lr.ph:                                   ; preds = %for.cond7.preheader
  %comp = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %2, i64 %idxprom349, i32 6
  %4 = load i32*, i32** %comp, align 8, !tbaa !730
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %land.rhs.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx13 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv
  %5 = load i32, i32* %arrayidx13, align 4, !tbaa !37
  %arrayidx15 = getelementptr inbounds i32, i32* %wid, i64 %indvars.iv
  %6 = load i32, i32* %arrayidx15, align 4, !tbaa !37
  %cmp16 = icmp eq i32 %5, %6
  br i1 %cmp16, label %for.inc, label %for.end.loopexit

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.then19, label %land.rhs, !llvm.loop !745

for.end.loopexit:                                 ; preds = %land.rhs
  %7 = trunc i64 %indvars.iv to i32
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.cond7.preheader
  %i.0.lcssa = phi i32 [ 0, %for.cond7.preheader ], [ %7, %for.end.loopexit ]
  %cmp18 = icmp eq i32 %i.0.lcssa, %len
  br i1 %cmp18, label %if.then19, label %for.inc25

if.then19:                                        ; preds = %for.end, %for.inc
  %idxprom349.le65 = zext i32 %w.056 to i64
  %basewid = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %2, i64 %idxprom349.le65, i32 4
  %8 = load i32, i32* %basewid, align 8, !tbaa !249
  br label %cleanup

for.inc25:                                        ; preds = %for.body, %for.end
  %w.0.in = getelementptr inbounds i32, i32* %0, i64 %idxprom349
  %w.0 = load i32, i32* %w.0.in, align 4, !tbaa !37
  %cmp = icmp sgt i32 %w.0, -1
  br i1 %cmp, label %for.body, label %cleanup, !llvm.loop !746

cleanup:                                          ; preds = %for.inc25, %if.end, %entry, %if.then19
  %retval.0 = phi i32 [ %8, %if.then19 ], [ -1, %entry ], [ -1, %if.end ], [ -1, %for.inc25 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define void @dict_free(%struct.dict_t* %d) local_unnamed_addr #0 {
entry:
  %tobool.not = icmp eq %struct.dict_t* %d, null
  br i1 %tobool.not, label %if.end50, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %n_word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 7
  %word1 = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 4
  %0 = load i32, i32* %n_word, align 4, !tbaa !58
  %cmp90 = icmp sgt i32 %0, 0
  br i1 %cmp90, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv92 = phi i64 [ %indvars.iv.next93, %for.inc ], [ 0, %for.cond.preheader ]
  %1 = load %struct.dictword_t*, %struct.dictword_t** %word1, align 8, !tbaa !39
  %word2 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %1, i64 %indvars.iv92, i32 0
  %2 = load i8*, i8** %word2, align 8, !tbaa !510
  %tobool3.not = icmp eq i8* %2, null
  br i1 %tobool3.not, label %if.end, label %if.then4

if.then4:                                         ; preds = %for.body
  tail call void @ckd_free(i8* nonnull %2) #34
  br label %if.end

if.end:                                           ; preds = %if.then4, %for.body
  %ciphone = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %1, i64 %indvars.iv92, i32 1
  %3 = load i8*, i8** %ciphone, align 8, !tbaa !60
  %tobool6.not = icmp eq i8* %3, null
  br i1 %tobool6.not, label %if.end9, label %if.then7

if.then7:                                         ; preds = %if.end
  tail call void @ckd_free(i8* nonnull %3) #34
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.end
  %comp = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %1, i64 %indvars.iv92, i32 6
  %4 = load i32*, i32** %comp, align 8, !tbaa !730
  %tobool10.not = icmp eq i32* %4, null
  br i1 %tobool10.not, label %for.inc, label %if.then11

if.then11:                                        ; preds = %if.end9
  %5 = bitcast i32* %4 to i8*
  tail call void @ckd_free(i8* nonnull %5) #34
  br label %for.inc

for.inc:                                          ; preds = %if.end9, %if.then11
  %indvars.iv.next93 = add nuw nsw i64 %indvars.iv92, 1
  %6 = load i32, i32* %n_word, align 4, !tbaa !58
  %7 = sext i32 %6 to i64
  %cmp = icmp slt i64 %indvars.iv.next93, %7
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !747

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  %8 = load %struct.dictword_t*, %struct.dictword_t** %word1, align 8, !tbaa !39
  %tobool15.not = icmp eq %struct.dictword_t* %8, null
  br i1 %tobool15.not, label %if.end18, label %if.then16

if.then16:                                        ; preds = %for.end
  %9 = bitcast %struct.dictword_t* %8 to i8*
  tail call void @ckd_free(i8* nonnull %9) #34
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %for.end
  %n_ciphone = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 3
  %ciphone_str = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 2
  %10 = load i32, i32* %n_ciphone, align 8, !tbaa !735
  %cmp2088 = icmp sgt i32 %10, 0
  br i1 %cmp2088, label %for.body21, label %for.end32

for.body21:                                       ; preds = %if.end18, %for.inc30
  %11 = phi i32 [ %14, %for.inc30 ], [ %10, %if.end18 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc30 ], [ 0, %if.end18 ]
  %12 = load i8**, i8*** %ciphone_str, align 8, !tbaa !725
  %arrayidx23 = getelementptr inbounds i8*, i8** %12, i64 %indvars.iv
  %13 = load i8*, i8** %arrayidx23, align 8, !tbaa !74
  %tobool24.not = icmp eq i8* %13, null
  br i1 %tobool24.not, label %for.inc30, label %if.then25

if.then25:                                        ; preds = %for.body21
  tail call void @ckd_free(i8* nonnull %13) #34
  %.pre = load i32, i32* %n_ciphone, align 8, !tbaa !735
  br label %for.inc30

for.inc30:                                        ; preds = %for.body21, %if.then25
  %14 = phi i32 [ %11, %for.body21 ], [ %.pre, %if.then25 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %15 = sext i32 %14 to i64
  %cmp20 = icmp slt i64 %indvars.iv.next, %15
  br i1 %cmp20, label %for.body21, label %for.end32, !llvm.loop !748

for.end32:                                        ; preds = %for.inc30, %if.end18
  %comp_head = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 10
  %16 = load i32*, i32** %comp_head, align 8, !tbaa !736
  %tobool33.not = icmp eq i32* %16, null
  br i1 %tobool33.not, label %if.end36, label %if.then34

if.then34:                                        ; preds = %for.end32
  %17 = bitcast i32* %16 to i8*
  tail call void @ckd_free(i8* nonnull %17) #34
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %for.end32
  %18 = load i8**, i8*** %ciphone_str, align 8, !tbaa !725
  %tobool38.not = icmp eq i8** %18, null
  br i1 %tobool38.not, label %if.end41, label %if.then39

if.then39:                                        ; preds = %if.end36
  %19 = bitcast i8** %18 to i8*
  tail call void @ckd_free(i8* nonnull %19) #34
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.end36
  %pht = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 1
  %20 = load %struct.hash_table_t*, %struct.hash_table_t** %pht, align 8, !tbaa !734
  %tobool42.not = icmp eq %struct.hash_table_t* %20, null
  br i1 %tobool42.not, label %if.end45, label %if.then43

if.then43:                                        ; preds = %if.end41
  tail call void @hash_free(%struct.hash_table_t* nonnull %20) #34
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %if.end41
  %ht = getelementptr inbounds %struct.dict_t, %struct.dict_t* %d, i64 0, i32 5
  %21 = load %struct.hash_table_t*, %struct.hash_table_t** %ht, align 8, !tbaa !727
  %tobool46.not = icmp eq %struct.hash_table_t* %21, null
  br i1 %tobool46.not, label %if.end49, label %if.then47

if.then47:                                        ; preds = %if.end45
  tail call void @hash_free(%struct.hash_table_t* nonnull %21) #34
  br label %if.end49

if.end49:                                         ; preds = %if.then47, %if.end45
  %22 = bitcast %struct.dict_t* %d to i8*
  tail call void @ckd_free(i8* nonnull %22) #34
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %entry
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn writeonly
define void @spec_srand(i32 %seed) local_unnamed_addr #29 {
entry:
  store i32 %seed, i32* @seedi, align 4, !tbaa !37
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn
define double @spec_rand() local_unnamed_addr #4 {
entry:
  %0 = load i32, i32* @seedi, align 4, !tbaa !37
  %div18 = sdiv i32 %0, 127773
  %rem19 = srem i32 %0, 127773
  %mul = mul nsw i32 %rem19, 16807
  %narrow = mul nsw i32 %div18, -2836
  %sub = add i32 %mul, %narrow
  %cmp = icmp sgt i32 %sub, 0
  %conv10 = add i32 %sub, 2147483647
  %storemerge = select i1 %cmp, i32 %sub, i32 %conv10
  store i32 %storemerge, i32* @seedi, align 4, !tbaa !37
  %conv11 = sitofp i32 %storemerge to double
  %div12 = fdiv double %conv11, 0x41DFFFFFFFC00000
  ret double %div12
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @hmm_dump(%struct.hmm_t* nocapture readonly %hmm, i32 %n_state, i16* readonly %senid, i32* readonly %senscr, %struct._IO_FILE* nocapture %fp) local_unnamed_addr #14 {
entry:
  %score = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 1, i32 0
  %0 = load i32, i32* %score, align 8, !tbaa !749
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.797, i64 0, i64 0), i32 %0) #36
  %state = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 0
  %cmp92 = icmp sgt i32 %n_state, 0
  br i1 %cmp92, label %for.body.preheader, label %for.end17.critedge

for.body.preheader:                               ; preds = %entry
  %wide.trip.count104 = zext i32 %n_state to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv102 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next103, %for.body ]
  %1 = load %struct.arraysize_t*, %struct.arraysize_t** %state, align 8, !tbaa !751
  %score1 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %1, i64 %indvars.iv102, i32 0
  %2 = load i32, i32* %score1, align 4, !tbaa !84
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.798, i64 0, i64 0), i32 %2) #36
  %indvars.iv.next103 = add nuw nsw i64 %indvars.iv102, 1
  %exitcond105.not = icmp eq i64 %indvars.iv.next103, %wide.trip.count104
  br i1 %exitcond105.not, label %for.end, label %for.body, !llvm.loop !752

for.end:                                          ; preds = %for.body
  %score3 = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 2, i32 0
  %3 = load i32, i32* %score3, align 8, !tbaa !753
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.799, i64 0, i64 0), i32 %3) #36
  %history = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 1, i32 1
  %4 = load i32, i32* %history, align 4, !tbaa !754
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.797, i64 0, i64 0), i32 %4) #36
  br i1 %cmp92, label %for.body9.preheader, label %for.end17

for.body9.preheader:                              ; preds = %for.end
  %wide.trip.count100 = zext i32 %n_state to i64
  br label %for.body9

for.body9:                                        ; preds = %for.body9.preheader, %for.body9
  %indvars.iv98 = phi i64 [ 0, %for.body9.preheader ], [ %indvars.iv.next99, %for.body9 ]
  %5 = load %struct.arraysize_t*, %struct.arraysize_t** %state, align 8, !tbaa !751
  %history13 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %5, i64 %indvars.iv98, i32 1
  %6 = load i32, i32* %history13, align 4, !tbaa !71
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.798, i64 0, i64 0), i32 %6) #36
  %indvars.iv.next99 = add nuw nsw i64 %indvars.iv98, 1
  %exitcond101.not = icmp eq i64 %indvars.iv.next99, %wide.trip.count100
  br i1 %exitcond101.not, label %for.end17, label %for.body9, !llvm.loop !755

for.end17.critedge:                               ; preds = %entry
  %score3.c = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 2, i32 0
  %7 = load i32, i32* %score3.c, align 8, !tbaa !753
  %call4.c = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.799, i64 0, i64 0), i32 %7) #36
  %history.c = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 1, i32 1
  %8 = load i32, i32* %history.c, align 4, !tbaa !754
  %call6.c = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.797, i64 0, i64 0), i32 %8) #36
  br label %for.end17

for.end17:                                        ; preds = %for.body9, %for.end17.critedge, %for.end
  %history19 = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 2, i32 1
  %9 = load i32, i32* %history19, align 4, !tbaa !756
  %call20 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.799, i64 0, i64 0), i32 %9) #36
  %tobool.not = icmp eq i16* %senid, null
  br i1 %tobool.not, label %if.end48, label %if.then

if.then:                                          ; preds = %for.end17
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.800, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.801, i64 0, i64 0)) #36
  br i1 %cmp92, label %for.body24.preheader, label %for.end30

for.body24.preheader:                             ; preds = %if.then
  %wide.trip.count96 = zext i32 %n_state to i64
  br label %for.body24

for.body24:                                       ; preds = %for.body24.preheader, %for.body24
  %indvars.iv94 = phi i64 [ 0, %for.body24.preheader ], [ %indvars.iv.next95, %for.body24 ]
  %arrayidx26 = getelementptr inbounds i16, i16* %senid, i64 %indvars.iv94
  %10 = load i16, i16* %arrayidx26, align 2, !tbaa !40
  %conv = sext i16 %10 to i32
  %call27 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.798, i64 0, i64 0), i32 %conv) #36
  %indvars.iv.next95 = add nuw nsw i64 %indvars.iv94, 1
  %exitcond97.not = icmp eq i64 %indvars.iv.next95, %wide.trip.count96
  br i1 %exitcond97.not, label %for.end30, label %for.body24, !llvm.loop !757

for.end30:                                        ; preds = %for.body24, %if.then
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  %tobool32.not = icmp eq i32* %senscr, null
  br i1 %tobool32.not, label %if.end48, label %if.then33

if.then33:                                        ; preds = %for.end30
  %call34 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.800, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.802, i64 0, i64 0)) #36
  br i1 %cmp92, label %for.body38.preheader, label %for.end46

for.body38.preheader:                             ; preds = %if.then33
  %wide.trip.count = zext i32 %n_state to i64
  br label %for.body38

for.body38:                                       ; preds = %for.body38.preheader, %for.body38
  %indvars.iv = phi i64 [ 0, %for.body38.preheader ], [ %indvars.iv.next, %for.body38 ]
  %arrayidx40 = getelementptr inbounds i16, i16* %senid, i64 %indvars.iv
  %11 = load i16, i16* %arrayidx40, align 2, !tbaa !40
  %idxprom41 = sext i16 %11 to i64
  %arrayidx42 = getelementptr inbounds i32, i32* %senscr, i64 %idxprom41
  %12 = load i32, i32* %arrayidx42, align 4, !tbaa !37
  %call43 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.798, i64 0, i64 0), i32 %12) #36
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end46, label %for.body38, !llvm.loop !758

for.end46:                                        ; preds = %for.body38, %if.then33
  %fputc85 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  br label %if.end48

if.end48:                                         ; preds = %for.end30, %for.end46, %for.end17
  %call49 = tail call i32 @fflush(%struct._IO_FILE* %fp) #36
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @hmm_clear(%struct.hmm_t* nocapture %h, i32 %n_state) local_unnamed_addr #13 {
entry:
  %score = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %h, i64 0, i32 1, i32 0
  store i32 -939524096, i32* %score, align 8, !tbaa !749
  %history = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %h, i64 0, i32 1, i32 1
  store i32 -1, i32* %history, align 4, !tbaa !754
  %cmp20 = icmp sgt i32 %n_state, 0
  br i1 %cmp20, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %state = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %h, i64 0, i32 0
  %0 = load %struct.arraysize_t*, %struct.arraysize_t** %state, align 8, !tbaa !751
  %wide.trip.count = zext i32 %n_state to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %score2 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %0, i64 %indvars.iv, i32 0
  store i32 -939524096, i32* %score2, align 4, !tbaa !84
  %history6 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %0, i64 %indvars.iv, i32 1
  store i32 -1, i32* %history6, align 4, !tbaa !71
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !759

for.end:                                          ; preds = %for.body, %entry
  %score7 = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %h, i64 0, i32 2, i32 0
  store i32 -939524096, i32* %score7, align 8, !tbaa !753
  %history9 = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %h, i64 0, i32 2, i32 1
  store i32 -1, i32* %history9, align 4, !tbaa !756
  %bestscore = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %h, i64 0, i32 4
  store i32 -939524096, i32* %bestscore, align 8, !tbaa !760
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn
define i32 @hmm_vit_eval_5st(%struct.hmm_t* %hmm, i16* nocapture readonly %senid, i32* nocapture readonly %senscr) local_unnamed_addr #4 {
entry:
  %tp1 = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 3
  %0 = load i32**, i32*** %tp1, align 8, !tbaa !761
  %1 = load i32*, i32** %0, align 8, !tbaa !74
  %state = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 0
  %2 = load %struct.arraysize_t*, %struct.arraysize_t** %state, align 8, !tbaa !751
  %score = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 4, i32 0
  %3 = load i32, i32* %score, align 4, !tbaa !84
  %arrayidx3 = getelementptr inbounds i32, i32* %1, i64 28
  %4 = load i32, i32* %arrayidx3, align 4, !tbaa !37
  %call = tail call fastcc i32 @NO_UFLOW_ADD(i32 %3, i32 %4) #36
  %score6 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 3, i32 0
  %5 = load i32, i32* %score6, align 4, !tbaa !84
  %arrayidx7 = getelementptr inbounds i32, i32* %1, i64 22
  %6 = load i32, i32* %arrayidx7, align 4, !tbaa !37
  %call8 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %5, i32 %6) #36
  %score11 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 2, i32 0
  %7 = load i32, i32* %score11, align 4, !tbaa !84
  %arrayidx12 = getelementptr inbounds i32, i32* %1, i64 16
  %8 = load i32, i32* %arrayidx12, align 4, !tbaa !37
  %call13 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %7, i32 %8) #36
  %cmp = icmp slt i32 %call, %call8
  br i1 %cmp, label %if.then, label %if.else27

if.then:                                          ; preds = %entry
  %cmp14.not = icmp slt i32 %call8, %call13
  %. = select i1 %cmp14.not, i64 2, i64 3
  %call13.call8 = select i1 %cmp14.not, i32 %call13, i32 %call8
  br label %if.end37.sink.split

if.else27:                                        ; preds = %entry
  %cmp28 = icmp slt i32 %call, %call13
  br i1 %cmp28, label %if.end37.sink.split, label %if.end37

if.end37.sink.split:                              ; preds = %if.else27, %if.then
  %.sink364 = phi i64 [ %., %if.then ], [ 2, %if.else27 ]
  %s4.0.ph = phi i32 [ %call13.call8, %if.then ], [ %call13, %if.else27 ]
  %history32 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 %.sink364, i32 1
  %9 = load i32, i32* %history32, align 4, !tbaa !71
  %history35 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 4, i32 1
  store i32 %9, i32* %history35, align 4, !tbaa !71
  br label %if.end37

if.end37:                                         ; preds = %if.end37.sink.split, %if.else27
  %s4.0 = phi i32 [ %call, %if.else27 ], [ %s4.0.ph, %if.end37.sink.split ]
  %arrayidx38 = getelementptr inbounds i16, i16* %senid, i64 4
  %10 = load i16, i16* %arrayidx38, align 2, !tbaa !40
  %idxprom = sext i16 %10 to i64
  %arrayidx39 = getelementptr inbounds i32, i32* %senscr, i64 %idxprom
  %11 = load i32, i32* %arrayidx39, align 4, !tbaa !37
  %call40 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %s4.0, i32 %11) #36
  store i32 %call40, i32* %score, align 4, !tbaa !84
  %arrayidx47 = getelementptr inbounds i32, i32* %1, i64 21
  %12 = load i32, i32* %arrayidx47, align 4, !tbaa !37
  %call48 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %5, i32 %12) #36
  %arrayidx52 = getelementptr inbounds i32, i32* %1, i64 15
  %13 = load i32, i32* %arrayidx52, align 4, !tbaa !37
  %call53 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %7, i32 %13) #36
  %score56 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 1, i32 0
  %14 = load i32, i32* %score56, align 4, !tbaa !84
  %arrayidx57 = getelementptr inbounds i32, i32* %1, i64 9
  %15 = load i32, i32* %arrayidx57, align 4, !tbaa !37
  %call58 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %14, i32 %15) #36
  %cmp59 = icmp slt i32 %call48, %call53
  br i1 %cmp59, label %if.then60, label %if.else77

if.then60:                                        ; preds = %if.end37
  %cmp61.not = icmp slt i32 %call53, %call58
  %.370 = select i1 %cmp61.not, i64 1, i64 2
  %call58.call53 = select i1 %cmp61.not, i32 %call58, i32 %call53
  br label %if.end87.sink.split

if.else77:                                        ; preds = %if.end37
  %cmp78 = icmp slt i32 %call48, %call58
  br i1 %cmp78, label %if.end87.sink.split, label %if.end87

if.end87.sink.split:                              ; preds = %if.else77, %if.then60
  %.sink366 = phi i64 [ %.370, %if.then60 ], [ 1, %if.else77 ]
  %s3.0.ph = phi i32 [ %call58.call53, %if.then60 ], [ %call58, %if.else77 ]
  %history82 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 %.sink366, i32 1
  %16 = load i32, i32* %history82, align 4, !tbaa !71
  %history85 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 3, i32 1
  store i32 %16, i32* %history85, align 4, !tbaa !71
  br label %if.end87

if.end87:                                         ; preds = %if.end87.sink.split, %if.else77
  %s3.0 = phi i32 [ %call48, %if.else77 ], [ %s3.0.ph, %if.end87.sink.split ]
  %arrayidx88 = getelementptr inbounds i16, i16* %senid, i64 3
  %17 = load i16, i16* %arrayidx88, align 2, !tbaa !40
  %idxprom89 = sext i16 %17 to i64
  %arrayidx90 = getelementptr inbounds i32, i32* %senscr, i64 %idxprom89
  %18 = load i32, i32* %arrayidx90, align 4, !tbaa !37
  %call91 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %s3.0, i32 %18) #36
  store i32 %call91, i32* %score6, align 4, !tbaa !84
  %cmp95 = icmp sgt i32 %call40, %call91
  %cond = select i1 %cmp95, i32 %call40, i32 %call91
  %arrayidx96 = getelementptr inbounds i32, i32* %1, i64 29
  %19 = load i32, i32* %arrayidx96, align 4, !tbaa !37
  %call97 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %call40, i32 %19) #36
  %arrayidx98 = getelementptr inbounds i32, i32* %1, i64 23
  %20 = load i32, i32* %arrayidx98, align 4, !tbaa !37
  %call99 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %call91, i32 %20) #36
  %cmp100 = icmp slt i32 %call97, %call99
  %.371 = select i1 %cmp100, i64 3, i64 4
  %call99.call97 = select i1 %cmp100, i32 %call99, i32 %call97
  %history113 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 %.371, i32 1
  %.sink = load i32, i32* %history113, align 4, !tbaa !71
  %21 = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 2, i32 0
  store i32 %call99.call97, i32* %21, align 8
  %22 = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 2, i32 1
  store i32 %.sink, i32* %22, align 4
  %23 = load i32, i32* %score11, align 4, !tbaa !84
  %arrayidx120 = getelementptr inbounds i32, i32* %1, i64 14
  %24 = load i32, i32* %arrayidx120, align 4, !tbaa !37
  %call121 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %23, i32 %24) #36
  %25 = load i32, i32* %score56, align 4, !tbaa !84
  %arrayidx125 = getelementptr inbounds i32, i32* %1, i64 8
  %26 = load i32, i32* %arrayidx125, align 4, !tbaa !37
  %call126 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %25, i32 %26) #36
  %score129 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 0, i32 0
  %27 = load i32, i32* %score129, align 4, !tbaa !84
  %arrayidx130 = getelementptr inbounds i32, i32* %1, i64 2
  %28 = load i32, i32* %arrayidx130, align 4, !tbaa !37
  %call131 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %27, i32 %28) #36
  %cmp132 = icmp slt i32 %call121, %call126
  br i1 %cmp132, label %if.then133, label %if.else150

if.then133:                                       ; preds = %if.end87
  %cmp134.not = icmp slt i32 %call126, %call131
  %not.cmp134.not = xor i1 %cmp134.not, true
  %.372 = zext i1 %not.cmp134.not to i64
  %call131.call126 = select i1 %cmp134.not, i32 %call131, i32 %call126
  br label %if.end160.sink.split

if.else150:                                       ; preds = %if.end87
  %cmp151 = icmp slt i32 %call121, %call131
  br i1 %cmp151, label %if.end160.sink.split, label %if.end160

if.end160.sink.split:                             ; preds = %if.else150, %if.then133
  %.sink369 = phi i64 [ %.372, %if.then133 ], [ 0, %if.else150 ]
  %s2.0.ph = phi i32 [ %call131.call126, %if.then133 ], [ %call131, %if.else150 ]
  %history155 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 %.sink369, i32 1
  %29 = load i32, i32* %history155, align 4, !tbaa !71
  %history158 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 2, i32 1
  store i32 %29, i32* %history158, align 4, !tbaa !71
  br label %if.end160

if.end160:                                        ; preds = %if.end160.sink.split, %if.else150
  %s2.0 = phi i32 [ %call121, %if.else150 ], [ %s2.0.ph, %if.end160.sink.split ]
  %arrayidx161 = getelementptr inbounds i16, i16* %senid, i64 2
  %30 = load i16, i16* %arrayidx161, align 2, !tbaa !40
  %idxprom162 = sext i16 %30 to i64
  %arrayidx163 = getelementptr inbounds i32, i32* %senscr, i64 %idxprom162
  %31 = load i32, i32* %arrayidx163, align 4, !tbaa !37
  %call164 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %s2.0, i32 %31) #36
  store i32 %call164, i32* %score11, align 4, !tbaa !84
  %cmp168 = icmp slt i32 %cond, %call164
  %spec.select = select i1 %cmp168, i32 %call164, i32 %cond
  %arrayidx174 = getelementptr inbounds i32, i32* %1, i64 7
  %32 = load i32, i32* %arrayidx174, align 4, !tbaa !37
  %call175 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %25, i32 %32) #36
  %arrayidx179 = getelementptr inbounds i32, i32* %1, i64 1
  %33 = load i32, i32* %arrayidx179, align 4, !tbaa !37
  %call180 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %27, i32 %33) #36
  %cmp181 = icmp slt i32 %call175, %call180
  br i1 %cmp181, label %if.then182, label %if.end189

if.then182:                                       ; preds = %if.end160
  %history185 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 0, i32 1
  %34 = load i32, i32* %history185, align 4, !tbaa !71
  %history188 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 1, i32 1
  store i32 %34, i32* %history188, align 4, !tbaa !71
  br label %if.end189

if.end189:                                        ; preds = %if.then182, %if.end160
  %s1.0 = phi i32 [ %call180, %if.then182 ], [ %call175, %if.end160 ]
  %arrayidx190 = getelementptr inbounds i16, i16* %senid, i64 1
  %35 = load i16, i16* %arrayidx190, align 2, !tbaa !40
  %idxprom191 = sext i16 %35 to i64
  %arrayidx192 = getelementptr inbounds i32, i32* %senscr, i64 %idxprom191
  %36 = load i32, i32* %arrayidx192, align 4, !tbaa !37
  %call193 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %s1.0, i32 %36) #36
  store i32 %call193, i32* %score56, align 4, !tbaa !84
  %cmp197 = icmp slt i32 %spec.select, %call193
  %spec.select361 = select i1 %cmp197, i32 %call193, i32 %spec.select
  %37 = load i32, i32* %1, align 4, !tbaa !37
  %call204 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %27, i32 %37) #36
  %score205 = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 1, i32 0
  %38 = load i32, i32* %score205, align 8, !tbaa !749
  %cmp206 = icmp slt i32 %call204, %38
  br i1 %cmp206, label %if.then207, label %if.end215

if.then207:                                       ; preds = %if.end189
  %history211 = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 1, i32 1
  %39 = load i32, i32* %history211, align 4, !tbaa !754
  %history214 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 0, i32 1
  store i32 %39, i32* %history214, align 4, !tbaa !71
  br label %if.end215

if.end215:                                        ; preds = %if.then207, %if.end189
  %s0.0 = phi i32 [ %38, %if.then207 ], [ %call204, %if.end189 ]
  %40 = load i16, i16* %senid, align 2, !tbaa !40
  %idxprom217 = sext i16 %40 to i64
  %arrayidx218 = getelementptr inbounds i32, i32* %senscr, i64 %idxprom217
  %41 = load i32, i32* %arrayidx218, align 4, !tbaa !37
  %call219 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %s0.0, i32 %41) #36
  store i32 %call219, i32* %score129, align 4, !tbaa !84
  %cmp223 = icmp slt i32 %spec.select361, %call219
  %spec.select362 = select i1 %cmp223, i32 %call219, i32 %spec.select361
  store i32 -939524096, i32* %score205, align 8, !tbaa !749
  %bestscore = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 4
  store i32 %spec.select362, i32* %bestscore, align 8, !tbaa !760
  ret i32 %spec.select362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define internal fastcc i32 @NO_UFLOW_ADD(i32 %a, i32 %b) unnamed_addr #28 {
entry:
  %add = add nsw i32 %b, %a
  %cmp = icmp sgt i32 %add, 0
  %cmp1 = icmp slt i32 %a, 0
  %or.cond = and i1 %cmp1, %cmp
  %cmp3 = icmp slt i32 %b, 0
  %or.cond4 = select i1 %or.cond, i1 %cmp3, i1 false
  %cond = select i1 %or.cond4, i32 -2147483648, i32 %add
  ret i32 %cond
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn
define i32 @hmm_vit_eval_3st(%struct.hmm_t* nocapture %hmm, i16* nocapture readonly %senid, i32* nocapture readonly %senscr) local_unnamed_addr #4 {
entry:
  %tp1 = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 3
  %0 = load i32**, i32*** %tp1, align 8, !tbaa !761
  %1 = load i32*, i32** %0, align 8, !tbaa !74
  %state = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 0
  %2 = load %struct.arraysize_t*, %struct.arraysize_t** %state, align 8, !tbaa !751
  %score = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 2, i32 0
  %3 = load i32, i32* %score, align 4, !tbaa !84
  %arrayidx3 = getelementptr inbounds i32, i32* %1, i64 10
  %4 = load i32, i32* %arrayidx3, align 4, !tbaa !37
  %call = tail call fastcc i32 @NO_UFLOW_ADD(i32 %3, i32 %4) #36
  %score6 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 1, i32 0
  %5 = load i32, i32* %score6, align 4, !tbaa !84
  %arrayidx7 = getelementptr inbounds i32, i32* %1, i64 6
  %6 = load i32, i32* %arrayidx7, align 4, !tbaa !37
  %call8 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %5, i32 %6) #36
  %arrayidx9 = getelementptr inbounds i32, i32* %1, i64 2
  %7 = load i32, i32* %arrayidx9, align 4, !tbaa !37
  %cmp = icmp sgt i32 %7, -939524096
  br i1 %cmp, label %if.then, label %if.else41

if.then:                                          ; preds = %entry
  %score12 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 0, i32 0
  %8 = load i32, i32* %score12, align 4, !tbaa !84
  %call14 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %8, i32 %7) #36
  %cmp15 = icmp slt i32 %call, %call8
  br i1 %cmp15, label %if.then16, label %if.else30

if.then16:                                        ; preds = %if.then
  %cmp17.not = icmp slt i32 %call8, %call14
  %not.cmp17.not = xor i1 %cmp17.not, true
  %. = zext i1 %not.cmp17.not to i64
  %call14.call8 = select i1 %cmp17.not, i32 %call14, i32 %call8
  br label %if.end51.sink.split

if.else30:                                        ; preds = %if.then
  %cmp31 = icmp slt i32 %call, %call14
  br i1 %cmp31, label %if.end51.sink.split, label %if.end51

if.else41:                                        ; preds = %entry
  %cmp42 = icmp slt i32 %call, %call8
  br i1 %cmp42, label %if.end51.sink.split, label %if.end51

if.end51.sink.split:                              ; preds = %if.else41, %if.else30, %if.then16
  %.sink = phi i64 [ %., %if.then16 ], [ 0, %if.else30 ], [ 1, %if.else41 ]
  %s2.0.ph = phi i32 [ %call14.call8, %if.then16 ], [ %call14, %if.else30 ], [ %call8, %if.else41 ]
  %history46 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 %.sink, i32 1
  %9 = load i32, i32* %history46, align 4, !tbaa !71
  %history49 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 2, i32 1
  store i32 %9, i32* %history49, align 4, !tbaa !71
  br label %if.end51

if.end51:                                         ; preds = %if.end51.sink.split, %if.else41, %if.else30
  %s2.0 = phi i32 [ %call, %if.else30 ], [ %call, %if.else41 ], [ %s2.0.ph, %if.end51.sink.split ]
  %arrayidx52 = getelementptr inbounds i16, i16* %senid, i64 2
  %10 = load i16, i16* %arrayidx52, align 2, !tbaa !40
  %idxprom = sext i16 %10 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %senscr, i64 %idxprom
  %11 = load i32, i32* %arrayidx53, align 4, !tbaa !37
  %call54 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %s2.0, i32 %11) #36
  store i32 %call54, i32* %score, align 4, !tbaa !84
  %arrayidx61 = getelementptr inbounds i32, i32* %1, i64 5
  %12 = load i32, i32* %arrayidx61, align 4, !tbaa !37
  %call62 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %5, i32 %12) #36
  %score65 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 0, i32 0
  %13 = load i32, i32* %score65, align 4, !tbaa !84
  %arrayidx66 = getelementptr inbounds i32, i32* %1, i64 1
  %14 = load i32, i32* %arrayidx66, align 4, !tbaa !37
  %call67 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %13, i32 %14) #36
  %cmp68 = icmp slt i32 %call62, %call67
  br i1 %cmp68, label %if.then69, label %if.end76

if.then69:                                        ; preds = %if.end51
  %history72 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 0, i32 1
  %15 = load i32, i32* %history72, align 4, !tbaa !71
  %history75 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 1, i32 1
  store i32 %15, i32* %history75, align 4, !tbaa !71
  br label %if.end76

if.end76:                                         ; preds = %if.then69, %if.end51
  %s1.0 = phi i32 [ %call67, %if.then69 ], [ %call62, %if.end51 ]
  %arrayidx77 = getelementptr inbounds i16, i16* %senid, i64 1
  %16 = load i16, i16* %arrayidx77, align 2, !tbaa !40
  %idxprom78 = sext i16 %16 to i64
  %arrayidx79 = getelementptr inbounds i32, i32* %senscr, i64 %idxprom78
  %17 = load i32, i32* %arrayidx79, align 4, !tbaa !37
  %call80 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %s1.0, i32 %17) #36
  store i32 %call80, i32* %score6, align 4, !tbaa !84
  %cmp84 = icmp sgt i32 %call54, %call80
  %cond = select i1 %cmp84, i32 %call54, i32 %call80
  %arrayidx85 = getelementptr inbounds i32, i32* %1, i64 11
  %18 = load i32, i32* %arrayidx85, align 4, !tbaa !37
  %call86 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %call54, i32 %18) #36
  %arrayidx87 = getelementptr inbounds i32, i32* %1, i64 7
  %19 = load i32, i32* %arrayidx87, align 4, !tbaa !37
  %cmp88 = icmp sgt i32 %19, -939524096
  br i1 %cmp88, label %if.then89, label %if.else109

if.then89:                                        ; preds = %if.end76
  %call91 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %call80, i32 %19) #36
  %cmp92 = icmp slt i32 %call86, %call91
  %score94 = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 2, i32 0
  br i1 %cmp92, label %if.then93, label %if.else100

if.then93:                                        ; preds = %if.then89
  store i32 %call91, i32* %score94, align 8, !tbaa !753
  br label %if.end117

if.else100:                                       ; preds = %if.then89
  store i32 %call86, i32* %score94, align 8, !tbaa !753
  br label %if.end117

if.else109:                                       ; preds = %if.end76
  %score111 = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 2, i32 0
  store i32 %call86, i32* %score111, align 8, !tbaa !753
  br label %if.end117

if.end117:                                        ; preds = %if.then93, %if.else100, %if.else109
  %.sink235 = phi i64 [ 1, %if.then93 ], [ 2, %if.else100 ], [ 2, %if.else109 ]
  %history97 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 %.sink235, i32 1
  %20 = load i32, i32* %history97, align 4, !tbaa !71
  %history99 = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 2, i32 1
  store i32 %20, i32* %history99, align 4, !tbaa !756
  %21 = load i32, i32* %score65, align 4, !tbaa !84
  %22 = load i32, i32* %1, align 4, !tbaa !37
  %call122 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %21, i32 %22) #36
  %score123 = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 1, i32 0
  %23 = load i32, i32* %score123, align 8, !tbaa !749
  %cmp124 = icmp slt i32 %call122, %23
  br i1 %cmp124, label %if.then125, label %if.end133

if.then125:                                       ; preds = %if.end117
  %history129 = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 1, i32 1
  %24 = load i32, i32* %history129, align 4, !tbaa !754
  %history132 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %2, i64 0, i32 1
  store i32 %24, i32* %history132, align 4, !tbaa !71
  br label %if.end133

if.end133:                                        ; preds = %if.then125, %if.end117
  %s0.0 = phi i32 [ %23, %if.then125 ], [ %call122, %if.end117 ]
  %25 = load i16, i16* %senid, align 2, !tbaa !40
  %idxprom135 = sext i16 %25 to i64
  %arrayidx136 = getelementptr inbounds i32, i32* %senscr, i64 %idxprom135
  %26 = load i32, i32* %arrayidx136, align 4, !tbaa !37
  %call137 = tail call fastcc i32 @NO_UFLOW_ADD(i32 %s0.0, i32 %26) #36
  store i32 %call137, i32* %score65, align 4, !tbaa !84
  %cmp141 = icmp slt i32 %cond, %call137
  %spec.select = select i1 %cmp141, i32 %call137, i32 %cond
  store i32 -939524096, i32* %score123, align 8, !tbaa !749
  %bestscore = getelementptr inbounds %struct.hmm_t, %struct.hmm_t* %hmm, i64 0, i32 4
  store i32 %spec.select, i32* %bestscore, align 8, !tbaa !760
  ret i32 %spec.select
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @hmm_dump_vit_eval(%struct.hmm_t* %hmm, i32 %n_state, i16* readonly %senid, i32* readonly %senscr, %struct._IO_FILE* %fp) local_unnamed_addr #0 {
entry:
  %tobool.not = icmp eq %struct._IO_FILE* %fp, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @hmm_dump(%struct.hmm_t* %hmm, i32 %n_state, i16* %senid, i32* %senscr, %struct._IO_FILE* nonnull %fp) #36
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  switch i32 %n_state, label %if.else5 [
    i32 5, label %if.then1
    i32 3, label %if.then3
  ]

if.then1:                                         ; preds = %if.end
  %call = tail call i32 @hmm_vit_eval_5st(%struct.hmm_t* %hmm, i16* %senid, i32* %senscr) #36
  br label %if.end7

if.then3:                                         ; preds = %if.end
  %call4 = tail call i32 @hmm_vit_eval_3st(%struct.hmm_t* %hmm, i16* %senid, i32* %senscr) #36
  br label %if.end7

if.else5:                                         ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.803, i64 0, i64 0), i64 427, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.804, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9.805, i64 0, i64 0), i32 %n_state) #34
  br label %if.end7

if.end7:                                          ; preds = %if.then3, %if.else5, %if.then1
  %bs.0 = phi i32 [ %call, %if.then1 ], [ %call4, %if.then3 ], [ 0, %if.else5 ]
  br i1 %tobool.not, label %if.end10, label %if.then9

if.then9:                                         ; preds = %if.end7
  tail call void @hmm_dump(%struct.hmm_t* %hmm, i32 %n_state, i16* %senid, i32* %senscr, %struct._IO_FILE* nonnull %fp) #36
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.end7
  ret i32 %bs.0
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @matchseg_write(%struct._IO_FILE* nocapture %fp, %struct.kb_t* nocapture readonly %kb, %struct.gnode_s* readonly %hyp, i8* %hdr) local_unnamed_addr #14 {
entry:
  %tobool.not52 = icmp eq %struct.gnode_s* %hyp, null
  br i1 %tobool.not52, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %gn.055 = phi %struct.gnode_s* [ %4, %for.body ], [ %hyp, %entry ]
  %lscr.054 = phi i32 [ %add3, %for.body ], [ 0, %entry ]
  %ascr.053 = phi i32 [ %add, %for.body ], [ 0, %entry ]
  %0 = bitcast %struct.gnode_s* %gn.055 to %struct.hyp_t**
  %1 = load %struct.hyp_t*, %struct.hyp_t** %0, align 8, !tbaa !63
  %ascr1 = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %1, i64 0, i32 4
  %2 = load i32, i32* %ascr1, align 4, !tbaa !612
  %add = add nsw i32 %2, %ascr.053
  %lscr2 = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %1, i64 0, i32 5
  %3 = load i32, i32* %lscr2, align 4, !tbaa !613
  %add3 = add nsw i32 %3, %lscr.054
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.055, i64 0, i32 1
  %4 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %4, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !762

for.end:                                          ; preds = %for.body, %entry
  %ascr.0.lcssa = phi i32 [ 0, %entry ], [ %add, %for.body ]
  %lscr.0.lcssa = phi i32 [ 0, %entry ], [ %add3, %for.body ]
  %kbcore = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 0
  %5 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  %dict4 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %5, i64 0, i32 2
  %6 = load %struct.dict_t*, %struct.dict_t** %dict4, align 8, !tbaa !16
  %tobool5.not = icmp eq i8* %hdr, null
  %cond = select i1 %tobool5.not, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.806, i64 0, i64 0), i8* %hdr
  %uttid = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 33
  %7 = load i8*, i8** %uttid, align 8, !tbaa !763
  %add6 = add nsw i32 %lscr.0.lcssa, %ascr.0.lcssa
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.807, i64 0, i64 0), i8* %cond, i8* %7, i32 %add6, i32 %ascr.0.lcssa, i32 %lscr.0.lcssa) #36
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %6, i64 0, i32 4
  br i1 %tobool.not52, label %for.end20, label %land.rhs

land.rhs:                                         ; preds = %for.end, %for.body11
  %gn.151 = phi %struct.gnode_s* [ %17, %for.body11 ], [ %hyp, %for.end ]
  %next9 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.151, i64 0, i32 1
  %8 = load %struct.gnode_s*, %struct.gnode_s** %next9, align 8, !tbaa !364
  %tobool10.not = icmp eq %struct.gnode_s* %8, null
  br i1 %tobool10.not, label %for.end20, label %for.body11

for.body11:                                       ; preds = %land.rhs
  %9 = bitcast %struct.gnode_s* %gn.151 to %struct.hyp_t**
  %10 = load %struct.hyp_t*, %struct.hyp_t** %9, align 8, !tbaa !63
  %sf = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %10, i64 0, i32 2
  %11 = load i32, i32* %sf, align 4, !tbaa !610
  %ascr14 = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %10, i64 0, i32 4
  %12 = load i32, i32* %ascr14, align 4, !tbaa !612
  %lscr15 = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %10, i64 0, i32 5
  %13 = load i32, i32* %lscr15, align 4, !tbaa !613
  %14 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %id = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %10, i64 0, i32 0
  %15 = load i32, i32* %id, align 4, !tbaa !608
  %idxprom = sext i32 %15 to i64
  %word16 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %14, i64 %idxprom, i32 0
  %16 = load i8*, i8** %word16, align 8, !tbaa !510
  %call17 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.808, i64 0, i64 0), i32 %11, i32 %12, i32 %13, i8* %16) #36
  %17 = load %struct.gnode_s*, %struct.gnode_s** %next9, align 8, !tbaa !364
  %tobool8.not = icmp eq %struct.gnode_s* %17, null
  br i1 %tobool8.not, label %for.end20, label %land.rhs, !llvm.loop !764

for.end20:                                        ; preds = %land.rhs, %for.body11, %for.end
  %nfr = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 8
  %18 = load i32, i32* %nfr, align 8, !tbaa !765
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.809, i64 0, i64 0), i32 %18) #36
  %call22 = tail call i32 @fflush(%struct._IO_FILE* %fp) #36
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @match_write(%struct._IO_FILE* nocapture %fp, %struct.kb_t* nocapture readonly %kb, %struct.gnode_s* readonly %hyp, i8* nocapture readnone %hdr) local_unnamed_addr #0 {
entry:
  %kbcore = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 0
  %0 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  %dict1 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %0, i64 0, i32 2
  %1 = load %struct.dict_t*, %struct.dict_t** %dict1, align 8, !tbaa !16
  %finishwid = getelementptr inbounds %struct.dict_t, %struct.dict_t* %1, i64 0, i32 12
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %1, i64 0, i32 4
  %tobool.not35 = icmp eq %struct.gnode_s* %hyp, null
  br i1 %tobool.not35, label %if.then13, label %land.rhs

land.rhs:                                         ; preds = %entry, %if.end
  %counter.037 = phi i32 [ %inc, %if.end ], [ 0, %entry ]
  %gn.036 = phi %struct.gnode_s* [ %11, %if.end ], [ %hyp, %entry ]
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.036, i64 0, i32 1
  %2 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool2.not = icmp eq %struct.gnode_s* %2, null
  br i1 %tobool2.not, label %for.end, label %for.body

for.body:                                         ; preds = %land.rhs
  %3 = bitcast %struct.gnode_s* %gn.036 to %struct.hyp_t**
  %4 = load %struct.hyp_t*, %struct.hyp_t** %3, align 8, !tbaa !63
  %id = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %4, i64 0, i32 0
  %5 = load i32, i32* %id, align 4, !tbaa !608
  %call = tail call i32 @dict_filler_word(%struct.dict_t* %1, i32 %5) #34
  %tobool3.not = icmp eq i32 %call, 0
  br i1 %tobool3.not, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %6 = load i32, i32* %id, align 4, !tbaa !608
  %7 = load i32, i32* %finishwid, align 4, !tbaa !22
  %cmp.not = icmp eq i32 %6, %7
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %idxprom = sext i32 %6 to i64
  %basewid = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %8, i64 %idxprom, i32 4
  %9 = load i32, i32* %basewid, align 8, !tbaa !249
  %idxprom7 = sext i32 %9 to i64
  %word9 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %8, i64 %idxprom7, i32 0
  %10 = load i8*, i8** %word9, align 8, !tbaa !510
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.810, i64 0, i64 0), i8* %10) #36
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %inc = add nuw nsw i32 %counter.037, 1
  %11 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool.not = icmp eq %struct.gnode_s* %11, null
  br i1 %tobool.not, label %if.end15, label %land.rhs, !llvm.loop !766

for.end:                                          ; preds = %land.rhs
  %cmp12 = icmp eq i32 %counter.037, 0
  br i1 %cmp12, label %if.then13, label %if.end15

if.then13:                                        ; preds = %entry, %for.end
  %fputc = tail call i32 @fputc(i32 32, %struct._IO_FILE* %fp)
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then13, %for.end
  %uttid = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 33
  %12 = load i8*, i8** %uttid, align 8, !tbaa !763
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.811, i64 0, i64 0), i8* %12) #36
  %call17 = tail call i32 @fflush(%struct._IO_FILE* %fp) #36
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @utt_begin(%struct.kb_t* %kb) local_unnamed_addr #0 {
entry:
  %kbcore = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 0
  %0 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  %vithist = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 6
  %1 = load %struct.vithist_t*, %struct.vithist_t** %vithist, align 8, !tbaa !122
  %call = tail call i32 @vithist_utt_begin(%struct.vithist_t* %1, %struct.kbcore_t* %0) #34
  %ugtree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 2
  %2 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree, align 8, !tbaa !70
  %3 = load %struct.lextree_t*, %struct.lextree_t** %2, align 8, !tbaa !74
  %mdef = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %0, i64 0, i32 1
  %4 = load %struct.mdef_t*, %struct.mdef_t** %mdef, align 8, !tbaa !14
  %sil = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %4, i64 0, i32 14
  %5 = load i8, i8* %sil, align 8, !tbaa !47
  %beam = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 22
  %6 = load %struct.beam_t*, %struct.beam_t** %beam, align 8, !tbaa !97
  %hmm = getelementptr inbounds %struct.beam_t, %struct.beam_t* %6, i64 0, i32 1
  %7 = load i32, i32* %hmm, align 4, !tbaa !98
  tail call void @lextree_enter(%struct.lextree_t* %3, i8 signext %5, i32 -1, i32 0, i32 %call, i32 %7) #34
  %fillertree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 4
  %8 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %9 = load %struct.lextree_t*, %struct.lextree_t** %8, align 8, !tbaa !74
  %10 = load %struct.beam_t*, %struct.beam_t** %beam, align 8, !tbaa !97
  %hmm8 = getelementptr inbounds %struct.beam_t, %struct.beam_t* %10, i64 0, i32 1
  %11 = load i32, i32* %hmm8, align 4, !tbaa !98
  tail call void @lextree_enter(%struct.lextree_t* %9, i8 signext -1, i32 -1, i32 0, i32 %call, i32 %11) #34
  %n_lextrans = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 5
  store i32 1, i32* %n_lextrans, align 8, !tbaa !767
  tail call void @kb_lextree_active_swap(%struct.kb_t* %kb) #34
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @utt_end(%struct.kb_t* %kb) local_unnamed_addr #0 {
entry:
  %file = alloca [8192 x i8], align 16
  %str = alloca [16384 x i8], align 16
  %ispipe = alloca i32, align 4
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !74
  %kbcore = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 0
  %1 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  %dict1 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %1, i64 0, i32 2
  %2 = load %struct.dict_t*, %struct.dict_t** %dict1, align 8, !tbaa !16
  tail call void @kb_freehyps(%struct.kb_t* %kb) #34
  %vithist = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 6
  %3 = load %struct.vithist_t*, %struct.vithist_t** %vithist, align 8, !tbaa !122
  %4 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  %call = tail call i32 @vithist_utt_end(%struct.vithist_t* %3, %struct.kbcore_t* %4) #34
  %cmp = icmp sgt i32 %call, -1
  br i1 %cmp, label %if.then, label %if.else173

if.then:                                          ; preds = %entry
  %call3 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.812, i64 0, i64 0)) #34
  %tobool.not = icmp eq i8* %call3, null
  br i1 %tobool.not, label %if.end18, label %if.then4

if.then4:                                         ; preds = %if.then
  %5 = getelementptr inbounds [8192 x i8], [8192 x i8]* %file, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %5) #38
  %call5 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.812, i64 0, i64 0)) #34
  %uttid = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 33
  %6 = load i8*, i8** %uttid, align 8, !tbaa !763
  %call6 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %5, i8* nonnull dereferenceable(1) getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.813, i64 0, i64 0), i8* %call5, i8* %6) #34
  %call8 = call %struct._IO_FILE* @fopen(i8* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.814, i64 0, i64 0)) #36
  %cmp9 = icmp eq %struct._IO_FILE* %call8, null
  br i1 %cmp9, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.then4
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.815, i64 0, i64 0), i64 199, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11.816, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.817, i64 0, i64 0), i8* nonnull %5) #34
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !74
  br label %if.end

if.end:                                           ; preds = %if.then10, %if.then4
  %latfp.0 = phi %struct._IO_FILE* [ %7, %if.then10 ], [ %call8, %if.then4 ]
  %8 = load %struct.vithist_t*, %struct.vithist_t** %vithist, align 8, !tbaa !122
  %9 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  call void @vithist_dump(%struct.vithist_t* %8, i32 -1, %struct.kbcore_t* %9, %struct._IO_FILE* %latfp.0) #34
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !74
  %cmp14.not = icmp eq %struct._IO_FILE* %latfp.0, %10
  br i1 %cmp14.not, label %if.end17, label %if.then15

if.then15:                                        ; preds = %if.end
  %call16 = call i32 @fclose(%struct._IO_FILE* %latfp.0) #36
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %5) #38
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  %11 = load %struct.vithist_t*, %struct.vithist_t** %vithist, align 8, !tbaa !122
  %call20 = call %struct.gnode_s* @vithist_backtrace(%struct.vithist_t* %11, i32 %call) #34
  %uttid21 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 33
  %12 = load i8*, i8** %uttid21, align 8, !tbaa !763
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13.818, i64 0, i64 0), i8* %12) #36
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14.819, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.820, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.821, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17.822, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18.823, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.824, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20.825, i64 0, i64 0)) #36
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %2, i64 0, i32 4
  %hyp_seglen = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 51
  %finishwid = getelementptr inbounds %struct.dict_t, %struct.dict_t* %2, i64 0, i32 12
  %hyp_strlen = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 53
  %tobool24.not435 = icmp eq %struct.gnode_s* %call20, null
  br i1 %tobool24.not435, label %for.end, label %for.body

for.body:                                         ; preds = %if.end18, %for.inc
  %ascr.0438 = phi i32 [ %add, %for.inc ], [ 0, %if.end18 ]
  %lscr.0437 = phi i32 [ %add32, %for.inc ], [ 0, %if.end18 ]
  %gn.0436 = phi %struct.gnode_s* [ %36, %for.inc ], [ %call20, %if.end18 ]
  %13 = bitcast %struct.gnode_s* %gn.0436 to %struct.hyp_t**
  %14 = load %struct.hyp_t*, %struct.hyp_t** %13, align 8, !tbaa !63
  %vhid = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %14, i64 0, i32 1
  %15 = load i32, i32* %vhid, align 4, !tbaa !615
  %sf = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %14, i64 0, i32 2
  %16 = load i32, i32* %sf, align 4, !tbaa !610
  %ef = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %14, i64 0, i32 3
  %17 = load i32, i32* %ef, align 4, !tbaa !611
  %ascr25 = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %14, i64 0, i32 4
  %18 = load i32, i32* %ascr25, align 4, !tbaa !612
  %lscr26 = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %14, i64 0, i32 5
  %19 = load i32, i32* %lscr26, align 4, !tbaa !613
  %type = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %14, i64 0, i32 6
  %20 = load i32, i32* %type, align 4, !tbaa !614
  %21 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %id27 = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %14, i64 0, i32 0
  %22 = load i32, i32* %id27, align 4, !tbaa !608
  %idxprom = sext i32 %22 to i64
  %word28 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %21, i64 %idxprom, i32 0
  %23 = load i8*, i8** %word28, align 8, !tbaa !510
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.826, i64 0, i64 0), i32 %15, i32 %16, i32 %17, i32 %18, i32 %19, i32 %20, i8* %23) #36
  %24 = load i32, i32* %ascr25, align 4, !tbaa !612
  %add = add nsw i32 %24, %ascr.0438
  %25 = load i32, i32* %lscr26, align 4, !tbaa !613
  %add32 = add nsw i32 %25, %lscr.0437
  %26 = load i32, i32* %hyp_seglen, align 8, !tbaa !139
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* %hyp_seglen, align 8, !tbaa !139
  %27 = load i32, i32* %id27, align 4, !tbaa !608
  %call34 = call i32 @dict_filler_word(%struct.dict_t* %2, i32 %27) #34
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %28 = load i32, i32* %id27, align 4, !tbaa !608
  %29 = load i32, i32* %finishwid, align 4, !tbaa !22
  %cmp37.not = icmp eq i32 %28, %29
  br i1 %cmp37.not, label %for.inc, label %if.then38

if.then38:                                        ; preds = %land.lhs.true
  %30 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %idxprom42 = sext i32 %28 to i64
  %basewid = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %30, i64 %idxprom42, i32 4
  %31 = load i32, i32* %basewid, align 8, !tbaa !249
  %idxprom44 = sext i32 %31 to i64
  %word46 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %30, i64 %idxprom44, i32 0
  %32 = load i8*, i8** %word46, align 8, !tbaa !510
  %call47 = call i64 @strlen(i8* noundef nonnull dereferenceable(1) %32) #37
  %33 = load i32, i32* %hyp_strlen, align 8, !tbaa !142
  %34 = trunc i64 %call47 to i32
  %35 = add i32 %34, 1
  %conv50 = add i32 %35, %33
  store i32 %conv50, i32* %hyp_strlen, align 8, !tbaa !142
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then38
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.0436, i64 0, i32 1
  %36 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %tobool24.not = icmp eq %struct.gnode_s* %36, null
  br i1 %tobool24.not, label %for.end, label %for.body, !llvm.loop !768

for.end:                                          ; preds = %for.inc, %if.end18
  %lscr.0.lcssa = phi i32 [ 0, %if.end18 ], [ %add32, %for.inc ]
  %ascr.0.lcssa = phi i32 [ 0, %if.end18 ], [ %add, %for.inc ]
  %nfr = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 8
  %37 = load i32, i32* %nfr, align 8, !tbaa !765
  %call52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22.827, i64 0, i64 0), i32 0, i32 %37, i32 %ascr.0.lcssa, i32 %lscr.0.lcssa) #36
  %38 = load i32, i32* %hyp_seglen, align 8, !tbaa !139
  %conv54 = sext i32 %38 to i64
  %call55 = call i8* @__ckd_calloc__(i64 %conv54, i64 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.815, i64 0, i64 0), i32 234) #34
  %hyp_segs = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 50
  %39 = bitcast %struct.hyp_t*** %hyp_segs to i8**
  store i8* %call55, i8** %39, align 8, !tbaa !138
  %40 = load i32, i32* %hyp_strlen, align 8, !tbaa !142
  %add57 = add nsw i32 %40, 1
  %conv58 = sext i32 %add57 to i64
  %call59 = call i8* @__ckd_calloc__(i64 %conv58, i64 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.815, i64 0, i64 0), i32 235) #34
  %hyp_str = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 52
  store i8* %call59, i8** %hyp_str, align 8, !tbaa !141
  %41 = call i64 @fwrite(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23.828, i64 0, i64 0), i64 9, i64 1, %struct._IO_FILE* %0)
  br i1 %tobool24.not435, label %for.end95, label %for.body64

for.body64:                                       ; preds = %for.end, %for.inc93
  %indvars.iv444 = phi i64 [ %indvars.iv.next445, %for.inc93 ], [ 0, %for.end ]
  %hyp_strptr.0434 = phi i8* [ %hyp_strptr.1, %for.inc93 ], [ %call59, %for.end ]
  %gn.1432 = phi %struct.gnode_s* [ %52, %for.inc93 ], [ %call20, %for.end ]
  %42 = bitcast %struct.gnode_s* %gn.1432 to %struct.hyp_t**
  %43 = load %struct.hyp_t*, %struct.hyp_t** %42, align 8, !tbaa !63
  %44 = load %struct.hyp_t**, %struct.hyp_t*** %hyp_segs, align 8, !tbaa !138
  %indvars.iv.next445 = add nuw i64 %indvars.iv444, 1
  %arrayidx70 = getelementptr inbounds %struct.hyp_t*, %struct.hyp_t** %44, i64 %indvars.iv444
  store %struct.hyp_t* %43, %struct.hyp_t** %arrayidx70, align 8, !tbaa !74
  %id71 = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %43, i64 0, i32 0
  %45 = load i32, i32* %id71, align 4, !tbaa !608
  %call72 = call i32 @dict_filler_word(%struct.dict_t* %2, i32 %45) #34
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %land.lhs.true74, label %for.inc93

land.lhs.true74:                                  ; preds = %for.body64
  %46 = load i32, i32* %id71, align 4, !tbaa !608
  %47 = load i32, i32* %finishwid, align 4, !tbaa !22
  %cmp77.not = icmp eq i32 %46, %47
  br i1 %cmp77.not, label %for.inc93, label %if.then79

if.then79:                                        ; preds = %land.lhs.true74
  %48 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %idxprom83 = sext i32 %46 to i64
  %basewid85 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %48, i64 %idxprom83, i32 4
  %49 = load i32, i32* %basewid85, align 8, !tbaa !249
  %idxprom86 = sext i32 %49 to i64
  %word88 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %48, i64 %idxprom86, i32 0
  %50 = load i8*, i8** %word88, align 8, !tbaa !510
  %call89 = call i8* @strcat(i8* noundef nonnull dereferenceable(1) %hyp_strptr.0434, i8* noundef nonnull dereferenceable(1) %50) #34
  %call90 = call i64 @strlen(i8* noundef nonnull dereferenceable(1) %hyp_strptr.0434) #37
  %add.ptr = getelementptr inbounds i8, i8* %hyp_strptr.0434, i64 %call90
  %strlen = call i64 @strlen(i8* noundef nonnull dereferenceable(1) %add.ptr)
  %endptr = getelementptr i8, i8* %add.ptr, i64 %strlen
  %51 = bitcast i8* %endptr to i16*
  store i16 32, i16* %51, align 1
  %incdec.ptr = getelementptr inbounds i8, i8* %add.ptr, i64 1
  br label %for.inc93

for.inc93:                                        ; preds = %for.body64, %land.lhs.true74, %if.then79
  %hyp_strptr.1 = phi i8* [ %hyp_strptr.0434, %for.body64 ], [ %incdec.ptr, %if.then79 ], [ %hyp_strptr.0434, %land.lhs.true74 ]
  %next94 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.1432, i64 0, i32 1
  %52 = load %struct.gnode_s*, %struct.gnode_s** %next94, align 8, !tbaa !364
  %tobool63.not = icmp eq %struct.gnode_s* %52, null
  br i1 %tobool63.not, label %for.end95, label %for.body64, !llvm.loop !769

for.end95:                                        ; preds = %for.inc93, %for.end
  %53 = load i8*, i8** %hyp_str, align 8, !tbaa !141
  %54 = load i32, i32* %hyp_strlen, align 8, !tbaa !142
  %idxprom98 = sext i32 %54 to i64
  %arrayidx99 = getelementptr inbounds i8, i8* %53, i64 %idxprom98
  store i8 0, i8* %arrayidx99, align 1, !tbaa !63
  %55 = load i8*, i8** %hyp_str, align 8, !tbaa !141
  %56 = load i8*, i8** %uttid21, align 8, !tbaa !763
  %call102 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24.829, i64 0, i64 0), i8* %55, i8* %56) #36
  %matchsegfp = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 49
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** %matchsegfp, align 8, !tbaa !127
  %tobool103.not = icmp eq %struct._IO_FILE* %57, null
  br i1 %tobool103.not, label %if.end106, label %if.then104

if.then104:                                       ; preds = %for.end95
  call void @matchseg_write(%struct._IO_FILE* nonnull %57, %struct.kb_t* nonnull %kb, %struct.gnode_s* %call20, i8* null) #36
  br label %if.end106

if.end106:                                        ; preds = %if.then104, %for.end95
  call void @matchseg_write(%struct._IO_FILE* %0, %struct.kb_t* nonnull %kb, %struct.gnode_s* %call20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25.830, i64 0, i64 0)) #36
  %fputc423 = call i32 @fputc(i32 10, %struct._IO_FILE* %0)
  %58 = load i32, i32* @confp_open, align 4, !tbaa !37
  %tobool108.not = icmp eq i32 %58, 0
  br i1 %tobool108.not, label %if.then109, label %if.end115

if.then109:                                       ; preds = %if.end106
  %call110 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27.831, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.814, i64 0, i64 0)) #36
  store %struct._IO_FILE* %call110, %struct._IO_FILE** @confp, align 8, !tbaa !74
  %cmp111 = icmp eq %struct._IO_FILE* %call110, null
  br i1 %cmp111, label %if.then113, label %if.end114

if.then113:                                       ; preds = %if.then109
  call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.815, i64 0, i64 0), i64 269, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.28.832, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.29.833, i64 0, i64 0)) #34
  br label %if.end114

if.end114:                                        ; preds = %if.then113, %if.then109
  store i32 1, i32* @confp_open, align 4, !tbaa !37
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.end106
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @confp, align 8, !tbaa !74
  %60 = load i64, i64* @considered, align 8, !tbaa !770
  %61 = load i8*, i8** %uttid21, align 8, !tbaa !763
  %call117 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30.834, i64 0, i64 0), i64 %60, i8* %61) #36
  %62 = load i64, i64* @considered, align 8, !tbaa !770
  %63 = load i64, i64* @tot_considered, align 8, !tbaa !770
  %add118 = add nsw i64 %63, %62
  store i64 %add118, i64* @tot_considered, align 8, !tbaa !770
  store i64 0, i64* @considered, align 8, !tbaa !770
  %matchfp = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 48
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %matchfp, align 8, !tbaa !128
  %tobool119.not = icmp eq %struct._IO_FILE* %64, null
  br i1 %tobool119.not, label %if.end122, label %if.then120

if.then120:                                       ; preds = %if.end115
  call void @match_write(%struct._IO_FILE* nonnull %64, %struct.kb_t* nonnull %kb, %struct.gnode_s* %call20, i8* undef) #36
  br label %if.end122

if.end122:                                        ; preds = %if.then120, %if.end115
  %call123 = call i8* @cmd_ln_access(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31.835, i64 0, i64 0)) #34
  %tobool124.not = icmp eq i8* %call123, null
  br i1 %tobool124.not, label %if.end172, label %if.then125

if.then125:                                       ; preds = %if.end122
  %65 = getelementptr inbounds [16384 x i8], [16384 x i8]* %str, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %65) #38
  %66 = bitcast i32* %ispipe to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #38
  %call127 = call i8* @cmd_ln_access(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31.835, i64 0, i64 0)) #34
  %67 = load i8*, i8** %uttid21, align 8, !tbaa !763
  %call129 = call i8* @cmd_ln_access(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33.836, i64 0, i64 0)) #34
  %call130 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %65, i8* nonnull dereferenceable(1) getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32.837, i64 0, i64 0), i8* %call127, i8* %67, i8* %call129) #34
  call void @_E__pr_info_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.815, i64 0, i64 0), i64 289, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34.838, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35.839, i64 0, i64 0), i8* nonnull %65) #34
  %call133 = call %struct._IO_FILE* @fopen_comp(i8* nonnull %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.814, i64 0, i64 0), i32* nonnull %ispipe) #34
  %cmp134 = icmp eq %struct._IO_FILE* %call133, null
  br i1 %cmp134, label %if.then136, label %if.else

if.then136:                                       ; preds = %if.then125
  call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.815, i64 0, i64 0), i64 292, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11.816, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.36.840, i64 0, i64 0), i8* nonnull %65) #34
  br label %if.end171

if.else:                                          ; preds = %if.then125
  %call139 = call i8* @getcwd(i8* nonnull %65, i64 16384) #34
  %call141 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %call133, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37.841, i64 0, i64 0), i8* nonnull %65) #36
  %call142 = call i8* @cmd_ln_access(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38.842, i64 0, i64 0)) #34
  %68 = bitcast i8* %call142 to float*
  %69 = load float, float* %68, align 4, !tbaa !4
  %conv143 = fpext float %69 to double
  %call144 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %call133, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39.843, i64 0, i64 0), double %conv143) #36
  %call145 = call i8* @cmd_ln_access(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41.844, i64 0, i64 0)) #34
  %call146 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %call133, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40.845, i64 0, i64 0), i8* %call145) #36
  %call147 = call i8* @cmd_ln_access(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42.846, i64 0, i64 0)) #34
  %tobool148.not = icmp eq i8* %call147, null
  br i1 %tobool148.not, label %if.end152, label %if.then149

if.then149:                                       ; preds = %if.else
  %call150 = call i8* @cmd_ln_access(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42.846, i64 0, i64 0)) #34
  %call151 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %call133, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43.847, i64 0, i64 0), i8* %call150) #36
  br label %if.end152

if.end152:                                        ; preds = %if.then149, %if.else
  %call153 = call i8* @cmd_ln_access(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45.848, i64 0, i64 0)) #34
  %call154 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %call133, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44.849, i64 0, i64 0), i8* %call153) #36
  %call155 = call i8* @cmd_ln_access(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47.850, i64 0, i64 0)) #34
  %call156 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %call133, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46.851, i64 0, i64 0), i8* %call155) #36
  %call157 = call i8* @cmd_ln_access(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49.852, i64 0, i64 0)) #34
  %call158 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %call133, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.48.853, i64 0, i64 0), i8* %call157) #36
  %call159 = call i8* @cmd_ln_access(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51.854, i64 0, i64 0)) #34
  %call160 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %call133, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50.855, i64 0, i64 0), i8* %call159) #36
  %call161 = call i8* @cmd_ln_access(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53.856, i64 0, i64 0)) #34
  %call162 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %call133, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52.857, i64 0, i64 0), i8* %call161) #36
  %call163 = call i8* @cmd_ln_access(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55.858, i64 0, i64 0)) #34
  %call164 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %call133, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.54.859, i64 0, i64 0), i8* %call163) #36
  %70 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56.860, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* nonnull %call133)
  %71 = load i32, i32* %nfr, align 8, !tbaa !765
  %call167 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %call133, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.57.861, i64 0, i64 0), i32 %71) #36
  %72 = call i64 @fwrite(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56.860, i64 0, i64 0), i64 2, i64 1, %struct._IO_FILE* nonnull %call133)
  %73 = load %struct.vithist_t*, %struct.vithist_t** %vithist, align 8, !tbaa !122
  %call170 = call i8* @cmd_ln_access(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58.862, i64 0, i64 0)) #34
  %74 = bitcast i8* %call170 to i32*
  %75 = load i32, i32* %74, align 4, !tbaa !37
  call void @vithist_dag_write(%struct.vithist_t* %73, %struct.gnode_s* %call20, %struct.dict_t* %2, i32 %75, %struct._IO_FILE* nonnull %call133) #34
  %76 = load i32, i32* %ispipe, align 4, !tbaa !37
  call void @fclose_comp(%struct._IO_FILE* nonnull %call133, i32 %76) #34
  br label %if.end171

if.end171:                                        ; preds = %if.end152, %if.then136
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #38
  call void @llvm.lifetime.end.p0i8(i64 16384, i8* nonnull %65) #38
  br label %if.end172

if.end172:                                        ; preds = %if.end171, %if.end122
  call void @glist_free(%struct.gnode_s* %call20) #34
  br label %if.end175

if.else173:                                       ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.815, i64 0, i64 0), i64 328, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11.816, i64 0, i64 0)) #34
  %uttid174 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 33
  %77 = load i8*, i8** %uttid174, align 8, !tbaa !763
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.59.863, i64 0, i64 0), i8* %77) #34
  br label %if.end175

if.end175:                                        ; preds = %if.else173, %if.end172
  call void @_E__pr_info_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.815, i64 0, i64 0), i64 337, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34.838, i64 0, i64 0)) #34
  %nfr176 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 8
  %78 = load i32, i32* %nfr176, align 8, !tbaa !765
  %utt_sen_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 35
  %79 = load i32, i32* %utt_sen_eval, align 4, !tbaa !771
  %shr = ashr i32 %78, 1
  %add178 = add nsw i32 %79, %shr
  %div = sdiv i32 %add178, %78
  %utt_gau_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 36
  %80 = load i32, i32* %utt_gau_eval, align 8, !tbaa !772
  %add182 = add nsw i32 %80, %shr
  %div184 = sdiv i32 %add182, %78
  %utt_hmm_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 34
  %81 = load i32, i32* %utt_hmm_eval, align 8, !tbaa !773
  %add187 = add nsw i32 %81, %shr
  %div189 = sdiv i32 %add187, %78
  %82 = load %struct.vithist_t*, %struct.vithist_t** %vithist, align 8, !tbaa !122
  %n_entry = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %82, i64 0, i32 2
  %83 = load i32, i32* %n_entry, align 8, !tbaa !569
  %add193 = add nsw i32 %83, %shr
  %div195 = sdiv i32 %add193, %78
  %uttid196 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 33
  %84 = load i8*, i8** %uttid196, align 8, !tbaa !763
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.60.864, i64 0, i64 0), i32 %78, i32 %div, i32 %div184, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, i32 %div189, i32 %div195, double 0.000000e+00, double 0.000000e+00, i8* %84) #34
  %hmm_hist_bins = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 38
  %85 = load i32, i32* %hmm_hist_bins, align 8, !tbaa !125
  %hmm_hist = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 37
  %86 = zext i32 %85 to i64
  %smin = call i32 @llvm.smin.i32(i32 %85, i32 0)
  %87 = add i32 %smin, -1
  br label %for.cond197

for.cond197:                                      ; preds = %land.rhs, %if.end175
  %indvars.iv442 = phi i64 [ %indvars.iv.next443, %land.rhs ], [ %86, %if.end175 ]
  %88 = trunc i64 %indvars.iv442 to i32
  %j.0 = add nsw i32 %88, -1
  %cmp198 = icmp sgt i32 %88, 0
  br i1 %cmp198, label %land.rhs, label %for.end206

land.rhs:                                         ; preds = %for.cond197
  %89 = load i32*, i32** %hmm_hist, align 8, !tbaa !126
  %idxprom200425 = zext i32 %j.0 to i64
  %arrayidx201 = getelementptr inbounds i32, i32* %89, i64 %idxprom200425
  %90 = load i32, i32* %arrayidx201, align 4, !tbaa !37
  %cmp202 = icmp eq i32 %90, 0
  %indvars.iv.next443 = add nsw i64 %indvars.iv442, -1
  br i1 %cmp202, label %for.cond197, label %for.end206.split.loop.exit446, !llvm.loop !774

for.end206.split.loop.exit446:                    ; preds = %land.rhs
  %91 = trunc i64 %indvars.iv442 to i32
  br label %for.end206

for.end206:                                       ; preds = %for.cond197, %for.end206.split.loop.exit446
  %j.0.in.lcssa = phi i32 [ %91, %for.end206.split.loop.exit446 ], [ %smin, %for.cond197 ]
  %j.0.lcssa = phi i32 [ %j.0, %for.end206.split.loop.exit446 ], [ %87, %for.cond197 ]
  call void @_E__pr_info_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.815, i64 0, i64 0), i64 375, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34.838, i64 0, i64 0)) #34
  %92 = load i8*, i8** %uttid196, align 8, !tbaa !763
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.61.865, i64 0, i64 0), i32 %j.0.lcssa, i8* %92) #34
  %cmp209.not.not428 = icmp sgt i32 %j.0.in.lcssa, 0
  br i1 %cmp209.not.not428, label %for.body211.preheader, label %for.end224

for.body211.preheader:                            ; preds = %for.end206
  %wide.trip.count = zext i32 %j.0.in.lcssa to i64
  br label %for.body211

for.body211:                                      ; preds = %for.body211.preheader, %for.body211
  %indvars.iv440 = phi i64 [ 0, %for.body211.preheader ], [ %indvars.iv.next441, %for.body211 ]
  %k.0430 = phi i32 [ 0, %for.body211.preheader ], [ %add215, %for.body211 ]
  %93 = load i32*, i32** %hmm_hist, align 8, !tbaa !126
  %arrayidx214 = getelementptr inbounds i32, i32* %93, i64 %indvars.iv440
  %94 = load i32, i32* %arrayidx214, align 4, !tbaa !37
  %add215 = add nsw i32 %94, %k.0430
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !74
  %mul = mul nsw i32 %add215, 100
  %96 = load i32, i32* %nfr176, align 8, !tbaa !765
  %div220 = sdiv i32 %mul, %96
  %call221 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %95, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62.866, i64 0, i64 0), i32 %94, i32 %div220) #36
  %indvars.iv.next441 = add nuw nsw i64 %indvars.iv440, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next441, %wide.trip.count
  br i1 %exitcond.not, label %for.end224, label %for.body211, !llvm.loop !775

for.end224:                                       ; preds = %for.body211, %for.end206
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !74
  %fputc = call i32 @fputc(i32 10, %struct._IO_FILE* %97)
  %98 = load i32, i32* %utt_sen_eval, align 4, !tbaa !771
  %conv227 = sitofp i32 %98 to double
  %tot_sen_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 44
  %99 = load double, double* %tot_sen_eval, align 8, !tbaa !776
  %add228 = fadd double %99, %conv227
  store double %add228, double* %tot_sen_eval, align 8, !tbaa !776
  %100 = load i32, i32* %utt_gau_eval, align 8, !tbaa !772
  %conv230 = sitofp i32 %100 to double
  %tot_gau_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 45
  %101 = load double, double* %tot_gau_eval, align 8, !tbaa !777
  %add231 = fadd double %101, %conv230
  store double %add231, double* %tot_gau_eval, align 8, !tbaa !777
  %102 = load i32, i32* %utt_hmm_eval, align 8, !tbaa !773
  %conv233 = sitofp i32 %102 to double
  %tot_hmm_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 46
  %103 = load double, double* %tot_hmm_eval, align 8, !tbaa !778
  %add234 = fadd double %103, %conv233
  store double %add234, double* %tot_hmm_eval, align 8, !tbaa !778
  %104 = load %struct.vithist_t*, %struct.vithist_t** %vithist, align 8, !tbaa !122
  %n_entry236 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %104, i64 0, i32 2
  %105 = load i32, i32* %n_entry236, align 8, !tbaa !569
  %conv237 = sitofp i32 %105 to double
  %tot_wd_exit = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 47
  %106 = load double, double* %tot_wd_exit, align 8, !tbaa !779
  %add238 = fadd double %106, %conv237
  store double %add238, double* %tot_wd_exit, align 8, !tbaa !779
  %tm_sen = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 40
  call void @ptmr_reset(%struct.ptmr_t* nonnull %tm_sen) #34
  %tm_srch = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 41
  call void @ptmr_reset(%struct.ptmr_t* nonnull %tm_srch) #34
  %tm_ovrhd = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 42
  call void @ptmr_reset(%struct.ptmr_t* nonnull %tm_ovrhd) #34
  %n_lextree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 1
  %ugtree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 2
  %fillertree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 4
  %107 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %cmp240426 = icmp sgt i32 %107, 0
  br i1 %cmp240426, label %for.body242, label %for.end251

for.body242:                                      ; preds = %for.end224, %for.body242
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body242 ], [ 0, %for.end224 ]
  %108 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree, align 8, !tbaa !70
  %arrayidx244 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %108, i64 %indvars.iv
  %109 = load %struct.lextree_t*, %struct.lextree_t** %arrayidx244, align 8, !tbaa !74
  %110 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  call void @lextree_utt_end(%struct.lextree_t* %109, %struct.kbcore_t* %110) #34
  %111 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %arrayidx247 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %111, i64 %indvars.iv
  %112 = load %struct.lextree_t*, %struct.lextree_t** %arrayidx247, align 8, !tbaa !74
  %113 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  call void @lextree_utt_end(%struct.lextree_t* %112, %struct.kbcore_t* %113) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %114 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %115 = sext i32 %114 to i64
  %cmp240 = icmp slt i64 %indvars.iv.next, %115
  br i1 %cmp240, label %for.body242, label %for.end251, !llvm.loop !780

for.end251:                                       ; preds = %for.body242, %for.end224
  %116 = load %struct.vithist_t*, %struct.vithist_t** %vithist, align 8, !tbaa !122
  call void @vithist_utt_reset(%struct.vithist_t* %116) #34
  %117 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  %lm = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %117, i64 0, i32 4
  %118 = load %struct.lm_s*, %struct.lm_s** %lm, align 8, !tbaa !17
  call void @lm_cache_stats_dump(%struct.lm_s* %118) #34
  %119 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  %lm255 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %119, i64 0, i32 4
  %120 = load %struct.lm_s*, %struct.lm_s** %lm255, align 8, !tbaa !17
  call void @lm_cache_reset(%struct.lm_s* %120) #34
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind optsize willreturn
declare i8* @strcat(i8* noalias returned, i8* noalias nocapture readonly) local_unnamed_addr #17

; Function Attrs: nounwind optsize
declare i8* @getcwd(i8*, i64) local_unnamed_addr #25

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #10

; Function Attrs: noinline nounwind optsize uwtable
define void @utt_word_trans(%struct.kb_t* nocapture %kb, i32 %cf) local_unnamed_addr #0 {
entry:
  %vithist = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 6
  %0 = load %struct.vithist_t*, %struct.vithist_t** %vithist, align 8, !tbaa !122
  %bestscore = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 19
  %1 = load i32, i32* %bestscore, align 4, !tbaa !781
  %beam = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 22
  %2 = load %struct.beam_t*, %struct.beam_t** %beam, align 8, !tbaa !97
  %hmm = getelementptr inbounds %struct.beam_t, %struct.beam_t* %2, i64 0, i32 1
  %3 = load i32, i32* %hmm, align 4, !tbaa !98
  %add = add nsw i32 %3, %1
  %bestvh = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %0, i64 0, i32 7
  %4 = load i32*, i32** %bestvh, align 8, !tbaa !147
  %idxprom = sext i32 %cf to i64
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %cmp = icmp slt i32 %5, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %kbcore = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 0
  %6 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  %dict1 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %6, i64 0, i32 2
  %7 = load %struct.dict_t*, %struct.dict_t** %dict1, align 8, !tbaa !16
  %mdef3 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %6, i64 0, i32 1
  %8 = load %struct.mdef_t*, %struct.mdef_t** %mdef3, align 8, !tbaa !14
  %n_ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %8, i64 0, i32 0
  %9 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %10 = load i32*, i32** @utt_word_trans.bs, align 8, !tbaa !74
  %tobool.not = icmp eq i32* %10, null
  br i1 %tobool.not, label %if.then4, label %if.end8

if.then4:                                         ; preds = %if.end
  %conv = sext i32 %9 to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.815, i64 0, i64 0), i32 439) #34
  store i8* %call, i8** bitcast (i32** @utt_word_trans.bs to i8**), align 8, !tbaa !74
  %call6 = tail call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.815, i64 0, i64 0), i32 440) #34
  store i8* %call6, i8** bitcast (i32** @utt_word_trans.bv to i8**), align 8, !tbaa !74
  %call7 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63.867, i64 0, i64 0)) #34
  %11 = bitcast i8* %call7 to i32*
  %12 = load i32, i32* %11, align 4, !tbaa !37
  store i32 %12, i32* @utt_word_trans.epl, align 4, !tbaa !37
  %.pre = load i32*, i32** @utt_word_trans.bs, align 8
  br label %if.end8

if.end8:                                          ; preds = %if.then4, %if.end
  %13 = phi i32* [ %.pre, %if.then4 ], [ %10, %if.end ]
  %14 = load i32*, i32** @utt_word_trans.bv, align 8
  %cmp9187 = icmp sgt i32 %9, 0
  br i1 %cmp9187, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %if.end8
  %wide.trip.count192 = zext i32 %9 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv190 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next191, %for.body ]
  %arrayidx12 = getelementptr inbounds i32, i32* %13, i64 %indvars.iv190
  store i32 -2147483648, i32* %arrayidx12, align 4, !tbaa !37
  %arrayidx14 = getelementptr inbounds i32, i32* %14, i64 %indvars.iv190
  store i32 -1, i32* %arrayidx14, align 4, !tbaa !37
  %indvars.iv.next191 = add nuw nsw i64 %indvars.iv190, 1
  %exitcond193.not = icmp eq i64 %indvars.iv.next191, %wide.trip.count192
  br i1 %exitcond193.not, label %for.end, label %for.body, !llvm.loop !782

for.end:                                          ; preds = %for.body, %if.end8
  %frame_start = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %0, i64 0, i32 1
  %15 = load i32*, i32** %frame_start, align 8, !tbaa !145
  %arrayidx16 = getelementptr inbounds i32, i32* %15, i64 %idxprom
  %16 = load i32, i32* %arrayidx16, align 4, !tbaa !37
  %n_entry = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %0, i64 0, i32 2
  %17 = load i32, i32* %n_entry, align 8, !tbaa !569
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %7, i64 0, i32 4
  %ciphone35 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %8, i64 0, i32 7
  %sil = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %8, i64 0, i32 14
  %cmp18.not.not183 = icmp slt i32 %16, %17
  br i1 %cmp18.not.not183, label %for.body20, label %for.end59

for.body20:                                       ; preds = %for.end, %for.inc57
  %vhid.0185 = phi i32 [ %inc58, %for.inc57 ], [ %16, %for.end ]
  %maxpscore.0184 = phi i32 [ %maxpscore.1, %for.inc57 ], [ -2147483648, %for.end ]
  %call21 = tail call %struct.vithist_entry_t* @vithist_id2entry(%struct.vithist_t* %0, i32 %vhid.0185) #34
  %valid = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call21, i64 0, i32 8
  %18 = load i32, i32* %valid, align 4, !tbaa !583
  %tobool22.not = icmp eq i32 %18, 0
  br i1 %tobool22.not, label %for.inc57, label %if.end24

if.end24:                                         ; preds = %for.body20
  %wid25 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call21, i64 0, i32 0
  %19 = load i32, i32* %wid25, align 4, !tbaa !574
  %20 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %idxprom26 = sext i32 %19 to i64
  %ciphone = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %20, i64 %idxprom26, i32 1
  %21 = load i8*, i8** %ciphone, align 8, !tbaa !60
  %pronlen = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %20, i64 %idxprom26, i32 2
  %22 = load i32, i32* %pronlen, align 8, !tbaa !62
  %sub31 = add nsw i32 %22, -1
  %idxprom32 = sext i32 %sub31 to i64
  %arrayidx33 = getelementptr inbounds i8, i8* %21, i64 %idxprom32
  %23 = load i8, i8* %arrayidx33, align 1, !tbaa !63
  %24 = load %struct.ciphone_t*, %struct.ciphone_t** %ciphone35, align 8, !tbaa !59
  %idxprom36 = sext i8 %23 to i64
  %filler = getelementptr inbounds %struct.ciphone_t, %struct.ciphone_t* %24, i64 %idxprom36, i32 1
  %25 = load i32, i32* %filler, align 8, !tbaa !64
  %tobool38.not = icmp eq i32 %25, 0
  br i1 %tobool38.not, label %if.end41, label %if.then39

if.then39:                                        ; preds = %if.end24
  %26 = load i8, i8* %sil, align 8, !tbaa !47
  %.pre194 = sext i8 %26 to i64
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.end24
  %idxprom43.pre-phi = phi i64 [ %.pre194, %if.then39 ], [ %idxprom36, %if.end24 ]
  %score42 = getelementptr inbounds %struct.vithist_entry_t, %struct.vithist_entry_t* %call21, i64 0, i32 5
  %27 = load i32, i32* %score42, align 4, !tbaa !580
  %28 = load i32*, i32** @utt_word_trans.bs, align 8, !tbaa !74
  %arrayidx44 = getelementptr inbounds i32, i32* %28, i64 %idxprom43.pre-phi
  %29 = load i32, i32* %arrayidx44, align 4, !tbaa !37
  %cmp45 = icmp sgt i32 %27, %29
  br i1 %cmp45, label %if.then47, label %for.inc57

if.then47:                                        ; preds = %if.end41
  store i32 %27, i32* %arrayidx44, align 4, !tbaa !37
  %30 = load i32*, i32** @utt_word_trans.bv, align 8, !tbaa !74
  %arrayidx51 = getelementptr inbounds i32, i32* %30, i64 %idxprom43.pre-phi
  store i32 %vhid.0185, i32* %arrayidx51, align 4, !tbaa !37
  %cmp52 = icmp slt i32 %maxpscore.0184, %27
  %spec.select = select i1 %cmp52, i32 %27, i32 %maxpscore.0184
  br label %for.inc57

for.inc57:                                        ; preds = %if.then47, %if.end41, %for.body20
  %maxpscore.1 = phi i32 [ %maxpscore.0184, %if.end41 ], [ %maxpscore.0184, %for.body20 ], [ %spec.select, %if.then47 ]
  %inc58 = add i32 %vhid.0185, 1
  %exitcond189.not = icmp eq i32 %inc58, %17
  br i1 %exitcond189.not, label %for.end59, label %for.body20, !llvm.loop !783

for.end59:                                        ; preds = %for.inc57, %for.end
  %maxpscore.0.lcssa = phi i32 [ -2147483648, %for.end ], [ %maxpscore.1, %for.inc57 ]
  %n_lextrans = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 5
  %31 = load i32, i32* %n_lextrans, align 8, !tbaa !767
  %inc60 = add nsw i32 %31, 1
  store i32 %inc60, i32* %n_lextrans, align 8, !tbaa !767
  %n_lextree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 1
  %32 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %33 = load i32, i32* @utt_word_trans.epl, align 4, !tbaa !37
  %mul = mul nsw i32 %33, %32
  %rem = srem i32 %31, %mul
  %div = sdiv i32 %rem, %33
  %wend_beam = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 32
  %ugtree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 2
  %idxprom80 = sext i32 %div to i64
  br i1 %cmp9187, label %for.body64.preheader, label %for.end91

for.body64.preheader:                             ; preds = %for.end59
  %wide.trip.count = zext i32 %9 to i64
  %.pre196 = load i32*, i32** @utt_word_trans.bv, align 8, !tbaa !74
  br label %for.body64

for.body64:                                       ; preds = %for.body64.preheader, %for.inc89
  %34 = phi i32* [ %.pre196, %for.body64.preheader ], [ %39, %for.inc89 ]
  %indvars.iv = phi i64 [ 0, %for.body64.preheader ], [ %indvars.iv.next, %for.inc89 ]
  %arrayidx66 = getelementptr inbounds i32, i32* %34, i64 %indvars.iv
  %35 = load i32, i32* %arrayidx66, align 4, !tbaa !37
  %cmp67 = icmp sgt i32 %35, -1
  br i1 %cmp67, label %if.then69, label %for.inc89

if.then69:                                        ; preds = %for.body64
  %36 = load i32, i32* %wend_beam, align 4, !tbaa !111
  %cmp70 = icmp eq i32 %36, 0
  %.pre197 = load i32*, i32** @utt_word_trans.bs, align 8, !tbaa !74
  %arrayidx84.phi.trans.insert = getelementptr inbounds i32, i32* %.pre197, i64 %indvars.iv
  %.pre198 = load i32, i32* %arrayidx84.phi.trans.insert, align 4, !tbaa !37
  %add76 = sub i32 %maxpscore.0.lcssa, %36
  %cmp77 = icmp sgt i32 %.pre198, %add76
  %or.cond = select i1 %cmp70, i1 true, i1 %cmp77
  br i1 %or.cond, label %if.then79, label %for.inc89

if.then79:                                        ; preds = %if.then69
  %37 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree, align 8, !tbaa !70
  %arrayidx81 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %37, i64 %idxprom80
  %38 = load %struct.lextree_t*, %struct.lextree_t** %arrayidx81, align 8, !tbaa !74
  %conv82 = trunc i64 %indvars.iv to i8
  tail call void @lextree_enter(%struct.lextree_t* %38, i8 signext %conv82, i32 %cf, i32 %.pre198, i32 %35, i32 %add) #34
  %.pre195 = load i32*, i32** @utt_word_trans.bv, align 8, !tbaa !74
  br label %for.inc89

for.inc89:                                        ; preds = %if.then69, %for.body64, %if.then79
  %39 = phi i32* [ %34, %for.body64 ], [ %.pre195, %if.then79 ], [ %34, %if.then69 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end91, label %for.body64, !llvm.loop !784

for.end91:                                        ; preds = %for.inc89, %for.end59
  %fillertree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 4
  %40 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %arrayidx93 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %40, i64 %idxprom80
  %41 = load %struct.lextree_t*, %struct.lextree_t** %arrayidx93, align 8, !tbaa !74
  %bestscore94 = getelementptr inbounds %struct.vithist_t, %struct.vithist_t* %0, i64 0, i32 6
  %42 = load i32*, i32** %bestscore94, align 8, !tbaa !146
  %arrayidx96 = getelementptr inbounds i32, i32* %42, i64 %idxprom
  %43 = load i32, i32* %arrayidx96, align 4, !tbaa !37
  %44 = load i32*, i32** %bestvh, align 8, !tbaa !147
  %arrayidx99 = getelementptr inbounds i32, i32* %44, i64 %idxprom
  %45 = load i32, i32* %arrayidx99, align 4, !tbaa !37
  tail call void @lextree_enter(%struct.lextree_t* %41, i8 signext -1, i32 %cf, i32 %43, i32 %45, i32 %add) #34
  br label %cleanup

cleanup:                                          ; preds = %entry, %for.end91
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @computePhnHeur(%struct.mdef_t* nocapture readonly %md, %struct.kb_t* nocapture readonly %kb, i32 %heutype) local_unnamed_addr #13 {
entry:
  %n_emit_state = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %md, i64 0, i32 2
  %0 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %cd2cisen = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %md, i64 0, i32 11
  %1 = load i16*, i16** %cd2cisen, align 8, !tbaa !115
  %2 = load i16, i16* %1, align 2, !tbaa !40
  %cmp319 = icmp eq i16 %2, 0
  br i1 %cmp319, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %phn_heur_list = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 17
  %sen2cimap = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %md, i64 0, i32 12
  %3 = load i8*, i8** %sen2cimap, align 8, !tbaa !348
  %4 = load i32*, i32** %phn_heur_list, align 8, !tbaa !119
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv335 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next336, %for.body ]
  %arrayidx3 = getelementptr inbounds i8, i8* %3, i64 %indvars.iv335
  %5 = load i8, i8* %arrayidx3, align 1, !tbaa !63
  %idxprom5 = sext i8 %5 to i64
  %arrayidx6 = getelementptr inbounds i32, i32* %4, i64 %idxprom5
  store i32 0, i32* %arrayidx6, align 4, !tbaa !37
  %indvars.iv.next336 = add nuw nsw i64 %indvars.iv335, 1
  %arrayidx = getelementptr inbounds i16, i16* %1, i64 %indvars.iv.next336
  %6 = load i16, i16* %arrayidx, align 2, !tbaa !40
  %conv = sext i16 %6 to i64
  %7 = and i64 %conv, 4294967295
  %cmp = icmp eq i64 %indvars.iv.next336, %7
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !785

for.end:                                          ; preds = %for.body, %entry
  switch i32 %heutype, label %if.end192 [
    i32 1, label %if.then
    i32 2, label %if.then59
    i32 3, label %if.then109
  ]

if.then:                                          ; preds = %for.end
  %pl_window_start = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 29
  %8 = load i32, i32* %pl_window_start, align 8, !tbaa !113
  %pl_window_effective = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 30
  %cache_ci_senscr = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 15
  %sen2cimap33 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %md, i64 0, i32 12
  %phn_heur_list44 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 17
  %9 = load i32, i32* %pl_window_effective, align 4, !tbaa !786
  %cmp10297 = icmp slt i32 %8, %9
  br i1 %cmp10297, label %for.cond13.preheader.lr.ph, label %if.end192

for.cond13.preheader.lr.ph:                       ; preds = %if.then
  %10 = sext i32 %8 to i64
  br label %for.cond13.preheader

for.cond13.preheader:                             ; preds = %for.cond13.preheader.lr.ph, %for.inc54
  %11 = phi i32 [ %9, %for.cond13.preheader.lr.ph ], [ %22, %for.inc54 ]
  %indvars.iv324 = phi i64 [ %10, %for.cond13.preheader.lr.ph ], [ %indvars.iv.next325, %for.inc54 ]
  br i1 %cmp319, label %for.body20.lr.ph, label %for.inc54

for.body20.lr.ph:                                 ; preds = %for.cond13.preheader
  %12 = load i32**, i32*** %cache_ci_senscr, align 8, !tbaa !117
  %arrayidx22 = getelementptr inbounds i32*, i32** %12, i64 %indvars.iv324
  %13 = load i32*, i32** %arrayidx22, align 8, !tbaa !74
  %14 = load i8*, i8** %sen2cimap33, align 8, !tbaa !348
  br label %for.body20

for.body20:                                       ; preds = %for.body20.lr.ph, %for.inc51
  %indvars.iv = phi i64 [ 0, %for.body20.lr.ph ], [ %indvars.iv.next, %for.inc51 ]
  %curFrmPhnVar.0295 = phi i32 [ -2147483648, %for.body20.lr.ph ], [ %curFrmPhnVar.2, %for.inc51 ]
  %arrayidx24 = getelementptr inbounds i32, i32* %13, i64 %indvars.iv
  %15 = load i32, i32* %arrayidx24, align 4, !tbaa !37
  %cmp25 = icmp slt i32 %curFrmPhnVar.0295, %15
  %spec.select = select i1 %cmp25, i32 %15, i32 %curFrmPhnVar.0295
  %arrayidx35 = getelementptr inbounds i8, i8* %14, i64 %indvars.iv
  %16 = load i8, i8* %arrayidx35, align 1, !tbaa !63
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx39 = getelementptr inbounds i8, i8* %14, i64 %indvars.iv.next
  %17 = load i8, i8* %arrayidx39, align 1, !tbaa !63
  %cmp41.not = icmp eq i8 %16, %17
  br i1 %cmp41.not, label %for.inc51, label %if.then43

if.then43:                                        ; preds = %for.body20
  %18 = load i32*, i32** %phn_heur_list44, align 8, !tbaa !119
  %idxprom45 = sext i8 %16 to i64
  %arrayidx46 = getelementptr inbounds i32, i32* %18, i64 %idxprom45
  %19 = load i32, i32* %arrayidx46, align 4, !tbaa !37
  %call = tail call fastcc i32 @NO_UFLOW_ADD.868(i32 %19, i32 %spec.select) #36
  store i32 %call, i32* %arrayidx46, align 4, !tbaa !37
  br label %for.inc51

for.inc51:                                        ; preds = %for.body20, %if.then43
  %curFrmPhnVar.2 = phi i32 [ -2147483648, %if.then43 ], [ %spec.select, %for.body20 ]
  %arrayidx16 = getelementptr inbounds i16, i16* %1, i64 %indvars.iv.next
  %20 = load i16, i16* %arrayidx16, align 2, !tbaa !40
  %conv17 = sext i16 %20 to i64
  %21 = and i64 %conv17, 4294967295
  %cmp18 = icmp eq i64 %indvars.iv.next, %21
  br i1 %cmp18, label %for.body20, label %for.inc54.loopexit, !llvm.loop !787

for.inc54.loopexit:                               ; preds = %for.inc51
  %.pre338 = load i32, i32* %pl_window_effective, align 4, !tbaa !786
  br label %for.inc54

for.inc54:                                        ; preds = %for.inc54.loopexit, %for.cond13.preheader
  %22 = phi i32 [ %.pre338, %for.inc54.loopexit ], [ %11, %for.cond13.preheader ]
  %indvars.iv.next325 = add nsw i64 %indvars.iv324, 1
  %23 = sext i32 %22 to i64
  %cmp10 = icmp slt i64 %indvars.iv.next325, %23
  br i1 %cmp10, label %for.cond13.preheader, label %if.end192, !llvm.loop !788

if.then59:                                        ; preds = %for.end
  %pl_window_start60 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 29
  %24 = load i32, i32* %pl_window_start60, align 8, !tbaa !113
  %pl_window_effective62 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 30
  %cache_ci_senscr74 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 15
  %sen2cimap80 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %md, i64 0, i32 12
  %phn_heur_list92 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 17
  %25 = load i32, i32* %pl_window_effective62, align 4, !tbaa !786
  %cmp63304 = icmp slt i32 %24, %25
  br i1 %cmp63304, label %for.cond66.preheader.lr.ph, label %if.end192

for.cond66.preheader.lr.ph:                       ; preds = %if.then59
  %26 = sext i32 %24 to i64
  br label %for.cond66.preheader

for.cond66.preheader:                             ; preds = %for.cond66.preheader.lr.ph, %for.inc103
  %27 = phi i32 [ %25, %for.cond66.preheader.lr.ph ], [ %38, %for.inc103 ]
  %indvars.iv328 = phi i64 [ %26, %for.cond66.preheader.lr.ph ], [ %indvars.iv.next329, %for.inc103 ]
  br i1 %cmp319, label %for.body73.lr.ph, label %for.inc103

for.body73.lr.ph:                                 ; preds = %for.cond66.preheader
  %28 = load i32**, i32*** %cache_ci_senscr74, align 8, !tbaa !117
  %arrayidx76 = getelementptr inbounds i32*, i32** %28, i64 %indvars.iv328
  %29 = load i32*, i32** %arrayidx76, align 8, !tbaa !74
  %30 = load i8*, i8** %sen2cimap80, align 8, !tbaa !348
  br label %for.body73

for.body73:                                       ; preds = %for.body73.lr.ph, %for.inc100
  %indvars.iv326 = phi i64 [ 0, %for.body73.lr.ph ], [ %indvars.iv.next327, %for.inc100 ]
  %curFrmPhnVar.3302 = phi i32 [ -2147483648, %for.body73.lr.ph ], [ %curFrmPhnVar.4, %for.inc100 ]
  %arrayidx78 = getelementptr inbounds i32, i32* %29, i64 %indvars.iv326
  %31 = load i32, i32* %arrayidx78, align 4, !tbaa !37
  %call79 = tail call fastcc i32 @NO_UFLOW_ADD.868(i32 %31, i32 %curFrmPhnVar.3302) #36
  %arrayidx82 = getelementptr inbounds i8, i8* %30, i64 %indvars.iv326
  %32 = load i8, i8* %arrayidx82, align 1, !tbaa !63
  %indvars.iv.next327 = add nuw nsw i64 %indvars.iv326, 1
  %arrayidx87 = getelementptr inbounds i8, i8* %30, i64 %indvars.iv.next327
  %33 = load i8, i8* %arrayidx87, align 1, !tbaa !63
  %cmp89.not = icmp eq i8 %32, %33
  br i1 %cmp89.not, label %for.inc100, label %if.then91

if.then91:                                        ; preds = %for.body73
  %div = sdiv i32 %call79, %0
  %34 = load i32*, i32** %phn_heur_list92, align 8, !tbaa !119
  %idxprom93 = sext i8 %32 to i64
  %arrayidx94 = getelementptr inbounds i32, i32* %34, i64 %idxprom93
  %35 = load i32, i32* %arrayidx94, align 4, !tbaa !37
  %call95 = tail call fastcc i32 @NO_UFLOW_ADD.868(i32 %35, i32 %div) #36
  store i32 %call95, i32* %arrayidx94, align 4, !tbaa !37
  br label %for.inc100

for.inc100:                                       ; preds = %for.body73, %if.then91
  %curFrmPhnVar.4 = phi i32 [ -2147483648, %if.then91 ], [ %call79, %for.body73 ]
  %arrayidx69 = getelementptr inbounds i16, i16* %1, i64 %indvars.iv.next327
  %36 = load i16, i16* %arrayidx69, align 2, !tbaa !40
  %conv70 = sext i16 %36 to i64
  %37 = and i64 %conv70, 4294967295
  %cmp71 = icmp eq i64 %indvars.iv.next327, %37
  br i1 %cmp71, label %for.body73, label %for.inc103.loopexit, !llvm.loop !789

for.inc103.loopexit:                              ; preds = %for.inc100
  %.pre337 = load i32, i32* %pl_window_effective62, align 4, !tbaa !786
  br label %for.inc103

for.inc103:                                       ; preds = %for.inc103.loopexit, %for.cond66.preheader
  %38 = phi i32 [ %.pre337, %for.inc103.loopexit ], [ %27, %for.cond66.preheader ]
  %indvars.iv.next329 = add nsw i64 %indvars.iv328, 1
  %39 = sext i32 %38 to i64
  %cmp63 = icmp slt i64 %indvars.iv.next329, %39
  br i1 %cmp63, label %for.cond66.preheader, label %if.end192, !llvm.loop !790

if.then109:                                       ; preds = %for.end
  %pl_window_start110 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 29
  %40 = load i32, i32* %pl_window_start110, align 8, !tbaa !113
  %pl_window_effective112 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 30
  %sen2cimap126 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %md, i64 0, i32 12
  %phn_heur_list133 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 17
  %cache_ci_senscr136 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 15
  %41 = load i32, i32* %pl_window_effective112, align 4, !tbaa !786
  %cmp113316 = icmp slt i32 %40, %41
  br i1 %cmp113316, label %for.cond116.preheader.lr.ph, label %if.end192

for.cond116.preheader.lr.ph:                      ; preds = %if.then109
  %42 = sext i32 %40 to i64
  br label %for.cond116.preheader

for.cond116.preheader:                            ; preds = %for.cond116.preheader.lr.ph, %for.inc187
  %43 = phi i32 [ %41, %for.cond116.preheader.lr.ph ], [ %59, %for.inc187 ]
  %indvars.iv333 = phi i64 [ %42, %for.cond116.preheader.lr.ph ], [ %indvars.iv.next334, %for.inc187 ]
  br i1 %cmp319, label %for.body123.lr.ph, label %for.inc187

for.body123.lr.ph:                                ; preds = %for.cond116.preheader
  %44 = load i8*, i8** %sen2cimap126, align 8, !tbaa !348
  %45 = load i32**, i32*** %cache_ci_senscr136, align 8, !tbaa !117
  %arrayidx152 = getelementptr inbounds i32*, i32** %45, i64 %indvars.iv333
  %46 = load i32*, i32** %arrayidx152, align 8, !tbaa !74
  br label %for.body123

for.body123:                                      ; preds = %for.body123.lr.ph, %for.inc184
  %indvars.iv330 = phi i64 [ 0, %for.body123.lr.ph ], [ %indvars.iv.next331, %for.inc184 ]
  %curFrmPhnVar.5313 = phi i32 [ -2147483648, %for.body123.lr.ph ], [ %curFrmPhnVar.7, %for.inc184 ]
  %curPhn.0311 = phi i32 [ 0, %for.body123.lr.ph ], [ %conv149, %for.inc184 ]
  %cmp124 = icmp eq i32 %curPhn.0311, 0
  br i1 %cmp124, label %if.then132, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body123
  %47 = add nsw i64 %indvars.iv330, -1
  %arrayidx128 = getelementptr inbounds i8, i8* %44, i64 %47
  %48 = load i8, i8* %arrayidx128, align 1, !tbaa !63
  %conv129 = sext i8 %48 to i32
  %cmp130.not = icmp eq i32 %curPhn.0311, %conv129
  br i1 %cmp130.not, label %if.end145, label %if.then132

if.then132:                                       ; preds = %lor.lhs.false, %for.body123
  %49 = load i32*, i32** %phn_heur_list133, align 8, !tbaa !119
  %idxprom134 = sext i32 %curPhn.0311 to i64
  %arrayidx135 = getelementptr inbounds i32, i32* %49, i64 %idxprom134
  %50 = load i32, i32* %arrayidx135, align 4, !tbaa !37
  %arrayidx140 = getelementptr inbounds i32, i32* %46, i64 %indvars.iv330
  %51 = load i32, i32* %arrayidx140, align 4, !tbaa !37
  %call141 = tail call fastcc i32 @NO_UFLOW_ADD.868(i32 %50, i32 %51) #36
  store i32 %call141, i32* %arrayidx135, align 4, !tbaa !37
  br label %if.end145

if.end145:                                        ; preds = %if.then132, %lor.lhs.false
  %arrayidx148 = getelementptr inbounds i8, i8* %44, i64 %indvars.iv330
  %52 = load i8, i8* %arrayidx148, align 1, !tbaa !63
  %conv149 = sext i8 %52 to i32
  %arrayidx154 = getelementptr inbounds i32, i32* %46, i64 %indvars.iv330
  %53 = load i32, i32* %arrayidx154, align 4, !tbaa !37
  %cmp155 = icmp slt i32 %curFrmPhnVar.5313, %53
  %spec.select289 = select i1 %cmp155, i32 %53, i32 %curFrmPhnVar.5313
  %indvars.iv.next331 = add nuw nsw i64 %indvars.iv330, 1
  %arrayidx171 = getelementptr inbounds i8, i8* %44, i64 %indvars.iv.next331
  %54 = load i8, i8* %arrayidx171, align 1, !tbaa !63
  %cmp173.not = icmp eq i8 %52, %54
  br i1 %cmp173.not, label %for.inc184, label %if.then175

if.then175:                                       ; preds = %if.end145
  %55 = load i32*, i32** %phn_heur_list133, align 8, !tbaa !119
  %idxprom177 = sext i8 %52 to i64
  %arrayidx178 = getelementptr inbounds i32, i32* %55, i64 %idxprom177
  %56 = load i32, i32* %arrayidx178, align 4, !tbaa !37
  %call179 = tail call fastcc i32 @NO_UFLOW_ADD.868(i32 %56, i32 %spec.select289) #36
  store i32 %call179, i32* %arrayidx178, align 4, !tbaa !37
  br label %for.inc184

for.inc184:                                       ; preds = %if.end145, %if.then175
  %curFrmPhnVar.7 = phi i32 [ -2147483648, %if.then175 ], [ %spec.select289, %if.end145 ]
  %arrayidx119 = getelementptr inbounds i16, i16* %1, i64 %indvars.iv.next331
  %57 = load i16, i16* %arrayidx119, align 2, !tbaa !40
  %conv120 = sext i16 %57 to i64
  %58 = and i64 %conv120, 4294967295
  %cmp121 = icmp eq i64 %indvars.iv.next331, %58
  br i1 %cmp121, label %for.body123, label %for.inc187.loopexit, !llvm.loop !791

for.inc187.loopexit:                              ; preds = %for.inc184
  %.pre = load i32, i32* %pl_window_effective112, align 4, !tbaa !786
  br label %for.inc187

for.inc187:                                       ; preds = %for.inc187.loopexit, %for.cond116.preheader
  %59 = phi i32 [ %.pre, %for.inc187.loopexit ], [ %43, %for.cond116.preheader ]
  %indvars.iv.next334 = add nsw i64 %indvars.iv333, 1
  %60 = sext i32 %59 to i64
  %cmp113 = icmp slt i64 %indvars.iv.next334, %60
  br i1 %cmp113, label %for.cond116.preheader, label %if.end192, !llvm.loop !792

if.end192:                                        ; preds = %for.inc187, %for.inc103, %for.inc54, %if.then109, %if.then59, %if.then, %for.end
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn
define internal fastcc i32 @NO_UFLOW_ADD.868(i32 %a, i32 %b) unnamed_addr #28 {
entry:
  %add = add nsw i32 %b, %a
  %cmp = icmp sgt i32 %add, 0
  %cmp1 = icmp slt i32 %a, 0
  %or.cond = and i1 %cmp1, %cmp
  %cmp3 = icmp slt i32 %b, 0
  %or.cond4 = select i1 %or.cond, i1 %cmp3, i1 false
  %cond = select i1 %or.cond4, i32 -2147483648, i32 %add
  ret i32 %cond
}

; Function Attrs: noinline nounwind optsize uwtable
define void @utt_decode_block(float*** nocapture readonly %block_feat, i32 %block_nfeatvec, i32* nocapture %curfrm, %struct.kb_t* %kb, i32 %maxwpf, i32 %maxhistpf, i32 %maxhmmpf, i32 %ptranskip, %struct._IO_FILE* %hmmdumpfp) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64.869, i64 0, i64 0)) #34
  %0 = bitcast i8* %call to i32*
  %1 = load i32, i32* %0, align 4, !tbaa !37
  %kbcore1 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 0
  %2 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore1, align 8, !tbaa !8
  %mdef2 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %2, i64 0, i32 1
  %3 = load %struct.mdef_t*, %struct.mdef_t** %mdef2, align 8, !tbaa !14
  %dict3 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %2, i64 0, i32 2
  %4 = load %struct.dict_t*, %struct.dict_t** %dict3, align 8, !tbaa !16
  %dict2pid = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %2, i64 0, i32 3
  %5 = load %struct.dict2pid_t*, %struct.dict2pid_t** %dict2pid, align 8, !tbaa !19
  %mgau4 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %2, i64 0, i32 8
  %6 = load %struct.mgau_model_t*, %struct.mgau_model_t** %mgau4, align 8, !tbaa !91
  %svq5 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %2, i64 0, i32 9
  %7 = load %struct.subvq_t*, %struct.subvq_t** %svq5, align 8, !tbaa !378
  %gs6 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %2, i64 0, i32 10
  %8 = load %struct.gs_s*, %struct.gs_s** %gs6, align 8, !tbaa !107
  %9 = load i32, i32* %curfrm, align 4, !tbaa !37
  %hmm_hist_bins = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 38
  %10 = load i32, i32* %hmm_hist_bins, align 8, !tbaa !125
  %cmp788 = icmp sgt i32 %10, 0
  br i1 %cmp788, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %hmm_hist = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 37
  %11 = load i32*, i32** %hmm_hist, align 8, !tbaa !126
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv816 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next817, %for.body ]
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %indvars.iv816
  store i32 0, i32* %arrayidx, align 4, !tbaa !37
  %indvars.iv.next817 = add nuw nsw i64 %indvars.iv816, 1
  %12 = load i32, i32* %hmm_hist_bins, align 8, !tbaa !125
  %13 = sext i32 %12 to i64
  %cmp = icmp slt i64 %indvars.iv.next817, %13
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !793

for.end:                                          ; preds = %for.body, %entry
  %tm_sen = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 40
  tail call void @ptmr_start(%struct.ptmr_t* nonnull %tm_sen) #34
  %pl_window = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 28
  %14 = load i32, i32* %pl_window, align 4, !tbaa !112
  %cmp7 = icmp sgt i32 %14, %block_nfeatvec
  %block_nfeatvec. = select i1 %cmp7, i32 %block_nfeatvec, i32 %14
  %pl_window_effective = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 30
  store i32 %block_nfeatvec., i32* %pl_window_effective, align 4, !tbaa !786
  %pl_window_start = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 29
  store i32 0, i32* %pl_window_start, align 8, !tbaa !113
  %cache_best_list = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 16
  %cache_ci_senscr = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 15
  %cd2cisen = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %3, i64 0, i32 11
  %cmp11786 = icmp sgt i32 %block_nfeatvec., 0
  br i1 %cmp11786, label %for.body12, label %for.end49

for.body12:                                       ; preds = %for.end, %for.inc47
  %indvars.iv814 = phi i64 [ %indvars.iv.next815, %for.inc47 ], [ 0, %for.end ]
  %15 = load i32*, i32** %cache_best_list, align 8, !tbaa !118
  %arrayidx14 = getelementptr inbounds i32, i32* %15, i64 %indvars.iv814
  store i32 -2147483648, i32* %arrayidx14, align 4, !tbaa !37
  %arrayidx16 = getelementptr inbounds float**, float*** %block_feat, i64 %indvars.iv814
  %16 = load float**, float*** %arrayidx16, align 8, !tbaa !74
  %17 = load float*, float** %16, align 8, !tbaa !74
  %18 = load i32**, i32*** %cache_ci_senscr, align 8, !tbaa !117
  %arrayidx19 = getelementptr inbounds i32*, i32** %18, i64 %indvars.iv814
  %19 = load i32*, i32** %arrayidx19, align 8, !tbaa !74
  tail call void @approx_cont_mgau_ci_eval(%struct.mgau_model_t* %6, float* %17, i32* %19, %struct.kb_t* nonnull %kb) #34
  %20 = load i16*, i16** %cd2cisen, align 8, !tbaa !115
  %21 = load i16, i16* %20, align 2, !tbaa !40
  %cmp23783 = icmp eq i16 %21, 0
  br i1 %cmp23783, label %for.body25.lr.ph, label %for.inc47

for.body25.lr.ph:                                 ; preds = %for.body12
  %22 = load i32**, i32*** %cache_ci_senscr, align 8, !tbaa !117
  %arrayidx28 = getelementptr inbounds i32*, i32** %22, i64 %indvars.iv814
  %23 = load i32*, i32** %arrayidx28, align 8, !tbaa !74
  %24 = load i32*, i32** %cache_best_list, align 8, !tbaa !118
  %arrayidx33 = getelementptr inbounds i32, i32* %24, i64 %indvars.iv814
  %.pre = load i32, i32* %arrayidx33, align 4, !tbaa !37
  br label %for.body25

for.body25:                                       ; preds = %for.body25.lr.ph, %for.inc44
  %25 = phi i32 [ %.pre, %for.body25.lr.ph ], [ %27, %for.inc44 ]
  %indvars.iv812 = phi i64 [ 0, %for.body25.lr.ph ], [ %indvars.iv.next813, %for.inc44 ]
  %arrayidx30 = getelementptr inbounds i32, i32* %23, i64 %indvars.iv812
  %26 = load i32, i32* %arrayidx30, align 4, !tbaa !37
  %cmp34 = icmp sgt i32 %26, %25
  br i1 %cmp34, label %if.then, label %for.inc44

if.then:                                          ; preds = %for.body25
  store i32 %26, i32* %arrayidx33, align 4, !tbaa !37
  br label %for.inc44

for.inc44:                                        ; preds = %for.body25, %if.then
  %27 = phi i32 [ %25, %for.body25 ], [ %26, %if.then ]
  %indvars.iv.next813 = add nuw nsw i64 %indvars.iv812, 1
  %arrayidx22 = getelementptr inbounds i16, i16* %20, i64 %indvars.iv.next813
  %28 = load i16, i16* %arrayidx22, align 2, !tbaa !40
  %conv = sext i16 %28 to i64
  %29 = and i64 %conv, 4294967295
  %cmp23 = icmp eq i64 %indvars.iv.next813, %29
  br i1 %cmp23, label %for.body25, label %for.inc47, !llvm.loop !794

for.inc47:                                        ; preds = %for.inc44, %for.body12
  %indvars.iv.next815 = add nuw nsw i64 %indvars.iv814, 1
  %30 = load i32, i32* %pl_window_effective, align 4, !tbaa !786
  %31 = sext i32 %30 to i64
  %cmp11 = icmp slt i64 %indvars.iv.next815, %31
  br i1 %cmp11, label %for.body12, label %for.end49, !llvm.loop !795

for.end49:                                        ; preds = %for.inc47, %for.end
  tail call void @ptmr_stop(%struct.ptmr_t* nonnull %tm_sen) #34
  %sen_active = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 11
  %ssid_active = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 9
  %32 = bitcast i32** %ssid_active to i8**
  %n_sseq = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %3, i64 0, i32 10
  %comssid_active = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 10
  %33 = bitcast i32** %comssid_active to i8**
  %n_comsseq = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %5, i64 0, i32 7
  %n_lextree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 1
  %fillertree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 4
  %ugtree = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 2
  %34 = bitcast i32** %sen_active to i8**
  %n_sen = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %3, i64 0, i32 4
  %beam = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 22
  %ascr = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 21
  %frm_sen_eval = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %6, i64 0, i32 5
  %utt_sen_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 35
  %frm_gau_eval = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %6, i64 0, i32 6
  %utt_gau_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 36
  %tm_srch = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 41
  %cmp104.not = icmp eq i32 %1, 0
  %cmp129.not = icmp eq %struct._IO_FILE* %hmmdumpfp, null
  %hmm_hist157 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 37
  %hmm_hist_binsize = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 39
  %shr = ashr i32 %maxhmmpf, 1
  %add161 = add nsw i32 %shr, %maxhmmpf
  %cmp197745 = icmp sgt i32 %maxhmmpf, 0
  %bestscore = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 19
  %bestwordscore = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 20
  %cmp239 = icmp eq i32 %ptranskip, 0
  %vithist291 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 6
  %phn_heur_list292 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 17
  %pl_beam293 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 31
  %cmp52772 = icmp sgt i32 %block_nfeatvec, 0
  br i1 %cmp52772, label %for.body54.preheader, label %for.end410

for.body54.preheader:                             ; preds = %for.end49
  %wide.trip.count = zext i32 %block_nfeatvec to i64
  br label %for.body54

for.body54:                                       ; preds = %for.body54.preheader, %if.end403
  %indvars.iv810 = phi i64 [ 0, %for.body54.preheader ], [ %indvars.iv.next811, %if.end403 ]
  %frmno.0776 = phi i32 [ %9, %for.body54.preheader ], [ %inc409, %if.end403 ]
  %n_hmm_eval.0775 = phi i32 [ 0, %for.body54.preheader ], [ %n_hmm_eval.1.lcssa825, %if.end403 ]
  tail call void @ptmr_start(%struct.ptmr_t* nonnull %tm_sen) #34
  %35 = load i32*, i32** %sen_active, align 8, !tbaa !50
  %tobool.not = icmp eq i32* %35, null
  br i1 %tobool.not, label %if.end88, label %if.then56

if.then56:                                        ; preds = %for.body54
  %36 = load i8*, i8** %32, align 8, !tbaa !53
  %37 = load i32, i32* %n_sseq, align 8, !tbaa !52
  %conv57 = sext i32 %37 to i64
  %mul = shl nsw i64 %conv57, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 0, i64 %mul, i1 false)
  %38 = load i8*, i8** %33, align 8, !tbaa !56
  %39 = load i32, i32* %n_comsseq, align 4, !tbaa !54
  %conv58 = sext i32 %39 to i64
  %mul59 = shl nsw i64 %conv58, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 %mul59, i1 false)
  %40 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %shl725 = shl i32 %40, 1
  %cmp61726 = icmp sgt i32 %shl725, 0
  br i1 %cmp61726, label %for.body63, label %for.end80

for.body63:                                       ; preds = %if.then56, %cond.end74
  %indvars.iv = phi i64 [ %indvars.iv.next, %cond.end74 ], [ 0, %if.then56 ]
  %41 = phi i32 [ %48, %cond.end74 ], [ %40, %if.then56 ]
  %42 = sext i32 %41 to i64
  %cmp65 = icmp slt i64 %indvars.iv, %42
  br i1 %cmp65, label %cond.true67, label %cond.false70

cond.true67:                                      ; preds = %for.body63
  %43 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree, align 8, !tbaa !70
  %arrayidx69 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %43, i64 %indvars.iv
  br label %cond.end74

cond.false70:                                     ; preds = %for.body63
  %44 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %45 = trunc i64 %indvars.iv to i32
  %sub = sub nsw i32 %45, %41
  %idxprom72 = sext i32 %sub to i64
  %arrayidx73 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %44, i64 %idxprom72
  br label %cond.end74

cond.end74:                                       ; preds = %cond.false70, %cond.true67
  %cond75.in = phi %struct.lextree_t** [ %arrayidx69, %cond.true67 ], [ %arrayidx73, %cond.false70 ]
  %cond75 = load %struct.lextree_t*, %struct.lextree_t** %cond75.in, align 8, !tbaa !74
  %46 = load i32*, i32** %ssid_active, align 8, !tbaa !53
  %47 = load i32*, i32** %comssid_active, align 8, !tbaa !56
  tail call void @lextree_ssid_active(%struct.lextree_t* %cond75, i32* %46, i32* %47) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %48 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %shl = shl i32 %48, 1
  %49 = sext i32 %shl to i64
  %cmp61 = icmp slt i64 %indvars.iv.next, %49
  br i1 %cmp61, label %for.body63, label %for.end80, !llvm.loop !796

for.end80:                                        ; preds = %cond.end74, %if.then56
  %50 = load i8*, i8** %34, align 8, !tbaa !50
  %51 = load i32, i32* %n_sen, align 8, !tbaa !49
  %conv82 = sext i32 %51 to i64
  %mul83 = shl nsw i64 %conv82, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 %mul83, i1 false)
  %52 = load i32*, i32** %ssid_active, align 8, !tbaa !53
  %53 = load i32*, i32** %sen_active, align 8, !tbaa !50
  tail call void @mdef_sseq2sen_active(%struct.mdef_t* %3, i32* %52, i32* %53) #34
  %54 = load i32*, i32** %comssid_active, align 8, !tbaa !56
  %55 = load i32*, i32** %sen_active, align 8, !tbaa !50
  tail call void @dict2pid_comsseq2sen_active(%struct.dict2pid_t* %5, %struct.mdef_t* %3, i32* %54, i32* %55) #34
  %.pre818 = load i32*, i32** %sen_active, align 8, !tbaa !50
  br label %if.end88

if.end88:                                         ; preds = %for.end80, %for.body54
  %56 = phi i32* [ %.pre818, %for.end80 ], [ null, %for.body54 ]
  %57 = load %struct.beam_t*, %struct.beam_t** %beam, align 8, !tbaa !97
  %subvq = getelementptr inbounds %struct.beam_t, %struct.beam_t* %57, i64 0, i32 0
  %58 = load i32, i32* %subvq, align 4, !tbaa !102
  %arrayidx90 = getelementptr inbounds float**, float*** %block_feat, i64 %indvars.iv810
  %59 = load float**, float*** %arrayidx90, align 8, !tbaa !74
  %60 = load float*, float** %59, align 8, !tbaa !74
  %61 = load %struct.ascr_t*, %struct.ascr_t** %ascr, align 8, !tbaa !95
  %sen = getelementptr inbounds %struct.ascr_t, %struct.ascr_t* %61, i64 0, i32 0
  %62 = load i32*, i32** %sen, align 8, !tbaa !149
  %63 = load i32**, i32*** %cache_ci_senscr, align 8, !tbaa !117
  %64 = load i32, i32* %pl_window_start, align 8, !tbaa !113
  %idxprom95 = sext i32 %64 to i64
  %arrayidx96 = getelementptr inbounds i32*, i32** %63, i64 %idxprom95
  %65 = load i32*, i32** %arrayidx96, align 8, !tbaa !74
  %66 = trunc i64 %indvars.iv810 to i32
  %call97 = tail call i32 @approx_cont_mgau_frame_eval(%struct.mgau_model_t* %6, %struct.gs_s* %8, %struct.subvq_t* %7, i32 %58, float* %60, i32* %56, i32* %62, i32* %65, %struct.kb_t* nonnull %kb, i32 %66) #34
  %67 = load i32, i32* %frm_sen_eval, align 8, !tbaa !305
  %68 = load i32, i32* %utt_sen_eval, align 4, !tbaa !771
  %add = add nsw i32 %68, %67
  store i32 %add, i32* %utt_sen_eval, align 4, !tbaa !771
  %69 = load i32, i32* %frm_gau_eval, align 4, !tbaa !306
  %70 = load i32, i32* %utt_gau_eval, align 8, !tbaa !772
  %add98 = add nsw i32 %70, %69
  store i32 %add98, i32* %utt_gau_eval, align 8, !tbaa !772
  %71 = load %struct.dict2pid_t*, %struct.dict2pid_t** %dict2pid, align 8, !tbaa !19
  %72 = load %struct.ascr_t*, %struct.ascr_t** %ascr, align 8, !tbaa !95
  %sen101 = getelementptr inbounds %struct.ascr_t, %struct.ascr_t* %72, i64 0, i32 0
  %73 = load i32*, i32** %sen101, align 8, !tbaa !149
  %comsen = getelementptr inbounds %struct.ascr_t, %struct.ascr_t* %72, i64 0, i32 1
  %74 = load i32*, i32** %comsen, align 8, !tbaa !151
  tail call void @dict2pid_comsenscr(%struct.dict2pid_t* %71, i32* %73, i32* %74) #34
  tail call void @ptmr_stop(%struct.ptmr_t* nonnull %tm_sen) #34
  tail call void @ptmr_start(%struct.ptmr_t* nonnull %tm_srch) #34
  br i1 %cmp104.not, label %if.end107, label %if.then106

if.then106:                                       ; preds = %if.end88
  tail call void @computePhnHeur(%struct.mdef_t* %3, %struct.kb_t* nonnull %kb, i32 %1) #36
  br label %if.end107

if.end107:                                        ; preds = %if.then106, %if.end88
  %75 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %shl110729 = shl i32 %75, 1
  %cmp111730 = icmp sgt i32 %shl110729, 0
  br i1 %cmp111730, label %for.body113, label %if.end156

for.body113:                                      ; preds = %if.end107, %if.end133
  %indvars.iv793 = phi i64 [ %indvars.iv.next794, %if.end133 ], [ 0, %if.end107 ]
  %76 = phi i32 [ %87, %if.end133 ], [ %75, %if.end107 ]
  %besthmmscr.0737 = phi i32 [ %spec.select, %if.end133 ], [ -2147483648, %if.end107 ]
  %bestwordscr.0736 = phi i32 [ %bestwordscr.1, %if.end133 ], [ -2147483648, %if.end107 ]
  %frm_nhmm.0732 = phi i32 [ %add149, %if.end133 ], [ 0, %if.end107 ]
  %n_hmm_eval.1731 = phi i32 [ %add147, %if.end133 ], [ %n_hmm_eval.0775, %if.end107 ]
  %77 = sext i32 %76 to i64
  %cmp115 = icmp slt i64 %indvars.iv793, %77
  br i1 %cmp115, label %cond.true117, label %cond.false121

cond.true117:                                     ; preds = %for.body113
  %78 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree, align 8, !tbaa !70
  %arrayidx120 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %78, i64 %indvars.iv793
  br label %cond.end127

cond.false121:                                    ; preds = %for.body113
  %79 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %80 = trunc i64 %indvars.iv793 to i32
  %sub124 = sub nsw i32 %80, %76
  %idxprom125 = sext i32 %sub124 to i64
  %arrayidx126 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %79, i64 %idxprom125
  br label %cond.end127

cond.end127:                                      ; preds = %cond.false121, %cond.true117
  %cond128.in = phi %struct.lextree_t** [ %arrayidx120, %cond.true117 ], [ %arrayidx126, %cond.false121 ]
  %cond128 = load %struct.lextree_t*, %struct.lextree_t** %cond128.in, align 8, !tbaa !74
  br i1 %cmp129.not, label %if.end133, label %if.then131

if.then131:                                       ; preds = %cond.end127
  %n_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %cond128, i64 0, i32 7
  %81 = load i32, i32* %n_active, align 8, !tbaa !797
  %82 = trunc i64 %indvars.iv793 to i32
  %call132 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %hmmdumpfp, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.65.870, i64 0, i64 0), i32 %frmno.0776, i32 %82, i32 %81) #36
  br label %if.end133

if.end133:                                        ; preds = %if.then131, %cond.end127
  %83 = load %struct.ascr_t*, %struct.ascr_t** %ascr, align 8, !tbaa !95
  %call135 = tail call i32 @lextree_hmm_eval(%struct.lextree_t* %cond128, %struct.kbcore_t* %2, %struct.ascr_t* %83, i32 %frmno.0776, %struct._IO_FILE* %hmmdumpfp) #34
  %best = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %cond128, i64 0, i32 9
  %84 = load i32, i32* %best, align 8, !tbaa !798
  %cmp136 = icmp slt i32 %besthmmscr.0737, %84
  %spec.select = select i1 %cmp136, i32 %84, i32 %besthmmscr.0737
  %wbest = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %cond128, i64 0, i32 10
  %85 = load i32, i32* %wbest, align 4, !tbaa !799
  %cmp141 = icmp slt i32 %bestwordscr.0736, %85
  %bestwordscr.1 = select i1 %cmp141, i32 %85, i32 %bestwordscr.0736
  %n_active146 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %cond128, i64 0, i32 7
  %86 = load i32, i32* %n_active146, align 8, !tbaa !797
  %add147 = add nsw i32 %86, %n_hmm_eval.1731
  %add149 = add nsw i32 %86, %frm_nhmm.0732
  %indvars.iv.next794 = add nuw nsw i64 %indvars.iv793, 1
  %87 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %shl110 = shl i32 %87, 1
  %88 = sext i32 %shl110 to i64
  %cmp111 = icmp slt i64 %indvars.iv.next794, %88
  br i1 %cmp111, label %for.body113, label %for.end152, !llvm.loop !800

for.end152:                                       ; preds = %if.end133
  %cmp153 = icmp sgt i32 %spec.select, 0
  br i1 %cmp153, label %if.then155, label %if.end156

if.then155:                                       ; preds = %for.end152
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.815, i64 0, i64 0), i64 1041, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11.816, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.66.871, i64 0, i64 0), i32 %frmno.0776, i32 %spec.select) #34
  br label %if.end156

if.end156:                                        ; preds = %if.end107, %if.then155, %for.end152
  %besthmmscr.0.lcssa828 = phi i32 [ %spec.select, %if.then155 ], [ %spec.select, %for.end152 ], [ -2147483648, %if.end107 ]
  %bestwordscr.0.lcssa827 = phi i32 [ %bestwordscr.1, %if.then155 ], [ %bestwordscr.1, %for.end152 ], [ -2147483648, %if.end107 ]
  %frm_nhmm.0.lcssa826 = phi i32 [ %add149, %if.then155 ], [ %add149, %for.end152 ], [ 0, %if.end107 ]
  %n_hmm_eval.1.lcssa825 = phi i32 [ %add147, %if.then155 ], [ %add147, %for.end152 ], [ %n_hmm_eval.0775, %if.end107 ]
  %89 = load i32*, i32** %hmm_hist157, align 8, !tbaa !126
  %90 = load i32, i32* %hmm_hist_binsize, align 4, !tbaa !124
  %div = sdiv i32 %frm_nhmm.0.lcssa826, %90
  %idxprom158 = sext i32 %div to i64
  %arrayidx159 = getelementptr inbounds i32, i32* %89, i64 %idxprom158
  %91 = load i32, i32* %arrayidx159, align 4, !tbaa !37
  %inc160 = add nsw i32 %91, 1
  store i32 %inc160, i32* %arrayidx159, align 4, !tbaa !37
  %cmp162 = icmp sgt i32 %frm_nhmm.0.lcssa826, %add161
  %92 = load %struct.beam_t*, %struct.beam_t** %beam, align 8, !tbaa !97
  %hmm = getelementptr inbounds %struct.beam_t, %struct.beam_t* %92, i64 0, i32 1
  %93 = load i32, i32* %hmm, align 4, !tbaa !98
  br i1 %cmp162, label %if.then164, label %if.else

if.then164:                                       ; preds = %if.end156
  %div167 = sdiv i32 %93, -1000
  %call169 = tail call i8* @__ckd_calloc__(i64 1000, i64 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10.815, i64 0, i64 0), i32 1056) #34
  %94 = bitcast i8* %call169 to i32*
  %95 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %shl172741 = shl i32 %95, 1
  %cmp173742 = icmp sgt i32 %shl172741, 0
  br i1 %cmp173742, label %for.body175, label %for.cond194.preheader

for.cond194.preheader:                            ; preds = %cond.end189, %if.then164
  br i1 %cmp197745, label %for.inc200, label %for.end205

for.body175:                                      ; preds = %if.then164, %cond.end189
  %indvars.iv795 = phi i64 [ %indvars.iv.next796, %cond.end189 ], [ 0, %if.then164 ]
  %96 = phi i32 [ %101, %cond.end189 ], [ %95, %if.then164 ]
  %97 = sext i32 %96 to i64
  %cmp177 = icmp slt i64 %indvars.iv795, %97
  br i1 %cmp177, label %cond.true179, label %cond.false183

cond.true179:                                     ; preds = %for.body175
  %98 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree, align 8, !tbaa !70
  %arrayidx182 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %98, i64 %indvars.iv795
  br label %cond.end189

cond.false183:                                    ; preds = %for.body175
  %99 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %100 = trunc i64 %indvars.iv795 to i32
  %sub186 = sub nsw i32 %100, %96
  %idxprom187 = sext i32 %sub186 to i64
  %arrayidx188 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %99, i64 %idxprom187
  br label %cond.end189

cond.end189:                                      ; preds = %cond.false183, %cond.true179
  %cond190.in = phi %struct.lextree_t** [ %arrayidx182, %cond.true179 ], [ %arrayidx188, %cond.false183 ]
  %cond190 = load %struct.lextree_t*, %struct.lextree_t** %cond190.in, align 8, !tbaa !74
  tail call void @lextree_hmm_histbin(%struct.lextree_t* %cond190, i32 %besthmmscr.0.lcssa828, i32* %94, i32 1000, i32 %div167) #34
  %indvars.iv.next796 = add nuw nsw i64 %indvars.iv795, 1
  %101 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %shl172 = shl i32 %101, 1
  %102 = sext i32 %shl172 to i64
  %cmp173 = icmp slt i64 %indvars.iv.next796, %102
  br i1 %cmp173, label %for.body175, label %for.cond194.preheader, !llvm.loop !801

for.inc200:                                       ; preds = %for.cond194.preheader, %for.inc200
  %indvars.iv797 = phi i64 [ %indvars.iv.next798, %for.inc200 ], [ 0, %for.cond194.preheader ]
  %i.5747 = phi i32 [ %inc201, %for.inc200 ], [ 0, %for.cond194.preheader ]
  %j.0746 = phi i32 [ %add204, %for.inc200 ], [ 0, %for.cond194.preheader ]
  %indvars.iv.next798 = add nuw nsw i64 %indvars.iv797, 1
  %inc201 = add nuw nsw i32 %i.5747, 1
  %arrayidx203 = getelementptr inbounds i32, i32* %94, i64 %indvars.iv.next798
  %103 = load i32, i32* %arrayidx203, align 4, !tbaa !37
  %add204 = add nsw i32 %103, %j.0746
  %cmp195 = icmp ult i64 %indvars.iv797, 999
  %cmp197 = icmp slt i32 %add204, %maxhmmpf
  %104 = select i1 %cmp195, i1 %cmp197, i1 false
  br i1 %104, label %for.inc200, label %for.end205.loopexit, !llvm.loop !802

for.end205.loopexit:                              ; preds = %for.inc200
  %inc201.neg = xor i32 %i.5747, -1
  br label %for.end205

for.end205:                                       ; preds = %for.end205.loopexit, %for.cond194.preheader
  %i.5.lcssa.neg = phi i32 [ 0, %for.cond194.preheader ], [ %inc201.neg, %for.end205.loopexit ]
  tail call void @ckd_free(i8* %call169) #34
  %.neg = mul i32 %i.5.lcssa.neg, %div167
  %105 = load %struct.beam_t*, %struct.beam_t** %beam, align 8, !tbaa !97
  %ptrans = getelementptr inbounds %struct.beam_t, %struct.beam_t* %105, i64 0, i32 2
  %106 = load i32, i32* %ptrans, align 4, !tbaa !100
  %cmp209 = icmp slt i32 %106, %.neg
  %sub207. = select i1 %cmp209, i32 %.neg, i32 %106
  %word = getelementptr inbounds %struct.beam_t, %struct.beam_t* %105, i64 0, i32 3
  %107 = load i32, i32* %word, align 4, !tbaa !101
  %cmp218 = icmp slt i32 %107, %.neg
  %cond225 = select i1 %cmp218, i32 %.neg, i32 %107
  br label %if.end232

if.else:                                          ; preds = %if.end156
  %ptrans229 = getelementptr inbounds %struct.beam_t, %struct.beam_t* %92, i64 0, i32 2
  %108 = load i32, i32* %ptrans229, align 4, !tbaa !100
  %word231 = getelementptr inbounds %struct.beam_t, %struct.beam_t* %92, i64 0, i32 3
  %109 = load i32, i32* %word231, align 4, !tbaa !101
  br label %if.end232

if.end232:                                        ; preds = %for.end205, %if.else
  %hb.0 = phi i32 [ %93, %if.else ], [ %.neg, %for.end205 ]
  %pb.0 = phi i32 [ %108, %if.else ], [ %sub207., %for.end205 ]
  %wb.0 = phi i32 [ %109, %if.else ], [ %cond225, %for.end205 ]
  store i32 %besthmmscr.0.lcssa828, i32* %bestscore, align 4, !tbaa !781
  store i32 %bestwordscr.0.lcssa827, i32* %bestwordscore, align 8, !tbaa !803
  %add234 = add nsw i32 %hb.0, %besthmmscr.0.lcssa828
  %add236 = add nsw i32 %pb.0, %besthmmscr.0.lcssa828
  %add238 = add nsw i32 %wb.0, %bestwordscr.0.lcssa827
  %110 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %shl244753 = shl i32 %110, 1
  %cmp245754 = icmp sgt i32 %shl244753, 0
  br i1 %cmp239, label %for.cond242.preheader, label %for.cond267.preheader

for.cond267.preheader:                            ; preds = %if.end232
  br i1 %cmp245754, label %for.body272.lr.ph, label %if.end302

for.body272.lr.ph:                                ; preds = %for.cond267.preheader
  %rem = srem i32 %frmno.0776, %ptranskip
  %cmp288.not = icmp eq i32 %rem, 0
  br label %for.body272

for.cond242.preheader:                            ; preds = %if.end232
  br i1 %cmp245754, label %for.body247, label %if.end302

for.body247:                                      ; preds = %for.cond242.preheader, %cond.end261
  %indvars.iv802 = phi i64 [ %indvars.iv.next803, %cond.end261 ], [ 0, %for.cond242.preheader ]
  %111 = phi i32 [ %119, %cond.end261 ], [ %110, %for.cond242.preheader ]
  %112 = sext i32 %111 to i64
  %cmp249 = icmp slt i64 %indvars.iv802, %112
  br i1 %cmp249, label %cond.true251, label %cond.false255

cond.true251:                                     ; preds = %for.body247
  %113 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree, align 8, !tbaa !70
  %arrayidx254 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %113, i64 %indvars.iv802
  br label %cond.end261

cond.false255:                                    ; preds = %for.body247
  %114 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %115 = trunc i64 %indvars.iv802 to i32
  %sub258 = sub nsw i32 %115, %111
  %idxprom259 = sext i32 %sub258 to i64
  %arrayidx260 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %114, i64 %idxprom259
  br label %cond.end261

cond.end261:                                      ; preds = %cond.false255, %cond.true251
  %cond262.in = phi %struct.lextree_t** [ %arrayidx254, %cond.true251 ], [ %arrayidx260, %cond.false255 ]
  %cond262 = load %struct.lextree_t*, %struct.lextree_t** %cond262.in, align 8, !tbaa !74
  %116 = load %struct.vithist_t*, %struct.vithist_t** %vithist291, align 8, !tbaa !122
  %117 = load i32*, i32** %phn_heur_list292, align 8, !tbaa !119
  %118 = load i32, i32* %pl_beam293, align 8, !tbaa !114
  tail call void @lextree_hmm_propagate(%struct.lextree_t* %cond262, %struct.kbcore_t* %2, %struct.vithist_t* %116, i32 %frmno.0776, i32 %add234, i32 %add236, i32 %add238, i32* %117, i32 %118, i32 %1) #34
  %indvars.iv.next803 = add nuw nsw i64 %indvars.iv802, 1
  %119 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %shl244 = shl i32 %119, 1
  %120 = sext i32 %shl244 to i64
  %cmp245 = icmp slt i64 %indvars.iv.next803, %120
  br i1 %cmp245, label %for.body247, label %if.end302, !llvm.loop !804

for.body272:                                      ; preds = %for.body272.lr.ph, %cond.end286
  %indvars.iv800 = phi i64 [ 0, %for.body272.lr.ph ], [ %indvars.iv.next801, %cond.end286 ]
  %121 = phi i32 [ %110, %for.body272.lr.ph ], [ %129, %cond.end286 ]
  %122 = sext i32 %121 to i64
  %cmp274 = icmp slt i64 %indvars.iv800, %122
  br i1 %cmp274, label %cond.true276, label %cond.false280

cond.true276:                                     ; preds = %for.body272
  %123 = load %struct.lextree_t**, %struct.lextree_t*** %ugtree, align 8, !tbaa !70
  %arrayidx279 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %123, i64 %indvars.iv800
  br label %cond.end286

cond.false280:                                    ; preds = %for.body272
  %124 = load %struct.lextree_t**, %struct.lextree_t*** %fillertree, align 8, !tbaa !87
  %125 = trunc i64 %indvars.iv800 to i32
  %sub283 = sub nsw i32 %125, %121
  %idxprom284 = sext i32 %sub283 to i64
  %arrayidx285 = getelementptr inbounds %struct.lextree_t*, %struct.lextree_t** %124, i64 %idxprom284
  br label %cond.end286

cond.end286:                                      ; preds = %cond.false280, %cond.true276
  %cond287.in = phi %struct.lextree_t** [ %arrayidx279, %cond.true276 ], [ %arrayidx285, %cond.false280 ]
  %cond287 = load %struct.lextree_t*, %struct.lextree_t** %cond287.in, align 8, !tbaa !74
  %126 = load %struct.vithist_t*, %struct.vithist_t** %vithist291, align 8, !tbaa !122
  %127 = load i32*, i32** %phn_heur_list292, align 8, !tbaa !119
  %128 = load i32, i32* %pl_beam293, align 8, !tbaa !114
  %add238.add236 = select i1 %cmp288.not, i32 %add238, i32 %add236
  tail call void @lextree_hmm_propagate(%struct.lextree_t* %cond287, %struct.kbcore_t* %2, %struct.vithist_t* %126, i32 %frmno.0776, i32 %add234, i32 %add238.add236, i32 %add238, i32* %127, i32 %128, i32 %1) #34
  %indvars.iv.next801 = add nuw nsw i64 %indvars.iv800, 1
  %129 = load i32, i32* %n_lextree, align 8, !tbaa !68
  %shl269 = shl i32 %129, 1
  %130 = sext i32 %shl269 to i64
  %cmp270 = icmp slt i64 %indvars.iv.next801, %130
  br i1 %cmp270, label %for.body272, label %if.end302, !llvm.loop !805

if.end302:                                        ; preds = %cond.end286, %cond.end261, %for.cond267.preheader, %for.cond242.preheader
  %131 = load i32, i32* %pl_window_effective, align 4, !tbaa !786
  %sub304 = sub nsw i32 %block_nfeatvec, %131
  %132 = sext i32 %sub304 to i64
  %cmp305 = icmp slt i64 %indvars.iv810, %132
  br i1 %cmp305, label %for.cond308.preheader, label %if.else400

for.cond308.preheader:                            ; preds = %if.end302
  %cmp311763 = icmp sgt i32 %131, 1
  br i1 %cmp311763, label %for.body313.lr.ph, label %for.cond308.preheader.for.end345_crit_edge

for.cond308.preheader.for.end345_crit_edge:       ; preds = %for.cond308.preheader
  %sub310762 = add nsw i32 %131, -1
  %.pre819 = sext i32 %sub310762 to i64
  br label %for.end345

for.body313.lr.ph:                                ; preds = %for.cond308.preheader
  %133 = load i32*, i32** %cache_best_list, align 8, !tbaa !118
  %134 = load i16*, i16** %cd2cisen, align 8, !tbaa !115
  %135 = load i16, i16* %134, align 2, !tbaa !40
  %cmp326759 = icmp eq i16 %135, 0
  br label %for.body313

for.cond308.loopexit:                             ; preds = %for.body328, %for.body313
  %136 = load i32, i32* %pl_window_effective, align 4, !tbaa !786
  %sub310 = add nsw i32 %136, -1
  %137 = sext i32 %sub310 to i64
  %cmp311 = icmp slt i64 %indvars.iv.next807, %137
  br i1 %cmp311, label %for.body313, label %for.end345, !llvm.loop !806

for.body313:                                      ; preds = %for.body313.lr.ph, %for.cond308.loopexit
  %indvars.iv806 = phi i64 [ 0, %for.body313.lr.ph ], [ %indvars.iv.next807, %for.cond308.loopexit ]
  %indvars.iv.next807 = add nuw nsw i64 %indvars.iv806, 1
  %arrayidx317 = getelementptr inbounds i32, i32* %133, i64 %indvars.iv.next807
  %138 = load i32, i32* %arrayidx317, align 4, !tbaa !37
  %arrayidx320 = getelementptr inbounds i32, i32* %133, i64 %indvars.iv806
  store i32 %138, i32* %arrayidx320, align 4, !tbaa !37
  br i1 %cmp326759, label %for.body328.lr.ph, label %for.cond308.loopexit

for.body328.lr.ph:                                ; preds = %for.body313
  %139 = load i32**, i32*** %cache_ci_senscr, align 8, !tbaa !117
  %arrayidx332 = getelementptr inbounds i32*, i32** %139, i64 %indvars.iv.next807
  %140 = load i32*, i32** %arrayidx332, align 8, !tbaa !74
  %arrayidx337 = getelementptr inbounds i32*, i32** %139, i64 %indvars.iv806
  %141 = load i32*, i32** %arrayidx337, align 8, !tbaa !74
  br label %for.body328

for.body328:                                      ; preds = %for.body328.lr.ph, %for.body328
  %indvars.iv804 = phi i64 [ 0, %for.body328.lr.ph ], [ %indvars.iv.next805, %for.body328 ]
  %arrayidx334 = getelementptr inbounds i32, i32* %140, i64 %indvars.iv804
  %142 = load i32, i32* %arrayidx334, align 4, !tbaa !37
  %arrayidx339 = getelementptr inbounds i32, i32* %141, i64 %indvars.iv804
  store i32 %142, i32* %arrayidx339, align 4, !tbaa !37
  %indvars.iv.next805 = add nuw nsw i64 %indvars.iv804, 1
  %arrayidx324 = getelementptr inbounds i16, i16* %134, i64 %indvars.iv.next805
  %143 = load i16, i16* %arrayidx324, align 2, !tbaa !40
  %conv325 = sext i16 %143 to i64
  %144 = and i64 %conv325, 4294967295
  %cmp326 = icmp eq i64 %indvars.iv.next805, %144
  br i1 %cmp326, label %for.body328, label %for.cond308.loopexit, !llvm.loop !807

for.end345:                                       ; preds = %for.cond308.loopexit, %for.cond308.preheader.for.end345_crit_edge
  %idxprom354.pre-phi = phi i64 [ %.pre819, %for.cond308.preheader.for.end345_crit_edge ], [ %137, %for.cond308.loopexit ]
  %.lcssa = phi i32 [ %131, %for.cond308.preheader.for.end345_crit_edge ], [ %136, %for.cond308.loopexit ]
  %add347 = add nsw i32 %.lcssa, %66
  %idxprom348 = sext i32 %add347 to i64
  %arrayidx349 = getelementptr inbounds float**, float*** %block_feat, i64 %idxprom348
  %145 = load float**, float*** %arrayidx349, align 8, !tbaa !74
  %146 = load float*, float** %145, align 8, !tbaa !74
  %147 = load i32**, i32*** %cache_ci_senscr, align 8, !tbaa !117
  %arrayidx355 = getelementptr inbounds i32*, i32** %147, i64 %idxprom354.pre-phi
  %148 = load i32*, i32** %arrayidx355, align 8, !tbaa !74
  tail call void @approx_cont_mgau_ci_eval(%struct.mgau_model_t* %6, float* %146, i32* %148, %struct.kb_t* nonnull %kb) #34
  %149 = load i32*, i32** %cache_best_list, align 8, !tbaa !118
  %150 = load i32, i32* %pl_window_effective, align 4, !tbaa !786
  %sub358 = add nsw i32 %150, -1
  %idxprom359 = sext i32 %sub358 to i64
  %arrayidx360 = getelementptr inbounds i32, i32* %149, i64 %idxprom359
  store i32 -2147483648, i32* %arrayidx360, align 4, !tbaa !37
  %151 = load i16*, i16** %cd2cisen, align 8, !tbaa !115
  %152 = load i16, i16* %151, align 2, !tbaa !40
  %cmp366769 = icmp eq i16 %152, 0
  br i1 %cmp366769, label %for.body368.lr.ph, label %if.end403

for.body368.lr.ph:                                ; preds = %for.end345
  %153 = load i32**, i32*** %cache_ci_senscr, align 8, !tbaa !117
  br label %for.body368

for.body368:                                      ; preds = %for.body368.lr.ph, %for.inc397
  %indvars.iv808 = phi i64 [ 0, %for.body368.lr.ph ], [ %indvars.iv.next809, %for.inc397 ]
  %154 = load i32, i32* %pl_window_effective, align 4, !tbaa !786
  %sub371 = add nsw i32 %154, -1
  %idxprom372 = sext i32 %sub371 to i64
  %arrayidx373 = getelementptr inbounds i32*, i32** %153, i64 %idxprom372
  %155 = load i32*, i32** %arrayidx373, align 8, !tbaa !74
  %arrayidx375 = getelementptr inbounds i32, i32* %155, i64 %indvars.iv808
  %156 = load i32, i32* %arrayidx375, align 4, !tbaa !37
  %arrayidx380 = getelementptr inbounds i32, i32* %149, i64 %idxprom372
  %157 = load i32, i32* %arrayidx380, align 4, !tbaa !37
  %cmp381 = icmp sgt i32 %156, %157
  br i1 %cmp381, label %if.then383, label %for.inc397

if.then383:                                       ; preds = %for.body368
  store i32 %156, i32* %arrayidx380, align 4, !tbaa !37
  br label %for.inc397

for.inc397:                                       ; preds = %for.body368, %if.then383
  %indvars.iv.next809 = add nuw nsw i64 %indvars.iv808, 1
  %arrayidx364 = getelementptr inbounds i16, i16* %151, i64 %indvars.iv.next809
  %158 = load i16, i16* %arrayidx364, align 2, !tbaa !40
  %conv365 = sext i16 %158 to i64
  %159 = and i64 %conv365, 4294967295
  %cmp366 = icmp eq i64 %indvars.iv.next809, %159
  br i1 %cmp366, label %for.body368, label %if.end403, !llvm.loop !808

if.else400:                                       ; preds = %if.end302
  %160 = load i32, i32* %pl_window_start, align 8, !tbaa !113
  %inc402 = add nsw i32 %160, 1
  store i32 %inc402, i32* %pl_window_start, align 8, !tbaa !113
  br label %if.end403

if.end403:                                        ; preds = %for.inc397, %for.end345, %if.else400
  %161 = load %struct.vithist_t*, %struct.vithist_t** %vithist291, align 8, !tbaa !122
  tail call void @vithist_prune(%struct.vithist_t* %161, %struct.dict_t* %4, i32 %frmno.0776, i32 %maxwpf, i32 %maxhistpf, i32 %wb.0) #34
  tail call void @utt_word_trans(%struct.kb_t* nonnull %kb, i32 %frmno.0776) #36
  %162 = load %struct.vithist_t*, %struct.vithist_t** %vithist291, align 8, !tbaa !122
  tail call void @vithist_frame_windup(%struct.vithist_t* %162, i32 %frmno.0776, %struct._IO_FILE* null, %struct.kbcore_t* %2) #34
  tail call void @kb_lextree_active_swap(%struct.kb_t* nonnull %kb) #34
  tail call void @ptmr_stop(%struct.ptmr_t* nonnull %tm_srch) #34
  %indvars.iv.next811 = add nuw nsw i64 %indvars.iv810, 1
  %inc409 = add nsw i32 %frmno.0776, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next811, %wide.trip.count
  br i1 %exitcond.not, label %for.end410, label %for.body54, !llvm.loop !809

for.end410:                                       ; preds = %if.end403, %for.end49
  %n_hmm_eval.0.lcssa = phi i32 [ 0, %for.end49 ], [ %n_hmm_eval.1.lcssa825, %if.end403 ]
  %frmno.0.lcssa = phi i32 [ %9, %for.end49 ], [ %inc409, %if.end403 ]
  %utt_hmm_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 34
  %163 = load i32, i32* %utt_hmm_eval, align 8, !tbaa !773
  %add411 = add nsw i32 %163, %n_hmm_eval.0.lcssa
  store i32 %add411, i32* %utt_hmm_eval, align 8, !tbaa !773
  %nfr = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 8
  %164 = load i32, i32* %nfr, align 8, !tbaa !765
  %add412 = add nsw i32 %164, %block_nfeatvec
  store i32 %add412, i32* %nfr, align 8, !tbaa !765
  store i32 %frmno.0.lcssa, i32* %curfrm, align 4, !tbaa !37
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i16* @wid_dict_lm_map(%struct.dict_t* %dict, %struct.lm_s* %lm, i32 %lw) local_unnamed_addr #0 {
entry:
  %n_word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %dict, i64 0, i32 7
  %0 = load i32, i32* %n_word, align 4, !tbaa !58
  %conv = sext i32 %0 to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv, i64 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.874, i64 0, i64 0), i32 76) #34
  %1 = bitcast i8* %call to i16*
  %2 = load i32, i32* %n_word, align 4, !tbaa !58
  %cmp277 = icmp sgt i32 %2, 0
  br i1 %cmp277, label %for.body.lr.ph, label %for.cond6.preheader

for.body.lr.ph:                                   ; preds = %entry
  %inclass_ugscore = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 42
  %3 = load i32*, i32** %inclass_ugscore, align 8, !tbaa !440
  %tobool.not = icmp eq i32* %3, null
  br label %for.body

for.cond6.preheader:                              ; preds = %for.inc, %entry
  %n_ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 0
  %wordstr = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 4
  %lmclass = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 40
  %ug = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 9
  %word114 = getelementptr inbounds %struct.dict_t, %struct.dict_t* %dict, i64 0, i32 4
  %inclass_ugscore136 = getelementptr inbounds %struct.lm_s, %struct.lm_s* %lm, i64 0, i32 42
  %4 = load i32, i32* %n_ug, align 8, !tbaa !133
  %cmp7269 = icmp sgt i32 %4, 0
  br i1 %cmp7269, label %for.body9, label %if.end162

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %5 = phi i32 [ %2, %for.body.lr.ph ], [ %6, %for.inc ]
  %indvars.iv280 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next281, %for.inc ]
  %arrayidx = getelementptr inbounds i16, i16* %1, i64 %indvars.iv280
  store i16 -1, i16* %arrayidx, align 2, !tbaa !40
  br i1 %tobool.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %arrayidx5 = getelementptr inbounds i32, i32* %3, i64 %indvars.iv280
  store i32 0, i32* %arrayidx5, align 4, !tbaa !37
  %.pre = load i32, i32* %n_word, align 4, !tbaa !58
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %6 = phi i32 [ %5, %for.body ], [ %.pre, %if.then ]
  %indvars.iv.next281 = add nuw nsw i64 %indvars.iv280, 1
  %7 = sext i32 %6 to i64
  %cmp = icmp slt i64 %indvars.iv.next281, %7
  br i1 %cmp, label %for.body, label %for.cond6.preheader, !llvm.loop !810

for.body9:                                        ; preds = %for.cond6.preheader, %for.inc153
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc153 ], [ 0, %for.cond6.preheader ]
  %maperr.0274 = phi i32 [ %maperr.3, %for.inc153 ], [ 0, %for.cond6.preheader ]
  %classid.0271 = phi i32 [ %classid.1, %for.inc153 ], [ undef, %for.cond6.preheader ]
  %n.1270 = phi i32 [ %n.4, %for.inc153 ], [ 0, %for.cond6.preheader ]
  %8 = load i8**, i8*** %wordstr, align 8, !tbaa !437
  %arrayidx11 = getelementptr inbounds i8*, i8** %8, i64 %indvars.iv
  %9 = load i8*, i8** %arrayidx11, align 8, !tbaa !74
  %call12 = tail call i32 @dict_wordid(%struct.dict_t* %dict, i8* %9) #34
  %10 = load %struct.lmclass_s**, %struct.lmclass_s*** %lmclass, align 8, !tbaa !390
  %tobool13.not = icmp eq %struct.lmclass_s** %10, null
  br i1 %tobool13.not, label %if.end19, label %if.then14

if.then14:                                        ; preds = %for.body9
  %11 = load i8**, i8*** %wordstr, align 8, !tbaa !437
  %arrayidx17 = getelementptr inbounds i8*, i8** %11, i64 %indvars.iv
  %12 = load i8*, i8** %arrayidx17, align 8, !tbaa !74
  %call18 = tail call i32 @lm_get_classid(%struct.lm_s* nonnull %lm, i8* %12) #34
  br label %if.end19

if.end19:                                         ; preds = %if.then14, %for.body9
  %classid.1 = phi i32 [ %call18, %if.then14 ], [ %classid.0271, %for.body9 ]
  %13 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %dictwid = getelementptr inbounds %struct.ug_t, %struct.ug_t* %13, i64 %indvars.iv, i32 0
  store i32 %call12, i32* %dictwid, align 4, !tbaa !35
  %cmp22 = icmp sgt i32 %call12, -1
  %14 = load %struct.lmclass_s**, %struct.lmclass_s*** %lmclass, align 8, !tbaa !390
  %tobool26 = icmp ne %struct.lmclass_s** %14, null
  %cmp27 = icmp sgt i32 %classid.1, -1
  %or.cond = select i1 %tobool26, i1 %cmp27, i1 false
  br i1 %cmp22, label %if.then24, label %if.else70

if.then24:                                        ; preds = %if.end19
  br i1 %or.cond, label %if.then29, label %if.else

if.then29:                                        ; preds = %if.then24
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.874, i64 0, i64 0), i64 101, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.875, i64 0, i64 0)) #34
  %15 = load i8**, i8*** %wordstr, align 8, !tbaa !437
  %arrayidx32 = getelementptr inbounds i8*, i8** %15, i64 %indvars.iv
  %16 = load i8*, i8** %arrayidx32, align 8, !tbaa !74
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2.876, i64 0, i64 0), i8* %16) #34
  br label %for.inc153

if.else:                                          ; preds = %if.then24
  %call33 = tail call i32 @dict_filler_word(%struct.dict_t* %dict, i32 %call12) #34
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %if.end39, label %if.then35

if.then35:                                        ; preds = %if.else
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.874, i64 0, i64 0), i64 108, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.875, i64 0, i64 0)) #34
  %17 = load i8**, i8*** %wordstr, align 8, !tbaa !437
  %arrayidx38 = getelementptr inbounds i8*, i8** %17, i64 %indvars.iv
  %18 = load i8*, i8** %arrayidx38, align 8, !tbaa !74
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3.877, i64 0, i64 0), i8* %18) #34
  br label %if.end39

if.end39:                                         ; preds = %if.then35, %if.else
  %19 = load %struct.dictword_t*, %struct.dictword_t** %word114, align 8, !tbaa !39
  %idxprom40254 = zext i32 %call12 to i64
  %basewid = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %19, i64 %idxprom40254, i32 4
  %20 = load i32, i32* %basewid, align 8, !tbaa !249
  %cmp42.not = icmp eq i32 %call12, %20
  br i1 %cmp42.not, label %for.body60.lr.ph, label %if.end56

if.end56:                                         ; preds = %if.end39
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.874, i64 0, i64 0), i64 111, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.875, i64 0, i64 0)) #34
  %21 = load i8**, i8*** %wordstr, align 8, !tbaa !437
  %arrayidx47 = getelementptr inbounds i8*, i8** %21, i64 %indvars.iv
  %22 = load i8*, i8** %arrayidx47, align 8, !tbaa !74
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.4.878, i64 0, i64 0), i8* %22) #34
  %23 = load %struct.dictword_t*, %struct.dictword_t** %word114, align 8, !tbaa !39
  %basewid51 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %23, i64 %idxprom40254, i32 4
  %24 = load i32, i32* %basewid51, align 8, !tbaa !249
  %25 = load %struct.ug_t*, %struct.ug_t** %ug, align 8, !tbaa !34
  %dictwid55 = getelementptr inbounds %struct.ug_t, %struct.ug_t* %25, i64 %indvars.iv, i32 0
  store i32 %24, i32* %dictwid55, align 4, !tbaa !35
  %cmp58267 = icmp sgt i32 %24, -1
  br i1 %cmp58267, label %for.body60.lr.ph, label %for.inc153

for.body60.lr.ph:                                 ; preds = %if.end39, %if.end56
  %w.0285 = phi i32 [ %24, %if.end56 ], [ %call12, %if.end39 ]
  %26 = phi %struct.dictword_t* [ %23, %if.end56 ], [ %19, %if.end39 ]
  %conv61286 = trunc i64 %indvars.iv to i16
  br label %for.body60

for.body60:                                       ; preds = %for.body60.lr.ph, %for.body60
  %w.1268 = phi i32 [ %w.0285, %for.body60.lr.ph ], [ %27, %for.body60 ]
  %idxprom62255 = zext i32 %w.1268 to i64
  %arrayidx63 = getelementptr inbounds i16, i16* %1, i64 %idxprom62255
  store i16 %conv61286, i16* %arrayidx63, align 2, !tbaa !40
  %alt = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %26, i64 %idxprom62255, i32 3
  %27 = load i32, i32* %alt, align 4, !tbaa !728
  %cmp58 = icmp sgt i32 %27, -1
  br i1 %cmp58, label %for.body60, label %for.inc153, !llvm.loop !811

if.else70:                                        ; preds = %if.end19
  br i1 %or.cond, label %if.then76, label %if.else149

if.then76:                                        ; preds = %if.else70
  store i32 %classid.1, i32* %dictwid, align 4, !tbaa !35
  %sub = add nsw i32 %classid.1, -16777216
  %idxprom82 = sext i32 %sub to i64
  %arrayidx83 = getelementptr inbounds %struct.lmclass_s*, %struct.lmclass_s** %14, i64 %idxprom82
  %28 = load %struct.lmclass_s*, %struct.lmclass_s** %arrayidx83, align 8, !tbaa !74
  %wordlist = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %28, i64 0, i32 1
  %conv133 = trunc i64 %indvars.iv to i16
  %lmclass_word.0261 = load %struct.lmclass_word_s*, %struct.lmclass_word_s** %wordlist, align 8, !tbaa !74
  %cmp84.not262 = icmp eq %struct.lmclass_word_s* %lmclass_word.0261, null
  br i1 %cmp84.not262, label %for.inc153, label %while.body

while.body:                                       ; preds = %if.then76, %if.end148
  %lmclass_word.0265 = phi %struct.lmclass_word_s* [ %lmclass_word.0, %if.end148 ], [ %lmclass_word.0261, %if.then76 ]
  %maperr.1264 = phi i32 [ %maperr.2, %if.end148 ], [ %maperr.0274, %if.then76 ]
  %n.2263 = phi i32 [ %n.3, %if.end148 ], [ %n.1270, %if.then76 ]
  %dictwid86 = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %lmclass_word.0265, i64 0, i32 1
  %29 = load i32, i32* %dictwid86, align 8, !tbaa !466
  %cmp87 = icmp sgt i32 %29, -1
  br i1 %cmp87, label %if.then89, label %if.else146

if.then89:                                        ; preds = %while.body
  %idxprom90256 = zext i32 %29 to i64
  %arrayidx91 = getelementptr inbounds i16, i16* %1, i64 %idxprom90256
  %30 = load i16, i16* %arrayidx91, align 2, !tbaa !40
  %cmp99.not = icmp eq i16 %30, -1
  br i1 %cmp99.not, label %if.else106, label %if.then101

if.then101:                                       ; preds = %if.then89
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.874, i64 0, i64 0), i64 138, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.879, i64 0, i64 0)) #34
  %31 = load i16, i16* %arrayidx91, align 2, !tbaa !40
  %conv104 = zext i16 %31 to i32
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.880, i64 0, i64 0), i32 %conv104) #34
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.874, i64 0, i64 0), i64 139, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.875, i64 0, i64 0)) #34
  %word105 = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %lmclass_word.0265, i64 0, i32 0
  %32 = load i8*, i8** %word105, align 8, !tbaa !408
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.881, i64 0, i64 0), i8* %32) #34
  br label %if.end148

if.else106:                                       ; preds = %if.then89
  %call107 = tail call i32 @dict_filler_word(%struct.dict_t* %dict, i32 %29) #34
  %tobool108.not = icmp eq i32 %call107, 0
  br i1 %tobool108.not, label %if.end113, label %if.then109

if.then109:                                       ; preds = %if.else106
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.874, i64 0, i64 0), i64 144, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.875, i64 0, i64 0)) #34
  %33 = load i8**, i8*** %wordstr, align 8, !tbaa !437
  %arrayidx112 = getelementptr inbounds i8*, i8** %33, i64 %idxprom90256
  %34 = load i8*, i8** %arrayidx112, align 8, !tbaa !74
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3.877, i64 0, i64 0), i8* %34) #34
  br label %if.end113

if.end113:                                        ; preds = %if.then109, %if.else106
  %35 = load %struct.dictword_t*, %struct.dictword_t** %word114, align 8, !tbaa !39
  %basewid117 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %35, i64 %idxprom90256, i32 4
  %36 = load i32, i32* %basewid117, align 8, !tbaa !249
  %cmp118.not = icmp eq i32 %29, %36
  br i1 %cmp118.not, label %for.body132.lr.ph, label %if.end128

if.end128:                                        ; preds = %if.end113
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.874, i64 0, i64 0), i64 147, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.875, i64 0, i64 0)) #34
  %37 = load i8**, i8*** %wordstr, align 8, !tbaa !437
  %arrayidx123 = getelementptr inbounds i8*, i8** %37, i64 %idxprom90256
  %38 = load i8*, i8** %arrayidx123, align 8, !tbaa !74
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.4.878, i64 0, i64 0), i8* %38) #34
  %39 = load %struct.dictword_t*, %struct.dictword_t** %word114, align 8, !tbaa !39
  %basewid127 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %39, i64 %idxprom90256, i32 4
  %40 = load i32, i32* %basewid127, align 8, !tbaa !249
  %cmp130259 = icmp sgt i32 %40, -1
  br i1 %cmp130259, label %for.body132.lr.ph, label %if.end148

for.body132.lr.ph:                                ; preds = %if.end113, %if.end128
  %dictid.0290 = phi i32 [ %40, %if.end128 ], [ %29, %if.end113 ]
  %41 = phi %struct.dictword_t* [ %39, %if.end128 ], [ %35, %if.end113 ]
  %LOGprob291 = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %lmclass_word.0265, i64 0, i32 2
  %42 = load i32*, i32** %inclass_ugscore136, align 8, !tbaa !440
  br label %for.body132

for.body132:                                      ; preds = %for.body132.lr.ph, %for.body132
  %dictid.1260 = phi i32 [ %dictid.0290, %for.body132.lr.ph ], [ %44, %for.body132 ]
  %idxprom134257 = zext i32 %dictid.1260 to i64
  %arrayidx135 = getelementptr inbounds i16, i16* %1, i64 %idxprom134257
  store i16 %conv133, i16* %arrayidx135, align 2, !tbaa !40
  %43 = load i32, i32* %LOGprob291, align 4, !tbaa !812
  %mul = mul nsw i32 %43, %lw
  %arrayidx138 = getelementptr inbounds i32, i32* %42, i64 %idxprom134257
  store i32 %mul, i32* %arrayidx138, align 4, !tbaa !37
  %alt143 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %41, i64 %idxprom134257, i32 3
  %44 = load i32, i32* %alt143, align 4, !tbaa !728
  %cmp130 = icmp sgt i32 %44, -1
  br i1 %cmp130, label %for.body132, label %if.end148, !llvm.loop !813

if.else146:                                       ; preds = %while.body
  %inc147 = add nsw i32 %n.2263, 1
  br label %if.end148

if.end148:                                        ; preds = %for.body132, %if.end128, %if.then101, %if.else146
  %n.3 = phi i32 [ %n.2263, %if.then101 ], [ %inc147, %if.else146 ], [ %n.2263, %if.end128 ], [ %n.2263, %for.body132 ]
  %maperr.2 = phi i32 [ 1, %if.then101 ], [ %maperr.1264, %if.else146 ], [ %maperr.1264, %if.end128 ], [ %maperr.1264, %for.body132 ]
  %next = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %lmclass_word.0265, i64 0, i32 3
  %lmclass_word.0 = load %struct.lmclass_word_s*, %struct.lmclass_word_s** %next, align 8, !tbaa !74
  %cmp84.not = icmp eq %struct.lmclass_word_s* %lmclass_word.0, null
  br i1 %cmp84.not, label %for.inc153, label %while.body, !llvm.loop !814

if.else149:                                       ; preds = %if.else70
  %inc150 = add nsw i32 %n.1270, 1
  br label %for.inc153

for.inc153:                                       ; preds = %if.end148, %for.body60, %if.then76, %if.end56, %if.then29, %if.else149
  %n.4 = phi i32 [ %n.1270, %if.then29 ], [ %inc150, %if.else149 ], [ %n.1270, %if.end56 ], [ %n.1270, %if.then76 ], [ %n.1270, %for.body60 ], [ %n.3, %if.end148 ]
  %maperr.3 = phi i32 [ 1, %if.then29 ], [ %maperr.0274, %if.else149 ], [ %maperr.0274, %if.end56 ], [ %maperr.0274, %if.then76 ], [ %maperr.0274, %for.body60 ], [ %maperr.2, %if.end148 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %45 = load i32, i32* %n_ug, align 8, !tbaa !133
  %46 = sext i32 %45 to i64
  %cmp7 = icmp slt i64 %indvars.iv.next, %46
  br i1 %cmp7, label %for.body9, label %for.end155, !llvm.loop !815

for.end155:                                       ; preds = %for.inc153
  %cmp156 = icmp sgt i32 %n.4, 0
  br i1 %cmp156, label %if.then158, label %if.end159

if.then158:                                       ; preds = %for.end155
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.874, i64 0, i64 0), i64 178, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.879, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.882, i64 0, i64 0), i32 %n.4) #34
  br label %if.end159

if.end159:                                        ; preds = %if.then158, %for.end155
  %tobool160.not = icmp eq i32 %maperr.3, 0
  br i1 %tobool160.not, label %if.end162, label %if.then161

if.then161:                                       ; preds = %if.end159
  tail call void @_E__pr_header(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.874, i64 0, i64 0), i64 187, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.883, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.10.884, i64 0, i64 0)) #34
  br label %if.end162

if.end162:                                        ; preds = %for.cond6.preheader, %if.then161, %if.end159
  ret i16* %1
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define i32 @wid_wordprob2alt(%struct.dict_t* nocapture readonly %dict, %struct.arraysize_t* nocapture %wp, i32 %n) local_unnamed_addr #13 {
entry:
  %cmp44 = icmp sgt i32 %n, 0
  br i1 %cmp44, label %for.body.lr.ph, label %for.end20

for.body.lr.ph:                                   ; preds = %entry
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %dict, i64 0, i32 4
  %0 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %wide.trip.count = zext i32 %n to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc18
  %indvars.iv48 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next49, %for.inc18 ]
  %j.046 = phi i32 [ %n, %for.body.lr.ph ], [ %j.1.lcssa, %for.inc18 ]
  %wid = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %wp, i64 %indvars.iv48, i32 0
  %1 = load i32, i32* %wid, align 4, !tbaa !84
  %idxprom1 = sext i32 %1 to i64
  %prob = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %wp, i64 %indvars.iv48, i32 1
  %w.0.in39 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %0, i64 %idxprom1, i32 3
  %w.040 = load i32, i32* %w.0.in39, align 4, !tbaa !728
  %cmp441 = icmp sgt i32 %w.040, -1
  br i1 %cmp441, label %for.body5.preheader, label %for.inc18

for.body5.preheader:                              ; preds = %for.body
  %2 = sext i32 %j.046 to i64
  br label %for.body5

for.body5:                                        ; preds = %for.body5.preheader, %for.body5
  %indvars.iv = phi i64 [ %2, %for.body5.preheader ], [ %indvars.iv.next, %for.body5 ]
  %w.043 = phi i32 [ %w.040, %for.body5.preheader ], [ %w.0, %for.body5 ]
  %wid8 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %wp, i64 %indvars.iv, i32 0
  store i32 %w.043, i32* %wid8, align 4, !tbaa !84
  %3 = load i32, i32* %prob, align 4, !tbaa !71
  %prob13 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %wp, i64 %indvars.iv, i32 1
  store i32 %3, i32* %prob13, align 4, !tbaa !71
  %indvars.iv.next = add i64 %indvars.iv, 1
  %idxprom1538 = zext i32 %w.043 to i64
  %w.0.in = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %0, i64 %idxprom1538, i32 3
  %w.0 = load i32, i32* %w.0.in, align 4, !tbaa !728
  %cmp4 = icmp sgt i32 %w.0, -1
  br i1 %cmp4, label %for.body5, label %for.inc18.loopexit, !llvm.loop !816

for.inc18.loopexit:                               ; preds = %for.body5
  %4 = trunc i64 %indvars.iv.next to i32
  br label %for.inc18

for.inc18:                                        ; preds = %for.inc18.loopexit, %for.body
  %j.1.lcssa = phi i32 [ %j.046, %for.body ], [ %4, %for.inc18.loopexit ]
  %indvars.iv.next49 = add nuw nsw i64 %indvars.iv48, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next49, %wide.trip.count
  br i1 %exitcond.not, label %for.end20, label %for.body, !llvm.loop !817

for.end20:                                        ; preds = %for.inc18, %entry
  %j.0.lcssa = phi i32 [ %n, %entry ], [ %j.1.lcssa, %for.inc18 ]
  ret i32 %j.0.lcssa
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @lmclass_dump(%struct.lmclass_s* nocapture readonly %cl, %struct._IO_FILE* nocapture %fp) local_unnamed_addr #14 {
entry:
  %name = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %cl, i64 0, i32 0
  %0 = load i8*, i8** %name, align 8, !tbaa !392
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.887, i64 0, i64 0), i8* %0) #36
  %wordlist = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %cl, i64 0, i32 1
  %w.014 = load %struct.lmclass_word_s*, %struct.lmclass_word_s** %wordlist, align 8, !tbaa !74
  %tobool.not15 = icmp eq %struct.lmclass_word_s* %w.014, null
  br i1 %tobool.not15, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %w.016 = phi %struct.lmclass_word_s* [ %w.0, %for.body ], [ %w.014, %entry ]
  %word = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %w.016, i64 0, i32 0
  %1 = load i8*, i8** %word, align 8, !tbaa !408
  %LOGprob = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %w.016, i64 0, i32 2
  %2 = load i32, i32* %LOGprob, align 4, !tbaa !812
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.888, i64 0, i64 0), i8* %1, i32 %2) #36
  %next = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %w.016, i64 0, i32 3
  %w.0 = load %struct.lmclass_word_s*, %struct.lmclass_word_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.lmclass_word_s* %w.0, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !818

for.end:                                          ; preds = %for.body, %entry
  %3 = load i8*, i8** %name, align 8, !tbaa !392
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.889, i64 0, i64 0), i8* %3) #36
  %call4 = tail call i32 @fflush(%struct._IO_FILE* %fp) #36
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @lmclass_set_dump(%struct.lmclass_set_s* nocapture readonly %set, %struct._IO_FILE* nocapture %fp) local_unnamed_addr #14 {
entry:
  %lmclass_list = getelementptr inbounds %struct.lmclass_set_s, %struct.lmclass_set_s* %set, i64 0, i32 0
  %cl.04 = load %struct.lmclass_s*, %struct.lmclass_s** %lmclass_list, align 8, !tbaa !74
  %tobool.not5 = icmp eq %struct.lmclass_s* %cl.04, null
  br i1 %tobool.not5, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %cl.06 = phi %struct.lmclass_s* [ %cl.0, %for.body ], [ %cl.04, %entry ]
  tail call void @lmclass_dump(%struct.lmclass_s* nonnull %cl.06, %struct._IO_FILE* %fp) #36
  %next = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %cl.06, i64 0, i32 2
  %cl.0 = load %struct.lmclass_s*, %struct.lmclass_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.lmclass_s* %cl.0, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !819

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.lmclass_set_s* @lmclass_newset() local_unnamed_addr #0 {
entry:
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i32 86) #34
  %0 = bitcast i8* %call to %struct.lmclass_set_s*
  %lmclass_list = bitcast i8* %call to %struct.lmclass_s**
  store %struct.lmclass_s* null, %struct.lmclass_s** %lmclass_list, align 8, !tbaa !820
  ret %struct.lmclass_set_s* %0
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.lmclass_set_s* @lmclass_loadfile(%struct.lmclass_set_s* %lmclass_set, i8* %file) local_unnamed_addr #0 {
entry:
  %line = alloca [16384 x i8], align 16
  %word = alloca [4096 x i8*], align 16
  %p = alloca float, align 4
  %0 = getelementptr inbounds [16384 x i8], [16384 x i8]* %line, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %0) #38
  %1 = bitcast [4096 x i8*]* %word to i8*
  call void @llvm.lifetime.start.p0i8(i64 32768, i8* nonnull %1) #38
  %2 = bitcast float* %p to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #38
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i64 150, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.895, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.896, i64 0, i64 0), i8* %file) #34
  %call = tail call %struct._IO_FILE* @_myfopen(i8* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.897, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i32 151) #34
  %arraydecay5 = getelementptr inbounds [4096 x i8*], [4096 x i8*]* %word, i64 0, i64 0
  %arrayidx23 = getelementptr inbounds [4096 x i8*], [4096 x i8*]* %word, i64 0, i64 1
  %call1266281 = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %call) #36
  %cmp.not267282 = icmp eq i8* %call1266281, null
  br i1 %cmp.not267282, label %for.end172, label %land.rhs.lr.ph

land.rhs.lr.ph:                                   ; preds = %entry, %if.end170
  %lmclass_set.addr.0284 = phi %struct.lmclass_set_s* [ %call42, %if.end170 ], [ %lmclass_set, %entry ]
  %lineno.0283 = phi i32 [ %inc73, %if.end170 ], [ 0, %entry ]
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.lr.ph, %while.body
  %lineno.1268 = phi i32 [ %lineno.0283, %land.rhs.lr.ph ], [ %inc, %while.body ]
  %3 = load i8, i8* %0, align 16, !tbaa !63
  %cmp2 = icmp eq i8 %3, 35
  br i1 %cmp2, label %while.body, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %call6 = call i32 @str2words(i8* nonnull %0, i8** nonnull %arraydecay5, i32 4096) #34
  %cmp7 = icmp eq i32 %call6, 0
  br i1 %cmp7, label %while.body, label %if.end

while.body:                                       ; preds = %land.rhs, %lor.rhs
  %inc = add nsw i32 %lineno.1268, 1
  %call1 = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %call) #36
  %cmp.not = icmp eq i8* %call1, null
  br i1 %cmp.not, label %for.end172, label %land.rhs, !llvm.loop !822

if.end:                                           ; preds = %lor.rhs
  %inc9 = add nsw i32 %lineno.1268, 1
  %cmp10 = icmp slt i32 %call6, 0
  br i1 %cmp10, label %if.end14.thread, label %if.end14

if.end14.thread:                                  ; preds = %if.end
  call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i64 166, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.898, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.899, i64 0, i64 0), i32 %inc9, i8* nonnull %0) #34
  br label %if.then21

if.end14:                                         ; preds = %if.end
  %cmp15.not = icmp eq i32 %call6, 2
  br i1 %cmp15.not, label %lor.lhs.false, label %if.then21

lor.lhs.false:                                    ; preds = %if.end14
  %4 = load i8*, i8** %arraydecay5, align 16, !tbaa !74
  %call18 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %4, i8* noundef nonnull dereferenceable(8) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.900, i64 0, i64 0)) #37
  %cmp19.not = icmp eq i32 %call18, 0
  br i1 %cmp19.not, label %if.end22, label %if.then21

if.then21:                                        ; preds = %if.end14.thread, %lor.lhs.false, %if.end14
  call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i64 169, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.898, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10.901, i64 0, i64 0), i32 %inc9) #34
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %lor.lhs.false
  %5 = load i8*, i8** %arrayidx23, align 8, !tbaa !74
  %6 = load i8, i8* %5, align 1, !tbaa !63
  %cmp26.not = icmp eq i8 %6, 91
  br i1 %cmp26.not, label %lor.lhs.false28, label %if.then36

lor.lhs.false28:                                  ; preds = %if.end22
  %call31 = call i64 @strlen(i8* noundef nonnull %5) #37
  %sub = add i64 %call31, -1
  %arrayidx32 = getelementptr inbounds i8, i8* %5, i64 %sub
  %7 = load i8, i8* %arrayidx32, align 1, !tbaa !63
  %cmp34.not = icmp eq i8 %7, 93
  br i1 %cmp34.not, label %if.end38, label %if.then36

if.then36:                                        ; preds = %lor.lhs.false28, %if.end22
  call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i64 172, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.902, i64 0, i64 0)) #34
  %8 = load i8*, i8** %arrayidx23, align 8, !tbaa !74
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.12.903, i64 0, i64 0), i32 %inc9, i8* %8) #34
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %lor.lhs.false28
  %call39 = call i8* @__ckd_calloc__(i64 1, i64 24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i32 176) #34
  %9 = bitcast i8* %call39 to %struct.lmclass_s*
  %10 = load i8*, i8** %arrayidx23, align 8, !tbaa !74
  %call41 = call i8* @__ckd_salloc__(i8* %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i32 177) #34
  %name = bitcast i8* %call39 to i8**
  store i8* %call41, i8** %name, align 8, !tbaa !392
  %wordlist = getelementptr inbounds i8, i8* %call39, i64 8
  %11 = bitcast i8* %wordlist to %struct.lmclass_word_s**
  store %struct.lmclass_word_s* null, %struct.lmclass_word_s** %11, align 8, !tbaa !823
  %call42 = call fastcc %struct.lmclass_set_s* @lmclass_add(%struct.lmclass_set_s* %lmclass_set.addr.0284, %struct.lmclass_s* %9) #36
  %cmp43 = icmp eq %struct.lmclass_set_s* %call42, null
  br i1 %cmp43, label %if.then45, label %for.cond48.preheader

if.then45:                                        ; preds = %if.end38
  call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i64 183, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.898, i64 0, i64 0)) #34
  %12 = load i8*, i8** %arrayidx23, align 8, !tbaa !74
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13.904, i64 0, i64 0), i32 %inc9, i8* %12) #34
  br label %for.cond48.preheader

for.cond48.preheader:                             ; preds = %if.then45, %if.end38
  br label %for.cond48

for.cond48:                                       ; preds = %for.cond48.preheader, %cleanup
  %lineno.2 = phi i32 [ %inc73, %cleanup ], [ %inc9, %for.cond48.preheader ]
  %nwd.4 = phi i32 [ %nwd.7248, %cleanup ], [ %call6, %for.cond48.preheader ]
  %lmclass.0 = phi %struct.lmclass_s* [ %call123, %cleanup ], [ %9, %for.cond48.preheader ]
  %SUMp.0 = phi float [ %SUMp.1, %cleanup ], [ 0.000000e+00, %for.cond48.preheader ]
  %n_implicit_prob.0 = phi i32 [ %n_implicit_prob.1, %cleanup ], [ 0, %for.cond48.preheader ]
  %n_word.0 = phi i32 [ %inc129, %cleanup ], [ 0, %for.cond48.preheader ]
  %call51271 = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %call) #36
  %cmp52.not272 = icmp eq i8* %call51271, null
  br i1 %cmp52.not272, label %if.then71, label %land.rhs54

land.rhs54:                                       ; preds = %for.cond48, %while.body67
  %nwd.5275 = phi i32 [ %nwd.6, %while.body67 ], [ %nwd.4, %for.cond48 ]
  %lineno.3273 = phi i32 [ %inc68, %while.body67 ], [ %lineno.2, %for.cond48 ]
  %13 = load i8, i8* %0, align 16, !tbaa !63
  %cmp57 = icmp eq i8 %13, 35
  br i1 %cmp57, label %while.body67, label %lor.rhs59

lor.rhs59:                                        ; preds = %land.rhs54
  %call62 = call i32 @str2words(i8* nonnull %0, i8** nonnull %arraydecay5, i32 4096) #34
  %cmp63 = icmp eq i32 %call62, 0
  br i1 %cmp63, label %while.body67, label %if.end72

while.body67:                                     ; preds = %land.rhs54, %lor.rhs59
  %nwd.6 = phi i32 [ %nwd.5275, %land.rhs54 ], [ 0, %lor.rhs59 ]
  %inc68 = add nsw i32 %lineno.3273, 1
  %call51 = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %call) #36
  %cmp52.not = icmp eq i8* %call51, null
  br i1 %cmp52.not, label %if.then71, label %land.rhs54, !llvm.loop !824

if.then71:                                        ; preds = %while.body67, %for.cond48
  %lineno.3.lcssa = phi i32 [ %lineno.2, %for.cond48 ], [ %inc68, %while.body67 ]
  %nwd.5.lcssa = phi i32 [ %nwd.4, %for.cond48 ], [ %nwd.6, %while.body67 ]
  call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i64 197, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.898, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14.905, i64 0, i64 0), i8* %file) #34
  br label %if.end72

if.end72:                                         ; preds = %lor.rhs59, %if.then71
  %lineno.3265 = phi i32 [ %lineno.3.lcssa, %if.then71 ], [ %lineno.3273, %lor.rhs59 ]
  %nwd.7248 = phi i32 [ %nwd.5.lcssa, %if.then71 ], [ %call62, %lor.rhs59 ]
  %inc73 = add nsw i32 %lineno.3265, 1
  %14 = add i32 %nwd.7248, -1
  %15 = icmp ugt i32 %14, 1
  br i1 %15, label %if.end79.thread, label %if.end79

if.end79.thread:                                  ; preds = %if.end72
  call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i64 201, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.898, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.906, i64 0, i64 0), i32 %inc73) #34
  br label %if.else116

if.end79:                                         ; preds = %if.end72
  %cmp80 = icmp eq i32 %nwd.7248, 2
  br i1 %cmp80, label %land.lhs.true82, label %if.else116

land.lhs.true82:                                  ; preds = %if.end79
  %16 = load i8*, i8** %arraydecay5, align 16, !tbaa !74
  %call84 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %16, i8* noundef nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16.907, i64 0, i64 0)) #37
  %cmp85 = icmp eq i32 %call84, 0
  %17 = load i8*, i8** %arrayidx23, align 8, !tbaa !74
  br i1 %cmp85, label %land.lhs.true87, label %if.then97

land.lhs.true87:                                  ; preds = %land.lhs.true82
  %name89 = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %lmclass.0, i64 0, i32 0
  %18 = load i8*, i8** %name89, align 8, !tbaa !392
  %call90 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %17, i8* noundef nonnull dereferenceable(1) %18) #37
  %cmp91 = icmp eq i32 %call90, 0
  br i1 %cmp91, label %for.end, label %if.then97

if.then97:                                        ; preds = %land.lhs.true82, %land.lhs.true87
  %call99 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.908, i64 0, i64 0), float* nonnull %p) #34
  %cmp100 = icmp eq i32 %call99, 1
  br i1 %cmp100, label %if.then102, label %if.else

if.then102:                                       ; preds = %if.then97
  %19 = load float, float* %p, align 4, !tbaa !4
  %cmp104 = fcmp ugt float %19, 0.000000e+00
  %cmp108 = fcmp ult float %19, 1.000000e+00
  %or.cond = and i1 %cmp104, %cmp108
  br i1 %or.cond, label %if.end112, label %if.then110

if.then110:                                       ; preds = %if.then102
  call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i64 211, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.898, i64 0, i64 0)) #34
  %20 = load i8*, i8** %arrayidx23, align 8, !tbaa !74
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18.909, i64 0, i64 0), i32 %inc73, i8* %20) #34
  %.pre290 = load float, float* %p, align 4, !tbaa !4
  br label %if.end112

if.end112:                                        ; preds = %if.then102, %if.then110
  %21 = phi float [ %19, %if.then102 ], [ %.pre290, %if.then110 ]
  %conv113 = fpext float %21 to double
  %call114 = call i32 @logs3(double %conv113) #34
  %22 = load float, float* %p, align 4, !tbaa !4
  %add = fadd float %SUMp.0, %22
  br label %if.end118

if.else:                                          ; preds = %if.then97
  call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i64 216, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.898, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.906, i64 0, i64 0), i32 %inc73) #34
  br label %if.end118

if.else116:                                       ; preds = %if.end79.thread, %if.end79
  %inc117 = add nsw i32 %n_implicit_prob.0, 1
  br label %if.end118

if.end118:                                        ; preds = %if.end112, %if.else, %if.else116
  %SUMp.1 = phi float [ %add, %if.end112 ], [ %SUMp.0, %if.else ], [ %SUMp.0, %if.else116 ]
  %n_implicit_prob.1 = phi i32 [ %n_implicit_prob.0, %if.end112 ], [ %n_implicit_prob.0, %if.else ], [ %inc117, %if.else116 ]
  %LOGp.0 = phi i32 [ %call114, %if.end112 ], [ 0, %if.else ], [ 32001, %if.else116 ]
  %call119 = call i8* @__ckd_calloc__(i64 1, i64 24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i32 223) #34
  %23 = bitcast i8* %call119 to %struct.lmclass_word_s*
  %24 = load i8*, i8** %arraydecay5, align 16, !tbaa !74
  %call121 = call i8* @__ckd_salloc__(i8* %24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i32 224) #34
  %word122 = bitcast i8* %call119 to i8**
  store i8* %call121, i8** %word122, align 8, !tbaa !408
  %dictwid = getelementptr inbounds i8, i8* %call119, i64 8
  %25 = bitcast i8* %dictwid to i32*
  store i32 -1, i32* %25, align 8, !tbaa !466
  %LOGprob = getelementptr inbounds i8, i8* %call119, i64 12
  %26 = bitcast i8* %LOGprob to i32*
  store i32 %LOGp.0, i32* %26, align 4, !tbaa !812
  %call123 = call fastcc %struct.lmclass_s* @lmclass_addword(%struct.lmclass_s* %lmclass.0, %struct.lmclass_word_s* %23) #36
  %cmp124 = icmp eq %struct.lmclass_s* %call123, null
  br i1 %cmp124, label %if.then126, label %cleanup

if.then126:                                       ; preds = %if.end118
  call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i64 230, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.898, i64 0, i64 0)) #34
  %27 = load i8*, i8** %arraydecay5, align 16, !tbaa !74
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.19.910, i64 0, i64 0), i32 %inc73, i8* %27) #34
  br label %cleanup

cleanup:                                          ; preds = %if.end118, %if.then126
  %inc129 = add nuw nsw i32 %n_word.0, 1
  br label %for.cond48, !llvm.loop !825

for.end:                                          ; preds = %land.lhs.true87
  %name89.le = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %lmclass.0, i64 0, i32 0
  %cmp130 = icmp sgt i32 %n_implicit_prob.0, 0
  %conv134 = fpext float %SUMp.0 to double
  br i1 %cmp130, label %if.then132, label %if.else158

if.then132:                                       ; preds = %for.end
  %cmp135 = fcmp ult float %SUMp.0, 1.000000e+00
  br i1 %cmp135, label %if.end140, label %if.then137

if.then137:                                       ; preds = %if.then132
  call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i64 239, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.898, i64 0, i64 0)) #34
  %28 = load i8*, i8** %name89.le, align 8, !tbaa !392
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20.911, i64 0, i64 0), i8* %28, double %conv134) #34
  br label %if.end140

if.end140:                                        ; preds = %if.then137, %if.then132
  %sub142 = fsub double 1.000000e+00, %conv134
  %conv143 = sitofp i32 %n_implicit_prob.0 to float
  %conv144 = fpext float %conv143 to double
  %div = fdiv double %sub142, %conv144
  %conv145 = fptrunc double %div to float
  store float %conv145, float* %p, align 4, !tbaa !4
  %conv146 = fpext float %conv145 to double
  %call147 = call i32 @logs3(double %conv146) #34
  %wordlist148 = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %lmclass.0, i64 0, i32 1
  %lmclass_word.0278 = load %struct.lmclass_word_s*, %struct.lmclass_word_s** %wordlist148, align 8, !tbaa !74
  %tobool150.not279 = icmp eq %struct.lmclass_word_s* %lmclass_word.0278, null
  br i1 %tobool150.not279, label %if.end170, label %for.body

for.body:                                         ; preds = %if.end140, %for.inc
  %lmclass_word.0280 = phi %struct.lmclass_word_s* [ %lmclass_word.0, %for.inc ], [ %lmclass_word.0278, %if.end140 ]
  %LOGprob151 = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %lmclass_word.0280, i64 0, i32 2
  %29 = load i32, i32* %LOGprob151, align 4, !tbaa !812
  %cmp152 = icmp eq i32 %29, 32001
  br i1 %cmp152, label %if.then154, label %for.inc

if.then154:                                       ; preds = %for.body
  store i32 %call147, i32* %LOGprob151, align 4, !tbaa !812
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then154
  %next = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %lmclass_word.0280, i64 0, i32 3
  %lmclass_word.0 = load %struct.lmclass_word_s*, %struct.lmclass_word_s** %next, align 8, !tbaa !74
  %tobool150.not = icmp eq %struct.lmclass_word_s* %lmclass_word.0, null
  br i1 %tobool150.not, label %if.end170, label %for.body, !llvm.loop !826

if.else158:                                       ; preds = %for.end
  %cmp160 = fcmp ult double %conv134, 1.100000e+00
  %cmp164 = fcmp ugt double %conv134, 9.000000e-01
  %or.cond244 = and i1 %cmp160, %cmp164
  br i1 %or.cond244, label %if.end170, label %if.then166

if.then166:                                       ; preds = %if.else158
  call void @_E__pr_info_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i64 253, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.895, i64 0, i64 0)) #34
  %30 = load i8*, i8** %name89.le, align 8, !tbaa !392
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20.911, i64 0, i64 0), i8* %30, double %conv134) #34
  br label %if.end170

if.end170:                                        ; preds = %for.inc, %if.end140, %if.else158, %if.then166
  call void @_E__pr_info_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.892, i64 0, i64 0), i64 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.895, i64 0, i64 0)) #34
  %31 = load i8*, i8** %name89.le, align 8, !tbaa !392
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21.912, i64 0, i64 0), i8* %31, i32 %n_word.0) #34
  %call1266 = call i8* @fgets(i8* nonnull %0, i32 16384, %struct._IO_FILE* %call) #36
  %cmp.not267 = icmp eq i8* %call1266, null
  br i1 %cmp.not267, label %for.end172, label %land.rhs.lr.ph, !llvm.loop !827

for.end172:                                       ; preds = %if.end170, %while.body, %entry
  %lmclass_set.addr.0.lcssa = phi %struct.lmclass_set_s* [ %lmclass_set, %entry ], [ %lmclass_set.addr.0284, %while.body ], [ %call42, %if.end170 ]
  %call173 = call i32 @fclose(%struct._IO_FILE* %call) #36
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #38
  call void @llvm.lifetime.end.p0i8(i64 32768, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 16384, i8* nonnull %0) #38
  ret %struct.lmclass_set_s* %lmclass_set.addr.0.lcssa
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define internal fastcc %struct.lmclass_set_s* @lmclass_add(%struct.lmclass_set_s* %set, %struct.lmclass_s* %new) unnamed_addr #14 {
entry:
  %lmclass_list = getelementptr inbounds %struct.lmclass_set_s, %struct.lmclass_set_s* %set, i64 0, i32 0
  %cl.023 = load %struct.lmclass_s*, %struct.lmclass_s** %lmclass_list, align 8, !tbaa !74
  %tobool.not24 = icmp eq %struct.lmclass_s* %cl.023, null
  br i1 %tobool.not24, label %if.end7, label %land.rhs.lr.ph

land.rhs.lr.ph:                                   ; preds = %entry
  %name1 = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %new, i64 0, i32 0
  %0 = load i8*, i8** %name1, align 8, !tbaa !392
  br label %land.rhs

for.cond:                                         ; preds = %land.rhs
  %next = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %cl.025, i64 0, i32 2
  %cl.0 = load %struct.lmclass_s*, %struct.lmclass_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.lmclass_s* %cl.0, null
  br i1 %tobool.not, label %if.then4, label %land.rhs, !llvm.loop !828

land.rhs:                                         ; preds = %land.rhs.lr.ph, %for.cond
  %cl.025 = phi %struct.lmclass_s* [ %cl.023, %land.rhs.lr.ph ], [ %cl.0, %for.cond ]
  %name = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %cl.025, i64 0, i32 0
  %1 = load i8*, i8** %name, align 8, !tbaa !392
  %call = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %1, i8* noundef nonnull dereferenceable(1) %0) #37
  %cmp.not = icmp eq i32 %call, 0
  br i1 %cmp.not, label %cleanup, label %for.cond

if.then4:                                         ; preds = %for.cond
  %next5 = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %cl.025, i64 0, i32 2
  br label %if.end7

if.end7:                                          ; preds = %entry, %if.then4
  %lmclass_list.sink = phi %struct.lmclass_s** [ %next5, %if.then4 ], [ %lmclass_list, %entry ]
  store %struct.lmclass_s* %new, %struct.lmclass_s** %lmclass_list.sink, align 8, !tbaa !74
  %next8 = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %new, i64 0, i32 2
  store %struct.lmclass_s* null, %struct.lmclass_s** %next8, align 8, !tbaa !829
  br label %cleanup

cleanup:                                          ; preds = %land.rhs, %if.end7
  %retval.0 = phi %struct.lmclass_set_s* [ %set, %if.end7 ], [ null, %land.rhs ]
  ret %struct.lmclass_set_s* %retval.0
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define internal fastcc %struct.lmclass_s* @lmclass_addword(%struct.lmclass_s* %class, %struct.lmclass_word_s* %new) unnamed_addr #14 {
entry:
  %wordlist = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %class, i64 0, i32 1
  %w.023 = load %struct.lmclass_word_s*, %struct.lmclass_word_s** %wordlist, align 8, !tbaa !74
  %tobool.not24 = icmp eq %struct.lmclass_word_s* %w.023, null
  br i1 %tobool.not24, label %if.end7, label %land.rhs.lr.ph

land.rhs.lr.ph:                                   ; preds = %entry
  %word1 = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %new, i64 0, i32 0
  %0 = load i8*, i8** %word1, align 8, !tbaa !408
  br label %land.rhs

for.cond:                                         ; preds = %land.rhs
  %next = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %w.025, i64 0, i32 3
  %w.0 = load %struct.lmclass_word_s*, %struct.lmclass_word_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.lmclass_word_s* %w.0, null
  br i1 %tobool.not, label %if.then4, label %land.rhs, !llvm.loop !830

land.rhs:                                         ; preds = %land.rhs.lr.ph, %for.cond
  %w.025 = phi %struct.lmclass_word_s* [ %w.023, %land.rhs.lr.ph ], [ %w.0, %for.cond ]
  %word = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %w.025, i64 0, i32 0
  %1 = load i8*, i8** %word, align 8, !tbaa !408
  %call = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %1, i8* noundef nonnull dereferenceable(1) %0) #37
  %cmp.not = icmp eq i32 %call, 0
  br i1 %cmp.not, label %cleanup, label %for.cond

if.then4:                                         ; preds = %for.cond
  %next5 = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %w.025, i64 0, i32 3
  br label %if.end7

if.end7:                                          ; preds = %entry, %if.then4
  %wordlist.sink = phi %struct.lmclass_word_s** [ %next5, %if.then4 ], [ %wordlist, %entry ]
  store %struct.lmclass_word_s* %new, %struct.lmclass_word_s** %wordlist.sink, align 8, !tbaa !74
  %next8 = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %new, i64 0, i32 3
  store %struct.lmclass_word_s* null, %struct.lmclass_word_s** %next8, align 8, !tbaa !831
  br label %cleanup

cleanup:                                          ; preds = %land.rhs, %if.end7
  %retval.0 = phi %struct.lmclass_s* [ %class, %if.end7 ], [ null, %land.rhs ]
  ret %struct.lmclass_s* %retval.0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn writeonly
define void @lmclass_set_dictwid(%struct.lmclass_word_s* nocapture %w, i32 %dictwid) local_unnamed_addr #29 {
entry:
  %dictwid1 = getelementptr inbounds %struct.lmclass_word_s, %struct.lmclass_word_s* %w, i64 0, i32 1
  store i32 %dictwid, i32* %dictwid1, align 8, !tbaa !466
  ret void
}

; Function Attrs: nofree noinline nounwind optsize readonly uwtable
define %struct.lmclass_s* @lmclass_get_lmclass(%struct.lmclass_set_s* nocapture readonly %set, i8* nocapture readonly %name) local_unnamed_addr #24 {
entry:
  %lmclass_list = getelementptr inbounds %struct.lmclass_set_s, %struct.lmclass_set_s* %set, i64 0, i32 0
  %cl.06 = load %struct.lmclass_s*, %struct.lmclass_s** %lmclass_list, align 8, !tbaa !74
  %tobool.not7 = icmp eq %struct.lmclass_s* %cl.06, null
  br i1 %tobool.not7, label %for.end, label %land.rhs

land.rhs:                                         ; preds = %entry, %for.inc
  %cl.08 = phi %struct.lmclass_s* [ %cl.0, %for.inc ], [ %cl.06, %entry ]
  %name1 = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %cl.08, i64 0, i32 0
  %0 = load i8*, i8** %name1, align 8, !tbaa !392
  %call = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %0, i8* noundef nonnull dereferenceable(1) %name) #37
  %cmp.not = icmp eq i32 %call, 0
  br i1 %cmp.not, label %for.end, label %for.inc

for.inc:                                          ; preds = %land.rhs
  %next = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %cl.08, i64 0, i32 2
  %cl.0 = load %struct.lmclass_s*, %struct.lmclass_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.lmclass_s* %cl.0, null
  br i1 %tobool.not, label %for.end, label %land.rhs, !llvm.loop !832

for.end:                                          ; preds = %land.rhs, %for.inc, %entry
  %cl.0.lcssa = phi %struct.lmclass_s* [ null, %entry ], [ null, %for.inc ], [ %cl.08, %land.rhs ]
  ret %struct.lmclass_s* %cl.0.lcssa
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @lmclass_get_nclass(%struct.lmclass_set_s* nocapture readonly %set) local_unnamed_addr #16 {
entry:
  %lmclass_list = getelementptr inbounds %struct.lmclass_set_s, %struct.lmclass_set_s* %set, i64 0, i32 0
  %cl.05 = load %struct.lmclass_s*, %struct.lmclass_s** %lmclass_list, align 8, !tbaa !74
  %tobool.not6 = icmp eq %struct.lmclass_s* %cl.05, null
  br i1 %tobool.not6, label %for.end, label %for.inc

for.inc:                                          ; preds = %entry, %for.inc
  %cl.08 = phi %struct.lmclass_s* [ %cl.0, %for.inc ], [ %cl.05, %entry ]
  %n.07 = phi i32 [ %inc, %for.inc ], [ 0, %entry ]
  %next = getelementptr inbounds %struct.lmclass_s, %struct.lmclass_s* %cl.08, i64 0, i32 2
  %inc = add nuw nsw i32 %n.07, 1
  %cl.0 = load %struct.lmclass_s*, %struct.lmclass_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.lmclass_s* %cl.0, null
  br i1 %tobool.not, label %for.end, label %for.inc, !llvm.loop !833

for.end:                                          ; preds = %for.inc, %entry
  %n.0.lcssa = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  ret i32 %n.0.lcssa
}

; Function Attrs: noinline nounwind optsize uwtable
define void @cmn_prior(float** nocapture readonly %incep, i32 %varnorm, i32 %nfr, i32 %ceplen, i32 %endutt) local_unnamed_addr #0 {
entry:
  %tobool.not = icmp eq i32 %varnorm, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.921, i64 0, i64 0), i64 61, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.922, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2.923, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %.b = load i1, i1* @cmn_prior.initialize, align 4
  br i1 %.b, label %if.end7, label %if.then2

if.then2:                                         ; preds = %if.end
  %conv = sext i32 %ceplen to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.921, i64 0, i64 0), i32 64) #34
  %0 = bitcast i8* %call to float*
  store i8* %call, i8** bitcast (float** @cmn_prior.cur_mean to i8**), align 8, !tbaa !74
  store float 1.200000e+01, float* %0, align 4, !tbaa !4
  %call4 = tail call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.921, i64 0, i64 0), i32 69) #34
  store i8* %call4, i8** bitcast (float** @cmn_prior.sum to i8**), align 8, !tbaa !74
  store i32 0, i32* @cmn_prior.nframe, align 4, !tbaa !37
  store i1 true, i1* @cmn_prior.initialize, align 4
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.921, i64 0, i64 0), i64 72, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.924, i64 0, i64 0)) #34
  %1 = load float*, float** @cmn_prior.cur_mean, align 8, !tbaa !74
  %2 = load float, float* %1, align 4, !tbaa !4
  %conv6 = fpext float %2 to double
  %sub = add nsw i32 %ceplen, -1
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.925, i64 0, i64 0), double %conv6, i32 %sub) #34
  br label %if.end7

if.end7:                                          ; preds = %if.then2, %if.end
  %cmp = icmp slt i32 %nfr, 1
  br i1 %cmp, label %cleanup, label %for.cond13.preheader.lr.ph

for.cond13.preheader.lr.ph:                       ; preds = %if.end7
  %3 = load float*, float** @cmn_prior.sum, align 8
  %4 = load float*, float** @cmn_prior.cur_mean, align 8
  %cmp14147 = icmp sgt i32 %ceplen, 0
  %cmn_prior.nframe.promoted = load i32, i32* @cmn_prior.nframe, align 4, !tbaa !37
  %wide.trip.count170 = zext i32 %nfr to i64
  %wide.trip.count166 = zext i32 %ceplen to i64
  br label %for.cond13.preheader

for.cond13.preheader:                             ; preds = %for.cond13.preheader.lr.ph, %for.end
  %indvars.iv168 = phi i64 [ 0, %for.cond13.preheader.lr.ph ], [ %indvars.iv.next169, %for.end ]
  br i1 %cmp14147, label %for.body16.lr.ph, label %for.end

for.body16.lr.ph:                                 ; preds = %for.cond13.preheader
  %arrayidx17 = getelementptr inbounds float*, float** %incep, i64 %indvars.iv168
  %5 = load float*, float** %arrayidx17, align 8, !tbaa !74
  br label %for.body16

for.body16:                                       ; preds = %for.body16.lr.ph, %for.body16
  %indvars.iv164 = phi i64 [ 0, %for.body16.lr.ph ], [ %indvars.iv.next165, %for.body16 ]
  %arrayidx19 = getelementptr inbounds float, float* %5, i64 %indvars.iv164
  %6 = load float, float* %arrayidx19, align 4, !tbaa !4
  %arrayidx21 = getelementptr inbounds float, float* %3, i64 %indvars.iv164
  %7 = load float, float* %arrayidx21, align 4, !tbaa !4
  %add = fadd float %6, %7
  store float %add, float* %arrayidx21, align 4, !tbaa !4
  %arrayidx23 = getelementptr inbounds float, float* %4, i64 %indvars.iv164
  %8 = load float, float* %arrayidx23, align 4, !tbaa !4
  %9 = load float, float* %arrayidx19, align 4, !tbaa !4
  %sub28 = fsub float %9, %8
  store float %sub28, float* %arrayidx19, align 4, !tbaa !4
  %indvars.iv.next165 = add nuw nsw i64 %indvars.iv164, 1
  %exitcond167.not = icmp eq i64 %indvars.iv.next165, %wide.trip.count166
  br i1 %exitcond167.not, label %for.end, label %for.body16, !llvm.loop !834

for.end:                                          ; preds = %for.body16, %for.cond13.preheader
  %indvars.iv.next169 = add nuw nsw i64 %indvars.iv168, 1
  %exitcond171.not = icmp eq i64 %indvars.iv.next169, %wide.trip.count170
  br i1 %exitcond171.not, label %for.end32, label %for.cond13.preheader, !llvm.loop !835

for.end32:                                        ; preds = %for.end
  %10 = add i32 %cmn_prior.nframe.promoted, %nfr
  store i32 %10, i32* @cmn_prior.nframe, align 4, !tbaa !37
  %cmp33 = icmp sgt i32 %10, 800
  br i1 %cmp33, label %if.then35, label %if.end64

if.then35:                                        ; preds = %for.end32
  %conv36 = sitofp i32 %10 to double
  %div = fdiv double 1.000000e+00, %conv36
  %conv37 = fptrunc double %div to float
  br i1 %cmp14147, label %for.body41.preheader, label %for.end62

for.body41.preheader:                             ; preds = %if.then35
  %wide.trip.count162 = zext i32 %ceplen to i64
  br label %for.body41

for.body41:                                       ; preds = %for.body41.preheader, %for.body41
  %indvars.iv160 = phi i64 [ 0, %for.body41.preheader ], [ %indvars.iv.next161, %for.body41 ]
  %arrayidx43 = getelementptr inbounds float, float* %3, i64 %indvars.iv160
  %11 = load float, float* %arrayidx43, align 4, !tbaa !4
  %mul = fmul float %11, %conv37
  %arrayidx45 = getelementptr inbounds float, float* %4, i64 %indvars.iv160
  store float %mul, float* %arrayidx45, align 4, !tbaa !4
  %indvars.iv.next161 = add nuw nsw i64 %indvars.iv160, 1
  %exitcond163.not = icmp eq i64 %indvars.iv.next161, %wide.trip.count162
  br i1 %exitcond163.not, label %for.end48, label %for.body41, !llvm.loop !836

for.end48:                                        ; preds = %for.body41
  %cmp49 = icmp sgt i32 %10, 799
  br i1 %cmp49, label %if.then51, label %if.end64

if.then51:                                        ; preds = %for.end48
  %mul52 = fmul float %conv37, 5.000000e+02
  br i1 %cmp14147, label %for.body56.preheader, label %for.end62

for.body56.preheader:                             ; preds = %if.then51
  %wide.trip.count158 = zext i32 %ceplen to i64
  br label %for.body56

for.body56:                                       ; preds = %for.body56.preheader, %for.body56
  %indvars.iv156 = phi i64 [ 0, %for.body56.preheader ], [ %indvars.iv.next157, %for.body56 ]
  %arrayidx58 = getelementptr inbounds float, float* %3, i64 %indvars.iv156
  %12 = load float, float* %arrayidx58, align 4, !tbaa !4
  %mul59 = fmul float %mul52, %12
  store float %mul59, float* %arrayidx58, align 4, !tbaa !4
  %indvars.iv.next157 = add nuw nsw i64 %indvars.iv156, 1
  %exitcond159.not = icmp eq i64 %indvars.iv.next157, %wide.trip.count158
  br i1 %exitcond159.not, label %for.end62, label %for.body56, !llvm.loop !837

for.end62:                                        ; preds = %for.body56, %if.then35, %if.then51
  store i32 500, i32* @cmn_prior.nframe, align 4, !tbaa !37
  br label %if.end64

if.end64:                                         ; preds = %for.end48, %for.end62, %for.end32
  %13 = phi i32 [ %10, %for.end48 ], [ 500, %for.end62 ], [ %10, %for.end32 ]
  %tobool65.not = icmp eq i32 %endutt, 0
  br i1 %tobool65.not, label %cleanup, label %if.then66

if.then66:                                        ; preds = %if.end64
  %conv67 = sitofp i32 %13 to double
  %div68 = fdiv double 1.000000e+00, %conv67
  %conv69 = fptrunc double %div68 to float
  br i1 %cmp14147, label %for.body73.preheader, label %cleanup

for.body73.preheader:                             ; preds = %if.then66
  %wide.trip.count154 = zext i32 %ceplen to i64
  br label %for.body73

for.body73:                                       ; preds = %for.body73.preheader, %for.body73
  %indvars.iv152 = phi i64 [ 0, %for.body73.preheader ], [ %indvars.iv.next153, %for.body73 ]
  %arrayidx75 = getelementptr inbounds float, float* %3, i64 %indvars.iv152
  %14 = load float, float* %arrayidx75, align 4, !tbaa !4
  %mul76 = fmul float %14, %conv69
  %arrayidx78 = getelementptr inbounds float, float* %4, i64 %indvars.iv152
  store float %mul76, float* %arrayidx78, align 4, !tbaa !4
  %indvars.iv.next153 = add nuw nsw i64 %indvars.iv152, 1
  %exitcond155.not = icmp eq i64 %indvars.iv.next153, %wide.trip.count154
  br i1 %exitcond155.not, label %for.end81, label %for.body73, !llvm.loop !838

for.end81:                                        ; preds = %for.body73
  %cmp82 = icmp sgt i32 %13, 800
  br i1 %cmp82, label %if.then84, label %cleanup

if.then84:                                        ; preds = %for.end81
  %mul85 = fmul float %conv69, 5.000000e+02
  br i1 %cmp14147, label %for.body89.preheader, label %for.end95

for.body89.preheader:                             ; preds = %if.then84
  %wide.trip.count = zext i32 %ceplen to i64
  br label %for.body89

for.body89:                                       ; preds = %for.body89.preheader, %for.body89
  %indvars.iv = phi i64 [ 0, %for.body89.preheader ], [ %indvars.iv.next, %for.body89 ]
  %arrayidx91 = getelementptr inbounds float, float* %3, i64 %indvars.iv
  %15 = load float, float* %arrayidx91, align 4, !tbaa !4
  %mul92 = fmul float %mul85, %15
  store float %mul92, float* %arrayidx91, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end95, label %for.body89, !llvm.loop !839

for.end95:                                        ; preds = %for.body89, %if.then84
  store i32 500, i32* @cmn_prior.nframe, align 4, !tbaa !37
  br label %cleanup

cleanup:                                          ; preds = %if.then66, %if.end64, %for.end95, %for.end81, %if.end7
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @cmn(float** nocapture readonly %mfc, i32 %varnorm, i32 %n_frame, i32 %veclen) local_unnamed_addr #0 {
entry:
  %cmp = icmp slt i32 %n_frame, 1
  %cmp1 = icmp slt i32 %veclen, 1
  %or.cond = select i1 %cmp, i1 true, i1 %cmp1
  br i1 %or.cond, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %0 = load float*, float** @cmn_mean, align 8, !tbaa !74
  %cmp2 = icmp eq float* %0, null
  br i1 %cmp2, label %if.then3, label %for.body10.preheader

if.then3:                                         ; preds = %if.end
  %conv211 = zext i32 %veclen to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv211, i64 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.928, i64 0, i64 0), i32 83) #34
  store i8* %call, i8** bitcast (float** @cmn_mean to i8**), align 8, !tbaa !74
  %1 = bitcast i8* %call to float*
  br label %for.body10.preheader

for.body10.preheader:                             ; preds = %if.end, %if.then3
  %2 = phi float* [ %1, %if.then3 ], [ %0, %if.end ]
  %3 = bitcast float* %2 to i8*
  %4 = zext i32 %veclen to i64
  %5 = shl nuw nsw i64 %4, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 %5, i1 false)
  %wide.trip.count274 = zext i32 %n_frame to i64
  %wide.trip.count270 = zext i32 %veclen to i64
  br label %for.body16.preheader

for.body30.preheader:                             ; preds = %for.inc24
  %conv31 = sitofp i32 %n_frame to float
  %wide.trip.count266 = zext i32 %veclen to i64
  br label %for.body30

for.body16.preheader:                             ; preds = %for.inc24, %for.body10.preheader
  %indvars.iv272 = phi i64 [ 0, %for.body10.preheader ], [ %indvars.iv.next273, %for.inc24 ]
  %arrayidx12 = getelementptr inbounds float*, float** %mfc, i64 %indvars.iv272
  %6 = load float*, float** %arrayidx12, align 8, !tbaa !74
  br label %for.body16

for.body16:                                       ; preds = %for.body16.preheader, %for.body16
  %indvars.iv268 = phi i64 [ 0, %for.body16.preheader ], [ %indvars.iv.next269, %for.body16 ]
  %arrayidx18 = getelementptr inbounds float, float* %6, i64 %indvars.iv268
  %7 = load float, float* %arrayidx18, align 4, !tbaa !4
  %arrayidx20 = getelementptr inbounds float, float* %2, i64 %indvars.iv268
  %8 = load float, float* %arrayidx20, align 4, !tbaa !4
  %add = fadd float %7, %8
  store float %add, float* %arrayidx20, align 4, !tbaa !4
  %indvars.iv.next269 = add nuw nsw i64 %indvars.iv268, 1
  %exitcond271.not = icmp eq i64 %indvars.iv.next269, %wide.trip.count270
  br i1 %exitcond271.not, label %for.inc24, label %for.body16, !llvm.loop !840

for.inc24:                                        ; preds = %for.body16
  %indvars.iv.next273 = add nuw nsw i64 %indvars.iv272, 1
  %exitcond275.not = icmp eq i64 %indvars.iv.next273, %wide.trip.count274
  br i1 %exitcond275.not, label %for.body30.preheader, label %for.body16.preheader, !llvm.loop !841

for.body30:                                       ; preds = %for.body30.preheader, %for.body30
  %indvars.iv264 = phi i64 [ 0, %for.body30.preheader ], [ %indvars.iv.next265, %for.body30 ]
  %arrayidx33 = getelementptr inbounds float, float* %2, i64 %indvars.iv264
  %9 = load float, float* %arrayidx33, align 4, !tbaa !4
  %div = fdiv float %9, %conv31
  store float %div, float* %arrayidx33, align 4, !tbaa !4
  %indvars.iv.next265 = add nuw nsw i64 %indvars.iv264, 1
  %exitcond267.not = icmp eq i64 %indvars.iv.next265, %wide.trip.count266
  br i1 %exitcond267.not, label %for.end36, label %for.body30, !llvm.loop !842

for.end36:                                        ; preds = %for.body30
  %tobool.not = icmp eq i32 %varnorm, 0
  br i1 %tobool.not, label %for.body41.preheader, label %if.else

for.body41.preheader:                             ; preds = %for.end36
  %wide.trip.count240 = zext i32 %n_frame to i64
  %wide.trip.count = zext i32 %veclen to i64
  br label %for.body47.preheader

for.body47.preheader:                             ; preds = %for.inc55, %for.body41.preheader
  %indvars.iv238 = phi i64 [ 0, %for.body41.preheader ], [ %indvars.iv.next239, %for.inc55 ]
  %arrayidx43 = getelementptr inbounds float*, float** %mfc, i64 %indvars.iv238
  %10 = load float*, float** %arrayidx43, align 8, !tbaa !74
  br label %for.body47

for.body47:                                       ; preds = %for.body47.preheader, %for.body47
  %indvars.iv = phi i64 [ 0, %for.body47.preheader ], [ %indvars.iv.next, %for.body47 ]
  %arrayidx49 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %11 = load float, float* %arrayidx49, align 4, !tbaa !4
  %arrayidx51 = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %12 = load float, float* %arrayidx51, align 4, !tbaa !4
  %sub = fsub float %12, %11
  store float %sub, float* %arrayidx51, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.inc55, label %for.body47, !llvm.loop !843

for.inc55:                                        ; preds = %for.body47
  %indvars.iv.next239 = add nuw nsw i64 %indvars.iv238, 1
  %exitcond241.not = icmp eq i64 %indvars.iv.next239, %wide.trip.count240
  br i1 %exitcond241.not, label %cleanup, label %for.body47.preheader, !llvm.loop !844

if.else:                                          ; preds = %for.end36
  %13 = load float*, float** @cmn_var, align 8, !tbaa !74
  %cmp58 = icmp eq float* %13, null
  br i1 %cmp58, label %if.then60, label %for.body76.preheader

if.then60:                                        ; preds = %if.else
  %conv61 = sext i32 %veclen to i64
  %call62 = tail call i8* @__ckd_calloc__(i64 %conv61, i64 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.928, i64 0, i64 0), i32 106) #34
  store i8* %call62, i8** bitcast (float** @cmn_var to i8**), align 8, !tbaa !74
  %14 = bitcast i8* %call62 to float*
  br label %for.body76.preheader

for.body76.preheader:                             ; preds = %if.else, %if.then60
  %15 = phi float* [ %14, %if.then60 ], [ %13, %if.else ]
  %16 = bitcast float* %15 to i8*
  %17 = zext i32 %veclen to i64
  %18 = shl nuw nsw i64 %17, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 %18, i1 false)
  %19 = load float*, float** @cmn_mean, align 8
  %wide.trip.count260 = zext i32 %n_frame to i64
  %wide.trip.count256 = zext i32 %veclen to i64
  br label %for.body82.preheader

for.body99.preheader:                             ; preds = %for.inc93
  %conv100 = sitofp i32 %n_frame to double
  %wide.trip.count252 = zext i32 %veclen to i64
  br label %for.body99

for.body82.preheader:                             ; preds = %for.inc93, %for.body76.preheader
  %indvars.iv258 = phi i64 [ 0, %for.body76.preheader ], [ %indvars.iv.next259, %for.inc93 ]
  %arrayidx78 = getelementptr inbounds float*, float** %mfc, i64 %indvars.iv258
  %20 = load float*, float** %arrayidx78, align 8, !tbaa !74
  br label %for.body82

for.body82:                                       ; preds = %for.body82.preheader, %for.body82
  %indvars.iv254 = phi i64 [ 0, %for.body82.preheader ], [ %indvars.iv.next255, %for.body82 ]
  %arrayidx84 = getelementptr inbounds float, float* %20, i64 %indvars.iv254
  %21 = load float, float* %arrayidx84, align 4, !tbaa !4
  %arrayidx86 = getelementptr inbounds float, float* %19, i64 %indvars.iv254
  %22 = load float, float* %arrayidx86, align 4, !tbaa !4
  %sub87 = fsub float %21, %22
  %arrayidx89 = getelementptr inbounds float, float* %15, i64 %indvars.iv254
  %23 = load float, float* %arrayidx89, align 4, !tbaa !4
  %24 = tail call float @llvm.fmuladd.f32(float %sub87, float %sub87, float %23)
  store float %24, float* %arrayidx89, align 4, !tbaa !4
  %indvars.iv.next255 = add nuw nsw i64 %indvars.iv254, 1
  %exitcond257.not = icmp eq i64 %indvars.iv.next255, %wide.trip.count256
  br i1 %exitcond257.not, label %for.inc93, label %for.body82, !llvm.loop !845

for.inc93:                                        ; preds = %for.body82
  %indvars.iv.next259 = add nuw nsw i64 %indvars.iv258, 1
  %exitcond261.not = icmp eq i64 %indvars.iv.next259, %wide.trip.count260
  br i1 %exitcond261.not, label %for.body99.preheader, label %for.body82.preheader, !llvm.loop !846

for.body115.preheader:                            ; preds = %for.body99
  %.pre = load float*, float** @cmn_mean, align 8
  %wide.trip.count248 = zext i32 %n_frame to i64
  %wide.trip.count244 = zext i32 %veclen to i64
  br label %for.body121.preheader

for.body99:                                       ; preds = %for.body99.preheader, %for.body99
  %25 = phi float* [ %15, %for.body99.preheader ], [ %27, %for.body99 ]
  %indvars.iv250 = phi i64 [ 0, %for.body99.preheader ], [ %indvars.iv.next251, %for.body99 ]
  %arrayidx102 = getelementptr inbounds float, float* %25, i64 %indvars.iv250
  %26 = load float, float* %arrayidx102, align 4, !tbaa !4
  %conv103 = fpext float %26 to double
  %div104 = fdiv double %conv100, %conv103
  %call105 = tail call double @sqrt(double %div104) #34
  %conv106 = fptrunc double %call105 to float
  %27 = load float*, float** @cmn_var, align 8, !tbaa !74
  %arrayidx108 = getelementptr inbounds float, float* %27, i64 %indvars.iv250
  store float %conv106, float* %arrayidx108, align 4, !tbaa !4
  %indvars.iv.next251 = add nuw nsw i64 %indvars.iv250, 1
  %exitcond253.not = icmp eq i64 %indvars.iv.next251, %wide.trip.count252
  br i1 %exitcond253.not, label %for.body115.preheader, label %for.body99, !llvm.loop !847

for.body121.preheader:                            ; preds = %for.inc134, %for.body115.preheader
  %indvars.iv246 = phi i64 [ 0, %for.body115.preheader ], [ %indvars.iv.next247, %for.inc134 ]
  %arrayidx117 = getelementptr inbounds float*, float** %mfc, i64 %indvars.iv246
  %28 = load float*, float** %arrayidx117, align 8, !tbaa !74
  br label %for.body121

for.body121:                                      ; preds = %for.body121.preheader, %for.body121
  %indvars.iv242 = phi i64 [ 0, %for.body121.preheader ], [ %indvars.iv.next243, %for.body121 ]
  %arrayidx123 = getelementptr inbounds float, float* %28, i64 %indvars.iv242
  %29 = load float, float* %arrayidx123, align 4, !tbaa !4
  %arrayidx125 = getelementptr inbounds float, float* %.pre, i64 %indvars.iv242
  %30 = load float, float* %arrayidx125, align 4, !tbaa !4
  %sub126 = fsub float %29, %30
  %arrayidx128 = getelementptr inbounds float, float* %27, i64 %indvars.iv242
  %31 = load float, float* %arrayidx128, align 4, !tbaa !4
  %mul = fmul float %sub126, %31
  store float %mul, float* %arrayidx123, align 4, !tbaa !4
  %indvars.iv.next243 = add nuw nsw i64 %indvars.iv242, 1
  %exitcond245.not = icmp eq i64 %indvars.iv.next243, %wide.trip.count244
  br i1 %exitcond245.not, label %for.inc134, label %for.body121, !llvm.loop !848

for.inc134:                                       ; preds = %for.body121
  %indvars.iv.next247 = add nuw nsw i64 %indvars.iv246, 1
  %exitcond249.not = icmp eq i64 %indvars.iv.next247, %wide.trip.count248
  br i1 %exitcond249.not, label %cleanup, label %for.body121.preheader, !llvm.loop !849

cleanup:                                          ; preds = %for.inc134, %for.inc55, %entry
  ret void
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn
declare double @sqrt(double) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize uwtable
define void @cmn_free() local_unnamed_addr #0 {
entry:
  %0 = load i8*, i8** bitcast (float** @cmn_var to i8**), align 8, !tbaa !74
  tail call void @ckd_free(i8* %0) #34
  %1 = load i8*, i8** bitcast (float** @cmn_mean to i8**), align 8, !tbaa !74
  tail call void @ckd_free(i8* %1) #34
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.hash_table_t* @hash_new(i32 %size, i32 %casearg) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.931, i64 0, i64 0), i32 126) #34
  %0 = bitcast i8* %call to %struct.hash_table_t*
  %shr = ashr i32 %size, 1
  %add = add nsw i32 %shr, %size
  %call1 = tail call fastcc i32 @prime_size(i32 %add) #36
  %size2 = getelementptr inbounds i8, i8* %call, i64 8
  %1 = bitcast i8* %size2 to i32*
  store i32 %call1, i32* %1, align 8, !tbaa !850
  %cmp = icmp eq i32 %casearg, 1
  %conv3 = zext i1 %cmp to i8
  %2 = getelementptr inbounds i8, i8* %call, i64 12
  store i8 %conv3, i8* %2, align 4, !tbaa !852
  %conv5 = sext i32 %call1 to i64
  %call6 = tail call i8* @__ckd_calloc__(i64 %conv5, i64 24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.931, i64 0, i64 0), i32 129) #34
  %3 = bitcast i8* %call to i8**
  store i8* %call6, i8** %3, align 8, !tbaa !853
  ret %struct.hash_table_t* %0
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc i32 @prime_size(i32 %size) unnamed_addr #0 {
entry:
  br label %land.rhs

land.rhs:                                         ; preds = %entry, %for.inc
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds [46 x i32], [46 x i32]* @prime, i64 0, i64 %indvars.iv
  %0 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %cmp3 = icmp slt i32 %0, %size
  br i1 %cmp3, label %for.inc, label %if.end.loopexit

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cond = icmp eq i64 %indvars.iv.next, 45
  br i1 %cond, label %if.then, label %land.rhs, !llvm.loop !854

if.then:                                          ; preds = %for.inc
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.931, i64 0, i64 0), i64 115, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.932, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2.933, i64 0, i64 0), i32 %size) #34
  br label %if.end

if.end.loopexit:                                  ; preds = %land.rhs
  %phi.cast = and i64 %indvars.iv, 4294967295
  br label %if.end

if.end:                                           ; preds = %if.end.loopexit, %if.then
  %i.1 = phi i64 [ 44, %if.then ], [ %phi.cast, %if.end.loopexit ]
  %arrayidx8 = getelementptr inbounds [46 x i32], [46 x i32]* @prime, i64 0, i64 %i.1
  %1 = load i32, i32* %arrayidx8, align 4, !tbaa !37
  ret i32 %1
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define i32 @hash_lookup(%struct.hash_table_t* nocapture readonly %h, i8* nocapture readonly %key, i32* nocapture %val) local_unnamed_addr #14 {
entry:
  %call = tail call fastcc i32 @key2hash(%struct.hash_table_t* %h, i8* %key) #36
  %call1 = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %key) #37
  %conv = trunc i64 %call1 to i32
  %call2 = tail call fastcc i32 @lookup(%struct.hash_table_t* %h, i32 %call, i8* %key, i32 %conv, i32* %val) #36
  ret i32 %call2
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define internal fastcc i32 @key2hash(%struct.hash_table_t* nocapture readonly %h, i8* nocapture readonly %key) unnamed_addr #16 {
entry:
  %nocase = getelementptr inbounds %struct.hash_table_t, %struct.hash_table_t* %h, i64 0, i32 2
  %0 = load i8, i8* %nocase, align 4, !tbaa !852
  %tobool.not = icmp eq i8 %0, 0
  %1 = load i8, i8* %key, align 1, !tbaa !63
  %tobool16.not57 = icmp eq i8 %1, 0
  br i1 %tobool.not, label %for.cond15.preheader, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  br i1 %tobool16.not57, label %if.end30, label %for.body

for.cond15.preheader:                             ; preds = %entry
  br i1 %tobool16.not57, label %if.end30, label %for.body17

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %2 = phi i8 [ %4, %for.body ], [ %1, %for.cond.preheader ]
  %hash.064 = phi i32 [ %add, %for.body ], [ 0, %for.cond.preheader ]
  %s.063 = phi i32 [ %spec.select, %for.body ], [ 0, %for.cond.preheader ]
  %cp.062 = phi i8* [ %incdec.ptr, %for.body ], [ %key, %for.cond.preheader ]
  %.off = add i8 %2, -97
  %3 = icmp ult i8 %.off, 26
  %sub = add i8 %2, -32
  %cond = select i1 %3, i8 %sub, i8 %2
  %conv9 = sext i8 %cond to i32
  %shl = shl i32 %conv9, %s.063
  %add = add i32 %shl, %hash.064
  %cmp11 = icmp sgt i32 %s.063, 19
  %spec.select.v = select i1 %cmp11, i32 -19, i32 5
  %spec.select = add nsw i32 %spec.select.v, %s.063
  %incdec.ptr = getelementptr inbounds i8, i8* %cp.062, i64 1
  %4 = load i8, i8* %incdec.ptr, align 1, !tbaa !63
  %tobool1.not = icmp eq i8 %4, 0
  br i1 %tobool1.not, label %if.end30, label %for.body, !llvm.loop !855

for.body17:                                       ; preds = %for.cond15.preheader, %for.body17
  %5 = phi i8 [ %6, %for.body17 ], [ %1, %for.cond15.preheader ]
  %hash.160 = phi i32 [ %add20, %for.body17 ], [ 0, %for.cond15.preheader ]
  %s.259 = phi i32 [ %spec.select55, %for.body17 ], [ 0, %for.cond15.preheader ]
  %cp.158 = phi i8* [ %incdec.ptr28, %for.body17 ], [ %key, %for.cond15.preheader ]
  %conv18 = sext i8 %5 to i32
  %shl19 = shl i32 %conv18, %s.259
  %add20 = add i32 %shl19, %hash.160
  %cmp22 = icmp sgt i32 %s.259, 19
  %spec.select55.v = select i1 %cmp22, i32 -19, i32 5
  %spec.select55 = add nsw i32 %spec.select55.v, %s.259
  %incdec.ptr28 = getelementptr inbounds i8, i8* %cp.158, i64 1
  %6 = load i8, i8* %incdec.ptr28, align 1, !tbaa !63
  %tobool16.not = icmp eq i8 %6, 0
  br i1 %tobool16.not, label %if.end30, label %for.body17, !llvm.loop !856

if.end30:                                         ; preds = %for.body, %for.body17, %for.cond.preheader, %for.cond15.preheader
  %hash.2 = phi i32 [ 0, %for.cond15.preheader ], [ 0, %for.cond.preheader ], [ %add20, %for.body17 ], [ %add, %for.body ]
  %size = getelementptr inbounds %struct.hash_table_t, %struct.hash_table_t* %h, i64 0, i32 1
  %7 = load i32, i32* %size, align 8, !tbaa !850
  %rem = urem i32 %hash.2, %7
  ret i32 %rem
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define internal fastcc i32 @lookup(%struct.hash_table_t* nocapture readonly %h, i32 %hash, i8* nocapture readonly %key, i32 %len, i32* nocapture %val) unnamed_addr #13 {
entry:
  %table = getelementptr inbounds %struct.hash_table_t, %struct.hash_table_t* %h, i64 0, i32 0
  %0 = load %struct.hash_entry_s*, %struct.hash_entry_s** %table, align 8, !tbaa !853
  %idxprom = zext i32 %hash to i64
  %arrayidx = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %0, i64 %idxprom
  %key2 = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %arrayidx, i64 0, i32 0
  %1 = load i8*, i8** %key2, align 8, !tbaa !363
  %cmp = icmp eq i8* %1, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %nocase = getelementptr inbounds %struct.hash_table_t, %struct.hash_table_t* %h, i64 0, i32 2
  %2 = load i8, i8* %nocase, align 4, !tbaa !852
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %land.rhs10, label %land.rhs

land.rhs:                                         ; preds = %if.end, %while.body
  %entry1.050 = phi %struct.hash_entry_s* [ %4, %while.body ], [ %arrayidx, %if.end ]
  %len5 = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %entry1.050, i64 0, i32 1
  %3 = load i32, i32* %len5, align 8, !tbaa !857
  %cmp6.not = icmp eq i32 %3, %len
  br i1 %cmp6.not, label %lor.rhs, label %while.body

lor.rhs:                                          ; preds = %land.rhs
  %call = tail call fastcc i32 @keycmp_nocase(%struct.hash_entry_s* nonnull %entry1.050, i8* %key) #36
  %cmp7.not = icmp eq i32 %call, 0
  br i1 %cmp7.not, label %if.then23, label %while.body

while.body:                                       ; preds = %land.rhs, %lor.rhs
  %next = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %entry1.050, i64 0, i32 3
  %4 = load %struct.hash_entry_s*, %struct.hash_entry_s** %next, align 8, !tbaa !858
  %tobool4.not = icmp eq %struct.hash_entry_s* %4, null
  br i1 %tobool4.not, label %cleanup, label %land.rhs, !llvm.loop !859

land.rhs10:                                       ; preds = %if.end, %while.body18
  %entry1.147 = phi %struct.hash_entry_s* [ %6, %while.body18 ], [ %arrayidx, %if.end ]
  %len11 = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %entry1.147, i64 0, i32 1
  %5 = load i32, i32* %len11, align 8, !tbaa !857
  %cmp12.not = icmp eq i32 %5, %len
  br i1 %cmp12.not, label %lor.rhs13, label %while.body18

lor.rhs13:                                        ; preds = %land.rhs10
  %call14 = tail call fastcc i32 @keycmp_case(%struct.hash_entry_s* nonnull %entry1.147, i8* %key) #36
  %cmp15.not = icmp eq i32 %call14, 0
  br i1 %cmp15.not, label %if.then23, label %while.body18

while.body18:                                     ; preds = %land.rhs10, %lor.rhs13
  %next19 = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %entry1.147, i64 0, i32 3
  %6 = load %struct.hash_entry_s*, %struct.hash_entry_s** %next19, align 8, !tbaa !858
  %tobool9.not = icmp eq %struct.hash_entry_s* %6, null
  br i1 %tobool9.not, label %cleanup, label %land.rhs10, !llvm.loop !860

if.then23:                                        ; preds = %lor.rhs, %lor.rhs13
  %entry1.2 = phi %struct.hash_entry_s* [ %entry1.147, %lor.rhs13 ], [ %entry1.050, %lor.rhs ]
  %val24 = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %entry1.2, i64 0, i32 2
  %7 = load i32, i32* %val24, align 4, !tbaa !361
  store i32 %7, i32* %val, align 4, !tbaa !37
  br label %cleanup

cleanup:                                          ; preds = %while.body, %while.body18, %entry, %if.then23
  %retval.0 = phi i32 [ 0, %if.then23 ], [ -1, %entry ], [ -1, %while.body18 ], [ -1, %while.body ]
  ret i32 %retval.0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define internal fastcc i32 @keycmp_nocase(%struct.hash_entry_s* nocapture readonly %entry1, i8* nocapture readonly %key) unnamed_addr #16 {
entry:
  %len = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %entry1, i64 0, i32 1
  %0 = load i32, i32* %len, align 8, !tbaa !857
  %cmp53 = icmp sgt i32 %0, 0
  br i1 %cmp53, label %for.body.preheader, label %cleanup

for.body.preheader:                               ; preds = %entry
  %key2 = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %entry1, i64 0, i32 0
  %1 = load i8*, i8** %key2, align 8, !tbaa !363
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %str.056 = phi i8* [ %incdec.ptr, %for.inc ], [ %1, %for.body.preheader ]
  %i.055 = phi i32 [ %inc, %for.inc ], [ 0, %for.body.preheader ]
  %key.addr.054 = phi i8* [ %incdec.ptr11, %for.inc ], [ %key, %for.body.preheader ]
  %2 = load i8, i8* %str.056, align 1, !tbaa !63
  %.off = add i8 %2, -97
  %3 = icmp ult i8 %.off, 26
  %sub = add i8 %2, -32
  %cond = select i1 %3, i8 %sub, i8 %2
  %4 = load i8, i8* %key.addr.054, align 1, !tbaa !63
  %.off52 = add i8 %4, -97
  %5 = icmp ult i8 %.off52, 26
  %sub21 = add i8 %4, -32
  %cond25 = select i1 %5, i8 %sub21, i8 %4
  %cmp29.not = icmp eq i8 %cond, %cond25
  br i1 %cmp29.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %conv28 = sext i8 %cond25 to i32
  %conv27 = sext i8 %cond to i32
  %sub33 = sub nsw i32 %conv27, %conv28
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %incdec.ptr11 = getelementptr inbounds i8, i8* %key.addr.054, i64 1
  %incdec.ptr = getelementptr inbounds i8, i8* %str.056, i64 1
  %inc = add nuw nsw i32 %i.055, 1
  %exitcond.not = icmp eq i32 %inc, %0
  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !861

cleanup:                                          ; preds = %for.inc, %entry, %if.then
  %retval.0 = phi i32 [ %sub33, %if.then ], [ 0, %entry ], [ 0, %for.inc ]
  ret i32 %retval.0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define internal fastcc i32 @keycmp_case(%struct.hash_entry_s* nocapture readonly %entry1, i8* nocapture readonly %key) unnamed_addr #16 {
entry:
  %len = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %entry1, i64 0, i32 1
  %0 = load i32, i32* %len, align 8, !tbaa !857
  %cmp19 = icmp sgt i32 %0, 0
  br i1 %cmp19, label %for.body.preheader, label %cleanup

for.body.preheader:                               ; preds = %entry
  %key2 = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %entry1, i64 0, i32 0
  %1 = load i8*, i8** %key2, align 8, !tbaa !363
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %str.022 = phi i8* [ %incdec.ptr, %for.inc ], [ %1, %for.body.preheader ]
  %i.021 = phi i32 [ %inc, %for.inc ], [ 0, %for.body.preheader ]
  %key.addr.020 = phi i8* [ %incdec.ptr3, %for.inc ], [ %key, %for.body.preheader ]
  %2 = load i8, i8* %str.022, align 1, !tbaa !63
  %3 = load i8, i8* %key.addr.020, align 1, !tbaa !63
  %cmp5.not = icmp eq i8 %2, %3
  br i1 %cmp5.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %conv4 = sext i8 %3 to i32
  %conv = sext i8 %2 to i32
  %sub = sub nsw i32 %conv, %conv4
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %incdec.ptr3 = getelementptr inbounds i8, i8* %key.addr.020, i64 1
  %incdec.ptr = getelementptr inbounds i8, i8* %str.022, i64 1
  %inc = add nuw nsw i32 %i.021, 1
  %exitcond.not = icmp eq i32 %inc, %0
  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !862

cleanup:                                          ; preds = %for.inc, %entry, %if.then
  %retval.0 = phi i32 [ %sub, %if.then ], [ 0, %entry ], [ 0, %for.inc ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @hash_lookup_bkey(%struct.hash_table_t* nocapture readonly %h, i8* nocapture readonly %key, i32 %len, i32* nocapture %val) local_unnamed_addr #0 {
entry:
  %call = tail call fastcc i8* @makekey(i8* %key, i32 %len) #36
  %call1 = tail call fastcc i32 @key2hash(%struct.hash_table_t* %h, i8* %call) #36
  tail call void @ckd_free(i8* %call) #34
  %call2 = tail call fastcc i32 @lookup(%struct.hash_table_t* %h, i32 %call1, i8* %key, i32 %len, i32* %val) #36
  ret i32 %call2
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc i8* @makekey(i8* nocapture readonly %data, i32 %len) unnamed_addr #0 {
entry:
  %mul = shl nsw i32 %len, 1
  %add = or i32 %mul, 1
  %conv = sext i32 %add to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv, i64 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.931, i64 0, i64 0), i32 177) #34
  %cmp2 = icmp sgt i32 %len, 0
  br i1 %cmp2, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv6 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next7, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 %indvars.iv6
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !63
  %1 = and i8 %0, 15
  %narrow = add nuw nsw i8 %1, 65
  %arrayidx6 = getelementptr inbounds i8, i8* %call, i64 %indvars.iv
  store i8 %narrow, i8* %arrayidx6, align 1, !tbaa !63
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !63
  %3 = lshr i8 %2, 4
  %narrow1 = add nuw nsw i8 %3, 74
  %4 = or i64 %indvars.iv, 1
  %arrayidx15 = getelementptr inbounds i8, i8* %call, i64 %4
  store i8 %narrow1, i8* %arrayidx15, align 1, !tbaa !63
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not = icmp eq i64 %indvars.iv.next7, %wide.trip.count
  br i1 %exitcond.not, label %for.end.loopexit, label %for.body, !llvm.loop !863

for.end.loopexit:                                 ; preds = %for.body
  %phi.cast = and i64 %indvars.iv.next, 4294967294
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %entry
  %j.0.lcssa = phi i64 [ 0, %entry ], [ %phi.cast, %for.end.loopexit ]
  %arrayidx18 = getelementptr inbounds i8, i8* %call, i64 %j.0.lcssa
  store i8 0, i8* %arrayidx18, align 1, !tbaa !63
  ret i8* %call
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @hash_enter(%struct.hash_table_t* nocapture readonly %h, i8* %key, i32 %val) local_unnamed_addr #0 {
entry:
  %call = tail call fastcc i32 @key2hash(%struct.hash_table_t* %h, i8* %key) #36
  %call1 = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %key) #37
  %conv = trunc i64 %call1 to i32
  %call2 = tail call fastcc i32 @enter(%struct.hash_table_t* %h, i32 %call, i8* %key, i32 %conv, i32 %val) #36
  ret i32 %call2
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc i32 @enter(%struct.hash_table_t* nocapture readonly %h, i32 %hash, i8* %key, i32 %len, i32 %val) unnamed_addr #0 {
entry:
  %old = alloca i32, align 4
  %0 = bitcast i32* %old to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %call = call fastcc i32 @lookup(%struct.hash_table_t* %h, i32 %hash, i8* %key, i32 %len, i32* nonnull %old) #36
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %old, align 4, !tbaa !37
  br label %cleanup

if.end:                                           ; preds = %entry
  %table = getelementptr inbounds %struct.hash_table_t, %struct.hash_table_t* %h, i64 0, i32 0
  %2 = load %struct.hash_entry_s*, %struct.hash_entry_s** %table, align 8, !tbaa !853
  %idxprom = zext i32 %hash to i64
  %key1 = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %2, i64 %idxprom, i32 0
  %3 = load i8*, i8** %key1, align 8, !tbaa !363
  %cmp2 = icmp eq i8* %3, null
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  store i8* %key, i8** %key1, align 8, !tbaa !363
  %len5 = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %2, i64 %idxprom, i32 1
  store i32 %len, i32* %len5, align 8, !tbaa !857
  %val6 = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %2, i64 %idxprom, i32 2
  store i32 %val, i32* %val6, align 4, !tbaa !361
  br label %cleanup

if.else:                                          ; preds = %if.end
  %call7 = tail call i8* @__ckd_calloc__(i64 1, i64 24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.931, i64 0, i64 0), i32 299) #34
  %key8 = bitcast i8* %call7 to i8**
  store i8* %key, i8** %key8, align 8, !tbaa !363
  %len9 = getelementptr inbounds i8, i8* %call7, i64 8
  %4 = bitcast i8* %len9 to i32*
  store i32 %len, i32* %4, align 8, !tbaa !857
  %val10 = getelementptr inbounds i8, i8* %call7, i64 12
  %5 = bitcast i8* %val10 to i32*
  store i32 %val, i32* %5, align 4, !tbaa !361
  %next = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %2, i64 %idxprom, i32 3
  %6 = load %struct.hash_entry_s*, %struct.hash_entry_s** %next, align 8, !tbaa !858
  %next11 = getelementptr inbounds i8, i8* %call7, i64 16
  %7 = bitcast i8* %next11 to %struct.hash_entry_s**
  store %struct.hash_entry_s* %6, %struct.hash_entry_s** %7, align 8, !tbaa !858
  %8 = bitcast %struct.hash_entry_s** %next to i8**
  store i8* %call7, i8** %8, align 8, !tbaa !858
  br label %cleanup

cleanup:                                          ; preds = %if.then3, %if.else, %if.then
  %retval.0 = phi i32 [ %1, %if.then ], [ %val, %if.else ], [ %val, %if.then3 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @hash_enter_bkey(%struct.hash_table_t* nocapture readonly %h, i8* %key, i32 %len, i32 %val) local_unnamed_addr #0 {
entry:
  %call = tail call fastcc i8* @makekey(i8* %key, i32 %len) #36
  %call1 = tail call fastcc i32 @key2hash(%struct.hash_table_t* %h, i8* %call) #36
  tail call void @ckd_free(i8* %call) #34
  %call2 = tail call fastcc i32 @enter(%struct.hash_table_t* %h, i32 %call1, i8* %key, i32 %len, i32 %val) #36
  ret i32 %call2
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.gnode_s* @hash_tolist(%struct.hash_table_t* nocapture readonly %h, i32* nocapture %count) local_unnamed_addr #0 {
entry:
  %size = getelementptr inbounds %struct.hash_table_t, %struct.hash_table_t* %h, i64 0, i32 1
  %table = getelementptr inbounds %struct.hash_table_t, %struct.hash_table_t* %h, i64 0, i32 0
  %0 = load i32, i32* %size, align 8, !tbaa !850
  %cmp33 = icmp sgt i32 %0, 0
  br i1 %cmp33, label %for.body, label %for.end9

for.body:                                         ; preds = %entry, %for.inc7
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc7 ], [ 0, %entry ]
  %j.036 = phi i32 [ %j.2, %for.inc7 ], [ 0, %entry ]
  %g.034 = phi %struct.gnode_s* [ %g.2, %for.inc7 ], [ null, %entry ]
  %1 = load %struct.hash_entry_s*, %struct.hash_entry_s** %table, align 8, !tbaa !853
  %arrayidx = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %1, i64 %indvars.iv
  %key = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %arrayidx, i64 0, i32 0
  %2 = load i8*, i8** %key, align 8, !tbaa !363
  %cmp1.not = icmp eq i8* %2, null
  br i1 %cmp1.not, label %for.inc7, label %if.then

if.then:                                          ; preds = %for.body
  %3 = bitcast %struct.hash_entry_s* %arrayidx to i8*
  %call = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %g.034, i8* %3) #34
  %next = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %1, i64 %indvars.iv, i32 3
  %j.126 = add nsw i32 %j.036, 1
  %e.027 = load %struct.hash_entry_s*, %struct.hash_entry_s** %next, align 8, !tbaa !858
  %tobool.not28 = icmp eq %struct.hash_entry_s* %e.027, null
  br i1 %tobool.not28, label %for.inc7, label %for.body3

for.body3:                                        ; preds = %if.then, %for.body3
  %e.031 = phi %struct.hash_entry_s* [ %e.0, %for.body3 ], [ %e.027, %if.then ]
  %j.130 = phi i32 [ %j.1, %for.body3 ], [ %j.126, %if.then ]
  %g.129 = phi %struct.gnode_s* [ %call4, %for.body3 ], [ %call, %if.then ]
  %4 = bitcast %struct.hash_entry_s* %e.031 to i8*
  %call4 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %g.129, i8* nonnull %4) #34
  %next6 = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %e.031, i64 0, i32 3
  %j.1 = add nsw i32 %j.130, 1
  %e.0 = load %struct.hash_entry_s*, %struct.hash_entry_s** %next6, align 8, !tbaa !858
  %tobool.not = icmp eq %struct.hash_entry_s* %e.0, null
  br i1 %tobool.not, label %for.inc7, label %for.body3, !llvm.loop !864

for.inc7:                                         ; preds = %for.body3, %if.then, %for.body
  %g.2 = phi %struct.gnode_s* [ %g.034, %for.body ], [ %call, %if.then ], [ %call4, %for.body3 ]
  %j.2 = phi i32 [ %j.036, %for.body ], [ %j.126, %if.then ], [ %j.1, %for.body3 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32, i32* %size, align 8, !tbaa !850
  %6 = sext i32 %5 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.end9, !llvm.loop !865

for.end9:                                         ; preds = %for.inc7, %entry
  %g.0.lcssa = phi %struct.gnode_s* [ null, %entry ], [ %g.2, %for.inc7 ]
  %j.0.lcssa = phi i32 [ 0, %entry ], [ %j.2, %for.inc7 ]
  store i32 %j.0.lcssa, i32* %count, align 4, !tbaa !37
  ret %struct.gnode_s* %g.0.lcssa
}

; Function Attrs: noinline nounwind optsize uwtable
define void @hash_free(%struct.hash_table_t* %h) local_unnamed_addr #0 {
entry:
  %size = getelementptr inbounds %struct.hash_table_t, %struct.hash_table_t* %h, i64 0, i32 1
  %table = getelementptr inbounds %struct.hash_table_t, %struct.hash_table_t* %h, i64 0, i32 0
  %0 = load i32, i32* %size, align 8, !tbaa !850
  %cmp19 = icmp sgt i32 %0, 0
  br i1 %cmp19, label %for.body, label %for.end5

for.body:                                         ; preds = %entry, %for.inc4
  %1 = phi i32 [ %6, %for.inc4 ], [ %0, %entry ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc4 ], [ 0, %entry ]
  %2 = load %struct.hash_entry_s*, %struct.hash_entry_s** %table, align 8, !tbaa !853
  %next = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %2, i64 %indvars.iv, i32 3
  %3 = load %struct.hash_entry_s*, %struct.hash_entry_s** %next, align 8, !tbaa !858
  %tobool.not17 = icmp eq %struct.hash_entry_s* %3, null
  br i1 %tobool.not17, label %for.inc4, label %for.body2

for.body2:                                        ; preds = %for.body, %for.body2
  %e.018 = phi %struct.hash_entry_s* [ %4, %for.body2 ], [ %3, %for.body ]
  %next3 = getelementptr inbounds %struct.hash_entry_s, %struct.hash_entry_s* %e.018, i64 0, i32 3
  %4 = load %struct.hash_entry_s*, %struct.hash_entry_s** %next3, align 8, !tbaa !858
  %5 = bitcast %struct.hash_entry_s* %e.018 to i8*
  tail call void @ckd_free(i8* nonnull %5) #34
  %tobool.not = icmp eq %struct.hash_entry_s* %4, null
  br i1 %tobool.not, label %for.inc4.loopexit, label %for.body2, !llvm.loop !866

for.inc4.loopexit:                                ; preds = %for.body2
  %.pre = load i32, i32* %size, align 8, !tbaa !850
  br label %for.inc4

for.inc4:                                         ; preds = %for.inc4.loopexit, %for.body
  %6 = phi i32 [ %.pre, %for.inc4.loopexit ], [ %1, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %7 = sext i32 %6 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %7
  br i1 %cmp, label %for.body, label %for.end5, !llvm.loop !867

for.end5:                                         ; preds = %for.inc4, %entry
  %8 = bitcast %struct.hash_table_t* %h to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !853
  tail call void @ckd_free(i8* %9) #34
  %10 = bitcast %struct.hash_table_t* %h to i8*
  tail call void @ckd_free(i8* %10) #34
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn
define i32 @approx_isskip(i32 %frame, i32 %ds_ratio, i32 %cond_ds, i32 %isSameBestIdx, i32* nocapture %skip_count) local_unnamed_addr #4 {
entry:
  %cmp = icmp sgt i32 %cond_ds, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tobool.not = icmp eq i32 %isSameBestIdx, 0
  br i1 %tobool.not, label %return, label %if.then1

if.then1:                                         ; preds = %if.then
  %0 = load i32, i32* %skip_count, align 4, !tbaa !37
  %sub = add nsw i32 %ds_ratio, -1
  %cmp2 = icmp slt i32 %0, %sub
  br i1 %cmp2, label %return, label %if.else

if.else:                                          ; preds = %if.then1
  store i32 0, i32* %skip_count, align 4, !tbaa !37
  br label %return

if.end:                                           ; preds = %entry
  %rem = srem i32 %frame, %ds_ratio
  %cmp5 = icmp ne i32 %rem, 0
  %. = zext i1 %cmp5 to i32
  br label %return

return:                                           ; preds = %if.end, %if.then, %if.then1, %if.else
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then1 ], [ 0, %if.then ], [ %., %if.end ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @approx_mgau_eval(%struct.gs_s* %gs, %struct.subvq_t* %svq, %struct.mgau_model_t* %g, %struct.kb_t* nocapture readonly %kb, i32 %s, i32* nocapture %senscr, float* %feat, i32 %best_cid, i32 %svq_beam) local_unnamed_addr #0 {
entry:
  %tobool.not = icmp eq %struct.gs_s* %gs, null
  br i1 %tobool.not, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %gs4gs = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 25
  %0 = load i32, i32* %gs4gs, align 8, !tbaa !108
  %tobool1.not = icmp eq i32 %0, 0
  br i1 %tobool1.not, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %1 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %idxprom = sext i32 %s to i64
  %n_comp = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %idxprom, i32 0
  %2 = load i32, i32* %n_comp, align 8, !tbaa !285
  %call = tail call i32 @gs_mgau_shortlist(%struct.gs_s* nonnull %gs, i32 %s, i32 %2, float* %feat, i32 %best_cid) #34
  %mgau_sl2 = getelementptr inbounds %struct.gs_s, %struct.gs_s* %gs, i64 0, i32 9
  br label %if.end16.sink.split

if.else:                                          ; preds = %land.lhs.true, %entry
  %tobool3.not = icmp eq %struct.subvq_t* %svq, null
  %mgau12 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %3 = load %struct.mgau_t*, %struct.mgau_t** %mgau12, align 8, !tbaa !284
  %idxprom13 = sext i32 %s to i64
  %n_comp15 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %3, i64 %idxprom13, i32 0
  %4 = load i32, i32* %n_comp15, align 8, !tbaa !285
  br i1 %tobool3.not, label %if.end16, label %if.then4

if.then4:                                         ; preds = %if.else
  %call9 = tail call i32 @subvq_mgau_shortlist(%struct.subvq_t* nonnull %svq, i32 %s, i32 %4, i32 %svq_beam) #34
  %mgau_sl10 = getelementptr inbounds %struct.subvq_t, %struct.subvq_t* %svq, i64 0, i32 9
  br label %if.end16.sink.split

if.end16.sink.split:                              ; preds = %if.then, %if.then4
  %mgau_sl10.sink = phi i32** [ %mgau_sl10, %if.then4 ], [ %mgau_sl2, %if.then ]
  %ng.0.ph = phi i32 [ %call9, %if.then4 ], [ %call, %if.then ]
  %5 = load i32*, i32** %mgau_sl10.sink, align 8, !tbaa !74
  br label %if.end16

if.end16:                                         ; preds = %if.end16.sink.split, %if.else
  %ng.0 = phi i32 [ %4, %if.else ], [ %ng.0.ph, %if.end16.sink.split ]
  %mgau_sl.0 = phi i32* [ null, %if.else ], [ %5, %if.end16.sink.split ]
  %cmp = icmp eq i32 %ng.0, 0
  br i1 %cmp, label %if.then17, label %if.end22

if.then17:                                        ; preds = %if.end16
  %mgau18 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %6 = load %struct.mgau_t*, %struct.mgau_t** %mgau18, align 8, !tbaa !284
  %idxprom19 = sext i32 %s to i64
  %n_comp21 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %6, i64 %idxprom19, i32 0
  %7 = load i32, i32* %n_comp21, align 8, !tbaa !285
  br label %if.end22

if.end22:                                         ; preds = %if.then17, %if.end16
  %ng.1 = phi i32 [ %7, %if.then17 ], [ %ng.0, %if.end16 ]
  %mgau_sl.1 = phi i32* [ null, %if.then17 ], [ %mgau_sl.0, %if.end16 ]
  %tobool23.not = icmp eq %struct.subvq_t* %svq, null
  br i1 %tobool23.not, label %if.else34, label %land.lhs.true24

land.lhs.true24:                                  ; preds = %if.end22
  %svq4svq = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 26
  %8 = load i32, i32* %svq4svq, align 4, !tbaa !109
  %tobool25.not = icmp eq i32 %8, 0
  br i1 %tobool25.not, label %if.else34, label %if.then26

if.then26:                                        ; preds = %land.lhs.true24
  %mgau27 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %9 = load %struct.mgau_t*, %struct.mgau_t** %mgau27, align 8, !tbaa !284
  %idxprom28 = sext i32 %s to i64
  %n_comp30 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %9, i64 %idxprom28, i32 0
  %10 = load i32, i32* %n_comp30, align 8, !tbaa !285
  %call31 = tail call i32 @subvq_mgau_eval(%struct.mgau_model_t* nonnull %g, %struct.subvq_t* nonnull %svq, i32 %s, i32 %10, i32* %mgau_sl.1) #34
  br label %if.end38

if.else34:                                        ; preds = %land.lhs.true24, %if.end22
  %call35 = tail call i32 @mgau_eval(%struct.mgau_model_t* nonnull %g, i32 %s, i32* %mgau_sl.1, float* %feat) #34
  %idxprom36 = sext i32 %s to i64
  br label %if.end38

if.end38:                                         ; preds = %if.else34, %if.then26
  %idxprom36.sink = phi i64 [ %idxprom36, %if.else34 ], [ %idxprom28, %if.then26 ]
  %call35.sink = phi i32 [ %call35, %if.else34 ], [ %call31, %if.then26 ]
  %arrayidx37 = getelementptr inbounds i32, i32* %senscr, i64 %idxprom36.sink
  store i32 %call35.sink, i32* %arrayidx37, align 4, !tbaa !37
  %arrayidx40 = getelementptr inbounds i32, i32* %senscr, i64 %idxprom36.sink
  %cmp41 = icmp sgt i32 %call35.sink, -939424097
  %cmp43 = icmp eq i32* %mgau_sl.1, null
  %or.cond = select i1 %cmp41, i1 true, i1 %cmp43
  br i1 %or.cond, label %if.end68, label %if.else45

if.else45:                                        ; preds = %if.end38
  %mgau46 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %11 = load %struct.mgau_t*, %struct.mgau_t** %mgau46, align 8, !tbaa !284
  %n_comp49 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %11, i64 %idxprom36.sink, i32 0
  %12 = load i32, i32* %n_comp49, align 8, !tbaa !285
  %add = add nsw i32 %12, %ng.1
  br i1 %tobool23.not, label %if.else62, label %land.lhs.true51

land.lhs.true51:                                  ; preds = %if.else45
  %svq4svq52 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 26
  %13 = load i32, i32* %svq4svq52, align 4, !tbaa !109
  %tobool53.not = icmp eq i32 %13, 0
  br i1 %tobool53.not, label %if.else62, label %if.then54

if.then54:                                        ; preds = %land.lhs.true51
  %call59 = tail call i32 @subvq_mgau_eval(%struct.mgau_model_t* nonnull %g, %struct.subvq_t* nonnull %svq, i32 %s, i32 %12, i32* null) #34
  br label %if.end68.sink.split

if.else62:                                        ; preds = %land.lhs.true51, %if.else45
  %call63 = tail call i32 @mgau_eval(%struct.mgau_model_t* nonnull %g, i32 %s, i32* null, float* %feat) #34
  br label %if.end68.sink.split

if.end68.sink.split:                              ; preds = %if.then54, %if.else62
  %call63.sink = phi i32 [ %call63, %if.else62 ], [ %call59, %if.then54 ]
  store i32 %call63.sink, i32* %arrayidx40, align 4, !tbaa !37
  br label %if.end68

if.end68:                                         ; preds = %if.end68.sink.split, %if.end38
  %ng.2 = phi i32 [ %ng.1, %if.end38 ], [ %add, %if.end68.sink.split ]
  ret i32 %ng.2
}

; Function Attrs: noinline nounwind optsize uwtable
define void @approx_cont_mgau_ci_eval(%struct.mgau_model_t* %g, float* %feat, i32* nocapture %ci_senscr, %struct.kb_t* nocapture readonly %kb) local_unnamed_addr #0 {
entry:
  %kbcore = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 0
  %0 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  %mdef1 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %0, i64 0, i32 1
  %1 = load %struct.mdef_t*, %struct.mdef_t** %mdef1, align 8, !tbaa !14
  %cd2cisen2 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %1, i64 0, i32 11
  %2 = load i16*, i16** %cd2cisen2, align 8, !tbaa !115
  %3 = load i16, i16* %2, align 2, !tbaa !40
  %cmp14 = icmp eq i16 %3, 0
  br i1 %cmp14, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %4 = trunc i64 %indvars.iv to i32
  %call = tail call i32 @mgau_eval(%struct.mgau_model_t* %g, i32 %4, i32* null, float* %feat) #34
  %arrayidx5 = getelementptr inbounds i32, i32* %ci_senscr, i64 %indvars.iv
  store i32 %call, i32* %arrayidx5, align 4, !tbaa !37
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %arrayidx = getelementptr inbounds i16, i16* %2, i64 %indvars.iv.next
  %5 = load i16, i16* %arrayidx, align 2, !tbaa !40
  %conv = sext i16 %5 to i64
  %6 = and i64 %conv, 4294967295
  %cmp = icmp eq i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !868

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @approx_cont_mgau_frame_eval(%struct.mgau_model_t* %g, %struct.gs_s* %gs, %struct.subvq_t* %svq, i32 %svq_beam, float* %feat, i32* %sen_active, i32* nocapture %senscr, i32* nocapture readonly %cache_ci_senscr, %struct.kb_t* %kb, i32 %frame) local_unnamed_addr #0 {
entry:
  %tm_ovrhd = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 42
  tail call void @ptmr_start(%struct.ptmr_t* nonnull %tm_ovrhd) #34
  %tobool.not = icmp eq %struct.gs_s* %gs, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 @gc_compute_closest_cw(%struct.gs_s* nonnull %gs, float* %feat) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %best_cid.0 = phi i32 [ %call, %if.then ], [ -1, %entry ]
  %tobool1.not = icmp eq %struct.subvq_t* %svq, null
  br i1 %tobool1.not, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  tail call void @subvq_gautbl_eval_logs3(%struct.subvq_t* nonnull %svq, float* %feat) #34
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  tail call void @ptmr_stop(%struct.ptmr_t* nonnull %tm_ovrhd) #34
  %ds_ratio = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 23
  %0 = load i32, i32* %ds_ratio, align 8, !tbaa !103
  %cond_ds = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 24
  %1 = load i32, i32* %cond_ds, align 4, !tbaa !106
  %rec_bstcid = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 13
  %2 = load i32, i32* %rec_bstcid, align 8, !tbaa !104
  %cmp = icmp eq i32 %2, %best_cid.0
  %conv = zext i1 %cmp to i32
  %skip_count = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 18
  %call5 = tail call i32 @approx_isskip(i32 %frame, i32 %0, i32 %1, i32 %conv, i32* nonnull %skip_count) #36
  store i32 %best_cid.0, i32* %rec_bstcid, align 8, !tbaa !104
  %kbcore = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 0
  %3 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  %mdef7 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %3, i64 0, i32 1
  %4 = load %struct.mdef_t*, %struct.mdef_t** %mdef7, align 8, !tbaa !14
  %cd2cisen8 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %4, i64 0, i32 11
  %5 = load i16*, i16** %cd2cisen8, align 8, !tbaa !115
  %n_mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 0
  %tobool11.not = icmp eq i32* %sen_active, null
  %tobool18.not = icmp eq i32 %call5, 0
  %rec_sen_active83 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 12
  %rec_bst_senscr = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 14
  %ci_pbeam = getelementptr inbounds %struct.kb_t, %struct.kb_t* %kb, i64 0, i32 27
  %mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %6 = load i32, i32* %n_mgau, align 8, !tbaa !92
  %cmp9307 = icmp sgt i32 %6, 0
  br i1 %cmp9307, label %for.body, label %for.end138

for.body:                                         ; preds = %if.end3, %for.inc136
  %indvars.iv337 = phi i64 [ %indvars.iv.next338, %for.inc136 ], [ 0, %if.end3 ]
  %best.0319 = phi i32 [ %best.3, %for.inc136 ], [ -2147483648, %if.end3 ]
  %pbest.0316 = phi i32 [ %pbest.3, %for.inc136 ], [ -2147483648, %if.end3 ]
  %ns.0312 = phi i32 [ %ns.3, %for.inc136 ], [ 0, %if.end3 ]
  %ng.0308 = phi i32 [ %ng.3, %for.inc136 ], [ 0, %if.end3 ]
  br i1 %tobool11.not, label %lor.end.thread, label %lor.end

lor.end:                                          ; preds = %for.body
  %arrayidx = getelementptr inbounds i32, i32* %sen_active, i64 %indvars.iv337
  %7 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %tobool12.not = icmp eq i32 %7, 0
  %arrayidx14 = getelementptr inbounds i16, i16* %5, i64 %indvars.iv337
  %8 = load i16, i16* %arrayidx14, align 2, !tbaa !40
  br i1 %tobool18.not, label %if.then19, label %if.else80

lor.end.thread:                                   ; preds = %for.body
  %arrayidx14288 = getelementptr inbounds i16, i16* %5, i64 %indvars.iv337
  %9 = load i16, i16* %arrayidx14288, align 2, !tbaa !40
  br i1 %tobool18.not, label %if.then19.thread, label %if.then82

if.then19:                                        ; preds = %lor.end
  %conv15 = sext i16 %8 to i64
  %10 = and i64 %conv15, 4294967295
  %cmp16 = icmp eq i64 %indvars.iv337, %10
  br i1 %cmp16, label %if.then21, label %if.else

if.then19.thread:                                 ; preds = %lor.end.thread
  %conv15297 = sext i16 %9 to i64
  %11 = and i64 %conv15297, 4294967295
  %cmp16298 = icmp eq i64 %indvars.iv337, %11
  br i1 %cmp16298, label %if.then21, label %if.then47

if.then21:                                        ; preds = %if.then19.thread, %if.then19
  %arrayidx23 = getelementptr inbounds i32, i32* %cache_ci_senscr, i64 %indvars.iv337
  %12 = load i32, i32* %arrayidx23, align 4, !tbaa !37
  %arrayidx25 = getelementptr inbounds i32, i32* %senscr, i64 %indvars.iv337
  store i32 %12, i32* %arrayidx25, align 4, !tbaa !37
  %cmp28 = icmp slt i32 %pbest.0316, %12
  %spec.select = select i1 %cmp28, i32 %12, i32 %pbest.0316
  %cmp36 = icmp slt i32 %best.0319, %12
  %best.1 = select i1 %cmp36, i32 %12, i32 %best.0319
  %arrayidx43 = getelementptr inbounds i32, i32* %sen_active, i64 %indvars.iv337
  store i32 1, i32* %arrayidx43, align 4, !tbaa !37
  %13 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %n_comp = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %13, i64 %indvars.iv337, i32 0
  %14 = load i32, i32* %n_comp, align 8, !tbaa !285
  %add = add nsw i32 %14, %ng.0308
  %inc = add nsw i32 %ns.0312, 1
  br label %if.end75

if.else:                                          ; preds = %if.then19
  br i1 %tobool12.not, label %if.end75, label %if.then47

if.then47:                                        ; preds = %if.then19.thread, %if.else
  %15 = phi i16 [ %8, %if.else ], [ %9, %if.then19.thread ]
  %idxprom50 = sext i16 %15 to i64
  %arrayidx51 = getelementptr inbounds i32, i32* %senscr, i64 %idxprom50
  %16 = load i32, i32* %arrayidx51, align 4, !tbaa !37
  %sub = sub nsw i32 %pbest.0316, %16
  %17 = load i32, i32* %ci_pbeam, align 8, !tbaa !110
  %cmp52 = icmp slt i32 %sub, %17
  br i1 %cmp52, label %if.then54, label %if.else58

if.then54:                                        ; preds = %if.then47
  %18 = trunc i64 %indvars.iv337 to i32
  %call55 = tail call i32 @approx_mgau_eval(%struct.gs_s* %gs, %struct.subvq_t* %svq, %struct.mgau_model_t* nonnull %g, %struct.kb_t* nonnull %kb, i32 %18, i32* nonnull %senscr, float* %feat, i32 %best_cid.0, i32 %svq_beam) #36
  %add56 = add nsw i32 %call55, %ng.0308
  %inc57 = add nsw i32 %ns.0312, 1
  %arrayidx67.phi.trans.insert = getelementptr inbounds i32, i32* %senscr, i64 %indvars.iv337
  %.pre340 = load i32, i32* %arrayidx67.phi.trans.insert, align 4, !tbaa !37
  br label %if.end65

if.else58:                                        ; preds = %if.then47
  %arrayidx64 = getelementptr inbounds i32, i32* %senscr, i64 %indvars.iv337
  store i32 %16, i32* %arrayidx64, align 4, !tbaa !37
  br label %if.end65

if.end65:                                         ; preds = %if.else58, %if.then54
  %19 = phi i32 [ %.pre340, %if.then54 ], [ %16, %if.else58 ]
  %ng.1 = phi i32 [ %add56, %if.then54 ], [ %ng.0308, %if.else58 ]
  %ns.1 = phi i32 [ %inc57, %if.then54 ], [ %ns.0312, %if.else58 ]
  %cmp68 = icmp slt i32 %best.0319, %19
  %spec.select286 = select i1 %cmp68, i32 %19, i32 %best.0319
  %arrayidx77.phi.trans.insert = getelementptr inbounds i32, i32* %sen_active, i64 %indvars.iv337
  %.pre341 = load i32, i32* %arrayidx77.phi.trans.insert, align 4, !tbaa !37
  br label %if.end75

if.end75:                                         ; preds = %if.end65, %if.else, %if.then21
  %20 = phi i32 [ 1, %if.then21 ], [ 0, %if.else ], [ %.pre341, %if.end65 ]
  %ng.2 = phi i32 [ %add, %if.then21 ], [ %ng.0308, %if.else ], [ %ng.1, %if.end65 ]
  %ns.2 = phi i32 [ %inc, %if.then21 ], [ %ns.0312, %if.else ], [ %ns.1, %if.end65 ]
  %pbest.2 = phi i32 [ %spec.select, %if.then21 ], [ %pbest.0316, %if.else ], [ %pbest.0316, %if.end65 ]
  %best.2 = phi i32 [ %best.1, %if.then21 ], [ %best.0319, %if.else ], [ %spec.select286, %if.end65 ]
  %21 = load i32*, i32** %rec_sen_active83, align 8, !tbaa !51
  %arrayidx79 = getelementptr inbounds i32, i32* %21, i64 %indvars.iv337
  store i32 %20, i32* %arrayidx79, align 4, !tbaa !37
  br label %for.inc136

if.else80:                                        ; preds = %lor.end
  br i1 %tobool12.not, label %for.inc136, label %if.then82

if.then82:                                        ; preds = %lor.end.thread, %if.else80
  %22 = load i32*, i32** %rec_sen_active83, align 8, !tbaa !51
  %arrayidx85 = getelementptr inbounds i32, i32* %22, i64 %indvars.iv337
  %23 = load i32, i32* %arrayidx85, align 4, !tbaa !37
  %tobool86.not = icmp eq i32 %23, 0
  br i1 %tobool86.not, label %if.else92, label %for.inc136

if.else92:                                        ; preds = %if.then82
  store i32 1, i32* %arrayidx85, align 4, !tbaa !37
  %24 = trunc i64 %indvars.iv337 to i32
  %call96 = tail call i32 @approx_mgau_eval(%struct.gs_s* %gs, %struct.subvq_t* %svq, %struct.mgau_model_t* nonnull %g, %struct.kb_t* nonnull %kb, i32 %24, i32* %senscr, float* %feat, i32 %best_cid.0, i32 %svq_beam) #36
  %add97 = add nsw i32 %call96, %ng.0308
  %inc98 = add nsw i32 %ns.0312, 1
  %arrayidx100 = getelementptr inbounds i32, i32* %senscr, i64 %indvars.iv337
  %25 = load i32, i32* %arrayidx100, align 4, !tbaa !37
  %26 = load i32, i32* %rec_bst_senscr, align 4, !tbaa !869
  %cmp101 = icmp sgt i32 %25, %26
  br i1 %cmp101, label %if.then103, label %if.end128

if.then103:                                       ; preds = %if.else92
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.948, i64 0, i64 0), i64 328, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.949, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2.950, i64 0, i64 0)) #34
  %27 = load i32, i32* %n_mgau, align 8, !tbaa !92
  %cmp106305 = icmp sgt i32 %27, 0
  br i1 %cmp106305, label %for.body108.lr.ph, label %for.end

for.body108.lr.ph:                                ; preds = %if.then103
  %28 = load i32*, i32** %rec_sen_active83, align 8, !tbaa !51
  br label %for.body108

for.body108:                                      ; preds = %for.body108.lr.ph, %for.inc
  %29 = phi i32 [ %27, %for.body108.lr.ph ], [ %34, %for.inc ]
  %indvars.iv335 = phi i64 [ 0, %for.body108.lr.ph ], [ %indvars.iv.next336, %for.inc ]
  %arrayidx111 = getelementptr inbounds i32, i32* %28, i64 %indvars.iv335
  %30 = load i32, i32* %arrayidx111, align 4, !tbaa !37
  %tobool112.not = icmp eq i32 %30, 0
  %cmp113.not = icmp eq i64 %indvars.iv335, %indvars.iv337
  %or.cond = select i1 %tobool112.not, i1 true, i1 %cmp113.not
  br i1 %or.cond, label %for.inc, label %if.then115

if.then115:                                       ; preds = %for.body108
  %31 = load i32, i32* %arrayidx100, align 4, !tbaa !37
  %32 = load i32, i32* %rec_bst_senscr, align 4, !tbaa !869
  %sub119.neg = sub i32 %32, %31
  %arrayidx121 = getelementptr inbounds i32, i32* %senscr, i64 %indvars.iv335
  %33 = load i32, i32* %arrayidx121, align 4, !tbaa !37
  %sub122 = add i32 %sub119.neg, %33
  store i32 %sub122, i32* %arrayidx121, align 4, !tbaa !37
  %.pre = load i32, i32* %n_mgau, align 8, !tbaa !92
  br label %for.inc

for.inc:                                          ; preds = %for.body108, %if.then115
  %34 = phi i32 [ %29, %for.body108 ], [ %.pre, %if.then115 ]
  %indvars.iv.next336 = add nuw nsw i64 %indvars.iv335, 1
  %35 = sext i32 %34 to i64
  %cmp106 = icmp slt i64 %indvars.iv.next336, %35
  br i1 %cmp106, label %for.body108, label %for.end, !llvm.loop !870

for.end:                                          ; preds = %for.inc, %if.then103
  %36 = load i32, i32* %arrayidx100, align 4, !tbaa !37
  store i32 %36, i32* %rec_bst_senscr, align 4, !tbaa !869
  %.pre339 = load i32, i32* %arrayidx100, align 4, !tbaa !37
  br label %if.end128

if.end128:                                        ; preds = %for.end, %if.else92
  %37 = phi i32 [ %.pre339, %for.end ], [ %25, %if.else92 ]
  %38 = phi i32 [ %36, %for.end ], [ %26, %if.else92 ]
  %sub132 = sub nsw i32 %37, %38
  store i32 %sub132, i32* %arrayidx100, align 4, !tbaa !37
  br label %for.inc136

for.inc136:                                       ; preds = %if.then82, %if.end75, %if.end128, %if.else80
  %ng.3 = phi i32 [ %add97, %if.end128 ], [ %ng.0308, %if.else80 ], [ %ng.2, %if.end75 ], [ %ng.0308, %if.then82 ]
  %ns.3 = phi i32 [ %inc98, %if.end128 ], [ %ns.0312, %if.else80 ], [ %ns.2, %if.end75 ], [ %ns.0312, %if.then82 ]
  %pbest.3 = phi i32 [ %pbest.0316, %if.end128 ], [ %pbest.0316, %if.else80 ], [ %pbest.2, %if.end75 ], [ %pbest.0316, %if.then82 ]
  %best.3 = phi i32 [ %best.0319, %if.end128 ], [ %best.0319, %if.else80 ], [ %best.2, %if.end75 ], [ %best.0319, %if.then82 ]
  %indvars.iv.next338 = add nuw nsw i64 %indvars.iv337, 1
  %39 = load i32, i32* %n_mgau, align 8, !tbaa !92
  %40 = sext i32 %39 to i64
  %cmp9 = icmp slt i64 %indvars.iv.next338, %40
  br i1 %cmp9, label %for.body, label %for.end138, !llvm.loop !871

for.end138:                                       ; preds = %for.inc136, %if.end3
  %41 = phi i32 [ %6, %if.end3 ], [ %39, %for.inc136 ]
  %ng.0.lcssa = phi i32 [ 0, %if.end3 ], [ %ng.3, %for.inc136 ]
  %ns.0.lcssa = phi i32 [ 0, %if.end3 ], [ %ns.3, %for.inc136 ]
  %best.0.lcssa = phi i32 [ -2147483648, %if.end3 ], [ %best.3, %for.inc136 ]
  %cmp143303 = icmp sgt i32 %41, 0
  %or.cond343 = select i1 %tobool18.not, i1 %cmp143303, i1 false
  br i1 %or.cond343, label %for.body145, label %if.end158

for.body145:                                      ; preds = %for.end138, %for.inc154
  %42 = phi i32 [ %45, %for.inc154 ], [ %41, %for.end138 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc154 ], [ 0, %for.end138 ]
  %arrayidx147 = getelementptr inbounds i32, i32* %sen_active, i64 %indvars.iv
  %43 = load i32, i32* %arrayidx147, align 4, !tbaa !37
  %tobool148.not = icmp eq i32 %43, 0
  br i1 %tobool148.not, label %for.inc154, label %if.then149

if.then149:                                       ; preds = %for.body145
  %arrayidx151 = getelementptr inbounds i32, i32* %senscr, i64 %indvars.iv
  %44 = load i32, i32* %arrayidx151, align 4, !tbaa !37
  %sub152 = sub nsw i32 %44, %best.0.lcssa
  store i32 %sub152, i32* %arrayidx151, align 4, !tbaa !37
  %.pre342 = load i32, i32* %n_mgau, align 8, !tbaa !92
  br label %for.inc154

for.inc154:                                       ; preds = %for.body145, %if.then149
  %45 = phi i32 [ %42, %for.body145 ], [ %.pre342, %if.then149 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %46 = sext i32 %45 to i64
  %cmp143 = icmp slt i64 %indvars.iv.next, %46
  br i1 %cmp143, label %for.body145, label %if.end158, !llvm.loop !872

if.end158:                                        ; preds = %for.inc154, %for.end138
  %frm_sen_eval = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 5
  store i32 %ns.0.lcssa, i32* %frm_sen_eval, align 8, !tbaa !305
  %frm_gau_eval = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 6
  store i32 %ng.0.lcssa, i32* %frm_gau_eval, align 4, !tbaa !306
  ret i32 %best.0.lcssa
}

; Function Attrs: noinline nounwind optsize uwtable
define void @live_initialize_decoder(i8* %live_args) local_unnamed_addr #0 {
entry:
  tail call void @parse_args_file(i8* %live_args) #34
  tail call void @unlimit() #34
  tail call void @kb_init(%struct.kb_t* nonnull @live_initialize_decoder.live_kb) #34
  store %struct.kb_t* @live_initialize_decoder.live_kb, %struct.kb_t** @kb, align 8, !tbaa !74
  %0 = load %struct.kbcore_t*, %struct.kbcore_t** getelementptr inbounds (%struct.kb_t, %struct.kb_t* @live_initialize_decoder.live_kb, i64 0, i32 0), align 8, !tbaa !8
  store %struct.kbcore_t* %0, %struct.kbcore_t** @kbcore, align 8, !tbaa !74
  %call = tail call i8* @__ckd_calloc__(i64 1000, i64 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.955, i64 0, i64 0), i32 93) #34
  %1 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  %uttid = getelementptr inbounds %struct.kb_t, %struct.kb_t* %1, i64 0, i32 33
  store i8* %call, i8** %uttid, align 8, !tbaa !763
  %call1 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.956, i64 0, i64 0)) #34
  %2 = bitcast i8* %call1 to i32*
  %3 = load i32, i32* %2, align 4, !tbaa !37
  %tobool.not = icmp eq i32 %3, 0
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %cond = select i1 %tobool.not, %struct._IO_FILE* null, %struct._IO_FILE* %4
  store %struct._IO_FILE* %cond, %struct._IO_FILE** @hmmdumpfp, align 8, !tbaa !74
  %call2 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.957, i64 0, i64 0)) #34
  %5 = bitcast i8* %call2 to i32*
  %6 = load i32, i32* %5, align 4, !tbaa !37
  store i32 %6, i32* @maxwpf, align 4, !tbaa !37
  %call3 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.958, i64 0, i64 0)) #34
  %7 = bitcast i8* %call3 to i32*
  %8 = load i32, i32* %7, align 4, !tbaa !37
  store i32 %8, i32* @maxhistpf, align 4, !tbaa !37
  %call4 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.959, i64 0, i64 0)) #34
  %9 = bitcast i8* %call4 to i32*
  %10 = load i32, i32* %9, align 4, !tbaa !37
  store i32 %10, i32* @maxhmmpf, align 4, !tbaa !37
  %call5 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.960, i64 0, i64 0)) #34
  %11 = bitcast i8* %call5 to i32*
  %12 = load i32, i32* %11, align 4, !tbaa !37
  store i32 %12, i32* @ptranskip, align 4, !tbaa !37
  %call6 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.961, i64 0, i64 0)) #34
  %13 = load %struct.partialhyp_t*, %struct.partialhyp_t** @parthyp, align 8, !tbaa !74
  %tobool7.not = icmp eq %struct.partialhyp_t* %13, null
  br i1 %tobool7.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %14 = bitcast i8* %call6 to i32*
  %15 = load i32, i32* %14, align 4, !tbaa !37
  %conv = sext i32 %15 to i64
  %call8 = tail call i8* @__ckd_calloc__(i64 %conv, i64 24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.955, i64 0, i64 0), i32 102) #34
  store i8* %call8, i8** bitcast (%struct.partialhyp_t** @parthyp to i8**), align 8, !tbaa !74
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call9 = tail call i8* @__ckd_calloc__(i64 1, i64 120, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.955, i64 0, i64 0), i32 104) #34
  %16 = bitcast i8* %call9 to %struct.param_t*
  %call10 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7.962, i64 0, i64 0)) #34
  %17 = bitcast i8* %call10 to i32*
  %18 = load i32, i32* %17, align 4, !tbaa !37
  switch i32 %18, label %if.then14 [
    i32 16000, label %if.end15
    i32 8000, label %if.end15
  ]

if.then14:                                        ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.955, i64 0, i64 0), i64 107, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.963, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.964, i64 0, i64 0), i32 %18) #34
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.end, %if.then14
  %conv16 = sitofp i32 %18 to float
  %SAMPLING_RATE = bitcast i8* %call9 to float*
  store float %conv16, float* %SAMPLING_RATE, align 8, !tbaa !209
  %call17 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.965, i64 0, i64 0)) #34
  %19 = bitcast i8* %call17 to float*
  %20 = load float, float* %19, align 4, !tbaa !4
  %LOWER_FILT_FREQ = getelementptr inbounds i8, i8* %call9, i64 28
  %21 = bitcast i8* %LOWER_FILT_FREQ to float*
  store float %20, float* %21, align 4, !tbaa !219
  %call18 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.966, i64 0, i64 0)) #34
  %22 = bitcast i8* %call18 to float*
  %23 = load float, float* %22, align 4, !tbaa !4
  %UPPER_FILT_FREQ = getelementptr inbounds i8, i8* %call9, i64 32
  %24 = bitcast i8* %UPPER_FILT_FREQ to float*
  store float %23, float* %24, align 8, !tbaa !218
  %call19 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12.967, i64 0, i64 0)) #34
  %25 = bitcast i8* %call19 to i32*
  %26 = load i32, i32* %25, align 4, !tbaa !37
  %NUM_FILTERS = getelementptr inbounds i8, i8* %call9, i64 20
  %27 = bitcast i8* %NUM_FILTERS to i32*
  store i32 %26, i32* %27, align 4, !tbaa !217
  %call20 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13.968, i64 0, i64 0)) #34
  %28 = bitcast i8* %call20 to i32*
  %29 = load i32, i32* %28, align 4, !tbaa !37
  %FRAME_RATE = getelementptr inbounds i8, i8* %call9, i64 4
  %30 = bitcast i8* %FRAME_RATE to i32*
  store i32 %29, i32* %30, align 4, !tbaa !211
  %call21 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14.969, i64 0, i64 0)) #34
  %31 = bitcast i8* %call21 to float*
  %32 = load float, float* %31, align 4, !tbaa !4
  %PRE_EMPHASIS_ALPHA = getelementptr inbounds i8, i8* %call9, i64 36
  %33 = bitcast i8* %PRE_EMPHASIS_ALPHA to float*
  store float %32, float* %33, align 4, !tbaa !214
  %call22 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15.970, i64 0, i64 0)) #34
  %34 = bitcast i8* %call22 to i32*
  %35 = load i32, i32* %34, align 4, !tbaa !37
  %FFT_SIZE = getelementptr inbounds i8, i8* %call9, i64 24
  %36 = bitcast i8* %FFT_SIZE to i32*
  store i32 %35, i32* %36, align 8, !tbaa !216
  %call23 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.971, i64 0, i64 0)) #34
  %37 = bitcast i8* %call23 to float*
  %38 = load float, float* %37, align 4, !tbaa !4
  %WINDOW_LENGTH = getelementptr inbounds i8, i8* %call9, i64 8
  %39 = bitcast i8* %WINDOW_LENGTH to float*
  store float %38, float* %39, align 8, !tbaa !212
  %doublebw = getelementptr inbounds i8, i8* %call9, i64 116
  %40 = bitcast i8* %doublebw to i32*
  store i32 0, i32* %40, align 4, !tbaa !220
  %call24 = tail call %struct.fe_t* @fe_init(%struct.param_t* %16) #34
  store %struct.fe_t* %call24, %struct.fe_t** @fe, align 8, !tbaa !74
  %tobool25.not = icmp eq %struct.fe_t* %call24, null
  br i1 %tobool25.not, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end15
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.955, i64 0, i64 0), i64 127, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.963, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17.972, i64 0, i64 0)) #34
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %if.end15
  %call28 = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18.973, i64 0, i64 0)) #34
  %41 = load %struct.kbcore_t*, %struct.kbcore_t** @kbcore, align 8, !tbaa !74
  %fcb = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %41, i64 0, i32 0
  %42 = load %struct.feat_s*, %struct.feat_s** %fcb, align 8, !tbaa !120
  %cepsize = getelementptr inbounds %struct.feat_s, %struct.feat_s* %42, i64 0, i32 1
  %43 = load i32, i32* %cepsize, align 8, !tbaa !650
  %conv29 = sext i32 %43 to i64
  %call30 = tail call i8* @__ckd_calloc__(i64 %conv29, i64 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.955, i64 0, i64 0), i32 132) #34
  store i8* %call30, i8** bitcast (float** @dummyframe to i8**), align 8, !tbaa !74
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @live_free_memory() local_unnamed_addr #0 {
entry:
  tail call void (...) bitcast (void ()* @parse_args_free to void (...)*)() #34
  %0 = load %struct.fe_t*, %struct.fe_t** @fe, align 8, !tbaa !74
  %call = tail call i32 @fe_close(%struct.fe_t* %0) #34
  %1 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  %uttid = getelementptr inbounds %struct.kb_t, %struct.kb_t* %1, i64 0, i32 33
  %2 = load i8*, i8** %uttid, align 8, !tbaa !763
  tail call void @ckd_free(i8* %2) #34
  %3 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  tail call void @kb_free(%struct.kb_t* %3) #34
  %4 = load i8*, i8** bitcast (float** @dummyframe to i8**), align 8, !tbaa !74
  tail call void @ckd_free(i8* %4) #34
  %5 = load i8*, i8** bitcast (%struct.partialhyp_t** @parthyp to i8**), align 8, !tbaa !74
  tail call void @ckd_free(i8* %5) #34
  ret i32 0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @live_get_partialhyp(i32 %endutt) local_unnamed_addr #0 {
entry:
  %0 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  %kbcore = getelementptr inbounds %struct.kb_t, %struct.kb_t* %0, i64 0, i32 0
  %1 = load %struct.kbcore_t*, %struct.kbcore_t** %kbcore, align 8, !tbaa !8
  %dict1 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %1, i64 0, i32 2
  %2 = load %struct.dict_t*, %struct.dict_t** %dict1, align 8, !tbaa !16
  %tobool.not = icmp eq i32 %endutt, 0
  %vithist3 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %0, i64 0, i32 6
  %3 = load %struct.vithist_t*, %struct.vithist_t** %vithist3, align 8, !tbaa !122
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call i32 @vithist_utt_end(%struct.vithist_t* %3, %struct.kbcore_t* nonnull %1) #34
  br label %if.end

if.else:                                          ; preds = %entry
  %call5 = tail call i32 @vithist_partialutt_end(%struct.vithist_t* %3, %struct.kbcore_t* nonnull %1) #34
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %id.0 = phi i32 [ %call, %if.then ], [ %call5, %if.else ]
  %cmp = icmp sgt i32 %id.0, 0
  br i1 %cmp, label %if.then6, label %if.else62

if.then6:                                         ; preds = %if.end
  %4 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  %vithist7 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %4, i64 0, i32 6
  %5 = load %struct.vithist_t*, %struct.vithist_t** %vithist7, align 8, !tbaa !122
  %call8 = tail call %struct.gnode_s* @vithist_backtrace(%struct.vithist_t* %5, i32 %id.0) #34
  %word19 = getelementptr inbounds %struct.dict_t, %struct.dict_t* %2, i64 0, i32 4
  %tobool9.not115 = icmp eq %struct.gnode_s* %call8, null
  %.pre118 = load %struct.partialhyp_t*, %struct.partialhyp_t** @parthyp, align 8, !tbaa !74
  br i1 %tobool9.not115, label %for.end, label %for.body

for.body:                                         ; preds = %if.then6, %if.end18
  %6 = phi %struct.partialhyp_t* [ %11, %if.end18 ], [ %.pre118, %if.then6 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end18 ], [ 0, %if.then6 ]
  %gn.0117 = phi %struct.gnode_s* [ %19, %if.end18 ], [ %call8, %if.then6 ]
  %7 = bitcast %struct.gnode_s* %gn.0117 to %struct.hyp_t**
  %8 = load %struct.hyp_t*, %struct.hyp_t** %7, align 8, !tbaa !63
  %word = getelementptr inbounds %struct.partialhyp_t, %struct.partialhyp_t* %6, i64 %indvars.iv, i32 2
  %9 = load i8*, i8** %word, align 8, !tbaa !873
  %cmp10.not = icmp eq i8* %9, null
  br i1 %cmp10.not, label %if.end18, label %if.then11

if.then11:                                        ; preds = %for.body
  tail call void @ckd_free(i8* nonnull %9) #34
  %10 = load %struct.partialhyp_t*, %struct.partialhyp_t** @parthyp, align 8, !tbaa !74
  %word17 = getelementptr inbounds %struct.partialhyp_t, %struct.partialhyp_t* %10, i64 %indvars.iv, i32 2
  store i8* null, i8** %word17, align 8, !tbaa !873
  br label %if.end18

if.end18:                                         ; preds = %if.then11, %for.body
  %11 = phi %struct.partialhyp_t* [ %10, %if.then11 ], [ %6, %for.body ]
  %12 = load %struct.dictword_t*, %struct.dictword_t** %word19, align 8, !tbaa !39
  %id20 = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %8, i64 0, i32 0
  %13 = load i32, i32* %id20, align 4, !tbaa !608
  %idxprom21 = sext i32 %13 to i64
  %word23 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %12, i64 %idxprom21, i32 0
  %14 = load i8*, i8** %word23, align 8, !tbaa !510
  %call24 = tail call noalias align 16 i8* @strdup(i8* %14) #34
  %word27 = getelementptr inbounds %struct.partialhyp_t, %struct.partialhyp_t* %11, i64 %indvars.iv, i32 2
  store i8* %call24, i8** %word27, align 8, !tbaa !873
  %sf = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %8, i64 0, i32 2
  %15 = load i32, i32* %sf, align 4, !tbaa !610
  %sf30 = getelementptr inbounds %struct.partialhyp_t, %struct.partialhyp_t* %11, i64 %indvars.iv, i32 3
  store i32 %15, i32* %sf30, align 8, !tbaa !875
  %ef = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %8, i64 0, i32 3
  %16 = load i32, i32* %ef, align 4, !tbaa !611
  %ef33 = getelementptr inbounds %struct.partialhyp_t, %struct.partialhyp_t* %11, i64 %indvars.iv, i32 4
  store i32 %16, i32* %ef33, align 4, !tbaa !876
  %ascr = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %8, i64 0, i32 4
  %17 = load i32, i32* %ascr, align 4, !tbaa !612
  %ascr36 = getelementptr inbounds %struct.partialhyp_t, %struct.partialhyp_t* %11, i64 %indvars.iv, i32 0
  store i32 %17, i32* %ascr36, align 8, !tbaa !877
  %lscr = getelementptr inbounds %struct.hyp_t, %struct.hyp_t* %8, i64 0, i32 5
  %18 = load i32, i32* %lscr, align 4, !tbaa !613
  %lscr39 = getelementptr inbounds %struct.partialhyp_t, %struct.partialhyp_t* %11, i64 %indvars.iv, i32 1
  store i32 %18, i32* %lscr39, align 4, !tbaa !878
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.0117, i64 0, i32 1
  %19 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !364
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %tobool9.not = icmp eq %struct.gnode_s* %19, null
  br i1 %tobool9.not, label %for.end.loopexit, label %for.body, !llvm.loop !879

for.end.loopexit:                                 ; preds = %if.end18
  %20 = trunc i64 %indvars.iv.next to i32
  br label %for.end

for.end:                                          ; preds = %if.then6, %for.end.loopexit
  %21 = phi %struct.partialhyp_t* [ %11, %for.end.loopexit ], [ %.pre118, %if.then6 ]
  %nwds.0.lcssa = phi i32 [ %20, %for.end.loopexit ], [ 0, %if.then6 ]
  %idxprom40 = zext i32 %nwds.0.lcssa to i64
  %word42 = getelementptr inbounds %struct.partialhyp_t, %struct.partialhyp_t* %21, i64 %idxprom40, i32 2
  %22 = load i8*, i8** %word42, align 8, !tbaa !873
  %cmp43.not = icmp eq i8* %22, null
  br i1 %cmp43.not, label %if.end51, label %if.then44

if.then44:                                        ; preds = %for.end
  tail call void @ckd_free(i8* nonnull %22) #34
  %23 = load %struct.partialhyp_t*, %struct.partialhyp_t** @parthyp, align 8, !tbaa !74
  %word50 = getelementptr inbounds %struct.partialhyp_t, %struct.partialhyp_t* %23, i64 %idxprom40, i32 2
  store i8* null, i8** %word50, align 8, !tbaa !873
  br label %if.end51

if.end51:                                         ; preds = %if.then44, %for.end
  br i1 %tobool9.not115, label %for.end61, label %land.rhs

land.rhs:                                         ; preds = %if.end51, %for.body56
  %gn.1114 = phi %struct.gnode_s* [ %26, %for.body56 ], [ %call8, %if.end51 ]
  %next54 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.1114, i64 0, i32 1
  %24 = load %struct.gnode_s*, %struct.gnode_s** %next54, align 8, !tbaa !364
  %tobool55.not = icmp eq %struct.gnode_s* %24, null
  br i1 %tobool55.not, label %for.end61, label %for.body56

for.body56:                                       ; preds = %land.rhs
  %ptr58 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.1114, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %ptr58, align 8, !tbaa !63
  tail call void @ckd_free(i8* %25) #34
  %26 = load %struct.gnode_s*, %struct.gnode_s** %next54, align 8, !tbaa !364
  %tobool53.not = icmp eq %struct.gnode_s* %26, null
  br i1 %tobool53.not, label %for.end61, label %land.rhs, !llvm.loop !880

for.end61:                                        ; preds = %land.rhs, %for.body56, %if.end51
  tail call void @glist_free(%struct.gnode_s* %call8) #34
  br label %if.end75

if.else62:                                        ; preds = %if.end
  %27 = load %struct.partialhyp_t*, %struct.partialhyp_t** @parthyp, align 8, !tbaa !74
  %word65 = getelementptr inbounds %struct.partialhyp_t, %struct.partialhyp_t* %27, i64 0, i32 2
  %28 = load i8*, i8** %word65, align 8, !tbaa !873
  %cmp66.not = icmp eq i8* %28, null
  br i1 %cmp66.not, label %if.end75, label %if.then67

if.then67:                                        ; preds = %if.else62
  tail call void @ckd_free(i8* nonnull %28) #34
  %29 = load %struct.partialhyp_t*, %struct.partialhyp_t** @parthyp, align 8, !tbaa !74
  %word73 = getelementptr inbounds %struct.partialhyp_t, %struct.partialhyp_t* %29, i64 0, i32 2
  store i8* null, i8** %word73, align 8, !tbaa !873
  br label %if.end75

if.end75:                                         ; preds = %if.else62, %if.then67, %for.end61
  %nwds.1 = phi i32 [ %nwds.0.lcssa, %for.end61 ], [ 0, %if.then67 ], [ 0, %if.else62 ]
  ret i32 %nwds.1
}

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nofree nounwind optsize willreturn
declare noalias align 16 i8* @strdup(i8* nocapture readonly) local_unnamed_addr #30

; Function Attrs: mustprogress nofree noinline nounwind optsize uwtable willreturn
define void @live_utt_set_uttid(i8* nocapture readonly %uttname) local_unnamed_addr #9 {
entry:
  %0 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  %uttid = getelementptr inbounds %struct.kb_t, %struct.kb_t* %0, i64 0, i32 33
  %1 = load i8*, i8** %uttid, align 8, !tbaa !763
  %call = tail call i8* @strcpy(i8* noundef nonnull dereferenceable(1) %1, i8* noundef nonnull dereferenceable(1) %uttname) #34
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @live_utt_decode_block(i16* %samples, i32 %nsamples, i32 %live_endutt, %struct.partialhyp_t** nocapture %ohyp) local_unnamed_addr #0 {
entry:
  %mfcbuf = alloca float**, align 8
  %0 = bitcast float*** %mfcbuf to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #38
  %1 = load float***, float**** @live_utt_decode_block.live_feat, align 8, !tbaa !74
  %cmp = icmp eq float*** %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.kbcore_t*, %struct.kbcore_t** @kbcore, align 8, !tbaa !74
  %fcb = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %2, i64 0, i32 0
  %3 = load %struct.feat_s*, %struct.feat_s** %fcb, align 8, !tbaa !120
  %call = tail call float*** @feat_array_alloc(%struct.feat_s* %3, i32 256) #34
  store float*** %call, float**** @live_utt_decode_block.live_feat, align 8, !tbaa !74
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %.b30 = load i1, i1* @live_utt_decode_block.live_begin_new_utt, align 4
  br i1 %.b30, label %if.end3, label %if.then1

if.then1:                                         ; preds = %if.end
  %4 = load %struct.fe_t*, %struct.fe_t** @fe, align 8, !tbaa !74
  %call2 = tail call i32 @fe_start_utt(%struct.fe_t* %4) #34
  %5 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  tail call void @utt_begin(%struct.kb_t* %5) #34
  store i32 0, i32* @live_utt_decode_block.frmno, align 4, !tbaa !37
  %6 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  %nfr = getelementptr inbounds %struct.kb_t, %struct.kb_t* %6, i64 0, i32 8
  store i32 0, i32* %nfr, align 8, !tbaa !765
  %utt_hmm_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %6, i64 0, i32 34
  store i32 0, i32* %utt_hmm_eval, align 8, !tbaa !773
  %utt_sen_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %6, i64 0, i32 35
  store i32 0, i32* %utt_sen_eval, align 4, !tbaa !771
  %utt_gau_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %6, i64 0, i32 36
  store i32 0, i32* %utt_gau_eval, align 8, !tbaa !772
  store i1 true, i1* @live_utt_decode_block.live_begin_new_utt, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.then1, %if.end
  store float** null, float*** %mfcbuf, align 8, !tbaa !74
  %7 = load %struct.fe_t*, %struct.fe_t** @fe, align 8, !tbaa !74
  %call4 = call i32 @fe_process_utt(%struct.fe_t* %7, i16* %samples, i32 %nsamples, float*** nonnull %mfcbuf) #34
  %tobool5.not = icmp eq i32 %live_endutt, 0
  br i1 %tobool5.not, label %if.end8, label %if.then6

if.then6:                                         ; preds = %if.end3
  %8 = load %struct.fe_t*, %struct.fe_t** @fe, align 8, !tbaa !74
  %9 = load float*, float** @dummyframe, align 8, !tbaa !74
  %call7 = call i32 @fe_end_utt(%struct.fe_t* %8, float* %9) #34
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.end3
  %cmp9 = icmp sgt i32 %call4, 0
  br i1 %cmp9, label %if.then10, label %if.end14

if.then10:                                        ; preds = %if.end8
  %10 = load %struct.kbcore_t*, %struct.kbcore_t** @kbcore, align 8, !tbaa !74
  %fcb11 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %10, i64 0, i32 0
  %11 = load %struct.feat_s*, %struct.feat_s** %fcb11, align 8, !tbaa !120
  %12 = load float**, float*** %mfcbuf, align 8, !tbaa !74
  %.b = load i1, i1* @live_utt_decode_block.live_begin_new_utt, align 4
  %not..b = xor i1 %.b, true
  %13 = zext i1 %not..b to i32
  %14 = load float***, float**** @live_utt_decode_block.live_feat, align 8, !tbaa !74
  %call12 = call i32 @feat_s2mfc2feat_block(%struct.feat_s* %11, float** %12, i32 %call4, i32 %13, i32 %live_endutt, float*** %14) #34
  %15 = load float***, float**** @live_utt_decode_block.live_feat, align 8, !tbaa !74
  %16 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  %17 = load i32, i32* @maxwpf, align 4, !tbaa !37
  %18 = load i32, i32* @maxhistpf, align 4, !tbaa !37
  %19 = load i32, i32* @maxhmmpf, align 4, !tbaa !37
  %20 = load i32, i32* @ptranskip, align 4, !tbaa !37
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @hmmdumpfp, align 8, !tbaa !74
  call void @utt_decode_block(float*** %15, i32 %call12, i32* nonnull @live_utt_decode_block.frmno, %struct.kb_t* %16, i32 %17, i32 %18, i32 %19, i32 %20, %struct._IO_FILE* %21) #34
  %call13 = call i32 @live_get_partialhyp(i32 %live_endutt) #36
  %22 = load %struct.partialhyp_t*, %struct.partialhyp_t** @parthyp, align 8, !tbaa !74
  store %struct.partialhyp_t* %22, %struct.partialhyp_t** %ohyp, align 8, !tbaa !74
  br label %if.end14

if.end14:                                         ; preds = %if.then10, %if.end8
  %nwds.0 = phi i32 [ %call13, %if.then10 ], [ 0, %if.end8 ]
  br i1 %tobool5.not, label %if.else, label %if.then16

if.then16:                                        ; preds = %if.end14
  store i1 false, i1* @live_utt_decode_block.live_begin_new_utt, align 4
  %23 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  %nfr17 = getelementptr inbounds %struct.kb_t, %struct.kb_t* %23, i64 0, i32 8
  %24 = load i32, i32* %nfr17, align 8, !tbaa !765
  %tot_fr = getelementptr inbounds %struct.kb_t, %struct.kb_t* %23, i64 0, i32 43
  %25 = load i32, i32* %tot_fr, align 8, !tbaa !123
  %add = add nsw i32 %25, %24
  store i32 %add, i32* %tot_fr, align 8, !tbaa !123
  call void @utt_end(%struct.kb_t* %23) #34
  br label %if.end18

if.else:                                          ; preds = %if.end14
  store i1 true, i1* @live_utt_decode_block.live_begin_new_utt, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then16
  br i1 %cmp9, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end18
  %26 = bitcast float*** %mfcbuf to i8***
  %27 = load i8**, i8*** %26, align 8, !tbaa !74
  call void @ckd_free_2d(i8** %27) #34
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %if.end18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #38
  ret i32 %nwds.0
}

; Function Attrs: noinline nounwind optsize uwtable
define void @live_utt_summary() local_unnamed_addr #0 {
entry:
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.955, i64 0, i64 0), i64 354, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.980, i64 0, i64 0)) #34
  %0 = load %struct.kb_t*, %struct.kb_t** @kb, align 8, !tbaa !74
  %tot_fr = getelementptr inbounds %struct.kb_t, %struct.kb_t* %0, i64 0, i32 43
  %1 = load i32, i32* %tot_fr, align 8, !tbaa !123
  %tot_sen_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %0, i64 0, i32 44
  %2 = load double, double* %tot_sen_eval, align 8, !tbaa !776
  %conv = sitofp i32 %1 to double
  %div = fdiv double %2, %conv
  %conv2 = fptosi double %div to i32
  %tot_gau_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %0, i64 0, i32 45
  %3 = load double, double* %tot_gau_eval, align 8, !tbaa !777
  %div5 = fdiv double %3, %conv
  %conv6 = fptosi double %div5 to i32
  %tot_hmm_eval = getelementptr inbounds %struct.kb_t, %struct.kb_t* %0, i64 0, i32 46
  %4 = load double, double* %tot_hmm_eval, align 8, !tbaa !778
  %div9 = fdiv double %4, %conv
  %conv10 = fptosi double %div9 to i32
  %tot_wd_exit = getelementptr inbounds %struct.kb_t, %struct.kb_t* %0, i64 0, i32 47
  %5 = load double, double* %tot_wd_exit, align 8, !tbaa !779
  %div13 = fdiv double %5, %conv
  %conv14 = fptosi double %div13 to i32
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.20.981, i64 0, i64 0), i32 %1, i32 %conv2, i32 %conv6, double 0.000000e+00, double 0.000000e+00, i32 %conv10, i32 %conv14, double 0.000000e+00) #34
  %6 = load i32, i32* @confp_open, align 4, !tbaa !37
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @confp, align 8, !tbaa !74
  %call = tail call i32 @fclose(%struct._IO_FILE* %7) #36
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call15 = tail call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21.982, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22.983, i64 0, i64 0)) #36
  store %struct._IO_FILE* %call15, %struct._IO_FILE** @confp, align 8, !tbaa !74
  %cmp = icmp eq %struct._IO_FILE* %call15, null
  br i1 %cmp, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end
  tail call void @_E__pr_header(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.955, i64 0, i64 0), i64 365, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.963, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.23.984, i64 0, i64 0)) #34
  %.pre = load %struct._IO_FILE*, %struct._IO_FILE** @confp, align 8, !tbaa !74
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end
  %8 = phi %struct._IO_FILE* [ %.pre, %if.then17 ], [ %call15, %if.end ]
  %9 = load i64, i64* @tot_considered, align 8, !tbaa !770
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24.985, i64 0, i64 0), i64 %9) #36
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define double @vector_sum_norm(float* nocapture %vec, i32 %len) local_unnamed_addr #13 {
entry:
  %cmp33 = icmp sgt i32 %len, 0
  br i1 %cmp33, label %for.body.preheader, label %if.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count38 = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv36 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next37, %for.body ]
  %sum.034 = phi double [ 0.000000e+00, %for.body.preheader ], [ %add, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %vec, i64 %indvars.iv36
  %0 = load float, float* %arrayidx, align 4, !tbaa !4
  %conv = fpext float %0 to double
  %add = fadd double %sum.034, %conv
  %indvars.iv.next37 = add nuw nsw i64 %indvars.iv36, 1
  %exitcond39.not = icmp eq i64 %indvars.iv.next37, %wide.trip.count38
  br i1 %exitcond39.not, label %for.end, label %for.body, !llvm.loop !881

for.end:                                          ; preds = %for.body
  %cmp1 = fcmp une double %add, 0.000000e+00
  %div = fdiv double 1.000000e+00, %add
  %or.cond = select i1 %cmp1, i1 %cmp33, i1 false
  br i1 %or.cond, label %for.body6.preheader, label %if.end

for.body6.preheader:                              ; preds = %for.end
  %wide.trip.count = zext i32 %len to i64
  br label %for.body6

for.body6:                                        ; preds = %for.body6.preheader, %for.body6
  %indvars.iv = phi i64 [ 0, %for.body6.preheader ], [ %indvars.iv.next, %for.body6 ]
  %arrayidx8 = getelementptr inbounds float, float* %vec, i64 %indvars.iv
  %1 = load float, float* %arrayidx8, align 4, !tbaa !4
  %conv9 = fpext float %1 to double
  %mul = fmul double %div, %conv9
  %conv10 = fptrunc double %mul to float
  store float %conv10, float* %arrayidx8, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end, label %for.body6, !llvm.loop !882

if.end:                                           ; preds = %for.body6, %entry, %for.end
  %sum.0.lcssa44 = phi double [ %add, %for.end ], [ 0.000000e+00, %entry ], [ %add, %for.body6 ]
  ret double %sum.0.lcssa44
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @vector_floor(float* nocapture %vec, i32 %len, double %flr) local_unnamed_addr #13 {
entry:
  %conv3 = fptrunc double %flr to float
  %cmp12 = icmp sgt i32 %len, 0
  br i1 %cmp12, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds float, float* %vec, i64 %indvars.iv
  %0 = load float, float* %arrayidx, align 4, !tbaa !4
  %conv = fpext float %0 to double
  %cmp1 = fcmp olt double %conv, %flr
  br i1 %cmp1, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  store float %conv3, float* %arrayidx, align 4, !tbaa !4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !883

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @vector_nz_floor(float* nocapture %vec, i32 %len, double %flr) local_unnamed_addr #13 {
entry:
  %conv8 = fptrunc double %flr to float
  %cmp19 = icmp sgt i32 %len, 0
  br i1 %cmp19, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds float, float* %vec, i64 %indvars.iv
  %0 = load float, float* %arrayidx, align 4, !tbaa !4
  %cmp1 = fcmp une float %0, 0.000000e+00
  %conv = fpext float %0 to double
  %cmp6 = fcmp olt double %conv, %flr
  %or.cond = select i1 %cmp1, i1 %cmp6, i1 false
  br i1 %or.cond, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  store float %conv8, float* %arrayidx, align 4, !tbaa !4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !884

for.end:                                          ; preds = %for.inc, %entry
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @vector_print(%struct._IO_FILE* nocapture %fp, float* nocapture readonly %v, i32 %dim) local_unnamed_addr #14 {
entry:
  %cmp8 = icmp sgt i32 %dim, 0
  br i1 %cmp8, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %dim to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %v, i64 %indvars.iv
  %0 = load float, float* %arrayidx, align 4, !tbaa !4
  %conv = fpext float %0 to double
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.990, i64 0, i64 0), double %conv) #36
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !885

for.end:                                          ; preds = %for.body, %entry
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  %call2 = tail call i32 @fflush(%struct._IO_FILE* %fp) #36
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @vector_is_zero(float* nocapture readonly %vec, i32 %len) local_unnamed_addr #16 {
entry:
  %cmp10 = icmp sgt i32 %len, 0
  br i1 %cmp10, label %land.rhs.preheader, label %for.end

land.rhs.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %land.rhs.preheader ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds float, float* %vec, i64 %indvars.iv
  %0 = load float, float* %arrayidx, align 4, !tbaa !4
  %cmp1 = fcmp oeq float %0, 0.000000e+00
  br i1 %cmp1, label %for.inc, label %for.end.loopexit.split.loop.exit13

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %land.rhs, !llvm.loop !886

for.end.loopexit.split.loop.exit13:               ; preds = %land.rhs
  %1 = trunc i64 %indvars.iv to i32
  br label %for.end

for.end:                                          ; preds = %for.inc, %for.end.loopexit.split.loop.exit13, %entry
  %i.0.lcssa = phi i32 [ 0, %entry ], [ %1, %for.end.loopexit.split.loop.exit13 ], [ %len, %for.inc ]
  %cmp3 = icmp eq i32 %i.0.lcssa, %len
  %conv4 = zext i1 %cmp3 to i32
  ret i32 %conv4
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @vector_maxcomp_int32(i32* nocapture readonly %val, i32 %len) local_unnamed_addr #16 {
entry:
  %cmp11 = icmp sgt i32 %len, 1
  br i1 %cmp11, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %bi.013 = phi i32 [ 0, %for.body.preheader ], [ %spec.select, %for.body ]
  %arrayidx = getelementptr inbounds i32, i32* %val, i64 %indvars.iv
  %0 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %idxprom1 = sext i32 %bi.013 to i64
  %arrayidx2 = getelementptr inbounds i32, i32* %val, i64 %idxprom1
  %1 = load i32, i32* %arrayidx2, align 4, !tbaa !37
  %cmp3 = icmp sgt i32 %0, %1
  %2 = trunc i64 %indvars.iv to i32
  %spec.select = select i1 %cmp3, i32 %2, i32 %bi.013
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !887

for.end:                                          ; preds = %for.body, %entry
  %bi.0.lcssa = phi i32 [ 0, %entry ], [ %spec.select, %for.body ]
  ret i32 %bi.0.lcssa
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @vector_mincomp_int32(i32* nocapture readonly %val, i32 %len) local_unnamed_addr #16 {
entry:
  %cmp11 = icmp sgt i32 %len, 1
  br i1 %cmp11, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %bi.013 = phi i32 [ 0, %for.body.preheader ], [ %spec.select, %for.body ]
  %arrayidx = getelementptr inbounds i32, i32* %val, i64 %indvars.iv
  %0 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %idxprom1 = sext i32 %bi.013 to i64
  %arrayidx2 = getelementptr inbounds i32, i32* %val, i64 %idxprom1
  %1 = load i32, i32* %arrayidx2, align 4, !tbaa !37
  %cmp3 = icmp slt i32 %0, %1
  %2 = trunc i64 %indvars.iv to i32
  %spec.select = select i1 %cmp3, i32 %2, i32 %bi.013
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !888

for.end:                                          ; preds = %for.body, %entry
  %bi.0.lcssa = phi i32 [ 0, %entry ], [ %spec.select, %for.body ]
  ret i32 %bi.0.lcssa
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @vector_maxcomp_float32(float* nocapture readonly %val, i32 %len) local_unnamed_addr #16 {
entry:
  %cmp11 = icmp sgt i32 %len, 1
  br i1 %cmp11, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %bi.013 = phi i32 [ 0, %for.body.preheader ], [ %bi.1, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %val, i64 %indvars.iv
  %0 = load float, float* %arrayidx, align 4, !tbaa !4
  %idxprom1 = sext i32 %bi.013 to i64
  %arrayidx2 = getelementptr inbounds float, float* %val, i64 %idxprom1
  %1 = load float, float* %arrayidx2, align 4, !tbaa !4
  %cmp3 = fcmp ogt float %0, %1
  %2 = trunc i64 %indvars.iv to i32
  %bi.1 = select i1 %cmp3, i32 %2, i32 %bi.013
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !889

for.end:                                          ; preds = %for.body, %entry
  %bi.0.lcssa = phi i32 [ 0, %entry ], [ %bi.1, %for.body ]
  ret i32 %bi.0.lcssa
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @vector_mincomp_float32(float* nocapture readonly %val, i32 %len) local_unnamed_addr #16 {
entry:
  %cmp11 = icmp sgt i32 %len, 1
  br i1 %cmp11, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %bi.013 = phi i32 [ 0, %for.body.preheader ], [ %bi.1, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %val, i64 %indvars.iv
  %0 = load float, float* %arrayidx, align 4, !tbaa !4
  %idxprom1 = sext i32 %bi.013 to i64
  %arrayidx2 = getelementptr inbounds float, float* %val, i64 %idxprom1
  %1 = load float, float* %arrayidx2, align 4, !tbaa !4
  %cmp3 = fcmp olt float %0, %1
  %2 = trunc i64 %indvars.iv to i32
  %bi.1 = select i1 %cmp3, i32 %2, i32 %bi.013
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !890

for.end:                                          ; preds = %for.body, %entry
  %bi.0.lcssa = phi i32 [ 0, %entry ], [ %bi.1, %for.body ]
  ret i32 %bi.0.lcssa
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @vector_accum(float* nocapture %dst, float* nocapture readonly %src, i32 %len) local_unnamed_addr #13 {
entry:
  %cmp7 = icmp sgt i32 %len, 0
  br i1 %cmp7, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %src, i64 %indvars.iv
  %0 = load float, float* %arrayidx, align 4, !tbaa !4
  %arrayidx2 = getelementptr inbounds float, float* %dst, i64 %indvars.iv
  %1 = load float, float* %arrayidx2, align 4, !tbaa !4
  %add = fadd float %0, %1
  store float %add, float* %arrayidx2, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !891

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @vector_cmp(float* nocapture readonly %v1, float* nocapture readonly %v2, i32 %len) local_unnamed_addr #16 {
entry:
  %cmp20 = icmp sgt i32 %len, 0
  br i1 %cmp20, label %for.body.preheader, label %cleanup

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.cond:                                         ; preds = %if.end
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !892

for.body:                                         ; preds = %for.body.preheader, %for.cond
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.cond ]
  %arrayidx = getelementptr inbounds float, float* %v1, i64 %indvars.iv
  %0 = load float, float* %arrayidx, align 4, !tbaa !4
  %arrayidx2 = getelementptr inbounds float, float* %v2, i64 %indvars.iv
  %1 = load float, float* %arrayidx2, align 4, !tbaa !4
  %cmp3 = fcmp olt float %0, %1
  br i1 %cmp3, label %cleanup, label %if.end

if.end:                                           ; preds = %for.body
  %cmp8 = fcmp ogt float %0, %1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %cmp8, label %cleanup, label %for.cond

cleanup:                                          ; preds = %for.body, %if.end, %for.cond, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %for.cond ], [ 1, %if.end ], [ -1, %for.body ]
  ret i32 %retval.0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define i32 @vector_mean(float* nocapture %mean, float** nocapture readonly %data, i32 %n_vec, i32 %n_dim) local_unnamed_addr #13 {
entry:
  %cmp54 = icmp sgt i32 %n_dim, 0
  br i1 %cmp54, label %for.body.preheader, label %for.cond1.preheader

for.body.preheader:                               ; preds = %entry
  %mean64 = bitcast float* %mean to i8*
  %0 = zext i32 %n_dim to i64
  %1 = shl nuw nsw i64 %0, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %mean64, i8 0, i64 %1, i1 false)
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.body.preheader, %entry
  %cmp252 = icmp sgt i32 %n_vec, 0
  br i1 %cmp252, label %for.cond4.preheader.preheader, label %for.end18

for.cond4.preheader.preheader:                    ; preds = %for.cond1.preheader
  %wide.trip.count62 = zext i32 %n_vec to i64
  %wide.trip.count58 = zext i32 %n_dim to i64
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.cond4.preheader.preheader, %for.inc16
  %indvars.iv60 = phi i64 [ 0, %for.cond4.preheader.preheader ], [ %indvars.iv.next61, %for.inc16 ]
  br i1 %cmp54, label %for.body6.lr.ph, label %for.inc16

for.body6.lr.ph:                                  ; preds = %for.cond4.preheader
  %arrayidx8 = getelementptr inbounds float*, float** %data, i64 %indvars.iv60
  %2 = load float*, float** %arrayidx8, align 8, !tbaa !74
  br label %for.body6

for.body6:                                        ; preds = %for.body6.lr.ph, %for.body6
  %indvars.iv56 = phi i64 [ 0, %for.body6.lr.ph ], [ %indvars.iv.next57, %for.body6 ]
  %arrayidx10 = getelementptr inbounds float, float* %2, i64 %indvars.iv56
  %3 = load float, float* %arrayidx10, align 4, !tbaa !4
  %arrayidx12 = getelementptr inbounds float, float* %mean, i64 %indvars.iv56
  %4 = load float, float* %arrayidx12, align 4, !tbaa !4
  %add = fadd float %3, %4
  store float %add, float* %arrayidx12, align 4, !tbaa !4
  %indvars.iv.next57 = add nuw nsw i64 %indvars.iv56, 1
  %exitcond59.not = icmp eq i64 %indvars.iv.next57, %wide.trip.count58
  br i1 %exitcond59.not, label %for.inc16, label %for.body6, !llvm.loop !893

for.inc16:                                        ; preds = %for.body6, %for.cond4.preheader
  %indvars.iv.next61 = add nuw nsw i64 %indvars.iv60, 1
  %exitcond63.not = icmp eq i64 %indvars.iv.next61, %wide.trip.count62
  br i1 %exitcond63.not, label %for.end18, label %for.cond4.preheader, !llvm.loop !894

for.end18:                                        ; preds = %for.inc16, %for.cond1.preheader
  %conv = sitofp i32 %n_vec to double
  %div = fdiv double 1.000000e+00, %conv
  %conv23 = fptrunc double %div to float
  br i1 %cmp54, label %for.body22.preheader, label %for.end28

for.body22.preheader:                             ; preds = %for.end18
  %wide.trip.count = zext i32 %n_dim to i64
  br label %for.body22

for.body22:                                       ; preds = %for.body22.preheader, %for.body22
  %indvars.iv = phi i64 [ 0, %for.body22.preheader ], [ %indvars.iv.next, %for.body22 ]
  %arrayidx25 = getelementptr inbounds float, float* %mean, i64 %indvars.iv
  %5 = load float, float* %arrayidx25, align 4, !tbaa !4
  %mul = fmul float %5, %conv23
  store float %mul, float* %arrayidx25, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end28, label %for.body22, !llvm.loop !895

for.end28:                                        ; preds = %for.body22, %for.end18
  ret i32 0
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define double @vector_dist_eucl(float* nocapture readonly %v1, float* nocapture readonly %v2, i32 %len) local_unnamed_addr #16 {
entry:
  %cmp18 = icmp sgt i32 %len, 0
  br i1 %cmp18, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %d.019 = phi double [ 0.000000e+00, %for.body.preheader ], [ %add, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %v1, i64 %indvars.iv
  %0 = load float, float* %arrayidx, align 4, !tbaa !4
  %arrayidx2 = getelementptr inbounds float, float* %v2, i64 %indvars.iv
  %1 = load float, float* %arrayidx2, align 4, !tbaa !4
  %sub = fsub float %0, %1
  %mul = fmul float %sub, %sub
  %conv = fpext float %mul to double
  %add = fadd double %d.019, %conv
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !896

for.end:                                          ; preds = %for.body, %entry
  %d.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add, %for.body ]
  ret double %d.0.lcssa
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define double @vector_maha_precomp(float* nocapture %var, i32 %len) local_unnamed_addr #14 {
entry:
  %cmp22 = icmp sgt i32 %len, 0
  br i1 %cmp22, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %det.023 = phi double [ 0.000000e+00, %for.body.preheader ], [ %sub, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %var, i64 %indvars.iv
  %0 = load float, float* %arrayidx, align 4, !tbaa !4
  %conv = fpext float %0 to double
  %call = tail call double @log(double %conv) #34
  %sub = fsub double %det.023, %call
  %1 = load float, float* %arrayidx, align 4, !tbaa !4
  %conv3 = fpext float %1 to double
  %mul = fmul double %conv3, 2.000000e+00
  %div = fdiv double 1.000000e+00, %mul
  %conv4 = fptrunc double %div to float
  store float %conv4, float* %arrayidx, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !897

for.end:                                          ; preds = %for.body, %entry
  %det.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %sub, %for.body ]
  %conv8 = sitofp i32 %len to double
  %2 = tail call double @llvm.fmuladd.f64(double %conv8, double 0xBFFD67F1C864BEB4, double %det.0.lcssa)
  %mul10 = fmul double %2, 5.000000e-01
  ret double %mul10
}

; Function Attrs: nofree noinline nosync nounwind optsize readonly uwtable
define double @vector_dist_maha(float* nocapture readonly %vec, float* nocapture readonly %mean, float* nocapture readonly %varinv, double %loginvdet, i32 %len) local_unnamed_addr #22 {
entry:
  %cmp16 = icmp sgt i32 %len, 0
  br i1 %cmp16, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %dist.017 = phi double [ %loginvdet, %for.body.preheader ], [ %4, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %vec, i64 %indvars.iv
  %0 = load float, float* %arrayidx, align 4, !tbaa !4
  %arrayidx2 = getelementptr inbounds float, float* %mean, i64 %indvars.iv
  %1 = load float, float* %arrayidx2, align 4, !tbaa !4
  %sub = fsub float %0, %1
  %conv = fpext float %sub to double
  %arrayidx4 = getelementptr inbounds float, float* %varinv, i64 %indvars.iv
  %2 = load float, float* %arrayidx4, align 4, !tbaa !4
  %conv5 = fpext float %2 to double
  %3 = fneg double %conv
  %neg = fmul double %3, %conv
  %4 = tail call double @llvm.fmuladd.f64(double %neg, double %conv5, double %dist.017)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !898

for.end:                                          ; preds = %for.body, %entry
  %dist.0.lcssa = phi double [ %loginvdet, %entry ], [ %4, %for.body ]
  ret double %dist.0.lcssa
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define i32 @vector_vqlabel(float* nocapture readonly %vec, float** nocapture readonly %mean, i32 %rows, i32 %cols, double* %sqerr) local_unnamed_addr #13 {
entry:
  %0 = load float*, float** %mean, align 8, !tbaa !74
  %call = tail call double @vector_dist_eucl(float* %0, float* %vec, i32 %cols) #36
  %cmp19 = icmp sgt i32 %rows, 1
  br i1 %cmp19, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %rows to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %bestd.022 = phi double [ %call, %for.body.preheader ], [ %bestd.1, %for.body ]
  %besti.020 = phi i32 [ 0, %for.body.preheader ], [ %besti.1, %for.body ]
  %arrayidx1 = getelementptr inbounds float*, float** %mean, i64 %indvars.iv
  %1 = load float*, float** %arrayidx1, align 8, !tbaa !74
  %call2 = tail call double @vector_dist_eucl(float* %1, float* %vec, i32 %cols) #36
  %cmp3 = fcmp ogt double %bestd.022, %call2
  %2 = trunc i64 %indvars.iv to i32
  %besti.1 = select i1 %cmp3, i32 %2, i32 %besti.020
  %bestd.1 = select i1 %cmp3, double %call2, double %bestd.022
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !899

for.end:                                          ; preds = %for.body, %entry
  %besti.0.lcssa = phi i32 [ 0, %entry ], [ %besti.1, %for.body ]
  %bestd.0.lcssa = phi double [ %call, %entry ], [ %bestd.1, %for.body ]
  %tobool.not = icmp eq double* %sqerr, null
  br i1 %tobool.not, label %if.end5, label %if.then4

if.then4:                                         ; preds = %for.end
  store double %bestd.0.lcssa, double* %sqerr, align 8, !tbaa !96
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %for.end
  ret i32 %besti.0.lcssa
}

; Function Attrs: noinline nounwind optsize uwtable
define double @vector_vqgen(float** nocapture readonly %data, i32 %rows, i32 %cols, i32 %vqrows, double %epsilon, i32 %maxiter, float** nocapture readonly %mean, i32* nocapture %map) local_unnamed_addr #0 {
entry:
  %t = alloca double, align 8
  %tm = alloca %struct.ptmr_t, align 8
  %0 = bitcast double* %t to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #38
  %1 = bitcast %struct.ptmr_t* %tm to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1) #38
  %add = add nsw i32 %rows, 31
  %shr = ashr i32 %add, 5
  %conv = sext i32 %shr to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.991, i64 0, i64 0), i32 326) #34
  %2 = bitcast i8* %call to i32*
  call void @ptmr_init(%struct.ptmr_t* nonnull %tm) #34
  call void @ptmr_start(%struct.ptmr_t* nonnull %tm) #34
  call void @spec_srand(i32 1) #34
  %conv17 = sext i32 %cols to i64
  %mul18 = shl nsw i64 %conv17, 2
  %cmp271 = icmp sgt i32 %vqrows, 0
  br i1 %cmp271, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count296 = zext i32 %vqrows to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %while.end
  %indvars.iv294 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next295, %while.end ]
  %call2 = call double @spec_rand() #34
  %mul = fmul double %call2, 0x41DFFFFFFFC00000
  %conv3 = fptosi double %mul to i32
  %rem = srem i32 %conv3, %rows
  %shr4259 = ashr i32 %rem, 5
  %idxprom260 = sext i32 %shr4259 to i64
  %arrayidx261 = getelementptr inbounds i32, i32* %2, i64 %idxprom260
  %3 = load i32, i32* %arrayidx261, align 4, !tbaa !37
  %and262 = and i32 %rem, 31
  %shl263 = shl nuw i32 1, %and262
  %and5264 = and i32 %shl263, %3
  %tobool.not265 = icmp eq i32 %and5264, 0
  br i1 %tobool.not265, label %while.end, label %while.body

while.body:                                       ; preds = %for.body, %while.body
  %r.0266 = phi i32 [ %spec.store.select, %while.body ], [ %rem, %for.body ]
  %inc = add nsw i32 %r.0266, 1
  %cmp6.not = icmp slt i32 %inc, %rows
  %spec.store.select = select i1 %cmp6.not, i32 %inc, i32 0
  %shr4 = ashr i32 %spec.store.select, 5
  %idxprom = sext i32 %shr4 to i64
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %and = and i32 %spec.store.select, 31
  %shl = shl nuw i32 1, %and
  %and5 = and i32 %shl, %4
  %tobool.not = icmp eq i32 %and5, 0
  br i1 %tobool.not, label %while.end, label %while.body, !llvm.loop !900

while.end:                                        ; preds = %while.body, %for.body
  %idxprom.lcssa = phi i64 [ %idxprom260, %for.body ], [ %idxprom, %while.body ]
  %r.0.lcssa = phi i32 [ %rem, %for.body ], [ %spec.store.select, %while.body ]
  %.lcssa = phi i32 [ %3, %for.body ], [ %4, %while.body ]
  %shl.lcssa = phi i32 [ %shl263, %for.body ], [ %shl, %while.body ]
  %arrayidx.le = getelementptr inbounds i32, i32* %2, i64 %idxprom.lcssa
  %or = or i32 %shl.lcssa, %.lcssa
  store i32 %or, i32* %arrayidx.le, align 4, !tbaa !37
  %arrayidx14 = getelementptr inbounds float*, float** %mean, i64 %indvars.iv294
  %5 = bitcast float** %arrayidx14 to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !74
  %idxprom15 = sext i32 %r.0.lcssa to i64
  %arrayidx16 = getelementptr inbounds float*, float** %data, i64 %idxprom15
  %7 = bitcast float** %arrayidx16 to i8**
  %8 = load i8*, i8** %7, align 8, !tbaa !74
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %8, i64 %mul18, i1 false)
  %indvars.iv.next295 = add nuw nsw i64 %indvars.iv294, 1
  %exitcond297.not = icmp eq i64 %indvars.iv.next295, %wide.trip.count296
  br i1 %exitcond297.not, label %for.end, label %for.body, !llvm.loop !901

for.end:                                          ; preds = %while.end, %entry
  call void @ckd_free(i8* %call) #34
  %conv20 = sext i32 %vqrows to i64
  %call21 = call i8* @__ckd_calloc__(i64 %conv20, i64 4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.991, i64 0, i64 0), i32 367) #34
  %9 = bitcast i8* %call21 to i32*
  %call23 = call i8* @__ckd_calloc__(i64 %conv17, i64 4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.991, i64 0, i64 0), i32 370) #34
  %10 = bitcast i8* %call23 to float*
  %call24 = call i32 @vector_mean(float* %10, float** %mean, i32 %vqrows, i32 %cols) #36
  %cmp27246 = icmp sgt i32 %rows, 0
  %t_cpu42 = getelementptr inbounds %struct.ptmr_t, %struct.ptmr_t* %tm, i64 0, i32 1
  %sub46243 = add nsw i32 %maxiter, -1
  %cmp63249 = icmp sgt i32 %cols, 0
  %11 = zext i32 %cols to i64
  %12 = shl nuw nsw i64 %11, 2
  %wide.trip.count = zext i32 %rows to i64
  %cmp47.not = icmp sgt i32 %maxiter, 1
  %wide.trip.count280 = zext i32 %vqrows to i64
  %wide.trip.count284 = zext i32 %rows to i64
  %wide.trip.count292 = zext i32 %vqrows to i64
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc142, %for.end
  %it.0 = phi i32 [ 0, %for.end ], [ %inc143, %for.inc142 ]
  %prev_sqerr.0 = phi double [ 0.000000e+00, %for.end ], [ %sqerr.0.lcssa, %for.inc142 ]
  br i1 %cmp27246, label %for.body29, label %for.end38

for.body29:                                       ; preds = %for.cond25, %for.body29
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body29 ], [ 0, %for.cond25 ]
  %sqerr.0247 = phi double [ %add35, %for.body29 ], [ 0.000000e+00, %for.cond25 ]
  %arrayidx31 = getelementptr inbounds float*, float** %data, i64 %indvars.iv
  %13 = load float*, float** %arrayidx31, align 8, !tbaa !74
  %call32 = call i32 @vector_vqlabel(float* %13, float** %mean, i32 %vqrows, i32 %cols, double* nonnull %t) #36
  %arrayidx34 = getelementptr inbounds i32, i32* %map, i64 %indvars.iv
  store i32 %call32, i32* %arrayidx34, align 4, !tbaa !37
  %14 = load double, double* %t, align 8, !tbaa !96
  %add35 = fadd double %sqerr.0247, %14
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end38, label %for.body29, !llvm.loop !902

for.end38:                                        ; preds = %for.body29, %for.cond25
  %sqerr.0.lcssa = phi double [ 0.000000e+00, %for.cond25 ], [ %add35, %for.body29 ]
  call void @ptmr_stop(%struct.ptmr_t* nonnull %tm) #34
  %cmp39 = icmp eq i32 %it.0, 0
  br i1 %cmp39, label %if.end43, label %if.end43.thread

if.end43:                                         ; preds = %for.end38
  call void @_E__pr_info_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.991, i64 0, i64 0), i64 383, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.992, i64 0, i64 0)) #34
  %15 = load double, double* %t_cpu42, align 8, !tbaa !718
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4.993, i64 0, i64 0), i32 0, double %15, double %sqerr.0.lcssa) #34
  %cmp44 = fcmp une double %sqerr.0.lcssa, 0.000000e+00
  %or.cond = select i1 %cmp44, i1 %cmp47.not, i1 false
  br i1 %or.cond, label %if.end57, label %for.end144

if.end43.thread:                                  ; preds = %for.end38
  call void @_E__pr_info_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.991, i64 0, i64 0), i64 385, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.992, i64 0, i64 0)) #34
  %16 = load double, double* %t_cpu42, align 8, !tbaa !718
  %sub = fsub double %prev_sqerr.0, %sqerr.0.lcssa
  %div = fdiv double %sub, %prev_sqerr.0
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.5.994, i64 0, i64 0), i32 %it.0, double %16, double %sqerr.0.lcssa, double %div) #34
  %cmp44242 = fcmp oeq double %sqerr.0.lcssa, 0.000000e+00
  %cmp47.not244 = icmp sge i32 %it.0, %sub46243
  %or.cond245 = select i1 %cmp44242, i1 true, i1 %cmp47.not244
  %cmp54 = fcmp olt double %div, %epsilon
  %or.cond298 = select i1 %or.cond245, i1 true, i1 %cmp54
  br i1 %or.cond298, label %for.end144, label %if.end57

if.end57:                                         ; preds = %if.end43.thread, %if.end43
  call void @ptmr_start(%struct.ptmr_t* nonnull %tm) #34
  br i1 %cmp271, label %for.cond62.preheader, label %for.cond78.preheader

for.cond78.preheader:                             ; preds = %for.end72, %if.end57
  br i1 %cmp27246, label %for.body81, label %for.cond96.preheader

for.cond62.preheader:                             ; preds = %if.end57, %for.end72
  %indvars.iv278 = phi i64 [ %indvars.iv.next279, %for.end72 ], [ 0, %if.end57 ]
  br i1 %cmp63249, label %for.body65.lr.ph, label %for.end72

for.body65.lr.ph:                                 ; preds = %for.cond62.preheader
  %arrayidx67 = getelementptr inbounds float*, float** %mean, i64 %indvars.iv278
  %17 = bitcast float** %arrayidx67 to i8**
  %18 = load i8*, i8** %17, align 8, !tbaa !74
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 %12, i1 false)
  br label %for.end72

for.end72:                                        ; preds = %for.body65.lr.ph, %for.cond62.preheader
  %arrayidx74 = getelementptr inbounds i32, i32* %9, i64 %indvars.iv278
  store i32 0, i32* %arrayidx74, align 4, !tbaa !37
  %indvars.iv.next279 = add nuw nsw i64 %indvars.iv278, 1
  %exitcond281.not = icmp eq i64 %indvars.iv.next279, %wide.trip.count280
  br i1 %exitcond281.not, label %for.cond78.preheader, label %for.cond62.preheader, !llvm.loop !903

for.cond96.preheader:                             ; preds = %for.body81, %for.cond78.preheader
  br i1 %cmp271, label %for.body99, label %for.inc142

for.body81:                                       ; preds = %for.cond78.preheader, %for.body81
  %indvars.iv282 = phi i64 [ %indvars.iv.next283, %for.body81 ], [ 0, %for.cond78.preheader ]
  %arrayidx83 = getelementptr inbounds i32, i32* %map, i64 %indvars.iv282
  %19 = load i32, i32* %arrayidx83, align 4, !tbaa !37
  %idxprom84 = sext i32 %19 to i64
  %arrayidx85 = getelementptr inbounds float*, float** %mean, i64 %idxprom84
  %20 = load float*, float** %arrayidx85, align 8, !tbaa !74
  %arrayidx87 = getelementptr inbounds float*, float** %data, i64 %indvars.iv282
  %21 = load float*, float** %arrayidx87, align 8, !tbaa !74
  call void @vector_accum(float* %20, float* %21, i32 %cols) #36
  %22 = load i32, i32* %arrayidx83, align 4, !tbaa !37
  %idxprom90 = sext i32 %22 to i64
  %arrayidx91 = getelementptr inbounds i32, i32* %9, i64 %idxprom90
  %23 = load i32, i32* %arrayidx91, align 4, !tbaa !37
  %inc92 = add nsw i32 %23, 1
  store i32 %inc92, i32* %arrayidx91, align 4, !tbaa !37
  %indvars.iv.next283 = add nuw nsw i64 %indvars.iv282, 1
  %exitcond285.not = icmp eq i64 %indvars.iv.next283, %wide.trip.count284
  br i1 %exitcond285.not, label %for.cond96.preheader, label %for.body81, !llvm.loop !904

for.body99:                                       ; preds = %for.cond96.preheader, %for.inc139
  %indvars.iv290 = phi i64 [ %indvars.iv.next291, %for.inc139 ], [ 0, %for.cond96.preheader ]
  %arrayidx101 = getelementptr inbounds i32, i32* %9, i64 %indvars.iv290
  %24 = load i32, i32* %arrayidx101, align 4, !tbaa !37
  %cmp102 = icmp sgt i32 %24, 1
  br i1 %cmp102, label %if.then104, label %if.else127

if.then104:                                       ; preds = %for.body99
  %conv107 = sitofp i32 %24 to double
  %div108 = fdiv double 1.000000e+00, %conv107
  store double %div108, double* %t, align 8, !tbaa !96
  br i1 %cmp63249, label %for.body112.lr.ph, label %for.inc139

for.body112.lr.ph:                                ; preds = %if.then104
  %arrayidx114 = getelementptr inbounds float*, float** %mean, i64 %indvars.iv290
  %25 = load float*, float** %arrayidx114, align 8, !tbaa !74
  br label %for.body112

for.body112:                                      ; preds = %for.body112.lr.ph, %for.body112
  %indvars.iv286 = phi i64 [ 0, %for.body112.lr.ph ], [ %indvars.iv.next287, %for.body112 ]
  %arrayidx116 = getelementptr inbounds float, float* %25, i64 %indvars.iv286
  %26 = load float, float* %arrayidx116, align 4, !tbaa !4
  %conv117 = fpext float %26 to double
  %mul118 = fmul double %div108, %conv117
  %conv119 = fptrunc double %mul118 to float
  store float %conv119, float* %arrayidx116, align 4, !tbaa !4
  %indvars.iv.next287 = add nuw nsw i64 %indvars.iv286, 1
  %exitcond289.not = icmp eq i64 %indvars.iv.next287, %11
  br i1 %exitcond289.not, label %for.inc139, label %for.body112, !llvm.loop !905

if.else127:                                       ; preds = %for.body99
  %cmp130 = icmp eq i32 %24, 0
  br i1 %cmp130, label %if.then132, label %for.inc139

if.then132:                                       ; preds = %if.else127
  call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.991, i64 0, i64 0), i64 413, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.995, i64 0, i64 0)) #34
  %27 = trunc i64 %indvars.iv290 to i32
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7.996, i64 0, i64 0), i32 %it.0, i32 %27) #34
  %arrayidx134 = getelementptr inbounds float*, float** %mean, i64 %indvars.iv290
  %28 = bitcast float** %arrayidx134 to i8**
  %29 = load i8*, i8** %28, align 8, !tbaa !74
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %call23, i64 %mul18, i1 false)
  br label %for.inc139

for.inc139:                                       ; preds = %for.body112, %if.then104, %if.then132, %if.else127
  %indvars.iv.next291 = add nuw nsw i64 %indvars.iv290, 1
  %exitcond293.not = icmp eq i64 %indvars.iv.next291, %wide.trip.count292
  br i1 %exitcond293.not, label %for.inc142, label %for.body99, !llvm.loop !906

for.inc142:                                       ; preds = %for.inc139, %for.cond96.preheader
  %inc143 = add nuw nsw i32 %it.0, 1
  br label %for.cond25, !llvm.loop !907

for.end144:                                       ; preds = %if.end43.thread, %if.end43
  call void @ckd_free(i8* %call21) #34
  call void @ckd_free(i8* %call23) #34
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #38
  ret double %sqerr.0.lcssa
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define double @vector_pdf_entropy(float* nocapture readonly %p, i32 %len) local_unnamed_addr #14 {
entry:
  %cmp20 = icmp sgt i32 %len, 0
  br i1 %cmp20, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %sum.021 = phi double [ 0.000000e+00, %for.body.preheader ], [ %sum.1, %for.inc ]
  %arrayidx = getelementptr inbounds float, float* %p, i64 %indvars.iv
  %0 = load float, float* %arrayidx, align 4, !tbaa !4
  %conv = fpext float %0 to double
  %cmp1 = fcmp ogt float %0, 0.000000e+00
  br i1 %cmp1, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %call = tail call double @log(double %conv) #34
  %neg = fneg double %conv
  %1 = tail call double @llvm.fmuladd.f64(double %neg, double %call, double %sum.021)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %sum.1 = phi double [ %1, %if.then ], [ %sum.021, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !908

for.end:                                          ; preds = %for.inc, %entry
  %sum.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %sum.1, %for.inc ]
  %div = fdiv double %sum.0.lcssa, 0x3FE62E42FEFA39EF
  ret double %div
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define double @vector_pdf_cross_entropy(float* nocapture readonly %p1, float* nocapture readonly %p2, i32 %len) local_unnamed_addr #14 {
entry:
  %cmp19 = icmp sgt i32 %len, 0
  br i1 %cmp19, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %len to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %sum.020 = phi double [ 0.000000e+00, %for.body.preheader ], [ %sum.1, %for.inc ]
  %arrayidx = getelementptr inbounds float, float* %p2, i64 %indvars.iv
  %0 = load float, float* %arrayidx, align 4, !tbaa !4
  %cmp1 = fcmp ogt float %0, 0.000000e+00
  br i1 %cmp1, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %conv = fpext float %0 to double
  %arrayidx4 = getelementptr inbounds float, float* %p1, i64 %indvars.iv
  %1 = load float, float* %arrayidx4, align 4, !tbaa !4
  %conv5 = fpext float %1 to double
  %call = tail call double @log(double %conv) #34
  %neg = fneg double %conv5
  %2 = tail call double @llvm.fmuladd.f64(double %neg, double %call, double %sum.020)
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %sum.1 = phi double [ %2, %if.then ], [ %sum.020, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !909

for.end:                                          ; preds = %for.inc, %entry
  %sum.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %sum.1, %for.inc ]
  %div = fdiv double %sum.0.lcssa, 0x3FE62E42FEFA39EF
  ret double %div
}

; Function Attrs: noinline nounwind optsize uwtable
define void @vector_gautbl_alloc(%struct.vector_gautbl_t* nocapture %gautbl, i32 %n_gau, i32 %veclen) local_unnamed_addr #0 {
entry:
  %n_gau1 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 0
  store i32 %n_gau, i32* %n_gau1, align 8, !tbaa !910
  %veclen2 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 1
  store i32 %veclen, i32* %veclen2, align 4, !tbaa !260
  %call = tail call i8** @__ckd_calloc_2d__(i32 %n_gau, i32 %veclen, i32 4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.991, i64 0, i64 0), i32 462) #34
  %mean = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 2
  %0 = bitcast float*** %mean to i8***
  store i8** %call, i8*** %0, align 8, !tbaa !267
  %call3 = tail call i8** @__ckd_calloc_2d__(i32 %n_gau, i32 %veclen, i32 4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.991, i64 0, i64 0), i32 463) #34
  %var = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 3
  %1 = bitcast float*** %var to i8***
  store i8** %call3, i8*** %1, align 8, !tbaa !268
  %conv = sext i32 %n_gau to i64
  %call4 = tail call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.991, i64 0, i64 0), i32 464) #34
  %lrd = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 4
  %2 = bitcast float** %lrd to i8**
  store i8* %call4, i8** %2, align 8, !tbaa !279
  %call5 = tail call double @logs3_to_log(i32 -939524096) #34
  %distfloor = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 5
  store double %call5, double* %distfloor, align 8, !tbaa !911
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @vector_gautbl_free(%struct.vector_gautbl_t* nocapture readonly %gautbl) local_unnamed_addr #0 {
entry:
  %mean = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 2
  %0 = bitcast float*** %mean to i8***
  %1 = load i8**, i8*** %0, align 8, !tbaa !267
  tail call void @ckd_free_2d(i8** %1) #34
  %var = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 3
  %2 = bitcast float*** %var to i8***
  %3 = load i8**, i8*** %2, align 8, !tbaa !268
  tail call void @ckd_free_2d(i8** %3) #34
  %lrd = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 4
  %4 = bitcast float** %lrd to i8**
  %5 = load i8*, i8** %4, align 8, !tbaa !279
  tail call void @ckd_free(i8* %5) #34
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @vector_gautbl_var_floor(%struct.vector_gautbl_t* nocapture readonly %gautbl, double %floor) local_unnamed_addr #13 {
entry:
  %n_gau = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 0
  %var = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 3
  %veclen = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 1
  %0 = load i32, i32* %n_gau, align 8, !tbaa !910
  %cmp6 = icmp sgt i32 %0, 0
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %1 = load float**, float*** %var, align 8, !tbaa !268
  %arrayidx = getelementptr inbounds float*, float** %1, i64 %indvars.iv
  %2 = load float*, float** %arrayidx, align 8, !tbaa !74
  %3 = load i32, i32* %veclen, align 4, !tbaa !260
  tail call void @vector_floor(float* %2, i32 %3, double %floor) #36
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %4 = load i32, i32* %n_gau, align 8, !tbaa !910
  %5 = sext i32 %4 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %5
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !912

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @vector_gautbl_maha_precomp(%struct.vector_gautbl_t* nocapture readonly %gautbl) local_unnamed_addr #14 {
entry:
  %n_gau = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 0
  %var = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 3
  %veclen = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 1
  %lrd = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 4
  %0 = load i32, i32* %n_gau, align 8, !tbaa !910
  %cmp10 = icmp sgt i32 %0, 0
  br i1 %cmp10, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %1 = load float**, float*** %var, align 8, !tbaa !268
  %arrayidx = getelementptr inbounds float*, float** %1, i64 %indvars.iv
  %2 = load float*, float** %arrayidx, align 8, !tbaa !74
  %3 = load i32, i32* %veclen, align 4, !tbaa !260
  %call = tail call double @vector_maha_precomp(float* %2, i32 %3) #36
  %conv = fptrunc double %call to float
  %4 = load float*, float** %lrd, align 8, !tbaa !279
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  store float %conv, float* %arrayidx2, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32, i32* %n_gau, align 8, !tbaa !910
  %6 = sext i32 %5 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !913

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @vector_gautbl_eval_logs3(%struct.vector_gautbl_t* nocapture readonly %gautbl, i32 %offset, i32 %count, float* nocapture readonly %x, i32* nocapture %score) local_unnamed_addr #0 {
entry:
  %call = tail call double @log_to_logs3_factor() #34
  %add = add nsw i32 %count, %offset
  %veclen1 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 1
  %0 = load i32, i32* %veclen1, align 4, !tbaa !260
  %sub = add nsw i32 %add, -1
  %cmp20190 = icmp sgt i32 %0, 0
  %cmp196 = icmp sgt i32 %sub, %offset
  br i1 %cmp196, label %for.body.lr.ph, label %for.end65

for.body.lr.ph:                                   ; preds = %entry
  %distfloor = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 5
  %lrd = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 4
  %var = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 3
  %mean = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 2
  %1 = load float**, float*** %mean, align 8, !tbaa !267
  %2 = load float**, float*** %var, align 8, !tbaa !268
  %3 = load float*, float** %lrd, align 8, !tbaa !279
  %4 = load double, double* %distfloor, align 8, !tbaa !911
  %5 = sext i32 %offset to i64
  %6 = sext i32 %sub to i64
  %wide.trip.count203 = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.end
  %indvars.iv205 = phi i64 [ %5, %for.body.lr.ph ], [ %indvars.iv.next206, %for.end ]
  %arrayidx = getelementptr inbounds float*, float** %1, i64 %indvars.iv205
  %7 = load float*, float** %arrayidx, align 8, !tbaa !74
  %8 = add nsw i64 %indvars.iv205, 1
  %arrayidx5 = getelementptr inbounds float*, float** %1, i64 %8
  %9 = load float*, float** %arrayidx5, align 8, !tbaa !74
  %arrayidx7 = getelementptr inbounds float*, float** %2, i64 %indvars.iv205
  %10 = load float*, float** %arrayidx7, align 8, !tbaa !74
  %arrayidx11 = getelementptr inbounds float*, float** %2, i64 %8
  %11 = load float*, float** %arrayidx11, align 8, !tbaa !74
  %arrayidx13 = getelementptr inbounds float, float* %3, i64 %indvars.iv205
  %12 = load float, float* %arrayidx13, align 4, !tbaa !4
  %conv = fpext float %12 to double
  %arrayidx17 = getelementptr inbounds float, float* %3, i64 %8
  %13 = load float, float* %arrayidx17, align 4, !tbaa !4
  %conv18 = fpext float %13 to double
  br i1 %cmp20190, label %for.body22, label %for.end

for.body22:                                       ; preds = %for.body, %for.body22
  %indvars.iv201 = phi i64 [ %indvars.iv.next202, %for.body22 ], [ 0, %for.body ]
  %dval2.0192 = phi double [ %22, %for.body22 ], [ %conv18, %for.body ]
  %dval1.0191 = phi double [ %18, %for.body22 ], [ %conv, %for.body ]
  %arrayidx24 = getelementptr inbounds float, float* %x, i64 %indvars.iv201
  %14 = load float, float* %arrayidx24, align 4, !tbaa !4
  %arrayidx26 = getelementptr inbounds float, float* %7, i64 %indvars.iv201
  %15 = load float, float* %arrayidx26, align 4, !tbaa !4
  %sub27 = fsub float %14, %15
  %conv28 = fpext float %sub27 to double
  %arrayidx30 = getelementptr inbounds float, float* %10, i64 %indvars.iv201
  %16 = load float, float* %arrayidx30, align 4, !tbaa !4
  %conv31 = fpext float %16 to double
  %17 = fneg double %conv28
  %neg = fmul double %17, %conv28
  %18 = tail call double @llvm.fmuladd.f64(double %neg, double %conv31, double %dval1.0191)
  %arrayidx36 = getelementptr inbounds float, float* %9, i64 %indvars.iv201
  %19 = load float, float* %arrayidx36, align 4, !tbaa !4
  %sub37 = fsub float %14, %19
  %conv38 = fpext float %sub37 to double
  %arrayidx41 = getelementptr inbounds float, float* %11, i64 %indvars.iv201
  %20 = load float, float* %arrayidx41, align 4, !tbaa !4
  %conv42 = fpext float %20 to double
  %21 = fneg double %conv38
  %neg44 = fmul double %21, %conv38
  %22 = tail call double @llvm.fmuladd.f64(double %neg44, double %conv42, double %dval2.0192)
  %indvars.iv.next202 = add nuw nsw i64 %indvars.iv201, 1
  %exitcond204.not = icmp eq i64 %indvars.iv.next202, %wide.trip.count203
  br i1 %exitcond204.not, label %for.end, label %for.body22, !llvm.loop !914

for.end:                                          ; preds = %for.body22, %for.body
  %dval1.0.lcssa = phi double [ %conv, %for.body ], [ %18, %for.body22 ]
  %dval2.0.lcssa = phi double [ %conv18, %for.body ], [ %22, %for.body22 ]
  %cmp45 = fcmp olt double %dval1.0.lcssa, %4
  %dval1.1 = select i1 %cmp45, double %4, double %dval1.0.lcssa
  %cmp49 = fcmp olt double %dval2.0.lcssa, %4
  %dval2.1 = select i1 %cmp49, double %4, double %dval2.0.lcssa
  %mul54 = fmul double %call, %dval1.1
  %conv55 = fptosi double %mul54 to i32
  %arrayidx57 = getelementptr inbounds i32, i32* %score, i64 %indvars.iv205
  store i32 %conv55, i32* %arrayidx57, align 4, !tbaa !37
  %mul58 = fmul double %call, %dval2.1
  %conv59 = fptosi double %mul58 to i32
  %arrayidx62 = getelementptr inbounds i32, i32* %score, i64 %8
  store i32 %conv59, i32* %arrayidx62, align 4, !tbaa !37
  %indvars.iv.next206 = add nsw i64 %indvars.iv205, 2
  %cmp = icmp slt i64 %indvars.iv.next206, %6
  br i1 %cmp, label %for.body, label %for.end65.loopexit, !llvm.loop !915

for.end65.loopexit:                               ; preds = %for.end
  %23 = trunc i64 %indvars.iv.next206 to i32
  br label %for.end65

for.end65:                                        ; preds = %for.end65.loopexit, %entry
  %r.0.lcssa = phi i32 [ %offset, %entry ], [ %23, %for.end65.loopexit ]
  %cmp66 = icmp slt i32 %r.0.lcssa, %add
  br i1 %cmp66, label %if.then68, label %if.end108

if.then68:                                        ; preds = %for.end65
  %mean69 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 2
  %24 = load float**, float*** %mean69, align 8, !tbaa !267
  %idxprom70 = sext i32 %r.0.lcssa to i64
  %arrayidx71 = getelementptr inbounds float*, float** %24, i64 %idxprom70
  %25 = load float*, float** %arrayidx71, align 8, !tbaa !74
  %var72 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 3
  %26 = load float**, float*** %var72, align 8, !tbaa !268
  %arrayidx74 = getelementptr inbounds float*, float** %26, i64 %idxprom70
  %27 = load float*, float** %arrayidx74, align 8, !tbaa !74
  %lrd75 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 4
  %28 = load float*, float** %lrd75, align 8, !tbaa !279
  %arrayidx77 = getelementptr inbounds float, float* %28, i64 %idxprom70
  %29 = load float, float* %arrayidx77, align 4, !tbaa !4
  %conv78 = fpext float %29 to double
  br i1 %cmp20190, label %for.body82.preheader, label %for.end97

for.body82.preheader:                             ; preds = %if.then68
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body82

for.body82:                                       ; preds = %for.body82.preheader, %for.body82
  %indvars.iv = phi i64 [ 0, %for.body82.preheader ], [ %indvars.iv.next, %for.body82 ]
  %dval1.2188 = phi double [ %conv78, %for.body82.preheader ], [ %34, %for.body82 ]
  %arrayidx84 = getelementptr inbounds float, float* %x, i64 %indvars.iv
  %30 = load float, float* %arrayidx84, align 4, !tbaa !4
  %arrayidx86 = getelementptr inbounds float, float* %25, i64 %indvars.iv
  %31 = load float, float* %arrayidx86, align 4, !tbaa !4
  %sub87 = fsub float %30, %31
  %conv88 = fpext float %sub87 to double
  %arrayidx91 = getelementptr inbounds float, float* %27, i64 %indvars.iv
  %32 = load float, float* %arrayidx91, align 4, !tbaa !4
  %conv92 = fpext float %32 to double
  %33 = fneg double %conv88
  %neg94 = fmul double %33, %conv88
  %34 = tail call double @llvm.fmuladd.f64(double %neg94, double %conv92, double %dval1.2188)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end97, label %for.body82, !llvm.loop !916

for.end97:                                        ; preds = %for.body82, %if.then68
  %dval1.2.lcssa = phi double [ %conv78, %if.then68 ], [ %34, %for.body82 ]
  %distfloor98 = getelementptr inbounds %struct.vector_gautbl_t, %struct.vector_gautbl_t* %gautbl, i64 0, i32 5
  %35 = load double, double* %distfloor98, align 8, !tbaa !911
  %cmp99 = fcmp olt double %dval1.2.lcssa, %35
  %dval1.3 = select i1 %cmp99, double %35, double %dval1.2.lcssa
  %mul104 = fmul double %call, %dval1.3
  %conv105 = fptosi double %mul104 to i32
  %arrayidx107 = getelementptr inbounds i32, i32* %score, i64 %idxprom70
  store i32 %conv105, i32* %arrayidx107, align 4, !tbaa !37
  br label %if.end108

if.end108:                                        ; preds = %for.end97, %for.end65
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @cmd_ln_parse(%struct.arg_t* %defn, i32 %argc, i8** nocapture readonly %argv) local_unnamed_addr #0 {
entry:
  %i = alloca i32, align 4
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %1 = load %struct.argval_s*, %struct.argval_s** @argval, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.argval_s* %1, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1007, i64 0, i64 0), i64 273, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1008, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.1009, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1007, i64 0, i64 0), i64 276, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.1010, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.1011, i64 0, i64 0)) #34
  br label %for.cond

for.cond:                                         ; preds = %for.cond, %if.end
  %indvars.iv185 = phi i64 [ %indvars.iv.next186, %for.cond ], [ 0, %if.end ]
  %name = getelementptr inbounds %struct.arg_t, %struct.arg_t* %defn, i64 %indvars.iv185, i32 0
  %2 = load i8*, i8** %name, align 8, !tbaa !917
  %tobool1.not = icmp eq i8* %2, null
  %indvars.iv.next186 = add nuw i64 %indvars.iv185, 1
  br i1 %tobool1.not, label %for.end, label %for.cond, !llvm.loop !919

for.end:                                          ; preds = %for.cond
  %3 = trunc i64 %indvars.iv185 to i32
  %idxprom.le = and i64 %indvars.iv185, 4294967295
  %call = tail call %struct.hash_table_t* @hash_new(i32 %3, i32 0) #34
  store %struct.hash_table_t* %call, %struct.hash_table_t** @ht, align 8, !tbaa !74
  %call2 = tail call i8* @__ckd_calloc__(i64 %idxprom.le, i64 16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1007, i64 0, i64 0), i32 292) #34
  store i8* %call2, i8** bitcast (%struct.argval_s** @argval to i8**), align 8, !tbaa !74
  %cmp172.not = icmp eq i32 %3, 0
  br i1 %cmp172.not, label %for.cond20.preheader, label %for.body5

for.cond20.preheader:                             ; preds = %for.inc17, %for.end
  store i32 %3, i32* %i, align 4, !tbaa !37
  %cmp21170 = icmp sgt i32 %argc, 1
  br i1 %cmp21170, label %for.body23, label %for.cond64.preheader

for.body5:                                        ; preds = %for.end, %for.inc17
  %indvars.iv183 = phi i64 [ %indvars.iv.next184, %for.inc17 ], [ 0, %for.end ]
  %4 = load %struct.hash_table_t*, %struct.hash_table_t** @ht, align 8, !tbaa !74
  %name8 = getelementptr inbounds %struct.arg_t, %struct.arg_t* %defn, i64 %indvars.iv183, i32 0
  %5 = load i8*, i8** %name8, align 8, !tbaa !917
  %6 = trunc i64 %indvars.iv183 to i32
  %call9 = tail call i32 @hash_enter(%struct.hash_table_t* %4, i8* %5, i32 %6) #34
  %7 = zext i32 %call9 to i64
  %cmp10.not = icmp eq i64 %indvars.iv183, %7
  br i1 %cmp10.not, label %for.inc17, label %if.then12

if.then12:                                        ; preds = %for.body5
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1007, i64 0, i64 0), i64 298, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1008, i64 0, i64 0)) #34
  %8 = load i8*, i8** %name8, align 8, !tbaa !917
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.1012, i64 0, i64 0), i8* %8) #34
  br label %for.inc17

for.inc17:                                        ; preds = %for.body5, %if.then12
  %indvars.iv.next184 = add nuw nsw i64 %indvars.iv183, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next184, %idxprom.le
  br i1 %exitcond.not, label %for.cond20.preheader, label %for.body5, !llvm.loop !920

for.cond20:                                       ; preds = %if.end45
  %9 = trunc i64 %indvars.iv.next to i32
  %cmp21 = icmp slt i32 %9, %argc
  br i1 %cmp21, label %for.body23, label %for.cond64.preheader, !llvm.loop !921

for.cond64.preheader:                             ; preds = %for.cond20, %for.cond20.preheader
  store i32 0, i32* %i, align 4, !tbaa !37
  br i1 %cmp172.not, label %if.end119, label %for.body67

for.body23:                                       ; preds = %for.cond20.preheader, %for.cond20
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond20 ], [ 1, %for.cond20.preheader ]
  %10 = load %struct.hash_table_t*, %struct.hash_table_t** @ht, align 8, !tbaa !74
  %arrayidx25 = getelementptr inbounds i8*, i8** %argv, i64 %indvars.iv
  %11 = load i8*, i8** %arrayidx25, align 8, !tbaa !74
  %call26 = call i32 @hash_lookup(%struct.hash_table_t* %10, i8* %11, i32* nonnull %i) #34
  %cmp27 = icmp slt i32 %call26, 0
  br i1 %cmp27, label %if.then29, label %if.end32

if.then29:                                        ; preds = %for.body23
  call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1007, i64 0, i64 0), i64 304, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.1013, i64 0, i64 0)) #34
  %12 = load i8*, i8** %arrayidx25, align 8, !tbaa !74
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.1014, i64 0, i64 0), i8* %12) #34
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  call void @cmd_ln_print_help(%struct._IO_FILE* %13, %struct.arg_t* nonnull %defn) #36
  call void @exit(i32 -1) #40
  br label %UnifiedUnreachableBlock

if.end32:                                         ; preds = %for.body23
  %14 = load %struct.argval_s*, %struct.argval_s** @argval, align 8, !tbaa !74
  %15 = load i32, i32* %i, align 4, !tbaa !37
  %idxprom33 = sext i32 %15 to i64
  %ptr = getelementptr inbounds %struct.argval_s, %struct.argval_s* %14, i64 %idxprom33, i32 1
  %16 = load i8*, i8** %ptr, align 8, !tbaa !922
  %tobool35.not = icmp eq i8* %16, null
  br i1 %tobool35.not, label %if.end39, label %if.then36

if.then36:                                        ; preds = %if.end32
  call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1007, i64 0, i64 0), i64 311, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1008, i64 0, i64 0)) #34
  %17 = load i8*, i8** %arrayidx25, align 8, !tbaa !74
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.1017, i64 0, i64 0), i8* %17) #34
  br label %if.end39

if.end39:                                         ; preds = %if.then36, %if.end32
  %18 = add nuw nsw i64 %indvars.iv, 1
  %19 = trunc i64 %18 to i32
  %cmp40.not = icmp slt i32 %19, %argc
  br i1 %cmp40.not, label %if.end45, label %if.then42

if.then42:                                        ; preds = %if.end39
  call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1007, i64 0, i64 0), i64 314, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.1013, i64 0, i64 0)) #34
  %20 = load i8*, i8** %arrayidx25, align 8, !tbaa !74
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.1018, i64 0, i64 0), i8* %20) #34
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  call void @cmd_ln_print_help(%struct._IO_FILE* %21, %struct.arg_t* %defn) #36
  call void @exit(i32 -1) #40
  br label %UnifiedUnreachableBlock

if.end45:                                         ; preds = %if.end39
  %22 = load %struct.argval_s*, %struct.argval_s** @argval, align 8, !tbaa !74
  %23 = load i32, i32* %i, align 4, !tbaa !37
  %idx.ext = sext i32 %23 to i64
  %add.ptr = getelementptr inbounds %struct.argval_s, %struct.argval_s* %22, i64 %idx.ext
  %type = getelementptr inbounds %struct.arg_t, %struct.arg_t* %defn, i64 %idx.ext, i32 1
  %24 = load i32, i32* %type, align 8, !tbaa !924
  %arrayidx50 = getelementptr inbounds i8*, i8** %argv, i64 %18
  %25 = load i8*, i8** %arrayidx50, align 8, !tbaa !74
  %call51 = call fastcc i32 @arg_str2val(%struct.argval_s* %add.ptr, i32 %24, i8* %25) #36
  %cmp52 = icmp slt i32 %call51, 0
  %indvars.iv.next = add nuw i64 %indvars.iv, 2
  br i1 %cmp52, label %if.then54, label %for.cond20

if.then54:                                        ; preds = %if.end45
  %idxprom49.le = and i64 %18, 4294967295
  %arrayidx50.le = getelementptr inbounds i8*, i8** %argv, i64 %idxprom49.le
  call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1007, i64 0, i64 0), i64 321, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.1013, i64 0, i64 0)) #34
  %26 = load i8*, i8** %arrayidx25, align 8, !tbaa !74
  %27 = load i8*, i8** %arrayidx50.le, align 8, !tbaa !74
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.1019, i64 0, i64 0), i8* %26, i8* %27) #34
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  call void @cmd_ln_print_help(%struct._IO_FILE* %28, %struct.arg_t* nonnull %defn) #36
  call void @exit(i32 -1) #40
  br label %UnifiedUnreachableBlock

for.cond95.preheader:                             ; preds = %for.inc92
  store i32 0, i32* %i, align 4, !tbaa !37
  br i1 %cmp172.not, label %if.end119, label %for.body98

for.body67:                                       ; preds = %for.cond64.preheader, %for.inc92
  %storemerge161169 = phi i32 [ %inc93, %for.inc92 ], [ 0, %for.cond64.preheader ]
  %29 = load %struct.argval_s*, %struct.argval_s** @argval, align 8, !tbaa !74
  %idxprom68 = sext i32 %storemerge161169 to i64
  %ptr70 = getelementptr inbounds %struct.argval_s, %struct.argval_s* %29, i64 %idxprom68, i32 1
  %30 = load i8*, i8** %ptr70, align 8, !tbaa !922
  %tobool71.not = icmp eq i8* %30, null
  br i1 %tobool71.not, label %if.then72, label %for.inc92

if.then72:                                        ; preds = %for.body67
  %arrayidx69 = getelementptr inbounds %struct.argval_s, %struct.argval_s* %29, i64 %idxprom68
  %type77 = getelementptr inbounds %struct.arg_t, %struct.arg_t* %defn, i64 %idxprom68, i32 1
  %31 = load i32, i32* %type77, align 8, !tbaa !924
  %deflt = getelementptr inbounds %struct.arg_t, %struct.arg_t* %defn, i64 %idxprom68, i32 2
  %32 = load i8*, i8** %deflt, align 8, !tbaa !925
  %call80 = call fastcc i32 @arg_str2val(%struct.argval_s* %arrayidx69, i32 %31, i8* %32) #36
  %cmp81 = icmp slt i32 %call80, 0
  br i1 %cmp81, label %if.then83, label %for.inc92

if.then83:                                        ; preds = %if.then72
  call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1007, i64 0, i64 0), i64 333, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1008, i64 0, i64 0)) #34
  %33 = load i32, i32* %i, align 4, !tbaa !37
  %idxprom84 = sext i32 %33 to i64
  %name86 = getelementptr inbounds %struct.arg_t, %struct.arg_t* %defn, i64 %idxprom84, i32 0
  %34 = load i8*, i8** %name86, align 8, !tbaa !917
  %deflt89 = getelementptr inbounds %struct.arg_t, %struct.arg_t* %defn, i64 %idxprom84, i32 2
  %35 = load i8*, i8** %deflt89, align 8, !tbaa !925
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11.1020, i64 0, i64 0), i8* %34, i8* %35) #34
  br label %for.inc92

for.inc92:                                        ; preds = %for.body67, %if.then83, %if.then72
  %36 = load i32, i32* %i, align 4, !tbaa !37
  %inc93 = add nsw i32 %36, 1
  store i32 %inc93, i32* %i, align 4, !tbaa !37
  %cmp65 = icmp slt i32 %inc93, %3
  br i1 %cmp65, label %for.body67, label %for.cond95.preheader, !llvm.loop !926

for.body98:                                       ; preds = %for.cond95.preheader, %for.inc113
  %j.1167 = phi i32 [ %j.2, %for.inc113 ], [ 0, %for.cond95.preheader ]
  %storemerge162166 = phi i32 [ %inc114, %for.inc113 ], [ 0, %for.cond95.preheader ]
  %idxprom99 = sext i32 %storemerge162166 to i64
  %type101 = getelementptr inbounds %struct.arg_t, %struct.arg_t* %defn, i64 %idxprom99, i32 1
  %37 = load i32, i32* %type101, align 8, !tbaa !924
  %and = and i32 %37, 1
  %tobool102.not = icmp eq i32 %and, 0
  br i1 %tobool102.not, label %for.inc113, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body98
  %38 = load %struct.argval_s*, %struct.argval_s** @argval, align 8, !tbaa !74
  %ptr105 = getelementptr inbounds %struct.argval_s, %struct.argval_s* %38, i64 %idxprom99, i32 1
  %39 = load i8*, i8** %ptr105, align 8, !tbaa !922
  %tobool106.not = icmp eq i8* %39, null
  br i1 %tobool106.not, label %if.then107, label %for.inc113

if.then107:                                       ; preds = %land.lhs.true
  call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1007, i64 0, i64 0), i64 342, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6.1013, i64 0, i64 0)) #34
  %40 = load i32, i32* %i, align 4, !tbaa !37
  %idxprom108 = sext i32 %40 to i64
  %name110 = getelementptr inbounds %struct.arg_t, %struct.arg_t* %defn, i64 %idxprom108, i32 0
  %41 = load i8*, i8** %name110, align 8, !tbaa !917
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12.1021, i64 0, i64 0), i8* %41) #34
  %inc111 = add nsw i32 %j.1167, 1
  %.pre = load i32, i32* %i, align 4, !tbaa !37
  br label %for.inc113

for.inc113:                                       ; preds = %for.body98, %land.lhs.true, %if.then107
  %42 = phi i32 [ %storemerge162166, %land.lhs.true ], [ %.pre, %if.then107 ], [ %storemerge162166, %for.body98 ]
  %j.2 = phi i32 [ %j.1167, %land.lhs.true ], [ %inc111, %if.then107 ], [ %j.1167, %for.body98 ]
  %inc114 = add nsw i32 %42, 1
  store i32 %inc114, i32* %i, align 4, !tbaa !37
  %cmp96 = icmp slt i32 %inc114, %3
  br i1 %cmp96, label %for.body98, label %for.end115, !llvm.loop !927

for.end115:                                       ; preds = %for.inc113
  %cmp116 = icmp sgt i32 %j.2, 0
  br i1 %cmp116, label %if.then118, label %if.end119

if.then118:                                       ; preds = %for.end115
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  call void @cmd_ln_print_help(%struct._IO_FILE* %43, %struct.arg_t* nonnull %defn) #36
  call void @exit(i32 -1) #40
  br label %UnifiedUnreachableBlock

if.end119:                                        ; preds = %for.cond64.preheader, %for.cond95.preheader, %for.end115
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret i32 0

UnifiedUnreachableBlock:                          ; preds = %if.then118, %if.then54, %if.then42, %if.then29
  unreachable
}

; Function Attrs: noinline nounwind optsize uwtable
define void @cmd_ln_print_help(%struct._IO_FILE* nocapture %fp, %struct.arg_t* %defn) local_unnamed_addr #0 {
entry:
  %0 = tail call i64 @fwrite(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13.1026, i64 0, i64 0), i64 27, i64 1, %struct._IO_FILE* %fp)
  tail call fastcc void @arg_dump(%struct._IO_FILE* %fp, %struct.arg_t* %defn) #36
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc i32 @arg_str2val(%struct.argval_s* %v, i32 %t, i8* %str) unnamed_addr #0 {
entry:
  %tobool.not = icmp eq i8* %str, null
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %ptr = getelementptr inbounds %struct.argval_s, %struct.argval_s* %v, i64 0, i32 1
  store i8* null, i8** %ptr, align 8, !tbaa !922
  br label %return

if.else:                                          ; preds = %entry
  switch i32 %t, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb5
    i32 5, label %sw.bb5
    i32 6, label %sw.bb14
    i32 7, label %sw.bb14
    i32 8, label %sw.bb23
    i32 9, label %sw.bb23
  ]

sw.bb:                                            ; preds = %if.else, %if.else
  %call = tail call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %str, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15.1022, i64 0, i64 0), %struct.argval_s* %v) #34
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %return

if.end:                                           ; preds = %sw.bb
  %ptr4 = getelementptr inbounds %struct.argval_s, %struct.argval_s* %v, i64 0, i32 1
  %0 = bitcast i8** %ptr4 to %struct.argval_s**
  store %struct.argval_s* %v, %struct.argval_s** %0, align 8, !tbaa !922
  br label %return

sw.bb5:                                           ; preds = %if.else, %if.else
  %call7 = tail call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %str, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16.1023, i64 0, i64 0), %struct.argval_s* %v) #34
  %cmp8.not = icmp eq i32 %call7, 1
  br i1 %cmp8.not, label %if.end10, label %return

if.end10:                                         ; preds = %sw.bb5
  %ptr13 = getelementptr inbounds %struct.argval_s, %struct.argval_s* %v, i64 0, i32 1
  %1 = bitcast i8** %ptr13 to %struct.argval_s**
  store %struct.argval_s* %v, %struct.argval_s** %1, align 8, !tbaa !922
  br label %return

sw.bb14:                                          ; preds = %if.else, %if.else
  %call16 = tail call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %str, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.1024, i64 0, i64 0), %struct.argval_s* %v) #34
  %cmp17.not = icmp eq i32 %call16, 1
  br i1 %cmp17.not, label %if.end19, label %return

if.end19:                                         ; preds = %sw.bb14
  %ptr22 = getelementptr inbounds %struct.argval_s, %struct.argval_s* %v, i64 0, i32 1
  %2 = bitcast i8** %ptr22 to %struct.argval_s**
  store %struct.argval_s* %v, %struct.argval_s** %2, align 8, !tbaa !922
  br label %return

sw.bb23:                                          ; preds = %if.else, %if.else
  %ptr24 = getelementptr inbounds %struct.argval_s, %struct.argval_s* %v, i64 0, i32 1
  store i8* %str, i8** %ptr24, align 8, !tbaa !922
  br label %return

sw.default:                                       ; preds = %if.else
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1007, i64 0, i64 0), i64 184, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1008, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18.1025, i64 0, i64 0), i32 %t) #34
  br label %return

return:                                           ; preds = %if.then, %sw.default, %sw.bb23, %if.end19, %if.end10, %if.end, %sw.bb14, %sw.bb5, %sw.bb
  %retval.0 = phi i32 [ -1, %sw.bb ], [ -1, %sw.bb5 ], [ -1, %sw.bb14 ], [ 0, %if.end ], [ 0, %if.end10 ], [ 0, %if.end19 ], [ 0, %sw.bb23 ], [ 0, %sw.default ], [ 0, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @arg_dump(%struct._IO_FILE* nocapture %fp, %struct.arg_t* %defn) unnamed_addr #0 {
entry:
  %namelen = alloca i32, align 4
  %deflen = alloca i32, align 4
  %0 = bitcast i32* %namelen to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %1 = bitcast i32* %deflen to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #38
  %call = call fastcc i32 @arg_strlen(%struct.arg_t* %defn, i32* nonnull %namelen, i32* nonnull %deflen) #36
  %2 = load i32, i32* %namelen, align 4, !tbaa !37
  %and = and i32 %2, -8
  %3 = load i32, i32* %deflen, align 4, !tbaa !37
  %and1 = and i32 %3, -8
  %4 = tail call i64 @fwrite(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19.1027, i64 0, i64 0), i64 6, i64 1, %struct._IO_FILE* %fp)
  %cmp18 = icmp sgt i32 %and, 6
  br i1 %cmp18, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %l.019 = phi i32 [ %add, %for.body ], [ 6, %entry ]
  %fputc9 = tail call i32 @fputc(i32 9, %struct._IO_FILE* %fp)
  %add = add nuw nsw i32 %l.019, 8
  %cmp = icmp slt i32 %add, %and
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !928

for.end:                                          ; preds = %for.body, %entry
  %5 = tail call i64 @fwrite(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21.1028, i64 0, i64 0), i64 8, i64 1, %struct._IO_FILE* %fp)
  %cmp616 = icmp sgt i32 %and1, 6
  br i1 %cmp616, label %for.body7, label %for.end11

for.body7:                                        ; preds = %for.end, %for.body7
  %l.117 = phi i32 [ %add10, %for.body7 ], [ 6, %for.end ]
  %fputc8 = tail call i32 @fputc(i32 9, %struct._IO_FILE* %fp)
  %add10 = add nuw nsw i32 %l.117, 8
  %cmp6 = icmp slt i32 %add10, %and1
  br i1 %cmp6, label %for.body7, label %for.end11, !llvm.loop !929

for.end11:                                        ; preds = %for.body7, %for.end
  %6 = tail call i64 @fwrite(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22.1029, i64 0, i64 0), i64 9, i64 1, %struct._IO_FILE* %fp)
  %call13 = tail call fastcc i32* @arg_sort(%struct.arg_t* %defn, i32 %call) #36
  %cmp1514 = icmp sgt i32 %call, 0
  br i1 %cmp1514, label %for.body16.preheader, label %for.end89

for.body16.preheader:                             ; preds = %for.end11
  %wide.trip.count = zext i32 %call to i64
  br label %for.body16

for.body16:                                       ; preds = %for.body16.preheader, %if.end86
  %indvars.iv = phi i64 [ 0, %for.body16.preheader ], [ %indvars.iv.next, %if.end86 ]
  %arrayidx = getelementptr inbounds i32, i32* %call13, i64 %indvars.iv
  %7 = load i32, i32* %arrayidx, align 4, !tbaa !37
  %idxprom17 = sext i32 %7 to i64
  %name = getelementptr inbounds %struct.arg_t, %struct.arg_t* %defn, i64 %idxprom17, i32 0
  %8 = load i8*, i8** %name, align 8, !tbaa !917
  %fputs = tail call i32 @fputs(i8* %8, %struct._IO_FILE* %fp)
  %9 = load i8*, i8** %name, align 8, !tbaa !917
  %call23 = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %9) #37
  %conv = trunc i64 %call23 to i32
  %cmp2510 = icmp sgt i32 %and, %conv
  br i1 %cmp2510, label %for.body27, label %for.end31

for.body27:                                       ; preds = %for.body16, %for.body27
  %l.211 = phi i32 [ %add30, %for.body27 ], [ %conv, %for.body16 ]
  %fputc7 = tail call i32 @fputc(i32 9, %struct._IO_FILE* %fp)
  %add30 = add nsw i32 %l.211, 8
  %cmp25 = icmp slt i32 %add30, %and
  br i1 %cmp25, label %for.body27, label %for.end31, !llvm.loop !930

for.end31:                                        ; preds = %for.body27, %for.body16
  %fputc1 = tail call i32 @fputc(i32 9, %struct._IO_FILE* %fp)
  %deflt = getelementptr inbounds %struct.arg_t, %struct.arg_t* %defn, i64 %idxprom17, i32 2
  %10 = load i8*, i8** %deflt, align 8, !tbaa !925
  %tobool.not = icmp eq i8* %10, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %for.end31
  %fputs6 = tail call i32 @fputs(i8* nonnull %10, %struct._IO_FILE* %fp)
  %11 = load i8*, i8** %deflt, align 8, !tbaa !925
  %call42 = tail call i64 @strlen(i8* noundef nonnull dereferenceable(1) %11) #37
  %conv43 = trunc i64 %call42 to i32
  br label %if.end

if.end:                                           ; preds = %for.end31, %if.then
  %l.3 = phi i32 [ %conv43, %if.then ], [ 0, %for.end31 ]
  %cmp4512 = icmp slt i32 %l.3, %and1
  br i1 %cmp4512, label %for.body47, label %for.end51

for.body47:                                       ; preds = %if.end, %for.body47
  %l.413 = phi i32 [ %add50, %for.body47 ], [ %l.3, %if.end ]
  %fputc5 = tail call i32 @fputc(i32 9, %struct._IO_FILE* %fp)
  %add50 = add nsw i32 %l.413, 8
  %cmp45 = icmp slt i32 %add50, %and1
  br i1 %cmp45, label %for.body47, label %for.end51, !llvm.loop !931

for.end51:                                        ; preds = %for.body47, %if.end
  %fputc2 = tail call i32 @fputc(i32 9, %struct._IO_FILE* %fp)
  %doc57 = getelementptr inbounds %struct.arg_t, %struct.arg_t* %defn, i64 %idxprom17, i32 3
  %12 = load i8*, i8** %doc57, align 8, !tbaa !932
  %tobool58.not = icmp eq i8* %12, null
  br i1 %tobool58.not, label %if.end86, label %if.then59

if.then59:                                        ; preds = %for.end51
  %fputs4 = tail call i32 @fputs(i8* nonnull %12, %struct._IO_FILE* %fp)
  br label %if.end86

if.end86:                                         ; preds = %for.end51, %if.then59
  %fputc3 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end89, label %for.body16, !llvm.loop !933

for.end89:                                        ; preds = %if.end86, %for.end11
  %13 = bitcast i32* %call13 to i8*
  tail call void @ckd_free(i8* %13) #34
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  %call91 = tail call i32 @fflush(%struct._IO_FILE* %fp) #36
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define internal fastcc i32 @arg_strlen(%struct.arg_t* nocapture readonly %defn, i32* nocapture %namelen, i32* nocapture %deflen) unnamed_addr #14 {
entry:
  store i32 0, i32* %deflen, align 4, !tbaa !37
  store i32 0, i32* %namelen, align 4, !tbaa !37
  %name37 = getelementptr inbounds %struct.arg_t, %struct.arg_t* %defn, i64 0, i32 0
  %0 = load i8*, i8** %name37, align 8, !tbaa !917
  %tobool.not38 = icmp eq i8* %0, null
  br i1 %tobool.not38, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.inc.for.body_crit_edge
  %1 = phi i32 [ %.pre, %for.inc.for.body_crit_edge ], [ 0, %entry ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.for.body_crit_edge ], [ 0, %entry ]
  %2 = phi i8* [ %5, %for.inc.for.body_crit_edge ], [ %0, %entry ]
  %call = tail call i64 @strlen(i8* noundef nonnull %2) #37
  %conv = trunc i64 %call to i32
  %cmp = icmp slt i32 %1, %conv
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 %conv, i32* %namelen, align 4, !tbaa !37
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %deflt = getelementptr inbounds %struct.arg_t, %struct.arg_t* %defn, i64 %indvars.iv, i32 2
  %3 = load i8*, i8** %deflt, align 8, !tbaa !925
  %tobool7.not = icmp eq i8* %3, null
  br i1 %tobool7.not, label %for.inc, label %if.then8

if.then8:                                         ; preds = %if.end
  %call12 = tail call i64 @strlen(i8* noundef nonnull %3) #37
  %conv13 = trunc i64 %call12 to i32
  %4 = load i32, i32* %deflen, align 4, !tbaa !37
  %cmp14 = icmp slt i32 %4, %conv13
  br i1 %cmp14, label %if.then16, label %for.inc

if.then16:                                        ; preds = %if.then8
  store i32 %conv13, i32* %deflen, align 4, !tbaa !37
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then16, %if.then8
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %name = getelementptr inbounds %struct.arg_t, %struct.arg_t* %defn, i64 %indvars.iv.next, i32 0
  %5 = load i8*, i8** %name, align 8, !tbaa !917
  %tobool.not = icmp eq i8* %5, null
  br i1 %tobool.not, label %for.end.loopexit, label %for.inc.for.body_crit_edge, !llvm.loop !934

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  %.pre = load i32, i32* %namelen, align 4, !tbaa !37
  br label %for.body

for.end.loopexit:                                 ; preds = %for.inc
  %6 = trunc i64 %indvars.iv.next to i32
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %entry
  %i.0.lcssa = phi i32 [ 0, %entry ], [ %6, %for.end.loopexit ]
  ret i32 %i.0.lcssa
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc i32* @arg_sort(%struct.arg_t* %defn, i32 %n) unnamed_addr #0 {
entry:
  %conv = sext i32 %n to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1007, i64 0, i64 0), i32 145) #34
  %0 = bitcast i8* %call to i32*
  %cmp12 = icmp sgt i32 %n, 0
  br i1 %cmp12, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %n to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %indvars.iv
  %1 = trunc i64 %indvars.iv to i32
  store i32 %1, i32* %arrayidx, align 4, !tbaa !37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !935

for.end:                                          ; preds = %for.body, %entry
  store %struct.arg_t* %defn, %struct.arg_t** @tmp_defn, align 8, !tbaa !74
  tail call void @qsort(i8* %call, i64 %conv, i64 4, i32 (i8*, i8*)* nonnull @cmp_name) #34
  store %struct.arg_t* null, %struct.arg_t** @tmp_defn, align 8, !tbaa !74
  ret i32* %0
}

; Function Attrs: nofree nounwind
declare noundef i32 @fputs(i8* nocapture noundef readonly, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #7

; Function Attrs: noinline nounwind optsize uwtable
define internal i32 @cmp_name(i8* nocapture readonly %a, i8* nocapture readonly %b) #0 {
entry:
  %0 = load %struct.arg_t*, %struct.arg_t** @tmp_defn, align 8, !tbaa !74
  %1 = bitcast i8* %a to i32*
  %2 = load i32, i32* %1, align 4, !tbaa !37
  %idxprom = sext i32 %2 to i64
  %name = getelementptr inbounds %struct.arg_t, %struct.arg_t* %0, i64 %idxprom, i32 0
  %3 = load i8*, i8** %name, align 8, !tbaa !917
  %4 = bitcast i8* %b to i32*
  %5 = load i32, i32* %4, align 4, !tbaa !37
  %idxprom1 = sext i32 %5 to i64
  %name3 = getelementptr inbounds %struct.arg_t, %struct.arg_t* %0, i64 %idxprom1, i32 0
  %6 = load i8*, i8** %name3, align 8, !tbaa !917
  %call = tail call i32 @strcmp_nocase(i8* %3, i8* %6) #34
  ret i32 %call
}

; Function Attrs: nofree optsize
declare void @qsort(i8* noundef, i64 noundef, i64 noundef, i32 (i8*, i8*)* nocapture noundef) local_unnamed_addr #31

; Function Attrs: noinline nounwind optsize uwtable
define i8* @cmd_ln_access(i8* %name) local_unnamed_addr #0 {
entry:
  %i = alloca i32, align 4
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %1 = load %struct.argval_s*, %struct.argval_s** @argval, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.argval_s* %1, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1007, i64 0, i64 0), i64 373, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1008, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.14.1032, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.hash_table_t*, %struct.hash_table_t** @ht, align 8, !tbaa !74
  %call = call i32 @hash_lookup(%struct.hash_table_t* %2, i8* %name, i32* nonnull %i) #34
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  call void @_E__pr_header(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1007, i64 0, i64 0), i64 376, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1008, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.1014, i64 0, i64 0), i8* %name) #34
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %if.end
  %3 = load %struct.argval_s*, %struct.argval_s** @argval, align 8, !tbaa !74
  %4 = load i32, i32* %i, align 4, !tbaa !37
  %idxprom = sext i32 %4 to i64
  %ptr = getelementptr inbounds %struct.argval_s, %struct.argval_s* %3, i64 %idxprom, i32 1
  %5 = load i8*, i8** %ptr, align 8, !tbaa !922
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret i8* %5
}

; Function Attrs: noinline nounwind optsize uwtable
define void @cmd_ln_free() local_unnamed_addr #0 {
entry:
  %0 = load %struct.hash_table_t*, %struct.hash_table_t** @ht, align 8, !tbaa !74
  tail call void @hash_free(%struct.hash_table_t* %0) #34
  %1 = load i8*, i8** bitcast (%struct.argval_s** @argval to i8**), align 8, !tbaa !74
  tail call void @ckd_free(i8* %1) #34
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @mgau_var_nzvec_floor(%struct.mgau_model_t* nocapture readonly %g, double %floor) local_unnamed_addr #0 {
entry:
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 437, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.1038, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2.1039, i64 0, i64 0)) #34
  %veclen = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 2
  %0 = load i32, i32* %veclen, align 8, !tbaa !382
  %n_mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 0
  %mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %conv18 = fptrunc double %floor to float
  %cmp1152 = icmp slt i32 %0, 1
  %1 = load i32, i32* %n_mgau, align 8, !tbaa !92
  %cmp60 = icmp sgt i32 %1, 0
  br i1 %cmp60, label %for.cond1.preheader.preheader, label %for.end28

for.cond1.preheader.preheader:                    ; preds = %entry
  %.pre = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %wide.trip.count = zext i32 %0 to i64
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.preheader, %for.inc26
  %2 = phi i32 [ %1, %for.cond1.preheader.preheader ], [ %12, %for.inc26 ]
  %3 = phi %struct.mgau_t* [ %.pre, %for.cond1.preheader.preheader ], [ %13, %for.inc26 ]
  %indvars.iv66 = phi i64 [ 0, %for.cond1.preheader.preheader ], [ %indvars.iv.next67, %for.inc26 ]
  %n.061 = phi i32 [ 0, %for.cond1.preheader.preheader ], [ %n.1.lcssa, %for.inc26 ]
  %n_comp55 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %3, i64 %indvars.iv66, i32 0
  %4 = load i32, i32* %n_comp55, align 8, !tbaa !285
  %cmp256 = icmp sgt i32 %4, 0
  br i1 %cmp256, label %for.body3, label %for.inc26

for.body3:                                        ; preds = %for.cond1.preheader, %for.inc23
  %indvars.iv64 = phi i64 [ %indvars.iv.next65, %for.inc23 ], [ 0, %for.cond1.preheader ]
  %5 = phi %struct.mgau_t* [ %9, %for.inc23 ], [ %3, %for.cond1.preheader ]
  %n.157 = phi i32 [ %n.4, %for.inc23 ], [ %n.061, %for.cond1.preheader ]
  %var7 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %5, i64 %indvars.iv66, i32 2
  %6 = load float**, float*** %var7, align 8, !tbaa !936
  %arrayidx9 = getelementptr inbounds float*, float** %6, i64 %indvars.iv64
  %7 = load float*, float** %arrayidx9, align 8, !tbaa !74
  %call = tail call i32 @vector_is_zero(float* %7, i32 %0) #34
  %tobool.not = icmp ne i32 %call, 0
  %brmerge = select i1 %tobool.not, i1 true, i1 %cmp1152
  br i1 %brmerge, label %for.inc23, label %for.body12

for.body12:                                       ; preds = %for.body3, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body3 ]
  %n.254 = phi i32 [ %n.3, %for.inc ], [ %n.157, %for.body3 ]
  %arrayidx14 = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %8 = load float, float* %arrayidx14, align 4, !tbaa !4
  %conv = fpext float %8 to double
  %cmp15 = fcmp olt double %conv, %floor
  br i1 %cmp15, label %if.then17, label %for.inc

if.then17:                                        ; preds = %for.body12
  store float %conv18, float* %arrayidx14, align 4, !tbaa !4
  %inc = add nsw i32 %n.254, 1
  br label %for.inc

for.inc:                                          ; preds = %for.body12, %if.then17
  %n.3 = phi i32 [ %inc, %if.then17 ], [ %n.254, %for.body12 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.inc23, label %for.body12, !llvm.loop !937

for.inc23:                                        ; preds = %for.inc, %for.body3
  %n.4 = phi i32 [ %n.157, %for.body3 ], [ %n.3, %for.inc ]
  %indvars.iv.next65 = add nuw nsw i64 %indvars.iv64, 1
  %9 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %n_comp = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %9, i64 %indvars.iv66, i32 0
  %10 = load i32, i32* %n_comp, align 8, !tbaa !285
  %11 = sext i32 %10 to i64
  %cmp2 = icmp slt i64 %indvars.iv.next65, %11
  br i1 %cmp2, label %for.body3, label %for.inc26.loopexit, !llvm.loop !938

for.inc26.loopexit:                               ; preds = %for.inc23
  %.pre68 = load i32, i32* %n_mgau, align 8, !tbaa !92
  br label %for.inc26

for.inc26:                                        ; preds = %for.inc26.loopexit, %for.cond1.preheader
  %12 = phi i32 [ %2, %for.cond1.preheader ], [ %.pre68, %for.inc26.loopexit ]
  %13 = phi %struct.mgau_t* [ %3, %for.cond1.preheader ], [ %9, %for.inc26.loopexit ]
  %n.1.lcssa = phi i32 [ %n.061, %for.cond1.preheader ], [ %n.4, %for.inc26.loopexit ]
  %indvars.iv.next67 = add nuw nsw i64 %indvars.iv66, 1
  %14 = sext i32 %12 to i64
  %cmp = icmp slt i64 %indvars.iv.next67, %14
  br i1 %cmp, label %for.cond1.preheader, label %for.end28, !llvm.loop !939

for.end28:                                        ; preds = %for.inc26, %entry
  %n.0.lcssa = phi i32 [ 0, %entry ], [ %n.1.lcssa, %for.inc26 ]
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 457, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.1038, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3.1040, i64 0, i64 0), i32 %n.0.lcssa) #34
  ret i32 %n.0.lcssa
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.mgau_model_t* @mgau_init(i8* %meanfile, i8* %varfile, double %varfloor, i8* %mixwfile, double %mixwfloor, i32 %precomp, i8* nocapture readonly %senmgau) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 48, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i32 509) #34
  %0 = bitcast i8* %call to %struct.mgau_model_t*
  %call1 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %senmgau, i8* noundef nonnull dereferenceable(7) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.1043, i64 0, i64 0)) #37
  %cmp = icmp eq i32 %call1, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %gau_type = getelementptr inbounds i8, i8* %call, i64 40
  %1 = bitcast i8* %gau_type to i32*
  store i32 10001, i32* %1, align 8, !tbaa !940
  br label %if.end7

if.else:                                          ; preds = %entry
  %call2 = tail call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %senmgau, i8* noundef nonnull dereferenceable(7) getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5.1044, i64 0, i64 0)) #37
  %cmp3 = icmp eq i32 %call2, 0
  br i1 %cmp3, label %if.then4, label %if.else6

if.then4:                                         ; preds = %if.else
  %gau_type5 = getelementptr inbounds i8, i8* %call, i64 40
  %2 = bitcast i8* %gau_type5 to i32*
  store i32 10002, i32* %2, align 8, !tbaa !940
  br label %if.end7

if.else6:                                         ; preds = %if.else
  tail call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 516, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7.1046, i64 0, i64 0)) #34
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.else6, %if.then
  tail call fastcc void @mgau_file_read(%struct.mgau_model_t* %0, i8* %meanfile, i32 1) #36
  tail call fastcc void @mgau_file_read(%struct.mgau_model_t* %0, i8* %varfile, i32 2) #36
  tail call fastcc void @mgau_mixw_read(%struct.mgau_model_t* %0, i8* %mixwfile, double %mixwfloor) #36
  tail call fastcc void @mgau_uninit_compact(%struct.mgau_model_t* %0) #36
  %cmp11 = fcmp ogt double %varfloor, 0.000000e+00
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end7
  tail call fastcc void @mgau_var_floor(%struct.mgau_model_t* %0, double %varfloor) #36
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.end7
  %tobool.not = icmp eq i32 %precomp, 0
  br i1 %tobool.not, label %if.end16, label %if.then14

if.then14:                                        ; preds = %if.end13
  tail call fastcc void @mgau_precomp(%struct.mgau_model_t* %0) #36
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.end13
  %call17 = tail call double @logs3_to_log(i32 -939524096) #34
  %distfloor = getelementptr inbounds i8, i8* %call, i64 24
  %3 = bitcast i8* %distfloor to double*
  store double %call17, double* %3, align 8, !tbaa !941
  ret %struct.mgau_model_t* %0
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @mgau_file_read(%struct.mgau_model_t* nocapture %g, i8* %file_name, i32 %type) unnamed_addr #0 {
entry:
  %tmp = alloca i8, align 1
  %n = alloca i32, align 4
  %n_mgau = alloca i32, align 4
  %n_feat = alloca i32, align 4
  %n_density = alloca i32, align 4
  %byteswap = alloca i32, align 4
  %argname = alloca i8**, align 8
  %argval = alloca i8**, align 8
  %chksum = alloca i32, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %tmp) #38
  %0 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %1 = bitcast i32* %n_mgau to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #38
  %2 = bitcast i32* %n_feat to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #38
  %3 = bitcast i32* %n_density to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #38
  %4 = bitcast i32* %byteswap to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #38
  %5 = bitcast i8*** %argname to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #38
  %6 = bitcast i8*** %argval to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #38
  %7 = bitcast i32* %chksum to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #38
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 96, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.1038, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.1070, i64 0, i64 0), i8* %file_name) #34
  %call = tail call %struct._IO_FILE* @_myfopen(i8* %file_name, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.1053, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i32 98) #34
  %call1 = call i32 @bio_readhdr(%struct._IO_FILE* %call, i8*** nonnull %argname, i8*** nonnull %argval, i32* nonnull %byteswap) #34
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 102, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10.1054, i64 0, i64 0), i8* %file_name) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load i8**, i8*** %argname, align 8, !tbaa !74
  %9 = load i8*, i8** %8, align 8, !tbaa !74
  %tobool.not32 = icmp eq i8* %9, null
  br i1 %tobool.not32, label %for.end, label %for.body

for.body:                                         ; preds = %if.end, %for.inc
  %10 = phi i8** [ %16, %for.inc ], [ %8, %if.end ]
  %indvars.iv55 = phi i64 [ %indvars.iv.next56, %for.inc ], [ 0, %if.end ]
  %11 = phi i8* [ %17, %for.inc ], [ %9, %if.end ]
  %chksum_present.033 = phi i32 [ %chksum_present.1, %for.inc ], [ 0, %if.end ]
  %call4 = call i32 @strcmp(i8* noundef nonnull %11, i8* noundef nonnull dereferenceable(8) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.1055, i64 0, i64 0)) #37
  %cmp5 = icmp eq i32 %call4, 0
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %for.body
  %12 = load i8**, i8*** %argval, align 8, !tbaa !74
  %arrayidx8 = getelementptr inbounds i8*, i8** %12, i64 %indvars.iv55
  %13 = load i8*, i8** %arrayidx8, align 8, !tbaa !74
  %call9 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %13, i8* noundef nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.1056, i64 0, i64 0)) #37
  %cmp10.not = icmp eq i32 %call9, 0
  br i1 %cmp10.not, label %for.inc, label %if.then11

if.then11:                                        ; preds = %if.then6
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 109, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13.1057, i64 0, i64 0)) #34
  %14 = load i8**, i8*** %argval, align 8, !tbaa !74
  %arrayidx13 = getelementptr inbounds i8*, i8** %14, i64 %indvars.iv55
  %15 = load i8*, i8** %arrayidx13, align 8, !tbaa !74
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14.1058, i64 0, i64 0), i8* %file_name, i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.1056, i64 0, i64 0)) #34
  %.pre = load i8**, i8*** %argname, align 8, !tbaa !74
  br label %for.inc

if.else:                                          ; preds = %for.body
  %call17 = call i32 @strcmp(i8* noundef nonnull %11, i8* noundef nonnull dereferenceable(8) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15.1059, i64 0, i64 0)) #37
  %cmp18 = icmp eq i32 %call17, 0
  %spec.select = select i1 %cmp18, i32 1, i32 %chksum_present.033
  br label %for.inc

for.inc:                                          ; preds = %if.else, %if.then11, %if.then6
  %16 = phi i8** [ %.pre, %if.then11 ], [ %10, %if.then6 ], [ %10, %if.else ]
  %chksum_present.1 = phi i32 [ %chksum_present.033, %if.then11 ], [ %chksum_present.033, %if.then6 ], [ %spec.select, %if.else ]
  %indvars.iv.next56 = add nuw i64 %indvars.iv55, 1
  %arrayidx = getelementptr inbounds i8*, i8** %16, i64 %indvars.iv.next56
  %17 = load i8*, i8** %arrayidx, align 8, !tbaa !74
  %tobool.not = icmp eq i8* %17, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !942

for.end:                                          ; preds = %for.inc, %if.end
  %chksum_present.0.lcssa = phi i32 [ 0, %if.end ], [ %chksum_present.1, %for.inc ]
  %.lcssa5 = phi i8** [ %8, %if.end ], [ %16, %for.inc ]
  %18 = load i8**, i8*** %argval, align 8, !tbaa !74
  call void @bio_hdrarg_free(i8** nonnull %.lcssa5, i8** %18) #34
  store i8** null, i8*** %argval, align 8, !tbaa !74
  store i8** null, i8*** %argname, align 8, !tbaa !74
  store i32 0, i32* %chksum, align 4, !tbaa !37
  %19 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call22 = call i32 @bio_fread(i8* nonnull %1, i32 4, i32 1, %struct._IO_FILE* %call, i32 %19, i32* nonnull %chksum) #34
  %cmp23.not = icmp eq i32 %call22, 1
  br i1 %cmp23.not, label %if.end25, label %if.then24

if.then24:                                        ; preds = %for.end
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 122, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.1071, i64 0, i64 0), i8* %file_name) #34
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %for.end
  %20 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %cmp26 = icmp sgt i32 %20, 32765
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.end25
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 124, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  %21 = load i32, i32* %n_mgau, align 4, !tbaa !37
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.17.1072, i64 0, i64 0), i8* %file_name, i32 %21, i32 32766) #34
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %if.end25
  %22 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call29 = call i32 @bio_fread(i8* nonnull %2, i32 4, i32 1, %struct._IO_FILE* %call, i32 %22, i32* nonnull %chksum) #34
  %cmp30.not = icmp eq i32 %call29, 1
  br i1 %cmp30.not, label %if.end32, label %if.then31

if.then31:                                        ; preds = %if.end28
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 130, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18.1073, i64 0, i64 0), i8* %file_name) #34
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %if.end28
  %gau_type = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 7
  %23 = load i32, i32* %gau_type, align 8, !tbaa !940
  %cmp33 = icmp eq i32 %23, 10001
  br i1 %cmp33, label %if.then34, label %if.else38

if.then34:                                        ; preds = %if.end32
  %24 = load i32, i32* %n_feat, align 4, !tbaa !37
  %cmp35.not = icmp eq i32 %24, 1
  br i1 %cmp35.not, label %if.end46, label %if.then36

if.then36:                                        ; preds = %if.then34
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 134, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  %25 = load i32, i32* %n_feat, align 4, !tbaa !37
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.19.1061, i64 0, i64 0), i32 %25) #34
  br label %if.end46

if.else38:                                        ; preds = %if.end32
  %cmp40 = icmp eq i32 %23, 10002
  %26 = load i32, i32* %n_feat, align 4
  %cmp42 = icmp ne i32 %26, 4
  %or.cond = select i1 %cmp40, i1 %cmp42, i1 false
  br i1 %or.cond, label %if.then43, label %if.end46

if.then43:                                        ; preds = %if.else38
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 137, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  %27 = load i32, i32* %n_feat, align 4, !tbaa !37
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.1074, i64 0, i64 0), i32 %27) #34
  br label %if.end46

if.end46:                                         ; preds = %if.else38, %if.then43, %if.then34, %if.then36
  %28 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call47 = call i32 @bio_fread(i8* nonnull %3, i32 4, i32 1, %struct._IO_FILE* %call, i32 %28, i32* nonnull %chksum) #34
  %cmp48.not = icmp eq i32 %call47, 1
  br i1 %cmp48.not, label %if.end50, label %if.then49

if.then49:                                        ; preds = %if.end46
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 142, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21.1075, i64 0, i64 0), i8* %file_name) #34
  br label %if.end50

if.end50:                                         ; preds = %if.then49, %if.end46
  %29 = load i32, i32* %n_feat, align 4, !tbaa !37
  %conv = sext i32 %29 to i64
  %call51 = call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i32 146) #34
  %30 = bitcast i8* %call51 to i32*
  %31 = load i32, i32* %n_feat, align 4, !tbaa !37
  %32 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call52 = call i32 @bio_fread(i8* %call51, i32 4, i32 %31, %struct._IO_FILE* %call, i32 %32, i32* nonnull %chksum) #34
  %33 = load i32, i32* %n_feat, align 4, !tbaa !37
  %cmp53.not = icmp eq i32 %call52, %33
  br i1 %cmp53.not, label %if.end56, label %if.then55

if.then55:                                        ; preds = %if.end50
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 149, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22.1076, i64 0, i64 0), i8* %file_name) #34
  %.pre57 = load i32, i32* %n_feat, align 4, !tbaa !37
  br label %if.end56

if.end56:                                         ; preds = %if.then55, %if.end50
  %34 = phi i32 [ %.pre57, %if.then55 ], [ %call52, %if.end50 ]
  %cmp5828 = icmp sgt i32 %34, 0
  br i1 %cmp5828, label %for.body60.preheader, label %for.end65

for.body60.preheader:                             ; preds = %if.end56
  %wide.trip.count53 = zext i32 %34 to i64
  br label %for.body60

for.body60:                                       ; preds = %for.body60.preheader, %for.body60
  %indvars.iv51 = phi i64 [ 0, %for.body60.preheader ], [ %indvars.iv.next52, %for.body60 ]
  %blk.029 = phi i32 [ 0, %for.body60.preheader ], [ %add, %for.body60 ]
  %arrayidx62 = getelementptr inbounds i32, i32* %30, i64 %indvars.iv51
  %35 = load i32, i32* %arrayidx62, align 4, !tbaa !37
  %add = add nsw i32 %35, %blk.029
  %indvars.iv.next52 = add nuw nsw i64 %indvars.iv51, 1
  %exitcond54.not = icmp eq i64 %indvars.iv.next52, %wide.trip.count53
  br i1 %exitcond54.not, label %for.end65, label %for.body60, !llvm.loop !943

for.end65:                                        ; preds = %for.body60, %if.end56
  %blk.0.lcssa = phi i32 [ 0, %if.end56 ], [ %add, %for.body60 ]
  %36 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call66 = call i32 @bio_fread(i8* nonnull %0, i32 4, i32 1, %struct._IO_FILE* %call, i32 %36, i32* nonnull %chksum) #34
  %cmp67.not = icmp eq i32 %call66, 1
  br i1 %cmp67.not, label %if.end70, label %if.then69

if.then69:                                        ; preds = %for.end65
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 159, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.23.1077, i64 0, i64 0), i8* %file_name) #34
  br label %if.end70

if.end70:                                         ; preds = %if.then69, %for.end65
  %37 = load i32, i32* %n, align 4, !tbaa !37
  %38 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %39 = load i32, i32* %n_density, align 4, !tbaa !37
  %mul = mul i32 %38, %blk.0.lcssa
  %mul71 = mul i32 %mul, %39
  %cmp72.not = icmp eq i32 %37, %mul71
  br i1 %cmp72.not, label %if.end75, label %if.then74

if.then74:                                        ; preds = %if.end70
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 162, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  %40 = load i32, i32* %n, align 4, !tbaa !37
  %41 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %42 = load i32, i32* %n_density, align 4, !tbaa !37
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.24.1078, i64 0, i64 0), i8* %file_name, i32 %40, i32 %41, i32 %42, i32 %blk.0.lcssa) #34
  br label %if.end75

if.end75:                                         ; preds = %if.then74, %if.end70
  %43 = load i32, i32* %gau_type, align 8, !tbaa !940
  %cmp77 = icmp eq i32 %43, 10002
  br i1 %cmp77, label %if.then79, label %if.end80

if.then79:                                        ; preds = %if.end75
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 167, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.25.1079, i64 0, i64 0)) #34
  br label %if.end80

if.end80:                                         ; preds = %if.then79, %if.end75
  %cmp81 = icmp eq i32 %type, 1
  br i1 %cmp81, label %if.then83, label %if.else125

if.then83:                                        ; preds = %if.end80
  %44 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %n_mgau84 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 0
  store i32 %44, i32* %n_mgau84, align 8, !tbaa !92
  %45 = load i32, i32* %n_density, align 4, !tbaa !37
  %max_comp = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 1
  store i32 %45, i32* %max_comp, align 4, !tbaa !254
  %veclen85 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 2
  store i32 %blk.0.lcssa, i32* %veclen85, align 8, !tbaa !382
  %conv86 = sext i32 %44 to i64
  %call87 = call i8* @__ckd_calloc__(i64 %conv86, i64 40, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i32 175) #34
  %mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %46 = bitcast %struct.mgau_t** %mgau to i8**
  store i8* %call87, i8** %46, align 8, !tbaa !284
  %47 = load i32, i32* %n, align 4, !tbaa !37
  %conv88 = sext i32 %47 to i64
  %call89 = call i8* @__ckd_calloc__(i64 %conv88, i64 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i32 177) #34
  %48 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %49 = load i32, i32* %n_density, align 4, !tbaa !37
  %mul90 = mul nsw i32 %49, %48
  %conv91 = sext i32 %mul90 to i64
  %call92 = call i8* @__ckd_calloc__(i64 %conv91, i64 8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i32 178) #34
  %idx.ext = sext i32 %blk.0.lcssa to i64
  %50 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %cmp9410 = icmp sgt i32 %50, 0
  br i1 %cmp9410, label %for.body96.preheader, label %for.end120

for.body96.preheader:                             ; preds = %if.then83
  %51 = bitcast i8* %call92 to float**
  %52 = bitcast i8* %call89 to float*
  %.pre65 = load i32, i32* %n_density, align 4, !tbaa !37
  br label %for.body96

for.body96:                                       ; preds = %for.body96.preheader, %for.end115
  %53 = phi i32 [ %.pre65, %for.body96.preheader ], [ %55, %for.end115 ]
  %indvars.iv39 = phi i64 [ 0, %for.body96.preheader ], [ %indvars.iv.next40, %for.end115 ]
  %pbuf.012 = phi float** [ %51, %for.body96.preheader ], [ %add.ptr117, %for.end115 ]
  %buf.011 = phi float* [ %52, %for.body96.preheader ], [ %buf.1.lcssa, %for.end115 ]
  %54 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %n_comp = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %54, i64 %indvars.iv39, i32 0
  store i32 %53, i32* %n_comp, align 8, !tbaa !285
  %mean = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %54, i64 %indvars.iv39, i32 1
  store float** %pbuf.012, float*** %mean, align 8, !tbaa !944
  %55 = load i32, i32* %n_density, align 4, !tbaa !37
  %cmp1046 = icmp sgt i32 %55, 0
  br i1 %cmp1046, label %for.body106.preheader, label %for.end115

for.body106.preheader:                            ; preds = %for.body96
  %wide.trip.count = zext i32 %55 to i64
  store float* %buf.011, float** %pbuf.012, align 8, !tbaa !74
  %add.ptr73 = getelementptr inbounds float, float* %buf.011, i64 %idx.ext
  %exitcond.not74 = icmp eq i32 %55, 1
  br i1 %exitcond.not74, label %for.end115, label %for.body106.for.body106_crit_edge, !llvm.loop !945

for.body106.for.body106_crit_edge:                ; preds = %for.body106.preheader, %for.body106.for.body106_crit_edge
  %indvars.iv.next76 = phi i64 [ %indvars.iv.next, %for.body106.for.body106_crit_edge ], [ 1, %for.body106.preheader ]
  %add.ptr75 = phi float* [ %add.ptr, %for.body106.for.body106_crit_edge ], [ %add.ptr73, %for.body106.preheader ]
  %.pre66 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %mean110.phi.trans.insert = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %.pre66, i64 %indvars.iv39, i32 1
  %.pre67 = load float**, float*** %mean110.phi.trans.insert, align 8, !tbaa !944
  %arrayidx112 = getelementptr inbounds float*, float** %.pre67, i64 %indvars.iv.next76
  store float* %add.ptr75, float** %arrayidx112, align 8, !tbaa !74
  %add.ptr = getelementptr inbounds float, float* %add.ptr75, i64 %idx.ext
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next76, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end115, label %for.body106.for.body106_crit_edge, !llvm.loop !945

for.end115:                                       ; preds = %for.body106.for.body106_crit_edge, %for.body106.preheader, %for.body96
  %buf.1.lcssa = phi float* [ %buf.011, %for.body96 ], [ %add.ptr73, %for.body106.preheader ], [ %add.ptr, %for.body106.for.body106_crit_edge ]
  %idx.ext116 = sext i32 %55 to i64
  %add.ptr117 = getelementptr inbounds float*, float** %pbuf.012, i64 %idx.ext116
  %indvars.iv.next40 = add nuw nsw i64 %indvars.iv39, 1
  %56 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %57 = sext i32 %56 to i64
  %cmp94 = icmp slt i64 %indvars.iv.next40, %57
  br i1 %cmp94, label %for.body96, label %for.end120, !llvm.loop !946

for.end120:                                       ; preds = %for.end115, %if.then83
  %58 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %mean123 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %58, i64 0, i32 1
  br label %if.end207

if.else125:                                       ; preds = %if.end80
  %n_mgau126 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 0
  %59 = load i32, i32* %n_mgau126, align 8, !tbaa !92
  %60 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %cmp127.not = icmp eq i32 %59, %60
  br i1 %cmp127.not, label %if.end131, label %if.then129

if.then129:                                       ; preds = %if.else125
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 198, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  %61 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %62 = load i32, i32* %n_mgau126, align 8, !tbaa !92
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.26.1080, i64 0, i64 0), i32 %61, i32 %62) #34
  br label %if.end131

if.end131:                                        ; preds = %if.then129, %if.else125
  %max_comp132 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 1
  %63 = load i32, i32* %max_comp132, align 4, !tbaa !254
  %64 = load i32, i32* %n_density, align 4, !tbaa !37
  %cmp133.not = icmp eq i32 %63, %64
  br i1 %cmp133.not, label %if.end137, label %if.then135

if.then135:                                       ; preds = %if.end131
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 200, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  %65 = load i32, i32* %n_density, align 4, !tbaa !37
  %66 = load i32, i32* %max_comp132, align 4, !tbaa !254
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.27.1081, i64 0, i64 0), i32 %65, i32 %66) #34
  br label %if.end137

if.end137:                                        ; preds = %if.then135, %if.end131
  %veclen138 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 2
  %67 = load i32, i32* %veclen138, align 8, !tbaa !382
  %cmp139.not = icmp eq i32 %67, %blk.0.lcssa
  br i1 %cmp139.not, label %if.end143, label %if.then141

if.then141:                                       ; preds = %if.end137
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 202, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  %68 = load i32, i32* %veclen138, align 8, !tbaa !382
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.28.1082, i64 0, i64 0), i32 %blk.0.lcssa, i32 %68) #34
  br label %if.end143

if.end143:                                        ; preds = %if.then141, %if.end137
  %69 = load i32, i32* %n, align 4, !tbaa !37
  %conv144 = sext i32 %69 to i64
  %call145 = call i8* @__ckd_calloc__(i64 %conv144, i64 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i32 204) #34
  %70 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %71 = load i32, i32* %n_density, align 4, !tbaa !37
  %mul146 = mul nsw i32 %71, %70
  %conv147 = sext i32 %mul146 to i64
  %call148 = call i8* @__ckd_calloc__(i64 %conv147, i64 8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i32 205) #34
  %mgau153 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %idx.ext178 = sext i32 %blk.0.lcssa to i64
  %72 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %cmp15022 = icmp sgt i32 %72, 0
  br i1 %cmp15022, label %for.body152.preheader, label %if.end143.for.end187_crit_edge

if.end143.for.end187_crit_edge:                   ; preds = %if.end143
  %.pre63 = load i32, i32* %n_density, align 4, !tbaa !37
  br label %for.end187

for.body152.preheader:                            ; preds = %if.end143
  %73 = bitcast i8* %call148 to float**
  %74 = bitcast i8* %call145 to float*
  %.pre58 = load i32, i32* %n_density, align 4, !tbaa !37
  br label %for.body152

for.body152:                                      ; preds = %for.body152.preheader, %for.end182
  %75 = phi i32 [ %.pre58, %for.body152.preheader ], [ %82, %for.end182 ]
  %indvars.iv49 = phi i64 [ 0, %for.body152.preheader ], [ %indvars.iv.next50, %for.end182 ]
  %pbuf.124 = phi float** [ %73, %for.body152.preheader ], [ %add.ptr184, %for.end182 ]
  %buf.223 = phi float* [ %74, %for.body152.preheader ], [ %buf.3.lcssa, %for.end182 ]
  %76 = load %struct.mgau_t*, %struct.mgau_t** %mgau153, align 8, !tbaa !284
  %n_comp156 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %76, i64 %indvars.iv49, i32 0
  %77 = load i32, i32* %n_comp156, align 8, !tbaa !285
  %cmp157.not = icmp eq i32 %77, %75
  br i1 %cmp157.not, label %if.end164, label %if.then159

if.then159:                                       ; preds = %for.body152
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 210, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  %78 = load i32, i32* %n_density, align 4, !tbaa !37
  %79 = load %struct.mgau_t*, %struct.mgau_t** %mgau153, align 8, !tbaa !284
  %n_comp163 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %79, i64 %indvars.iv49, i32 0
  %80 = load i32, i32* %n_comp163, align 8, !tbaa !285
  %81 = trunc i64 %indvars.iv49 to i32
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.29.1083, i64 0, i64 0), i32 %81, i32 %78, i32 %80) #34
  %.pre59 = load %struct.mgau_t*, %struct.mgau_t** %mgau153, align 8, !tbaa !284
  %.pre60 = load i32, i32* %n_density, align 4, !tbaa !37
  br label %if.end164

if.end164:                                        ; preds = %if.then159, %for.body152
  %82 = phi i32 [ %.pre60, %if.then159 ], [ %75, %for.body152 ]
  %83 = phi %struct.mgau_t* [ %.pre59, %if.then159 ], [ %76, %for.body152 ]
  %var = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %83, i64 %indvars.iv49, i32 2
  store float** %pbuf.124, float*** %var, align 8, !tbaa !936
  %cmp16917 = icmp sgt i32 %82, 0
  br i1 %cmp16917, label %for.body171.preheader, label %for.end182

for.body171.preheader:                            ; preds = %if.end164
  %wide.trip.count47 = zext i32 %82 to i64
  store float* %buf.223, float** %pbuf.124, align 8, !tbaa !74
  %add.ptr17978 = getelementptr inbounds float, float* %buf.223, i64 %idx.ext178
  %exitcond48.not79 = icmp eq i32 %82, 1
  br i1 %exitcond48.not79, label %for.end182, label %for.body171.for.body171_crit_edge, !llvm.loop !947

for.body171.for.body171_crit_edge:                ; preds = %for.body171.preheader, %for.body171.for.body171_crit_edge
  %indvars.iv.next4681 = phi i64 [ %indvars.iv.next46, %for.body171.for.body171_crit_edge ], [ 1, %for.body171.preheader ]
  %add.ptr17980 = phi float* [ %add.ptr179, %for.body171.for.body171_crit_edge ], [ %add.ptr17978, %for.body171.preheader ]
  %.pre61 = load %struct.mgau_t*, %struct.mgau_t** %mgau153, align 8, !tbaa !284
  %var175.phi.trans.insert = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %.pre61, i64 %indvars.iv49, i32 2
  %.pre62 = load float**, float*** %var175.phi.trans.insert, align 8, !tbaa !936
  %arrayidx177 = getelementptr inbounds float*, float** %.pre62, i64 %indvars.iv.next4681
  store float* %add.ptr17980, float** %arrayidx177, align 8, !tbaa !74
  %add.ptr179 = getelementptr inbounds float, float* %add.ptr17980, i64 %idx.ext178
  %indvars.iv.next46 = add nuw nsw i64 %indvars.iv.next4681, 1
  %exitcond48.not = icmp eq i64 %indvars.iv.next46, %wide.trip.count47
  br i1 %exitcond48.not, label %for.end182, label %for.body171.for.body171_crit_edge, !llvm.loop !947

for.end182:                                       ; preds = %for.body171.for.body171_crit_edge, %for.body171.preheader, %if.end164
  %buf.3.lcssa = phi float* [ %buf.223, %if.end164 ], [ %add.ptr17978, %for.body171.preheader ], [ %add.ptr179, %for.body171.for.body171_crit_edge ]
  %idx.ext183 = sext i32 %82 to i64
  %add.ptr184 = getelementptr inbounds float*, float** %pbuf.124, i64 %idx.ext183
  %indvars.iv.next50 = add nuw nsw i64 %indvars.iv49, 1
  %84 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %85 = sext i32 %84 to i64
  %cmp150 = icmp slt i64 %indvars.iv.next50, %85
  br i1 %cmp150, label %for.body152, label %for.end187, !llvm.loop !948

for.end187:                                       ; preds = %for.end182, %if.end143.for.end187_crit_edge
  %86 = phi i32 [ %.pre63, %if.end143.for.end187_crit_edge ], [ %82, %for.end182 ]
  %.lcssa4 = phi i32 [ %72, %if.end143.for.end187_crit_edge ], [ %84, %for.end182 ]
  %mul188 = mul nsw i32 %86, %.lcssa4
  %conv189 = sext i32 %mul188 to i64
  %call190 = call i8* @__ckd_calloc__(i64 %conv189, i64 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i32 224) #34
  %87 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %88 = load i32, i32* %n_density, align 4
  %idx.ext198 = sext i32 %88 to i64
  %cmp19214 = icmp sgt i32 %87, 0
  br i1 %cmp19214, label %for.body194.lr.ph, label %for.end187.for.end202_crit_edge

for.end187.for.end202_crit_edge:                  ; preds = %for.end187
  %.pre64 = load %struct.mgau_t*, %struct.mgau_t** %mgau153, align 8, !tbaa !284
  br label %for.end202

for.body194.lr.ph:                                ; preds = %for.end187
  %89 = bitcast i8* %call190 to float*
  %90 = load %struct.mgau_t*, %struct.mgau_t** %mgau153, align 8, !tbaa !284
  %wide.trip.count43 = zext i32 %87 to i64
  br label %for.body194

for.body194:                                      ; preds = %for.body194.lr.ph, %for.body194
  %indvars.iv41 = phi i64 [ 0, %for.body194.lr.ph ], [ %indvars.iv.next42, %for.body194 ]
  %buf.415 = phi float* [ %89, %for.body194.lr.ph ], [ %add.ptr199, %for.body194 ]
  %lrd = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %90, i64 %indvars.iv41, i32 3
  store float* %buf.415, float** %lrd, align 8, !tbaa !949
  %add.ptr199 = getelementptr inbounds float, float* %buf.415, i64 %idx.ext198
  %indvars.iv.next42 = add nuw nsw i64 %indvars.iv41, 1
  %exitcond44.not = icmp eq i64 %indvars.iv.next42, %wide.trip.count43
  br i1 %exitcond44.not, label %for.end202, label %for.body194, !llvm.loop !950

for.end202:                                       ; preds = %for.body194, %for.end187.for.end202_crit_edge
  %91 = phi %struct.mgau_t* [ %.pre64, %for.end187.for.end202_crit_edge ], [ %90, %for.body194 ]
  %var205 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %91, i64 0, i32 2
  br label %if.end207

if.end207:                                        ; preds = %for.end202, %for.end120
  %buf.5.in.in = phi float*** [ %mean123, %for.end120 ], [ %var205, %for.end202 ]
  %92 = bitcast float*** %buf.5.in.in to i8***
  %buf.5.in2 = load i8**, i8*** %92, align 8, !tbaa !74
  %buf.51 = load i8*, i8** %buf.5.in2, align 8, !tbaa !74
  %93 = load i32, i32* %n, align 4, !tbaa !37
  %94 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call208 = call i32 @bio_fread(i8* %buf.51, i32 4, i32 %93, %struct._IO_FILE* %call, i32 %94, i32* nonnull %chksum) #34
  %95 = load i32, i32* %n, align 4, !tbaa !37
  %cmp209.not = icmp eq i32 %call208, %95
  br i1 %cmp209.not, label %if.end212, label %if.then211

if.then211:                                       ; preds = %if.end207
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 236, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.30.1084, i64 0, i64 0), i8* %file_name) #34
  br label %if.end212

if.end212:                                        ; preds = %if.then211, %if.end207
  %call213 = call double @log_to_logs3_factor() #34
  %tobool214.not = icmp eq i32 %chksum_present.0.lcssa, 0
  br i1 %tobool214.not, label %if.end216, label %if.then215

if.then215:                                       ; preds = %if.end212
  %96 = load i32, i32* %byteswap, align 4, !tbaa !37
  %97 = load i32, i32* %chksum, align 4, !tbaa !37
  call void @bio_verify_chksum(%struct._IO_FILE* %call, i32 %96, i32 %97) #34
  br label %if.end216

if.end216:                                        ; preds = %if.then215, %if.end212
  %call217 = call i64 @fread(i8* nonnull %tmp, i64 1, i64 1, %struct._IO_FILE* %call) #36
  %cmp218 = icmp eq i64 %call217, 1
  br i1 %cmp218, label %if.then220, label %if.end221

if.then220:                                       ; preds = %if.end216
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 244, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31.1085, i64 0, i64 0), i8* %file_name) #34
  br label %if.end221

if.end221:                                        ; preds = %if.then220, %if.end216
  %call222 = call i32 @fclose(%struct._IO_FILE* %call) #36
  call void @_E__pr_info_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 248, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.1038, i64 0, i64 0)) #34
  %98 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %99 = load i32, i32* %n_density, align 4, !tbaa !37
  %100 = load i32, i32* %n_feat, align 4, !tbaa !37
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.32.1086, i64 0, i64 0), i32 %98, i32 %99, i32 %100, i32 %blk.0.lcssa) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %tmp) #38
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @mgau_mixw_read(%struct.mgau_model_t* nocapture readonly %g, i8* %file_name, double %mixwfloor) unnamed_addr #0 {
entry:
  %argname = alloca i8**, align 8
  %argval = alloca i8**, align 8
  %eofchk = alloca i8, align 1
  %byteswap = alloca i32, align 4
  %chksum = alloca i32, align 4
  %n = alloca i32, align 4
  %n_mgau = alloca i32, align 4
  %n_feat = alloca i32, align 4
  %n_comp = alloca i32, align 4
  %0 = bitcast i8*** %argname to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #38
  %1 = bitcast i8*** %argval to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #38
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %eofchk) #38
  %2 = bitcast i32* %byteswap to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #38
  %3 = bitcast i32* %chksum to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #38
  %4 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #38
  %5 = bitcast i32* %n_mgau to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #38
  %6 = bitcast i32* %n_feat to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #38
  %7 = bitcast i32* %n_comp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #38
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 269, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.1038, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.33.1052, i64 0, i64 0), i8* %file_name) #34
  %call = tail call %struct._IO_FILE* @_myfopen(i8* %file_name, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.1053, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i32 271) #34
  %call1 = call i32 @bio_readhdr(%struct._IO_FILE* %call, i8*** nonnull %argname, i8*** nonnull %argval, i32* nonnull %byteswap) #34
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 275, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10.1054, i64 0, i64 0), i8* %file_name) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load i8**, i8*** %argname, align 8, !tbaa !74
  %9 = load i8*, i8** %8, align 8, !tbaa !74
  %tobool.not14 = icmp eq i8* %9, null
  br i1 %tobool.not14, label %for.end, label %for.body

for.body:                                         ; preds = %if.end, %for.inc
  %10 = phi i8** [ %16, %for.inc ], [ %8, %if.end ]
  %indvars.iv28 = phi i64 [ %indvars.iv.next29, %for.inc ], [ 0, %if.end ]
  %11 = phi i8* [ %17, %for.inc ], [ %9, %if.end ]
  %chksum_present.015 = phi i32 [ %chksum_present.1, %for.inc ], [ 0, %if.end ]
  %call4 = call i32 @strcmp(i8* noundef nonnull %11, i8* noundef nonnull dereferenceable(8) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.1055, i64 0, i64 0)) #37
  %cmp5 = icmp eq i32 %call4, 0
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %for.body
  %12 = load i8**, i8*** %argval, align 8, !tbaa !74
  %arrayidx8 = getelementptr inbounds i8*, i8** %12, i64 %indvars.iv28
  %13 = load i8*, i8** %arrayidx8, align 8, !tbaa !74
  %call9 = call i32 @strcmp(i8* noundef nonnull dereferenceable(1) %13, i8* noundef nonnull dereferenceable(4) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.1056, i64 0, i64 0)) #37
  %cmp10.not = icmp eq i32 %call9, 0
  br i1 %cmp10.not, label %for.inc, label %if.then11

if.then11:                                        ; preds = %if.then6
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 282, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13.1057, i64 0, i64 0)) #34
  %14 = load i8**, i8*** %argval, align 8, !tbaa !74
  %arrayidx13 = getelementptr inbounds i8*, i8** %14, i64 %indvars.iv28
  %15 = load i8*, i8** %arrayidx13, align 8, !tbaa !74
  call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14.1058, i64 0, i64 0), i8* %file_name, i8* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12.1056, i64 0, i64 0)) #34
  %.pre = load i8**, i8*** %argname, align 8, !tbaa !74
  br label %for.inc

if.else:                                          ; preds = %for.body
  %call17 = call i32 @strcmp(i8* noundef nonnull %11, i8* noundef nonnull dereferenceable(8) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15.1059, i64 0, i64 0)) #37
  %cmp18 = icmp eq i32 %call17, 0
  %spec.select = select i1 %cmp18, i32 1, i32 %chksum_present.015
  br label %for.inc

for.inc:                                          ; preds = %if.else, %if.then11, %if.then6
  %16 = phi i8** [ %.pre, %if.then11 ], [ %10, %if.then6 ], [ %10, %if.else ]
  %chksum_present.1 = phi i32 [ %chksum_present.015, %if.then11 ], [ %chksum_present.015, %if.then6 ], [ %spec.select, %if.else ]
  %indvars.iv.next29 = add nuw i64 %indvars.iv28, 1
  %arrayidx = getelementptr inbounds i8*, i8** %16, i64 %indvars.iv.next29
  %17 = load i8*, i8** %arrayidx, align 8, !tbaa !74
  %tobool.not = icmp eq i8* %17, null
  br i1 %tobool.not, label %for.end.loopexit, label %for.body, !llvm.loop !951

for.end.loopexit:                                 ; preds = %for.inc
  %18 = trunc i64 %indvars.iv.next29 to i32
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %if.end
  %chksum_present.0.lcssa = phi i32 [ 0, %if.end ], [ %chksum_present.1, %for.end.loopexit ]
  %i.0.lcssa = phi i32 [ 0, %if.end ], [ %18, %for.end.loopexit ]
  %.lcssa = phi i8** [ %8, %if.end ], [ %16, %for.end.loopexit ]
  %19 = load i8**, i8*** %argval, align 8, !tbaa !74
  call void @bio_hdrarg_free(i8** nonnull %.lcssa, i8** %19) #34
  store i8** null, i8*** %argval, align 8, !tbaa !74
  store i8** null, i8*** %argname, align 8, !tbaa !74
  store i32 0, i32* %chksum, align 4, !tbaa !37
  %20 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call22 = call i32 @bio_fread(i8* nonnull %5, i32 4, i32 1, %struct._IO_FILE* %call, i32 %20, i32* nonnull %chksum) #34
  %cmp23.not = icmp eq i32 %call22, 1
  br i1 %cmp23.not, label %lor.lhs.false, label %if.then32

lor.lhs.false:                                    ; preds = %for.end
  %21 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call24 = call i32 @bio_fread(i8* nonnull %6, i32 4, i32 1, %struct._IO_FILE* %call, i32 %21, i32* nonnull %chksum) #34
  %cmp25.not = icmp eq i32 %call24, 1
  br i1 %cmp25.not, label %lor.lhs.false26, label %if.then32

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %22 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call27 = call i32 @bio_fread(i8* nonnull %7, i32 4, i32 1, %struct._IO_FILE* %call, i32 %22, i32* nonnull %chksum) #34
  %cmp28.not = icmp eq i32 %call27, 1
  br i1 %cmp28.not, label %lor.lhs.false29, label %if.then32

lor.lhs.false29:                                  ; preds = %lor.lhs.false26
  %23 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call30 = call i32 @bio_fread(i8* nonnull %4, i32 4, i32 1, %struct._IO_FILE* %call, i32 %23, i32* nonnull %chksum) #34
  %cmp31.not = icmp eq i32 %call30, 1
  br i1 %cmp31.not, label %if.end33, label %if.then32

if.then32:                                        ; preds = %lor.lhs.false29, %lor.lhs.false26, %lor.lhs.false, %for.end
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 298, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34.1060, i64 0, i64 0), i8* %file_name) #34
  br label %if.end33

if.end33:                                         ; preds = %if.then32, %lor.lhs.false29
  %gau_type = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 7
  %24 = load i32, i32* %gau_type, align 8, !tbaa !940
  switch i32 %24, label %if.else46 [
    i32 10001, label %if.then35
    i32 10002, label %if.then42
  ]

if.then35:                                        ; preds = %if.end33
  %25 = load i32, i32* %n_feat, align 4, !tbaa !37
  %cmp36.not = icmp eq i32 %25, 1
  br i1 %cmp36.not, label %if.end48, label %if.then37

if.then37:                                        ; preds = %if.then35
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 302, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  %26 = load i32, i32* %n_feat, align 4, !tbaa !37
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.19.1061, i64 0, i64 0), i32 %26) #34
  br label %if.end48

if.then42:                                        ; preds = %if.end33
  %27 = load i32, i32* %n_feat, align 4, !tbaa !37
  %cmp43.not = icmp eq i32 %27, 4
  br i1 %cmp43.not, label %if.end48, label %if.then44

if.then44:                                        ; preds = %if.then42
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 305, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  %28 = load i32, i32* %n_feat, align 4, !tbaa !37
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.35.1062, i64 0, i64 0), i32 %28) #34
  br label %if.end48

if.else46:                                        ; preds = %if.end33
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 307, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.36.1063, i64 0, i64 0)) #34
  br label %if.end48

if.end48:                                         ; preds = %if.else46, %if.then44, %if.then42, %if.then35, %if.then37
  %29 = load i32, i32* %n, align 4, !tbaa !37
  %30 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %31 = load i32, i32* %n_comp, align 4, !tbaa !37
  %mul = mul nsw i32 %31, %30
  %cmp49.not = icmp eq i32 %29, %mul
  br i1 %cmp49.not, label %if.end51, label %if.then50

if.then50:                                        ; preds = %if.end48
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 311, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  %32 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %33 = load i32, i32* %n_comp, align 4, !tbaa !37
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.37.1064, i64 0, i64 0), i8* %file_name, i32 %i.0.lcssa, i32 %32, i32 %33) #34
  %.pre30 = load i32, i32* %n_mgau, align 4, !tbaa !37
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.end48
  %34 = phi i32 [ %.pre30, %if.then50 ], [ %30, %if.end48 ]
  %n_mgau52 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 0
  %35 = load i32, i32* %n_mgau52, align 8, !tbaa !92
  %cmp53.not = icmp eq i32 %34, %35
  br i1 %cmp53.not, label %if.end56, label %if.then54

if.then54:                                        ; preds = %if.end51
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 315, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  %36 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %37 = load i32, i32* %n_mgau52, align 8, !tbaa !92
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.38.1065, i64 0, i64 0), i32 %36, i32 %37) #34
  %.pre31 = load i32, i32* %n_mgau, align 4, !tbaa !37
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %if.end51
  %38 = phi i32 [ %.pre31, %if.then54 ], [ %34, %if.end51 ]
  %39 = load i32, i32* %n_comp, align 4, !tbaa !37
  %mul57 = mul nsw i32 %39, %38
  %conv = sext i32 %mul57 to i64
  %call58 = call i8* @__ckd_calloc__(i64 %conv, i64 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i32 318) #34
  %mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %40 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %cmp6010 = icmp sgt i32 %40, 0
  br i1 %cmp6010, label %for.body62.preheader, label %for.end83

for.body62.preheader:                             ; preds = %if.end56
  %41 = bitcast i8* %call58 to i32*
  %.pre32 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  br label %for.body62

for.body62:                                       ; preds = %for.body62.preheader, %if.end73
  %42 = phi i32 [ %40, %for.body62.preheader ], [ %51, %if.end73 ]
  %43 = phi %struct.mgau_t* [ %.pre32, %for.body62.preheader ], [ %52, %if.end73 ]
  %indvars.iv26 = phi i64 [ 0, %for.body62.preheader ], [ %indvars.iv.next27, %if.end73 ]
  %buf.011 = phi i32* [ %41, %for.body62.preheader ], [ %add.ptr, %if.end73 ]
  %44 = load i32, i32* %n_comp, align 4, !tbaa !37
  %n_comp65 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %43, i64 %indvars.iv26, i32 0
  %45 = load i32, i32* %n_comp65, align 8, !tbaa !285
  %cmp66.not = icmp eq i32 %44, %45
  br i1 %cmp66.not, label %if.end73, label %if.then68

if.then68:                                        ; preds = %for.body62
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 321, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  %46 = load i32, i32* %n_comp, align 4, !tbaa !37
  %47 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %n_comp72 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %47, i64 %indvars.iv26, i32 0
  %48 = load i32, i32* %n_comp72, align 8, !tbaa !285
  %49 = trunc i64 %indvars.iv26 to i32
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.39.1066, i64 0, i64 0), i32 %49, i32 %46, i32 %48) #34
  %.pre33 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %.pre34 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %n_comp80.phi.trans.insert = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %.pre33, i64 %indvars.iv26, i32 0
  %.pre37 = load i32, i32* %n_comp80.phi.trans.insert, align 8, !tbaa !285
  br label %if.end73

if.end73:                                         ; preds = %if.then68, %for.body62
  %50 = phi i32 [ %.pre37, %if.then68 ], [ %44, %for.body62 ]
  %51 = phi i32 [ %.pre34, %if.then68 ], [ %42, %for.body62 ]
  %52 = phi %struct.mgau_t* [ %.pre33, %if.then68 ], [ %43, %for.body62 ]
  %mixw = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %52, i64 %indvars.iv26, i32 4
  store i32* %buf.011, i32** %mixw, align 8, !tbaa !308
  %idx.ext = sext i32 %50 to i64
  %add.ptr = getelementptr inbounds i32, i32* %buf.011, i64 %idx.ext
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1
  %53 = sext i32 %51 to i64
  %cmp60 = icmp slt i64 %indvars.iv.next27, %53
  br i1 %cmp60, label %for.body62, label %for.end83, !llvm.loop !952

for.end83:                                        ; preds = %if.end73, %if.end56
  %54 = load i32, i32* %n_comp, align 4, !tbaa !37
  %conv84 = sext i32 %54 to i64
  %call85 = call i8* @__ckd_calloc__(i64 %conv84, i64 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i32 329) #34
  %55 = bitcast i8* %call85 to float*
  %56 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %cmp876 = icmp sgt i32 %56, 0
  br i1 %cmp876, label %for.body89.preheader, label %for.end139

for.body89.preheader:                             ; preds = %for.end83
  %.pre35 = load i32, i32* %n_comp, align 4, !tbaa !37
  br label %for.body89

for.body89:                                       ; preds = %for.body89.preheader, %for.inc137
  %57 = phi i32 [ %.pre35, %for.body89.preheader ], [ %73, %for.inc137 ]
  %indvars.iv24 = phi i64 [ 0, %for.body89.preheader ], [ %indvars.iv.next25, %for.inc137 ]
  %58 = load i32, i32* %byteswap, align 4, !tbaa !37
  %call90 = call i32 @bio_fread(i8* %call85, i32 4, i32 %57, %struct._IO_FILE* %call, i32 %58, i32* nonnull %chksum) #34
  %59 = load i32, i32* %n_comp, align 4, !tbaa !37
  %cmp91.not = icmp eq i32 %call90, %59
  br i1 %cmp91.not, label %if.end94, label %if.then93

if.then93:                                        ; preds = %for.body89
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 335, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.40.1067, i64 0, i64 0), i8* %file_name) #34
  %.pre36 = load i32, i32* %n_comp, align 4, !tbaa !37
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %for.body89
  %60 = phi i32 [ %.pre36, %if.then93 ], [ %call90, %for.body89 ]
  %call95 = call i32 @vector_is_zero(float* %55, i32 %60) #34
  %tobool96.not = icmp eq i32 %call95, 0
  %61 = load i32, i32* %n_comp, align 4, !tbaa !37
  br i1 %tobool96.not, label %if.else112, label %if.then97

if.then97:                                        ; preds = %if.end94
  %cmp1002 = icmp sgt i32 %61, 0
  br i1 %cmp1002, label %for.body102.lr.ph, label %for.inc137

for.body102.lr.ph:                                ; preds = %if.then97
  %62 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %mixw106 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %62, i64 %indvars.iv24, i32 4
  %63 = load i32*, i32** %mixw106, align 8, !tbaa !308
  br label %for.body102

for.body102:                                      ; preds = %for.body102.lr.ph, %for.body102
  %indvars.iv = phi i64 [ 0, %for.body102.lr.ph ], [ %indvars.iv.next, %for.body102 ]
  %arrayidx108 = getelementptr inbounds i32, i32* %63, i64 %indvars.iv
  store i32 -939524096, i32* %arrayidx108, align 4, !tbaa !37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %64 = load i32, i32* %n_comp, align 4, !tbaa !37
  %65 = sext i32 %64 to i64
  %cmp100 = icmp slt i64 %indvars.iv.next, %65
  br i1 %cmp100, label %for.body102, label %for.inc137, !llvm.loop !953

if.else112:                                       ; preds = %if.end94
  call void @vector_nz_floor(float* %55, i32 %61, double %mixwfloor) #34
  %66 = load i32, i32* %n_comp, align 4, !tbaa !37
  %call113 = call double @vector_sum_norm(float* %55, i32 %66) #34
  %67 = load i32, i32* %n_comp, align 4, !tbaa !37
  %cmp1154 = icmp sgt i32 %67, 0
  br i1 %cmp1154, label %for.body117, label %for.inc137

for.body117:                                      ; preds = %if.else112, %cond.end
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %cond.end ], [ 0, %if.else112 ]
  %arrayidx119 = getelementptr inbounds float, float* %55, i64 %indvars.iv22
  %68 = load float, float* %arrayidx119, align 4, !tbaa !4
  %cmp121 = fcmp une float %68, 0.000000e+00
  br i1 %cmp121, label %cond.true, label %cond.end

cond.true:                                        ; preds = %for.body117
  %conv120 = fpext float %68 to double
  %call126 = call i32 @logs3(double %conv120) #34
  br label %cond.end

cond.end:                                         ; preds = %for.body117, %cond.true
  %cond = phi i32 [ %call126, %cond.true ], [ -939524096, %for.body117 ]
  %69 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %mixw130 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %69, i64 %indvars.iv24, i32 4
  %70 = load i32*, i32** %mixw130, align 8, !tbaa !308
  %arrayidx132 = getelementptr inbounds i32, i32* %70, i64 %indvars.iv22
  store i32 %cond, i32* %arrayidx132, align 4, !tbaa !37
  %indvars.iv.next23 = add nuw nsw i64 %indvars.iv22, 1
  %71 = load i32, i32* %n_comp, align 4, !tbaa !37
  %72 = sext i32 %71 to i64
  %cmp115 = icmp slt i64 %indvars.iv.next23, %72
  br i1 %cmp115, label %for.body117, label %for.inc137, !llvm.loop !954

for.inc137:                                       ; preds = %for.body102, %cond.end, %if.then97, %if.else112
  %73 = phi i32 [ %67, %if.else112 ], [ %61, %if.then97 ], [ %71, %cond.end ], [ %64, %for.body102 ]
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1
  %74 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %75 = sext i32 %74 to i64
  %cmp87 = icmp slt i64 %indvars.iv.next25, %75
  br i1 %cmp87, label %for.body89, label %for.end139, !llvm.loop !955

for.end139:                                       ; preds = %for.inc137, %for.end83
  call void @ckd_free(i8* %call85) #34
  %tobool140.not = icmp eq i32 %chksum_present.0.lcssa, 0
  br i1 %tobool140.not, label %if.end142, label %if.then141

if.then141:                                       ; preds = %for.end139
  %76 = load i32, i32* %byteswap, align 4, !tbaa !37
  %77 = load i32, i32* %chksum, align 4, !tbaa !37
  call void @bio_verify_chksum(%struct._IO_FILE* %call, i32 %76, i32 %77) #34
  br label %if.end142

if.end142:                                        ; preds = %if.then141, %for.end139
  %call143 = call i64 @fread(i8* nonnull %eofchk, i64 1, i64 1, %struct._IO_FILE* %call) #36
  %cmp144 = icmp eq i64 %call143, 1
  br i1 %cmp144, label %if.then146, label %if.end147

if.then146:                                       ; preds = %if.end142
  call void @_E__pr_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 358, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.1045, i64 0, i64 0)) #34
  call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.41.1068, i64 0, i64 0), i8* %file_name) #34
  br label %if.end147

if.end147:                                        ; preds = %if.then146, %if.end142
  %call148 = call i32 @fclose(%struct._IO_FILE* %call) #36
  call void @_E__pr_info_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 362, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.1038, i64 0, i64 0)) #34
  %78 = load i32, i32* %n_mgau, align 4, !tbaa !37
  %79 = load i32, i32* %n_comp, align 4, !tbaa !37
  call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.42.1069, i64 0, i64 0), i32 %78, i32 %79) #34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #38
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %eofchk) #38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #38
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @mgau_uninit_compact(%struct.mgau_model_t* nocapture readonly %g) unnamed_addr #0 {
entry:
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 378, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.1038, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.43.1049, i64 0, i64 0)) #34
  %n_mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 0
  %mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %veclen = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 2
  %0 = load i32, i32* %n_mgau, align 8, !tbaa !92
  %cmp131 = icmp sgt i32 %0, 0
  br i1 %cmp131, label %for.cond1.preheader, label %if.end75

for.cond1.preheader:                              ; preds = %entry, %for.inc62
  %indvars.iv139 = phi i64 [ %indvars.iv.next140, %for.inc62 ], [ 0, %entry ]
  %nm.0135 = phi i32 [ %nm.1, %for.inc62 ], [ 0, %entry ]
  %n.0134 = phi i32 [ %n.1.lcssa145, %for.inc62 ], [ 0, %entry ]
  %1 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %n_comp123 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %indvars.iv139, i32 0
  %2 = load i32, i32* %n_comp123, align 8, !tbaa !285
  %cmp2124 = icmp sgt i32 %2, 0
  br i1 %cmp2124, label %for.body3, label %for.end.thread

for.end.thread:                                   ; preds = %for.cond1.preheader
  store i32 0, i32* %n_comp123, align 8, !tbaa !285
  br label %if.then58

for.body3:                                        ; preds = %for.cond1.preheader, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.cond1.preheader ]
  %3 = phi %struct.mgau_t* [ %25, %for.inc ], [ %1, %for.cond1.preheader ]
  %n.1128 = phi i32 [ %n.2, %for.inc ], [ %n.0134, %for.cond1.preheader ]
  %c2.0126 = phi i32 [ %c2.1, %for.inc ], [ 0, %for.cond1.preheader ]
  %var = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %3, i64 %indvars.iv139, i32 2
  %4 = load float**, float*** %var, align 8, !tbaa !936
  %arrayidx8 = getelementptr inbounds float*, float** %4, i64 %indvars.iv
  %5 = load float*, float** %arrayidx8, align 8, !tbaa !74
  %6 = load i32, i32* %veclen, align 8, !tbaa !382
  %call = tail call i32 @vector_is_zero(float* %5, i32 %6) #34
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %for.body3
  %7 = zext i32 %c2.0126 to i64
  %cmp9.not = icmp eq i64 %indvars.iv, %7
  br i1 %cmp9.not, label %if.end, label %if.then10

if.then10:                                        ; preds = %if.then
  %8 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %mean = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %8, i64 %indvars.iv139, i32 1
  %9 = load float**, float*** %mean, align 8, !tbaa !944
  %idxprom14 = sext i32 %c2.0126 to i64
  %arrayidx15 = getelementptr inbounds float*, float** %9, i64 %idxprom14
  %10 = bitcast float** %arrayidx15 to i8**
  %11 = load i8*, i8** %10, align 8, !tbaa !74
  %arrayidx21 = getelementptr inbounds float*, float** %9, i64 %indvars.iv
  %12 = bitcast float** %arrayidx21 to i8**
  %13 = load i8*, i8** %12, align 8, !tbaa !74
  %14 = load i32, i32* %veclen, align 8, !tbaa !382
  %conv = sext i32 %14 to i64
  %mul = shl nsw i64 %conv, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %13, i64 %mul, i1 false)
  %15 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %var26 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %15, i64 %indvars.iv139, i32 2
  %16 = load float**, float*** %var26, align 8, !tbaa !936
  %arrayidx28 = getelementptr inbounds float*, float** %16, i64 %idxprom14
  %17 = bitcast float** %arrayidx28 to i8**
  %18 = load i8*, i8** %17, align 8, !tbaa !74
  %arrayidx34 = getelementptr inbounds float*, float** %16, i64 %indvars.iv
  %19 = bitcast float** %arrayidx34 to i8**
  %20 = load i8*, i8** %19, align 8, !tbaa !74
  %21 = load i32, i32* %veclen, align 8, !tbaa !382
  %conv36 = sext i32 %21 to i64
  %mul37 = shl nsw i64 %conv36, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %20, i64 %mul37, i1 false)
  %22 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %mixw = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %22, i64 %indvars.iv139, i32 4
  %23 = load i32*, i32** %mixw, align 8, !tbaa !308
  %arrayidx42 = getelementptr inbounds i32, i32* %23, i64 %indvars.iv
  %24 = load i32, i32* %arrayidx42, align 4, !tbaa !37
  %arrayidx48 = getelementptr inbounds i32, i32* %23, i64 %idxprom14
  store i32 %24, i32* %arrayidx48, align 4, !tbaa !37
  br label %if.end

if.end:                                           ; preds = %if.then10, %if.then
  %inc = add nsw i32 %c2.0126, 1
  br label %for.inc

if.else:                                          ; preds = %for.body3
  %inc49 = add nsw i32 %n.1128, 1
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.else
  %c2.1 = phi i32 [ %c2.0126, %if.else ], [ %inc, %if.end ]
  %n.2 = phi i32 [ %inc49, %if.else ], [ %n.1128, %if.end ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %25 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %n_comp = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %25, i64 %indvars.iv139, i32 0
  %26 = load i32, i32* %n_comp, align 8, !tbaa !285
  %27 = sext i32 %26 to i64
  %cmp2 = icmp slt i64 %indvars.iv.next, %27
  br i1 %cmp2, label %for.body3, label %for.end, !llvm.loop !956

for.end:                                          ; preds = %for.inc
  store i32 %c2.1, i32* %n_comp, align 8, !tbaa !285
  %cmp56 = icmp eq i32 %c2.1, 0
  br i1 %cmp56, label %if.then58, label %for.inc62

if.then58:                                        ; preds = %for.end.thread, %for.end
  %n.1.lcssa146 = phi i32 [ %n.0134, %for.end.thread ], [ %n.2, %for.end ]
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !74
  %29 = trunc i64 %indvars.iv139 to i32
  %call59 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44.1050, i64 0, i64 0), i32 %29) #36
  %inc60 = add nsw i32 %nm.0135, 1
  br label %for.inc62

for.inc62:                                        ; preds = %for.end, %if.then58
  %n.1.lcssa145 = phi i32 [ %n.1.lcssa146, %if.then58 ], [ %n.2, %for.end ]
  %nm.1 = phi i32 [ %inc60, %if.then58 ], [ %nm.0135, %for.end ]
  %indvars.iv.next140 = add nuw nsw i64 %indvars.iv139, 1
  %30 = load i32, i32* %n_mgau, align 8, !tbaa !92
  %31 = sext i32 %30 to i64
  %cmp = icmp slt i64 %indvars.iv.next140, %31
  br i1 %cmp, label %for.cond1.preheader, label %for.end64, !llvm.loop !957

for.end64:                                        ; preds = %for.inc62
  %cmp65 = icmp sgt i32 %nm.1, 0
  br i1 %cmp65, label %if.end69.thread, label %if.end69

if.end69.thread:                                  ; preds = %for.end64
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !74
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %32)
  br label %if.then74

if.end69:                                         ; preds = %for.end64
  %cmp72 = icmp sgt i32 %n.1.lcssa145, 0
  br i1 %cmp72, label %if.then74, label %if.end75

if.then74:                                        ; preds = %if.end69.thread, %if.end69
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 408, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.1038, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.46.1051, i64 0, i64 0), i32 %n.1.lcssa145, i32 %nm.1) #34
  br label %if.end75

if.end75:                                         ; preds = %entry, %if.end69, %if.then74
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @mgau_var_floor(%struct.mgau_model_t* nocapture readonly %g, double %floor) unnamed_addr #0 {
entry:
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 416, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.1038, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47.1048, i64 0, i64 0)) #34
  %n_mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 0
  %0 = load i32, i32* %n_mgau, align 8, !tbaa !92
  %veclen = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 2
  %conv16 = fptrunc double %floor to float
  %cmp59 = icmp sgt i32 %0, 0
  br i1 %cmp59, label %for.cond1.preheader.lr.ph, label %for.end31

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %1 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %wide.trip.count69 = zext i32 %0 to i64
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.lr.ph, %for.inc29
  %indvars.iv67 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next68, %for.inc29 ]
  %n.061 = phi i32 [ 0, %for.cond1.preheader.lr.ph ], [ %n.1.lcssa, %for.inc29 ]
  %n_comp = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %indvars.iv67, i32 0
  %2 = load i32, i32* %n_comp, align 8, !tbaa !285
  %var = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %indvars.iv67, i32 2
  %cmp255 = icmp sgt i32 %2, 0
  br i1 %cmp255, label %for.cond4.preheader.lr.ph, label %for.inc29

for.cond4.preheader.lr.ph:                        ; preds = %for.cond1.preheader
  %3 = load i32, i32* %veclen, align 8, !tbaa !382
  %cmp552 = icmp sgt i32 %3, 0
  %wide.trip.count65 = zext i32 %2 to i64
  %wide.trip.count = zext i32 %3 to i64
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.cond4.preheader.lr.ph, %for.inc26
  %indvars.iv63 = phi i64 [ 0, %for.cond4.preheader.lr.ph ], [ %indvars.iv.next64, %for.inc26 ]
  %n.157 = phi i32 [ %n.061, %for.cond4.preheader.lr.ph ], [ %n.2.lcssa, %for.inc26 ]
  br i1 %cmp552, label %for.body6.lr.ph, label %for.inc26

for.body6.lr.ph:                                  ; preds = %for.cond4.preheader
  %4 = load float**, float*** %var, align 8, !tbaa !936
  %arrayidx11 = getelementptr inbounds float*, float** %4, i64 %indvars.iv63
  %5 = load float*, float** %arrayidx11, align 8, !tbaa !74
  br label %for.body6

for.body6:                                        ; preds = %for.body6.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body6.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %n.254 = phi i32 [ %n.157, %for.body6.lr.ph ], [ %n.3, %for.inc ]
  %arrayidx13 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %6 = load float, float* %arrayidx13, align 4, !tbaa !4
  %conv = fpext float %6 to double
  %cmp14 = fcmp olt double %conv, %floor
  br i1 %cmp14, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body6
  store float %conv16, float* %arrayidx13, align 4, !tbaa !4
  %inc = add nsw i32 %n.254, 1
  br label %for.inc

for.inc:                                          ; preds = %for.body6, %if.then
  %n.3 = phi i32 [ %inc, %if.then ], [ %n.254, %for.body6 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.inc26, label %for.body6, !llvm.loop !958

for.inc26:                                        ; preds = %for.inc, %for.cond4.preheader
  %n.2.lcssa = phi i32 [ %n.157, %for.cond4.preheader ], [ %n.3, %for.inc ]
  %indvars.iv.next64 = add nuw nsw i64 %indvars.iv63, 1
  %exitcond66.not = icmp eq i64 %indvars.iv.next64, %wide.trip.count65
  br i1 %exitcond66.not, label %for.inc29, label %for.cond4.preheader, !llvm.loop !959

for.inc29:                                        ; preds = %for.inc26, %for.cond1.preheader
  %n.1.lcssa = phi i32 [ %n.061, %for.cond1.preheader ], [ %n.2.lcssa, %for.inc26 ]
  %indvars.iv.next68 = add nuw nsw i64 %indvars.iv67, 1
  %exitcond70.not = icmp eq i64 %indvars.iv.next68, %wide.trip.count69
  br i1 %exitcond70.not, label %for.end31, label %for.cond1.preheader, !llvm.loop !960

for.end31:                                        ; preds = %for.inc29, %entry
  %n.0.lcssa = phi i32 [ 0, %entry ], [ %n.1.lcssa, %for.inc29 ]
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 428, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.1038, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3.1040, i64 0, i64 0), i32 %n.0.lcssa) #34
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc void @mgau_precomp(%struct.mgau_model_t* nocapture readonly %g) unnamed_addr #0 {
entry:
  %call = tail call double @log_to_logs3_factor() #34
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1037, i64 0, i64 0), i64 474, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.1038, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.48.1047, i64 0, i64 0)) #34
  %n_mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 0
  %mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %veclen = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 2
  %0 = load i32, i32* %n_mgau, align 8, !tbaa !92
  %cmp8 = icmp sgt i32 %0, 0
  br i1 %cmp8, label %for.cond1.preheader.preheader, label %for.end50

for.cond1.preheader.preheader:                    ; preds = %entry
  %.pre = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.preheader, %for.inc48
  %1 = phi i32 [ %0, %for.cond1.preheader.preheader ], [ %23, %for.inc48 ]
  %2 = phi %struct.mgau_t* [ %.pre, %for.cond1.preheader.preheader ], [ %24, %for.inc48 ]
  %3 = phi %struct.mgau_t* [ %.pre, %for.cond1.preheader.preheader ], [ %25, %for.inc48 ]
  %indvars.iv13 = phi i64 [ 0, %for.cond1.preheader.preheader ], [ %indvars.iv.next14, %for.inc48 ]
  %n_comp5 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %3, i64 %indvars.iv13, i32 0
  %4 = load i32, i32* %n_comp5, align 8, !tbaa !285
  %cmp26 = icmp sgt i32 %4, 0
  br i1 %cmp26, label %for.cond4.preheader.preheader, label %for.inc48

for.cond4.preheader.preheader:                    ; preds = %for.cond1.preheader
  %.pre15 = load i32, i32* %veclen, align 8, !tbaa !382
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.cond4.preheader.preheader, %for.end
  %5 = phi %struct.mgau_t* [ %2, %for.cond4.preheader.preheader ], [ %16, %for.end ]
  %6 = phi %struct.mgau_t* [ %3, %for.cond4.preheader.preheader ], [ %16, %for.end ]
  %7 = phi i32 [ %.pre15, %for.cond4.preheader.preheader ], [ %18, %for.end ]
  %indvars.iv11 = phi i64 [ 0, %for.cond4.preheader.preheader ], [ %indvars.iv.next12, %for.end ]
  %cmp51 = icmp sgt i32 %7, 0
  br i1 %cmp51, label %for.body6.preheader, label %for.end

for.body6.preheader:                              ; preds = %for.cond4.preheader
  %var.phi.trans.insert = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %6, i64 %indvars.iv13, i32 2
  %.pre16 = load float**, float*** %var.phi.trans.insert, align 8, !tbaa !936
  %arrayidx11.phi.trans.insert = getelementptr inbounds float*, float** %.pre16, i64 %indvars.iv11
  %.pre17 = load float*, float** %arrayidx11.phi.trans.insert, align 8, !tbaa !74
  br label %for.body6

for.body6:                                        ; preds = %for.body6.preheader, %for.body6
  %8 = phi float* [ %.pre17, %for.body6.preheader ], [ %12, %for.body6 ]
  %indvars.iv = phi i64 [ 0, %for.body6.preheader ], [ %indvars.iv.next, %for.body6 ]
  %lrd.03 = phi double [ 0.000000e+00, %for.body6.preheader ], [ %add, %for.body6 ]
  %arrayidx13 = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %9 = load float, float* %arrayidx13, align 4, !tbaa !4
  %conv = fpext float %9 to double
  %call14 = tail call double @log(double %conv) #34
  %add = fadd double %lrd.03, %call14
  %10 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %var18 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %10, i64 %indvars.iv13, i32 2
  %11 = load float**, float*** %var18, align 8, !tbaa !936
  %arrayidx20 = getelementptr inbounds float*, float** %11, i64 %indvars.iv11
  %12 = load float*, float** %arrayidx20, align 8, !tbaa !74
  %arrayidx22 = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %13 = load float, float* %arrayidx22, align 4, !tbaa !4
  %conv23 = fpext float %13 to double
  %mul = fmul double %conv23, 2.000000e+00
  %div = fdiv double 1.000000e+00, %mul
  %conv24 = fptrunc double %div to float
  store float %conv24, float* %arrayidx22, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %14 = load i32, i32* %veclen, align 8, !tbaa !382
  %15 = sext i32 %14 to i64
  %cmp5 = icmp slt i64 %indvars.iv.next, %15
  br i1 %cmp5, label %for.body6, label %for.end, !llvm.loop !961

for.end:                                          ; preds = %for.body6, %for.cond4.preheader
  %16 = phi %struct.mgau_t* [ %5, %for.cond4.preheader ], [ %10, %for.body6 ]
  %17 = phi %struct.mgau_t* [ %6, %for.cond4.preheader ], [ %10, %for.body6 ]
  %18 = phi i32 [ %7, %for.cond4.preheader ], [ %14, %for.body6 ]
  %lrd.0.lcssa = phi double [ 0.000000e+00, %for.cond4.preheader ], [ %add, %for.body6 ]
  %conv34 = sitofp i32 %18 to double
  %19 = tail call double @llvm.fmuladd.f64(double %conv34, double 0x3FFD67F1C864BEB4, double %lrd.0.lcssa)
  %mul37 = fmul double %19, -5.000000e-01
  %conv38 = fptrunc double %mul37 to float
  %lrd42 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %17, i64 %indvars.iv13, i32 3
  %20 = load float*, float** %lrd42, align 8, !tbaa !949
  %arrayidx44 = getelementptr inbounds float, float* %20, i64 %indvars.iv11
  store float %conv38, float* %arrayidx44, align 4, !tbaa !4
  %indvars.iv.next12 = add nuw nsw i64 %indvars.iv11, 1
  %n_comp = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %16, i64 %indvars.iv13, i32 0
  %21 = load i32, i32* %n_comp, align 8, !tbaa !285
  %22 = sext i32 %21 to i64
  %cmp2 = icmp slt i64 %indvars.iv.next12, %22
  br i1 %cmp2, label %for.cond4.preheader, label %for.inc48.loopexit, !llvm.loop !962

for.inc48.loopexit:                               ; preds = %for.end
  %.pre18 = load i32, i32* %n_mgau, align 8, !tbaa !92
  br label %for.inc48

for.inc48:                                        ; preds = %for.inc48.loopexit, %for.cond1.preheader
  %23 = phi i32 [ %.pre18, %for.inc48.loopexit ], [ %1, %for.cond1.preheader ]
  %24 = phi %struct.mgau_t* [ %16, %for.inc48.loopexit ], [ %2, %for.cond1.preheader ]
  %25 = phi %struct.mgau_t* [ %16, %for.inc48.loopexit ], [ %3, %for.cond1.preheader ]
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1
  %26 = sext i32 %23 to i64
  %cmp = icmp slt i64 %indvars.iv.next14, %26
  br i1 %cmp, label %for.cond1.preheader, label %for.end50, !llvm.loop !963

for.end50:                                        ; preds = %for.inc48, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @mgau_comp_eval(%struct.mgau_model_t* nocapture readonly %g, i32 %s, float* nocapture readonly %x, i32* nocapture %score) local_unnamed_addr #0 {
entry:
  %veclen1 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 2
  %0 = load i32, i32* %veclen1, align 8, !tbaa !382
  %mgau2 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %1 = load %struct.mgau_t*, %struct.mgau_t** %mgau2, align 8, !tbaa !284
  %idxprom = sext i32 %s to i64
  %call = tail call double @log_to_logs3_factor() #34
  %n_comp = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %idxprom, i32 0
  %cmp1073 = icmp sgt i32 %0, 0
  %2 = load i32, i32* %n_comp, align 8, !tbaa !285
  %cmp76 = icmp sgt i32 %2, 0
  br i1 %cmp76, label %for.body.lr.ph, label %for.end39

for.body.lr.ph:                                   ; preds = %entry
  %distfloor = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 4
  %lrd = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %idxprom, i32 3
  %var = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %idxprom, i32 2
  %mean = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %idxprom, i32 1
  %3 = load float**, float*** %mean, align 8, !tbaa !944
  %4 = load float**, float*** %var, align 8, !tbaa !936
  %5 = load float*, float** %lrd, align 8, !tbaa !949
  %6 = load double, double* %distfloor, align 8, !tbaa !941
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.end
  %indvars.iv80 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next81, %for.end ]
  %bs.077 = phi i32 [ -2147483648, %for.body.lr.ph ], [ %spec.select, %for.end ]
  %arrayidx4 = getelementptr inbounds float*, float** %3, i64 %indvars.iv80
  %7 = load float*, float** %arrayidx4, align 8, !tbaa !74
  %arrayidx6 = getelementptr inbounds float*, float** %4, i64 %indvars.iv80
  %8 = load float*, float** %arrayidx6, align 8, !tbaa !74
  %arrayidx8 = getelementptr inbounds float, float* %5, i64 %indvars.iv80
  %9 = load float, float* %arrayidx8, align 4, !tbaa !4
  %conv = fpext float %9 to double
  br i1 %cmp1073, label %for.body12, label %for.end

for.body12:                                       ; preds = %for.body, %for.body12
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body12 ], [ 0, %for.body ]
  %dval.074 = phi double [ %14, %for.body12 ], [ %conv, %for.body ]
  %arrayidx14 = getelementptr inbounds float, float* %x, i64 %indvars.iv
  %10 = load float, float* %arrayidx14, align 4, !tbaa !4
  %arrayidx16 = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %11 = load float, float* %arrayidx16, align 4, !tbaa !4
  %sub = fsub float %10, %11
  %conv17 = fpext float %sub to double
  %arrayidx19 = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %12 = load float, float* %arrayidx19, align 4, !tbaa !4
  %conv20 = fpext float %12 to double
  %13 = fneg double %conv17
  %neg = fmul double %13, %conv17
  %14 = tail call double @llvm.fmuladd.f64(double %neg, double %conv20, double %dval.074)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body12, !llvm.loop !964

for.end:                                          ; preds = %for.body12, %for.body
  %dval.0.lcssa = phi double [ %conv, %for.body ], [ %14, %for.body12 ]
  %cmp22 = fcmp olt double %dval.0.lcssa, %6
  %dval.1 = select i1 %cmp22, double %6, double %dval.0.lcssa
  %mul25 = fmul double %call, %dval.1
  %conv26 = fptosi double %mul25 to i32
  %arrayidx28 = getelementptr inbounds i32, i32* %score, i64 %indvars.iv80
  store i32 %conv26, i32* %arrayidx28, align 4, !tbaa !37
  %cmp31 = icmp slt i32 %bs.077, %conv26
  %spec.select = select i1 %cmp31, i32 %conv26, i32 %bs.077
  %indvars.iv.next81 = add nuw nsw i64 %indvars.iv80, 1
  %15 = load i32, i32* %n_comp, align 8, !tbaa !285
  %16 = sext i32 %15 to i64
  %cmp = icmp slt i64 %indvars.iv.next81, %16
  br i1 %cmp, label %for.body, label %for.end39, !llvm.loop !965

for.end39:                                        ; preds = %for.end, %entry
  %bs.0.lcssa = phi i32 [ -2147483648, %entry ], [ %spec.select, %for.end ]
  ret i32 %bs.0.lcssa
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @mgau_eval(%struct.mgau_model_t* nocapture readonly %g, i32 %m, i32* readonly %active, float* nocapture readonly %x) local_unnamed_addr #0 {
entry:
  %veclen1 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 2
  %0 = load i32, i32* %veclen1, align 8, !tbaa !382
  %mgau2 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %1 = load %struct.mgau_t*, %struct.mgau_t** %mgau2, align 8, !tbaa !284
  %idxprom = sext i32 %m to i64
  %call = tail call double @log_to_logs3_factor() #34
  %tobool.not = icmp eq i32* %active, null
  br i1 %tobool.not, label %for.cond.preheader, label %for.cond121.preheader

for.cond121.preheader:                            ; preds = %entry
  %mean130 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %idxprom, i32 1
  %var133 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %idxprom, i32 2
  %lrd136 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %idxprom, i32 3
  %cmp141313 = icmp sgt i32 %0, 0
  %distfloor159 = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 4
  %mixw167 = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %idxprom, i32 4
  %2 = load i32, i32* %active, align 4, !tbaa !37
  %cmp124317 = icmp sgt i32 %2, -1
  br i1 %cmp124317, label %for.body126.preheader, label %if.end175

for.body126.preheader:                            ; preds = %for.cond121.preheader
  %wide.trip.count335 = zext i32 %0 to i64
  br label %for.body126

for.cond.preheader:                               ; preds = %entry
  %n_comp = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %idxprom, i32 0
  %mean = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %idxprom, i32 1
  %var = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %idxprom, i32 2
  %lrd = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %idxprom, i32 3
  %cmp22300 = icmp sgt i32 %0, 0
  %distfloor = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 4
  %mixw = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %1, i64 %idxprom, i32 4
  %3 = load i32, i32* %n_comp, align 8, !tbaa !285
  %cmp307 = icmp sgt i32 %3, 1
  br i1 %cmp307, label %for.body.preheader, label %for.end73

for.body.preheader:                               ; preds = %for.cond.preheader
  %wide.trip.count328 = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.end
  %indvars.iv330 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next331, %for.end ]
  %score.0308 = phi i32 [ -939524096, %for.body.preheader ], [ %call70, %for.end ]
  %4 = load float**, float*** %mean, align 8, !tbaa !944
  %arrayidx4 = getelementptr inbounds float*, float** %4, i64 %indvars.iv330
  %5 = load float*, float** %arrayidx4, align 8, !tbaa !74
  %6 = or i64 %indvars.iv330, 1
  %arrayidx7 = getelementptr inbounds float*, float** %4, i64 %6
  %7 = load float*, float** %arrayidx7, align 8, !tbaa !74
  %8 = load float**, float*** %var, align 8, !tbaa !936
  %arrayidx9 = getelementptr inbounds float*, float** %8, i64 %indvars.iv330
  %9 = load float*, float** %arrayidx9, align 8, !tbaa !74
  %arrayidx13 = getelementptr inbounds float*, float** %8, i64 %6
  %10 = load float*, float** %arrayidx13, align 8, !tbaa !74
  %11 = load float*, float** %lrd, align 8, !tbaa !949
  %arrayidx15 = getelementptr inbounds float, float* %11, i64 %indvars.iv330
  %12 = load float, float* %arrayidx15, align 4, !tbaa !4
  %conv = fpext float %12 to double
  %arrayidx19 = getelementptr inbounds float, float* %11, i64 %6
  %13 = load float, float* %arrayidx19, align 4, !tbaa !4
  %conv20 = fpext float %13 to double
  br i1 %cmp22300, label %for.body24, label %for.end

for.body24:                                       ; preds = %for.body, %for.body24
  %indvars.iv326 = phi i64 [ %indvars.iv.next327, %for.body24 ], [ 0, %for.body ]
  %dval2.0302 = phi double [ %22, %for.body24 ], [ %conv20, %for.body ]
  %dval1.0301 = phi double [ %18, %for.body24 ], [ %conv, %for.body ]
  %arrayidx26 = getelementptr inbounds float, float* %x, i64 %indvars.iv326
  %14 = load float, float* %arrayidx26, align 4, !tbaa !4
  %arrayidx28 = getelementptr inbounds float, float* %5, i64 %indvars.iv326
  %15 = load float, float* %arrayidx28, align 4, !tbaa !4
  %sub29 = fsub float %14, %15
  %conv30 = fpext float %sub29 to double
  %arrayidx32 = getelementptr inbounds float, float* %9, i64 %indvars.iv326
  %16 = load float, float* %arrayidx32, align 4, !tbaa !4
  %conv33 = fpext float %16 to double
  %17 = fneg double %conv30
  %neg = fmul double %17, %conv30
  %18 = tail call double @llvm.fmuladd.f64(double %neg, double %conv33, double %dval1.0301)
  %arrayidx38 = getelementptr inbounds float, float* %7, i64 %indvars.iv326
  %19 = load float, float* %arrayidx38, align 4, !tbaa !4
  %sub39 = fsub float %14, %19
  %conv40 = fpext float %sub39 to double
  %arrayidx43 = getelementptr inbounds float, float* %10, i64 %indvars.iv326
  %20 = load float, float* %arrayidx43, align 4, !tbaa !4
  %conv44 = fpext float %20 to double
  %21 = fneg double %conv40
  %neg46 = fmul double %21, %conv40
  %22 = tail call double @llvm.fmuladd.f64(double %neg46, double %conv44, double %dval2.0302)
  %indvars.iv.next327 = add nuw nsw i64 %indvars.iv326, 1
  %exitcond329.not = icmp eq i64 %indvars.iv.next327, %wide.trip.count328
  br i1 %exitcond329.not, label %for.end, label %for.body24, !llvm.loop !966

for.end:                                          ; preds = %for.body24, %for.body
  %dval1.0.lcssa = phi double [ %conv, %for.body ], [ %18, %for.body24 ]
  %dval2.0.lcssa = phi double [ %conv20, %for.body ], [ %22, %for.body24 ]
  %23 = load double, double* %distfloor, align 8, !tbaa !941
  %cmp47 = fcmp olt double %dval1.0.lcssa, %23
  %dval1.1 = select i1 %cmp47, double %23, double %dval1.0.lcssa
  %cmp52 = fcmp olt double %dval2.0.lcssa, %23
  %dval2.1 = select i1 %cmp52, double %23, double %dval2.0.lcssa
  %mul57 = fmul double %call, %dval1.1
  %conv58 = fptosi double %mul57 to i32
  %24 = load i32*, i32** %mixw, align 8, !tbaa !308
  %arrayidx60 = getelementptr inbounds i32, i32* %24, i64 %indvars.iv330
  %25 = load i32, i32* %arrayidx60, align 4, !tbaa !37
  %add61 = add nsw i32 %25, %conv58
  %call62 = tail call i32 @logs3_add(i32 %score.0308, i32 %add61) #34
  %mul63 = fmul double %call, %dval2.1
  %conv64 = fptosi double %mul63 to i32
  %26 = load i32*, i32** %mixw, align 8, !tbaa !308
  %arrayidx68 = getelementptr inbounds i32, i32* %26, i64 %6
  %27 = load i32, i32* %arrayidx68, align 4, !tbaa !37
  %add69 = add nsw i32 %27, %conv64
  %call70 = tail call i32 @logs3_add(i32 %call62, i32 %add69) #34
  %indvars.iv.next331 = add nuw i64 %indvars.iv330, 2
  %28 = load i32, i32* %n_comp, align 8, !tbaa !285
  %sub = add nsw i32 %28, -1
  %29 = trunc i64 %indvars.iv.next331 to i32
  %cmp = icmp sgt i32 %sub, %29
  br i1 %cmp, label %for.body, label %for.end73.loopexit, !llvm.loop !967

for.end73.loopexit:                               ; preds = %for.end
  %30 = trunc i64 %indvars.iv.next331 to i32
  br label %for.end73

for.end73:                                        ; preds = %for.end73.loopexit, %for.cond.preheader
  %score.0.lcssa = phi i32 [ -939524096, %for.cond.preheader ], [ %call70, %for.end73.loopexit ]
  %c.0.lcssa = phi i32 [ 0, %for.cond.preheader ], [ %30, %for.end73.loopexit ]
  %.lcssa = phi i32 [ %3, %for.cond.preheader ], [ %28, %for.end73.loopexit ]
  %cmp75 = icmp slt i32 %c.0.lcssa, %.lcssa
  br i1 %cmp75, label %if.then77, label %if.end175

if.then77:                                        ; preds = %for.end73
  %31 = load float**, float*** %mean, align 8, !tbaa !944
  %idxprom79 = zext i32 %c.0.lcssa to i64
  %arrayidx80 = getelementptr inbounds float*, float** %31, i64 %idxprom79
  %32 = load float*, float** %arrayidx80, align 8, !tbaa !74
  %33 = load float**, float*** %var, align 8, !tbaa !936
  %arrayidx83 = getelementptr inbounds float*, float** %33, i64 %idxprom79
  %34 = load float*, float** %arrayidx83, align 8, !tbaa !74
  %35 = load float*, float** %lrd, align 8, !tbaa !949
  %arrayidx86 = getelementptr inbounds float, float* %35, i64 %idxprom79
  %36 = load float, float* %arrayidx86, align 4, !tbaa !4
  %conv87 = fpext float %36 to double
  br i1 %cmp22300, label %for.body91.preheader, label %for.end106

for.body91.preheader:                             ; preds = %if.then77
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body91

for.body91:                                       ; preds = %for.body91.preheader, %for.body91
  %indvars.iv = phi i64 [ 0, %for.body91.preheader ], [ %indvars.iv.next, %for.body91 ]
  %dval1.2298 = phi double [ %conv87, %for.body91.preheader ], [ %41, %for.body91 ]
  %arrayidx93 = getelementptr inbounds float, float* %x, i64 %indvars.iv
  %37 = load float, float* %arrayidx93, align 4, !tbaa !4
  %arrayidx95 = getelementptr inbounds float, float* %32, i64 %indvars.iv
  %38 = load float, float* %arrayidx95, align 4, !tbaa !4
  %sub96 = fsub float %37, %38
  %conv97 = fpext float %sub96 to double
  %arrayidx100 = getelementptr inbounds float, float* %34, i64 %indvars.iv
  %39 = load float, float* %arrayidx100, align 4, !tbaa !4
  %conv101 = fpext float %39 to double
  %40 = fneg double %conv97
  %neg103 = fmul double %40, %conv97
  %41 = tail call double @llvm.fmuladd.f64(double %neg103, double %conv101, double %dval1.2298)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end106, label %for.body91, !llvm.loop !968

for.end106:                                       ; preds = %for.body91, %if.then77
  %dval1.2.lcssa = phi double [ %conv87, %if.then77 ], [ %41, %for.body91 ]
  %42 = load double, double* %distfloor, align 8, !tbaa !941
  %cmp108 = fcmp olt double %dval1.2.lcssa, %42
  %dval1.3 = select i1 %cmp108, double %42, double %dval1.2.lcssa
  %mul113 = fmul double %call, %dval1.3
  %conv114 = fptosi double %mul113 to i32
  %43 = load i32*, i32** %mixw, align 8, !tbaa !308
  %arrayidx117 = getelementptr inbounds i32, i32* %43, i64 %idxprom79
  %44 = load i32, i32* %arrayidx117, align 4, !tbaa !37
  %add118 = add nsw i32 %44, %conv114
  %call119 = tail call i32 @logs3_add(i32 %score.0.lcssa, i32 %add118) #34
  br label %if.end175

for.body126:                                      ; preds = %for.body126.preheader, %for.end158
  %indvars.iv337 = phi i64 [ 0, %for.body126.preheader ], [ %indvars.iv.next338, %for.end158 ]
  %45 = phi i32 [ %2, %for.body126.preheader ], [ %61, %for.end158 ]
  %score.1318 = phi i32 [ -939524096, %for.body126.preheader ], [ %call171, %for.end158 ]
  %46 = load i64, i64* @considered, align 8, !tbaa !770
  %inc127 = add nsw i64 %46, 1
  store i64 %inc127, i64* @considered, align 8, !tbaa !770
  %47 = load float**, float*** %mean130, align 8, !tbaa !944
  %idxprom131296 = zext i32 %45 to i64
  %arrayidx132 = getelementptr inbounds float*, float** %47, i64 %idxprom131296
  %48 = load float*, float** %arrayidx132, align 8, !tbaa !74
  %49 = load float**, float*** %var133, align 8, !tbaa !936
  %arrayidx135 = getelementptr inbounds float*, float** %49, i64 %idxprom131296
  %50 = load float*, float** %arrayidx135, align 8, !tbaa !74
  %51 = load float*, float** %lrd136, align 8, !tbaa !949
  %arrayidx138 = getelementptr inbounds float, float* %51, i64 %idxprom131296
  %52 = load float, float* %arrayidx138, align 4, !tbaa !4
  %conv139 = fpext float %52 to double
  br i1 %cmp141313, label %for.body143, label %for.end158

for.body143:                                      ; preds = %for.body126, %for.body143
  %indvars.iv333 = phi i64 [ %indvars.iv.next334, %for.body143 ], [ 0, %for.body126 ]
  %dval1.4314 = phi double [ %57, %for.body143 ], [ %conv139, %for.body126 ]
  %arrayidx145 = getelementptr inbounds float, float* %x, i64 %indvars.iv333
  %53 = load float, float* %arrayidx145, align 4, !tbaa !4
  %arrayidx147 = getelementptr inbounds float, float* %48, i64 %indvars.iv333
  %54 = load float, float* %arrayidx147, align 4, !tbaa !4
  %sub148 = fsub float %53, %54
  %conv149 = fpext float %sub148 to double
  %arrayidx152 = getelementptr inbounds float, float* %50, i64 %indvars.iv333
  %55 = load float, float* %arrayidx152, align 4, !tbaa !4
  %conv153 = fpext float %55 to double
  %56 = fneg double %conv149
  %neg155 = fmul double %56, %conv149
  %57 = tail call double @llvm.fmuladd.f64(double %neg155, double %conv153, double %dval1.4314)
  %indvars.iv.next334 = add nuw nsw i64 %indvars.iv333, 1
  %exitcond336.not = icmp eq i64 %indvars.iv.next334, %wide.trip.count335
  br i1 %exitcond336.not, label %for.end158, label %for.body143, !llvm.loop !969

for.end158:                                       ; preds = %for.body143, %for.body126
  %dval1.4.lcssa = phi double [ %conv139, %for.body126 ], [ %57, %for.body143 ]
  %58 = load double, double* %distfloor159, align 8, !tbaa !941
  %cmp160 = fcmp olt double %dval1.4.lcssa, %58
  %dval1.5 = select i1 %cmp160, double %58, double %dval1.4.lcssa
  %mul165 = fmul double %call, %dval1.5
  %conv166 = fptosi double %mul165 to i32
  %59 = load i32*, i32** %mixw167, align 8, !tbaa !308
  %arrayidx169 = getelementptr inbounds i32, i32* %59, i64 %idxprom131296
  %60 = load i32, i32* %arrayidx169, align 4, !tbaa !37
  %add170 = add nsw i32 %60, %conv166
  %call171 = tail call i32 @logs3_add(i32 %score.1318, i32 %add170) #34
  %indvars.iv.next338 = add nuw i64 %indvars.iv337, 1
  %arrayidx123 = getelementptr inbounds i32, i32* %active, i64 %indvars.iv.next338
  %61 = load i32, i32* %arrayidx123, align 4, !tbaa !37
  %cmp124 = icmp sgt i32 %61, -1
  br i1 %cmp124, label %for.body126, label %if.end175, !llvm.loop !970

if.end175:                                        ; preds = %for.end158, %for.cond121.preheader, %for.end73, %for.end106
  %score.2 = phi i32 [ %call119, %for.end106 ], [ %score.0.lcssa, %for.end73 ], [ -939524096, %for.cond121.preheader ], [ %call171, %for.end158 ]
  ret i32 %score.2
}

; Function Attrs: noinline nounwind optsize uwtable
define void @mgau_free(%struct.mgau_model_t* %g) local_unnamed_addr #0 {
entry:
  %tobool.not = icmp eq %struct.mgau_model_t* %g, null
  br i1 %tobool.not, label %if.end35, label %if.then

if.then:                                          ; preds = %entry
  %mgau = getelementptr inbounds %struct.mgau_model_t, %struct.mgau_model_t* %g, i64 0, i32 3
  %0 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %mean = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %0, i64 0, i32 1
  %1 = load float**, float*** %mean, align 8, !tbaa !944
  %tobool1.not = icmp eq float** %1, null
  br i1 %tobool1.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %2 = bitcast float** %1 to i8*
  tail call void @ckd_free(i8* nonnull %2) #34
  %.pre = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %3 = phi %struct.mgau_t* [ %.pre, %if.then2 ], [ %0, %if.then ]
  %var = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %3, i64 0, i32 2
  %4 = load float**, float*** %var, align 8, !tbaa !936
  %tobool8.not = icmp eq float** %4, null
  br i1 %tobool8.not, label %if.end13, label %if.then9

if.then9:                                         ; preds = %if.end
  %5 = bitcast float** %4 to i8*
  tail call void @ckd_free(i8* nonnull %5) #34
  %.pre52 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  br label %if.end13

if.end13:                                         ; preds = %if.then9, %if.end
  %6 = phi %struct.mgau_t* [ %.pre52, %if.then9 ], [ %3, %if.end ]
  %lrd = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %6, i64 0, i32 3
  %7 = load float*, float** %lrd, align 8, !tbaa !949
  %tobool16.not = icmp eq float* %7, null
  br i1 %tobool16.not, label %if.end21, label %if.then17

if.then17:                                        ; preds = %if.end13
  %8 = bitcast float* %7 to i8*
  tail call void @ckd_free(i8* nonnull %8) #34
  %.pre53 = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  br label %if.end21

if.end21:                                         ; preds = %if.then17, %if.end13
  %9 = phi %struct.mgau_t* [ %.pre53, %if.then17 ], [ %6, %if.end13 ]
  %mixw = getelementptr inbounds %struct.mgau_t, %struct.mgau_t* %9, i64 0, i32 4
  %10 = load i32*, i32** %mixw, align 8, !tbaa !308
  %tobool24.not = icmp eq i32* %10, null
  br i1 %tobool24.not, label %if.then32, label %if.end29

if.end29:                                         ; preds = %if.end21
  %11 = bitcast i32* %10 to i8*
  tail call void @ckd_free(i8* nonnull %11) #34
  %.pr = load %struct.mgau_t*, %struct.mgau_t** %mgau, align 8, !tbaa !284
  %tobool31.not = icmp eq %struct.mgau_t* %.pr, null
  br i1 %tobool31.not, label %if.end34, label %if.then32

if.then32:                                        ; preds = %if.end21, %if.end29
  %12 = phi %struct.mgau_t* [ %.pr, %if.end29 ], [ %9, %if.end21 ]
  %13 = bitcast %struct.mgau_t* %12 to i8*
  tail call void @ckd_free(i8* nonnull %13) #34
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.end29
  %14 = bitcast %struct.mgau_model_t* %g to i8*
  tail call void @ckd_free(i8* nonnull %14) #34
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.beam_t* @beam_init(double %svq, double %hmm, double %ptr, double %wd) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1093, i64 0, i64 0), i32 61) #34
  %0 = bitcast i8* %call to %struct.beam_t*
  %call1 = tail call i32 @logs3(double %svq) #34
  %subvq = bitcast i8* %call to i32*
  store i32 %call1, i32* %subvq, align 4, !tbaa !102
  %call2 = tail call i32 @logs3(double %hmm) #34
  %hmm3 = getelementptr inbounds i8, i8* %call, i64 4
  %1 = bitcast i8* %hmm3 to i32*
  store i32 %call2, i32* %1, align 4, !tbaa !98
  %call4 = tail call i32 @logs3(double %ptr) #34
  %ptrans = getelementptr inbounds i8, i8* %call, i64 8
  %2 = bitcast i8* %ptrans to i32*
  store i32 %call4, i32* %2, align 4, !tbaa !100
  %call5 = tail call i32 @logs3(double %wd) #34
  %word = getelementptr inbounds i8, i8* %call, i64 12
  %3 = bitcast i8* %word to i32*
  store i32 %call5, i32* %3, align 4, !tbaa !101
  ret %struct.beam_t* %0
}

; Function Attrs: nofree noinline nosync nounwind optsize uwtable
define i32 @str2words(i8* %line, i8** nocapture %ptr, i32 %max_ptr) local_unnamed_addr #12 {
entry:
  %0 = load i8, i8* %line, align 1, !tbaa !63
  %tobool.not103114 = icmp eq i8 %0, 0
  br i1 %tobool.not103114, label %cleanup, label %land.rhs.lr.ph.lr.ph

land.rhs.lr.ph.lr.ph:                             ; preds = %entry
  %call = tail call i16** @__ctype_b_loc() #41
  %smax = call i32 @llvm.smax.i32(i32 %max_ptr, i32 0)
  %wide.trip.count = zext i32 %smax to i64
  br label %land.rhs.lr.ph

land.rhs.lr.ph:                                   ; preds = %land.rhs.lr.ph.lr.ph, %if.end57
  %indvars.iv136 = phi i64 [ 0, %land.rhs.lr.ph.lr.ph ], [ %indvars.iv.next137, %if.end57 ]
  %1 = phi i8 [ %0, %land.rhs.lr.ph.lr.ph ], [ %19, %if.end57 ]
  %idxprom101117 = phi i64 [ 0, %land.rhs.lr.ph.lr.ph ], [ %idxprom101, %if.end57 ]
  %i.0115 = phi i32 [ 0, %land.rhs.lr.ph.lr.ph ], [ %inc58, %if.end57 ]
  %2 = load i16*, i16** %call, align 8, !tbaa !74
  %3 = sext i32 %i.0115 to i64
  %idxprom5159 = sext i8 %1 to i64
  %arrayidx6160 = getelementptr inbounds i16, i16* %2, i64 %idxprom5159
  %4 = load i16, i16* %arrayidx6160, align 2, !tbaa !40
  %5 = and i16 %4, 8192
  %tobool8.not161 = icmp eq i16 %5, 0
  br i1 %tobool8.not161, label %if.end, label %for.inc

land.rhs:                                         ; preds = %for.inc
  %idxprom5 = sext i8 %8 to i64
  %arrayidx6 = getelementptr inbounds i16, i16* %2, i64 %idxprom5
  %6 = load i16, i16* %arrayidx6, align 2, !tbaa !40
  %7 = and i16 %6, 8192
  %tobool8.not = icmp eq i16 %7, 0
  br i1 %tobool8.not, label %if.end, label %for.inc, !llvm.loop !971

for.inc:                                          ; preds = %land.rhs.lr.ph, %land.rhs
  %indvars.iv132162 = phi i64 [ %indvars.iv.next133, %land.rhs ], [ %3, %land.rhs.lr.ph ]
  %indvars.iv.next133 = add i64 %indvars.iv132162, 1
  %arrayidx = getelementptr inbounds i8, i8* %line, i64 %indvars.iv.next133
  %8 = load i8, i8* %arrayidx, align 1, !tbaa !63
  %tobool.not = icmp eq i8 %8, 0
  br i1 %tobool.not, label %cleanup.loopexit120, label %land.rhs, !llvm.loop !971

if.end:                                           ; preds = %land.rhs, %land.rhs.lr.ph
  %indvars.iv132.lcssa = phi i64 [ %3, %land.rhs.lr.ph ], [ %indvars.iv.next133, %land.rhs ]
  %idxprom105.lcssa = phi i64 [ %idxprom101117, %land.rhs.lr.ph ], [ %indvars.iv.next133, %land.rhs ]
  %exitcond.not = icmp eq i64 %indvars.iv136, %wide.trip.count
  br i1 %exitcond.not, label %for.cond14.preheader, label %if.end29

for.cond14.preheader:                             ; preds = %if.end
  %9 = trunc i64 %indvars.iv132.lcssa to i32
  %cmp1599 = icmp sgt i32 %9, -1
  br i1 %cmp1599, label %for.body17.preheader, label %cleanup

for.body17.preheader:                             ; preds = %for.cond14.preheader
  %10 = and i64 %indvars.iv132.lcssa, 4294967295
  br label %for.body17

for.body17:                                       ; preds = %for.body17.preheader, %for.inc27
  %indvars.iv = phi i64 [ %10, %for.body17.preheader ], [ %indvars.iv.next, %for.inc27 ]
  %arrayidx19 = getelementptr inbounds i8, i8* %line, i64 %indvars.iv
  %11 = load i8, i8* %arrayidx19, align 1, !tbaa !63
  %cmp21 = icmp eq i8 %11, 0
  br i1 %cmp21, label %if.then23, label %for.inc27

if.then23:                                        ; preds = %for.body17
  store i8 32, i8* %arrayidx19, align 1, !tbaa !63
  br label %for.inc27

for.inc27:                                        ; preds = %for.body17, %if.then23
  %cmp15 = icmp sgt i64 %indvars.iv, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  br i1 %cmp15, label %for.body17, label %cleanup, !llvm.loop !972

if.end29:                                         ; preds = %if.end
  %arrayidx.le = getelementptr inbounds i8, i8* %line, i64 %idxprom105.lcssa
  %indvars.iv.next137 = add nuw nsw i64 %indvars.iv136, 1
  %arrayidx32 = getelementptr inbounds i8*, i8** %ptr, i64 %indvars.iv136
  store i8* %arrayidx.le, i8** %arrayidx32, align 8, !tbaa !74
  %sext = shl i64 %indvars.iv132.lcssa, 32
  %idxprom34107 = ashr exact i64 %sext, 32
  %arrayidx35108 = getelementptr inbounds i8, i8* %line, i64 %idxprom34107
  %12 = load i8, i8* %arrayidx35108, align 1, !tbaa !63
  %tobool37.not109 = icmp eq i8 %12, 0
  br i1 %tobool37.not109, label %cleanup.loopexit139, label %land.rhs38.lr.ph

land.rhs38.lr.ph:                                 ; preds = %if.end29
  %13 = load i16*, i16** %call, align 8, !tbaa !74
  br label %land.rhs38

land.rhs38:                                       ; preds = %land.rhs38.lr.ph, %for.inc50
  %indvars.iv134 = phi i64 [ %idxprom34107, %land.rhs38.lr.ph ], [ %indvars.iv.next135, %for.inc50 ]
  %14 = phi i8 [ %12, %land.rhs38.lr.ph ], [ %17, %for.inc50 ]
  %idxprom43 = sext i8 %14 to i64
  %arrayidx44 = getelementptr inbounds i16, i16* %13, i64 %idxprom43
  %15 = load i16, i16* %arrayidx44, align 2, !tbaa !40
  %16 = and i16 %15, 8192
  %tobool47.not = icmp eq i16 %16, 0
  br i1 %tobool47.not, label %for.inc50, label %if.end57

for.inc50:                                        ; preds = %land.rhs38
  %indvars.iv.next135 = add i64 %indvars.iv134, 1
  %arrayidx35 = getelementptr inbounds i8, i8* %line, i64 %indvars.iv.next135
  %17 = load i8, i8* %arrayidx35, align 1, !tbaa !63
  %tobool37.not = icmp eq i8 %17, 0
  br i1 %tobool37.not, label %cleanup.loopexit138, label %land.rhs38, !llvm.loop !973

if.end57:                                         ; preds = %land.rhs38
  %18 = trunc i64 %indvars.iv134 to i32
  %arrayidx35.le = getelementptr inbounds i8, i8* %line, i64 %indvars.iv134
  %inc58 = add nsw i32 %18, 1
  store i8 0, i8* %arrayidx35.le, align 1, !tbaa !63
  %idxprom101 = sext i32 %inc58 to i64
  %arrayidx102 = getelementptr inbounds i8, i8* %line, i64 %idxprom101
  %19 = load i8, i8* %arrayidx102, align 1, !tbaa !63
  %tobool.not103 = icmp eq i8 %19, 0
  br i1 %tobool.not103, label %cleanup.loopexit139, label %land.rhs.lr.ph, !llvm.loop !974

cleanup.loopexit120:                              ; preds = %for.inc
  %20 = trunc i64 %indvars.iv136 to i32
  br label %cleanup

cleanup.loopexit138:                              ; preds = %for.inc50
  %21 = trunc i64 %indvars.iv.next137 to i32
  br label %cleanup

cleanup.loopexit139:                              ; preds = %if.end29, %if.end57
  %22 = trunc i64 %indvars.iv.next137 to i32
  br label %cleanup

cleanup:                                          ; preds = %for.inc27, %cleanup.loopexit139, %cleanup.loopexit138, %cleanup.loopexit120, %entry, %for.cond14.preheader
  %retval.0 = phi i32 [ -1, %for.cond14.preheader ], [ 0, %entry ], [ %20, %cleanup.loopexit120 ], [ %21, %cleanup.loopexit138 ], [ %22, %cleanup.loopexit139 ], [ -1, %for.inc27 ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nosync nounwind optsize readnone willreturn
declare i16** @__ctype_b_loc() local_unnamed_addr #20

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #10

; Function Attrs: noinline nounwind optsize uwtable
define %struct.fe_t* @fe_init(%struct.param_t* %P) local_unnamed_addr #0 {
entry:
  %call = tail call noalias align 16 dereferenceable_or_null(80) i8* @calloc(i64 1, i64 80) #34
  %0 = bitcast i8* %call to %struct.fe_t*
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %2 = tail call i64 @fwrite(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1098, i64 0, i64 0), i64 44, i64 1, %struct._IO_FILE* %1) #39
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @fe_parse_general_params(%struct.param_t* %P, %struct.fe_t* nonnull %0) #34
  %SAMPLING_RATE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %0, i64 0, i32 0
  %3 = load float, float* %SAMPLING_RATE, align 16, !tbaa !196
  %FRAME_RATE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %0, i64 0, i32 1
  %4 = load i32, i32* %FRAME_RATE, align 4, !tbaa !975
  %conv = sitofp i32 %4 to float
  %div = fdiv float %3, %conv
  %conv2 = fpext float %div to double
  %add = fadd double %conv2, 5.000000e-01
  %conv3 = fptosi double %add to i32
  %FRAME_SHIFT = getelementptr inbounds %struct.fe_t, %struct.fe_t* %0, i64 0, i32 2
  store i32 %conv3, i32* %FRAME_SHIFT, align 8, !tbaa !221
  %WINDOW_LENGTH = getelementptr inbounds %struct.fe_t, %struct.fe_t* %0, i64 0, i32 3
  %5 = load float, float* %WINDOW_LENGTH, align 4, !tbaa !976
  %mul = fmul float %3, %5
  %conv5 = fpext float %mul to double
  %add6 = fadd double %conv5, 5.000000e-01
  %conv7 = fptosi double %add6 to i32
  %FRAME_SIZE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %0, i64 0, i32 4
  store i32 %conv7, i32* %FRAME_SIZE, align 16, !tbaa !188
  %PRIOR = getelementptr inbounds %struct.fe_t, %struct.fe_t* %0, i64 0, i32 13
  store i16 0, i16* %PRIOR, align 4, !tbaa !977
  %conv9 = sext i32 %conv7 to i64
  %call10 = tail call noalias align 16 i8* @calloc(i64 %conv9, i64 2) #34
  %OVERFLOW_SAMPS = getelementptr inbounds %struct.fe_t, %struct.fe_t* %0, i64 0, i32 9
  %6 = bitcast i16** %OVERFLOW_SAMPS to i8**
  store i8* %call10, i8** %6, align 8, !tbaa !978
  %call13 = tail call noalias align 16 i8* @calloc(i64 %conv9, i64 8) #34
  %HAMMING_WINDOW = getelementptr inbounds %struct.fe_t, %struct.fe_t* %0, i64 0, i32 14
  %7 = bitcast double** %HAMMING_WINDOW to i8**
  store i8* %call13, i8** %7, align 8, !tbaa !979
  %cmp15 = icmp eq i8* %call10, null
  %cmp18 = icmp eq i8* %call13, null
  %or.cond = or i1 %cmp15, %cmp18
  br i1 %or.cond, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %9 = tail call i64 @fwrite(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1098, i64 0, i64 0), i64 44, i64 1, %struct._IO_FILE* %8) #39
  br label %cleanup

if.end22:                                         ; preds = %if.end
  %10 = bitcast i8* %call13 to double*
  tail call void @fe_create_hamming(double* nonnull %10, i32 %conv7) #34
  %FB_TYPE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %0, i64 0, i32 6
  %11 = load i32, i32* %FB_TYPE, align 8, !tbaa !184
  %cmp25 = icmp eq i32 %11, 1
  br i1 %cmp25, label %if.then27, label %if.else

if.then27:                                        ; preds = %if.end22
  %call28 = tail call noalias align 16 dereferenceable_or_null(64) i8* @calloc(i64 1, i64 64) #34
  %MEL_FB = getelementptr inbounds %struct.fe_t, %struct.fe_t* %0, i64 0, i32 11
  %12 = bitcast %struct.melfb_t** %MEL_FB to i8**
  store i8* %call28, i8** %12, align 8, !tbaa !187
  %cmp29 = icmp eq i8* %call28, null
  br i1 %cmp29, label %if.then31, label %if.end33

if.then31:                                        ; preds = %if.then27
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %14 = tail call i64 @fwrite(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1098, i64 0, i64 0), i64 44, i64 1, %struct._IO_FILE* %13) #39
  br label %cleanup

if.end33:                                         ; preds = %if.then27
  %15 = bitcast i8* %call28 to %struct.melfb_t*
  tail call void @fe_parse_melfb_params(%struct.param_t* %P, %struct.melfb_t* nonnull %15) #34
  %16 = load %struct.melfb_t*, %struct.melfb_t** %MEL_FB, align 8, !tbaa !187
  %call36 = tail call i32 @fe_build_melfilters(%struct.melfb_t* %16) #34
  %17 = load %struct.melfb_t*, %struct.melfb_t** %MEL_FB, align 8, !tbaa !187
  %call38 = tail call i32 @fe_compute_melcosine(%struct.melfb_t* %17) #34
  br label %cleanup

if.else:                                          ; preds = %if.end22
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %19 = tail call i64 @fwrite(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1.1099, i64 0, i64 0), i64 48, i64 1, %struct._IO_FILE* %18) #39
  br label %cleanup

cleanup:                                          ; preds = %if.end33, %if.else, %if.then31, %if.then20, %if.then
  %retval.0 = phi %struct.fe_t* [ null, %if.then ], [ null, %if.then20 ], [ null, %if.then31 ], [ %0, %if.end33 ], [ null, %if.else ]
  ret %struct.fe_t* %retval.0
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize uwtable willreturn
define i32 @fe_start_utt(%struct.fe_t* nocapture %FE) local_unnamed_addr #27 {
entry:
  %NUM_OVERFLOW_SAMPS = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 10
  store i32 0, i32* %NUM_OVERFLOW_SAMPS, align 8, !tbaa !222
  %OVERFLOW_SAMPS = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 9
  %0 = bitcast i16** %OVERFLOW_SAMPS to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !978
  %FRAME_SIZE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 4
  %2 = load i32, i32* %FRAME_SIZE, align 8, !tbaa !188
  %conv = sext i32 %2 to i64
  %mul = shl nsw i64 %conv, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %1, i8 0, i64 %mul, i1 false)
  %START_FLAG = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 12
  store i32 1, i32* %START_FLAG, align 8, !tbaa !223
  %PRIOR = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 13
  store i16 0, i16* %PRIOR, align 4, !tbaa !977
  ret i32 0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @fe_process_utt(%struct.fe_t* %FE, i16* %spch, i32 %nsamps, float*** nocapture %cep_block) local_unnamed_addr #0 {
entry:
  %NUM_OVERFLOW_SAMPS = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 10
  %0 = load i32, i32* %NUM_OVERFLOW_SAMPS, align 8, !tbaa !222
  %add = add nsw i32 %0, %nsamps
  %FRAME_SIZE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 4
  %1 = load i32, i32* %FRAME_SIZE, align 8, !tbaa !188
  %cmp.not = icmp slt i32 %add, %1
  br i1 %cmp.not, label %if.else123, label %if.then

if.then:                                          ; preds = %entry
  %cmp2 = icmp sgt i32 %0, 0
  br i1 %cmp2, label %if.then3, label %if.end19

if.then3:                                         ; preds = %if.then
  %conv = sext i32 %add to i64
  %mul = shl nsw i64 %conv, 1
  %call = tail call noalias align 16 i8* @malloc(i64 %mul) #34
  %2 = bitcast i8* %call to i16*
  %cmp6 = icmp eq i8* %call, null
  br i1 %cmp6, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.then3
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %4 = tail call i64 @fwrite(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.1104, i64 0, i64 0), i64 51, i64 1, %struct._IO_FILE* %3) #39
  tail call void @exit(i32 0) #40
  br label %UnifiedUnreachableBlock

if.end:                                           ; preds = %if.then3
  %OVERFLOW_SAMPS = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 9
  %5 = bitcast i16** %OVERFLOW_SAMPS to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !978
  %conv11235 = zext i32 %0 to i64
  %mul12 = shl nuw nsw i64 %conv11235, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %call, i8* align 2 %6, i64 %mul12, i1 false)
  %add.ptr = getelementptr inbounds i16, i16* %2, i64 %conv11235
  %7 = bitcast i16* %add.ptr to i8*
  %8 = bitcast i16* %spch to i8*
  %conv14 = sext i32 %nsamps to i64
  %mul15 = shl nsw i64 %conv14, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %7, i8* align 2 %8, i64 %mul15, i1 false)
  store i32 0, i32* %NUM_OVERFLOW_SAMPS, align 8, !tbaa !222
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then
  %nsamps.addr.0 = phi i32 [ %add, %if.end ], [ %nsamps, %if.then ]
  %tmp_spch.0 = phi i16* [ %2, %if.end ], [ %spch, %if.then ]
  %cmp22.not242 = icmp sgt i32 %1, %nsamps.addr.0
  br i1 %cmp22.not242, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end19
  %FRAME_SHIFT = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 2
  %9 = load i32, i32* %FRAME_SHIFT, align 8, !tbaa !221
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %frame_start.0244 = phi i32 [ 0, %for.body.lr.ph ], [ %add24, %for.body ]
  %frame_count.0243 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %inc = add nuw nsw i32 %frame_count.0243, 1
  %add24 = add nsw i32 %9, %frame_start.0244
  %add21 = add nsw i32 %add24, %1
  %cmp22.not = icmp sgt i32 %add21, %nsamps.addr.0
  br i1 %cmp22.not, label %for.end, label %for.body, !llvm.loop !980

for.end:                                          ; preds = %for.body, %if.end19
  %frame_count.0.lcssa = phi i32 [ 0, %if.end19 ], [ %inc, %for.body ]
  %add25 = add nuw nsw i32 %frame_count.0.lcssa, 1
  %NUM_CEPSTRA = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 7
  %10 = load i32, i32* %NUM_CEPSTRA, align 4, !tbaa !199
  %call26 = tail call i8** @fe_create_2d(i32 %add25, i32 %10, i32 4) #34
  %11 = bitcast i8** %call26 to float**
  %cmp27 = icmp eq i8** %call26, null
  br i1 %cmp27, label %if.then29, label %if.end34

if.then29:                                        ; preds = %for.end
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %conv31 = zext i32 %add25 to i64
  %13 = load i32, i32* %NUM_CEPSTRA, align 4, !tbaa !199
  %call33 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.3.1105, i64 0, i64 0), i64 %conv31, i32 %13, i64 4) #35
  tail call void @exit(i32 0) #40
  br label %UnifiedUnreachableBlock

if.end34:                                         ; preds = %for.end
  %sub = add nsw i32 %frame_count.0.lcssa, -1
  %FRAME_SHIFT35 = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 2
  %14 = load i32, i32* %FRAME_SHIFT35, align 8, !tbaa !221
  %mul36 = mul nsw i32 %14, %sub
  %15 = load i32, i32* %FRAME_SIZE, align 8, !tbaa !188
  %add38 = add nsw i32 %mul36, %15
  %conv39 = sext i32 %add38 to i64
  %call40 = tail call noalias align 16 i8* @calloc(i64 %conv39, i64 8) #34
  %16 = bitcast i8* %call40 to double*
  %cmp41 = icmp eq i8* %call40, null
  br i1 %cmp41, label %if.then43, label %if.end45

if.then43:                                        ; preds = %if.end34
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %18 = tail call i64 @fwrite(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.1104, i64 0, i64 0), i64 51, i64 1, %struct._IO_FILE* %17) #39
  tail call void @exit(i32 0) #40
  br label %UnifiedUnreachableBlock

if.end45:                                         ; preds = %if.end34
  %PRE_EMPHASIS_ALPHA = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 8
  %19 = load float, float* %PRE_EMPHASIS_ALPHA, align 8, !tbaa !981
  %cmp47 = fcmp une float %19, 0.000000e+00
  br i1 %cmp47, label %if.then49, label %if.else

if.then49:                                        ; preds = %if.end45
  %PRIOR = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 13
  %20 = load i16, i16* %PRIOR, align 4, !tbaa !977
  tail call void @fe_pre_emphasis(i16* %tmp_spch.0, double* nonnull %16, i32 %add38, float %19, i16 signext %20) #34
  br label %if.end51

if.else:                                          ; preds = %if.end45
  tail call void @fe_short_to_double(i16* %tmp_spch.0, double* nonnull %16, i32 %add38) #34
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.then49
  %21 = load i32, i32* %FRAME_SIZE, align 8, !tbaa !188
  %conv53 = sext i32 %21 to i64
  %call54 = tail call noalias align 16 i8* @calloc(i64 %conv53, i64 8) #34
  %22 = bitcast i8* %call54 to double*
  %23 = load i32, i32* %NUM_CEPSTRA, align 4, !tbaa !199
  %conv56 = sext i32 %23 to i64
  %call57 = tail call noalias align 16 i8* @calloc(i64 %conv56, i64 8) #34
  %24 = bitcast i8* %call57 to double*
  %cmp58 = icmp eq i8* %call54, null
  %cmp60 = icmp eq i8* %call57, null
  %or.cond = or i1 %cmp58, %cmp60
  br i1 %or.cond, label %if.then62, label %for.cond65.preheader

for.cond65.preheader:                             ; preds = %if.end51
  %HAMMING_WINDOW = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 14
  %cmp66240.not = icmp eq i32 %frame_count.0.lcssa, 0
  br i1 %cmp66240.not, label %for.end100, label %for.cond69.preheader.preheader

for.cond69.preheader.preheader:                   ; preds = %for.cond65.preheader
  %wide.trip.count249 = zext i32 %frame_count.0.lcssa to i64
  br label %for.cond69.preheader

if.then62:                                        ; preds = %if.end51
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %26 = tail call i64 @fwrite(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.1104, i64 0, i64 0), i64 51, i64 1, %struct._IO_FILE* %25) #39
  tail call void @exit(i32 0) #40
  br label %UnifiedUnreachableBlock

for.cond69.preheader:                             ; preds = %for.inc98.for.cond69.preheader_crit_edge, %for.cond69.preheader.preheader
  %27 = phi i32 [ %21, %for.cond69.preheader.preheader ], [ %.pre, %for.inc98.for.cond69.preheader_crit_edge ]
  %indvars.iv247 = phi i64 [ 0, %for.cond69.preheader.preheader ], [ %indvars.iv.next248, %for.inc98.for.cond69.preheader_crit_edge ]
  %cmp71236 = icmp sgt i32 %27, 0
  br i1 %cmp71236, label %for.body73.lr.ph, label %for.end81

for.body73.lr.ph:                                 ; preds = %for.cond69.preheader
  %28 = load i32, i32* %FRAME_SHIFT35, align 8, !tbaa !221
  %29 = trunc i64 %indvars.iv247 to i32
  %30 = mul i32 %28, %29
  %31 = sext i32 %30 to i64
  %32 = shl nsw i64 %31, 3
  %scevgep = getelementptr i8, i8* %call40, i64 %32
  %33 = zext i32 %27 to i64
  %34 = shl nuw nsw i64 %33, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %call54, i8* align 8 %scevgep, i64 %34, i1 false)
  br label %for.end81

for.end81:                                        ; preds = %for.body73.lr.ph, %for.cond69.preheader
  %35 = load double*, double** %HAMMING_WINDOW, align 8, !tbaa !979
  tail call void @fe_hamming_window(double* %22, double* %35, i32 %27) #34
  tail call void @fe_frame_to_fea(%struct.fe_t* nonnull %FE, double* %22, double* %24) #34
  %36 = load i32, i32* %NUM_CEPSTRA, align 4, !tbaa !199
  %cmp85238 = icmp sgt i32 %36, 0
  br i1 %cmp85238, label %for.body87.lr.ph, label %for.inc98

for.body87.lr.ph:                                 ; preds = %for.end81
  %arrayidx92234 = getelementptr inbounds i8*, i8** %call26, i64 %indvars.iv247
  %arrayidx92 = bitcast i8** %arrayidx92234 to float**
  %37 = load float*, float** %arrayidx92, align 8, !tbaa !74
  %wide.trip.count = zext i32 %36 to i64
  br label %for.body87

for.body87:                                       ; preds = %for.body87.lr.ph, %for.body87
  %indvars.iv = phi i64 [ 0, %for.body87.lr.ph ], [ %indvars.iv.next, %for.body87 ]
  %arrayidx89 = getelementptr inbounds double, double* %24, i64 %indvars.iv
  %38 = load double, double* %arrayidx89, align 8, !tbaa !96
  %conv90 = fptrunc double %38 to float
  %arrayidx94 = getelementptr inbounds float, float* %37, i64 %indvars.iv
  store float %conv90, float* %arrayidx94, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.inc98, label %for.body87, !llvm.loop !982

for.inc98:                                        ; preds = %for.body87, %for.end81
  %indvars.iv.next248 = add nuw nsw i64 %indvars.iv247, 1
  %exitcond250.not = icmp eq i64 %indvars.iv.next248, %wide.trip.count249
  br i1 %exitcond250.not, label %for.end100, label %for.inc98.for.cond69.preheader_crit_edge, !llvm.loop !983

for.inc98.for.cond69.preheader_crit_edge:         ; preds = %for.inc98
  %.pre = load i32, i32* %FRAME_SIZE, align 8, !tbaa !188
  br label %for.cond69.preheader

for.end100:                                       ; preds = %for.inc98, %for.cond65.preheader
  %cmp101 = icmp slt i32 %add38, %nsamps.addr.0
  br i1 %cmp101, label %if.then103, label %if.end118

if.then103:                                       ; preds = %for.end100
  %39 = load i32, i32* %FRAME_SHIFT35, align 8, !tbaa !221
  %mul105 = mul nsw i32 %39, %frame_count.0.lcssa
  %OVERFLOW_SAMPS106 = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 9
  %40 = bitcast i16** %OVERFLOW_SAMPS106 to i8**
  %41 = load i8*, i8** %40, align 8, !tbaa !978
  %idx.ext107 = sext i32 %mul105 to i64
  %add.ptr108 = getelementptr inbounds i16, i16* %tmp_spch.0, i64 %idx.ext107
  %42 = bitcast i16* %add.ptr108 to i8*
  %sub109 = sub nsw i32 %nsamps.addr.0, %mul105
  %conv110 = sext i32 %sub109 to i64
  %mul111 = shl nsw i64 %conv110, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %41, i8* align 2 %42, i64 %mul111, i1 false)
  store i32 %sub109, i32* %NUM_OVERFLOW_SAMPS, align 8, !tbaa !222
  %sub114 = add nsw i32 %mul105, -1
  %idxprom115 = sext i32 %sub114 to i64
  %arrayidx116 = getelementptr inbounds i16, i16* %tmp_spch.0, i64 %idxprom115
  %43 = load i16, i16* %arrayidx116, align 2, !tbaa !40
  %PRIOR117 = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 13
  store i16 %43, i16* %PRIOR117, align 4, !tbaa !977
  br label %if.end118

if.end118:                                        ; preds = %if.then103, %for.end100
  %cmp119.not = icmp eq i16* %tmp_spch.0, %spch
  br i1 %cmp119.not, label %if.end122, label %if.then121

if.then121:                                       ; preds = %if.end118
  %44 = bitcast i16* %tmp_spch.0 to i8*
  tail call void @free(i8* %44) #34
  br label %if.end122

if.end122:                                        ; preds = %if.then121, %if.end118
  tail call void @free(i8* %call40) #34
  tail call void @free(i8* %call54) #34
  tail call void @free(i8* %call57) #34
  br label %if.end132

if.else123:                                       ; preds = %entry
  %OVERFLOW_SAMPS124 = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 9
  %45 = load i16*, i16** %OVERFLOW_SAMPS124, align 8, !tbaa !978
  %idx.ext126 = sext i32 %0 to i64
  %add.ptr127 = getelementptr inbounds i16, i16* %45, i64 %idx.ext126
  %46 = bitcast i16* %add.ptr127 to i8*
  %47 = bitcast i16* %spch to i8*
  %conv128 = sext i32 %nsamps to i64
  %mul129 = shl nsw i64 %conv128, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %46, i8* align 2 %47, i64 %mul129, i1 false)
  %48 = load i32, i32* %NUM_OVERFLOW_SAMPS, align 8, !tbaa !222
  %add131 = add nsw i32 %48, %nsamps
  store i32 %add131, i32* %NUM_OVERFLOW_SAMPS, align 8, !tbaa !222
  br label %if.end132

if.end132:                                        ; preds = %if.else123, %if.end122
  %frame_count.1 = phi i32 [ %frame_count.0.lcssa, %if.end122 ], [ 0, %if.else123 ]
  %cep.0 = phi float** [ %11, %if.end122 ], [ null, %if.else123 ]
  store float** %cep.0, float*** %cep_block, align 8, !tbaa !74
  ret i32 %frame_count.1

UnifiedUnreachableBlock:                          ; preds = %if.then62, %if.then43, %if.then29, %if.then8
  unreachable
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @fe_end_utt(%struct.fe_t* %FE, float* nocapture %cepvector) local_unnamed_addr #0 {
entry:
  %NUM_OVERFLOW_SAMPS = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 10
  %0 = load i32, i32* %NUM_OVERFLOW_SAMPS, align 8, !tbaa !222
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end35

if.then:                                          ; preds = %entry
  %FRAME_SIZE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 4
  %1 = load i32, i32* %FRAME_SIZE, align 8, !tbaa !188
  %sub = sub nsw i32 %1, %0
  %OVERFLOW_SAMPS = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 9
  %2 = load i16*, i16** %OVERFLOW_SAMPS, align 8, !tbaa !978
  %idx.ext74 = zext i32 %0 to i64
  %add.ptr = getelementptr inbounds i16, i16* %2, i64 %idx.ext74
  %3 = bitcast i16* %add.ptr to i8*
  %conv = sext i32 %sub to i64
  %mul = shl nsw i64 %conv, 1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %3, i8 0, i64 %mul, i1 false)
  %4 = load i32, i32* %NUM_OVERFLOW_SAMPS, align 8, !tbaa !222
  %add = add nsw i32 %4, %sub
  store i32 %add, i32* %NUM_OVERFLOW_SAMPS, align 8, !tbaa !222
  %5 = load i32, i32* %FRAME_SIZE, align 8, !tbaa !188
  %conv5 = sext i32 %5 to i64
  %call = tail call noalias align 16 i8* @calloc(i64 %conv5, i64 8) #34
  %6 = bitcast i8* %call to double*
  %cmp6 = icmp eq i8* %call, null
  br i1 %cmp6, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.then
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %8 = tail call i64 @fwrite(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.1108, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %7) #39
  tail call void @exit(i32 0) #40
  br label %UnifiedUnreachableBlock

if.end:                                           ; preds = %if.then
  %PRE_EMPHASIS_ALPHA = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 8
  %9 = load float, float* %PRE_EMPHASIS_ALPHA, align 8, !tbaa !981
  %cmp11 = fcmp une float %9, 0.000000e+00
  %10 = load i16*, i16** %OVERFLOW_SAMPS, align 8, !tbaa !978
  br i1 %cmp11, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.end
  %PRIOR = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 13
  %11 = load i16, i16* %PRIOR, align 4, !tbaa !977
  tail call void @fe_pre_emphasis(i16* %10, double* nonnull %6, i32 %5, float %9, i16 signext %11) #34
  br label %if.end19

if.else:                                          ; preds = %if.end
  tail call void @fe_short_to_double(i16* %10, double* nonnull %6, i32 %5) #34
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then13
  %NUM_CEPSTRA = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 7
  %12 = load i32, i32* %NUM_CEPSTRA, align 4, !tbaa !199
  %conv20 = sext i32 %12 to i64
  %call21 = tail call noalias align 16 i8* @calloc(i64 %conv20, i64 8) #34
  %13 = bitcast i8* %call21 to double*
  %cmp22 = icmp eq i8* %call21, null
  br i1 %cmp22, label %if.then24, label %if.end26

if.then24:                                        ; preds = %if.end19
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %15 = tail call i64 @fwrite(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.1108, i64 0, i64 0), i64 47, i64 1, %struct._IO_FILE* %14) #39
  tail call void @exit(i32 0) #40
  br label %UnifiedUnreachableBlock

if.end26:                                         ; preds = %if.end19
  %HAMMING_WINDOW = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 14
  %16 = load double*, double** %HAMMING_WINDOW, align 8, !tbaa !979
  %17 = load i32, i32* %FRAME_SIZE, align 8, !tbaa !188
  tail call void @fe_hamming_window(double* nonnull %6, double* %16, i32 %17) #34
  tail call void @fe_frame_to_fea(%struct.fe_t* nonnull %FE, double* nonnull %6, double* nonnull %13) #34
  %18 = load i32, i32* %NUM_CEPSTRA, align 4, !tbaa !199
  %cmp2975 = icmp sgt i32 %18, 0
  br i1 %cmp2975, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %if.end26
  %wide.trip.count = zext i32 %18 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds double, double* %13, i64 %indvars.iv
  %19 = load double, double* %arrayidx, align 8, !tbaa !96
  %conv31 = fptrunc double %19 to float
  %arrayidx33 = getelementptr inbounds float, float* %cepvector, i64 %indvars.iv
  store float %conv31, float* %arrayidx33, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !984

for.end:                                          ; preds = %for.body, %if.end26
  tail call void @free(i8* nonnull %call21) #34
  tail call void @free(i8* %call) #34
  br label %if.end35

if.end35:                                         ; preds = %entry, %for.end
  %frame_count.0 = phi i32 [ 1, %for.end ], [ 0, %entry ]
  store i32 0, i32* %NUM_OVERFLOW_SAMPS, align 8, !tbaa !222
  %START_FLAG = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 12
  store i32 0, i32* %START_FLAG, align 8, !tbaa !223
  ret i32 %frame_count.0

UnifiedUnreachableBlock:                          ; preds = %if.then24, %if.then8
  unreachable
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @fe_close(%struct.fe_t* nocapture %FE) local_unnamed_addr #0 {
entry:
  %FB_TYPE = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 6
  %0 = load i32, i32* %FB_TYPE, align 8, !tbaa !184
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %MEL_FB = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 11
  %1 = load %struct.melfb_t*, %struct.melfb_t** %MEL_FB, align 8, !tbaa !187
  %filter_coeffs = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %1, i64 0, i32 6
  %2 = bitcast float*** %filter_coeffs to i8***
  %3 = load i8**, i8*** %2, align 8, !tbaa !163
  tail call void @fe_free_2d(i8** %3) #34
  %4 = load %struct.melfb_t*, %struct.melfb_t** %MEL_FB, align 8, !tbaa !187
  %mel_cosine = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %4, i64 0, i32 7
  %5 = bitcast float*** %mel_cosine to i8***
  %6 = load i8**, i8*** %5, align 8, !tbaa !177
  tail call void @fe_free_2d(i8** %6) #34
  %7 = load %struct.melfb_t*, %struct.melfb_t** %MEL_FB, align 8, !tbaa !187
  %left_apex = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %7, i64 0, i32 8
  %8 = bitcast float** %left_apex to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !164
  tail call void @free(i8* %9) #34
  %10 = load %struct.melfb_t*, %struct.melfb_t** %MEL_FB, align 8, !tbaa !187
  %width = getelementptr inbounds %struct.melfb_t, %struct.melfb_t* %10, i64 0, i32 9
  %11 = bitcast i32** %width to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !165
  tail call void @free(i8* %12) #34
  %13 = bitcast %struct.melfb_t** %MEL_FB to i8**
  %14 = load i8*, i8** %13, align 8, !tbaa !187
  tail call void @free(i8* %14) #34
  br label %if.end

if.else:                                          ; preds = %entry
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %16 = tail call i64 @fwrite(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1.1099, i64 0, i64 0), i64 48, i64 1, %struct._IO_FILE* %15) #39
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %OVERFLOW_SAMPS = getelementptr inbounds %struct.fe_t, %struct.fe_t* %FE, i64 0, i32 9
  %17 = bitcast i16** %OVERFLOW_SAMPS to i8**
  %18 = load i8*, i8** %17, align 8, !tbaa !978
  tail call void @free(i8* %18) #34
  %19 = bitcast %struct.fe_t* %FE to i8*
  tail call void @free(i8* %19) #34
  ret i32 0
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @_E__pr_header(i8* %f, i64 %ln, i8* %msg) local_unnamed_addr #14 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call = tail call i32 @fflush(%struct._IO_FILE* %0) #36
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1113, i64 0, i64 0), i8* %msg, i8* %f, i64 %ln) #35
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @_E__pr_info_header(i8* %f, i64 %ln, i8* %msg) local_unnamed_addr #14 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !74
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.1116, i64 0, i64 0), i8* %msg, i8* %f, i64 %ln) #36
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @_E__pr_warn(i8* nocapture readonly %fmt, ...) local_unnamed_addr #14 {
entry:
  %pvar = alloca [1 x %struct.__va_list_tag], align 16
  %0 = bitcast [1 x %struct.__va_list_tag]* %pvar to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #38
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %pvar, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %0)
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call = call i32 @vfprintf(%struct._IO_FILE* %1, i8* %fmt, %struct.__va_list_tag* nonnull %arraydecay) #35
  call void @llvm.va_end(i8* nonnull %0)
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call5 = call i32 @fflush(%struct._IO_FILE* %2) #36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #38
  ret void
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #32

; Function Attrs: nofree nounwind optsize
declare noundef i32 @vfprintf(%struct._IO_FILE* nocapture noundef, i8* nocapture noundef readonly, %struct.__va_list_tag* noundef) local_unnamed_addr #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #32

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @_E__pr_info(i8* nocapture readonly %fmt, ...) local_unnamed_addr #14 {
entry:
  %pvar = alloca [1 x %struct.__va_list_tag], align 16
  %0 = bitcast [1 x %struct.__va_list_tag]* %pvar to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #38
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %pvar, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %0)
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !tbaa !74
  %call = call i32 @vfprintf(%struct._IO_FILE* %1, i8* %fmt, %struct.__va_list_tag* nonnull %arraydecay) #36
  call void @llvm.va_end(i8* nonnull %0)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #38
  ret void
}

; Function Attrs: noinline noreturn nounwind optsize uwtable
define void @_E__die_error(i8* nocapture readonly %fmt, ...) local_unnamed_addr #33 {
entry:
  %pvar = alloca [1 x %struct.__va_list_tag], align 16
  %0 = bitcast [1 x %struct.__va_list_tag]* %pvar to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #38
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %pvar, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %0)
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call = call i32 @vfprintf(%struct._IO_FILE* %1, i8* %fmt, %struct.__va_list_tag* nonnull %arraydecay) #35
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call3 = call i32 @fflush(%struct._IO_FILE* %2) #36
  call void @llvm.va_end(i8* nonnull %0)
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call6 = call i32 @fflush(%struct._IO_FILE* %3) #36
  call void @exit(i32 -1) #40
  unreachable
}

; Function Attrs: noinline noreturn nounwind optsize uwtable
define void @_E__fatal_sys_error(i8* nocapture readonly %fmt, ...) local_unnamed_addr #33 {
entry:
  %pvar = alloca [1 x %struct.__va_list_tag], align 16
  %0 = bitcast [1 x %struct.__va_list_tag]* %pvar to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #38
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %pvar, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %0)
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call = call i32 @vfprintf(%struct._IO_FILE* %1, i8* %fmt, %struct.__va_list_tag* nonnull %arraydecay) #35
  call void @llvm.va_end(i8* nonnull %0)
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call5 = call i32 @_IO_putc(i32 59, %struct._IO_FILE* %2) #36
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call6 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %3) #36
  call void @perror(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.1125, i64 0, i64 0)) #35
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call7 = call i32 @fflush(%struct._IO_FILE* %4) #36
  %call8 = tail call i32* @__errno_location() #41
  %5 = load i32, i32* %call8, align 4, !tbaa !37
  call void @exit(i32 %5) #40
  unreachable
}

; Function Attrs: nofree nounwind optsize
declare noundef i32 @_IO_putc(i32 noundef, %struct._IO_FILE* nocapture noundef) local_unnamed_addr #2

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @_E__sys_error(i8* nocapture readonly %fmt, ...) local_unnamed_addr #14 {
entry:
  %pvar = alloca [1 x %struct.__va_list_tag], align 16
  %0 = bitcast [1 x %struct.__va_list_tag]* %pvar to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #38
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %pvar, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %0)
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call = call i32 @vfprintf(%struct._IO_FILE* %1, i8* %fmt, %struct.__va_list_tag* nonnull %arraydecay) #35
  call void @llvm.va_end(i8* nonnull %0)
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call5 = call i32 @_IO_putc(i32 59, %struct._IO_FILE* %2) #36
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call6 = call i32 @_IO_putc(i32 32, %struct._IO_FILE* %3) #36
  call void @perror(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.1125, i64 0, i64 0)) #35
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call7 = call i32 @fflush(%struct._IO_FILE* %4) #36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #38
  ret void
}

; Function Attrs: noinline noreturn nounwind optsize uwtable
define void @_E__abort_error(i8* nocapture readonly %fmt, ...) local_unnamed_addr #33 {
entry:
  %pvar = alloca [1 x %struct.__va_list_tag], align 16
  %0 = bitcast [1 x %struct.__va_list_tag]* %pvar to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #38
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %pvar, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %0)
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call = call i32 @vfprintf(%struct._IO_FILE* %1, i8* %fmt, %struct.__va_list_tag* nonnull %arraydecay) #35
  call void @llvm.va_end(i8* nonnull %0)
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !74
  %call5 = call i32 @fflush(%struct._IO_FILE* %2) #36
  call void @abort() #40
  unreachable
}

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #8

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @agc_max(float** nocapture readonly %mfc, i32 %n_frame) local_unnamed_addr #13 {
entry:
  %0 = load float*, float** %mfc, align 8, !tbaa !74
  %1 = load float, float* %0, align 4, !tbaa !4
  %cmp32 = icmp sgt i32 %n_frame, 1
  br i1 %cmp32, label %for.body.preheader, label %for.cond8.preheader

for.body.preheader:                               ; preds = %entry
  %wide.trip.count37 = zext i32 %n_frame to i64
  br label %for.body

for.cond8.preheader:                              ; preds = %for.body, %entry
  %maxc0.0.lcssa = phi float [ %1, %entry ], [ %maxc0.1, %for.body ]
  %cmp930 = icmp sgt i32 %n_frame, 0
  br i1 %cmp930, label %for.body10.preheader, label %for.end16

for.body10.preheader:                             ; preds = %for.cond8.preheader
  %wide.trip.count = zext i32 %n_frame to i64
  %sub40 = fsub float %1, %maxc0.0.lcssa
  store float %sub40, float* %0, align 4, !tbaa !4
  %exitcond.not41 = icmp eq i32 %n_frame, 1
  br i1 %exitcond.not41, label %for.end16, label %for.body10.for.body10_crit_edge, !llvm.loop !985

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv35 = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next36, %for.body ]
  %maxc0.033 = phi float [ %1, %for.body.preheader ], [ %maxc0.1, %for.body ]
  %arrayidx2 = getelementptr inbounds float*, float** %mfc, i64 %indvars.iv35
  %2 = load float*, float** %arrayidx2, align 8, !tbaa !74
  %3 = load float, float* %2, align 4, !tbaa !4
  %cmp4 = fcmp ogt float %3, %maxc0.033
  %maxc0.1 = select i1 %cmp4, float %3, float %maxc0.033
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1
  %exitcond38.not = icmp eq i64 %indvars.iv.next36, %wide.trip.count37
  br i1 %exitcond38.not, label %for.cond8.preheader, label %for.body, !llvm.loop !986

for.body10.for.body10_crit_edge:                  ; preds = %for.body10.preheader, %for.body10.for.body10_crit_edge
  %indvars.iv.next42 = phi i64 [ %indvars.iv.next, %for.body10.for.body10_crit_edge ], [ 1, %for.body10.preheader ]
  %arrayidx12.phi.trans.insert = getelementptr inbounds float*, float** %mfc, i64 %indvars.iv.next42
  %.pre = load float*, float** %arrayidx12.phi.trans.insert, align 8, !tbaa !74
  %.pre39 = load float, float* %.pre, align 4, !tbaa !4
  %sub = fsub float %.pre39, %maxc0.0.lcssa
  store float %sub, float* %.pre, align 4, !tbaa !4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next42, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end16, label %for.body10.for.body10_crit_edge, !llvm.loop !985

for.end16:                                        ; preds = %for.body10.for.body10_crit_edge, %for.body10.preheader, %for.cond8.preheader
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @logs3_init(double %base) local_unnamed_addr #0 {
entry:
  %call = tail call i8* @cmd_ln_access(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1132, i64 0, i64 0)) #34
  %0 = bitcast i8* %call to i32*
  %1 = load i32, i32* %0, align 4, !tbaa !37
  store i32 %1, i32* @USE_LOG3_ADD_TABLE, align 4, !tbaa !37
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1133, i64 0, i64 0), i64 99, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1134, i64 0, i64 0)) #34
  %2 = load i32, i32* @USE_LOG3_ADD_TABLE, align 4, !tbaa !37
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3.1135, i64 0, i64 0), double %base, i32 %2) #34
  %cmp = fcmp ugt double %base, 1.000000e+00
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1133, i64 0, i64 0), i64 102, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.1136, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.1137, i64 0, i64 0), double %base) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load i16*, i16** @add_tbl, align 8, !tbaa !74
  %tobool.not = icmp eq i16* %3, null
  br i1 %tobool.not, label %if.end5, label %if.then1

if.then1:                                         ; preds = %if.end
  %4 = load double, double* @B, align 8, !tbaa !96
  %cmp2 = fcmp oeq double %4, %base
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then1
  tail call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1133, i64 0, i64 0), i64 106, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.1138, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7.1139, i64 0, i64 0)) #34
  br label %if.end5

if.else:                                          ; preds = %if.then1
  tail call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1133, i64 0, i64 0), i64 108, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.1136, i64 0, i64 0)) #34
  %5 = load double, double* @B, align 8, !tbaa !96
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.1140, i64 0, i64 0), double %5) #34
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %if.else, %if.end
  store double %base, double* @B, align 8, !tbaa !96
  %call6 = tail call double @log(double %base) #34
  store double %call6, double* @logB, align 8, !tbaa !96
  %div = fdiv double 1.000000e+00, %call6
  store double %div, double* @invlogB, align 8, !tbaa !96
  %call7 = tail call double @log10(double %base) #34
  %div8 = fdiv double 1.000000e+00, %call7
  store double %div8, double* @invlog10B, align 8, !tbaa !96
  %6 = load double, double* @invlogB, align 8, !tbaa !96
  %7 = tail call double @llvm.fmuladd.f64(double %6, double 0x3FE62E42FEFA39EF, double 5.000000e-01)
  %conv = fptosi double %7 to i32
  %cmp10 = icmp sgt i32 %conv, 65535
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end5
  tail call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1133, i64 0, i64 0), i64 120, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9.1141, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10.1142, i64 0, i64 0), double %base) #34
  br label %cleanup

if.end13:                                         ; preds = %if.end5
  %8 = load double, double* @B, align 8, !tbaa !96
  %div14 = fdiv double 1.000000e+00, %8
  store double %div14, double* @F, align 8, !tbaa !96
  %mul80 = fmul double %6, 0x3FE62E42FEFA39EF
  %add1781 = fadd double %mul80, 5.000000e-01
  %conv1882 = fptosi double %add1781 to i32
  %cmp1983 = icmp eq i32 %conv1882, 0
  br i1 %cmp1983, label %for.end, label %if.end22

if.end22:                                         ; preds = %if.end13, %if.end22
  %d.085 = phi double [ %mul23, %if.end22 ], [ 1.000000e+00, %if.end13 ]
  %i.084 = phi i32 [ %phi.bo, %if.end22 ], [ 1, %if.end13 ]
  %mul23 = fmul double %div14, %d.085
  %phi.bo = add i32 %i.084, 1
  %add = fadd double %mul23, 1.000000e+00
  %call16 = tail call double @log(double %add) #34
  %9 = load double, double* @invlogB, align 8, !tbaa !96
  %mul = fmul double %call16, %9
  %add17 = fadd double %mul, 5.000000e-01
  %conv18 = fptosi double %add17 to i32
  %cmp19 = icmp eq i32 %conv18, 0
  br i1 %cmp19, label %for.end, label %if.end22, !llvm.loop !987

for.end:                                          ; preds = %if.end22, %if.end13
  %i.0.lcssa = phi i32 [ 1, %if.end13 ], [ %phi.bo, %if.end22 ]
  store i32 %i.0.lcssa, i32* @add_tbl_size, align 4, !tbaa !37
  %conv26 = sext i32 %i.0.lcssa to i64
  %call27 = tail call i8* @__ckd_calloc__(i64 %conv26, i64 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1133, i64 0, i64 0), i32 145) #34
  store i8* %call27, i8** bitcast (i16** @add_tbl to i8**), align 8, !tbaa !74
  %10 = load double, double* @invlogB, align 8, !tbaa !96
  %mul3172 = fmul double %10, 0x3FE62E42FEFA39EF
  %add3273 = fadd double %mul3172, 5.000000e-01
  %conv3374 = fptosi double %add3273 to i32
  %conv3475 = trunc i32 %conv3374 to i16
  %.cast = bitcast i8* %call27 to i16*
  store i16 %conv3475, i16* %.cast, align 2, !tbaa !40
  %cmp3576 = icmp eq i32 %conv3374, 0
  br i1 %cmp3576, label %for.end42, label %if.end38

if.end38:                                         ; preds = %for.end, %if.end38
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end38 ], [ 0, %for.end ]
  %d.178 = phi double [ %mul39, %if.end38 ], [ 1.000000e+00, %for.end ]
  %mul39 = fmul double %div14, %d.178
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %add29 = fadd double %mul39, 1.000000e+00
  %call30 = tail call double @log(double %add29) #34
  %11 = load double, double* @invlogB, align 8, !tbaa !96
  %mul31 = fmul double %call30, %11
  %add32 = fadd double %mul31, 5.000000e-01
  %conv33 = fptosi double %add32 to i32
  %conv34 = trunc i32 %conv33 to i16
  %12 = load i16*, i16** @add_tbl, align 8, !tbaa !74
  %arrayidx = getelementptr inbounds i16, i16* %12, i64 %indvars.iv.next
  store i16 %conv34, i16* %arrayidx, align 2, !tbaa !40
  %cmp35 = icmp eq i32 %conv33, 0
  br i1 %cmp35, label %for.end42, label %if.end38, !llvm.loop !988

for.end42:                                        ; preds = %if.end38, %for.end
  tail call void @_E__pr_info_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1133, i64 0, i64 0), i64 161, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.1134, i64 0, i64 0)) #34
  %13 = load i32, i32* @add_tbl_size, align 4, !tbaa !37
  tail call void (i8*, ...) @_E__pr_info(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.1143, i64 0, i64 0), i32 %13) #34
  br label %cleanup

cleanup:                                          ; preds = %for.end42, %if.then12
  %retval.0 = phi i32 [ -1, %if.then12 ], [ 0, %for.end42 ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree noinline nounwind optsize uwtable willreturn
define i32 @logs3_add(i32 %logp, i32 %logq) local_unnamed_addr #9 {
entry:
  %cmp = icmp sgt i32 %logp, %logq
  %sub = sub nsw i32 %logp, %logq
  %sub1 = sub nsw i32 %logq, %logp
  %d.0 = select i1 %cmp, i32 %sub, i32 %sub1
  %r.0 = select i1 %cmp, i32 %logp, i32 %logq
  %0 = load i32, i32* @add_tbl_size, align 4, !tbaa !37
  %cmp2 = icmp slt i32 %d.0, %0
  br i1 %cmp2, label %if.then3, label %if.end13

if.then3:                                         ; preds = %entry
  %1 = load i32, i32* @USE_LOG3_ADD_TABLE, align 4, !tbaa !37
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.else5, label %if.then4

if.then4:                                         ; preds = %if.then3
  %2 = load i16*, i16** @add_tbl, align 8, !tbaa !74
  %idxprom = sext i32 %d.0 to i64
  %arrayidx = getelementptr inbounds i16, i16* %2, i64 %idxprom
  %3 = load i16, i16* %arrayidx, align 2, !tbaa !40
  %conv = zext i16 %3 to i32
  %add = add nsw i32 %r.0, %conv
  br label %if.end13

if.else5:                                         ; preds = %if.then3
  %4 = load double, double* @F, align 8, !tbaa !96
  %conv6 = sitofp i32 %d.0 to double
  %call = tail call double @pow(double %4, double %conv6) #34
  %add7 = fadd double %call, 1.000000e+00
  %call8 = tail call double @log(double %add7) #34
  %5 = load double, double* @invlogB, align 8, !tbaa !96
  %6 = tail call double @llvm.fmuladd.f64(double %call8, double %5, double 5.000000e-01)
  %conv9 = sitofp i32 %r.0 to double
  %add10 = fadd double %6, %conv9
  %conv11 = fptosi double %add10 to i32
  br label %if.end13

if.end13:                                         ; preds = %if.then4, %if.else5, %entry
  %r.1 = phi i32 [ %add, %if.then4 ], [ %conv11, %if.else5 ], [ %r.0, %entry ]
  ret i32 %r.1
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @logs3(double %p) local_unnamed_addr #0 {
entry:
  %0 = load i16*, i16** @add_tbl, align 8, !tbaa !74
  %tobool.not = icmp eq i16* %0, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1133, i64 0, i64 0), i64 200, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.1136, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12.1148, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp = fcmp ugt double %p, 0.000000e+00
  br i1 %cmp, label %if.end2, label %return

if.end2:                                          ; preds = %if.end
  %call = tail call double @log(double %p) #34
  %1 = load double, double* @invlogB, align 8, !tbaa !96
  %mul = fmul double %call, %1
  %conv = fptosi double %mul to i32
  br label %return

return:                                           ; preds = %if.end, %if.end2
  %retval.0 = phi i32 [ %conv, %if.end2 ], [ -939524096, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @log_to_logs3(double %logp) local_unnamed_addr #0 {
entry:
  %0 = load i16*, i16** @add_tbl, align 8, !tbaa !74
  %tobool.not = icmp eq i16* %0, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1133, i64 0, i64 0), i64 216, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.1136, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12.1148, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load double, double* @invlogB, align 8, !tbaa !96
  %mul = fmul double %1, %logp
  %conv = fptosi double %mul to i32
  ret i32 %conv
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn
define double @log_to_logs3_factor() local_unnamed_addr #21 {
entry:
  %0 = load double, double* @invlogB, align 8, !tbaa !96
  ret double %0
}

; Function Attrs: noinline nounwind optsize uwtable
define double @logs3_to_log(i32 %logs3p) local_unnamed_addr #0 {
entry:
  %0 = load i16*, i16** @add_tbl, align 8, !tbaa !74
  %tobool.not = icmp eq i16* %0, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1133, i64 0, i64 0), i64 231, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.1136, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12.1148, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %conv = sitofp i32 %logs3p to double
  %1 = load double, double* @logB, align 8, !tbaa !96
  %mul = fmul double %1, %conv
  ret double %mul
}

; Function Attrs: mustprogress nofree noinline nounwind optsize uwtable willreturn
define double @logs3_to_p(i32 %logs3p) local_unnamed_addr #9 {
entry:
  %conv = sitofp i32 %logs3p to double
  %0 = load double, double* @logB, align 8, !tbaa !96
  %mul = fmul double %0, %conv
  %call = tail call double @exp(double %mul) #34
  ret double %call
}

; Function Attrs: mustprogress nofree nounwind optsize willreturn
declare double @exp(double) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize uwtable
define i32 @log10_to_logs3(double %log10p) local_unnamed_addr #0 {
entry:
  %0 = load i16*, i16** @add_tbl, align 8, !tbaa !74
  %tobool.not = icmp eq i16* %0, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_E__pr_header(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1.1133, i64 0, i64 0), i64 246, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.1136, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12.1148, i64 0, i64 0)) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load double, double* @invlog10B, align 8, !tbaa !96
  %mul = fmul double %1, %log10p
  %conv = fptosi double %mul to i32
  ret i32 %conv
}

; Function Attrs: noinline nounwind optsize uwtable
define void @logs_free() local_unnamed_addr #0 {
entry:
  %0 = load i16*, i16** @add_tbl, align 8, !tbaa !74
  %tobool.not = icmp eq i16* %0, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = bitcast i16* %0 to i8*
  tail call void @ckd_free(i8* nonnull %1) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define %struct.lextree_t* @lextree_build(%struct.kbcore_t* nocapture readonly %kbc, %struct.arraysize_t* nocapture readonly %wordprob, i32 %n_word, i8* readonly %lc) local_unnamed_addr #0 {
entry:
  %mdef1 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 1
  %0 = load %struct.mdef_t*, %struct.mdef_t** %mdef1, align 8, !tbaa !14
  %dict2 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 2
  %1 = load %struct.dict_t*, %struct.dict_t** %dict2, align 8, !tbaa !16
  %tmat3 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 11
  %2 = load %struct.tmat_t*, %struct.tmat_t** %tmat3, align 8, !tbaa !33
  %dict2pid = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 3
  %3 = load %struct.dict2pid_t*, %struct.dict2pid_t** %dict2pid, align 8, !tbaa !19
  %n_ciphone = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %0, i64 0, i32 0
  %4 = load i32, i32* %n_ciphone, align 8, !tbaa !57
  %n_sseq4 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %0, i64 0, i32 10
  %5 = load i32, i32* %n_sseq4, align 8, !tbaa !52
  %n_emit_state = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %0, i64 0, i32 2
  %6 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %call = tail call i8* @__ckd_calloc__(i64 1, i64 64, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i32 115) #34
  %root = getelementptr inbounds i8, i8* %call, i64 8
  %7 = bitcast i8* %root to %struct.gnode_s**
  store %struct.gnode_s* null, %struct.gnode_s** %7, align 8, !tbaa !989
  %conv = sext i32 %5 to i64
  %call5 = tail call i8* @__ckd_calloc__(i64 %conv, i64 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i32 119) #34
  %8 = bitcast i8* %call5 to %struct.lextree_node_t**
  %call7 = tail call i8* @__ckd_calloc__(i64 %conv, i64 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i32 122) #34
  %9 = bitcast i8* %call7 to i32**
  %add = add nsw i32 %4, 31
  %shr = ashr i32 %add, 5
  %conv9 = sext i32 %shr to i64
  %cmp892 = icmp sgt i32 %5, 0
  br i1 %cmp892, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count952 = zext i32 %5 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv950 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next951, %for.body ]
  %call10 = tail call i8* @__ckd_calloc__(i64 %conv9, i64 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i32 124) #34
  %arrayidx = getelementptr inbounds i32*, i32** %9, i64 %indvars.iv950
  %10 = bitcast i32** %arrayidx to i8**
  store i8* %call10, i8** %10, align 8, !tbaa !74
  %indvars.iv.next951 = add nuw nsw i64 %indvars.iv950, 1
  %exitcond953.not = icmp eq i64 %indvars.iv.next951, %wide.trip.count952
  br i1 %exitcond953.not, label %for.end, label %for.body, !llvm.loop !990

for.end:                                          ; preds = %for.body, %entry
  %tobool.not = icmp eq i8* %lc, null
  br i1 %tobool.not, label %if.then, label %for.cond14

if.then:                                          ; preds = %for.end
  %n_lc11 = getelementptr inbounds i8, i8* %call, i64 24
  %11 = bitcast i8* %n_lc11 to i32*
  store i32 0, i32* %11, align 8, !tbaa !991
  %lcroot12 = getelementptr inbounds i8, i8* %call, i64 16
  %12 = bitcast i8* %lcroot12 to %struct.lextree_lcroot_t**
  store %struct.lextree_lcroot_t* null, %struct.lextree_lcroot_t** %12, align 8, !tbaa !992
  %call13 = tail call i8* @__ckd_calloc__(i64 1, i64 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i32 135) #34
  br label %if.end

for.cond14:                                       ; preds = %for.end, %for.cond14
  %indvars.iv948 = phi i64 [ %indvars.iv.next949, %for.cond14 ], [ 0, %for.end ]
  %arrayidx16 = getelementptr inbounds i8, i8* %lc, i64 %indvars.iv948
  %13 = load i8, i8* %arrayidx16, align 1, !tbaa !63
  %cmp18 = icmp sgt i8 %13, -1
  %indvars.iv.next949 = add nuw i64 %indvars.iv948, 1
  br i1 %cmp18, label %for.cond14, label %for.end23, !llvm.loop !993

for.end23:                                        ; preds = %for.cond14
  %14 = trunc i64 %indvars.iv948 to i32
  %idxprom15.le = and i64 %indvars.iv948, 4294967295
  %n_lc24 = getelementptr inbounds i8, i8* %call, i64 24
  %15 = bitcast i8* %n_lc24 to i32*
  store i32 %14, i32* %15, align 8, !tbaa !991
  %call26 = tail call i8* @__ckd_calloc__(i64 %idxprom15.le, i64 16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i32 141) #34
  %16 = bitcast i8* %call26 to %struct.lextree_lcroot_t*
  %lcroot27 = getelementptr inbounds i8, i8* %call, i64 16
  %17 = bitcast i8* %lcroot27 to i8**
  store i8* %call26, i8** %17, align 8, !tbaa !992
  %cmp29889.not = icmp eq i32 %14, 0
  br i1 %cmp29889.not, label %for.end42, label %for.body31

for.body31:                                       ; preds = %for.end23, %for.body31
  %indvars.iv944 = phi i64 [ %indvars.iv.next945, %for.body31 ], [ 0, %for.end23 ]
  %arrayidx33 = getelementptr inbounds i8, i8* %lc, i64 %indvars.iv944
  %18 = load i8, i8* %arrayidx33, align 1, !tbaa !63
  %lc36 = getelementptr inbounds %struct.lextree_lcroot_t, %struct.lextree_lcroot_t* %16, i64 %indvars.iv944, i32 0
  store i8 %18, i8* %lc36, align 8, !tbaa !994
  %root39 = getelementptr inbounds %struct.lextree_lcroot_t, %struct.lextree_lcroot_t* %16, i64 %indvars.iv944, i32 1
  store %struct.gnode_s* null, %struct.gnode_s** %root39, align 8, !tbaa !996
  %indvars.iv.next945 = add nuw nsw i64 %indvars.iv944, 1
  %exitcond947.not = icmp eq i64 %indvars.iv.next945, %idxprom15.le
  br i1 %exitcond947.not, label %for.end42, label %for.body31, !llvm.loop !997

for.end42:                                        ; preds = %for.body31, %for.end23
  %call44 = tail call i8* @__ckd_calloc__(i64 %idxprom15.le, i64 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i32 149) #34
  br label %if.end

if.end:                                           ; preds = %for.end42, %if.then
  %parent.0.in = phi i8* [ %call44, %for.end42 ], [ %call13, %if.then ]
  %n_lc.1 = phi i32 [ %14, %for.end42 ], [ 0, %if.then ]
  %lcroot.0 = phi %struct.lextree_lcroot_t* [ %16, %for.end42 ], [ null, %if.then ]
  %parent.0 = bitcast i8* %parent.0.in to %struct.lextree_node_t**
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %1, i64 0, i32 4
  %ldiph_lc222 = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %3, i64 0, i32 1
  %tp241 = getelementptr inbounds %struct.tmat_t, %struct.tmat_t* %2, i64 0, i32 0
  %phone242 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %0, i64 0, i32 8
  %cmp228829.not = icmp eq i32 %n_lc.1, 0
  %internal157 = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %3, i64 0, i32 0
  %single_lc = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %3, i64 0, i32 2
  %cmp46883 = icmp sgt i32 %n_word, 0
  br i1 %cmp46883, label %for.body48.preheader, label %for.end483

for.body48.preheader:                             ; preds = %if.end
  %wide.trip.count942 = zext i32 %n_word to i64
  %wide.trip.count908 = zext i32 %n_lc.1 to i64
  %wide.trip.count938 = zext i32 %n_lc.1 to i64
  br label %for.body48

for.body48:                                       ; preds = %for.body48.preheader, %for.inc481
  %indvars.iv940 = phi i64 [ 0, %for.body48.preheader ], [ %indvars.iv.next941, %for.inc481 ]
  %gn.0886 = phi %struct.gnode_s* [ null, %for.body48.preheader ], [ %gn.7, %for.inc481 ]
  %ln.0885 = phi %struct.lextree_node_t* [ null, %for.body48.preheader ], [ %ln.15, %for.inc481 ]
  %n_node.0884 = phi i32 [ 0, %for.body48.preheader ], [ %n_node.9, %for.inc481 ]
  %wid51 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %wordprob, i64 %indvars.iv940, i32 0
  %19 = load i32, i32* %wid51, align 4, !tbaa !84
  %prob54 = getelementptr inbounds %struct.arraysize_t, %struct.arraysize_t* %wordprob, i64 %indvars.iv940, i32 1
  %20 = load i32, i32* %prob54, align 4, !tbaa !71
  %21 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %idxprom55 = sext i32 %19 to i64
  %pronlen57 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %21, i64 %idxprom55, i32 2
  %22 = load i32, i32* %pronlen57, align 8, !tbaa !62
  %cmp58 = icmp eq i32 %22, 1
  br i1 %cmp58, label %if.then60, label %if.else154

if.then60:                                        ; preds = %for.body48
  %ciphone = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %21, i64 %idxprom55, i32 1
  %23 = load i8*, i8** %ciphone, align 8, !tbaa !60
  %24 = load i8, i8* %23, align 1, !tbaa !63
  %conv65 = sext i8 %24 to i32
  br i1 %tobool.not, label %if.then67, label %for.cond89.preheader

for.cond89.preheader:                             ; preds = %if.then60
  %idxprom93 = sext i8 %24 to i64
  br i1 %cmp228829.not, label %for.inc481, label %for.body92

if.then67:                                        ; preds = %if.then60
  %25 = load i32**, i32*** %internal157, align 8, !tbaa !388
  %arrayidx69 = getelementptr inbounds i32*, i32** %25, i64 %idxprom55
  %26 = load i32*, i32** %arrayidx69, align 8, !tbaa !74
  %27 = load i32, i32* %26, align 4, !tbaa !37
  %call77 = tail call fastcc %struct.lextree_node_t* @lextree_node_alloc(i32 %19, i32 %20, i32 1, i32 %27, i32 %6, i32 %conv65) #36
  %28 = load i32***, i32**** %tp241, align 8, !tbaa !227
  %29 = load %struct.phone_t*, %struct.phone_t** %phone242, align 8, !tbaa !318
  %idxprom78 = sext i8 %24 to i64
  %tmat80 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %29, i64 %idxprom78, i32 1
  %30 = load i32, i32* %tmat80, align 4, !tbaa !321
  %idxprom81 = sext i32 %30 to i64
  %arrayidx82 = getelementptr inbounds i32**, i32*** %28, i64 %idxprom81
  %31 = load i32**, i32*** %arrayidx82, align 8, !tbaa !74
  %tp83 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %call77, i64 0, i32 0, i32 3
  store i32** %31, i32*** %tp83, align 8, !tbaa !998
  %32 = load %struct.gnode_s*, %struct.gnode_s** %7, align 8, !tbaa !989
  %33 = bitcast %struct.lextree_node_t* %call77 to i8*
  %call85 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %32, i8* %33) #34
  store %struct.gnode_s* %call85, %struct.gnode_s** %7, align 8, !tbaa !989
  %inc87 = add nsw i32 %n_node.0884, 1
  br label %for.inc481

for.body92:                                       ; preds = %for.cond89.preheader, %for.inc150
  %indvars.iv936 = phi i64 [ %indvars.iv.next937, %for.inc150 ], [ 0, %for.cond89.preheader ]
  %ln.1879 = phi %struct.lextree_node_t* [ %ln.2, %for.inc150 ], [ %ln.0885, %for.cond89.preheader ]
  %n_node.1877 = phi i32 [ %n_node.2, %for.inc150 ], [ %n_node.0884, %for.cond89.preheader ]
  %np.0875 = phi i32 [ %np.1, %for.inc150 ], [ 0, %for.cond89.preheader ]
  %34 = load i32**, i32*** %single_lc, align 8, !tbaa !386
  %arrayidx94 = getelementptr inbounds i32*, i32** %34, i64 %idxprom93
  %35 = load i32*, i32** %arrayidx94, align 8, !tbaa !74
  %arrayidx96 = getelementptr inbounds i8, i8* %lc, i64 %indvars.iv936
  %36 = load i8, i8* %arrayidx96, align 1, !tbaa !63
  %idxprom98 = sext i8 %36 to i64
  %arrayidx99 = getelementptr inbounds i32, i32* %35, i64 %idxprom98
  %37 = load i32, i32* %arrayidx99, align 4, !tbaa !37
  %cmp101872 = icmp sgt i32 %np.0875, 0
  br i1 %cmp101872, label %land.rhs.preheader, label %if.then114

land.rhs.preheader:                               ; preds = %for.body92
  %wide.trip.count934 = zext i32 %np.0875 to i64
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.preheader, %for.inc109
  %indvars.iv932 = phi i64 [ 0, %land.rhs.preheader ], [ %indvars.iv.next933, %for.inc109 ]
  %arrayidx104 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %parent.0, i64 %indvars.iv932
  %38 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx104, align 8, !tbaa !74
  %ssid105 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %38, i64 0, i32 4
  %39 = load i32, i32* %ssid105, align 8, !tbaa !1000
  %cmp106.not = icmp eq i32 %39, %37
  br i1 %cmp106.not, label %if.else139, label %for.inc109

for.inc109:                                       ; preds = %land.rhs
  %indvars.iv.next933 = add nuw nsw i64 %indvars.iv932, 1
  %exitcond935.not = icmp eq i64 %indvars.iv.next933, %wide.trip.count934
  br i1 %exitcond935.not, label %if.then114, label %land.rhs, !llvm.loop !1001

if.then114:                                       ; preds = %for.inc109, %for.body92
  %call115 = tail call fastcc %struct.lextree_node_t* @lextree_node_alloc(i32 %19, i32 %20, i32 1, i32 %37, i32 %6, i32 %conv65) #36
  %40 = load i32***, i32**** %tp241, align 8, !tbaa !227
  %41 = load %struct.phone_t*, %struct.phone_t** %phone242, align 8, !tbaa !318
  %tmat120 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %41, i64 %idxprom93, i32 1
  %42 = load i32, i32* %tmat120, align 4, !tbaa !321
  %idxprom121 = sext i32 %42 to i64
  %arrayidx122 = getelementptr inbounds i32**, i32*** %40, i64 %idxprom121
  %43 = load i32**, i32*** %arrayidx122, align 8, !tbaa !74
  %tp124 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %call115, i64 0, i32 0, i32 3
  store i32** %43, i32*** %tp124, align 8, !tbaa !998
  %44 = load %struct.gnode_s*, %struct.gnode_s** %7, align 8, !tbaa !989
  %45 = bitcast %struct.lextree_node_t* %call115 to i8*
  %call126 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %44, i8* %45) #34
  store %struct.gnode_s* %call126, %struct.gnode_s** %7, align 8, !tbaa !989
  %inc128 = add nsw i32 %n_node.1877, 1
  %root131 = getelementptr inbounds %struct.lextree_lcroot_t, %struct.lextree_lcroot_t* %lcroot.0, i64 %indvars.iv936, i32 1
  %46 = load %struct.gnode_s*, %struct.gnode_s** %root131, align 8, !tbaa !996
  %call132 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %46, i8* %45) #34
  store %struct.gnode_s* %call132, %struct.gnode_s** %root131, align 8, !tbaa !996
  %inc136 = add nsw i32 %np.0875, 1
  %idxprom137 = sext i32 %np.0875 to i64
  %arrayidx138 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %parent.0, i64 %idxprom137
  store %struct.lextree_node_t* %call115, %struct.lextree_node_t** %arrayidx138, align 8, !tbaa !74
  br label %for.inc150

if.else139:                                       ; preds = %land.rhs
  %root142 = getelementptr inbounds %struct.lextree_lcroot_t, %struct.lextree_lcroot_t* %lcroot.0, i64 %indvars.iv936, i32 1
  %47 = load %struct.gnode_s*, %struct.gnode_s** %root142, align 8, !tbaa !996
  %idxprom143 = and i64 %indvars.iv932, 4294967295
  %arrayidx144 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %parent.0, i64 %idxprom143
  %48 = bitcast %struct.lextree_node_t** %arrayidx144 to i8**
  %49 = load i8*, i8** %48, align 8, !tbaa !74
  %call145 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %47, i8* %49) #34
  store %struct.gnode_s* %call145, %struct.gnode_s** %root142, align 8, !tbaa !996
  br label %for.inc150

for.inc150:                                       ; preds = %if.then114, %if.else139
  %np.1 = phi i32 [ %inc136, %if.then114 ], [ %np.0875, %if.else139 ]
  %n_node.2 = phi i32 [ %inc128, %if.then114 ], [ %n_node.1877, %if.else139 ]
  %ln.2 = phi %struct.lextree_node_t* [ %call115, %if.then114 ], [ %ln.1879, %if.else139 ]
  %indvars.iv.next937 = add nuw nsw i64 %indvars.iv936, 1
  %exitcond939.not = icmp eq i64 %indvars.iv.next937, %wide.trip.count938
  br i1 %exitcond939.not, label %for.inc481, label %for.body92, !llvm.loop !1002

if.else154:                                       ; preds = %for.body48
  br i1 %tobool.not, label %if.then156, label %if.else209

if.then156:                                       ; preds = %if.else154
  %50 = load i32**, i32*** %internal157, align 8, !tbaa !388
  %arrayidx159 = getelementptr inbounds i32*, i32** %50, i64 %idxprom55
  %51 = load i32*, i32** %arrayidx159, align 8, !tbaa !74
  %52 = load i32, i32* %51, align 4, !tbaa !37
  %ciphone164 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %21, i64 %idxprom55, i32 1
  %53 = load i8*, i8** %ciphone164, align 8, !tbaa !60
  %54 = load i8, i8* %53, align 1, !tbaa !63
  %conv166 = sext i8 %54 to i32
  %gn.1836 = load %struct.gnode_s*, %struct.gnode_s** %7, align 8, !tbaa !74
  %tobool169.not837 = icmp eq %struct.gnode_s* %gn.1836, null
  br i1 %tobool169.not837, label %if.then185, label %for.body170

for.body170:                                      ; preds = %if.then156, %for.inc182
  %gn.1838 = phi %struct.gnode_s* [ %gn.1, %for.inc182 ], [ %gn.1836, %if.then156 ]
  %55 = bitcast %struct.gnode_s* %gn.1838 to %struct.lextree_node_t**
  %56 = load %struct.lextree_node_t*, %struct.lextree_node_t** %55, align 8, !tbaa !63
  %ssid171 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %56, i64 0, i32 4
  %57 = load i32, i32* %ssid171, align 8, !tbaa !1000
  %cmp172 = icmp eq i32 %57, %52
  br i1 %cmp172, label %land.lhs.true, label %for.inc182

land.lhs.true:                                    ; preds = %for.body170
  %composite = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %56, i64 0, i32 7
  %58 = load i8, i8* %composite, align 1, !tbaa !1003
  %tobool175.not = icmp eq i8 %58, 0
  br i1 %tobool175.not, label %for.inc182, label %land.lhs.true176

land.lhs.true176:                                 ; preds = %land.lhs.true
  %wid177 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %56, i64 0, i32 2
  %59 = load i32, i32* %wid177, align 8, !tbaa !1004
  %cmp178 = icmp slt i32 %59, 0
  br i1 %cmp178, label %if.else200, label %for.inc182

for.inc182:                                       ; preds = %for.body170, %land.lhs.true, %land.lhs.true176
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.1838, i64 0, i32 1
  %gn.1 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !74
  %tobool169.not = icmp eq %struct.gnode_s* %gn.1, null
  br i1 %tobool169.not, label %if.then185, label %for.body170, !llvm.loop !1005

if.then185:                                       ; preds = %for.inc182, %if.then156
  %call186 = tail call fastcc %struct.lextree_node_t* @lextree_node_alloc(i32 -1, i32 %20, i32 1, i32 %52, i32 %6, i32 %conv166) #36
  %60 = load i32***, i32**** %tp241, align 8, !tbaa !227
  %61 = load %struct.phone_t*, %struct.phone_t** %phone242, align 8, !tbaa !318
  %idxprom189 = sext i8 %54 to i64
  %tmat191 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %61, i64 %idxprom189, i32 1
  %62 = load i32, i32* %tmat191, align 4, !tbaa !321
  %idxprom192 = sext i32 %62 to i64
  %arrayidx193 = getelementptr inbounds i32**, i32*** %60, i64 %idxprom192
  %63 = load i32**, i32*** %arrayidx193, align 8, !tbaa !74
  %tp195 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %call186, i64 0, i32 0, i32 3
  store i32** %63, i32*** %tp195, align 8, !tbaa !998
  %64 = load %struct.gnode_s*, %struct.gnode_s** %7, align 8, !tbaa !989
  %65 = bitcast %struct.lextree_node_t* %call186 to i8*
  %call197 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %64, i8* %65) #34
  store %struct.gnode_s* %call197, %struct.gnode_s** %7, align 8, !tbaa !989
  %inc199 = add nsw i32 %n_node.0884, 1
  br label %if.end207

if.else200:                                       ; preds = %land.lhs.true176
  %prob201 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %56, i64 0, i32 3
  %66 = load i32, i32* %prob201, align 4, !tbaa !1006
  %cmp202 = icmp slt i32 %66, %20
  br i1 %cmp202, label %if.then204, label %if.end207

if.then204:                                       ; preds = %if.else200
  store i32 %20, i32* %prob201, align 4, !tbaa !1006
  br label %if.end207

if.end207:                                        ; preds = %if.else200, %if.then204, %if.then185
  %gn.1816 = phi %struct.gnode_s* [ %gn.1838, %if.then204 ], [ %gn.1838, %if.else200 ], [ null, %if.then185 ]
  %n_node.3 = phi i32 [ %n_node.0884, %if.then204 ], [ %n_node.0884, %if.else200 ], [ %inc199, %if.then185 ]
  %ln.5 = phi %struct.lextree_node_t* [ %56, %if.then204 ], [ %56, %if.else200 ], [ %call186, %if.then185 ]
  store %struct.lextree_node_t* %ln.5, %struct.lextree_node_t** %parent.0, align 8, !tbaa !74
  br label %if.end323

if.else209:                                       ; preds = %if.else154
  %ciphone213 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %21, i64 %idxprom55, i32 1
  %67 = load i8*, i8** %ciphone213, align 8, !tbaa !60
  %68 = load i8, i8* %67, align 1, !tbaa !63
  %conv215 = sext i8 %68 to i32
  %arrayidx220 = getelementptr inbounds i8, i8* %67, i64 1
  %69 = load i8, i8* %arrayidx220, align 1, !tbaa !63
  %70 = load i32***, i32**** %ldiph_lc222, align 8, !tbaa !387
  %idxprom223 = sext i8 %68 to i64
  %arrayidx224 = getelementptr inbounds i32**, i32*** %70, i64 %idxprom223
  %71 = load i32**, i32*** %arrayidx224, align 8, !tbaa !74
  %idxprom225 = sext i8 %69 to i64
  %arrayidx226 = getelementptr inbounds i32*, i32** %71, i64 %idxprom225
  %72 = load i32*, i32** %arrayidx226, align 8, !tbaa !74
  br i1 %cmp228829.not, label %if.end323, label %for.body230

for.body230:                                      ; preds = %if.else209, %for.inc320
  %indvars.iv906 = phi i64 [ %indvars.iv.next907, %for.inc320 ], [ 0, %if.else209 ]
  %n_node.4832 = phi i32 [ %n_node.5, %for.inc320 ], [ %n_node.0884, %if.else209 ]
  %np.2830 = phi i32 [ %np.3, %for.inc320 ], [ 0, %if.else209 ]
  %arrayidx232 = getelementptr inbounds i8, i8* %lc, i64 %indvars.iv906
  %73 = load i8, i8* %arrayidx232, align 1, !tbaa !63
  %idxprom234 = sext i8 %73 to i64
  %arrayidx235 = getelementptr inbounds i32, i32* %72, i64 %idxprom234
  %74 = load i32, i32* %arrayidx235, align 4, !tbaa !37
  %idxprom236 = sext i32 %74 to i64
  %arrayidx237 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %8, i64 %idxprom236
  %75 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx237, align 8, !tbaa !74
  %tobool238.not = icmp eq %struct.lextree_node_t* %75, null
  br i1 %tobool238.not, label %if.then239, label %if.else256

if.then239:                                       ; preds = %for.body230
  %call240 = tail call fastcc %struct.lextree_node_t* @lextree_node_alloc(i32 -1, i32 %20, i32 0, i32 %74, i32 %6, i32 %conv215) #36
  %76 = load i32***, i32**** %tp241, align 8, !tbaa !227
  %77 = load %struct.phone_t*, %struct.phone_t** %phone242, align 8, !tbaa !318
  %tmat245 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %77, i64 %idxprom223, i32 1
  %78 = load i32, i32* %tmat245, align 4, !tbaa !321
  %idxprom246 = sext i32 %78 to i64
  %arrayidx247 = getelementptr inbounds i32**, i32*** %76, i64 %idxprom246
  %79 = load i32**, i32*** %arrayidx247, align 8, !tbaa !74
  %tp249 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %call240, i64 0, i32 0, i32 3
  store i32** %79, i32*** %tp249, align 8, !tbaa !998
  %80 = load %struct.gnode_s*, %struct.gnode_s** %7, align 8, !tbaa !989
  %81 = bitcast %struct.lextree_node_t* %call240 to i8*
  %call251 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %80, i8* %81) #34
  store %struct.gnode_s* %call251, %struct.gnode_s** %7, align 8, !tbaa !989
  %inc253 = add nsw i32 %n_node.4832, 1
  store %struct.lextree_node_t* %call240, %struct.lextree_node_t** %arrayidx237, align 8, !tbaa !74
  br label %if.end263

if.else256:                                       ; preds = %for.body230
  %prob257 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %75, i64 0, i32 3
  %82 = load i32, i32* %prob257, align 4, !tbaa !1006
  %cmp258 = icmp slt i32 %82, %20
  br i1 %cmp258, label %if.then260, label %if.end263

if.then260:                                       ; preds = %if.else256
  store i32 %20, i32* %prob257, align 4, !tbaa !1006
  br label %if.end263

if.end263:                                        ; preds = %if.else256, %if.then260, %if.then239
  %n_node.5 = phi i32 [ %n_node.4832, %if.then260 ], [ %n_node.4832, %if.else256 ], [ %inc253, %if.then239 ]
  %ln.7 = phi %struct.lextree_node_t* [ %75, %if.then260 ], [ %75, %if.else256 ], [ %call240, %if.then239 ]
  %arrayidx265 = getelementptr inbounds i32*, i32** %9, i64 %idxprom236
  %83 = load i32*, i32** %arrayidx265, align 8, !tbaa !74
  %84 = load i8, i8* %arrayidx232, align 1, !tbaa !63
  %conv268 = sext i8 %84 to i32
  %shr269 = ashr i32 %conv268, 5
  %idxprom270 = sext i32 %shr269 to i64
  %arrayidx271 = getelementptr inbounds i32, i32* %83, i64 %idxprom270
  %85 = load i32, i32* %arrayidx271, align 4, !tbaa !37
  %and = and i32 %conv268, 31
  %shl = shl nuw i32 1, %and
  %and275 = and i32 %shl, %85
  %tobool276.not = icmp eq i32 %and275, 0
  br i1 %tobool276.not, label %if.then277, label %if.end298

if.then277:                                       ; preds = %if.end263
  %root280 = getelementptr inbounds %struct.lextree_lcroot_t, %struct.lextree_lcroot_t* %lcroot.0, i64 %indvars.iv906, i32 1
  %86 = load %struct.gnode_s*, %struct.gnode_s** %root280, align 8, !tbaa !996
  %87 = bitcast %struct.lextree_node_t* %ln.7 to i8*
  %call281 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %86, i8* %87) #34
  store %struct.gnode_s* %call281, %struct.gnode_s** %root280, align 8, !tbaa !996
  %88 = load i8, i8* %arrayidx232, align 1, !tbaa !63
  %conv287 = sext i8 %88 to i32
  %and288 = and i32 %conv287, 31
  %shl289 = shl nuw i32 1, %and288
  %89 = load i32*, i32** %arrayidx265, align 8, !tbaa !74
  %shr295 = ashr i32 %conv287, 5
  %idxprom296 = sext i32 %shr295 to i64
  %arrayidx297 = getelementptr inbounds i32, i32* %89, i64 %idxprom296
  %90 = load i32, i32* %arrayidx297, align 4, !tbaa !37
  %or = or i32 %shl289, %90
  store i32 %or, i32* %arrayidx297, align 4, !tbaa !37
  br label %if.end298

if.end298:                                        ; preds = %if.then277, %if.end263
  %cmp300827 = icmp sgt i32 %np.2830, 0
  br i1 %cmp300827, label %land.rhs302.preheader, label %if.then315

land.rhs302.preheader:                            ; preds = %if.end298
  %wide.trip.count904 = zext i32 %np.2830 to i64
  br label %land.rhs302

for.cond299:                                      ; preds = %land.rhs302
  %exitcond905.not = icmp eq i64 %indvars.iv.next903, %wide.trip.count904
  br i1 %exitcond905.not, label %if.then315, label %land.rhs302, !llvm.loop !1007

land.rhs302:                                      ; preds = %land.rhs302.preheader, %for.cond299
  %indvars.iv902 = phi i64 [ 0, %land.rhs302.preheader ], [ %indvars.iv.next903, %for.cond299 ]
  %arrayidx304 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %parent.0, i64 %indvars.iv902
  %91 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx304, align 8, !tbaa !74
  %ssid305 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %91, i64 0, i32 4
  %92 = load i32, i32* %ssid305, align 8, !tbaa !1000
  %cmp306.not = icmp eq i32 %92, %74
  %indvars.iv.next903 = add nuw nsw i64 %indvars.iv902, 1
  br i1 %cmp306.not, label %for.inc320, label %for.cond299

if.then315:                                       ; preds = %for.cond299, %if.end298
  %inc316 = add nsw i32 %np.2830, 1
  %idxprom317 = sext i32 %np.2830 to i64
  %arrayidx318 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %parent.0, i64 %idxprom317
  store %struct.lextree_node_t* %ln.7, %struct.lextree_node_t** %arrayidx318, align 8, !tbaa !74
  br label %for.inc320

for.inc320:                                       ; preds = %land.rhs302, %if.then315
  %np.3 = phi i32 [ %inc316, %if.then315 ], [ %np.2830, %land.rhs302 ]
  %indvars.iv.next907 = add nuw nsw i64 %indvars.iv906, 1
  %exitcond909.not = icmp eq i64 %indvars.iv.next907, %wide.trip.count908
  br i1 %exitcond909.not, label %if.end323, label %for.body230, !llvm.loop !1008

if.end323:                                        ; preds = %for.inc320, %if.else209, %if.end207
  %np.4 = phi i32 [ 1, %if.end207 ], [ 0, %if.else209 ], [ %np.3, %for.inc320 ]
  %n_node.6 = phi i32 [ %n_node.3, %if.end207 ], [ %n_node.0884, %if.else209 ], [ %n_node.5, %for.inc320 ]
  %ln.8 = phi %struct.lextree_node_t* [ %ln.5, %if.end207 ], [ %ln.0885, %if.else209 ], [ %ln.7, %for.inc320 ]
  %gn.2 = phi %struct.gnode_s* [ %gn.1816, %if.end207 ], [ %gn.0886, %if.else209 ], [ %gn.0886, %for.inc320 ]
  %cmp325860 = icmp sgt i32 %22, 2
  br i1 %cmp325860, label %for.body327.preheader, label %for.end442

for.body327.preheader:                            ; preds = %if.end323
  %93 = add nsw i32 %22, -1
  %wide.trip.count926 = zext i32 %93 to i64
  br label %for.body327

for.body327:                                      ; preds = %for.body327.preheader, %if.end438
  %indvars.iv924 = phi i64 [ 1, %for.body327.preheader ], [ %indvars.iv.next925, %if.end438 ]
  %gn.3864 = phi %struct.gnode_s* [ %gn.2, %for.body327.preheader ], [ %gn.6813, %if.end438 ]
  %ln.9863 = phi %struct.lextree_node_t* [ %ln.8, %for.body327.preheader ], [ %ln.14, %if.end438 ]
  %n_node.7862 = phi i32 [ %n_node.6, %for.body327.preheader ], [ %n_node.8, %if.end438 ]
  %np.5861 = phi i32 [ %np.4, %for.body327.preheader ], [ 1, %if.end438 ]
  %94 = load i32**, i32*** %internal157, align 8, !tbaa !388
  %arrayidx330 = getelementptr inbounds i32*, i32** %94, i64 %idxprom55
  %95 = load i32*, i32** %arrayidx330, align 8, !tbaa !74
  %arrayidx332 = getelementptr inbounds i32, i32* %95, i64 %indvars.iv924
  %96 = load i32, i32* %arrayidx332, align 4, !tbaa !37
  %97 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %ciphone336 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %97, i64 %idxprom55, i32 1
  %98 = load i8*, i8** %ciphone336, align 8, !tbaa !60
  %arrayidx338 = getelementptr inbounds i8, i8* %98, i64 %indvars.iv924
  %99 = load i8, i8* %arrayidx338, align 1, !tbaa !63
  %conv339 = sext i8 %99 to i32
  %cmp341846 = icmp sgt i32 %np.5861, 0
  br i1 %cmp341846, label %for.body343.preheader, label %for.end367

for.body343.preheader:                            ; preds = %for.body327
  %wide.trip.count912 = zext i32 %np.5861 to i64
  br label %for.body343

for.body343:                                      ; preds = %for.body343.preheader, %for.inc365
  %indvars.iv910 = phi i64 [ 0, %for.body343.preheader ], [ %indvars.iv.next911, %for.inc365 ]
  %arrayidx345 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %parent.0, i64 %indvars.iv910
  %100 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx345, align 8, !tbaa !74
  %children = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %100, i64 0, i32 1
  %gn.5841 = load %struct.gnode_s*, %struct.gnode_s** %children, align 8, !tbaa !74
  %tobool347.not842 = icmp eq %struct.gnode_s* %gn.5841, null
  br i1 %tobool347.not842, label %for.inc365, label %for.body348

for.body348:                                      ; preds = %for.body343, %for.inc359
  %gn.5843 = phi %struct.gnode_s* [ %gn.5, %for.inc359 ], [ %gn.5841, %for.body343 ]
  %101 = bitcast %struct.gnode_s* %gn.5843 to %struct.lextree_node_t**
  %102 = load %struct.lextree_node_t*, %struct.lextree_node_t** %101, align 8, !tbaa !63
  %ssid351 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %102, i64 0, i32 4
  %103 = load i32, i32* %ssid351, align 8, !tbaa !1000
  %cmp352 = icmp eq i32 %103, %96
  br i1 %cmp352, label %land.lhs.true354, label %for.inc359

land.lhs.true354:                                 ; preds = %for.body348
  %composite355 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %102, i64 0, i32 7
  %104 = load i8, i8* %composite355, align 1, !tbaa !1003
  %tobool356.not = icmp eq i8 %104, 0
  br i1 %tobool356.not, label %if.else395.loopexit, label %for.inc359

for.inc359:                                       ; preds = %for.body348, %land.lhs.true354
  %next360 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.5843, i64 0, i32 1
  %gn.5 = load %struct.gnode_s*, %struct.gnode_s** %next360, align 8, !tbaa !74
  %tobool347.not = icmp eq %struct.gnode_s* %gn.5, null
  br i1 %tobool347.not, label %for.inc365, label %for.body348, !llvm.loop !1009

for.inc365:                                       ; preds = %for.inc359, %for.body343
  %indvars.iv.next911 = add nuw nsw i64 %indvars.iv910, 1
  %exitcond913.not = icmp eq i64 %indvars.iv.next911, %wide.trip.count912
  br i1 %exitcond913.not, label %if.then369, label %for.body343, !llvm.loop !1010

for.end367:                                       ; preds = %for.body327
  %tobool368.not = icmp eq %struct.gnode_s* %gn.3864, null
  br i1 %tobool368.not, label %if.then369, label %if.else395

if.then369:                                       ; preds = %for.inc365, %for.end367
  %call370 = tail call fastcc %struct.lextree_node_t* @lextree_node_alloc(i32 -1, i32 %20, i32 0, i32 %96, i32 %6, i32 %conv339) #36
  %105 = load i32***, i32**** %tp241, align 8, !tbaa !227
  %106 = load %struct.phone_t*, %struct.phone_t** %phone242, align 8, !tbaa !318
  %idxprom373 = sext i8 %99 to i64
  %tmat375 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %106, i64 %idxprom373, i32 1
  %107 = load i32, i32* %tmat375, align 4, !tbaa !321
  %idxprom376 = sext i32 %107 to i64
  %arrayidx377 = getelementptr inbounds i32**, i32*** %105, i64 %idxprom376
  %108 = load i32**, i32*** %arrayidx377, align 8, !tbaa !74
  %tp379 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %call370, i64 0, i32 0, i32 3
  store i32** %108, i32*** %tp379, align 8, !tbaa !998
  %109 = bitcast %struct.lextree_node_t* %call370 to i8*
  br i1 %cmp341846, label %for.body383.preheader, label %for.end393

for.body383.preheader:                            ; preds = %if.then369
  %wide.trip.count922 = zext i32 %np.5861 to i64
  br label %for.body383

for.body383:                                      ; preds = %for.body383.preheader, %for.body383
  %indvars.iv920 = phi i64 [ 0, %for.body383.preheader ], [ %indvars.iv.next921, %for.body383 ]
  %arrayidx385 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %parent.0, i64 %indvars.iv920
  %110 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx385, align 8, !tbaa !74
  %children386 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %110, i64 0, i32 1
  %111 = load %struct.gnode_s*, %struct.gnode_s** %children386, align 8, !tbaa !1011
  %call387 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %111, i8* %109) #34
  %112 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx385, align 8, !tbaa !74
  %children390 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %112, i64 0, i32 1
  store %struct.gnode_s* %call387, %struct.gnode_s** %children390, align 8, !tbaa !1011
  %indvars.iv.next921 = add nuw nsw i64 %indvars.iv920, 1
  %exitcond923.not = icmp eq i64 %indvars.iv.next921, %wide.trip.count922
  br i1 %exitcond923.not, label %for.end393, label %for.body383, !llvm.loop !1012

for.end393:                                       ; preds = %for.body383, %if.then369
  %inc394 = add nsw i32 %n_node.7862, 1
  br label %if.end438

if.else395.loopexit:                              ; preds = %land.lhs.true354
  %113 = trunc i64 %indvars.iv910 to i32
  br label %if.else395

if.else395:                                       ; preds = %if.else395.loopexit, %for.end367
  %j.2821 = phi i32 [ 0, %for.end367 ], [ %113, %if.else395.loopexit ]
  %gn.6814 = phi %struct.gnode_s* [ %gn.3864, %for.end367 ], [ %gn.5843, %if.else395.loopexit ]
  %ln.13812 = phi %struct.lextree_node_t* [ %ln.9863, %for.end367 ], [ %102, %if.else395.loopexit ]
  %prob396 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %ln.13812, i64 0, i32 3
  %114 = load i32, i32* %prob396, align 4, !tbaa !1006
  %cmp397 = icmp slt i32 %114, %20
  br i1 %cmp397, label %if.then399, label %if.end401

if.then399:                                       ; preds = %if.else395
  store i32 %20, i32* %prob396, align 4, !tbaa !1006
  br label %if.end401

if.end401:                                        ; preds = %if.then399, %if.else395
  %115 = bitcast %struct.lextree_node_t* %ln.13812 to i8*
  %cmp403855.not = icmp eq i32 %j.2821, 0
  br i1 %cmp403855.not, label %for.cond417.preheader, label %for.body405.preheader

for.body405.preheader:                            ; preds = %if.end401
  %wide.trip.count916 = zext i32 %j.2821 to i64
  br label %for.body405

for.cond417.preheader:                            ; preds = %for.body405, %if.end401
  %j.5857 = add nuw nsw i32 %j.2821, 1
  %cmp418858 = icmp slt i32 %j.5857, %np.5861
  br i1 %cmp418858, label %for.body420.preheader, label %if.end438

for.body420.preheader:                            ; preds = %for.cond417.preheader
  %116 = zext i32 %j.2821 to i64
  %117 = add nuw nsw i64 %116, 1
  br label %for.body420

for.body405:                                      ; preds = %for.body405.preheader, %for.body405
  %indvars.iv914 = phi i64 [ 0, %for.body405.preheader ], [ %indvars.iv.next915, %for.body405 ]
  %arrayidx407 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %parent.0, i64 %indvars.iv914
  %118 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx407, align 8, !tbaa !74
  %children408 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %118, i64 0, i32 1
  %119 = load %struct.gnode_s*, %struct.gnode_s** %children408, align 8, !tbaa !1011
  %call409 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %119, i8* %115) #34
  %120 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx407, align 8, !tbaa !74
  %children412 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %120, i64 0, i32 1
  store %struct.gnode_s* %call409, %struct.gnode_s** %children412, align 8, !tbaa !1011
  %indvars.iv.next915 = add nuw nsw i64 %indvars.iv914, 1
  %exitcond917.not = icmp eq i64 %indvars.iv.next915, %wide.trip.count916
  br i1 %exitcond917.not, label %for.cond417.preheader, label %for.body405, !llvm.loop !1013

for.body420:                                      ; preds = %for.body420.preheader, %for.inc435
  %indvars.iv918 = phi i64 [ %117, %for.body420.preheader ], [ %indvars.iv.next919, %for.inc435 ]
  %arrayidx422 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %parent.0, i64 %indvars.iv918
  %121 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx422, align 8, !tbaa !74
  %children423 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %121, i64 0, i32 1
  %122 = load %struct.gnode_s*, %struct.gnode_s** %children423, align 8, !tbaa !1011
  %call424 = tail call i32 @glist_chkdup_ptr(%struct.gnode_s* %122, i8* %115) #34
  %tobool425.not = icmp eq i32 %call424, 0
  br i1 %tobool425.not, label %if.then426, label %for.inc435

if.then426:                                       ; preds = %for.body420
  %123 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx422, align 8, !tbaa !74
  %children429 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %123, i64 0, i32 1
  %124 = load %struct.gnode_s*, %struct.gnode_s** %children429, align 8, !tbaa !1011
  %call430 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %124, i8* %115) #34
  %125 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx422, align 8, !tbaa !74
  %children433 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %125, i64 0, i32 1
  store %struct.gnode_s* %call430, %struct.gnode_s** %children433, align 8, !tbaa !1011
  br label %for.inc435

for.inc435:                                       ; preds = %for.body420, %if.then426
  %indvars.iv.next919 = add nuw nsw i64 %indvars.iv918, 1
  %126 = trunc i64 %indvars.iv.next919 to i32
  %cmp418 = icmp sgt i32 %np.5861, %126
  br i1 %cmp418, label %for.body420, label %if.end438, !llvm.loop !1014

if.end438:                                        ; preds = %for.inc435, %for.cond417.preheader, %for.end393
  %gn.6813 = phi %struct.gnode_s* [ null, %for.end393 ], [ %gn.6814, %for.cond417.preheader ], [ %gn.6814, %for.inc435 ]
  %n_node.8 = phi i32 [ %inc394, %for.end393 ], [ %n_node.7862, %for.cond417.preheader ], [ %n_node.7862, %for.inc435 ]
  %ln.14 = phi %struct.lextree_node_t* [ %call370, %for.end393 ], [ %ln.13812, %for.cond417.preheader ], [ %ln.13812, %for.inc435 ]
  store %struct.lextree_node_t* %ln.14, %struct.lextree_node_t** %parent.0, align 8, !tbaa !74
  %indvars.iv.next925 = add nuw nsw i64 %indvars.iv924, 1
  %exitcond927.not = icmp eq i64 %indvars.iv.next925, %wide.trip.count926
  br i1 %exitcond927.not, label %for.end442, label %for.body327, !llvm.loop !1015

for.end442:                                       ; preds = %if.end438, %if.end323
  %np.5.lcssa = phi i32 [ %np.4, %if.end323 ], [ 1, %if.end438 ]
  %n_node.7.lcssa = phi i32 [ %n_node.6, %if.end323 ], [ %n_node.8, %if.end438 ]
  %gn.3.lcssa = phi %struct.gnode_s* [ %gn.2, %if.end323 ], [ %gn.6813, %if.end438 ]
  %p.0.lcssa = phi i32 [ 1, %if.end323 ], [ %93, %if.end438 ]
  %127 = load i32**, i32*** %internal157, align 8, !tbaa !388
  %arrayidx445 = getelementptr inbounds i32*, i32** %127, i64 %idxprom55
  %128 = load i32*, i32** %arrayidx445, align 8, !tbaa !74
  %idxprom446 = zext i32 %p.0.lcssa to i64
  %arrayidx447 = getelementptr inbounds i32, i32* %128, i64 %idxprom446
  %129 = load i32, i32* %arrayidx447, align 4, !tbaa !37
  %130 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %ciphone451 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %130, i64 %idxprom55, i32 1
  %131 = load i8*, i8** %ciphone451, align 8, !tbaa !60
  %arrayidx453 = getelementptr inbounds i8, i8* %131, i64 %idxprom446
  %132 = load i8, i8* %arrayidx453, align 1, !tbaa !63
  %conv454 = sext i8 %132 to i32
  %call455 = tail call fastcc %struct.lextree_node_t* @lextree_node_alloc(i32 %19, i32 %20, i32 1, i32 %129, i32 %6, i32 %conv454) #36
  %133 = load i32***, i32**** %tp241, align 8, !tbaa !227
  %134 = load %struct.phone_t*, %struct.phone_t** %phone242, align 8, !tbaa !318
  %idxprom458 = sext i8 %132 to i64
  %tmat460 = getelementptr inbounds %struct.phone_t, %struct.phone_t* %134, i64 %idxprom458, i32 1
  %135 = load i32, i32* %tmat460, align 4, !tbaa !321
  %idxprom461 = sext i32 %135 to i64
  %arrayidx462 = getelementptr inbounds i32**, i32*** %133, i64 %idxprom461
  %136 = load i32**, i32*** %arrayidx462, align 8, !tbaa !74
  %tp464 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %call455, i64 0, i32 0, i32 3
  store i32** %136, i32*** %tp464, align 8, !tbaa !998
  %137 = bitcast %struct.lextree_node_t* %call455 to i8*
  %cmp466870 = icmp sgt i32 %np.5.lcssa, 0
  br i1 %cmp466870, label %for.body468.preheader, label %for.end478

for.body468.preheader:                            ; preds = %for.end442
  %wide.trip.count930 = zext i32 %np.5.lcssa to i64
  br label %for.body468

for.body468:                                      ; preds = %for.body468.preheader, %for.body468
  %indvars.iv928 = phi i64 [ 0, %for.body468.preheader ], [ %indvars.iv.next929, %for.body468 ]
  %arrayidx470 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %parent.0, i64 %indvars.iv928
  %138 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx470, align 8, !tbaa !74
  %children471 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %138, i64 0, i32 1
  %139 = load %struct.gnode_s*, %struct.gnode_s** %children471, align 8, !tbaa !1011
  %call472 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %139, i8* %137) #34
  %140 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx470, align 8, !tbaa !74
  %children475 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %140, i64 0, i32 1
  store %struct.gnode_s* %call472, %struct.gnode_s** %children475, align 8, !tbaa !1011
  %indvars.iv.next929 = add nuw nsw i64 %indvars.iv928, 1
  %exitcond931.not = icmp eq i64 %indvars.iv.next929, %wide.trip.count930
  br i1 %exitcond931.not, label %for.end478, label %for.body468, !llvm.loop !1016

for.end478:                                       ; preds = %for.body468, %for.end442
  %inc479 = add nsw i32 %n_node.7.lcssa, 1
  br label %for.inc481

for.inc481:                                       ; preds = %for.inc150, %for.cond89.preheader, %for.end478, %if.then67
  %n_node.9 = phi i32 [ %inc87, %if.then67 ], [ %inc479, %for.end478 ], [ %n_node.0884, %for.cond89.preheader ], [ %n_node.2, %for.inc150 ]
  %ln.15 = phi %struct.lextree_node_t* [ %call77, %if.then67 ], [ %call455, %for.end478 ], [ %ln.0885, %for.cond89.preheader ], [ %ln.2, %for.inc150 ]
  %gn.7 = phi %struct.gnode_s* [ %gn.0886, %if.then67 ], [ %gn.3.lcssa, %for.end478 ], [ %gn.0886, %for.cond89.preheader ], [ %gn.0886, %for.inc150 ]
  %indvars.iv.next941 = add nuw nsw i64 %indvars.iv940, 1
  %exitcond943.not = icmp eq i64 %indvars.iv.next941, %wide.trip.count942
  br i1 %exitcond943.not, label %for.end483, label %for.body48, !llvm.loop !1017

for.end483:                                       ; preds = %for.inc481, %if.end
  %n_node.0.lcssa = phi i32 [ 0, %if.end ], [ %n_node.9, %for.inc481 ]
  %n_node484 = getelementptr inbounds i8, i8* %call, i64 28
  %141 = bitcast i8* %n_node484 to i32*
  store i32 %n_node.0.lcssa, i32* %141, align 4, !tbaa !77
  %conv485 = sext i32 %n_node.0.lcssa to i64
  %call486 = tail call i8* @__ckd_calloc__(i64 %conv485, i64 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i32 329) #34
  %active = getelementptr inbounds i8, i8* %call, i64 32
  %142 = bitcast i8* %active to i8**
  store i8* %call486, i8** %142, align 8, !tbaa !1018
  %call488 = tail call i8* @__ckd_calloc__(i64 %conv485, i64 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i32 330) #34
  %next_active = getelementptr inbounds i8, i8* %call, i64 40
  %143 = bitcast i8* %next_active to i8**
  store i8* %call488, i8** %143, align 8, !tbaa !1019
  %n_active = getelementptr inbounds i8, i8* %call, i64 48
  %144 = bitcast i8* %n_active to i32*
  store i32 0, i32* %144, align 8, !tbaa !797
  %n_next_active = getelementptr inbounds i8, i8* %call, i64 52
  %145 = bitcast i8* %n_next_active to i32*
  store i32 0, i32* %145, align 4, !tbaa !1020
  tail call void @ckd_free(i8* %call5) #34
  br i1 %cmp892, label %for.body492.preheader, label %for.end497

for.body492.preheader:                            ; preds = %for.end483
  %wide.trip.count = zext i32 %5 to i64
  br label %for.body492

for.body492:                                      ; preds = %for.body492.preheader, %for.body492
  %indvars.iv = phi i64 [ 0, %for.body492.preheader ], [ %indvars.iv.next, %for.body492 ]
  %arrayidx494 = getelementptr inbounds i32*, i32** %9, i64 %indvars.iv
  %146 = bitcast i32** %arrayidx494 to i8**
  %147 = load i8*, i8** %146, align 8, !tbaa !74
  tail call void @ckd_free(i8* %147) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end497, label %for.body492, !llvm.loop !1021

for.end497:                                       ; preds = %for.body492, %for.end483
  %148 = bitcast i8* %call to %struct.lextree_t*
  tail call void @ckd_free(i8* %call7) #34
  tail call void @ckd_free(i8* %parent.0.in) #34
  ret %struct.lextree_t* %148
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc %struct.lextree_node_t* @lextree_node_alloc(i32 %wid, i32 %prob, i32 %comp, i32 %ssid, i32 %n_state, i32 %ci) unnamed_addr #0 {
entry:
  %call = tail call i8* @__mymalloc__(i32 80, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i32 76) #34
  %0 = bitcast i8* %call to %struct.lextree_node_t*
  %children = getelementptr inbounds i8, i8* %call, i64 40
  %1 = bitcast i8* %children to %struct.gnode_s**
  store %struct.gnode_s* null, %struct.gnode_s** %1, align 8, !tbaa !1011
  %wid1 = getelementptr inbounds i8, i8* %call, i64 48
  %2 = bitcast i8* %wid1 to i32*
  store i32 %wid, i32* %2, align 8, !tbaa !1004
  %prob2 = getelementptr inbounds i8, i8* %call, i64 52
  %3 = bitcast i8* %prob2 to i32*
  store i32 %prob, i32* %3, align 4, !tbaa !1006
  %ssid3 = getelementptr inbounds i8, i8* %call, i64 56
  %4 = bitcast i8* %ssid3 to i32*
  store i32 %ssid, i32* %4, align 8, !tbaa !1000
  %conv = trunc i32 %ci to i8
  %5 = getelementptr inbounds i8, i8* %call, i64 72
  store i8 %conv, i8* %5, align 8, !tbaa !1022
  %conv5 = trunc i32 %comp to i8
  %6 = getelementptr inbounds i8, i8* %call, i64 73
  store i8 %conv5, i8* %6, align 1, !tbaa !1003
  %frame = getelementptr inbounds i8, i8* %call, i64 74
  %7 = bitcast i8* %frame to i16*
  store i16 -1, i16* %7, align 2, !tbaa !1023
  %conv6 = sext i32 %n_state to i64
  %call7 = tail call i8* @__ckd_calloc__(i64 %conv6, i64 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i32 84) #34
  %hmm = bitcast i8* %call to %struct.hmm_t*
  %8 = bitcast i8* %call to i8**
  store i8* %call7, i8** %8, align 8, !tbaa !1024
  tail call void @hmm_clear(%struct.hmm_t* %hmm, i32 %n_state) #34
  ret %struct.lextree_node_t* %0
}

; Function Attrs: noinline nounwind optsize uwtable
define void @lextree_free(%struct.lextree_t* %lextree) local_unnamed_addr #0 {
entry:
  %n_lc = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 3
  %0 = load i32, i32* %n_lc, align 8, !tbaa !991
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %for.body.preheader, label %if.end

for.body.preheader:                               ; preds = %entry
  %lcroot = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %1 = load %struct.lextree_lcroot_t*, %struct.lextree_lcroot_t** %lcroot, align 8, !tbaa !992
  %root = getelementptr inbounds %struct.lextree_lcroot_t, %struct.lextree_lcroot_t* %1, i64 %indvars.iv, i32 1
  %2 = load %struct.gnode_s*, %struct.gnode_s** %root, align 8, !tbaa !996
  tail call void @glist_free(%struct.gnode_s* %2) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %3 = load i32, i32* %n_lc, align 8, !tbaa !991
  %4 = sext i32 %3 to i64
  %cmp2 = icmp slt i64 %indvars.iv.next, %4
  br i1 %cmp2, label %for.body, label %for.end, !llvm.loop !1025

for.end:                                          ; preds = %for.body
  %5 = bitcast %struct.lextree_lcroot_t** %lcroot to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !992
  tail call void @ckd_free(i8* %6) #34
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %root4 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 1
  %gn.078 = load %struct.gnode_s*, %struct.gnode_s** %root4, align 8, !tbaa !74
  %tobool.not79 = icmp eq %struct.gnode_s* %gn.078, null
  br i1 %tobool.not79, label %for.end32, label %for.body6

for.cond25.preheader:                             ; preds = %for.inc21
  br i1 %tobool.not79, label %for.end32, label %for.body27

for.body6:                                        ; preds = %if.end, %for.inc21
  %gn.080 = phi %struct.gnode_s* [ %gn.0, %for.inc21 ], [ %gn.078, %if.end ]
  %7 = bitcast %struct.gnode_s* %gn.080 to %struct.lextree_node_t**
  %8 = load %struct.lextree_node_t*, %struct.lextree_node_t** %7, align 8, !tbaa !63
  %children = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %8, i64 0, i32 1
  %gn2.075 = load %struct.gnode_s*, %struct.gnode_s** %children, align 8, !tbaa !74
  %tobool8.not76 = icmp eq %struct.gnode_s* %gn2.075, null
  br i1 %tobool8.not76, label %for.inc21, label %for.body9

for.body9:                                        ; preds = %for.body6, %for.inc19
  %gn2.077 = phi %struct.gnode_s* [ %gn2.0, %for.inc19 ], [ %gn2.075, %for.body6 ]
  %9 = bitcast %struct.gnode_s* %gn2.077 to %struct.lextree_node_t**
  %10 = load %struct.lextree_node_t*, %struct.lextree_node_t** %9, align 8, !tbaa !63
  %composite = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %10, i64 0, i32 7
  %11 = load i8, i8* %composite, align 1, !tbaa !1003
  %cmp12 = icmp sgt i8 %11, -1
  br i1 %cmp12, label %if.then14, label %if.else

if.then14:                                        ; preds = %for.body9
  store i8 -1, i8* %composite, align 1, !tbaa !1003
  %ssid = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %10, i64 0, i32 4
  store i32 1, i32* %ssid, align 8, !tbaa !1000
  br label %for.inc19

if.else:                                          ; preds = %for.body9
  %ssid16 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %10, i64 0, i32 4
  %12 = load i32, i32* %ssid16, align 8, !tbaa !1000
  %inc17 = add nsw i32 %12, 1
  store i32 %inc17, i32* %ssid16, align 8, !tbaa !1000
  br label %for.inc19

for.inc19:                                        ; preds = %if.then14, %if.else
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn2.077, i64 0, i32 1
  %gn2.0 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !74
  %tobool8.not = icmp eq %struct.gnode_s* %gn2.0, null
  br i1 %tobool8.not, label %for.inc21, label %for.body9, !llvm.loop !1026

for.inc21:                                        ; preds = %for.inc19, %for.body6
  %next22 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.080, i64 0, i32 1
  %gn.0 = load %struct.gnode_s*, %struct.gnode_s** %next22, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.gnode_s* %gn.0, null
  br i1 %tobool.not, label %for.cond25.preheader, label %for.body6, !llvm.loop !1027

for.body27:                                       ; preds = %for.cond25.preheader, %for.body27
  %gn.174 = phi %struct.gnode_s* [ %gn.1, %for.body27 ], [ %gn.078, %for.cond25.preheader ]
  %k.073 = phi i32 [ %add, %for.body27 ], [ 0, %for.cond25.preheader ]
  %13 = bitcast %struct.gnode_s* %gn.174 to %struct.lextree_node_t**
  %14 = load %struct.lextree_node_t*, %struct.lextree_node_t** %13, align 8, !tbaa !63
  %call = tail call fastcc i32 @lextree_subtree_free(%struct.lextree_node_t* %14, i32 0) #36
  %add = add nsw i32 %call, %k.073
  %next31 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.174, i64 0, i32 1
  %gn.1 = load %struct.gnode_s*, %struct.gnode_s** %next31, align 8, !tbaa !74
  %tobool26.not = icmp eq %struct.gnode_s* %gn.1, null
  br i1 %tobool26.not, label %for.end32, label %for.body27, !llvm.loop !1028

for.end32:                                        ; preds = %for.body27, %if.end, %for.cond25.preheader
  %k.0.lcssa = phi i32 [ 0, %for.cond25.preheader ], [ 0, %if.end ], [ %add, %for.body27 ]
  %15 = load %struct.gnode_s*, %struct.gnode_s** %root4, align 8, !tbaa !989
  tail call void @glist_free(%struct.gnode_s* %15) #34
  %active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 5
  %16 = bitcast %struct.lextree_node_t*** %active to i8**
  %17 = load i8*, i8** %16, align 8, !tbaa !1018
  tail call void @ckd_free(i8* %17) #34
  %next_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 6
  %18 = bitcast %struct.lextree_node_t*** %next_active to i8**
  %19 = load i8*, i8** %18, align 8, !tbaa !1019
  tail call void @ckd_free(i8* %19) #34
  %n_node = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 4
  %20 = load i32, i32* %n_node, align 4, !tbaa !77
  %cmp34.not = icmp eq i32 %k.0.lcssa, %20
  br i1 %cmp34.not, label %if.end38, label %if.then36

if.then36:                                        ; preds = %for.end32
  tail call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i64 413, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.1160, i64 0, i64 0)) #34
  %21 = load i32, i32* %n_node, align 4, !tbaa !77
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.1161, i64 0, i64 0), i32 %21, i32 %k.0.lcssa) #34
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %for.end32
  %22 = bitcast %struct.lextree_t* %lextree to i8*
  tail call void @ckd_free(i8* %22) #34
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define internal fastcc i32 @lextree_subtree_free(%struct.lextree_node_t* %ln, i32 %level) unnamed_addr #0 {
entry:
  %children = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %ln, i64 0, i32 1
  %add = add nsw i32 %level, 1
  %gn.017 = load %struct.gnode_s*, %struct.gnode_s** %children, align 8, !tbaa !74
  %tobool.not18 = icmp eq %struct.gnode_s* %gn.017, null
  br i1 %tobool.not18, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %gn.020 = phi %struct.gnode_s* [ %gn.0, %for.body ], [ %gn.017, %entry ]
  %k.019 = phi i32 [ %add1, %for.body ], [ 0, %entry ]
  %0 = bitcast %struct.gnode_s* %gn.020 to %struct.lextree_node_t**
  %1 = load %struct.lextree_node_t*, %struct.lextree_node_t** %0, align 8, !tbaa !63
  %call = tail call fastcc i32 @lextree_subtree_free(%struct.lextree_node_t* %1, i32 %add) #36
  %add1 = add nsw i32 %call, %k.019
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.020, i64 0, i32 1
  %gn.0 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.gnode_s* %gn.0, null
  br i1 %tobool.not, label %for.end.loopexit, label %for.body, !llvm.loop !1029

for.end.loopexit:                                 ; preds = %for.body
  %.pre = load %struct.gnode_s*, %struct.gnode_s** %children, align 8, !tbaa !1011
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %entry
  %2 = phi %struct.gnode_s* [ null, %entry ], [ %.pre, %for.end.loopexit ]
  %k.0.lcssa = phi i32 [ 0, %entry ], [ %add1, %for.end.loopexit ]
  tail call void @glist_free(%struct.gnode_s* %2) #34
  store %struct.gnode_s* null, %struct.gnode_s** %children, align 8, !tbaa !1011
  %cmp.not = icmp eq i32 %level, 1
  br i1 %cmp.not, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %for.end
  %ssid = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %ln, i64 0, i32 4
  %3 = load i32, i32* %ssid, align 8, !tbaa !1000
  %dec = add nsw i32 %3, -1
  store i32 %dec, i32* %ssid, align 8, !tbaa !1000
  %cmp4 = icmp eq i32 %dec, 0
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.end
  %4 = bitcast %struct.lextree_node_t* %ln to i8*
  tail call void @__myfree__(i8* %4, i32 80, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i32 362) #34
  %inc = add nsw i32 %k.0.lcssa, 1
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %k.1 = phi i32 [ %inc, %if.then ], [ %k.0.lcssa, %lor.lhs.false ]
  ret i32 %k.1
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @lextree_ci_active(%struct.lextree_t* nocapture readonly %lextree, i32* nocapture %ci_active) local_unnamed_addr #13 {
entry:
  %active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 5
  %0 = load %struct.lextree_node_t**, %struct.lextree_node_t*** %active, align 8, !tbaa !1018
  %n_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 7
  %1 = load i32, i32* %n_active, align 8, !tbaa !797
  %cmp12 = icmp sgt i32 %1, 0
  br i1 %cmp12, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %0, i64 %indvars.iv
  %2 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx, align 8, !tbaa !74
  %ci = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %2, i64 0, i32 6
  %3 = load i8, i8* %ci, align 8, !tbaa !1022
  %conv = sext i8 %3 to i32
  %and = and i32 %conv, 31
  %shl = shl nuw i32 1, %and
  %shr = ashr i32 %conv, 5
  %idxprom3 = sext i32 %shr to i64
  %arrayidx4 = getelementptr inbounds i32, i32* %ci_active, i64 %idxprom3
  %4 = load i32, i32* %arrayidx4, align 4, !tbaa !37
  %or = or i32 %shl, %4
  store i32 %or, i32* %arrayidx4, align 4, !tbaa !37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32, i32* %n_active, align 8, !tbaa !797
  %6 = sext i32 %5 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !1030

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @lextree_ssid_active(%struct.lextree_t* nocapture readonly %lextree, i32* nocapture %ssid, i32* nocapture %comssid) local_unnamed_addr #13 {
entry:
  %active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 5
  %0 = load %struct.lextree_node_t**, %struct.lextree_node_t*** %active, align 8, !tbaa !1018
  %n_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 7
  %1 = load i32, i32* %n_active, align 8, !tbaa !797
  %cmp15 = icmp sgt i32 %1, 0
  br i1 %cmp15, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %0, i64 %indvars.iv
  %2 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx, align 8, !tbaa !74
  %composite = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %2, i64 0, i32 7
  %3 = load i8, i8* %composite, align 1, !tbaa !1003
  %tobool.not = icmp eq i8 %3, 0
  %ssid4 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %2, i64 0, i32 4
  %4 = load i32, i32* %ssid4, align 8, !tbaa !1000
  %idxprom5 = sext i32 %4 to i64
  %ssid.comssid = select i1 %tobool.not, i32* %ssid, i32* %comssid
  %arrayidx3 = getelementptr inbounds i32, i32* %ssid.comssid, i64 %idxprom5
  store i32 1, i32* %arrayidx3, align 4, !tbaa !37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32, i32* %n_active, align 8, !tbaa !797
  %6 = sext i32 %5 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !1031

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @lextree_utt_end(%struct.lextree_t* nocapture %l, %struct.kbcore_t* nocapture readonly %kbc) local_unnamed_addr #0 {
entry:
  %mdef1 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 1
  %0 = load %struct.mdef_t*, %struct.mdef_t** %mdef1, align 8, !tbaa !14
  %n_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %l, i64 0, i32 7
  %active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %l, i64 0, i32 5
  %n_emit_state = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %0, i64 0, i32 2
  %1 = load i32, i32* %n_active, align 8, !tbaa !797
  %cmp12 = icmp sgt i32 %1, 0
  br i1 %cmp12, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %2 = load %struct.lextree_node_t**, %struct.lextree_node_t*** %active, align 8, !tbaa !1018
  %arrayidx = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %2, i64 %indvars.iv
  %3 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx, align 8, !tbaa !74
  %frame = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %3, i64 0, i32 8
  store i16 -1, i16* %frame, align 2, !tbaa !1023
  %hmm = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %3, i64 0, i32 0
  %4 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  tail call void @hmm_clear(%struct.hmm_t* %hmm, i32 %4) #34
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32, i32* %n_active, align 8, !tbaa !797
  %6 = sext i32 %5 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !1032

for.end:                                          ; preds = %for.body, %entry
  store i32 0, i32* %n_active, align 8, !tbaa !797
  %n_next_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %l, i64 0, i32 8
  store i32 0, i32* %n_next_active, align 4, !tbaa !1020
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define void @lextree_dump(%struct.lextree_t* nocapture readonly %lextree, %struct.dict_t* nocapture readonly %dict, %struct._IO_FILE* nocapture %fp) local_unnamed_addr #14 {
entry:
  %root = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 1
  %gn.043 = load %struct.gnode_s*, %struct.gnode_s** %root, align 8, !tbaa !74
  %tobool.not44 = icmp eq %struct.gnode_s* %gn.043, null
  br i1 %tobool.not44, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %gn.045 = phi %struct.gnode_s* [ %gn.0, %for.body ], [ %gn.043, %entry ]
  %0 = bitcast %struct.gnode_s* %gn.045 to %struct.lextree_node_t**
  %1 = load %struct.lextree_node_t*, %struct.lextree_node_t** %0, align 8, !tbaa !63
  tail call fastcc void @lextree_subtree_print(%struct.lextree_node_t* %1, i32 0, %struct.dict_t* %dict, %struct._IO_FILE* %fp) #36
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.045, i64 0, i32 1
  %gn.0 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.gnode_s* %gn.0, null
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !1033

for.end:                                          ; preds = %for.body, %entry
  %n_lc = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 3
  %2 = load i32, i32* %n_lc, align 8, !tbaa !991
  %cmp = icmp sgt i32 %2, 0
  br i1 %cmp, label %for.body4.preheader, label %if.end

for.body4.preheader:                              ; preds = %for.end
  %lcroot = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 2
  br label %for.body4

for.body4:                                        ; preds = %for.body4.preheader, %for.inc17
  %indvars.iv = phi i64 [ 0, %for.body4.preheader ], [ %indvars.iv.next, %for.inc17 ]
  %3 = load %struct.lextree_lcroot_t*, %struct.lextree_lcroot_t** %lcroot, align 8, !tbaa !992
  %lc = getelementptr inbounds %struct.lextree_lcroot_t, %struct.lextree_lcroot_t* %3, i64 %indvars.iv, i32 0
  %4 = load i8, i8* %lc, align 8, !tbaa !994
  %conv = sext i8 %4 to i32
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.1168, i64 0, i64 0), i32 %conv) #36
  %5 = load %struct.lextree_lcroot_t*, %struct.lextree_lcroot_t** %lcroot, align 8, !tbaa !992
  %root8 = getelementptr inbounds %struct.lextree_lcroot_t, %struct.lextree_lcroot_t* %5, i64 %indvars.iv, i32 1
  %gn.138 = load %struct.gnode_s*, %struct.gnode_s** %root8, align 8, !tbaa !74
  %tobool10.not39 = icmp eq %struct.gnode_s* %gn.138, null
  br i1 %tobool10.not39, label %for.inc17, label %for.body11

for.body11:                                       ; preds = %for.body4, %for.body11
  %gn.140 = phi %struct.gnode_s* [ %gn.1, %for.body11 ], [ %gn.138, %for.body4 ]
  %6 = bitcast %struct.gnode_s* %gn.140 to %struct.lextree_node_t**
  %7 = load %struct.lextree_node_t*, %struct.lextree_node_t** %6, align 8, !tbaa !63
  tail call fastcc void @lextree_node_print(%struct.lextree_node_t* %7, %struct.dict_t* %dict, %struct._IO_FILE* %fp) #36
  %next15 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.140, i64 0, i32 1
  %gn.1 = load %struct.gnode_s*, %struct.gnode_s** %next15, align 8, !tbaa !74
  %tobool10.not = icmp eq %struct.gnode_s* %gn.1, null
  br i1 %tobool10.not, label %for.inc17, label %for.body11, !llvm.loop !1034

for.inc17:                                        ; preds = %for.body11, %for.body4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %8 = load i32, i32* %n_lc, align 8, !tbaa !991
  %9 = sext i32 %8 to i64
  %cmp3 = icmp slt i64 %indvars.iv.next, %9
  br i1 %cmp3, label %for.body4, label %if.end, !llvm.loop !1035

if.end:                                           ; preds = %for.inc17, %for.end
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define internal fastcc void @lextree_subtree_print(%struct.lextree_node_t* nocapture readonly %ln, i32 %level, %struct.dict_t* nocapture readonly %dict, %struct._IO_FILE* nocapture %fp) unnamed_addr #14 {
entry:
  %cmp19 = icmp sgt i32 %level, 0
  br i1 %cmp19, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %i.020 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %0 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.1170, i64 0, i64 0), i64 4, i64 1, %struct._IO_FILE* %fp)
  %inc = add nuw nsw i32 %i.020, 1
  %exitcond.not = icmp eq i32 %inc, %level
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !1036

for.end:                                          ; preds = %for.body, %entry
  tail call fastcc void @lextree_node_print(%struct.lextree_node_t* %ln, %struct.dict_t* %dict, %struct._IO_FILE* %fp) #36
  %children = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %ln, i64 0, i32 1
  %add = add nsw i32 %level, 1
  %gn.016 = load %struct.gnode_s*, %struct.gnode_s** %children, align 8, !tbaa !74
  %tobool.not17 = icmp eq %struct.gnode_s* %gn.016, null
  br i1 %tobool.not17, label %for.end4, label %for.body2

for.body2:                                        ; preds = %for.end, %for.body2
  %gn.018 = phi %struct.gnode_s* [ %gn.0, %for.body2 ], [ %gn.016, %for.end ]
  %1 = bitcast %struct.gnode_s* %gn.018 to %struct.lextree_node_t**
  %2 = load %struct.lextree_node_t*, %struct.lextree_node_t** %1, align 8, !tbaa !63
  tail call fastcc void @lextree_subtree_print(%struct.lextree_node_t* %2, i32 %add, %struct.dict_t* %dict, %struct._IO_FILE* %fp) #36
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.018, i64 0, i32 1
  %gn.0 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.gnode_s* %gn.0, null
  br i1 %tobool.not, label %for.end4, label %for.body2, !llvm.loop !1037

for.end4:                                         ; preds = %for.body2, %for.end
  ret void
}

; Function Attrs: nofree noinline nounwind optsize uwtable
define internal fastcc void @lextree_node_print(%struct.lextree_node_t* nocapture readonly %ln, %struct.dict_t* nocapture readonly %dict, %struct._IO_FILE* nocapture %fp) unnamed_addr #14 {
entry:
  %wid = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %ln, i64 0, i32 2
  %0 = load i32, i32* %wid, align 8, !tbaa !1004
  %prob = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %ln, i64 0, i32 3
  %1 = load i32, i32* %prob, align 4, !tbaa !1006
  %composite = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %ln, i64 0, i32 7
  %2 = load i8, i8* %composite, align 1, !tbaa !1003
  %conv = sext i8 %2 to i32
  %ssid = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %ln, i64 0, i32 4
  %3 = load i32, i32* %ssid, align 8, !tbaa !1000
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %fp, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9.1169, i64 0, i64 0), i32 %0, i32 %1, i32 %conv, i32 %3) #36
  %4 = load i32, i32* %wid, align 8, !tbaa !1004
  %cmp = icmp sgt i32 %4, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %word = getelementptr inbounds %struct.dict_t, %struct.dict_t* %dict, i64 0, i32 4
  %5 = load %struct.dictword_t*, %struct.dictword_t** %word, align 8, !tbaa !39
  %idxprom14 = zext i32 %4 to i64
  %word4 = getelementptr inbounds %struct.dictword_t, %struct.dictword_t* %5, i64 %idxprom14, i32 0
  %6 = load i8*, i8** %word4, align 8, !tbaa !510
  %fputs = tail call i32 @fputs(i8* %6, %struct._IO_FILE* %fp)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %fp)
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @lextree_enter(%struct.lextree_t* nocapture %lextree, i8 signext %lc, i32 %cf, i32 %inscore, i32 %inhist, i32 %thresh) local_unnamed_addr #13 {
entry:
  %add = add nsw i32 %cf, 1
  %n_lc = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 3
  %0 = load i32, i32* %n_lc, align 8, !tbaa !991
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %cmp372 = icmp sgt i32 %0, 0
  %lcroot = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 2
  %1 = load %struct.lextree_lcroot_t*, %struct.lextree_lcroot_t** %lcroot, align 8, !tbaa !992
  br i1 %cmp372, label %land.rhs.lr.ph, label %for.end

land.rhs.lr.ph:                                   ; preds = %for.cond.preheader
  %wide.trip.count = zext i32 %0 to i64
  br label %land.rhs

if.then:                                          ; preds = %entry
  %root1 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 1
  br label %if.end

land.rhs:                                         ; preds = %land.rhs.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %land.rhs.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %lc4 = getelementptr inbounds %struct.lextree_lcroot_t, %struct.lextree_lcroot_t* %1, i64 %indvars.iv, i32 0
  %2 = load i8, i8* %lc4, align 8, !tbaa !994
  %cmp6.not = icmp eq i8 %2, %lc
  br i1 %cmp6.not, label %for.end.loopexit.split.loop.exit76, label %for.inc

for.inc:                                          ; preds = %land.rhs
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %land.rhs, !llvm.loop !1038

for.end.loopexit.split.loop.exit76:               ; preds = %land.rhs
  %3 = trunc i64 %indvars.iv to i32
  br label %for.end

for.end:                                          ; preds = %for.inc, %for.end.loopexit.split.loop.exit76, %for.cond.preheader
  %i.0.lcssa = phi i32 [ 0, %for.cond.preheader ], [ %3, %for.end.loopexit.split.loop.exit76 ], [ %0, %for.inc ]
  %idxprom9 = zext i32 %i.0.lcssa to i64
  %root11 = getelementptr inbounds %struct.lextree_lcroot_t, %struct.lextree_lcroot_t* %1, i64 %idxprom9, i32 1
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  %root.0.in = phi %struct.gnode_s** [ %root1, %if.then ], [ %root11, %for.end ]
  %n_next_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 8
  %4 = load i32, i32* %n_next_active, align 4, !tbaa !1020
  %conv28 = trunc i32 %add to i16
  %next_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 6
  %gn.068 = load %struct.gnode_s*, %struct.gnode_s** %root.0.in, align 8, !tbaa !74
  %tobool.not69 = icmp eq %struct.gnode_s* %gn.068, null
  br i1 %tobool.not69, label %for.end36, label %for.body13

for.body13:                                       ; preds = %if.end, %for.inc35
  %gn.071 = phi %struct.gnode_s* [ %gn.0, %for.inc35 ], [ %gn.068, %if.end ]
  %n.070 = phi i32 [ %n.1, %for.inc35 ], [ %4, %if.end ]
  %5 = bitcast %struct.gnode_s* %gn.071 to %struct.lextree_node_t**
  %6 = load %struct.lextree_node_t*, %struct.lextree_node_t** %5, align 8, !tbaa !63
  %prob = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %6, i64 0, i32 3
  %7 = load i32, i32* %prob, align 4, !tbaa !1006
  %add15 = add nsw i32 %7, %inscore
  %cmp16.not = icmp slt i32 %add15, %thresh
  br i1 %cmp16.not, label %for.inc35, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body13
  %score = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %6, i64 0, i32 0, i32 1, i32 0
  %8 = load i32, i32* %score, align 8, !tbaa !749
  %cmp18 = icmp slt i32 %8, %add15
  br i1 %cmp18, label %if.then20, label %for.inc35

if.then20:                                        ; preds = %land.lhs.true
  store i32 %add15, i32* %score, align 8, !tbaa !749
  %history = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %6, i64 0, i32 0, i32 1, i32 1
  store i32 %inhist, i32* %history, align 4, !tbaa !754
  %frame = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %6, i64 0, i32 8
  %9 = load i16, i16* %frame, align 2, !tbaa !1023
  %conv24 = sext i16 %9 to i32
  %cmp25.not = icmp eq i32 %add, %conv24
  br i1 %cmp25.not, label %for.inc35, label %if.then27

if.then27:                                        ; preds = %if.then20
  store i16 %conv28, i16* %frame, align 2, !tbaa !1023
  %10 = load %struct.lextree_node_t**, %struct.lextree_node_t*** %next_active, align 8, !tbaa !1019
  %inc30 = add nsw i32 %n.070, 1
  %idxprom31 = sext i32 %n.070 to i64
  %arrayidx32 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %10, i64 %idxprom31
  store %struct.lextree_node_t* %6, %struct.lextree_node_t** %arrayidx32, align 8, !tbaa !74
  br label %for.inc35

for.inc35:                                        ; preds = %for.body13, %land.lhs.true, %if.then27, %if.then20
  %n.1 = phi i32 [ %inc30, %if.then27 ], [ %n.070, %if.then20 ], [ %n.070, %land.lhs.true ], [ %n.070, %for.body13 ]
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.071, i64 0, i32 1
  %gn.0 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.gnode_s* %gn.0, null
  br i1 %tobool.not, label %for.end36, label %for.body13, !llvm.loop !1039

for.end36:                                        ; preds = %for.inc35, %if.end
  %n.0.lcssa = phi i32 [ %4, %if.end ], [ %n.1, %for.inc35 ]
  store i32 %n.0.lcssa, i32* %n_next_active, align 4, !tbaa !1020
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn
define void @lextree_active_swap(%struct.lextree_t* nocapture %lextree) local_unnamed_addr #4 {
entry:
  %active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 5
  %0 = load %struct.lextree_node_t**, %struct.lextree_node_t*** %active, align 8, !tbaa !1018
  %next_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 6
  %1 = load %struct.lextree_node_t**, %struct.lextree_node_t*** %next_active, align 8, !tbaa !1019
  store %struct.lextree_node_t** %1, %struct.lextree_node_t*** %active, align 8, !tbaa !1018
  store %struct.lextree_node_t** %0, %struct.lextree_node_t*** %next_active, align 8, !tbaa !1019
  %n_next_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 8
  %2 = load i32, i32* %n_next_active, align 4, !tbaa !1020
  %n_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 7
  store i32 %2, i32* %n_active, align 8, !tbaa !797
  store i32 0, i32* %n_next_active, align 4, !tbaa !1020
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define i32 @lextree_hmm_eval(%struct.lextree_t* nocapture %lextree, %struct.kbcore_t* nocapture readonly %kbc, %struct.ascr_t* nocapture readonly %ascr, i32 %frm, %struct._IO_FILE* %fp) local_unnamed_addr #0 {
entry:
  %mdef1 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 1
  %0 = load %struct.mdef_t*, %struct.mdef_t** %mdef1, align 8, !tbaa !14
  %dict2pid = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 3
  %1 = load %struct.dict2pid_t*, %struct.dict2pid_t** %dict2pid, align 8, !tbaa !19
  %n_emit_state = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %0, i64 0, i32 2
  %2 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  %active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 5
  %3 = load %struct.lextree_node_t**, %struct.lextree_node_t*** %active, align 8, !tbaa !1018
  %tobool.not = icmp eq %struct._IO_FILE* %fp, null
  br i1 %tobool.not, label %if.else20, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %n_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 7
  %dict = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 2
  %comsseq = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %1, i64 0, i32 4
  %comsen = getelementptr inbounds %struct.ascr_t, %struct.ascr_t* %ascr, i64 0, i32 1
  %sseq = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %0, i64 0, i32 9
  %sen = getelementptr inbounds %struct.ascr_t, %struct.ascr_t* %ascr, i64 0, i32 0
  %4 = load i32, i32* %n_active, align 8, !tbaa !797
  %cmp221 = icmp sgt i32 %4, 0
  br i1 %cmp221, label %for.body, label %if.end105.thread238

if.end105.thread238:                              ; preds = %for.cond.preheader
  %best106241 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 9
  store i32 -2147483648, i32* %best106241, align 8, !tbaa !798
  %wbest107242 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 10
  store i32 -2147483648, i32* %wbest107242, align 4, !tbaa !799
  br label %if.then109

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv231 = phi i64 [ %indvars.iv.next232, %for.body ], [ 0, %for.cond.preheader ]
  %best.0224 = phi i32 [ %spec.select, %for.body ], [ -2147483648, %for.cond.preheader ]
  %wbest.0223 = phi i32 [ %wbest.1, %for.body ], [ -2147483648, %for.cond.preheader ]
  %arrayidx = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %3, i64 %indvars.iv231
  %5 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx, align 8, !tbaa !74
  %6 = load %struct.dict_t*, %struct.dict_t** %dict, align 8, !tbaa !16
  tail call fastcc void @lextree_node_print(%struct.lextree_node_t* %5, %struct.dict_t* %6, %struct._IO_FILE* nonnull %fp) #36
  %composite = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %5, i64 0, i32 7
  %7 = load i8, i8* %composite, align 1, !tbaa !1003
  %tobool2.not = icmp eq i8 %7, 0
  %hmm = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %5, i64 0, i32 0
  %sseq.comsseq = select i1 %tobool2.not, i16*** %sseq, i16*** %comsseq
  %sen.comsen = select i1 %tobool2.not, i32** %sen, i32** %comsen
  %8 = load i16**, i16*** %sseq.comsseq, align 8, !tbaa !74
  %ssid7 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %5, i64 0, i32 4
  %9 = load i32, i32* %ssid7, align 8, !tbaa !1000
  %idxprom8 = sext i32 %9 to i64
  %arrayidx9 = getelementptr inbounds i16*, i16** %8, i64 %idxprom8
  %10 = load i16*, i16** %arrayidx9, align 8, !tbaa !74
  %11 = load i32*, i32** %sen.comsen, align 8, !tbaa !74
  %call10 = tail call i32 @hmm_dump_vit_eval(%struct.hmm_t* %hmm, i32 %2, i16* %10, i32* %11, %struct._IO_FILE* nonnull %fp) #34
  %cmp11 = icmp slt i32 %best.0224, %call10
  %spec.select = select i1 %cmp11, i32 %call10, i32 %best.0224
  %wid = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %5, i64 0, i32 2
  %12 = load i32, i32* %wid, align 8, !tbaa !1004
  %cmp14 = icmp sgt i32 %12, -1
  %cmp16 = icmp slt i32 %wbest.0223, %call10
  %or.cond = select i1 %cmp14, i1 %cmp16, i1 false
  %wbest.1 = select i1 %or.cond, i32 %call10, i32 %wbest.0223
  %indvars.iv.next232 = add nuw nsw i64 %indvars.iv231, 1
  %13 = load i32, i32* %n_active, align 8, !tbaa !797
  %14 = sext i32 %13 to i64
  %cmp = icmp slt i64 %indvars.iv.next232, %14
  br i1 %cmp, label %for.body, label %if.end105, !llvm.loop !1040

if.else20:                                        ; preds = %entry
  switch i32 %2, label %if.end105.thread [
    i32 3, label %for.cond23.preheader
    i32 5, label %for.cond64.preheader
  ]

for.cond64.preheader:                             ; preds = %if.else20
  %n_active65 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 7
  %comsseq82 = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %1, i64 0, i32 4
  %comsen86 = getelementptr inbounds %struct.ascr_t, %struct.ascr_t* %ascr, i64 0, i32 1
  %sseq74 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %0, i64 0, i32 9
  %sen78 = getelementptr inbounds %struct.ascr_t, %struct.ascr_t* %ascr, i64 0, i32 0
  %15 = load i32, i32* %n_active65, align 8, !tbaa !797
  %cmp66215 = icmp sgt i32 %15, 0
  br i1 %cmp66215, label %for.body67, label %if.end105.thread233

for.cond23.preheader:                             ; preds = %if.else20
  %n_active24 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 7
  %comsseq41 = getelementptr inbounds %struct.dict2pid_t, %struct.dict2pid_t* %1, i64 0, i32 4
  %comsen45 = getelementptr inbounds %struct.ascr_t, %struct.ascr_t* %ascr, i64 0, i32 1
  %sseq33 = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %0, i64 0, i32 9
  %sen37 = getelementptr inbounds %struct.ascr_t, %struct.ascr_t* %ascr, i64 0, i32 0
  %16 = load i32, i32* %n_active24, align 8, !tbaa !797
  %cmp25210 = icmp sgt i32 %16, 0
  br i1 %cmp25210, label %for.body26, label %if.end105.thread233

for.body26:                                       ; preds = %for.cond23.preheader, %for.body26
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body26 ], [ 0, %for.cond23.preheader ]
  %best.2213 = phi i32 [ %spec.select199, %for.body26 ], [ -2147483648, %for.cond23.preheader ]
  %wbest.2212 = phi i32 [ %wbest.3, %for.body26 ], [ -2147483648, %for.cond23.preheader ]
  %arrayidx28 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %3, i64 %indvars.iv
  %17 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx28, align 8, !tbaa !74
  %composite29 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %17, i64 0, i32 7
  %18 = load i8, i8* %composite29, align 1, !tbaa !1003
  %tobool30.not = icmp eq i8 %18, 0
  %hmm32 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %17, i64 0, i32 0
  %sseq33.comsseq41 = select i1 %tobool30.not, i16*** %sseq33, i16*** %comsseq41
  %sen37.comsen45 = select i1 %tobool30.not, i32** %sen37, i32** %comsen45
  %19 = load i16**, i16*** %sseq33.comsseq41, align 8, !tbaa !74
  %ssid42 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %17, i64 0, i32 4
  %20 = load i32, i32* %ssid42, align 8, !tbaa !1000
  %idxprom43 = sext i32 %20 to i64
  %arrayidx44 = getelementptr inbounds i16*, i16** %19, i64 %idxprom43
  %21 = load i16*, i16** %arrayidx44, align 8, !tbaa !74
  %22 = load i32*, i32** %sen37.comsen45, align 8, !tbaa !74
  %call46 = tail call i32 @hmm_vit_eval_3st(%struct.hmm_t* %hmm32, i16* %21, i32* %22) #34
  %cmp48 = icmp slt i32 %best.2213, %call46
  %spec.select199 = select i1 %cmp48, i32 %call46, i32 %best.2213
  %wid51 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %17, i64 0, i32 2
  %23 = load i32, i32* %wid51, align 8, !tbaa !1004
  %cmp52 = icmp sgt i32 %23, -1
  %cmp54 = icmp slt i32 %wbest.2212, %call46
  %or.cond200 = select i1 %cmp52, i1 %cmp54, i1 false
  %wbest.3 = select i1 %or.cond200, i32 %call46, i32 %wbest.2212
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %24 = load i32, i32* %n_active24, align 8, !tbaa !797
  %25 = sext i32 %24 to i64
  %cmp25 = icmp slt i64 %indvars.iv.next, %25
  br i1 %cmp25, label %for.body26, label %if.end105, !llvm.loop !1041

for.body67:                                       ; preds = %for.cond64.preheader, %for.body67
  %indvars.iv229 = phi i64 [ %indvars.iv.next230, %for.body67 ], [ 0, %for.cond64.preheader ]
  %best.4218 = phi i32 [ %spec.select201, %for.body67 ], [ -2147483648, %for.cond64.preheader ]
  %wbest.4217 = phi i32 [ %wbest.5, %for.body67 ], [ -2147483648, %for.cond64.preheader ]
  %arrayidx69 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %3, i64 %indvars.iv229
  %26 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx69, align 8, !tbaa !74
  %composite70 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %26, i64 0, i32 7
  %27 = load i8, i8* %composite70, align 1, !tbaa !1003
  %tobool71.not = icmp eq i8 %27, 0
  %hmm73 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %26, i64 0, i32 0
  %sseq74.comsseq82 = select i1 %tobool71.not, i16*** %sseq74, i16*** %comsseq82
  %sen78.comsen86 = select i1 %tobool71.not, i32** %sen78, i32** %comsen86
  %28 = load i16**, i16*** %sseq74.comsseq82, align 8, !tbaa !74
  %ssid83 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %26, i64 0, i32 4
  %29 = load i32, i32* %ssid83, align 8, !tbaa !1000
  %idxprom84 = sext i32 %29 to i64
  %arrayidx85 = getelementptr inbounds i16*, i16** %28, i64 %idxprom84
  %30 = load i16*, i16** %arrayidx85, align 8, !tbaa !74
  %31 = load i32*, i32** %sen78.comsen86, align 8, !tbaa !74
  %call87 = tail call i32 @hmm_vit_eval_5st(%struct.hmm_t* %hmm73, i16* %30, i32* %31) #34
  %cmp89 = icmp slt i32 %best.4218, %call87
  %spec.select201 = select i1 %cmp89, i32 %call87, i32 %best.4218
  %wid92 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %26, i64 0, i32 2
  %32 = load i32, i32* %wid92, align 8, !tbaa !1004
  %cmp93 = icmp sgt i32 %32, -1
  %cmp95 = icmp slt i32 %wbest.4217, %call87
  %or.cond202 = select i1 %cmp93, i1 %cmp95, i1 false
  %wbest.5 = select i1 %or.cond202, i32 %call87, i32 %wbest.4217
  %indvars.iv.next230 = add nuw nsw i64 %indvars.iv229, 1
  %33 = load i32, i32* %n_active65, align 8, !tbaa !797
  %34 = sext i32 %33 to i64
  %cmp66 = icmp slt i64 %indvars.iv.next230, %34
  br i1 %cmp66, label %for.body67, label %if.end105, !llvm.loop !1042

if.end105.thread:                                 ; preds = %if.else20
  tail call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i64 656, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.1177, i64 0, i64 0)) #34
  tail call void (i8*, ...) @_E__die_error(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5.1178, i64 0, i64 0), i32 %2) #34
  %best106205 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 9
  store i32 -2147483648, i32* %best106205, align 8, !tbaa !798
  %wbest107206 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 10
  store i32 -2147483648, i32* %wbest107206, align 4, !tbaa !799
  br label %if.end113

if.end105.thread233:                              ; preds = %for.cond64.preheader, %for.cond23.preheader
  %best106236 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 9
  store i32 -2147483648, i32* %best106236, align 8, !tbaa !798
  %wbest107237 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 10
  store i32 -2147483648, i32* %wbest107237, align 4, !tbaa !799
  br label %if.end113

if.end105:                                        ; preds = %for.body, %for.body67, %for.body26
  %35 = phi i32 [ %24, %for.body26 ], [ %33, %for.body67 ], [ %13, %for.body ]
  %wbest.6 = phi i32 [ %wbest.3, %for.body26 ], [ %wbest.5, %for.body67 ], [ %wbest.1, %for.body ]
  %best.6 = phi i32 [ %spec.select199, %for.body26 ], [ %spec.select201, %for.body67 ], [ %spec.select, %for.body ]
  %best106 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 9
  store i32 %best.6, i32* %best106, align 8, !tbaa !798
  %wbest107 = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 10
  store i32 %wbest.6, i32* %wbest107, align 4, !tbaa !799
  br i1 %tobool.not, label %if.end113, label %if.then109

if.then109:                                       ; preds = %if.end105.thread238, %if.end105
  %best.6244 = phi i32 [ -2147483648, %if.end105.thread238 ], [ %best.6, %if.end105 ]
  %wbest.6243 = phi i32 [ -2147483648, %if.end105.thread238 ], [ %wbest.6, %if.end105 ]
  %36 = phi i32 [ %4, %if.end105.thread238 ], [ %35, %if.end105 ]
  %call111 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %fp, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.1179, i64 0, i64 0), i32 %frm, i32 %36, i32 %best.6244, i32 %wbest.6243) #36
  %call112 = tail call i32 @fflush(%struct._IO_FILE* nonnull %fp) #36
  br label %if.end113

if.end113:                                        ; preds = %if.end105.thread233, %if.end105.thread, %if.then109, %if.end105
  %best.6207 = phi i32 [ -2147483648, %if.end105.thread ], [ %best.6244, %if.then109 ], [ %best.6, %if.end105 ], [ -2147483648, %if.end105.thread233 ]
  ret i32 %best.6207
}

; Function Attrs: noinline nounwind optsize uwtable
define void @lextree_hmm_histbin(%struct.lextree_t* nocapture readonly %lextree, i32 %bestscr, i32* nocapture %bin, i32 %nbin, i32 %bw) local_unnamed_addr #0 {
entry:
  %conv = sext i32 %nbin to i64
  %call = tail call i8* @__ckd_calloc__(i64 %conv, i64 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i32 680) #34
  %0 = bitcast i8* %call to %struct.gnode_s**
  %active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 5
  %1 = load %struct.lextree_node_t**, %struct.lextree_node_t*** %active, align 8, !tbaa !1018
  %n_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 7
  %sub5 = add nsw i32 %nbin, -1
  %2 = load i32, i32* %n_active, align 8, !tbaa !797
  %cmp69 = icmp sgt i32 %2, 0
  br i1 %cmp69, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %entry
  %cmp1566 = icmp sgt i32 %nbin, 0
  br i1 %cmp1566, label %for.body17.preheader, label %for.end31

for.body17.preheader:                             ; preds = %for.cond14.preheader
  %wide.trip.count = zext i32 %nbin to i64
  br label %for.body17

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv73 = phi i64 [ %indvars.iv.next74, %for.body ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %1, i64 %indvars.iv73
  %3 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx, align 8, !tbaa !74
  %bestscore = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %3, i64 0, i32 0, i32 4
  %4 = load i32, i32* %bestscore, align 8, !tbaa !760
  %sub = sub nsw i32 %bestscr, %4
  %div = sdiv i32 %sub, %bw
  %cmp3.not = icmp slt i32 %div, %nbin
  %spec.select = select i1 %cmp3.not, i32 %div, i32 %sub5
  %idxprom6 = sext i32 %spec.select to i64
  %arrayidx7 = getelementptr inbounds i32, i32* %bin, i64 %idxprom6
  %5 = load i32, i32* %arrayidx7, align 4, !tbaa !37
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %arrayidx7, align 4, !tbaa !37
  %arrayidx9 = getelementptr inbounds %struct.gnode_s*, %struct.gnode_s** %0, i64 %idxprom6
  %6 = load %struct.gnode_s*, %struct.gnode_s** %arrayidx9, align 8, !tbaa !74
  %7 = bitcast %struct.lextree_node_t* %3 to i8*
  %call10 = tail call %struct.gnode_s* @glist_add_ptr(%struct.gnode_s* %6, i8* %7) #34
  store %struct.gnode_s* %call10, %struct.gnode_s** %arrayidx9, align 8, !tbaa !74
  %indvars.iv.next74 = add nuw nsw i64 %indvars.iv73, 1
  %8 = load i32, i32* %n_active, align 8, !tbaa !797
  %9 = sext i32 %8 to i64
  %cmp = icmp slt i64 %indvars.iv.next74, %9
  br i1 %cmp, label %for.body, label %for.cond14.preheader, !llvm.loop !1043

for.body17:                                       ; preds = %for.body17.preheader, %for.end26
  %indvars.iv71 = phi i64 [ 0, %for.body17.preheader ], [ %indvars.iv.next72, %for.end26 ]
  %k.168 = phi i32 [ 0, %for.body17.preheader ], [ %k.2.lcssa, %for.end26 ]
  %arrayidx19 = getelementptr inbounds %struct.gnode_s*, %struct.gnode_s** %0, i64 %indvars.iv71
  %gn.062 = load %struct.gnode_s*, %struct.gnode_s** %arrayidx19, align 8, !tbaa !74
  %tobool.not63 = icmp eq %struct.gnode_s* %gn.062, null
  br i1 %tobool.not63, label %for.end26, label %for.body21.preheader

for.body21.preheader:                             ; preds = %for.body17
  %10 = sext i32 %k.168 to i64
  br label %for.body21

for.body21:                                       ; preds = %for.body21.preheader, %for.body21
  %indvars.iv = phi i64 [ %10, %for.body21.preheader ], [ %indvars.iv.next, %for.body21 ]
  %gn.065 = phi %struct.gnode_s* [ %gn.062, %for.body21.preheader ], [ %gn.0, %for.body21 ]
  %11 = bitcast %struct.gnode_s* %gn.065 to %struct.lextree_node_t**
  %12 = load %struct.lextree_node_t*, %struct.lextree_node_t** %11, align 8, !tbaa !63
  %indvars.iv.next = add i64 %indvars.iv, 1
  %arrayidx24 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %1, i64 %indvars.iv
  store %struct.lextree_node_t* %12, %struct.lextree_node_t** %arrayidx24, align 8, !tbaa !74
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.065, i64 0, i32 1
  %gn.0 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.gnode_s* %gn.0, null
  br i1 %tobool.not, label %for.end26.loopexit, label %for.body21, !llvm.loop !1044

for.end26.loopexit:                               ; preds = %for.body21
  %13 = trunc i64 %indvars.iv.next to i32
  %.pre = load %struct.gnode_s*, %struct.gnode_s** %arrayidx19, align 8, !tbaa !74
  br label %for.end26

for.end26:                                        ; preds = %for.end26.loopexit, %for.body17
  %14 = phi %struct.gnode_s* [ null, %for.body17 ], [ %.pre, %for.end26.loopexit ]
  %k.2.lcssa = phi i32 [ %k.168, %for.body17 ], [ %13, %for.end26.loopexit ]
  tail call void @glist_free(%struct.gnode_s* %14) #34
  %indvars.iv.next72 = add nuw nsw i64 %indvars.iv71, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next72, %wide.trip.count
  br i1 %exitcond.not, label %for.end31, label %for.body17, !llvm.loop !1045

for.end31:                                        ; preds = %for.end26, %for.cond14.preheader
  tail call void @ckd_free(i8* %call) #34
  ret void
}

; Function Attrs: noinline nounwind optsize uwtable
define void @lextree_hmm_propagate(%struct.lextree_t* nocapture %lextree, %struct.kbcore_t* %kbc, %struct.vithist_t* %vh, i32 %cf, i32 %th, i32 %pth, i32 %wth, i32* nocapture readonly %phn_heur_list, i32 %heur_beam, i32 %heur_type) local_unnamed_addr #0 {
entry:
  %mdef1 = getelementptr inbounds %struct.kbcore_t, %struct.kbcore_t* %kbc, i64 0, i32 1
  %0 = load %struct.mdef_t*, %struct.mdef_t** %mdef1, align 8, !tbaa !14
  %add = add nsw i32 %cf, 1
  %active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 5
  %1 = load %struct.lextree_node_t**, %struct.lextree_node_t*** %active, align 8, !tbaa !1018
  %n_next_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 8
  %2 = load i32, i32* %n_next_active, align 4, !tbaa !1020
  %n_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 7
  %conv9 = trunc i32 %add to i16
  %next_active = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 6
  %n_emit_state = getelementptr inbounds %struct.mdef_t, %struct.mdef_t* %0, i64 0, i32 2
  %type = getelementptr inbounds %struct.lextree_t, %struct.lextree_t* %lextree, i64 0, i32 0
  %cmp22 = icmp sgt i32 %heur_type, 0
  %cmp63 = icmp eq i32 %heur_type, 0
  %cmp22.not = xor i1 %cmp22, true
  %3 = load i32, i32* %n_active, align 8, !tbaa !797
  %cmp211 = icmp sgt i32 %3, 0
  br i1 %cmp211, label %for.body, label %for.end124

for.body:                                         ; preds = %entry, %for.inc122
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc122 ], [ 0, %entry ]
  %hth.0214 = phi i32 [ %hth.2, %for.inc122 ], [ undef, %entry ]
  %n.0213 = phi i32 [ %n.4, %for.inc122 ], [ %2, %entry ]
  %arrayidx = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %1, i64 %indvars.iv
  %4 = load %struct.lextree_node_t*, %struct.lextree_node_t** %arrayidx, align 8, !tbaa !74
  %hmm3 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %4, i64 0, i32 0
  %frame = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %4, i64 0, i32 8
  %5 = load i16, i16* %frame, align 2, !tbaa !1023
  %conv = sext i16 %5 to i32
  %cmp4.not = icmp sgt i32 %conv, %cf
  br i1 %cmp4.not, label %if.end14, label %if.then

if.then:                                          ; preds = %for.body
  %bestscore = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %4, i64 0, i32 0, i32 4
  %6 = load i32, i32* %bestscore, align 8, !tbaa !760
  %cmp6.not = icmp slt i32 %6, %th
  br i1 %cmp6.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.then
  store i16 %conv9, i16* %frame, align 2, !tbaa !1023
  %7 = load %struct.lextree_node_t**, %struct.lextree_node_t*** %next_active, align 8, !tbaa !1019
  %inc = add nsw i32 %n.0213, 1
  %idxprom11 = sext i32 %n.0213 to i64
  %arrayidx12 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %7, i64 %idxprom11
  store %struct.lextree_node_t* %4, %struct.lextree_node_t** %arrayidx12, align 8, !tbaa !74
  br label %if.end14

if.else:                                          ; preds = %if.then
  store i16 -1, i16* %frame, align 2, !tbaa !1023
  %8 = load i32, i32* %n_emit_state, align 8, !tbaa !315
  tail call void @hmm_clear(%struct.hmm_t* nonnull %hmm3, i32 %8) #34
  br label %if.end14

if.end14:                                         ; preds = %if.then8, %if.else, %for.body
  %n.1 = phi i32 [ %inc, %if.then8 ], [ %n.0213, %if.else ], [ %n.0213, %for.body ]
  %wid = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %4, i64 0, i32 2
  %9 = load i32, i32* %wid, align 8, !tbaa !1004
  %cmp15 = icmp slt i32 %9, 0
  %score = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %4, i64 0, i32 0, i32 2, i32 0
  %10 = load i32, i32* %score, align 8, !tbaa !753
  br i1 %cmp15, label %if.then17, label %if.else98

if.then17:                                        ; preds = %if.end14
  %cmp18 = icmp slt i32 %10, %pth
  br i1 %cmp18, label %for.inc122, label %if.end21

if.end21:                                         ; preds = %if.then17
  br i1 %cmp22, label %if.then24, label %if.end21.if.end44_crit_edge

if.end21.if.end44_crit_edge:                      ; preds = %if.end21
  %children45.phi.trans.insert = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %4, i64 0, i32 1
  %gn.1206.pre = load %struct.gnode_s*, %struct.gnode_s** %children45.phi.trans.insert, align 8, !tbaa !74
  br label %if.end44

if.then24:                                        ; preds = %if.end21
  %11 = load i32, i32* @lextree_hmm_propagate.lastfrm, align 4, !tbaa !37
  %cmp25.not = icmp eq i32 %11, %cf
  br i1 %cmp25.not, label %if.end28, label %if.then27

if.then27:                                        ; preds = %if.then24
  store i32 %cf, i32* @lextree_hmm_propagate.lastfrm, align 4, !tbaa !37
  store i32 -2147483648, i32* @lextree_hmm_propagate.maxNewHeurScore, align 4, !tbaa !37
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %if.then24
  %children = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %4, i64 0, i32 1
  %gn.0203 = load %struct.gnode_s*, %struct.gnode_s** %children, align 8, !tbaa !74
  %tobool.not204 = icmp eq %struct.gnode_s* %gn.0203, null
  br i1 %tobool.not204, label %if.end28.for.end_crit_edge, label %for.body30.lr.ph

if.end28.for.end_crit_edge:                       ; preds = %if.end28
  %.pre219 = load i32, i32* @lextree_hmm_propagate.maxNewHeurScore, align 4, !tbaa !37
  br label %for.end

for.body30.lr.ph:                                 ; preds = %if.end28
  %prob33 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %4, i64 0, i32 3
  %12 = load i32, i32* %prob33, align 4, !tbaa !1006
  %.pre218 = load i32, i32* @lextree_hmm_propagate.maxNewHeurScore, align 4, !tbaa !37
  br label %for.body30

for.body30:                                       ; preds = %for.body30.lr.ph, %for.inc
  %13 = phi i32 [ %.pre218, %for.body30.lr.ph ], [ %19, %for.inc ]
  %gn.0205 = phi %struct.gnode_s* [ %gn.0203, %for.body30.lr.ph ], [ %gn.0, %for.inc ]
  %14 = bitcast %struct.gnode_s* %gn.0205 to %struct.lextree_node_t**
  %15 = load %struct.lextree_node_t*, %struct.lextree_node_t** %14, align 8, !tbaa !63
  %prob = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %15, i64 0, i32 3
  %16 = load i32, i32* %prob, align 4, !tbaa !1006
  %ci = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %15, i64 0, i32 6
  %17 = load i8, i8* %ci, align 8, !tbaa !1022
  %idxprom36 = sext i8 %17 to i64
  %arrayidx37 = getelementptr inbounds i32, i32* %phn_heur_list, i64 %idxprom36
  %18 = load i32, i32* %arrayidx37, align 4, !tbaa !37
  %sub = add i32 %16, %10
  %add34 = sub i32 %sub, %12
  %add38 = add i32 %add34, %18
  %cmp39 = icmp slt i32 %13, %add38
  br i1 %cmp39, label %if.then41, label %for.inc

if.then41:                                        ; preds = %for.body30
  store i32 %add38, i32* @lextree_hmm_propagate.maxNewHeurScore, align 4, !tbaa !37
  br label %for.inc

for.inc:                                          ; preds = %for.body30, %if.then41
  %19 = phi i32 [ %13, %for.body30 ], [ %add38, %if.then41 ]
  %next = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.0205, i64 0, i32 1
  %gn.0 = load %struct.gnode_s*, %struct.gnode_s** %next, align 8, !tbaa !74
  %tobool.not = icmp eq %struct.gnode_s* %gn.0, null
  br i1 %tobool.not, label %for.end, label %for.body30, !llvm.loop !1046

for.end:                                          ; preds = %for.inc, %if.end28.for.end_crit_edge
  %20 = phi i32 [ %.pre219, %if.end28.for.end_crit_edge ], [ %19, %for.inc ]
  %add43 = add nsw i32 %20, %heur_beam
  br label %if.end44

if.end44:                                         ; preds = %if.end21.if.end44_crit_edge, %for.end
  %gn.1206 = phi %struct.gnode_s* [ %gn.0203, %for.end ], [ %gn.1206.pre, %if.end21.if.end44_crit_edge ]
  %hth.1 = phi i32 [ %add43, %for.end ], [ %hth.0214, %if.end21.if.end44_crit_edge ]
  %history = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %4, i64 0, i32 0, i32 2, i32 1
  %tobool47.not207 = icmp eq %struct.gnode_s* %gn.1206, null
  br i1 %tobool47.not207, label %for.inc122, label %for.body48.lr.ph

for.body48.lr.ph:                                 ; preds = %if.end44
  %prob55 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %4, i64 0, i32 3
  %21 = load i32, i32* %prob55, align 4, !tbaa !1006
  br label %for.body48

for.body48:                                       ; preds = %for.body48.lr.ph, %for.inc95
  %gn.1210 = phi %struct.gnode_s* [ %gn.1206, %for.body48.lr.ph ], [ %gn.1, %for.inc95 ]
  %n.2208 = phi i32 [ %n.1, %for.body48.lr.ph ], [ %n.3, %for.inc95 ]
  %22 = bitcast %struct.gnode_s* %gn.1210 to %struct.lextree_node_t**
  %23 = load %struct.lextree_node_t*, %struct.lextree_node_t** %22, align 8, !tbaa !63
  %prob54 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %23, i64 0, i32 3
  %24 = load i32, i32* %prob54, align 4, !tbaa !1006
  %sub56 = sub nsw i32 %24, %21
  %add57 = add nsw i32 %sub56, %10
  br i1 %cmp63, label %land.lhs.true69, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body48
  %ci58 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %23, i64 0, i32 6
  %25 = load i8, i8* %ci58, align 8, !tbaa !1022
  %idxprom60 = sext i8 %25 to i64
  %arrayidx61 = getelementptr inbounds i32, i32* %phn_heur_list, i64 %idxprom60
  %26 = load i32, i32* %arrayidx61, align 4, !tbaa !37
  %add62 = add nsw i32 %26, %add57
  %cmp67.not = icmp slt i32 %add62, %hth.1
  %or.cond = select i1 %cmp22.not, i1 true, i1 %cmp67.not
  %cmp70.not = icmp slt i32 %add57, %th
  %or.cond202 = select i1 %or.cond, i1 true, i1 %cmp70.not
  br i1 %or.cond202, label %for.inc95, label %land.lhs.true72

land.lhs.true69:                                  ; preds = %for.body48
  %cmp70.not.old = icmp slt i32 %add57, %th
  br i1 %cmp70.not.old, label %for.inc95, label %land.lhs.true72

land.lhs.true72:                                  ; preds = %lor.lhs.false, %land.lhs.true69
  %score73 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %23, i64 0, i32 0, i32 1, i32 0
  %27 = load i32, i32* %score73, align 8, !tbaa !749
  %cmp74 = icmp slt i32 %27, %add57
  br i1 %cmp74, label %if.then76, label %for.inc95

if.then76:                                        ; preds = %land.lhs.true72
  store i32 %add57, i32* %score73, align 8, !tbaa !749
  %28 = load i32, i32* %history, align 4, !tbaa !756
  %history81 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %23, i64 0, i32 0, i32 1, i32 1
  store i32 %28, i32* %history81, align 4, !tbaa !754
  %frame82 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %23, i64 0, i32 8
  %29 = load i16, i16* %frame82, align 2, !tbaa !1023
  %conv83 = sext i16 %29 to i32
  %cmp84.not = icmp eq i32 %add, %conv83
  br i1 %cmp84.not, label %for.inc95, label %if.then86

if.then86:                                        ; preds = %if.then76
  store i16 %conv9, i16* %frame82, align 2, !tbaa !1023
  %30 = load %struct.lextree_node_t**, %struct.lextree_node_t*** %next_active, align 8, !tbaa !1019
  %inc90 = add nsw i32 %n.2208, 1
  %idxprom91 = sext i32 %n.2208 to i64
  %arrayidx92 = getelementptr inbounds %struct.lextree_node_t*, %struct.lextree_node_t** %30, i64 %idxprom91
  store %struct.lextree_node_t* %23, %struct.lextree_node_t** %arrayidx92, align 8, !tbaa !74
  br label %for.inc95

for.inc95:                                        ; preds = %lor.lhs.false, %land.lhs.true69, %land.lhs.true72, %if.then86, %if.then76
  %n.3 = phi i32 [ %inc90, %if.then86 ], [ %n.2208, %if.then76 ], [ %n.2208, %land.lhs.true72 ], [ %n.2208, %land.lhs.true69 ], [ %n.2208, %lor.lhs.false ]
  %next96 = getelementptr inbounds %struct.gnode_s, %struct.gnode_s* %gn.1210, i64 0, i32 1
  %gn.1 = load %struct.gnode_s*, %struct.gnode_s** %next96, align 8, !tbaa !74
  %tobool47.not = icmp eq %struct.gnode_s* %gn.1, null
  br i1 %tobool47.not, label %for.inc122, label %for.body48, !llvm.loop !1047

if.else98:                                        ; preds = %if.end14
  %cmp101 = icmp slt i32 %10, %wth
  br i1 %cmp101, label %for.inc122, label %if.end104

if.end104:                                        ; preds = %if.else98
  %history106 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %4, i64 0, i32 0, i32 2, i32 1
  %31 = load i32, i32* %history106, align 4, !tbaa !756
  %cmp107 = icmp eq i32 %31, -1
  br i1 %cmp107, label %if.then109, label %if.end112

if.then109:                                       ; preds = %if.end104
  tail call void @_E__pr_header(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1159, i64 0, i64 0), i64 805, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.1160, i64 0, i64 0)) #34
  %32 = load i32, i32* %score, align 8, !tbaa !753
  %33 = load i32, i32* %type, align 8, !tbaa !75
  %34 = trunc i64 %indvars.iv to i32
  tail call void (i8*, ...) @_E__pr_warn(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7.1184, i64 0, i64 0), i32 %32, i32 %34, i32 %33) #34
  %.pre = load i32, i32* %wid, align 8, !tbaa !1004
  %.pre216 = load i32, i32* %score, align 8, !tbaa !753
  %.pre217 = load i32, i32* %history106, align 4, !tbaa !756
  br label %if.end112

if.end112:                                        ; preds = %if.then109, %if.end104
  %35 = phi i32 [ %.pre217, %if.then109 ], [ %31, %if.end104 ]
  %36 = phi i32 [ %.pre216, %if.then109 ], [ %10, %if.end104 ]
  %37 = phi i32 [ %.pre, %if.then109 ], [ %9, %if.end104 ]
  %prob116 = getelementptr inbounds %struct.lextree_node_t, %struct.lextree_node_t* %4, i64 0, i32 3
  %38 = load i32, i32* %prob116, align 4, !tbaa !1006
  %sub117 = sub nsw i32 %36, %38
  %39 = load i32, i32* %type, align 8, !tbaa !75
  tail call void @vithist_rescore(%struct.vithist_t* %vh, %struct.kbcore_t* %kbc, i32 %37, i32 %cf, i32 %sub117, i32 %35, i32 %39) #34
  br label %for.inc122

for.inc122:                                       ; preds = %for.inc95, %if.end44, %if.end112, %if.else98, %if.then17
  %n.4 = phi i32 [ %n.1, %if.then17 ], [ %n.1, %if.else98 ], [ %n.1, %if.end112 ], [ %n.1, %if.end44 ], [ %n.3, %for.inc95 ]
  %hth.2 = phi i32 [ %hth.0214, %if.then17 ], [ %hth.0214, %if.else98 ], [ %hth.0214, %if.end112 ], [ %hth.1, %if.end44 ], [ %hth.1, %for.inc95 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %40 = load i32, i32* %n_active, align 8, !tbaa !797
  %41 = sext i32 %40 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %41
  br i1 %cmp, label %for.body, label %for.end124, !llvm.loop !1048

for.end124:                                       ; preds = %for.inc122, %entry
  %n.0.lcssa = phi i32 [ %2, %entry ], [ %n.4, %for.inc122 ]
  store i32 %n.0.lcssa, i32* %n_next_active, align 4, !tbaa !1020
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @lcase(i8* nocapture %cp) local_unnamed_addr #13 {
entry:
  %0 = load i8, i8* %cp, align 1, !tbaa !63
  %tobool.not14 = icmp eq i8 %0, 0
  br i1 %tobool.not14, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %1 = phi i8 [ %3, %for.body ], [ %0, %entry ]
  %cp.addr.015 = phi i8* [ %incdec.ptr, %for.body ], [ %cp, %entry ]
  %.off = add i8 %1, -65
  %2 = icmp ult i8 %.off, 26
  %add = add nuw nsw i8 %1, 32
  %spec.select = select i1 %2, i8 %add, i8 %1
  store i8 %spec.select, i8* %cp.addr.015, align 1, !tbaa !63
  %incdec.ptr = getelementptr inbounds i8, i8* %cp.addr.015, i64 1
  %3 = load i8, i8* %incdec.ptr, align 1, !tbaa !63
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !1049

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize uwtable
define void @ucase(i8* nocapture %cp) local_unnamed_addr #13 {
entry:
  %0 = load i8, i8* %cp, align 1, !tbaa !63
  %tobool.not14 = icmp eq i8 %0, 0
  br i1 %tobool.not14, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %1 = phi i8 [ %3, %for.body ], [ %0, %entry ]
  %cp.addr.015 = phi i8* [ %incdec.ptr, %for.body ], [ %cp, %entry ]
  %.off = add i8 %1, -97
  %2 = icmp ult i8 %.off, 26
  %sub = add nsw i8 %1, -32
  %spec.select = select i1 %2, i8 %sub, i8 %1
  store i8 %spec.select, i8* %cp.addr.015, align 1, !tbaa !63
  %incdec.ptr = getelementptr inbounds i8, i8* %cp.addr.015, i64 1
  %3 = load i8, i8* %incdec.ptr, align 1, !tbaa !63
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %for.end, label %for.body, !llvm.loop !1050

for.end:                                          ; preds = %for.body, %entry
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly uwtable
define i32 @strcmp_nocase(i8* nocapture readonly %str1, i8* nocapture readonly %str2) local_unnamed_addr #16 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %if.end, %entry
  %str1.addr.0 = phi i8* [ %str1, %entry ], [ %incdec.ptr, %if.end ]
  %str2.addr.0 = phi i8* [ %str2, %entry ], [ %incdec.ptr8, %if.end ]
  %0 = load i8, i8* %str1.addr.0, align 1, !tbaa !63
  %.off = add i8 %0, -97
  %1 = icmp ult i8 %.off, 26
  %sub = add i8 %0, -32
  %cond = select i1 %1, i8 %sub, i8 %0
  %2 = load i8, i8* %str2.addr.0, align 1, !tbaa !63
  %.off49 = add i8 %2, -97
  %3 = icmp ult i8 %.off49, 26
  %sub18 = add i8 %2, -32
  %cond22 = select i1 %3, i8 %sub18, i8 %2
  %cmp26.not = icmp eq i8 %cond, %cond22
  br i1 %cmp26.not, label %if.end, label %if.then

if.then:                                          ; preds = %for.cond
  %conv24 = sext i8 %cond to i32
  %conv25 = sext i8 %cond22 to i32
  %sub30 = sub nsw i32 %conv24, %conv25
  br label %cleanup

if.end:                                           ; preds = %for.cond
  %incdec.ptr8 = getelementptr inbounds i8, i8* %str2.addr.0, i64 1
  %incdec.ptr = getelementptr inbounds i8, i8* %str1.addr.0, i64 1
  %cmp32 = icmp eq i8 %cond, 0
  br i1 %cmp32, label %cleanup, label %for.cond, !llvm.loop !1051

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %sub30, %if.then ], [ 0, %if.end ]
  ret i32 %retval.0
}

attributes #0 = { noinline nounwind optsize uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly nofree nounwind willreturn writeonly }
attributes #2 = { nofree nounwind optsize "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind optsize readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn }
attributes #6 = { mustprogress nofree nounwind optsize willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nofree nounwind }
attributes #8 = { noreturn nounwind optsize "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nofree noinline nounwind optsize uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #11 = { inaccessiblemem_or_argmemonly mustprogress nounwind optsize willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nofree noinline nosync nounwind optsize uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { nofree noinline nounwind optsize uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress noinline nounwind optsize uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { nofree noinline norecurse nosync nounwind optsize readonly uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { argmemonly mustprogress nofree nounwind optsize willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { argmemonly nofree nounwind willreturn }
attributes #19 = { optsize "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { mustprogress nofree nosync nounwind optsize readnone willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { nofree noinline nosync nounwind optsize readonly uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { argmemonly mustprogress nofree nounwind readonly willreturn }
attributes #24 = { nofree noinline nounwind optsize readonly uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { nounwind optsize "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { inaccessiblememonly mustprogress nofree nounwind optsize willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { mustprogress nofree noinline nosync nounwind optsize uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #29 = { mustprogress nofree noinline norecurse nosync nounwind optsize uwtable willreturn writeonly "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #30 = { inaccessiblemem_or_argmemonly mustprogress nofree nounwind optsize willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #31 = { nofree optsize "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #32 = { nofree nosync nounwind willreturn }
attributes #33 = { noinline noreturn nounwind optsize uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #34 = { nounwind optsize }
attributes #35 = { cold optsize }
attributes #36 = { optsize }
attributes #37 = { nounwind optsize readonly willreturn }
attributes #38 = { nounwind }
attributes #39 = { cold }
attributes #40 = { noreturn nounwind optsize }
attributes #41 = { nounwind optsize readnone willreturn }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 14.0.0 (git@github.com:ppetoumenos/llvm-project.git 43ffe3222a75cd50a33f8da93c3356b91752b555)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!5, !5, i64 0}
!5 = !{!"float", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = !{!9, !10, i64 0}
!9 = !{!"", !10, i64 0, !11, i64 8, !10, i64 16, !10, i64 24, !10, i64 32, !11, i64 40, !10, i64 48, !10, i64 56, !11, i64 64, !10, i64 72, !10, i64 80, !10, i64 88, !10, i64 96, !11, i64 104, !11, i64 108, !10, i64 112, !10, i64 120, !10, i64 128, !11, i64 136, !11, i64 140, !11, i64 144, !10, i64 152, !10, i64 160, !11, i64 168, !11, i64 172, !11, i64 176, !11, i64 180, !11, i64 184, !11, i64 188, !11, i64 192, !11, i64 196, !11, i64 200, !11, i64 204, !10, i64 208, !11, i64 216, !11, i64 220, !11, i64 224, !10, i64 232, !11, i64 240, !11, i64 244, !12, i64 248, !12, i64 304, !12, i64 360, !11, i64 416, !13, i64 424, !13, i64 432, !13, i64 440, !13, i64 448, !10, i64 456, !10, i64 464, !10, i64 472, !11, i64 480, !10, i64 488, !11, i64 496}
!10 = !{!"any pointer", !6, i64 0}
!11 = !{!"int", !6, i64 0}
!12 = !{!"", !10, i64 0, !13, i64 8, !13, i64 16, !13, i64 24, !13, i64 32, !13, i64 40, !13, i64 48}
!13 = !{!"double", !6, i64 0}
!14 = !{!15, !10, i64 8}
!15 = !{!"", !10, i64 0, !10, i64 8, !10, i64 16, !10, i64 24, !10, i64 32, !10, i64 40, !10, i64 48, !10, i64 56, !10, i64 64, !10, i64 72, !10, i64 80, !10, i64 88, !11, i64 96, !11, i64 100}
!16 = !{!15, !10, i64 16}
!17 = !{!15, !10, i64 32}
!18 = !{!15, !10, i64 40}
!19 = !{!15, !10, i64 24}
!20 = !{!21, !11, i64 72}
!21 = !{!"", !10, i64 0, !10, i64 8, !10, i64 16, !11, i64 24, !10, i64 32, !10, i64 40, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60, !10, i64 64, !11, i64 72, !11, i64 76, !11, i64 80}
!22 = !{!21, !11, i64 76}
!23 = !{!15, !11, i64 96}
!24 = !{!25, !10, i64 8}
!25 = !{!"lmset_s", !10, i64 0, !10, i64 8}
!26 = !{!27, !28, i64 24}
!27 = !{!"lm_s", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !10, i64 16, !28, i64 24, !28, i64 26, !11, i64 28, !11, i64 32, !10, i64 40, !10, i64 48, !10, i64 56, !10, i64 64, !10, i64 72, !10, i64 80, !10, i64 88, !10, i64 96, !10, i64 104, !11, i64 112, !11, i64 116, !11, i64 120, !10, i64 128, !11, i64 136, !11, i64 140, !11, i64 144, !5, i64 148, !11, i64 152, !10, i64 160, !11, i64 168, !11, i64 172, !11, i64 176, !11, i64 180, !11, i64 184, !11, i64 188, !11, i64 192, !11, i64 196, !11, i64 200, !11, i64 204, !10, i64 208, !11, i64 216, !10, i64 224, !11, i64 232, !10, i64 240}
!28 = !{!"short", !6, i64 0}
!29 = !{!27, !28, i64 26}
!30 = !{!25, !10, i64 0}
!31 = distinct !{!31, !32}
!32 = !{!"llvm.loop.unroll.disable"}
!33 = !{!15, !10, i64 88}
!34 = !{!27, !10, i64 40}
!35 = !{!36, !11, i64 0}
!36 = !{!"", !11, i64 0, !6, i64 4, !6, i64 8, !11, i64 12}
!37 = !{!11, !11, i64 0}
!38 = !{!27, !10, i64 208}
!39 = !{!21, !10, i64 32}
!40 = !{!28, !28, i64 0}
!41 = distinct !{!41, !32}
!42 = distinct !{!42, !32}
!43 = distinct !{!43, !32}
!44 = !{!15, !10, i64 56}
!45 = distinct !{!45, !32}
!46 = distinct !{!46, !32}
!47 = !{!48, !6, i64 88}
!48 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !10, i64 24, !10, i64 32, !10, i64 40, !10, i64 48, !11, i64 56, !10, i64 64, !10, i64 72, !10, i64 80, !6, i64 88, !10, i64 96}
!49 = !{!48, !11, i64 16}
!50 = !{!9, !10, i64 88}
!51 = !{!9, !10, i64 96}
!52 = !{!48, !11, i64 56}
!53 = !{!9, !10, i64 72}
!54 = !{!55, !11, i64 52}
!55 = !{!"", !10, i64 0, !10, i64 8, !10, i64 16, !10, i64 24, !10, i64 32, !10, i64 40, !11, i64 48, !11, i64 52}
!56 = !{!9, !10, i64 80}
!57 = !{!48, !11, i64 0}
!58 = !{!21, !11, i64 52}
!59 = !{!48, !10, i64 32}
!60 = !{!61, !10, i64 8}
!61 = !{!"", !10, i64 0, !10, i64 8, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !10, i64 32}
!62 = !{!61, !11, i64 16}
!63 = !{!6, !6, i64 0}
!64 = !{!65, !11, i64 8}
!65 = !{!"", !10, i64 0, !11, i64 8}
!66 = distinct !{!66, !32}
!67 = distinct !{!67, !32}
!68 = !{!9, !11, i64 8}
!69 = !{!9, !10, i64 24}
!70 = !{!9, !10, i64 16}
!71 = !{!72, !11, i64 4}
!72 = !{!"", !11, i64 0, !11, i64 4}
!73 = distinct !{!73, !32}
!74 = !{!10, !10, i64 0}
!75 = !{!76, !11, i64 0}
!76 = !{!"", !11, i64 0, !10, i64 8, !10, i64 16, !11, i64 24, !11, i64 28, !10, i64 32, !10, i64 40, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60}
!77 = !{!76, !11, i64 28}
!78 = distinct !{!78, !32}
!79 = distinct !{!79, !32}
!80 = distinct !{!80, !32}
!81 = distinct !{!81, !32}
!82 = !{!21, !11, i64 56}
!83 = !{!21, !11, i64 60}
!84 = !{!72, !11, i64 0}
!85 = !{!15, !10, i64 48}
!86 = distinct !{!86, !32}
!87 = !{!9, !10, i64 32}
!88 = distinct !{!88, !32}
!89 = distinct !{!89, !32}
!90 = distinct !{!90, !32}
!91 = !{!15, !10, i64 64}
!92 = !{!93, !11, i64 0}
!93 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !10, i64 16, !13, i64 24, !11, i64 32, !11, i64 36, !11, i64 40}
!94 = !{!55, !11, i64 48}
!95 = !{!9, !10, i64 152}
!96 = !{!13, !13, i64 0}
!97 = !{!9, !10, i64 160}
!98 = !{!99, !11, i64 4}
!99 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12}
!100 = !{!99, !11, i64 8}
!101 = !{!99, !11, i64 12}
!102 = !{!99, !11, i64 0}
!103 = !{!9, !11, i64 168}
!104 = !{!9, !11, i64 104}
!105 = !{!9, !11, i64 136}
!106 = !{!9, !11, i64 172}
!107 = !{!15, !10, i64 80}
!108 = !{!9, !11, i64 176}
!109 = !{!9, !11, i64 180}
!110 = !{!9, !11, i64 184}
!111 = !{!9, !11, i64 204}
!112 = !{!9, !11, i64 188}
!113 = !{!9, !11, i64 192}
!114 = !{!9, !11, i64 200}
!115 = !{!48, !10, i64 64}
!116 = distinct !{!116, !32}
!117 = !{!9, !10, i64 112}
!118 = !{!9, !10, i64 120}
!119 = !{!9, !10, i64 128}
!120 = !{!15, !10, i64 0}
!121 = !{!9, !10, i64 56}
!122 = !{!9, !10, i64 48}
!123 = !{!9, !11, i64 416}
!124 = !{!9, !11, i64 244}
!125 = !{!9, !11, i64 240}
!126 = !{!9, !10, i64 232}
!127 = !{!9, !10, i64 464}
!128 = !{!9, !10, i64 456}
!129 = distinct !{!129, !32}
!130 = distinct !{!130, !32}
!131 = distinct !{!131, !32}
!132 = distinct !{!132, !32}
!133 = !{!27, !11, i64 0}
!134 = !{!27, !11, i64 4}
!135 = !{!27, !11, i64 8}
!136 = distinct !{!136, !32}
!137 = distinct !{!137, !32}
!138 = !{!9, !10, i64 472}
!139 = !{!9, !11, i64 480}
!140 = distinct !{!140, !32}
!141 = !{!9, !10, i64 488}
!142 = !{!9, !11, i64 496}
!143 = !{!144, !10, i64 0}
!144 = !{!"", !10, i64 0, !10, i64 8, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !10, i64 32, !10, i64 40, !10, i64 48, !10, i64 56}
!145 = !{!144, !10, i64 8}
!146 = !{!144, !10, i64 32}
!147 = !{!144, !10, i64 40}
!148 = !{!144, !10, i64 48}
!149 = !{!150, !10, i64 0}
!150 = !{!"", !10, i64 0, !10, i64 8}
!151 = !{!150, !10, i64 8}
!152 = !{!153, !10, i64 0}
!153 = !{!"heap_s", !10, i64 0, !11, i64 8, !11, i64 12, !11, i64 16, !10, i64 24, !10, i64 32}
!154 = !{!153, !11, i64 8}
!155 = !{!153, !11, i64 16}
!156 = !{!153, !11, i64 12}
!157 = !{!153, !10, i64 32}
!158 = !{!153, !10, i64 24}
!159 = distinct !{!159, !32}
!160 = !{!161, !11, i64 8}
!161 = !{!"", !5, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !5, i64 16, !5, i64 20, !10, i64 24, !10, i64 32, !10, i64 40, !10, i64 48, !11, i64 56}
!162 = !{!161, !11, i64 12}
!163 = !{!161, !10, i64 24}
!164 = !{!161, !10, i64 40}
!165 = !{!161, !10, i64 48}
!166 = !{!161, !11, i64 56}
!167 = !{!161, !5, i64 0}
!168 = !{!161, !5, i64 20}
!169 = !{!161, !5, i64 16}
!170 = distinct !{!170, !32}
!171 = distinct !{!171, !32}
!172 = distinct !{!172, !32}
!173 = distinct !{!173, !32}
!174 = distinct !{!174, !32}
!175 = distinct !{!175, !32}
!176 = !{!161, !11, i64 4}
!177 = !{!161, !10, i64 32}
!178 = distinct !{!178, !32}
!179 = distinct !{!179, !32}
!180 = distinct !{!180, !32}
!181 = distinct !{!181, !32}
!182 = distinct !{!182, !32}
!183 = distinct !{!183, !32}
!184 = !{!185, !11, i64 24}
!185 = !{!"", !5, i64 0, !11, i64 4, !11, i64 8, !5, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !5, i64 32, !10, i64 40, !11, i64 48, !10, i64 56, !11, i64 64, !28, i64 68, !10, i64 72}
!186 = !{!185, !11, i64 20}
!187 = !{!185, !10, i64 56}
!188 = !{!185, !11, i64 16}
!189 = !{!190, !13, i64 0}
!190 = !{!"", !13, i64 0, !13, i64 8}
!191 = !{!190, !13, i64 8}
!192 = distinct !{!192, !32}
!193 = distinct !{!193, !32}
!194 = distinct !{!194, !32}
!195 = distinct !{!195, !32}
!196 = !{!185, !5, i64 0}
!197 = distinct !{!197, !32}
!198 = distinct !{!198, !32}
!199 = !{!185, !11, i64 28}
!200 = distinct !{!200, !32}
!201 = distinct !{!201, !32}
!202 = distinct !{!202, !32}
!203 = distinct !{!203, !32}
!204 = distinct !{!204, !32}
!205 = distinct !{!205, !32}
!206 = distinct !{!206, !32}
!207 = distinct !{!207, !32}
!208 = distinct !{!208, !32}
!209 = !{!210, !5, i64 0}
!210 = !{!"", !5, i64 0, !11, i64 4, !5, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !5, i64 28, !5, i64 32, !5, i64 36, !10, i64 40, !10, i64 48, !10, i64 56, !10, i64 64, !10, i64 72, !10, i64 80, !10, i64 88, !11, i64 96, !11, i64 100, !11, i64 104, !11, i64 108, !11, i64 112, !11, i64 116}
!211 = !{!210, !11, i64 4}
!212 = !{!210, !5, i64 8}
!213 = !{!210, !11, i64 12}
!214 = !{!210, !5, i64 36}
!215 = !{!210, !11, i64 16}
!216 = !{!210, !11, i64 24}
!217 = !{!210, !11, i64 20}
!218 = !{!210, !5, i64 32}
!219 = !{!210, !5, i64 28}
!220 = !{!210, !11, i64 116}
!221 = !{!185, !11, i64 8}
!222 = !{!185, !11, i64 48}
!223 = !{!185, !11, i64 64}
!224 = !{!225, !11, i64 8}
!225 = !{!"", !10, i64 0, !11, i64 8, !11, i64 12}
!226 = !{!225, !11, i64 12}
!227 = !{!225, !10, i64 0}
!228 = distinct !{!228, !32}
!229 = distinct !{!229, !32}
!230 = distinct !{!230, !32}
!231 = distinct !{!231, !32}
!232 = distinct !{!232, !32}
!233 = distinct !{!233, !32}
!234 = distinct !{!234, !32}
!235 = distinct !{!235, !32}
!236 = distinct !{!236, !32}
!237 = distinct !{!237, !32}
!238 = distinct !{!238, !32}
!239 = distinct !{!239, !32}
!240 = distinct !{!240, !32}
!241 = distinct !{!241, !32}
!242 = !{!243, !10, i64 0}
!243 = !{!"", !10, i64 0, !10, i64 8, !13, i64 16, !13, i64 24}
!244 = !{!243, !13, i64 16}
!245 = !{!243, !13, i64 24}
!246 = !{!243, !10, i64 8}
!247 = distinct !{!247, !32}
!248 = distinct !{!248, !32}
!249 = !{!61, !11, i64 24}
!250 = distinct !{!250, !32}
!251 = distinct !{!251, !32}
!252 = !{!253, !11, i64 0}
!253 = !{!"", !72, i64 0, !11, i64 8, !11, i64 12, !10, i64 16, !10, i64 24, !10, i64 32, !10, i64 40, !10, i64 48, !10, i64 56, !10, i64 64}
!254 = !{!93, !11, i64 4}
!255 = !{!253, !11, i64 4}
!256 = !{!253, !11, i64 8}
!257 = !{!253, !10, i64 16}
!258 = !{!253, !10, i64 24}
!259 = !{!253, !10, i64 32}
!260 = !{!261, !11, i64 4}
!261 = !{!"", !11, i64 0, !11, i64 4, !10, i64 8, !10, i64 16, !10, i64 24, !13, i64 32}
!262 = distinct !{!262, !32}
!263 = !{!253, !11, i64 12}
!264 = distinct !{!264, !32}
!265 = distinct !{!265, !32}
!266 = distinct !{!266, !32}
!267 = !{!261, !10, i64 8}
!268 = !{!261, !10, i64 16}
!269 = distinct !{!269, !32}
!270 = distinct !{!270, !32}
!271 = distinct !{!271, !32}
!272 = distinct !{!272, !32}
!273 = distinct !{!273, !32}
!274 = distinct !{!274, !32}
!275 = !{!253, !10, i64 40}
!276 = !{!253, !10, i64 48}
!277 = !{!253, !10, i64 56}
!278 = !{!253, !10, i64 64}
!279 = !{!261, !10, i64 24}
!280 = distinct !{!280, !32}
!281 = distinct !{!281, !32}
!282 = distinct !{!282, !32}
!283 = distinct !{!283, !32}
!284 = !{!93, !10, i64 16}
!285 = !{!286, !11, i64 0}
!286 = !{!"", !11, i64 0, !10, i64 8, !10, i64 16, !10, i64 24, !10, i64 32}
!287 = distinct !{!287, !32}
!288 = distinct !{!288, !32}
!289 = distinct !{!289, !32}
!290 = distinct !{!290, !32}
!291 = distinct !{!291, !32}
!292 = distinct !{!292, !32}
!293 = distinct !{!293, !32}
!294 = distinct !{!294, !32}
!295 = distinct !{!295, !32}
!296 = distinct !{!296, !32}
!297 = distinct !{!297, !32}
!298 = distinct !{!298, !32}
!299 = distinct !{!299, !32}
!300 = distinct !{!300, !32}
!301 = distinct !{!301, !32}
!302 = distinct !{!302, !32}
!303 = distinct !{!303, !32}
!304 = distinct !{!304, !32}
!305 = !{!93, !11, i64 32}
!306 = !{!93, !11, i64 36}
!307 = distinct !{!307, !32}
!308 = !{!286, !10, i64 32}
!309 = distinct !{!309, !32}
!310 = distinct !{!310, !32}
!311 = distinct !{!311, !32}
!312 = distinct !{!312, !32}
!313 = distinct !{!313, !32}
!314 = !{!48, !11, i64 4}
!315 = !{!48, !11, i64 8}
!316 = !{!48, !11, i64 12}
!317 = !{!48, !11, i64 20}
!318 = !{!48, !10, i64 40}
!319 = !{!320, !11, i64 0}
!320 = !{!"", !11, i64 0, !11, i64 4, !6, i64 8, !6, i64 9, !6, i64 10, !6, i64 12}
!321 = !{!320, !11, i64 4}
!322 = !{!48, !10, i64 48}
!323 = distinct !{!323, !32}
!324 = distinct !{!324, !32}
!325 = distinct !{!325, !32}
!326 = !{!320, !6, i64 8}
!327 = !{!320, !6, i64 9}
!328 = !{!320, !6, i64 10}
!329 = !{!320, !6, i64 12}
!330 = !{!65, !10, i64 0}
!331 = !{!48, !10, i64 24}
!332 = !{!48, !10, i64 96}
!333 = !{!334, !10, i64 8}
!334 = !{!"ph_lc_s", !6, i64 0, !10, i64 8, !10, i64 16}
!335 = !{!336, !11, i64 4}
!336 = !{!"ph_rc_s", !6, i64 0, !11, i64 4, !10, i64 8}
!337 = !{!334, !6, i64 0}
!338 = !{!334, !10, i64 16}
!339 = distinct !{!339, !32}
!340 = !{!336, !6, i64 0}
!341 = !{!336, !10, i64 8}
!342 = distinct !{!342, !32}
!343 = distinct !{!343, !32}
!344 = distinct !{!344, !32}
!345 = distinct !{!345, !32}
!346 = distinct !{!346, !32}
!347 = distinct !{!347, !32}
!348 = !{!48, !10, i64 72}
!349 = distinct !{!349, !32}
!350 = distinct !{!350, !32}
!351 = distinct !{!351, !32}
!352 = distinct !{!352, !32}
!353 = distinct !{!353, !32}
!354 = distinct !{!354, !32}
!355 = distinct !{!355, !32}
!356 = !{!48, !10, i64 80}
!357 = distinct !{!357, !32}
!358 = distinct !{!358, !32}
!359 = distinct !{!359, !32}
!360 = distinct !{!360, !32}
!361 = !{!362, !11, i64 12}
!362 = !{!"hash_entry_s", !10, i64 0, !11, i64 8, !11, i64 12, !10, i64 16}
!363 = !{!362, !10, i64 0}
!364 = !{!365, !10, i64 8}
!365 = !{!"gnode_s", !6, i64 0, !10, i64 8}
!366 = distinct !{!366, !32}
!367 = distinct !{!367, !32}
!368 = distinct !{!368, !32}
!369 = distinct !{!369, !32}
!370 = distinct !{!370, !32}
!371 = distinct !{!371, !32}
!372 = distinct !{!372, !32}
!373 = distinct !{!373, !32}
!374 = distinct !{!374, !32}
!375 = !{!376, !11, i64 16}
!376 = !{!"feat_s", !10, i64 0, !11, i64 8, !11, i64 12, !11, i64 16, !10, i64 24, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !10, i64 48}
!377 = distinct !{!377, !32}
!378 = !{!15, !10, i64 72}
!379 = !{!380, !11, i64 0}
!380 = !{!"gs_s", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !10, i64 24, !10, i64 32, !10, i64 40, !10, i64 48}
!381 = !{!376, !10, i64 24}
!382 = !{!93, !11, i64 8}
!383 = !{!55, !10, i64 40}
!384 = !{!55, !10, i64 32}
!385 = !{!55, !10, i64 24}
!386 = !{!55, !10, i64 16}
!387 = !{!55, !10, i64 8}
!388 = !{!55, !10, i64 0}
!389 = !{!376, !10, i64 0}
!390 = !{!27, !10, i64 224}
!391 = !{!27, !11, i64 232}
!392 = !{!393, !10, i64 0}
!393 = !{!"lmclass_s", !10, i64 0, !10, i64 8, !10, i64 16}
!394 = distinct !{!394, !32}
!395 = !{!27, !5, i64 148}
!396 = !{!27, !11, i64 112}
!397 = !{!27, !11, i64 152}
!398 = distinct !{!398, !32}
!399 = !{!27, !10, i64 80}
!400 = distinct !{!400, !32}
!401 = !{!27, !11, i64 116}
!402 = !{!27, !11, i64 120}
!403 = !{!27, !10, i64 88}
!404 = distinct !{!404, !32}
!405 = !{!27, !10, i64 96}
!406 = distinct !{!406, !32}
!407 = distinct !{!407, !32}
!408 = !{!409, !10, i64 0}
!409 = !{!"lmclass_word_s", !10, i64 0, !11, i64 8, !11, i64 12, !10, i64 16}
!410 = distinct !{!410, !32}
!411 = distinct !{!411, !32}
!412 = distinct !{!412, !32}
!413 = !{!27, !10, i64 160}
!414 = distinct !{!414, !32}
!415 = distinct !{!415, !32}
!416 = distinct !{!416, !32}
!417 = !{!27, !11, i64 216}
!418 = !{!27, !10, i64 128}
!419 = !{!27, !11, i64 136}
!420 = distinct !{!420, !32}
!421 = !{!27, !11, i64 28}
!422 = !{!27, !11, i64 32}
!423 = !{!36, !11, i64 12}
!424 = distinct !{!424, !32}
!425 = !{!27, !10, i64 48}
!426 = !{!27, !10, i64 56}
!427 = !{!27, !11, i64 140}
!428 = !{!27, !10, i64 64}
!429 = !{!27, !11, i64 144}
!430 = !{!27, !10, i64 72}
!431 = distinct !{!431, !32}
!432 = distinct !{!432, !32}
!433 = distinct !{!433, !32}
!434 = !{!27, !10, i64 104}
!435 = distinct !{!435, !32}
!436 = distinct !{!436, !32}
!437 = !{!27, !10, i64 16}
!438 = distinct !{!438, !32}
!439 = distinct !{!439, !32}
!440 = !{!27, !10, i64 240}
!441 = distinct !{!441, !32}
!442 = distinct !{!442, !32}
!443 = distinct !{!443, !32}
!444 = distinct !{!444, !32}
!445 = distinct !{!445, !32}
!446 = distinct !{!446, !32}
!447 = distinct !{!447, !32}
!448 = !{!27, !11, i64 172}
!449 = distinct !{!449, !32}
!450 = !{!451, !10, i64 24}
!451 = !{!"tginfo_s", !28, i64 0, !11, i64 4, !10, i64 8, !11, i64 16, !11, i64 20, !10, i64 24}
!452 = !{!451, !11, i64 20}
!453 = !{!451, !10, i64 8}
!454 = !{!451, !11, i64 4}
!455 = !{!27, !11, i64 188}
!456 = distinct !{!456, !32}
!457 = distinct !{!457, !32}
!458 = !{!27, !11, i64 192}
!459 = !{!27, !11, i64 200}
!460 = !{!27, !11, i64 196}
!461 = !{!27, !11, i64 184}
!462 = !{!27, !11, i64 176}
!463 = !{!27, !11, i64 180}
!464 = !{!27, !11, i64 168}
!465 = !{!27, !11, i64 204}
!466 = !{!409, !11, i64 8}
!467 = distinct !{!467, !32}
!468 = distinct !{!468, !32}
!469 = !{!470, !28, i64 0}
!470 = !{!"", !28, i64 0, !28, i64 2, !28, i64 4, !28, i64 6}
!471 = !{!470, !28, i64 2}
!472 = !{!470, !28, i64 4}
!473 = !{!470, !28, i64 6}
!474 = distinct !{!474, !32}
!475 = distinct !{!475, !32}
!476 = distinct !{!476, !32}
!477 = !{!451, !28, i64 0}
!478 = distinct !{!478, !32}
!479 = !{!451, !11, i64 16}
!480 = !{!481, !28, i64 0}
!481 = !{!"", !28, i64 0, !28, i64 2}
!482 = !{!481, !28, i64 2}
!483 = distinct !{!483, !32}
!484 = !{!485, !11, i64 8}
!485 = !{!"", !6, i64 0, !11, i64 8}
!486 = distinct !{!486, !32}
!487 = distinct !{!487, !32}
!488 = distinct !{!488, !32}
!489 = distinct !{!489, !32}
!490 = distinct !{!490, !32}
!491 = !{!492, !493, i64 8}
!492 = !{!"rlimit", !493, i64 0, !493, i64 8}
!493 = !{!"long", !6, i64 0}
!494 = !{!492, !493, i64 0}
!495 = distinct !{!495, !32}
!496 = distinct !{!496, !32}
!497 = distinct !{!497, !32}
!498 = distinct !{!498, !32}
!499 = distinct !{!499, !32}
!500 = distinct !{!500, !32}
!501 = distinct !{!501, !32}
!502 = distinct !{!502, !32}
!503 = distinct !{!503, !32}
!504 = distinct !{!504, !32}
!505 = distinct !{!505, !32}
!506 = distinct !{!506, !32}
!507 = distinct !{!507, !32}
!508 = distinct !{!508, !32}
!509 = distinct !{!509, !32}
!510 = !{!61, !10, i64 0}
!511 = distinct !{!511, !32}
!512 = distinct !{!512, !32}
!513 = distinct !{!513, !32}
!514 = distinct !{!514, !32}
!515 = distinct !{!515, !32}
!516 = distinct !{!516, !32}
!517 = distinct !{!517, !32}
!518 = distinct !{!518, !32}
!519 = distinct !{!519, !32}
!520 = distinct !{!520, !32}
!521 = distinct !{!521, !32}
!522 = distinct !{!522, !32}
!523 = distinct !{!523, !32}
!524 = distinct !{!524, !32}
!525 = distinct !{!525, !32}
!526 = distinct !{!526, !32}
!527 = distinct !{!527, !32}
!528 = distinct !{!528, !32}
!529 = distinct !{!529, !32}
!530 = distinct !{!530, !32}
!531 = distinct !{!531, !32}
!532 = distinct !{!532, !32}
!533 = distinct !{!533, !32}
!534 = distinct !{!534, !32}
!535 = distinct !{!535, !32}
!536 = distinct !{!536, !32}
!537 = distinct !{!537, !32}
!538 = distinct !{!538, !32}
!539 = distinct !{!539, !32}
!540 = distinct !{!540, !32}
!541 = distinct !{!541, !32}
!542 = distinct !{!542, !32}
!543 = distinct !{!543, !32}
!544 = distinct !{!544, !32}
!545 = distinct !{!545, !32}
!546 = distinct !{!546, !32}
!547 = distinct !{!547, !32}
!548 = distinct !{!548, !32}
!549 = distinct !{!549, !32}
!550 = distinct !{!550, !32}
!551 = distinct !{!551, !32}
!552 = distinct !{!552, !32}
!553 = distinct !{!553, !32}
!554 = distinct !{!554, !32}
!555 = distinct !{!555, !32}
!556 = distinct !{!556, !32}
!557 = distinct !{!557, !32}
!558 = distinct !{!558, !32}
!559 = distinct !{!559, !32}
!560 = !{!561, !11, i64 16}
!561 = !{!"mylist_s", !10, i64 0, !10, i64 8, !11, i64 16, !11, i64 20, !11, i64 24}
!562 = distinct !{!562, !32}
!563 = !{!561, !10, i64 0}
!564 = !{!561, !11, i64 20}
!565 = !{!561, !11, i64 24}
!566 = !{!561, !10, i64 8}
!567 = distinct !{!567, !32}
!568 = distinct !{!568, !32}
!569 = !{!144, !11, i64 16}
!570 = !{!144, !11, i64 28}
!571 = !{!144, !11, i64 24}
!572 = distinct !{!572, !32}
!573 = !{!144, !10, i64 56}
!574 = !{!575, !11, i64 0}
!575 = !{!"", !11, i64 0, !28, i64 4, !28, i64 6, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !6, i64 32}
!576 = !{!575, !28, i64 4}
!577 = !{!575, !28, i64 6}
!578 = !{!575, !11, i64 8}
!579 = !{!575, !11, i64 12}
!580 = !{!575, !11, i64 16}
!581 = !{!575, !11, i64 20}
!582 = !{!575, !11, i64 24}
!583 = !{!575, !11, i64 28}
!584 = !{!144, !11, i64 20}
!585 = distinct !{!585, !32}
!586 = !{i64 0, i64 4, !37, i64 4, i64 2, !40, i64 6, i64 2, !40, i64 8, i64 4, !37, i64 12, i64 4, !37, i64 16, i64 4, !37, i64 20, i64 4, !37, i64 24, i64 4, !37, i64 28, i64 4, !37, i64 32, i64 4, !63}
!587 = distinct !{!587, !32}
!588 = !{!589, !11, i64 0}
!589 = !{!"", !11, i64 0, !11, i64 4, !10, i64 8, !10, i64 16}
!590 = !{!589, !11, i64 4}
!591 = !{!589, !10, i64 16}
!592 = !{!589, !10, i64 8}
!593 = distinct !{!593, !32}
!594 = distinct !{!594, !32}
!595 = distinct !{!595, !32}
!596 = distinct !{!596, !32}
!597 = distinct !{!597, !32}
!598 = distinct !{!598, !32}
!599 = distinct !{!599, !32}
!600 = distinct !{!600, !32}
!601 = distinct !{!601, !32}
!602 = distinct !{!602, !32}
!603 = distinct !{!603, !32}
!604 = !{!21, !11, i64 80}
!605 = distinct !{!605, !32}
!606 = distinct !{!606, !32}
!607 = distinct !{!607, !32}
!608 = !{!609, !11, i64 0}
!609 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24}
!610 = !{!609, !11, i64 8}
!611 = !{!609, !11, i64 12}
!612 = !{!609, !11, i64 16}
!613 = !{!609, !11, i64 20}
!614 = !{!609, !11, i64 24}
!615 = !{!609, !11, i64 4}
!616 = distinct !{!616, !32}
!617 = distinct !{!617, !32}
!618 = !{!619, !11, i64 0}
!619 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !10, i64 16}
!620 = !{!619, !11, i64 4}
!621 = !{!619, !11, i64 8}
!622 = !{!619, !11, i64 12}
!623 = !{!619, !10, i64 16}
!624 = distinct !{!624, !32}
!625 = distinct !{!625, !32}
!626 = distinct !{!626, !32}
!627 = distinct !{!627, !32}
!628 = distinct !{!628, !32}
!629 = distinct !{!629, !32}
!630 = distinct !{!630, !32}
!631 = distinct !{!631, !32}
!632 = distinct !{!632, !32}
!633 = distinct !{!633, !32}
!634 = distinct !{!634, !32}
!635 = distinct !{!635, !32}
!636 = distinct !{!636, !32}
!637 = distinct !{!637, !32}
!638 = distinct !{!638, !32}
!639 = distinct !{!639, !32}
!640 = distinct !{!640, !32}
!641 = distinct !{!641, !32}
!642 = !{!643, !493, i64 48}
!643 = !{!"stat", !493, i64 0, !493, i64 8, !493, i64 16, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !493, i64 40, !493, i64 48, !493, i64 56, !493, i64 64, !644, i64 72, !644, i64 88, !644, i64 104, !6, i64 120}
!644 = !{!"timespec", !493, i64 0, !493, i64 8}
!645 = distinct !{!645, !32}
!646 = distinct !{!646, !32}
!647 = distinct !{!647, !32}
!648 = distinct !{!648, !32}
!649 = distinct !{!649, !32}
!650 = !{!376, !11, i64 8}
!651 = distinct !{!651, !32}
!652 = distinct !{!652, !32}
!653 = !{!376, !11, i64 12}
!654 = distinct !{!654, !32}
!655 = distinct !{!655, !32}
!656 = !{!376, !11, i64 32}
!657 = !{!376, !10, i64 48}
!658 = !{!376, !11, i64 36}
!659 = !{!376, !11, i64 40}
!660 = !{!376, !11, i64 44}
!661 = distinct !{!661, !32}
!662 = distinct !{!662, !32}
!663 = distinct !{!663, !32}
!664 = distinct !{!664, !32}
!665 = distinct !{!665, !32}
!666 = distinct !{!666, !32}
!667 = distinct !{!667, !32}
!668 = distinct !{!668, !32}
!669 = distinct !{!669, !32}
!670 = distinct !{!670, !32}
!671 = distinct !{!671, !32}
!672 = distinct !{!672, !32}
!673 = distinct !{!673, !32}
!674 = distinct !{!674, !32}
!675 = distinct !{!675, !32}
!676 = distinct !{!676, !32}
!677 = distinct !{!677, !32}
!678 = distinct !{!678, !32}
!679 = distinct !{!679, !32}
!680 = distinct !{!680, !32}
!681 = distinct !{!681, !32}
!682 = distinct !{!682, !32}
!683 = distinct !{!683, !32}
!684 = distinct !{!684, !32}
!685 = distinct !{!685, !32}
!686 = distinct !{!686, !32}
!687 = distinct !{!687, !32}
!688 = distinct !{!688, !32}
!689 = distinct !{!689, !32}
!690 = distinct !{!690, !32}
!691 = distinct !{!691, !32}
!692 = !{!380, !10, i64 40}
!693 = !{!380, !11, i64 20}
!694 = !{!380, !11, i64 4}
!695 = !{!380, !11, i64 12}
!696 = !{!380, !11, i64 8}
!697 = !{!380, !11, i64 16}
!698 = distinct !{!698, !32}
!699 = distinct !{!699, !32}
!700 = distinct !{!700, !32}
!701 = distinct !{!701, !32}
!702 = distinct !{!702, !32}
!703 = !{!380, !10, i64 24}
!704 = !{!380, !10, i64 32}
!705 = !{!380, !10, i64 48}
!706 = distinct !{!706, !32}
!707 = distinct !{!707, !32}
!708 = distinct !{!708, !32}
!709 = distinct !{!709, !32}
!710 = distinct !{!710, !32}
!711 = distinct !{!711, !32}
!712 = distinct !{!712, !32}
!713 = distinct !{!713, !32}
!714 = distinct !{!714, !32}
!715 = distinct !{!715, !32}
!716 = !{!12, !10, i64 0}
!717 = distinct !{!717, !32}
!718 = !{!12, !13, i64 8}
!719 = distinct !{!719, !32}
!720 = distinct !{!720, !32}
!721 = distinct !{!721, !32}
!722 = distinct !{!722, !32}
!723 = distinct !{!723, !32}
!724 = !{!21, !10, i64 0}
!725 = !{!21, !10, i64 16}
!726 = !{!21, !11, i64 48}
!727 = !{!21, !10, i64 40}
!728 = !{!61, !11, i64 20}
!729 = !{!61, !11, i64 28}
!730 = !{!61, !10, i64 32}
!731 = distinct !{!731, !32}
!732 = distinct !{!732, !32}
!733 = distinct !{!733, !32}
!734 = !{!21, !10, i64 8}
!735 = !{!21, !11, i64 24}
!736 = !{!21, !10, i64 64}
!737 = distinct !{!737, !32}
!738 = distinct !{!738, !32}
!739 = distinct !{!739, !32}
!740 = distinct !{!740, !32}
!741 = distinct !{!741, !32}
!742 = distinct !{!742, !32}
!743 = distinct !{!743, !32}
!744 = distinct !{!744, !32}
!745 = distinct !{!745, !32}
!746 = distinct !{!746, !32}
!747 = distinct !{!747, !32}
!748 = distinct !{!748, !32}
!749 = !{!750, !11, i64 8}
!750 = !{!"", !10, i64 0, !72, i64 8, !72, i64 16, !10, i64 24, !11, i64 32}
!751 = !{!750, !10, i64 0}
!752 = distinct !{!752, !32}
!753 = !{!750, !11, i64 16}
!754 = !{!750, !11, i64 12}
!755 = distinct !{!755, !32}
!756 = !{!750, !11, i64 20}
!757 = distinct !{!757, !32}
!758 = distinct !{!758, !32}
!759 = distinct !{!759, !32}
!760 = !{!750, !11, i64 32}
!761 = !{!750, !10, i64 24}
!762 = distinct !{!762, !32}
!763 = !{!9, !10, i64 208}
!764 = distinct !{!764, !32}
!765 = !{!9, !11, i64 64}
!766 = distinct !{!766, !32}
!767 = !{!9, !11, i64 40}
!768 = distinct !{!768, !32}
!769 = distinct !{!769, !32}
!770 = !{!493, !493, i64 0}
!771 = !{!9, !11, i64 220}
!772 = !{!9, !11, i64 224}
!773 = !{!9, !11, i64 216}
!774 = distinct !{!774, !32}
!775 = distinct !{!775, !32}
!776 = !{!9, !13, i64 424}
!777 = !{!9, !13, i64 432}
!778 = !{!9, !13, i64 440}
!779 = !{!9, !13, i64 448}
!780 = distinct !{!780, !32}
!781 = !{!9, !11, i64 140}
!782 = distinct !{!782, !32}
!783 = distinct !{!783, !32}
!784 = distinct !{!784, !32}
!785 = distinct !{!785, !32}
!786 = !{!9, !11, i64 196}
!787 = distinct !{!787, !32}
!788 = distinct !{!788, !32}
!789 = distinct !{!789, !32}
!790 = distinct !{!790, !32}
!791 = distinct !{!791, !32}
!792 = distinct !{!792, !32}
!793 = distinct !{!793, !32}
!794 = distinct !{!794, !32}
!795 = distinct !{!795, !32}
!796 = distinct !{!796, !32}
!797 = !{!76, !11, i64 48}
!798 = !{!76, !11, i64 56}
!799 = !{!76, !11, i64 60}
!800 = distinct !{!800, !32}
!801 = distinct !{!801, !32}
!802 = distinct !{!802, !32}
!803 = !{!9, !11, i64 144}
!804 = distinct !{!804, !32}
!805 = distinct !{!805, !32}
!806 = distinct !{!806, !32}
!807 = distinct !{!807, !32}
!808 = distinct !{!808, !32}
!809 = distinct !{!809, !32}
!810 = distinct !{!810, !32}
!811 = distinct !{!811, !32}
!812 = !{!409, !11, i64 12}
!813 = distinct !{!813, !32}
!814 = distinct !{!814, !32}
!815 = distinct !{!815, !32}
!816 = distinct !{!816, !32}
!817 = distinct !{!817, !32}
!818 = distinct !{!818, !32}
!819 = distinct !{!819, !32}
!820 = !{!821, !10, i64 0}
!821 = !{!"lmclass_set_s", !10, i64 0}
!822 = distinct !{!822, !32}
!823 = !{!393, !10, i64 8}
!824 = distinct !{!824, !32}
!825 = distinct !{!825, !32}
!826 = distinct !{!826, !32}
!827 = distinct !{!827, !32}
!828 = distinct !{!828, !32}
!829 = !{!393, !10, i64 16}
!830 = distinct !{!830, !32}
!831 = !{!409, !10, i64 16}
!832 = distinct !{!832, !32}
!833 = distinct !{!833, !32}
!834 = distinct !{!834, !32}
!835 = distinct !{!835, !32}
!836 = distinct !{!836, !32}
!837 = distinct !{!837, !32}
!838 = distinct !{!838, !32}
!839 = distinct !{!839, !32}
!840 = distinct !{!840, !32}
!841 = distinct !{!841, !32}
!842 = distinct !{!842, !32}
!843 = distinct !{!843, !32}
!844 = distinct !{!844, !32}
!845 = distinct !{!845, !32}
!846 = distinct !{!846, !32}
!847 = distinct !{!847, !32}
!848 = distinct !{!848, !32}
!849 = distinct !{!849, !32}
!850 = !{!851, !11, i64 8}
!851 = !{!"", !10, i64 0, !11, i64 8, !6, i64 12}
!852 = !{!851, !6, i64 12}
!853 = !{!851, !10, i64 0}
!854 = distinct !{!854, !32}
!855 = distinct !{!855, !32}
!856 = distinct !{!856, !32}
!857 = !{!362, !11, i64 8}
!858 = !{!362, !10, i64 16}
!859 = distinct !{!859, !32}
!860 = distinct !{!860, !32}
!861 = distinct !{!861, !32}
!862 = distinct !{!862, !32}
!863 = distinct !{!863, !32}
!864 = distinct !{!864, !32}
!865 = distinct !{!865, !32}
!866 = distinct !{!866, !32}
!867 = distinct !{!867, !32}
!868 = distinct !{!868, !32}
!869 = !{!9, !11, i64 108}
!870 = distinct !{!870, !32}
!871 = distinct !{!871, !32}
!872 = distinct !{!872, !32}
!873 = !{!874, !10, i64 8}
!874 = !{!"", !11, i64 0, !11, i64 4, !10, i64 8, !11, i64 16, !11, i64 20}
!875 = !{!874, !11, i64 16}
!876 = !{!874, !11, i64 20}
!877 = !{!874, !11, i64 0}
!878 = !{!874, !11, i64 4}
!879 = distinct !{!879, !32}
!880 = distinct !{!880, !32}
!881 = distinct !{!881, !32}
!882 = distinct !{!882, !32}
!883 = distinct !{!883, !32}
!884 = distinct !{!884, !32}
!885 = distinct !{!885, !32}
!886 = distinct !{!886, !32}
!887 = distinct !{!887, !32}
!888 = distinct !{!888, !32}
!889 = distinct !{!889, !32}
!890 = distinct !{!890, !32}
!891 = distinct !{!891, !32}
!892 = distinct !{!892, !32}
!893 = distinct !{!893, !32}
!894 = distinct !{!894, !32}
!895 = distinct !{!895, !32}
!896 = distinct !{!896, !32}
!897 = distinct !{!897, !32}
!898 = distinct !{!898, !32}
!899 = distinct !{!899, !32}
!900 = distinct !{!900, !32}
!901 = distinct !{!901, !32}
!902 = distinct !{!902, !32}
!903 = distinct !{!903, !32}
!904 = distinct !{!904, !32}
!905 = distinct !{!905, !32}
!906 = distinct !{!906, !32}
!907 = distinct !{!907, !32}
!908 = distinct !{!908, !32}
!909 = distinct !{!909, !32}
!910 = !{!261, !11, i64 0}
!911 = !{!261, !13, i64 32}
!912 = distinct !{!912, !32}
!913 = distinct !{!913, !32}
!914 = distinct !{!914, !32}
!915 = distinct !{!915, !32}
!916 = distinct !{!916, !32}
!917 = !{!918, !10, i64 0}
!918 = !{!"", !10, i64 0, !11, i64 8, !10, i64 16, !10, i64 24}
!919 = distinct !{!919, !32}
!920 = distinct !{!920, !32}
!921 = distinct !{!921, !32}
!922 = !{!923, !10, i64 8}
!923 = !{!"argval_s", !6, i64 0, !10, i64 8}
!924 = !{!918, !11, i64 8}
!925 = !{!918, !10, i64 16}
!926 = distinct !{!926, !32}
!927 = distinct !{!927, !32}
!928 = distinct !{!928, !32}
!929 = distinct !{!929, !32}
!930 = distinct !{!930, !32}
!931 = distinct !{!931, !32}
!932 = !{!918, !10, i64 24}
!933 = distinct !{!933, !32}
!934 = distinct !{!934, !32}
!935 = distinct !{!935, !32}
!936 = !{!286, !10, i64 16}
!937 = distinct !{!937, !32}
!938 = distinct !{!938, !32}
!939 = distinct !{!939, !32}
!940 = !{!93, !11, i64 40}
!941 = !{!93, !13, i64 24}
!942 = distinct !{!942, !32}
!943 = distinct !{!943, !32}
!944 = !{!286, !10, i64 8}
!945 = distinct !{!945, !32}
!946 = distinct !{!946, !32}
!947 = distinct !{!947, !32}
!948 = distinct !{!948, !32}
!949 = !{!286, !10, i64 24}
!950 = distinct !{!950, !32}
!951 = distinct !{!951, !32}
!952 = distinct !{!952, !32}
!953 = distinct !{!953, !32}
!954 = distinct !{!954, !32}
!955 = distinct !{!955, !32}
!956 = distinct !{!956, !32}
!957 = distinct !{!957, !32}
!958 = distinct !{!958, !32}
!959 = distinct !{!959, !32}
!960 = distinct !{!960, !32}
!961 = distinct !{!961, !32}
!962 = distinct !{!962, !32}
!963 = distinct !{!963, !32}
!964 = distinct !{!964, !32}
!965 = distinct !{!965, !32}
!966 = distinct !{!966, !32}
!967 = distinct !{!967, !32}
!968 = distinct !{!968, !32}
!969 = distinct !{!969, !32}
!970 = distinct !{!970, !32}
!971 = distinct !{!971, !32}
!972 = distinct !{!972, !32}
!973 = distinct !{!973, !32}
!974 = distinct !{!974, !32}
!975 = !{!185, !11, i64 4}
!976 = !{!185, !5, i64 12}
!977 = !{!185, !28, i64 68}
!978 = !{!185, !10, i64 40}
!979 = !{!185, !10, i64 72}
!980 = distinct !{!980, !32}
!981 = !{!185, !5, i64 32}
!982 = distinct !{!982, !32}
!983 = distinct !{!983, !32}
!984 = distinct !{!984, !32}
!985 = distinct !{!985, !32}
!986 = distinct !{!986, !32}
!987 = distinct !{!987, !32}
!988 = distinct !{!988, !32}
!989 = !{!76, !10, i64 8}
!990 = distinct !{!990, !32}
!991 = !{!76, !11, i64 24}
!992 = !{!76, !10, i64 16}
!993 = distinct !{!993, !32}
!994 = !{!995, !6, i64 0}
!995 = !{!"", !6, i64 0, !10, i64 8}
!996 = !{!995, !10, i64 8}
!997 = distinct !{!997, !32}
!998 = !{!999, !10, i64 24}
!999 = !{!"", !750, i64 0, !10, i64 40, !11, i64 48, !11, i64 52, !11, i64 56, !10, i64 64, !6, i64 72, !6, i64 73, !28, i64 74}
!1000 = !{!999, !11, i64 56}
!1001 = distinct !{!1001, !32}
!1002 = distinct !{!1002, !32}
!1003 = !{!999, !6, i64 73}
!1004 = !{!999, !11, i64 48}
!1005 = distinct !{!1005, !32}
!1006 = !{!999, !11, i64 52}
!1007 = distinct !{!1007, !32}
!1008 = distinct !{!1008, !32}
!1009 = distinct !{!1009, !32}
!1010 = distinct !{!1010, !32}
!1011 = !{!999, !10, i64 40}
!1012 = distinct !{!1012, !32}
!1013 = distinct !{!1013, !32}
!1014 = distinct !{!1014, !32}
!1015 = distinct !{!1015, !32}
!1016 = distinct !{!1016, !32}
!1017 = distinct !{!1017, !32}
!1018 = !{!76, !10, i64 32}
!1019 = !{!76, !10, i64 40}
!1020 = !{!76, !11, i64 52}
!1021 = distinct !{!1021, !32}
!1022 = !{!999, !6, i64 72}
!1023 = !{!999, !28, i64 74}
!1024 = !{!999, !10, i64 0}
!1025 = distinct !{!1025, !32}
!1026 = distinct !{!1026, !32}
!1027 = distinct !{!1027, !32}
!1028 = distinct !{!1028, !32}
!1029 = distinct !{!1029, !32}
!1030 = distinct !{!1030, !32}
!1031 = distinct !{!1031, !32}
!1032 = distinct !{!1032, !32}
!1033 = distinct !{!1033, !32}
!1034 = distinct !{!1034, !32}
!1035 = distinct !{!1035, !32}
!1036 = distinct !{!1036, !32}
!1037 = distinct !{!1037, !32}
!1038 = distinct !{!1038, !32}
!1039 = distinct !{!1039, !32}
!1040 = distinct !{!1040, !32}
!1041 = distinct !{!1041, !32}
!1042 = distinct !{!1042, !32}
!1043 = distinct !{!1043, !32}
!1044 = distinct !{!1044, !32}
!1045 = distinct !{!1045, !32}
!1046 = distinct !{!1046, !32}
!1047 = distinct !{!1047, !32}
!1048 = distinct !{!1048, !32}
!1049 = distinct !{!1049, !32}
!1050 = distinct !{!1050, !32}
!1051 = distinct !{!1051, !32}
