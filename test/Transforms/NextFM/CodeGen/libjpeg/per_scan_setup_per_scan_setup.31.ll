; AUTOMATICALLY GENERATED BY tools/llvm-nextfm-remark/compare-mergesize.rb
;
; RUN: %opt -S --passes="multiple-func-merging" --multiple-func-merging-only=per_scan_setup --multiple-func-merging-only=per_scan_setup.31 -o %t.mfm.ll %s
; RUN: %opt -S --passes="func-merging" --func-merging-only=per_scan_setup --func-merging-only=per_scan_setup.31 -o %t.fm.ll %s
; RUN: %llc --filetype=obj %t.mfm.ll -o %t.mfm.o
; RUN: %llc --filetype=obj %t.fm.ll -o %t.fm.o
; RUN: %strip %t.mfm.o
; RUN: %strip %t.fm.o
; RUN: [[ $(stat -c%%s %t.mfm.o) -le $(stat -c%%s %t.fm.o) ]]

; ModuleID = '../benchmarks/mibench/consumer/jpeg/cjpeg.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_compress_struct.197 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_destination_mgr.183*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master.188*, %struct.jpeg_c_main_controller.189*, %struct.jpeg_c_prep_controller.190*, %struct.jpeg_c_coef_controller.191*, %struct.jpeg_marker_writer.192*, %struct.jpeg_color_converter.193*, %struct.jpeg_downsampler.194*, %struct.jpeg_forward_dct.195*, %struct.jpeg_entropy_encoder.196* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64 }
%struct.jvirt_sarray_control = type { i8**, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.jvirt_sarray_control*, %struct.backing_store_struct }
%struct.backing_store_struct = type { void (%struct.jpeg_common_struct.775*, %struct.backing_store_struct*, i8*, i64, i64)*, void (%struct.jpeg_common_struct.775*, %struct.backing_store_struct*, i8*, i64, i64)*, void (%struct.jpeg_common_struct.775*, %struct.backing_store_struct*)*, %struct._IO_FILE*, [64 x i8] }
%struct.jpeg_common_struct.775 = type { %struct.jpeg_error_mgr.766*, %struct.jpeg_memory_mgr.773*, %struct.jpeg_progress_mgr*, i32, i32 }
%struct.jpeg_error_mgr.766 = type { {}*, void (%struct.jpeg_common_struct.775*, i32)*, {}*, void (%struct.jpeg_common_struct.775*, i8*)*, {}*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_memory_mgr.773 = type { i8* (%struct.jpeg_common_struct.775*, i32, i64)*, i8* (%struct.jpeg_common_struct.775*, i32, i64)*, i8** (%struct.jpeg_common_struct.775*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct.775*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct.775*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct.775*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct.775*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct.775*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct.775*, i32)*, {}*, i64 }
%struct.jvirt_barray_control = type { [64 x i16]**, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.jvirt_barray_control*, %struct.backing_store_struct }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_destination_mgr.183 = type { i8*, i64, void (%struct.jpeg_compress_struct.197*)*, i32 (%struct.jpeg_compress_struct.197*)*, void (%struct.jpeg_compress_struct.197*)* }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_scan_info = type { i32, [4 x i32], i32, i32, i32, i32 }
%struct.jpeg_comp_master.188 = type { void (%struct.jpeg_compress_struct.197*)*, void (%struct.jpeg_compress_struct.197*)*, void (%struct.jpeg_compress_struct.197*)*, i32, i32 }
%struct.jpeg_c_main_controller.189 = type { void (%struct.jpeg_compress_struct.197*, i32)*, void (%struct.jpeg_compress_struct.197*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller.190 = type { void (%struct.jpeg_compress_struct.197*, i32)*, void (%struct.jpeg_compress_struct.197*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller.191 = type { void (%struct.jpeg_compress_struct.197*, i32)*, i32 (%struct.jpeg_compress_struct.197*, i8***)* }
%struct.jpeg_marker_writer.192 = type { void (%struct.jpeg_compress_struct.197*, i32, i8*, i32)*, void (%struct.jpeg_compress_struct.197*)*, void (%struct.jpeg_compress_struct.197*)*, void (%struct.jpeg_compress_struct.197*)*, void (%struct.jpeg_compress_struct.197*)*, void (%struct.jpeg_compress_struct.197*)* }
%struct.jpeg_color_converter.193 = type { void (%struct.jpeg_compress_struct.197*)*, void (%struct.jpeg_compress_struct.197*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler.194 = type { void (%struct.jpeg_compress_struct.197*)*, void (%struct.jpeg_compress_struct.197*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct.195 = type { void (%struct.jpeg_compress_struct.197*)*, void (%struct.jpeg_compress_struct.197*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder.196 = type { {}*, i32 (%struct.jpeg_compress_struct.197*, [64 x i16]**)*, void (%struct.jpeg_compress_struct.197*)* }
%struct.jpeg_decompress_struct.494 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr.479*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master.413*, %struct.jpeg_d_main_controller.484*, %struct.jpeg_d_coef_controller.485*, %struct.jpeg_d_post_controller.486*, %struct.jpeg_input_controller.487*, %struct.jpeg_marker_reader.488*, %struct.jpeg_entropy_decoder.489*, %struct.jpeg_inverse_dct.490*, %struct.jpeg_upsampler.491*, %struct.jpeg_color_deconverter.492*, %struct.jpeg_color_quantizer.493* }
%struct.jpeg_source_mgr.479 = type { i8*, i64, {}*, i32 (%struct.jpeg_decompress_struct.494*)*, void (%struct.jpeg_decompress_struct.494*, i64)*, i32 (%struct.jpeg_decompress_struct.494*, i32)*, {}* }
%struct.jpeg_decomp_master.413 = type { {}*, {}*, i32 }
%struct.jpeg_d_main_controller.484 = type { void (%struct.jpeg_decompress_struct.494*, i32)*, void (%struct.jpeg_decompress_struct.494*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller.485 = type { {}*, i32 (%struct.jpeg_decompress_struct.494*)*, {}*, i32 (%struct.jpeg_decompress_struct.494*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller.486 = type { void (%struct.jpeg_decompress_struct.494*, i32)*, void (%struct.jpeg_decompress_struct.494*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller.487 = type { i32 (%struct.jpeg_decompress_struct.494*)*, {}*, {}*, {}*, i32, i32 }
%struct.jpeg_marker_reader.488 = type { {}*, i32 (%struct.jpeg_decompress_struct.494*)*, i32 (%struct.jpeg_decompress_struct.494*)*, i32 (%struct.jpeg_decompress_struct.494*)*, [16 x i32 (%struct.jpeg_decompress_struct.494*)*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder.489 = type { {}*, i32 (%struct.jpeg_decompress_struct.494*, [64 x i16]**)* }
%struct.jpeg_inverse_dct.490 = type { {}*, [10 x void (%struct.jpeg_decompress_struct.494*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler.491 = type { {}*, void (%struct.jpeg_decompress_struct.494*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter.492 = type { {}*, void (%struct.jpeg_decompress_struct.494*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer.493 = type { void (%struct.jpeg_decompress_struct.494*, i32)*, void (%struct.jpeg_decompress_struct.494*, i8**, i8**, i32)*, {}*, {}* }

; Function Attrs: noinline nounwind optnone ssp uwtable
declare i64 @jdiv_round_up(i64, i64) #0

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @per_scan_setup(%struct.jpeg_compress_struct.197* %0) #0 {
  %2 = alloca %struct.jpeg_compress_struct.197*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.jpeg_component_info*, align 8
  %7 = alloca i64, align 8
  store %struct.jpeg_compress_struct.197* %0, %struct.jpeg_compress_struct.197** %2, align 8
  %8 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %9 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %8, i32 0, i32 41
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %59

12:                                               ; preds = %1
  %13 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %13, i32 0, i32 42
  %15 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %14, i64 0, i64 0
  %16 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %15, align 8
  store %struct.jpeg_component_info* %16, %struct.jpeg_component_info** %6, align 8
  %17 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %18 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %17, i32 0, i32 7
  %19 = load i32, i32* %18, align 4
  %20 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %21 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %20, i32 0, i32 43
  store i32 %19, i32* %21, align 8
  %22 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %23 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %22, i32 0, i32 8
  %24 = load i32, i32* %23, align 8
  %25 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %25, i32 0, i32 44
  store i32 %24, i32* %26, align 4
  %27 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %28 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %27, i32 0, i32 13
  store i32 1, i32* %28, align 4
  %29 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %30 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %29, i32 0, i32 14
  store i32 1, i32* %30, align 8
  %31 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %32 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %31, i32 0, i32 15
  store i32 1, i32* %32, align 4
  %33 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %34 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %33, i32 0, i32 16
  store i32 8, i32* %34, align 8
  %35 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %36 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %35, i32 0, i32 17
  store i32 1, i32* %36, align 4
  %37 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %38 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %37, i32 0, i32 8
  %39 = load i32, i32* %38, align 8
  %40 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %41 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %40, i32 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = urem i32 %39, %42
  store i32 %43, i32* %5, align 4
  %44 = load i32, i32* %5, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %12
  %47 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %48 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %47, i32 0, i32 3
  %49 = load i32, i32* %48, align 4
  store i32 %49, i32* %5, align 4
  br label %50

50:                                               ; preds = %46, %12
  %51 = load i32, i32* %5, align 4
  %52 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %53 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %52, i32 0, i32 18
  store i32 %51, i32* %53, align 8
  %54 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %55 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %54, i32 0, i32 45
  store i32 1, i32* %55, align 8
  %56 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %57 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %56, i32 0, i32 46
  %58 = getelementptr inbounds [10 x i32], [10 x i32]* %57, i64 0, i64 0
  store i32 0, i32* %58, align 4
  br label %238

59:                                               ; preds = %1
  %60 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %61 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %60, i32 0, i32 41
  %62 = load i32, i32* %61, align 4
  %63 = icmp sle i32 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %59
  %65 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %66 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %65, i32 0, i32 41
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %67, 4
  br i1 %68, label %69, label %96

69:                                               ; preds = %64, %59
  %70 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %71 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %70, i32 0, i32 0
  %72 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %71, align 8
  %73 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %72, i32 0, i32 5
  store i32 24, i32* %73, align 8
  %74 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %75 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %74, i32 0, i32 41
  %76 = load i32, i32* %75, align 4
  %77 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %78 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %77, i32 0, i32 0
  %79 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %78, align 8
  %80 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %79, i32 0, i32 6
  %81 = bitcast %union.anon* %80 to [8 x i32]*
  %82 = getelementptr inbounds [8 x i32], [8 x i32]* %81, i64 0, i64 0
  store i32 %76, i32* %82, align 4
  %83 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %84 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %83, i32 0, i32 0
  %85 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %84, align 8
  %86 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %85, i32 0, i32 6
  %87 = bitcast %union.anon* %86 to [8 x i32]*
  %88 = getelementptr inbounds [8 x i32], [8 x i32]* %87, i64 0, i64 1
  store i32 4, i32* %88, align 4
  %89 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %90 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %89, i32 0, i32 0
  %91 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %90, align 8
  %92 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %91, i32 0, i32 0
  %93 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %92, align 8
  %94 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %95 = bitcast %struct.jpeg_compress_struct.197* %94 to %struct.jpeg_common_struct*
  call void %93(%struct.jpeg_common_struct* %95)
  br label %96

96:                                               ; preds = %69, %64
  %97 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %98 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %97, i32 0, i32 6
  %99 = load i32, i32* %98, align 8
  %100 = zext i32 %99 to i64
  %101 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %102 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %101, i32 0, i32 38
  %103 = load i32, i32* %102, align 8
  %104 = mul nsw i32 %103, 8
  %105 = sext i32 %104 to i64
  %106 = call i64 @jdiv_round_up(i64 %100, i64 %105)
  %107 = trunc i64 %106 to i32
  %108 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %109 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %108, i32 0, i32 43
  store i32 %107, i32* %109, align 8
  %110 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %111 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %110, i32 0, i32 7
  %112 = load i32, i32* %111, align 4
  %113 = zext i32 %112 to i64
  %114 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %115 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %114, i32 0, i32 39
  %116 = load i32, i32* %115, align 4
  %117 = mul nsw i32 %116, 8
  %118 = sext i32 %117 to i64
  %119 = call i64 @jdiv_round_up(i64 %113, i64 %118)
  %120 = trunc i64 %119 to i32
  %121 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %122 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %121, i32 0, i32 44
  store i32 %120, i32* %122, align 4
  %123 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %124 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %123, i32 0, i32 45
  store i32 0, i32* %124, align 8
  store i32 0, i32* %3, align 4
  br label %125

125:                                              ; preds = %234, %96
  %126 = load i32, i32* %3, align 4
  %127 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %128 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %127, i32 0, i32 41
  %129 = load i32, i32* %128, align 4
  %130 = icmp slt i32 %126, %129
  br i1 %130, label %131, label %237

131:                                              ; preds = %125
  %132 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %133 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %132, i32 0, i32 42
  %134 = load i32, i32* %3, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %133, i64 0, i64 %135
  %137 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %136, align 8
  store %struct.jpeg_component_info* %137, %struct.jpeg_component_info** %6, align 8
  %138 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %139 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %138, i32 0, i32 2
  %140 = load i32, i32* %139, align 8
  %141 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %142 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %141, i32 0, i32 13
  store i32 %140, i32* %142, align 4
  %143 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %144 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %143, i32 0, i32 3
  %145 = load i32, i32* %144, align 4
  %146 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %147 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %146, i32 0, i32 14
  store i32 %145, i32* %147, align 8
  %148 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %149 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %148, i32 0, i32 13
  %150 = load i32, i32* %149, align 4
  %151 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %152 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %151, i32 0, i32 14
  %153 = load i32, i32* %152, align 8
  %154 = mul nsw i32 %150, %153
  %155 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %156 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %155, i32 0, i32 15
  store i32 %154, i32* %156, align 4
  %157 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %158 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %157, i32 0, i32 13
  %159 = load i32, i32* %158, align 4
  %160 = mul nsw i32 %159, 8
  %161 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %162 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %161, i32 0, i32 16
  store i32 %160, i32* %162, align 8
  %163 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %164 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %163, i32 0, i32 7
  %165 = load i32, i32* %164, align 4
  %166 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %167 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %166, i32 0, i32 13
  %168 = load i32, i32* %167, align 4
  %169 = urem i32 %165, %168
  store i32 %169, i32* %5, align 4
  %170 = load i32, i32* %5, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %176

172:                                              ; preds = %131
  %173 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %174 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %173, i32 0, i32 13
  %175 = load i32, i32* %174, align 4
  store i32 %175, i32* %5, align 4
  br label %176

176:                                              ; preds = %172, %131
  %177 = load i32, i32* %5, align 4
  %178 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %179 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %178, i32 0, i32 17
  store i32 %177, i32* %179, align 4
  %180 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %181 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %180, i32 0, i32 8
  %182 = load i32, i32* %181, align 8
  %183 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %184 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %183, i32 0, i32 14
  %185 = load i32, i32* %184, align 8
  %186 = urem i32 %182, %185
  store i32 %186, i32* %5, align 4
  %187 = load i32, i32* %5, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %193

189:                                              ; preds = %176
  %190 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %191 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %190, i32 0, i32 14
  %192 = load i32, i32* %191, align 8
  store i32 %192, i32* %5, align 4
  br label %193

193:                                              ; preds = %189, %176
  %194 = load i32, i32* %5, align 4
  %195 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %196 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %195, i32 0, i32 18
  store i32 %194, i32* %196, align 8
  %197 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %198 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %197, i32 0, i32 15
  %199 = load i32, i32* %198, align 4
  store i32 %199, i32* %4, align 4
  %200 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %201 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %200, i32 0, i32 45
  %202 = load i32, i32* %201, align 8
  %203 = load i32, i32* %4, align 4
  %204 = add nsw i32 %202, %203
  %205 = icmp sgt i32 %204, 10
  br i1 %205, label %206, label %218

206:                                              ; preds = %193
  %207 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %208 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %207, i32 0, i32 0
  %209 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %208, align 8
  %210 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %209, i32 0, i32 5
  store i32 11, i32* %210, align 8
  %211 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %212 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %211, i32 0, i32 0
  %213 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %212, align 8
  %214 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %213, i32 0, i32 0
  %215 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %214, align 8
  %216 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %217 = bitcast %struct.jpeg_compress_struct.197* %216 to %struct.jpeg_common_struct*
  call void %215(%struct.jpeg_common_struct* %217)
  br label %218

218:                                              ; preds = %206, %193
  br label %219

219:                                              ; preds = %223, %218
  %220 = load i32, i32* %4, align 4
  %221 = add nsw i32 %220, -1
  store i32 %221, i32* %4, align 4
  %222 = icmp sgt i32 %220, 0
  br i1 %222, label %223, label %233

223:                                              ; preds = %219
  %224 = load i32, i32* %3, align 4
  %225 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %226 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %225, i32 0, i32 46
  %227 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %228 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %227, i32 0, i32 45
  %229 = load i32, i32* %228, align 8
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %228, align 8
  %231 = sext i32 %229 to i64
  %232 = getelementptr inbounds [10 x i32], [10 x i32]* %226, i64 0, i64 %231
  store i32 %224, i32* %232, align 4
  br label %219, !llvm.loop !7

233:                                              ; preds = %219
  br label %234

234:                                              ; preds = %233
  %235 = load i32, i32* %3, align 4
  %236 = add nsw i32 %235, 1
  store i32 %236, i32* %3, align 4
  br label %125, !llvm.loop !9

237:                                              ; preds = %125
  br label %238

238:                                              ; preds = %237, %50
  %239 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %240 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %239, i32 0, i32 30
  %241 = load i32, i32* %240, align 4
  %242 = icmp sgt i32 %241, 0
  br i1 %242, label %243, label %263

243:                                              ; preds = %238
  %244 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %245 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %244, i32 0, i32 30
  %246 = load i32, i32* %245, align 4
  %247 = sext i32 %246 to i64
  %248 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %249 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %248, i32 0, i32 43
  %250 = load i32, i32* %249, align 8
  %251 = zext i32 %250 to i64
  %252 = mul nsw i64 %247, %251
  store i64 %252, i64* %7, align 8
  %253 = load i64, i64* %7, align 8
  %254 = icmp slt i64 %253, 65535
  br i1 %254, label %255, label %257

255:                                              ; preds = %243
  %256 = load i64, i64* %7, align 8
  br label %258

257:                                              ; preds = %243
  br label %258

258:                                              ; preds = %257, %255
  %259 = phi i64 [ %256, %255 ], [ 65535, %257 ]
  %260 = trunc i64 %259 to i32
  %261 = load %struct.jpeg_compress_struct.197*, %struct.jpeg_compress_struct.197** %2, align 8
  %262 = getelementptr inbounds %struct.jpeg_compress_struct.197, %struct.jpeg_compress_struct.197* %261, i32 0, i32 29
  store i32 %260, i32* %262, align 8
  br label %263

263:                                              ; preds = %258, %238
  ret void
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden void @per_scan_setup.31(%struct.jpeg_decompress_struct.494* %0) #0 {
  %2 = alloca %struct.jpeg_decompress_struct.494*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.jpeg_component_info*, align 8
  store %struct.jpeg_decompress_struct.494* %0, %struct.jpeg_decompress_struct.494** %2, align 8
  %7 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %7, i32 0, i32 62
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %61

11:                                               ; preds = %1
  %12 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %12, i32 0, i32 63
  %14 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %13, i64 0, i64 0
  %15 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %14, align 8
  store %struct.jpeg_component_info* %15, %struct.jpeg_component_info** %6, align 8
  %16 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %17 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %16, i32 0, i32 7
  %18 = load i32, i32* %17, align 4
  %19 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %19, i32 0, i32 64
  store i32 %18, i32* %20, align 8
  %21 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %22 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %21, i32 0, i32 8
  %23 = load i32, i32* %22, align 8
  %24 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %24, i32 0, i32 65
  store i32 %23, i32* %25, align 4
  %26 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %27 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %26, i32 0, i32 13
  store i32 1, i32* %27, align 4
  %28 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %29 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %28, i32 0, i32 14
  store i32 1, i32* %29, align 8
  %30 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %31 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %30, i32 0, i32 15
  store i32 1, i32* %31, align 4
  %32 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %33 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %32, i32 0, i32 9
  %34 = load i32, i32* %33, align 4
  %35 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %36 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %35, i32 0, i32 16
  store i32 %34, i32* %36, align 8
  %37 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %38 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %37, i32 0, i32 17
  store i32 1, i32* %38, align 4
  %39 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %40 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %39, i32 0, i32 8
  %41 = load i32, i32* %40, align 8
  %42 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %43 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %42, i32 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = urem i32 %41, %44
  store i32 %45, i32* %5, align 4
  %46 = load i32, i32* %5, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %11
  %49 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %50 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %49, i32 0, i32 3
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %5, align 4
  br label %52

52:                                               ; preds = %48, %11
  %53 = load i32, i32* %5, align 4
  %54 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %55 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %54, i32 0, i32 18
  store i32 %53, i32* %55, align 8
  %56 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %57 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %56, i32 0, i32 66
  store i32 1, i32* %57, align 8
  %58 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %59 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %58, i32 0, i32 67
  %60 = getelementptr inbounds [10 x i32], [10 x i32]* %59, i64 0, i64 0
  store i32 0, i32* %60, align 4
  br label %243

61:                                               ; preds = %1
  %62 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %63 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %62, i32 0, i32 62
  %64 = load i32, i32* %63, align 8
  %65 = icmp sle i32 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %61
  %67 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %68 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %67, i32 0, i32 62
  %69 = load i32, i32* %68, align 8
  %70 = icmp sgt i32 %69, 4
  br i1 %70, label %71, label %98

71:                                               ; preds = %66, %61
  %72 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %73 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %72, i32 0, i32 0
  %74 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %73, align 8
  %75 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %74, i32 0, i32 5
  store i32 24, i32* %75, align 8
  %76 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %77 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %76, i32 0, i32 62
  %78 = load i32, i32* %77, align 8
  %79 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %80 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %79, i32 0, i32 0
  %81 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %82 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %81, i32 0, i32 6
  %83 = bitcast %union.anon* %82 to [8 x i32]*
  %84 = getelementptr inbounds [8 x i32], [8 x i32]* %83, i64 0, i64 0
  store i32 %78, i32* %84, align 4
  %85 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %86 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %85, i32 0, i32 0
  %87 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %86, align 8
  %88 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i32 0, i32 6
  %89 = bitcast %union.anon* %88 to [8 x i32]*
  %90 = getelementptr inbounds [8 x i32], [8 x i32]* %89, i64 0, i64 1
  store i32 4, i32* %90, align 4
  %91 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %92 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %91, i32 0, i32 0
  %93 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %92, align 8
  %94 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %93, i32 0, i32 0
  %95 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %94, align 8
  %96 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %97 = bitcast %struct.jpeg_decompress_struct.494* %96 to %struct.jpeg_common_struct*
  call void %95(%struct.jpeg_common_struct* %97)
  br label %98

98:                                               ; preds = %71, %66
  %99 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %100 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %99, i32 0, i32 6
  %101 = load i32, i32* %100, align 8
  %102 = zext i32 %101 to i64
  %103 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %104 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %103, i32 0, i32 57
  %105 = load i32, i32* %104, align 4
  %106 = mul nsw i32 %105, 8
  %107 = sext i32 %106 to i64
  %108 = call i64 @jdiv_round_up(i64 %102, i64 %107)
  %109 = trunc i64 %108 to i32
  %110 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %111 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %110, i32 0, i32 64
  store i32 %109, i32* %111, align 8
  %112 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %113 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %112, i32 0, i32 7
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i64
  %116 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %117 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %116, i32 0, i32 58
  %118 = load i32, i32* %117, align 8
  %119 = mul nsw i32 %118, 8
  %120 = sext i32 %119 to i64
  %121 = call i64 @jdiv_round_up(i64 %115, i64 %120)
  %122 = trunc i64 %121 to i32
  %123 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %124 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %123, i32 0, i32 65
  store i32 %122, i32* %124, align 4
  %125 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %126 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %125, i32 0, i32 66
  store i32 0, i32* %126, align 8
  store i32 0, i32* %3, align 4
  br label %127

127:                                              ; preds = %239, %98
  %128 = load i32, i32* %3, align 4
  %129 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %130 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %129, i32 0, i32 62
  %131 = load i32, i32* %130, align 8
  %132 = icmp slt i32 %128, %131
  br i1 %132, label %133, label %242

133:                                              ; preds = %127
  %134 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %135 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %134, i32 0, i32 63
  %136 = load i32, i32* %3, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [4 x %struct.jpeg_component_info*], [4 x %struct.jpeg_component_info*]* %135, i64 0, i64 %137
  %139 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %138, align 8
  store %struct.jpeg_component_info* %139, %struct.jpeg_component_info** %6, align 8
  %140 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %141 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %140, i32 0, i32 2
  %142 = load i32, i32* %141, align 8
  %143 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %144 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %143, i32 0, i32 13
  store i32 %142, i32* %144, align 4
  %145 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %146 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %145, i32 0, i32 3
  %147 = load i32, i32* %146, align 4
  %148 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %149 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %148, i32 0, i32 14
  store i32 %147, i32* %149, align 8
  %150 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %151 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %150, i32 0, i32 13
  %152 = load i32, i32* %151, align 4
  %153 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %154 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %153, i32 0, i32 14
  %155 = load i32, i32* %154, align 8
  %156 = mul nsw i32 %152, %155
  %157 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %158 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %157, i32 0, i32 15
  store i32 %156, i32* %158, align 4
  %159 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %160 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %159, i32 0, i32 13
  %161 = load i32, i32* %160, align 4
  %162 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %163 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %162, i32 0, i32 9
  %164 = load i32, i32* %163, align 4
  %165 = mul nsw i32 %161, %164
  %166 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %167 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %166, i32 0, i32 16
  store i32 %165, i32* %167, align 8
  %168 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %169 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %168, i32 0, i32 7
  %170 = load i32, i32* %169, align 4
  %171 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %172 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %171, i32 0, i32 13
  %173 = load i32, i32* %172, align 4
  %174 = urem i32 %170, %173
  store i32 %174, i32* %5, align 4
  %175 = load i32, i32* %5, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %181

177:                                              ; preds = %133
  %178 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %179 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %178, i32 0, i32 13
  %180 = load i32, i32* %179, align 4
  store i32 %180, i32* %5, align 4
  br label %181

181:                                              ; preds = %177, %133
  %182 = load i32, i32* %5, align 4
  %183 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %184 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %183, i32 0, i32 17
  store i32 %182, i32* %184, align 4
  %185 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %186 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %185, i32 0, i32 8
  %187 = load i32, i32* %186, align 8
  %188 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %189 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %188, i32 0, i32 14
  %190 = load i32, i32* %189, align 8
  %191 = urem i32 %187, %190
  store i32 %191, i32* %5, align 4
  %192 = load i32, i32* %5, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %198

194:                                              ; preds = %181
  %195 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %196 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %195, i32 0, i32 14
  %197 = load i32, i32* %196, align 8
  store i32 %197, i32* %5, align 4
  br label %198

198:                                              ; preds = %194, %181
  %199 = load i32, i32* %5, align 4
  %200 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %201 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %200, i32 0, i32 18
  store i32 %199, i32* %201, align 8
  %202 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %6, align 8
  %203 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %202, i32 0, i32 15
  %204 = load i32, i32* %203, align 4
  store i32 %204, i32* %4, align 4
  %205 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %206 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %205, i32 0, i32 66
  %207 = load i32, i32* %206, align 8
  %208 = load i32, i32* %4, align 4
  %209 = add nsw i32 %207, %208
  %210 = icmp sgt i32 %209, 10
  br i1 %210, label %211, label %223

211:                                              ; preds = %198
  %212 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %213 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %212, i32 0, i32 0
  %214 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %213, align 8
  %215 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %214, i32 0, i32 5
  store i32 11, i32* %215, align 8
  %216 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %217 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %216, i32 0, i32 0
  %218 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %217, align 8
  %219 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %218, i32 0, i32 0
  %220 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %219, align 8
  %221 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %222 = bitcast %struct.jpeg_decompress_struct.494* %221 to %struct.jpeg_common_struct*
  call void %220(%struct.jpeg_common_struct* %222)
  br label %223

223:                                              ; preds = %211, %198
  br label %224

224:                                              ; preds = %228, %223
  %225 = load i32, i32* %4, align 4
  %226 = add nsw i32 %225, -1
  store i32 %226, i32* %4, align 4
  %227 = icmp sgt i32 %225, 0
  br i1 %227, label %228, label %238

228:                                              ; preds = %224
  %229 = load i32, i32* %3, align 4
  %230 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %231 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %230, i32 0, i32 67
  %232 = load %struct.jpeg_decompress_struct.494*, %struct.jpeg_decompress_struct.494** %2, align 8
  %233 = getelementptr inbounds %struct.jpeg_decompress_struct.494, %struct.jpeg_decompress_struct.494* %232, i32 0, i32 66
  %234 = load i32, i32* %233, align 8
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %233, align 8
  %236 = sext i32 %234 to i64
  %237 = getelementptr inbounds [10 x i32], [10 x i32]* %231, i64 0, i64 %236
  store i32 %229, i32* %237, align 4
  br label %224, !llvm.loop !10

238:                                              ; preds = %224
  br label %239

239:                                              ; preds = %238
  %240 = load i32, i32* %3, align 4
  %241 = add nsw i32 %240, 1
  store i32 %241, i32* %3, align 4
  br label %127, !llvm.loop !11

242:                                              ; preds = %127
  br label %243

243:                                              ; preds = %242, %52
  ret void
}

attributes #0 = { noinline nounwind optnone ssp uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6}

!0 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project/ 24c8eaec9467b2aaf70b0db33a4e4dd415139a50)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{i32 1, !"ThinLTO", i32 0}
!6 = !{i32 1, !"EnableSplitLTOUnit", i32 1}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.mustprogress"}
!9 = distinct !{!9, !8}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !8}
