; AUTOMATICALLY GENERATED BY tools/llvm-nextfm-remark/compare-mergesize.rb
;
; RUN: %opt -S --passes="multiple-func-merging" --multiple-func-merging-only=get_app0 --multiple-func-merging-only=get_app14 -o %t.mfm.ll %s
; RUN: %opt -S --passes="func-merging" --func-merging-only=get_app0 --func-merging-only=get_app14 -o %t.fm.ll %s
; RUN: %llc --filetype=obj %t.mfm.ll -o %t.mfm.o
; RUN: %llc --filetype=obj %t.fm.ll -o %t.fm.o
; RUN: %strip %t.mfm.o
; RUN: %strip %t.fm.o
; RUN: [[ $(stat -c%%s %t.mfm.o) -le $(stat -c%%s %t.fm.o) ]]
; XFAIL: *

; ModuleID = '../benchmarks/mibench/consumer/jpeg/cjpeg.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_decompress_struct.541 = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32, %struct.jpeg_source_mgr.526*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i16, i16, i32, i8, i32, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master.530*, %struct.jpeg_d_main_controller.531*, %struct.jpeg_d_coef_controller.532*, %struct.jpeg_d_post_controller.533*, %struct.jpeg_input_controller.534*, %struct.jpeg_marker_reader.535*, %struct.jpeg_entropy_decoder.536*, %struct.jpeg_inverse_dct.537*, %struct.jpeg_upsampler.538*, %struct.jpeg_color_deconverter.539*, %struct.jpeg_color_quantizer.540* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64 }
%struct.jvirt_sarray_control = type { i8**, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.jvirt_sarray_control*, %struct.backing_store_struct }
%struct.backing_store_struct = type { void (%struct.jpeg_common_struct.775*, %struct.backing_store_struct*, i8*, i64, i64)*, void (%struct.jpeg_common_struct.775*, %struct.backing_store_struct*, i8*, i64, i64)*, void (%struct.jpeg_common_struct.775*, %struct.backing_store_struct*)*, %struct._IO_FILE*, [64 x i8] }
%struct.jpeg_common_struct.775 = type { %struct.jpeg_error_mgr.766*, %struct.jpeg_memory_mgr.773*, %struct.jpeg_progress_mgr*, i32, i32 }
%struct.jpeg_error_mgr.766 = type { {}*, void (%struct.jpeg_common_struct.775*, i32)*, {}*, void (%struct.jpeg_common_struct.775*, i8*)*, {}*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_memory_mgr.773 = type { i8* (%struct.jpeg_common_struct.775*, i32, i64)*, i8* (%struct.jpeg_common_struct.775*, i32, i64)*, i8** (%struct.jpeg_common_struct.775*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct.775*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct.775*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct.775*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct.775*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct.775*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct.775*, i32)*, {}*, i64 }
%struct.jvirt_barray_control = type { [64 x i16]**, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.jvirt_barray_control*, %struct.backing_store_struct }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_source_mgr.526 = type { i8*, i64, void (%struct.jpeg_decompress_struct.541*)*, i32 (%struct.jpeg_decompress_struct.541*)*, void (%struct.jpeg_decompress_struct.541*, i64)*, {}*, void (%struct.jpeg_decompress_struct.541*)* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.jpeg_decomp_master.530 = type { void (%struct.jpeg_decompress_struct.541*)*, void (%struct.jpeg_decompress_struct.541*)*, i32 }
%struct.jpeg_d_main_controller.531 = type { void (%struct.jpeg_decompress_struct.541*, i32)*, void (%struct.jpeg_decompress_struct.541*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller.532 = type { void (%struct.jpeg_decompress_struct.541*)*, i32 (%struct.jpeg_decompress_struct.541*)*, void (%struct.jpeg_decompress_struct.541*)*, i32 (%struct.jpeg_decompress_struct.541*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller.533 = type { void (%struct.jpeg_decompress_struct.541*, i32)*, void (%struct.jpeg_decompress_struct.541*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller.534 = type { i32 (%struct.jpeg_decompress_struct.541*)*, void (%struct.jpeg_decompress_struct.541*)*, void (%struct.jpeg_decompress_struct.541*)*, void (%struct.jpeg_decompress_struct.541*)*, i32, i32 }
%struct.jpeg_marker_reader.535 = type { void (%struct.jpeg_decompress_struct.541*)*, i32 (%struct.jpeg_decompress_struct.541*)*, i32 (%struct.jpeg_decompress_struct.541*)*, i32 (%struct.jpeg_decompress_struct.541*)*, [16 x i32 (%struct.jpeg_decompress_struct.541*)*], i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder.536 = type { void (%struct.jpeg_decompress_struct.541*)*, i32 (%struct.jpeg_decompress_struct.541*, [64 x i16]**)* }
%struct.jpeg_inverse_dct.537 = type { void (%struct.jpeg_decompress_struct.541*)*, [10 x void (%struct.jpeg_decompress_struct.541*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler.538 = type { void (%struct.jpeg_decompress_struct.541*)*, void (%struct.jpeg_decompress_struct.541*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter.539 = type { void (%struct.jpeg_decompress_struct.541*)*, void (%struct.jpeg_decompress_struct.541*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer.540 = type { void (%struct.jpeg_decompress_struct.541*, i32)*, void (%struct.jpeg_decompress_struct.541*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct.541*)*, void (%struct.jpeg_decompress_struct.541*)* }

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @get_app0(%struct.jpeg_decompress_struct.541* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.541*, align 8
  %4 = alloca i64, align 8
  %5 = alloca [14 x i8], align 1
  %6 = alloca i32, align 4
  %7 = alloca %struct.jpeg_source_mgr.526*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32*, align 8
  store %struct.jpeg_decompress_struct.541* %0, %struct.jpeg_decompress_struct.541** %3, align 8
  %11 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %11, i32 0, i32 5
  %13 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %12, align 8
  store %struct.jpeg_source_mgr.526* %13, %struct.jpeg_source_mgr.526** %7, align 8
  %14 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %7, align 8
  %15 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %14, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  store i8* %16, i8** %8, align 8
  %17 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %7, align 8
  %18 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %17, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %9, align 8
  br label %20

20:                                               ; preds = %1
  %21 = load i64, i64* %9, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %38

23:                                               ; preds = %20
  %24 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %7, align 8
  %25 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %24, i32 0, i32 3
  %26 = load i32 (%struct.jpeg_decompress_struct.541*)*, i32 (%struct.jpeg_decompress_struct.541*)** %25, align 8
  %27 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %28 = call i32 %26(%struct.jpeg_decompress_struct.541* %27)
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %23
  store i32 0, i32* %2, align 4
  br label %408

31:                                               ; preds = %23
  %32 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %7, align 8
  %33 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %32, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  store i8* %34, i8** %8, align 8
  %35 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %7, align 8
  %36 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %35, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %9, align 8
  br label %38

38:                                               ; preds = %31, %20
  %39 = load i64, i64* %9, align 8
  %40 = add i64 %39, -1
  store i64 %40, i64* %9, align 8
  %41 = load i8*, i8** %8, align 8
  %42 = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %42, i8** %8, align 8
  %43 = load i8, i8* %41, align 1
  %44 = zext i8 %43 to i32
  %45 = shl i32 %44, 8
  %46 = zext i32 %45 to i64
  store i64 %46, i64* %4, align 8
  %47 = load i64, i64* %9, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %64

49:                                               ; preds = %38
  %50 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %7, align 8
  %51 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %50, i32 0, i32 3
  %52 = load i32 (%struct.jpeg_decompress_struct.541*)*, i32 (%struct.jpeg_decompress_struct.541*)** %51, align 8
  %53 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %54 = call i32 %52(%struct.jpeg_decompress_struct.541* %53)
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %49
  store i32 0, i32* %2, align 4
  br label %408

57:                                               ; preds = %49
  %58 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %7, align 8
  %59 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %58, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  store i8* %60, i8** %8, align 8
  %61 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %7, align 8
  %62 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %61, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %9, align 8
  br label %64

64:                                               ; preds = %57, %38
  %65 = load i64, i64* %9, align 8
  %66 = add i64 %65, -1
  store i64 %66, i64* %9, align 8
  %67 = load i8*, i8** %8, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %68, i8** %8, align 8
  %69 = load i8, i8* %67, align 1
  %70 = zext i8 %69 to i64
  %71 = load i64, i64* %4, align 8
  %72 = add nsw i64 %71, %70
  store i64 %72, i64* %4, align 8
  br label %73

73:                                               ; preds = %64
  %74 = load i64, i64* %4, align 8
  %75 = sub nsw i64 %74, 2
  store i64 %75, i64* %4, align 8
  %76 = load i64, i64* %4, align 8
  %77 = icmp sge i64 %76, 14
  br i1 %77, label %78, label %370

78:                                               ; preds = %73
  store i32 0, i32* %6, align 4
  br label %79

79:                                               ; preds = %111, %78
  %80 = load i32, i32* %6, align 4
  %81 = icmp slt i32 %80, 14
  br i1 %81, label %82, label %114

82:                                               ; preds = %79
  br label %83

83:                                               ; preds = %82
  %84 = load i64, i64* %9, align 8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %101

86:                                               ; preds = %83
  %87 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %7, align 8
  %88 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %87, i32 0, i32 3
  %89 = load i32 (%struct.jpeg_decompress_struct.541*)*, i32 (%struct.jpeg_decompress_struct.541*)** %88, align 8
  %90 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %91 = call i32 %89(%struct.jpeg_decompress_struct.541* %90)
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %86
  store i32 0, i32* %2, align 4
  br label %408

94:                                               ; preds = %86
  %95 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %7, align 8
  %96 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %95, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  store i8* %97, i8** %8, align 8
  %98 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %7, align 8
  %99 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %98, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %9, align 8
  br label %101

101:                                              ; preds = %94, %83
  %102 = load i64, i64* %9, align 8
  %103 = add i64 %102, -1
  store i64 %103, i64* %9, align 8
  %104 = load i8*, i8** %8, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %8, align 8
  %106 = load i8, i8* %104, align 1
  %107 = load i32, i32* %6, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 %108
  store i8 %106, i8* %109, align 1
  br label %110

110:                                              ; preds = %101
  br label %111

111:                                              ; preds = %110
  %112 = load i32, i32* %6, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %6, align 4
  br label %79, !llvm.loop !7

114:                                              ; preds = %79
  %115 = load i64, i64* %4, align 8
  %116 = sub nsw i64 %115, 14
  store i64 %116, i64* %4, align 8
  %117 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 0
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = icmp eq i32 %119, 74
  br i1 %120, label %121, label %348

121:                                              ; preds = %114
  %122 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 1
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = icmp eq i32 %124, 70
  br i1 %125, label %126, label %348

126:                                              ; preds = %121
  %127 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 2
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = icmp eq i32 %129, 73
  br i1 %130, label %131, label %348

131:                                              ; preds = %126
  %132 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 3
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = icmp eq i32 %134, 70
  br i1 %135, label %136, label %348

136:                                              ; preds = %131
  %137 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 4
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %348

141:                                              ; preds = %136
  %142 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 5
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = icmp ne i32 %144, 1
  br i1 %145, label %146, label %176

146:                                              ; preds = %141
  %147 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %148 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %147, i32 0, i32 0
  %149 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %148, align 8
  %150 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %149, i32 0, i32 5
  store i32 115, i32* %150, align 8
  %151 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 5
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %155 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %154, i32 0, i32 0
  %156 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %155, align 8
  %157 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %156, i32 0, i32 6
  %158 = bitcast %union.anon* %157 to [8 x i32]*
  %159 = getelementptr inbounds [8 x i32], [8 x i32]* %158, i64 0, i64 0
  store i32 %153, i32* %159, align 4
  %160 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 6
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %164 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %163, i32 0, i32 0
  %165 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %164, align 8
  %166 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %165, i32 0, i32 6
  %167 = bitcast %union.anon* %166 to [8 x i32]*
  %168 = getelementptr inbounds [8 x i32], [8 x i32]* %167, i64 0, i64 1
  store i32 %162, i32* %168, align 4
  %169 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %170 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %169, i32 0, i32 0
  %171 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %170, align 8
  %172 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %171, i32 0, i32 1
  %173 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %172, align 8
  %174 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %175 = bitcast %struct.jpeg_decompress_struct.541* %174 to %struct.jpeg_common_struct*
  call void %173(%struct.jpeg_common_struct* %175, i32 -1)
  br label %212

176:                                              ; preds = %141
  %177 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 6
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = icmp sgt i32 %179, 2
  br i1 %180, label %181, label %211

181:                                              ; preds = %176
  %182 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %183 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %182, i32 0, i32 0
  %184 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %183, align 8
  %185 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %184, i32 0, i32 5
  store i32 88, i32* %185, align 8
  %186 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 5
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %190 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %189, i32 0, i32 0
  %191 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %190, align 8
  %192 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %191, i32 0, i32 6
  %193 = bitcast %union.anon* %192 to [8 x i32]*
  %194 = getelementptr inbounds [8 x i32], [8 x i32]* %193, i64 0, i64 0
  store i32 %188, i32* %194, align 4
  %195 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 6
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %199 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %198, i32 0, i32 0
  %200 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %199, align 8
  %201 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %200, i32 0, i32 6
  %202 = bitcast %union.anon* %201 to [8 x i32]*
  %203 = getelementptr inbounds [8 x i32], [8 x i32]* %202, i64 0, i64 1
  store i32 %197, i32* %203, align 4
  %204 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %205 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %204, i32 0, i32 0
  %206 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %205, align 8
  %207 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %206, i32 0, i32 1
  %208 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %207, align 8
  %209 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %210 = bitcast %struct.jpeg_decompress_struct.541* %209 to %struct.jpeg_common_struct*
  call void %208(%struct.jpeg_common_struct* %210, i32 1)
  br label %211

211:                                              ; preds = %181, %176
  br label %212

212:                                              ; preds = %211, %146
  %213 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %214 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %213, i32 0, i32 50
  store i32 1, i32* %214, align 4
  %215 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 7
  %216 = load i8, i8* %215, align 1
  %217 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %218 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %217, i32 0, i32 51
  store i8 %216, i8* %218, align 8
  %219 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 8
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = shl i32 %221, 8
  %223 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 9
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = add nsw i32 %222, %225
  %227 = trunc i32 %226 to i16
  %228 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %229 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %228, i32 0, i32 52
  store i16 %227, i16* %229, align 2
  %230 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 10
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i32
  %233 = shl i32 %232, 8
  %234 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 11
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i32
  %237 = add nsw i32 %233, %236
  %238 = trunc i32 %237 to i16
  %239 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %240 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %239, i32 0, i32 53
  store i16 %238, i16* %240, align 4
  br label %241

241:                                              ; preds = %212
  %242 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %243 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %242, i32 0, i32 0
  %244 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %243, align 8
  %245 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %244, i32 0, i32 6
  %246 = bitcast %union.anon* %245 to [8 x i32]*
  %247 = getelementptr inbounds [8 x i32], [8 x i32]* %246, i64 0, i64 0
  store i32* %247, i32** %10, align 8
  %248 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %249 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %248, i32 0, i32 52
  %250 = load i16, i16* %249, align 2
  %251 = zext i16 %250 to i32
  %252 = load i32*, i32** %10, align 8
  %253 = getelementptr inbounds i32, i32* %252, i64 0
  store i32 %251, i32* %253, align 4
  %254 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %255 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %254, i32 0, i32 53
  %256 = load i16, i16* %255, align 4
  %257 = zext i16 %256 to i32
  %258 = load i32*, i32** %10, align 8
  %259 = getelementptr inbounds i32, i32* %258, i64 1
  store i32 %257, i32* %259, align 4
  %260 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %261 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %260, i32 0, i32 51
  %262 = load i8, i8* %261, align 8
  %263 = zext i8 %262 to i32
  %264 = load i32*, i32** %10, align 8
  %265 = getelementptr inbounds i32, i32* %264, i64 2
  store i32 %263, i32* %265, align 4
  %266 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %267 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %266, i32 0, i32 0
  %268 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %267, align 8
  %269 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %268, i32 0, i32 5
  store i32 86, i32* %269, align 8
  %270 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %271 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %270, i32 0, i32 0
  %272 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %271, align 8
  %273 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %272, i32 0, i32 1
  %274 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %273, align 8
  %275 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %276 = bitcast %struct.jpeg_decompress_struct.541* %275 to %struct.jpeg_common_struct*
  call void %274(%struct.jpeg_common_struct* %276, i32 1)
  br label %277

277:                                              ; preds = %241
  %278 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 12
  %279 = load i8, i8* %278, align 1
  %280 = zext i8 %279 to i32
  %281 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 13
  %282 = load i8, i8* %281, align 1
  %283 = zext i8 %282 to i32
  %284 = or i32 %280, %283
  %285 = icmp ne i32 %284, 0
  br i1 %285, label %286, label %316

286:                                              ; preds = %277
  %287 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %288 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %287, i32 0, i32 0
  %289 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %288, align 8
  %290 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %289, i32 0, i32 5
  store i32 89, i32* %290, align 8
  %291 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 12
  %292 = load i8, i8* %291, align 1
  %293 = zext i8 %292 to i32
  %294 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %295 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %294, i32 0, i32 0
  %296 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %295, align 8
  %297 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %296, i32 0, i32 6
  %298 = bitcast %union.anon* %297 to [8 x i32]*
  %299 = getelementptr inbounds [8 x i32], [8 x i32]* %298, i64 0, i64 0
  store i32 %293, i32* %299, align 4
  %300 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 13
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i32
  %303 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %304 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %303, i32 0, i32 0
  %305 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %304, align 8
  %306 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %305, i32 0, i32 6
  %307 = bitcast %union.anon* %306 to [8 x i32]*
  %308 = getelementptr inbounds [8 x i32], [8 x i32]* %307, i64 0, i64 1
  store i32 %302, i32* %308, align 4
  %309 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %310 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %309, i32 0, i32 0
  %311 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %310, align 8
  %312 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %311, i32 0, i32 1
  %313 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %312, align 8
  %314 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %315 = bitcast %struct.jpeg_decompress_struct.541* %314 to %struct.jpeg_common_struct*
  call void %313(%struct.jpeg_common_struct* %315, i32 1)
  br label %316

316:                                              ; preds = %286, %277
  %317 = load i64, i64* %4, align 8
  %318 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 12
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %319 to i64
  %321 = getelementptr inbounds [14 x i8], [14 x i8]* %5, i64 0, i64 13
  %322 = load i8, i8* %321, align 1
  %323 = zext i8 %322 to i64
  %324 = mul nsw i64 %320, %323
  %325 = mul nsw i64 %324, 3
  %326 = icmp ne i64 %317, %325
  br i1 %326, label %327, label %347

327:                                              ; preds = %316
  %328 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %329 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %328, i32 0, i32 0
  %330 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %329, align 8
  %331 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %330, i32 0, i32 5
  store i32 87, i32* %331, align 8
  %332 = load i64, i64* %4, align 8
  %333 = trunc i64 %332 to i32
  %334 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %335 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %334, i32 0, i32 0
  %336 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %335, align 8
  %337 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %336, i32 0, i32 6
  %338 = bitcast %union.anon* %337 to [8 x i32]*
  %339 = getelementptr inbounds [8 x i32], [8 x i32]* %338, i64 0, i64 0
  store i32 %333, i32* %339, align 4
  %340 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %341 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %340, i32 0, i32 0
  %342 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %341, align 8
  %343 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %342, i32 0, i32 1
  %344 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %343, align 8
  %345 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %346 = bitcast %struct.jpeg_decompress_struct.541* %345 to %struct.jpeg_common_struct*
  call void %344(%struct.jpeg_common_struct* %346, i32 1)
  br label %347

347:                                              ; preds = %327, %316
  br label %369

348:                                              ; preds = %136, %131, %126, %121, %114
  %349 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %350 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %349, i32 0, i32 0
  %351 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %350, align 8
  %352 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %351, i32 0, i32 5
  store i32 76, i32* %352, align 8
  %353 = load i64, i64* %4, align 8
  %354 = trunc i64 %353 to i32
  %355 = add nsw i32 %354, 14
  %356 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %357 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %356, i32 0, i32 0
  %358 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %357, align 8
  %359 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %358, i32 0, i32 6
  %360 = bitcast %union.anon* %359 to [8 x i32]*
  %361 = getelementptr inbounds [8 x i32], [8 x i32]* %360, i64 0, i64 0
  store i32 %355, i32* %361, align 4
  %362 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %363 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %362, i32 0, i32 0
  %364 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %363, align 8
  %365 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %364, i32 0, i32 1
  %366 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %365, align 8
  %367 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %368 = bitcast %struct.jpeg_decompress_struct.541* %367 to %struct.jpeg_common_struct*
  call void %366(%struct.jpeg_common_struct* %368, i32 1)
  br label %369

369:                                              ; preds = %348, %347
  br label %390

370:                                              ; preds = %73
  %371 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %372 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %371, i32 0, i32 0
  %373 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %372, align 8
  %374 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %373, i32 0, i32 5
  store i32 76, i32* %374, align 8
  %375 = load i64, i64* %4, align 8
  %376 = trunc i64 %375 to i32
  %377 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %378 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %377, i32 0, i32 0
  %379 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %378, align 8
  %380 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %379, i32 0, i32 6
  %381 = bitcast %union.anon* %380 to [8 x i32]*
  %382 = getelementptr inbounds [8 x i32], [8 x i32]* %381, i64 0, i64 0
  store i32 %376, i32* %382, align 4
  %383 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %384 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %383, i32 0, i32 0
  %385 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %384, align 8
  %386 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %385, i32 0, i32 1
  %387 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %386, align 8
  %388 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %389 = bitcast %struct.jpeg_decompress_struct.541* %388 to %struct.jpeg_common_struct*
  call void %387(%struct.jpeg_common_struct* %389, i32 1)
  br label %390

390:                                              ; preds = %370, %369
  %391 = load i8*, i8** %8, align 8
  %392 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %7, align 8
  %393 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %392, i32 0, i32 0
  store i8* %391, i8** %393, align 8
  %394 = load i64, i64* %9, align 8
  %395 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %7, align 8
  %396 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %395, i32 0, i32 1
  store i64 %394, i64* %396, align 8
  %397 = load i64, i64* %4, align 8
  %398 = icmp sgt i64 %397, 0
  br i1 %398, label %399, label %407

399:                                              ; preds = %390
  %400 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %401 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %400, i32 0, i32 5
  %402 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %401, align 8
  %403 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %402, i32 0, i32 4
  %404 = load void (%struct.jpeg_decompress_struct.541*, i64)*, void (%struct.jpeg_decompress_struct.541*, i64)** %403, align 8
  %405 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %406 = load i64, i64* %4, align 8
  call void %404(%struct.jpeg_decompress_struct.541* %405, i64 %406)
  br label %407

407:                                              ; preds = %399, %390
  store i32 1, i32* %2, align 4
  br label %408

408:                                              ; preds = %407, %93, %56, %30
  %409 = load i32, i32* %2, align 4
  ret i32 %409
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define hidden i32 @get_app14(%struct.jpeg_decompress_struct.541* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.jpeg_decompress_struct.541*, align 8
  %4 = alloca i64, align 8
  %5 = alloca [12 x i8], align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.jpeg_source_mgr.526*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  store %struct.jpeg_decompress_struct.541* %0, %struct.jpeg_decompress_struct.541** %3, align 8
  %15 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %15, i32 0, i32 5
  %17 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %16, align 8
  store %struct.jpeg_source_mgr.526* %17, %struct.jpeg_source_mgr.526** %11, align 8
  %18 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %11, align 8
  %19 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %18, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  store i8* %20, i8** %12, align 8
  %21 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %11, align 8
  %22 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %21, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %13, align 8
  br label %24

24:                                               ; preds = %1
  %25 = load i64, i64* %13, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %42

27:                                               ; preds = %24
  %28 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %11, align 8
  %29 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %28, i32 0, i32 3
  %30 = load i32 (%struct.jpeg_decompress_struct.541*)*, i32 (%struct.jpeg_decompress_struct.541*)** %29, align 8
  %31 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %32 = call i32 %30(%struct.jpeg_decompress_struct.541* %31)
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %27
  store i32 0, i32* %2, align 4
  br label %270

35:                                               ; preds = %27
  %36 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %11, align 8
  %37 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %36, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  store i8* %38, i8** %12, align 8
  %39 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %11, align 8
  %40 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %39, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %13, align 8
  br label %42

42:                                               ; preds = %35, %24
  %43 = load i64, i64* %13, align 8
  %44 = add i64 %43, -1
  store i64 %44, i64* %13, align 8
  %45 = load i8*, i8** %12, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %12, align 8
  %47 = load i8, i8* %45, align 1
  %48 = zext i8 %47 to i32
  %49 = shl i32 %48, 8
  %50 = zext i32 %49 to i64
  store i64 %50, i64* %4, align 8
  %51 = load i64, i64* %13, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %68

53:                                               ; preds = %42
  %54 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %11, align 8
  %55 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %54, i32 0, i32 3
  %56 = load i32 (%struct.jpeg_decompress_struct.541*)*, i32 (%struct.jpeg_decompress_struct.541*)** %55, align 8
  %57 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %58 = call i32 %56(%struct.jpeg_decompress_struct.541* %57)
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %53
  store i32 0, i32* %2, align 4
  br label %270

61:                                               ; preds = %53
  %62 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %11, align 8
  %63 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %62, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  store i8* %64, i8** %12, align 8
  %65 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %11, align 8
  %66 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %65, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %13, align 8
  br label %68

68:                                               ; preds = %61, %42
  %69 = load i64, i64* %13, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %13, align 8
  %71 = load i8*, i8** %12, align 8
  %72 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %72, i8** %12, align 8
  %73 = load i8, i8* %71, align 1
  %74 = zext i8 %73 to i64
  %75 = load i64, i64* %4, align 8
  %76 = add nsw i64 %75, %74
  store i64 %76, i64* %4, align 8
  br label %77

77:                                               ; preds = %68
  %78 = load i64, i64* %4, align 8
  %79 = sub nsw i64 %78, 2
  store i64 %79, i64* %4, align 8
  %80 = load i64, i64* %4, align 8
  %81 = icmp sge i64 %80, 12
  br i1 %81, label %82, label %232

82:                                               ; preds = %77
  store i32 0, i32* %6, align 4
  br label %83

83:                                               ; preds = %115, %82
  %84 = load i32, i32* %6, align 4
  %85 = icmp slt i32 %84, 12
  br i1 %85, label %86, label %118

86:                                               ; preds = %83
  br label %87

87:                                               ; preds = %86
  %88 = load i64, i64* %13, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %105

90:                                               ; preds = %87
  %91 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %11, align 8
  %92 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %91, i32 0, i32 3
  %93 = load i32 (%struct.jpeg_decompress_struct.541*)*, i32 (%struct.jpeg_decompress_struct.541*)** %92, align 8
  %94 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %95 = call i32 %93(%struct.jpeg_decompress_struct.541* %94)
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %98, label %97

97:                                               ; preds = %90
  store i32 0, i32* %2, align 4
  br label %270

98:                                               ; preds = %90
  %99 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %11, align 8
  %100 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %99, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  store i8* %101, i8** %12, align 8
  %102 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %11, align 8
  %103 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %102, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %13, align 8
  br label %105

105:                                              ; preds = %98, %87
  %106 = load i64, i64* %13, align 8
  %107 = add i64 %106, -1
  store i64 %107, i64* %13, align 8
  %108 = load i8*, i8** %12, align 8
  %109 = getelementptr inbounds i8, i8* %108, i32 1
  store i8* %109, i8** %12, align 8
  %110 = load i8, i8* %108, align 1
  %111 = load i32, i32* %6, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 %112
  store i8 %110, i8* %113, align 1
  br label %114

114:                                              ; preds = %105
  br label %115

115:                                              ; preds = %114
  %116 = load i32, i32* %6, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %6, align 4
  br label %83, !llvm.loop !9

118:                                              ; preds = %83
  %119 = load i64, i64* %4, align 8
  %120 = sub nsw i64 %119, 12
  store i64 %120, i64* %4, align 8
  %121 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 0
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = icmp eq i32 %123, 65
  br i1 %124, label %125, label %210

125:                                              ; preds = %118
  %126 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 1
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = icmp eq i32 %128, 100
  br i1 %129, label %130, label %210

130:                                              ; preds = %125
  %131 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 2
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = icmp eq i32 %133, 111
  br i1 %134, label %135, label %210

135:                                              ; preds = %130
  %136 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 3
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = icmp eq i32 %138, 98
  br i1 %139, label %140, label %210

140:                                              ; preds = %135
  %141 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 4
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = icmp eq i32 %143, 101
  br i1 %144, label %145, label %210

145:                                              ; preds = %140
  %146 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 5
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i32
  %149 = shl i32 %148, 8
  %150 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  %153 = add nsw i32 %149, %152
  store i32 %153, i32* %7, align 4
  %154 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 7
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = shl i32 %156, 8
  %158 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 8
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = add nsw i32 %157, %160
  store i32 %161, i32* %8, align 4
  %162 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 9
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = shl i32 %164, 8
  %166 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 10
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i32
  %169 = add nsw i32 %165, %168
  store i32 %169, i32* %9, align 4
  %170 = getelementptr inbounds [12 x i8], [12 x i8]* %5, i64 0, i64 11
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  store i32 %172, i32* %10, align 4
  br label %173

173:                                              ; preds = %145
  %174 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %175 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %174, i32 0, i32 0
  %176 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %175, align 8
  %177 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %176, i32 0, i32 6
  %178 = bitcast %union.anon* %177 to [8 x i32]*
  %179 = getelementptr inbounds [8 x i32], [8 x i32]* %178, i64 0, i64 0
  store i32* %179, i32** %14, align 8
  %180 = load i32, i32* %7, align 4
  %181 = load i32*, i32** %14, align 8
  %182 = getelementptr inbounds i32, i32* %181, i64 0
  store i32 %180, i32* %182, align 4
  %183 = load i32, i32* %8, align 4
  %184 = load i32*, i32** %14, align 8
  %185 = getelementptr inbounds i32, i32* %184, i64 1
  store i32 %183, i32* %185, align 4
  %186 = load i32, i32* %9, align 4
  %187 = load i32*, i32** %14, align 8
  %188 = getelementptr inbounds i32, i32* %187, i64 2
  store i32 %186, i32* %188, align 4
  %189 = load i32, i32* %10, align 4
  %190 = load i32*, i32** %14, align 8
  %191 = getelementptr inbounds i32, i32* %190, i64 3
  store i32 %189, i32* %191, align 4
  %192 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %193 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %192, i32 0, i32 0
  %194 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %193, align 8
  %195 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %194, i32 0, i32 5
  store i32 75, i32* %195, align 8
  %196 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %197 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %196, i32 0, i32 0
  %198 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %197, align 8
  %199 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %198, i32 0, i32 1
  %200 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %199, align 8
  %201 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %202 = bitcast %struct.jpeg_decompress_struct.541* %201 to %struct.jpeg_common_struct*
  call void %200(%struct.jpeg_common_struct* %202, i32 1)
  br label %203

203:                                              ; preds = %173
  %204 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %205 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %204, i32 0, i32 54
  store i32 1, i32* %205, align 8
  %206 = load i32, i32* %10, align 4
  %207 = trunc i32 %206 to i8
  %208 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %209 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %208, i32 0, i32 55
  store i8 %207, i8* %209, align 4
  br label %231

210:                                              ; preds = %140, %135, %130, %125, %118
  %211 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %212 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %211, i32 0, i32 0
  %213 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %212, align 8
  %214 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %213, i32 0, i32 5
  store i32 77, i32* %214, align 8
  %215 = load i64, i64* %4, align 8
  %216 = trunc i64 %215 to i32
  %217 = add nsw i32 %216, 12
  %218 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %219 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %218, i32 0, i32 0
  %220 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %219, align 8
  %221 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %220, i32 0, i32 6
  %222 = bitcast %union.anon* %221 to [8 x i32]*
  %223 = getelementptr inbounds [8 x i32], [8 x i32]* %222, i64 0, i64 0
  store i32 %217, i32* %223, align 4
  %224 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %225 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %224, i32 0, i32 0
  %226 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %225, align 8
  %227 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %226, i32 0, i32 1
  %228 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %227, align 8
  %229 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %230 = bitcast %struct.jpeg_decompress_struct.541* %229 to %struct.jpeg_common_struct*
  call void %228(%struct.jpeg_common_struct* %230, i32 1)
  br label %231

231:                                              ; preds = %210, %203
  br label %252

232:                                              ; preds = %77
  %233 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %234 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %233, i32 0, i32 0
  %235 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %234, align 8
  %236 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %235, i32 0, i32 5
  store i32 77, i32* %236, align 8
  %237 = load i64, i64* %4, align 8
  %238 = trunc i64 %237 to i32
  %239 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %240 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %239, i32 0, i32 0
  %241 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %240, align 8
  %242 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %241, i32 0, i32 6
  %243 = bitcast %union.anon* %242 to [8 x i32]*
  %244 = getelementptr inbounds [8 x i32], [8 x i32]* %243, i64 0, i64 0
  store i32 %238, i32* %244, align 4
  %245 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %246 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %245, i32 0, i32 0
  %247 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %246, align 8
  %248 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %247, i32 0, i32 1
  %249 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %248, align 8
  %250 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %251 = bitcast %struct.jpeg_decompress_struct.541* %250 to %struct.jpeg_common_struct*
  call void %249(%struct.jpeg_common_struct* %251, i32 1)
  br label %252

252:                                              ; preds = %232, %231
  %253 = load i8*, i8** %12, align 8
  %254 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %11, align 8
  %255 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %254, i32 0, i32 0
  store i8* %253, i8** %255, align 8
  %256 = load i64, i64* %13, align 8
  %257 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %11, align 8
  %258 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %257, i32 0, i32 1
  store i64 %256, i64* %258, align 8
  %259 = load i64, i64* %4, align 8
  %260 = icmp sgt i64 %259, 0
  br i1 %260, label %261, label %269

261:                                              ; preds = %252
  %262 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %263 = getelementptr inbounds %struct.jpeg_decompress_struct.541, %struct.jpeg_decompress_struct.541* %262, i32 0, i32 5
  %264 = load %struct.jpeg_source_mgr.526*, %struct.jpeg_source_mgr.526** %263, align 8
  %265 = getelementptr inbounds %struct.jpeg_source_mgr.526, %struct.jpeg_source_mgr.526* %264, i32 0, i32 4
  %266 = load void (%struct.jpeg_decompress_struct.541*, i64)*, void (%struct.jpeg_decompress_struct.541*, i64)** %265, align 8
  %267 = load %struct.jpeg_decompress_struct.541*, %struct.jpeg_decompress_struct.541** %3, align 8
  %268 = load i64, i64* %4, align 8
  call void %266(%struct.jpeg_decompress_struct.541* %267, i64 %268)
  br label %269

269:                                              ; preds = %261, %252
  store i32 1, i32* %2, align 4
  br label %270

270:                                              ; preds = %269, %97, %60, %34
  %271 = load i32, i32* %2, align 4
  ret i32 %271
}

attributes #0 = { noinline nounwind optnone ssp uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6}

!0 = !{!"clang version 13.0.0 (https://github.com/llvm/llvm-project/ 24c8eaec9467b2aaf70b0db33a4e4dd415139a50)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 7, !"PIC Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{i32 1, !"ThinLTO", i32 0}
!6 = !{i32 1, !"EnableSplitLTOUnit", i32 1}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.mustprogress"}
!9 = distinct !{!9, !8}
